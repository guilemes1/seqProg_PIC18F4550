

Microchip Technology PIC18 LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Wed Nov 17 16:40:21 2021

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC18F4550 Definitions
    37                           ; 
    38  0000                     fsr0 equ 0FE9h
    39  0000                     fsr0h equ 0FEAh
    40  0000                     fsr0l equ 0FE9h
    41  0000                     fsr1 equ 0FE1h
    42  0000                     fsr1h equ 0FE2h
    43  0000                     fsr1l equ 0FE1h
    44  0000                     fsr2 equ 0FD9h
    45  0000                     fsr2h equ 0FDAh
    46  0000                     fsr2l equ 0FD9h
    47  0000                     indf0 equ 0FEFh
    48  0000                     indf1 equ 0FE7h
    49  0000                     indf2 equ 0FDFh
    50  0000                     intcon equ 0FF2h
    51  0000                     nvmcon equ 00h
    52  0000                     pcl equ 0FF9h
    53  0000                     pclath equ 0FFAh
    54  0000                     pclatu equ 0FFBh
    55  0000                     plusw0 equ 0FEBh
    56  0000                     plusw1 equ 0FE3h
    57  0000                     plusw2 equ 0FDBh
    58  0000                     postdec0 equ 0FEDh
    59  0000                     postdec1 equ 0FE5h
    60  0000                     postdec2 equ 0FDDh
    61  0000                     postinc0 equ 0FEEh
    62  0000                     postinc1 equ 0FE6h
    63  0000                     postinc2 equ 0FDEh
    64  0000                     preinc0 equ 0FECh
    65  0000                     preinc1 equ 0FE4h
    66  0000                     preinc2 equ 0FDCh
    67  0000                     prod equ 0FF3h
    68  0000                     prodh equ 0FF4h
    69  0000                     prodl equ 0FF3h
    70  0000                     status equ 0FD8h
    71  0000                     tablat equ 0FF5h
    72  0000                     tblptr equ 0FF6h
    73  0000                     tblptrh equ 0FF7h
    74  0000                     tblptrl equ 0FF6h
    75  0000                     tblptru equ 0FF8h
    76  0000                     tosl equ 0FFDh
    77  0000                     wreg equ 0FE8h
    78  0000                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc   macro
    64                           	bcf	status,0
    65                           endm
    66  0000                     setc   macro
    67                           	bsf	status,0
    68                           endm
    69  0000                     clrz   macro
    70                           	bcf	status,2
    71                           endm
    72  0000                     setz   macro
    73                           	bsf	status,2
    74                           endm
    75  0000                     skipnz macro
    76                           	btfsc	status,2
    77                           endm
    78  0000                     skipz  macro
    79                           	btfss	status,2
    80                           endm
    81  0000                     skipnc macro
    82                           	btfsc	status,0
    83                           endm
    84  0000                     skipc  macro
    85                           	btfss	status,0
    86                           endm
    87  0000                     pushw macro
    88                           	movwf postinc1
    89                           endm
    90  0000                     pushf macro arg1
    91                           	movff arg1, postinc1
    92                           endm
    93  0000                     popw macro
    94                           	movf postdec1,f
    95                           	movf indf1,w
    96                           endm
    97  0000                     popf macro arg1
    98                           	movf postdec1,f
    99                           	movff indf1,arg1
   100                           endm
   101  0000                     popfc macro arg1
   102                           	movff plusw1,arg1
   103                           	decfsz fsr1,f
   104                           endm
   105  0000                     	global	__ramtop
   106                           	global	__accesstop
   107                           # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   108                           SPPDATA equ 0F62h ;# 
   109  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   110                           SPPCFG equ 0F63h ;# 
   111  0000                     # 151 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   112                           SPPEPS equ 0F64h ;# 
   113  0000                     # 225 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   114                           SPPCON equ 0F65h ;# 
   115  0000                     # 251 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   116                           UFRM equ 0F66h ;# 
   117  0000                     # 258 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   118                           UFRML equ 0F66h ;# 
   119  0000                     # 336 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   120                           UFRMH equ 0F67h ;# 
   121  0000                     # 376 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   122                           UIR equ 0F68h ;# 
   123  0000                     # 432 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   124                           UIE equ 0F69h ;# 
   125  0000                     # 488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   126                           UEIR equ 0F6Ah ;# 
   127  0000                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   128                           UEIE equ 0F6Bh ;# 
   129  0000                     # 590 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   130                           USTAT equ 0F6Ch ;# 
   131  0000                     # 650 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   132                           UCON equ 0F6Dh ;# 
   133  0000                     # 701 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   134                           UADDR equ 0F6Eh ;# 
   135  0000                     # 765 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   136                           UCFG equ 0F6Fh ;# 
   137  0000                     # 844 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   138                           UEP0 equ 0F70h ;# 
   139  0000                     # 952 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   140                           UEP1 equ 0F71h ;# 
   141  0000                     # 1060 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   142                           UEP2 equ 0F72h ;# 
   143  0000                     # 1168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   144                           UEP3 equ 0F73h ;# 
   145  0000                     # 1276 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   146                           UEP4 equ 0F74h ;# 
   147  0000                     # 1384 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   148                           UEP5 equ 0F75h ;# 
   149  0000                     # 1492 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   150                           UEP6 equ 0F76h ;# 
   151  0000                     # 1600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   152                           UEP7 equ 0F77h ;# 
   153  0000                     # 1708 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   154                           UEP8 equ 0F78h ;# 
   155  0000                     # 1784 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   156                           UEP9 equ 0F79h ;# 
   157  0000                     # 1860 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   158                           UEP10 equ 0F7Ah ;# 
   159  0000                     # 1936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   160                           UEP11 equ 0F7Bh ;# 
   161  0000                     # 2012 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   162                           UEP12 equ 0F7Ch ;# 
   163  0000                     # 2088 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   164                           UEP13 equ 0F7Dh ;# 
   165  0000                     # 2164 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   166                           UEP14 equ 0F7Eh ;# 
   167  0000                     # 2240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   168                           UEP15 equ 0F7Fh ;# 
   169  0000                     # 2316 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   170                           PORTA equ 0F80h ;# 
   171  0000                     # 2455 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   172                           PORTB equ 0F81h ;# 
   173  0000                     # 2565 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   174                           PORTC equ 0F82h ;# 
   175  0000                     # 2707 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   176                           PORTD equ 0F83h ;# 
   177  0000                     # 2828 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   178                           PORTE equ 0F84h ;# 
   179  0000                     # 2975 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   180                           LATA equ 0F89h ;# 
   181  0000                     # 3075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   182                           LATB equ 0F8Ah ;# 
   183  0000                     # 3187 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   184                           LATC equ 0F8Bh ;# 
   185  0000                     # 3265 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   186                           LATD equ 0F8Ch ;# 
   187  0000                     # 3377 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   188                           LATE equ 0F8Dh ;# 
   189  0000                     # 3429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   190                           TRISA equ 0F92h ;# 
   191  0000                     # 3434 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   192                           DDRA equ 0F92h ;# 
   193  0000                     # 3627 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   194                           TRISB equ 0F93h ;# 
   195  0000                     # 3632 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   196                           DDRB equ 0F93h ;# 
   197  0000                     # 3849 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   198                           TRISC equ 0F94h ;# 
   199  0000                     # 3854 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   200                           DDRC equ 0F94h ;# 
   201  0000                     # 4003 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   202                           TRISD equ 0F95h ;# 
   203  0000                     # 4008 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   204                           DDRD equ 0F95h ;# 
   205  0000                     # 4225 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   206                           TRISE equ 0F96h ;# 
   207  0000                     # 4230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   208                           DDRE equ 0F96h ;# 
   209  0000                     # 4327 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   210                           OSCTUNE equ 0F9Bh ;# 
   211  0000                     # 4386 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   212                           PIE1 equ 0F9Dh ;# 
   213  0000                     # 4470 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   214                           PIR1 equ 0F9Eh ;# 
   215  0000                     # 4554 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   216                           IPR1 equ 0F9Fh ;# 
   217  0000                     # 4638 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   218                           PIE2 equ 0FA0h ;# 
   219  0000                     # 4709 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   220                           PIR2 equ 0FA1h ;# 
   221  0000                     # 4780 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   222                           IPR2 equ 0FA2h ;# 
   223  0000                     # 4851 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   224                           EECON1 equ 0FA6h ;# 
   225  0000                     # 4917 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   226                           EECON2 equ 0FA7h ;# 
   227  0000                     # 4924 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   228                           EEDATA equ 0FA8h ;# 
   229  0000                     # 4931 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   230                           EEADR equ 0FA9h ;# 
   231  0000                     # 4938 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   232                           RCSTA equ 0FABh ;# 
   233  0000                     # 4943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   234                           RCSTA1 equ 0FABh ;# 
   235  0000                     # 5148 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   236                           TXSTA equ 0FACh ;# 
   237  0000                     # 5153 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   238                           TXSTA1 equ 0FACh ;# 
   239  0000                     # 5404 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   240                           TXREG equ 0FADh ;# 
   241  0000                     # 5409 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   242                           TXREG1 equ 0FADh ;# 
   243  0000                     # 5416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   244                           RCREG equ 0FAEh ;# 
   245  0000                     # 5421 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   246                           RCREG1 equ 0FAEh ;# 
   247  0000                     # 5428 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   248                           SPBRG equ 0FAFh ;# 
   249  0000                     # 5433 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   250                           SPBRG1 equ 0FAFh ;# 
   251  0000                     # 5440 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   252                           SPBRGH equ 0FB0h ;# 
   253  0000                     # 5447 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   254                           T3CON equ 0FB1h ;# 
   255  0000                     # 5568 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   256                           TMR3 equ 0FB2h ;# 
   257  0000                     # 5575 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   258                           TMR3L equ 0FB2h ;# 
   259  0000                     # 5582 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   260                           TMR3H equ 0FB3h ;# 
   261  0000                     # 5589 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   262                           CMCON equ 0FB4h ;# 
   263  0000                     # 5679 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   264                           CVRCON equ 0FB5h ;# 
   265  0000                     # 5764 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   266                           ECCP1AS equ 0FB6h ;# 
   267  0000                     # 5769 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   268                           CCP1AS equ 0FB6h ;# 
   269  0000                     # 5926 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   270                           ECCP1DEL equ 0FB7h ;# 
   271  0000                     # 5931 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   272                           CCP1DEL equ 0FB7h ;# 
   273  0000                     # 6064 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   274                           BAUDCON equ 0FB8h ;# 
   275  0000                     # 6069 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   276                           BAUDCTL equ 0FB8h ;# 
   277  0000                     # 6244 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   278                           CCP2CON equ 0FBAh ;# 
   279  0000                     # 6308 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   280                           CCPR2 equ 0FBBh ;# 
   281  0000                     # 6315 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   282                           CCPR2L equ 0FBBh ;# 
   283  0000                     # 6322 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   284                           CCPR2H equ 0FBCh ;# 
   285  0000                     # 6329 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   286                           CCP1CON equ 0FBDh ;# 
   287  0000                     # 6334 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   288                           ECCP1CON equ 0FBDh ;# 
   289  0000                     # 6491 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   290                           CCPR1 equ 0FBEh ;# 
   291  0000                     # 6498 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   292                           CCPR1L equ 0FBEh ;# 
   293  0000                     # 6505 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   294                           CCPR1H equ 0FBFh ;# 
   295  0000                     # 6512 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   296                           ADCON2 equ 0FC0h ;# 
   297  0000                     # 6583 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   298                           ADCON1 equ 0FC1h ;# 
   299  0000                     # 6668 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   300                           ADCON0 equ 0FC2h ;# 
   301  0000                     # 6787 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   302                           ADRES equ 0FC3h ;# 
   303  0000                     # 6794 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   304                           ADRESL equ 0FC3h ;# 
   305  0000                     # 6801 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   306                           ADRESH equ 0FC4h ;# 
   307  0000                     # 6808 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   308                           SSPCON2 equ 0FC5h ;# 
   309  0000                     # 6870 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   310                           SSPCON1 equ 0FC6h ;# 
   311  0000                     # 6940 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   312                           SSPSTAT equ 0FC7h ;# 
   313  0000                     # 7188 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   314                           SSPADD equ 0FC8h ;# 
   315  0000                     # 7195 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   316                           SSPBUF equ 0FC9h ;# 
   317  0000                     # 7202 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   318                           T2CON equ 0FCAh ;# 
   319  0000                     # 7300 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   320                           PR2 equ 0FCBh ;# 
   321  0000                     # 7305 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   322                           MEMCON equ 0FCBh ;# 
   323  0000                     # 7410 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   324                           TMR2 equ 0FCCh ;# 
   325  0000                     # 7417 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   326                           T1CON equ 0FCDh ;# 
   327  0000                     # 7520 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   328                           TMR1 equ 0FCEh ;# 
   329  0000                     # 7527 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   330                           TMR1L equ 0FCEh ;# 
   331  0000                     # 7534 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   332                           TMR1H equ 0FCFh ;# 
   333  0000                     # 7541 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   334                           RCON equ 0FD0h ;# 
   335  0000                     # 7690 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   336                           WDTCON equ 0FD1h ;# 
   337  0000                     # 7718 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   338                           HLVDCON equ 0FD2h ;# 
   339  0000                     # 7723 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   340                           LVDCON equ 0FD2h ;# 
   341  0000                     # 7988 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   342                           OSCCON equ 0FD3h ;# 
   343  0000                     # 8071 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   344                           T0CON equ 0FD5h ;# 
   345  0000                     # 8141 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   346                           TMR0 equ 0FD6h ;# 
   347  0000                     # 8148 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   348                           TMR0L equ 0FD6h ;# 
   349  0000                     # 8155 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   350                           TMR0H equ 0FD7h ;# 
   351  0000                     # 8162 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   352                           STATUS equ 0FD8h ;# 
   353  0000                     # 8233 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   354                           FSR2 equ 0FD9h ;# 
   355  0000                     # 8240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   356                           FSR2L equ 0FD9h ;# 
   357  0000                     # 8247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   358                           FSR2H equ 0FDAh ;# 
   359  0000                     # 8254 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   360                           PLUSW2 equ 0FDBh ;# 
   361  0000                     # 8261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   362                           PREINC2 equ 0FDCh ;# 
   363  0000                     # 8268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   364                           POSTDEC2 equ 0FDDh ;# 
   365  0000                     # 8275 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   366                           POSTINC2 equ 0FDEh ;# 
   367  0000                     # 8282 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   368                           INDF2 equ 0FDFh ;# 
   369  0000                     # 8289 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   370                           BSR equ 0FE0h ;# 
   371  0000                     # 8296 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   372                           FSR1 equ 0FE1h ;# 
   373  0000                     # 8303 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   374                           FSR1L equ 0FE1h ;# 
   375  0000                     # 8310 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   376                           FSR1H equ 0FE2h ;# 
   377  0000                     # 8317 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   378                           PLUSW1 equ 0FE3h ;# 
   379  0000                     # 8324 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   380                           PREINC1 equ 0FE4h ;# 
   381  0000                     # 8331 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   382                           POSTDEC1 equ 0FE5h ;# 
   383  0000                     # 8338 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   384                           POSTINC1 equ 0FE6h ;# 
   385  0000                     # 8345 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   386                           INDF1 equ 0FE7h ;# 
   387  0000                     # 8352 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   388                           WREG equ 0FE8h ;# 
   389  0000                     # 8359 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   390                           FSR0 equ 0FE9h ;# 
   391  0000                     # 8366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   392                           FSR0L equ 0FE9h ;# 
   393  0000                     # 8373 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   394                           FSR0H equ 0FEAh ;# 
   395  0000                     # 8380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   396                           PLUSW0 equ 0FEBh ;# 
   397  0000                     # 8387 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   398                           PREINC0 equ 0FECh ;# 
   399  0000                     # 8394 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   400                           POSTDEC0 equ 0FEDh ;# 
   401  0000                     # 8401 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   402                           POSTINC0 equ 0FEEh ;# 
   403  0000                     # 8408 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   404                           INDF0 equ 0FEFh ;# 
   405  0000                     # 8415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   406                           INTCON3 equ 0FF0h ;# 
   407  0000                     # 8507 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   408                           INTCON2 equ 0FF1h ;# 
   409  0000                     # 8584 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   410                           INTCON equ 0FF2h ;# 
   411  0000                     # 8701 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   412                           PROD equ 0FF3h ;# 
   413  0000                     # 8708 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   414                           PRODL equ 0FF3h ;# 
   415  0000                     # 8715 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   416                           PRODH equ 0FF4h ;# 
   417  0000                     # 8722 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   418                           TABLAT equ 0FF5h ;# 
   419  0000                     # 8731 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   420                           TBLPTR equ 0FF6h ;# 
   421  0000                     # 8738 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   422                           TBLPTRL equ 0FF6h ;# 
   423  0000                     # 8745 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   424                           TBLPTRH equ 0FF7h ;# 
   425  0000                     # 8752 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   426                           TBLPTRU equ 0FF8h ;# 
   427  0000                     # 8761 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   428                           PCLAT equ 0FF9h ;# 
   429  0000                     # 8768 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   430                           PC equ 0FF9h ;# 
   431  0000                     # 8775 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   432                           PCL equ 0FF9h ;# 
   433  0000                     # 8782 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   434                           PCLATH equ 0FFAh ;# 
   435  0000                     # 8789 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   436                           PCLATU equ 0FFBh ;# 
   437  0000                     # 8796 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   438                           STKPTR equ 0FFCh ;# 
   439  0000                     # 8872 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   440                           TOS equ 0FFDh ;# 
   441  0000                     # 8879 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   442                           TOSL equ 0FFDh ;# 
   443  0000                     # 8886 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   444                           TOSH equ 0FFEh ;# 
   445  0000                     # 8893 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   446                           TOSU equ 0FFFh ;# 
   447  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   448                           SPPDATA equ 0F62h ;# 
   449  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   450                           SPPCFG equ 0F63h ;# 
   451  0000                     # 151 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   452                           SPPEPS equ 0F64h ;# 
   453  0000                     # 225 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   454                           SPPCON equ 0F65h ;# 
   455  0000                     # 251 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   456                           UFRM equ 0F66h ;# 
   457  0000                     # 258 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   458                           UFRML equ 0F66h ;# 
   459  0000                     # 336 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   460                           UFRMH equ 0F67h ;# 
   461  0000                     # 376 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   462                           UIR equ 0F68h ;# 
   463  0000                     # 432 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   464                           UIE equ 0F69h ;# 
   465  0000                     # 488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   466                           UEIR equ 0F6Ah ;# 
   467  0000                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   468                           UEIE equ 0F6Bh ;# 
   469  0000                     # 590 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   470                           USTAT equ 0F6Ch ;# 
   471  0000                     # 650 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   472                           UCON equ 0F6Dh ;# 
   473  0000                     # 701 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   474                           UADDR equ 0F6Eh ;# 
   475  0000                     # 765 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   476                           UCFG equ 0F6Fh ;# 
   477  0000                     # 844 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   478                           UEP0 equ 0F70h ;# 
   479  0000                     # 952 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   480                           UEP1 equ 0F71h ;# 
   481  0000                     # 1060 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   482                           UEP2 equ 0F72h ;# 
   483  0000                     # 1168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   484                           UEP3 equ 0F73h ;# 
   485  0000                     # 1276 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   486                           UEP4 equ 0F74h ;# 
   487  0000                     # 1384 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   488                           UEP5 equ 0F75h ;# 
   489  0000                     # 1492 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   490                           UEP6 equ 0F76h ;# 
   491  0000                     # 1600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   492                           UEP7 equ 0F77h ;# 
   493  0000                     # 1708 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   494                           UEP8 equ 0F78h ;# 
   495  0000                     # 1784 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   496                           UEP9 equ 0F79h ;# 
   497  0000                     # 1860 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   498                           UEP10 equ 0F7Ah ;# 
   499  0000                     # 1936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   500                           UEP11 equ 0F7Bh ;# 
   501  0000                     # 2012 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   502                           UEP12 equ 0F7Ch ;# 
   503  0000                     # 2088 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   504                           UEP13 equ 0F7Dh ;# 
   505  0000                     # 2164 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   506                           UEP14 equ 0F7Eh ;# 
   507  0000                     # 2240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   508                           UEP15 equ 0F7Fh ;# 
   509  0000                     # 2316 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   510                           PORTA equ 0F80h ;# 
   511  0000                     # 2455 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   512                           PORTB equ 0F81h ;# 
   513  0000                     # 2565 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   514                           PORTC equ 0F82h ;# 
   515  0000                     # 2707 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   516                           PORTD equ 0F83h ;# 
   517  0000                     # 2828 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   518                           PORTE equ 0F84h ;# 
   519  0000                     # 2975 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   520                           LATA equ 0F89h ;# 
   521  0000                     # 3075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   522                           LATB equ 0F8Ah ;# 
   523  0000                     # 3187 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   524                           LATC equ 0F8Bh ;# 
   525  0000                     # 3265 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   526                           LATD equ 0F8Ch ;# 
   527  0000                     # 3377 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   528                           LATE equ 0F8Dh ;# 
   529  0000                     # 3429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   530                           TRISA equ 0F92h ;# 
   531  0000                     # 3434 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   532                           DDRA equ 0F92h ;# 
   533  0000                     # 3627 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   534                           TRISB equ 0F93h ;# 
   535  0000                     # 3632 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   536                           DDRB equ 0F93h ;# 
   537  0000                     # 3849 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   538                           TRISC equ 0F94h ;# 
   539  0000                     # 3854 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   540                           DDRC equ 0F94h ;# 
   541  0000                     # 4003 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   542                           TRISD equ 0F95h ;# 
   543  0000                     # 4008 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   544                           DDRD equ 0F95h ;# 
   545  0000                     # 4225 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   546                           TRISE equ 0F96h ;# 
   547  0000                     # 4230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   548                           DDRE equ 0F96h ;# 
   549  0000                     # 4327 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   550                           OSCTUNE equ 0F9Bh ;# 
   551  0000                     # 4386 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   552                           PIE1 equ 0F9Dh ;# 
   553  0000                     # 4470 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   554                           PIR1 equ 0F9Eh ;# 
   555  0000                     # 4554 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   556                           IPR1 equ 0F9Fh ;# 
   557  0000                     # 4638 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   558                           PIE2 equ 0FA0h ;# 
   559  0000                     # 4709 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   560                           PIR2 equ 0FA1h ;# 
   561  0000                     # 4780 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   562                           IPR2 equ 0FA2h ;# 
   563  0000                     # 4851 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   564                           EECON1 equ 0FA6h ;# 
   565  0000                     # 4917 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   566                           EECON2 equ 0FA7h ;# 
   567  0000                     # 4924 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   568                           EEDATA equ 0FA8h ;# 
   569  0000                     # 4931 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   570                           EEADR equ 0FA9h ;# 
   571  0000                     # 4938 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   572                           RCSTA equ 0FABh ;# 
   573  0000                     # 4943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   574                           RCSTA1 equ 0FABh ;# 
   575  0000                     # 5148 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   576                           TXSTA equ 0FACh ;# 
   577  0000                     # 5153 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   578                           TXSTA1 equ 0FACh ;# 
   579  0000                     # 5404 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   580                           TXREG equ 0FADh ;# 
   581  0000                     # 5409 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   582                           TXREG1 equ 0FADh ;# 
   583  0000                     # 5416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   584                           RCREG equ 0FAEh ;# 
   585  0000                     # 5421 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   586                           RCREG1 equ 0FAEh ;# 
   587  0000                     # 5428 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   588                           SPBRG equ 0FAFh ;# 
   589  0000                     # 5433 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   590                           SPBRG1 equ 0FAFh ;# 
   591  0000                     # 5440 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   592                           SPBRGH equ 0FB0h ;# 
   593  0000                     # 5447 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   594                           T3CON equ 0FB1h ;# 
   595  0000                     # 5568 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   596                           TMR3 equ 0FB2h ;# 
   597  0000                     # 5575 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   598                           TMR3L equ 0FB2h ;# 
   599  0000                     # 5582 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   600                           TMR3H equ 0FB3h ;# 
   601  0000                     # 5589 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   602                           CMCON equ 0FB4h ;# 
   603  0000                     # 5679 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   604                           CVRCON equ 0FB5h ;# 
   605  0000                     # 5764 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   606                           ECCP1AS equ 0FB6h ;# 
   607  0000                     # 5769 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   608                           CCP1AS equ 0FB6h ;# 
   609  0000                     # 5926 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   610                           ECCP1DEL equ 0FB7h ;# 
   611  0000                     # 5931 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   612                           CCP1DEL equ 0FB7h ;# 
   613  0000                     # 6064 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   614                           BAUDCON equ 0FB8h ;# 
   615  0000                     # 6069 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   616                           BAUDCTL equ 0FB8h ;# 
   617  0000                     # 6244 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   618                           CCP2CON equ 0FBAh ;# 
   619  0000                     # 6308 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   620                           CCPR2 equ 0FBBh ;# 
   621  0000                     # 6315 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   622                           CCPR2L equ 0FBBh ;# 
   623  0000                     # 6322 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   624                           CCPR2H equ 0FBCh ;# 
   625  0000                     # 6329 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   626                           CCP1CON equ 0FBDh ;# 
   627  0000                     # 6334 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   628                           ECCP1CON equ 0FBDh ;# 
   629  0000                     # 6491 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   630                           CCPR1 equ 0FBEh ;# 
   631  0000                     # 6498 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   632                           CCPR1L equ 0FBEh ;# 
   633  0000                     # 6505 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   634                           CCPR1H equ 0FBFh ;# 
   635  0000                     # 6512 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   636                           ADCON2 equ 0FC0h ;# 
   637  0000                     # 6583 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   638                           ADCON1 equ 0FC1h ;# 
   639  0000                     # 6668 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   640                           ADCON0 equ 0FC2h ;# 
   641  0000                     # 6787 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   642                           ADRES equ 0FC3h ;# 
   643  0000                     # 6794 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   644                           ADRESL equ 0FC3h ;# 
   645  0000                     # 6801 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   646                           ADRESH equ 0FC4h ;# 
   647  0000                     # 6808 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   648                           SSPCON2 equ 0FC5h ;# 
   649  0000                     # 6870 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   650                           SSPCON1 equ 0FC6h ;# 
   651  0000                     # 6940 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   652                           SSPSTAT equ 0FC7h ;# 
   653  0000                     # 7188 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   654                           SSPADD equ 0FC8h ;# 
   655  0000                     # 7195 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   656                           SSPBUF equ 0FC9h ;# 
   657  0000                     # 7202 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   658                           T2CON equ 0FCAh ;# 
   659  0000                     # 7300 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   660                           PR2 equ 0FCBh ;# 
   661  0000                     # 7305 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   662                           MEMCON equ 0FCBh ;# 
   663  0000                     # 7410 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   664                           TMR2 equ 0FCCh ;# 
   665  0000                     # 7417 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   666                           T1CON equ 0FCDh ;# 
   667  0000                     # 7520 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   668                           TMR1 equ 0FCEh ;# 
   669  0000                     # 7527 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   670                           TMR1L equ 0FCEh ;# 
   671  0000                     # 7534 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   672                           TMR1H equ 0FCFh ;# 
   673  0000                     # 7541 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   674                           RCON equ 0FD0h ;# 
   675  0000                     # 7690 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   676                           WDTCON equ 0FD1h ;# 
   677  0000                     # 7718 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   678                           HLVDCON equ 0FD2h ;# 
   679  0000                     # 7723 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   680                           LVDCON equ 0FD2h ;# 
   681  0000                     # 7988 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   682                           OSCCON equ 0FD3h ;# 
   683  0000                     # 8071 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   684                           T0CON equ 0FD5h ;# 
   685  0000                     # 8141 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   686                           TMR0 equ 0FD6h ;# 
   687  0000                     # 8148 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   688                           TMR0L equ 0FD6h ;# 
   689  0000                     # 8155 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   690                           TMR0H equ 0FD7h ;# 
   691  0000                     # 8162 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   692                           STATUS equ 0FD8h ;# 
   693  0000                     # 8233 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   694                           FSR2 equ 0FD9h ;# 
   695  0000                     # 8240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   696                           FSR2L equ 0FD9h ;# 
   697  0000                     # 8247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   698                           FSR2H equ 0FDAh ;# 
   699  0000                     # 8254 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   700                           PLUSW2 equ 0FDBh ;# 
   701  0000                     # 8261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   702                           PREINC2 equ 0FDCh ;# 
   703  0000                     # 8268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   704                           POSTDEC2 equ 0FDDh ;# 
   705  0000                     # 8275 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   706                           POSTINC2 equ 0FDEh ;# 
   707  0000                     # 8282 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   708                           INDF2 equ 0FDFh ;# 
   709  0000                     # 8289 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   710                           BSR equ 0FE0h ;# 
   711  0000                     # 8296 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   712                           FSR1 equ 0FE1h ;# 
   713  0000                     # 8303 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   714                           FSR1L equ 0FE1h ;# 
   715  0000                     # 8310 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   716                           FSR1H equ 0FE2h ;# 
   717  0000                     # 8317 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   718                           PLUSW1 equ 0FE3h ;# 
   719  0000                     # 8324 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   720                           PREINC1 equ 0FE4h ;# 
   721  0000                     # 8331 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   722                           POSTDEC1 equ 0FE5h ;# 
   723  0000                     # 8338 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   724                           POSTINC1 equ 0FE6h ;# 
   725  0000                     # 8345 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   726                           INDF1 equ 0FE7h ;# 
   727  0000                     # 8352 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   728                           WREG equ 0FE8h ;# 
   729  0000                     # 8359 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   730                           FSR0 equ 0FE9h ;# 
   731  0000                     # 8366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   732                           FSR0L equ 0FE9h ;# 
   733  0000                     # 8373 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   734                           FSR0H equ 0FEAh ;# 
   735  0000                     # 8380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   736                           PLUSW0 equ 0FEBh ;# 
   737  0000                     # 8387 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   738                           PREINC0 equ 0FECh ;# 
   739  0000                     # 8394 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   740                           POSTDEC0 equ 0FEDh ;# 
   741  0000                     # 8401 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   742                           POSTINC0 equ 0FEEh ;# 
   743  0000                     # 8408 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   744                           INDF0 equ 0FEFh ;# 
   745  0000                     # 8415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   746                           INTCON3 equ 0FF0h ;# 
   747  0000                     # 8507 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   748                           INTCON2 equ 0FF1h ;# 
   749  0000                     # 8584 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   750                           INTCON equ 0FF2h ;# 
   751  0000                     # 8701 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   752                           PROD equ 0FF3h ;# 
   753  0000                     # 8708 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   754                           PRODL equ 0FF3h ;# 
   755  0000                     # 8715 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   756                           PRODH equ 0FF4h ;# 
   757  0000                     # 8722 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   758                           TABLAT equ 0FF5h ;# 
   759  0000                     # 8731 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   760                           TBLPTR equ 0FF6h ;# 
   761  0000                     # 8738 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   762                           TBLPTRL equ 0FF6h ;# 
   763  0000                     # 8745 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   764                           TBLPTRH equ 0FF7h ;# 
   765  0000                     # 8752 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   766                           TBLPTRU equ 0FF8h ;# 
   767  0000                     # 8761 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   768                           PCLAT equ 0FF9h ;# 
   769  0000                     # 8768 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   770                           PC equ 0FF9h ;# 
   771  0000                     # 8775 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   772                           PCL equ 0FF9h ;# 
   773  0000                     # 8782 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   774                           PCLATH equ 0FFAh ;# 
   775  0000                     # 8789 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   776                           PCLATU equ 0FFBh ;# 
   777  0000                     # 8796 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   778                           STKPTR equ 0FFCh ;# 
   779  0000                     # 8872 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   780                           TOS equ 0FFDh ;# 
   781  0000                     # 8879 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   782                           TOSL equ 0FFDh ;# 
   783  0000                     # 8886 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   784                           TOSH equ 0FFEh ;# 
   785  0000                     # 8893 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   786                           TOSU equ 0FFFh ;# 
   787  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   788                           SPPDATA equ 0F62h ;# 
   789  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   790                           SPPCFG equ 0F63h ;# 
   791  0000                     # 151 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   792                           SPPEPS equ 0F64h ;# 
   793  0000                     # 225 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   794                           SPPCON equ 0F65h ;# 
   795  0000                     # 251 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   796                           UFRM equ 0F66h ;# 
   797  0000                     # 258 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   798                           UFRML equ 0F66h ;# 
   799  0000                     # 336 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   800                           UFRMH equ 0F67h ;# 
   801  0000                     # 376 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   802                           UIR equ 0F68h ;# 
   803  0000                     # 432 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   804                           UIE equ 0F69h ;# 
   805  0000                     # 488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   806                           UEIR equ 0F6Ah ;# 
   807  0000                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   808                           UEIE equ 0F6Bh ;# 
   809  0000                     # 590 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   810                           USTAT equ 0F6Ch ;# 
   811  0000                     # 650 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   812                           UCON equ 0F6Dh ;# 
   813  0000                     # 701 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   814                           UADDR equ 0F6Eh ;# 
   815  0000                     # 765 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   816                           UCFG equ 0F6Fh ;# 
   817  0000                     # 844 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   818                           UEP0 equ 0F70h ;# 
   819  0000                     # 952 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   820                           UEP1 equ 0F71h ;# 
   821  0000                     # 1060 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   822                           UEP2 equ 0F72h ;# 
   823  0000                     # 1168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   824                           UEP3 equ 0F73h ;# 
   825  0000                     # 1276 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   826                           UEP4 equ 0F74h ;# 
   827  0000                     # 1384 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   828                           UEP5 equ 0F75h ;# 
   829  0000                     # 1492 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   830                           UEP6 equ 0F76h ;# 
   831  0000                     # 1600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   832                           UEP7 equ 0F77h ;# 
   833  0000                     # 1708 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   834                           UEP8 equ 0F78h ;# 
   835  0000                     # 1784 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   836                           UEP9 equ 0F79h ;# 
   837  0000                     # 1860 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   838                           UEP10 equ 0F7Ah ;# 
   839  0000                     # 1936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   840                           UEP11 equ 0F7Bh ;# 
   841  0000                     # 2012 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   842                           UEP12 equ 0F7Ch ;# 
   843  0000                     # 2088 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   844                           UEP13 equ 0F7Dh ;# 
   845  0000                     # 2164 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   846                           UEP14 equ 0F7Eh ;# 
   847  0000                     # 2240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   848                           UEP15 equ 0F7Fh ;# 
   849  0000                     # 2316 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   850                           PORTA equ 0F80h ;# 
   851  0000                     # 2455 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   852                           PORTB equ 0F81h ;# 
   853  0000                     # 2565 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   854                           PORTC equ 0F82h ;# 
   855  0000                     # 2707 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   856                           PORTD equ 0F83h ;# 
   857  0000                     # 2828 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   858                           PORTE equ 0F84h ;# 
   859  0000                     # 2975 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   860                           LATA equ 0F89h ;# 
   861  0000                     # 3075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   862                           LATB equ 0F8Ah ;# 
   863  0000                     # 3187 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   864                           LATC equ 0F8Bh ;# 
   865  0000                     # 3265 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   866                           LATD equ 0F8Ch ;# 
   867  0000                     # 3377 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   868                           LATE equ 0F8Dh ;# 
   869  0000                     # 3429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   870                           TRISA equ 0F92h ;# 
   871  0000                     # 3434 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   872                           DDRA equ 0F92h ;# 
   873  0000                     # 3627 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   874                           TRISB equ 0F93h ;# 
   875  0000                     # 3632 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   876                           DDRB equ 0F93h ;# 
   877  0000                     # 3849 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   878                           TRISC equ 0F94h ;# 
   879  0000                     # 3854 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   880                           DDRC equ 0F94h ;# 
   881  0000                     # 4003 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   882                           TRISD equ 0F95h ;# 
   883  0000                     # 4008 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   884                           DDRD equ 0F95h ;# 
   885  0000                     # 4225 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   886                           TRISE equ 0F96h ;# 
   887  0000                     # 4230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   888                           DDRE equ 0F96h ;# 
   889  0000                     # 4327 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   890                           OSCTUNE equ 0F9Bh ;# 
   891  0000                     # 4386 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   892                           PIE1 equ 0F9Dh ;# 
   893  0000                     # 4470 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   894                           PIR1 equ 0F9Eh ;# 
   895  0000                     # 4554 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   896                           IPR1 equ 0F9Fh ;# 
   897  0000                     # 4638 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   898                           PIE2 equ 0FA0h ;# 
   899  0000                     # 4709 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   900                           PIR2 equ 0FA1h ;# 
   901  0000                     # 4780 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   902                           IPR2 equ 0FA2h ;# 
   903  0000                     # 4851 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   904                           EECON1 equ 0FA6h ;# 
   905  0000                     # 4917 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   906                           EECON2 equ 0FA7h ;# 
   907  0000                     # 4924 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   908                           EEDATA equ 0FA8h ;# 
   909  0000                     # 4931 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   910                           EEADR equ 0FA9h ;# 
   911  0000                     # 4938 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   912                           RCSTA equ 0FABh ;# 
   913  0000                     # 4943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   914                           RCSTA1 equ 0FABh ;# 
   915  0000                     # 5148 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   916                           TXSTA equ 0FACh ;# 
   917  0000                     # 5153 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   918                           TXSTA1 equ 0FACh ;# 
   919  0000                     # 5404 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   920                           TXREG equ 0FADh ;# 
   921  0000                     # 5409 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   922                           TXREG1 equ 0FADh ;# 
   923  0000                     # 5416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   924                           RCREG equ 0FAEh ;# 
   925  0000                     # 5421 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   926                           RCREG1 equ 0FAEh ;# 
   927  0000                     # 5428 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   928                           SPBRG equ 0FAFh ;# 
   929  0000                     # 5433 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   930                           SPBRG1 equ 0FAFh ;# 
   931  0000                     # 5440 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   932                           SPBRGH equ 0FB0h ;# 
   933  0000                     # 5447 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   934                           T3CON equ 0FB1h ;# 
   935  0000                     # 5568 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   936                           TMR3 equ 0FB2h ;# 
   937  0000                     # 5575 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   938                           TMR3L equ 0FB2h ;# 
   939  0000                     # 5582 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   940                           TMR3H equ 0FB3h ;# 
   941  0000                     # 5589 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   942                           CMCON equ 0FB4h ;# 
   943  0000                     # 5679 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   944                           CVRCON equ 0FB5h ;# 
   945  0000                     # 5764 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   946                           ECCP1AS equ 0FB6h ;# 
   947  0000                     # 5769 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   948                           CCP1AS equ 0FB6h ;# 
   949  0000                     # 5926 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   950                           ECCP1DEL equ 0FB7h ;# 
   951  0000                     # 5931 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   952                           CCP1DEL equ 0FB7h ;# 
   953  0000                     # 6064 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   954                           BAUDCON equ 0FB8h ;# 
   955  0000                     # 6069 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   956                           BAUDCTL equ 0FB8h ;# 
   957  0000                     # 6244 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   958                           CCP2CON equ 0FBAh ;# 
   959  0000                     # 6308 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   960                           CCPR2 equ 0FBBh ;# 
   961  0000                     # 6315 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   962                           CCPR2L equ 0FBBh ;# 
   963  0000                     # 6322 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   964                           CCPR2H equ 0FBCh ;# 
   965  0000                     # 6329 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   966                           CCP1CON equ 0FBDh ;# 
   967  0000                     # 6334 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   968                           ECCP1CON equ 0FBDh ;# 
   969  0000                     # 6491 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   970                           CCPR1 equ 0FBEh ;# 
   971  0000                     # 6498 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   972                           CCPR1L equ 0FBEh ;# 
   973  0000                     # 6505 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   974                           CCPR1H equ 0FBFh ;# 
   975  0000                     # 6512 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   976                           ADCON2 equ 0FC0h ;# 
   977  0000                     # 6583 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   978                           ADCON1 equ 0FC1h ;# 
   979  0000                     # 6668 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   980                           ADCON0 equ 0FC2h ;# 
   981  0000                     # 6787 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   982                           ADRES equ 0FC3h ;# 
   983  0000                     # 6794 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   984                           ADRESL equ 0FC3h ;# 
   985  0000                     # 6801 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   986                           ADRESH equ 0FC4h ;# 
   987  0000                     # 6808 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   988                           SSPCON2 equ 0FC5h ;# 
   989  0000                     # 6870 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   990                           SSPCON1 equ 0FC6h ;# 
   991  0000                     # 6940 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   992                           SSPSTAT equ 0FC7h ;# 
   993  0000                     # 7188 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   994                           SSPADD equ 0FC8h ;# 
   995  0000                     # 7195 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   996                           SSPBUF equ 0FC9h ;# 
   997  0000                     # 7202 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   998                           T2CON equ 0FCAh ;# 
   999  0000                     # 7300 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1000                           PR2 equ 0FCBh ;# 
  1001  0000                     # 7305 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1002                           MEMCON equ 0FCBh ;# 
  1003  0000                     # 7410 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1004                           TMR2 equ 0FCCh ;# 
  1005  0000                     # 7417 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1006                           T1CON equ 0FCDh ;# 
  1007  0000                     # 7520 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1008                           TMR1 equ 0FCEh ;# 
  1009  0000                     # 7527 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1010                           TMR1L equ 0FCEh ;# 
  1011  0000                     # 7534 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1012                           TMR1H equ 0FCFh ;# 
  1013  0000                     # 7541 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1014                           RCON equ 0FD0h ;# 
  1015  0000                     # 7690 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1016                           WDTCON equ 0FD1h ;# 
  1017  0000                     # 7718 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1018                           HLVDCON equ 0FD2h ;# 
  1019  0000                     # 7723 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1020                           LVDCON equ 0FD2h ;# 
  1021  0000                     # 7988 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1022                           OSCCON equ 0FD3h ;# 
  1023  0000                     # 8071 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1024                           T0CON equ 0FD5h ;# 
  1025  0000                     # 8141 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1026                           TMR0 equ 0FD6h ;# 
  1027  0000                     # 8148 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1028                           TMR0L equ 0FD6h ;# 
  1029  0000                     # 8155 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1030                           TMR0H equ 0FD7h ;# 
  1031  0000                     # 8162 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1032                           STATUS equ 0FD8h ;# 
  1033  0000                     # 8233 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1034                           FSR2 equ 0FD9h ;# 
  1035  0000                     # 8240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1036                           FSR2L equ 0FD9h ;# 
  1037  0000                     # 8247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1038                           FSR2H equ 0FDAh ;# 
  1039  0000                     # 8254 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1040                           PLUSW2 equ 0FDBh ;# 
  1041  0000                     # 8261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1042                           PREINC2 equ 0FDCh ;# 
  1043  0000                     # 8268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1044                           POSTDEC2 equ 0FDDh ;# 
  1045  0000                     # 8275 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1046                           POSTINC2 equ 0FDEh ;# 
  1047  0000                     # 8282 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1048                           INDF2 equ 0FDFh ;# 
  1049  0000                     # 8289 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1050                           BSR equ 0FE0h ;# 
  1051  0000                     # 8296 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1052                           FSR1 equ 0FE1h ;# 
  1053  0000                     # 8303 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1054                           FSR1L equ 0FE1h ;# 
  1055  0000                     # 8310 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1056                           FSR1H equ 0FE2h ;# 
  1057  0000                     # 8317 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1058                           PLUSW1 equ 0FE3h ;# 
  1059  0000                     # 8324 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1060                           PREINC1 equ 0FE4h ;# 
  1061  0000                     # 8331 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1062                           POSTDEC1 equ 0FE5h ;# 
  1063  0000                     # 8338 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1064                           POSTINC1 equ 0FE6h ;# 
  1065  0000                     # 8345 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1066                           INDF1 equ 0FE7h ;# 
  1067  0000                     # 8352 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1068                           WREG equ 0FE8h ;# 
  1069  0000                     # 8359 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1070                           FSR0 equ 0FE9h ;# 
  1071  0000                     # 8366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1072                           FSR0L equ 0FE9h ;# 
  1073  0000                     # 8373 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1074                           FSR0H equ 0FEAh ;# 
  1075  0000                     # 8380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1076                           PLUSW0 equ 0FEBh ;# 
  1077  0000                     # 8387 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1078                           PREINC0 equ 0FECh ;# 
  1079  0000                     # 8394 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1080                           POSTDEC0 equ 0FEDh ;# 
  1081  0000                     # 8401 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1082                           POSTINC0 equ 0FEEh ;# 
  1083  0000                     # 8408 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1084                           INDF0 equ 0FEFh ;# 
  1085  0000                     # 8415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1086                           INTCON3 equ 0FF0h ;# 
  1087  0000                     # 8507 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1088                           INTCON2 equ 0FF1h ;# 
  1089  0000                     # 8584 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1090                           INTCON equ 0FF2h ;# 
  1091  0000                     # 8701 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1092                           PROD equ 0FF3h ;# 
  1093  0000                     # 8708 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1094                           PRODL equ 0FF3h ;# 
  1095  0000                     # 8715 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1096                           PRODH equ 0FF4h ;# 
  1097  0000                     # 8722 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1098                           TABLAT equ 0FF5h ;# 
  1099  0000                     # 8731 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1100                           TBLPTR equ 0FF6h ;# 
  1101  0000                     # 8738 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1102                           TBLPTRL equ 0FF6h ;# 
  1103  0000                     # 8745 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1104                           TBLPTRH equ 0FF7h ;# 
  1105  0000                     # 8752 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1106                           TBLPTRU equ 0FF8h ;# 
  1107  0000                     # 8761 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1108                           PCLAT equ 0FF9h ;# 
  1109  0000                     # 8768 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1110                           PC equ 0FF9h ;# 
  1111  0000                     # 8775 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1112                           PCL equ 0FF9h ;# 
  1113  0000                     # 8782 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1114                           PCLATH equ 0FFAh ;# 
  1115  0000                     # 8789 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1116                           PCLATU equ 0FFBh ;# 
  1117  0000                     # 8796 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1118                           STKPTR equ 0FFCh ;# 
  1119  0000                     # 8872 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1120                           TOS equ 0FFDh ;# 
  1121  0000                     # 8879 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1122                           TOSL equ 0FFDh ;# 
  1123  0000                     # 8886 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1124                           TOSH equ 0FFEh ;# 
  1125  0000                     # 8893 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1126                           TOSU equ 0FFFh ;# 
  1127  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1128                           SPPDATA equ 0F62h ;# 
  1129  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1130                           SPPCFG equ 0F63h ;# 
  1131  0000                     # 151 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1132                           SPPEPS equ 0F64h ;# 
  1133  0000                     # 225 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1134                           SPPCON equ 0F65h ;# 
  1135  0000                     # 251 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1136                           UFRM equ 0F66h ;# 
  1137  0000                     # 258 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1138                           UFRML equ 0F66h ;# 
  1139  0000                     # 336 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1140                           UFRMH equ 0F67h ;# 
  1141  0000                     # 376 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1142                           UIR equ 0F68h ;# 
  1143  0000                     # 432 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1144                           UIE equ 0F69h ;# 
  1145  0000                     # 488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1146                           UEIR equ 0F6Ah ;# 
  1147  0000                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1148                           UEIE equ 0F6Bh ;# 
  1149  0000                     # 590 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1150                           USTAT equ 0F6Ch ;# 
  1151  0000                     # 650 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1152                           UCON equ 0F6Dh ;# 
  1153  0000                     # 701 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1154                           UADDR equ 0F6Eh ;# 
  1155  0000                     # 765 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1156                           UCFG equ 0F6Fh ;# 
  1157  0000                     # 844 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1158                           UEP0 equ 0F70h ;# 
  1159  0000                     # 952 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1160                           UEP1 equ 0F71h ;# 
  1161  0000                     # 1060 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1162                           UEP2 equ 0F72h ;# 
  1163  0000                     # 1168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1164                           UEP3 equ 0F73h ;# 
  1165  0000                     # 1276 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1166                           UEP4 equ 0F74h ;# 
  1167  0000                     # 1384 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1168                           UEP5 equ 0F75h ;# 
  1169  0000                     # 1492 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1170                           UEP6 equ 0F76h ;# 
  1171  0000                     # 1600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1172                           UEP7 equ 0F77h ;# 
  1173  0000                     # 1708 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1174                           UEP8 equ 0F78h ;# 
  1175  0000                     # 1784 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1176                           UEP9 equ 0F79h ;# 
  1177  0000                     # 1860 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1178                           UEP10 equ 0F7Ah ;# 
  1179  0000                     # 1936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1180                           UEP11 equ 0F7Bh ;# 
  1181  0000                     # 2012 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1182                           UEP12 equ 0F7Ch ;# 
  1183  0000                     # 2088 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1184                           UEP13 equ 0F7Dh ;# 
  1185  0000                     # 2164 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1186                           UEP14 equ 0F7Eh ;# 
  1187  0000                     # 2240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1188                           UEP15 equ 0F7Fh ;# 
  1189  0000                     # 2316 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1190                           PORTA equ 0F80h ;# 
  1191  0000                     # 2455 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1192                           PORTB equ 0F81h ;# 
  1193  0000                     # 2565 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1194                           PORTC equ 0F82h ;# 
  1195  0000                     # 2707 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1196                           PORTD equ 0F83h ;# 
  1197  0000                     # 2828 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1198                           PORTE equ 0F84h ;# 
  1199  0000                     # 2975 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1200                           LATA equ 0F89h ;# 
  1201  0000                     # 3075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1202                           LATB equ 0F8Ah ;# 
  1203  0000                     # 3187 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1204                           LATC equ 0F8Bh ;# 
  1205  0000                     # 3265 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1206                           LATD equ 0F8Ch ;# 
  1207  0000                     # 3377 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1208                           LATE equ 0F8Dh ;# 
  1209  0000                     # 3429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1210                           TRISA equ 0F92h ;# 
  1211  0000                     # 3434 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1212                           DDRA equ 0F92h ;# 
  1213  0000                     # 3627 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1214                           TRISB equ 0F93h ;# 
  1215  0000                     # 3632 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1216                           DDRB equ 0F93h ;# 
  1217  0000                     # 3849 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1218                           TRISC equ 0F94h ;# 
  1219  0000                     # 3854 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1220                           DDRC equ 0F94h ;# 
  1221  0000                     # 4003 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1222                           TRISD equ 0F95h ;# 
  1223  0000                     # 4008 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1224                           DDRD equ 0F95h ;# 
  1225  0000                     # 4225 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1226                           TRISE equ 0F96h ;# 
  1227  0000                     # 4230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1228                           DDRE equ 0F96h ;# 
  1229  0000                     # 4327 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1230                           OSCTUNE equ 0F9Bh ;# 
  1231  0000                     # 4386 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1232                           PIE1 equ 0F9Dh ;# 
  1233  0000                     # 4470 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1234                           PIR1 equ 0F9Eh ;# 
  1235  0000                     # 4554 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1236                           IPR1 equ 0F9Fh ;# 
  1237  0000                     # 4638 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1238                           PIE2 equ 0FA0h ;# 
  1239  0000                     # 4709 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1240                           PIR2 equ 0FA1h ;# 
  1241  0000                     # 4780 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1242                           IPR2 equ 0FA2h ;# 
  1243  0000                     # 4851 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1244                           EECON1 equ 0FA6h ;# 
  1245  0000                     # 4917 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1246                           EECON2 equ 0FA7h ;# 
  1247  0000                     # 4924 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1248                           EEDATA equ 0FA8h ;# 
  1249  0000                     # 4931 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1250                           EEADR equ 0FA9h ;# 
  1251  0000                     # 4938 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1252                           RCSTA equ 0FABh ;# 
  1253  0000                     # 4943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1254                           RCSTA1 equ 0FABh ;# 
  1255  0000                     # 5148 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1256                           TXSTA equ 0FACh ;# 
  1257  0000                     # 5153 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1258                           TXSTA1 equ 0FACh ;# 
  1259  0000                     # 5404 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1260                           TXREG equ 0FADh ;# 
  1261  0000                     # 5409 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1262                           TXREG1 equ 0FADh ;# 
  1263  0000                     # 5416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1264                           RCREG equ 0FAEh ;# 
  1265  0000                     # 5421 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1266                           RCREG1 equ 0FAEh ;# 
  1267  0000                     # 5428 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1268                           SPBRG equ 0FAFh ;# 
  1269  0000                     # 5433 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1270                           SPBRG1 equ 0FAFh ;# 
  1271  0000                     # 5440 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1272                           SPBRGH equ 0FB0h ;# 
  1273  0000                     # 5447 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1274                           T3CON equ 0FB1h ;# 
  1275  0000                     # 5568 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1276                           TMR3 equ 0FB2h ;# 
  1277  0000                     # 5575 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1278                           TMR3L equ 0FB2h ;# 
  1279  0000                     # 5582 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1280                           TMR3H equ 0FB3h ;# 
  1281  0000                     # 5589 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1282                           CMCON equ 0FB4h ;# 
  1283  0000                     # 5679 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1284                           CVRCON equ 0FB5h ;# 
  1285  0000                     # 5764 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1286                           ECCP1AS equ 0FB6h ;# 
  1287  0000                     # 5769 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1288                           CCP1AS equ 0FB6h ;# 
  1289  0000                     # 5926 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1290                           ECCP1DEL equ 0FB7h ;# 
  1291  0000                     # 5931 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1292                           CCP1DEL equ 0FB7h ;# 
  1293  0000                     # 6064 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1294                           BAUDCON equ 0FB8h ;# 
  1295  0000                     # 6069 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1296                           BAUDCTL equ 0FB8h ;# 
  1297  0000                     # 6244 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1298                           CCP2CON equ 0FBAh ;# 
  1299  0000                     # 6308 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1300                           CCPR2 equ 0FBBh ;# 
  1301  0000                     # 6315 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1302                           CCPR2L equ 0FBBh ;# 
  1303  0000                     # 6322 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1304                           CCPR2H equ 0FBCh ;# 
  1305  0000                     # 6329 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1306                           CCP1CON equ 0FBDh ;# 
  1307  0000                     # 6334 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1308                           ECCP1CON equ 0FBDh ;# 
  1309  0000                     # 6491 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1310                           CCPR1 equ 0FBEh ;# 
  1311  0000                     # 6498 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1312                           CCPR1L equ 0FBEh ;# 
  1313  0000                     # 6505 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1314                           CCPR1H equ 0FBFh ;# 
  1315  0000                     # 6512 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1316                           ADCON2 equ 0FC0h ;# 
  1317  0000                     # 6583 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1318                           ADCON1 equ 0FC1h ;# 
  1319  0000                     # 6668 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1320                           ADCON0 equ 0FC2h ;# 
  1321  0000                     # 6787 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1322                           ADRES equ 0FC3h ;# 
  1323  0000                     # 6794 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1324                           ADRESL equ 0FC3h ;# 
  1325  0000                     # 6801 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1326                           ADRESH equ 0FC4h ;# 
  1327  0000                     # 6808 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1328                           SSPCON2 equ 0FC5h ;# 
  1329  0000                     # 6870 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1330                           SSPCON1 equ 0FC6h ;# 
  1331  0000                     # 6940 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1332                           SSPSTAT equ 0FC7h ;# 
  1333  0000                     # 7188 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1334                           SSPADD equ 0FC8h ;# 
  1335  0000                     # 7195 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1336                           SSPBUF equ 0FC9h ;# 
  1337  0000                     # 7202 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1338                           T2CON equ 0FCAh ;# 
  1339  0000                     # 7300 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1340                           PR2 equ 0FCBh ;# 
  1341  0000                     # 7305 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1342                           MEMCON equ 0FCBh ;# 
  1343  0000                     # 7410 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1344                           TMR2 equ 0FCCh ;# 
  1345  0000                     # 7417 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1346                           T1CON equ 0FCDh ;# 
  1347  0000                     # 7520 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1348                           TMR1 equ 0FCEh ;# 
  1349  0000                     # 7527 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1350                           TMR1L equ 0FCEh ;# 
  1351  0000                     # 7534 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1352                           TMR1H equ 0FCFh ;# 
  1353  0000                     # 7541 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1354                           RCON equ 0FD0h ;# 
  1355  0000                     # 7690 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1356                           WDTCON equ 0FD1h ;# 
  1357  0000                     # 7718 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1358                           HLVDCON equ 0FD2h ;# 
  1359  0000                     # 7723 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1360                           LVDCON equ 0FD2h ;# 
  1361  0000                     # 7988 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1362                           OSCCON equ 0FD3h ;# 
  1363  0000                     # 8071 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1364                           T0CON equ 0FD5h ;# 
  1365  0000                     # 8141 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1366                           TMR0 equ 0FD6h ;# 
  1367  0000                     # 8148 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1368                           TMR0L equ 0FD6h ;# 
  1369  0000                     # 8155 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1370                           TMR0H equ 0FD7h ;# 
  1371  0000                     # 8162 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1372                           STATUS equ 0FD8h ;# 
  1373  0000                     # 8233 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1374                           FSR2 equ 0FD9h ;# 
  1375  0000                     # 8240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1376                           FSR2L equ 0FD9h ;# 
  1377  0000                     # 8247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1378                           FSR2H equ 0FDAh ;# 
  1379  0000                     # 8254 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1380                           PLUSW2 equ 0FDBh ;# 
  1381  0000                     # 8261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1382                           PREINC2 equ 0FDCh ;# 
  1383  0000                     # 8268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1384                           POSTDEC2 equ 0FDDh ;# 
  1385  0000                     # 8275 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1386                           POSTINC2 equ 0FDEh ;# 
  1387  0000                     # 8282 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1388                           INDF2 equ 0FDFh ;# 
  1389  0000                     # 8289 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1390                           BSR equ 0FE0h ;# 
  1391  0000                     # 8296 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1392                           FSR1 equ 0FE1h ;# 
  1393  0000                     # 8303 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1394                           FSR1L equ 0FE1h ;# 
  1395  0000                     # 8310 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1396                           FSR1H equ 0FE2h ;# 
  1397  0000                     # 8317 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1398                           PLUSW1 equ 0FE3h ;# 
  1399  0000                     # 8324 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1400                           PREINC1 equ 0FE4h ;# 
  1401  0000                     # 8331 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1402                           POSTDEC1 equ 0FE5h ;# 
  1403  0000                     # 8338 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1404                           POSTINC1 equ 0FE6h ;# 
  1405  0000                     # 8345 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1406                           INDF1 equ 0FE7h ;# 
  1407  0000                     # 8352 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1408                           WREG equ 0FE8h ;# 
  1409  0000                     # 8359 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1410                           FSR0 equ 0FE9h ;# 
  1411  0000                     # 8366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1412                           FSR0L equ 0FE9h ;# 
  1413  0000                     # 8373 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1414                           FSR0H equ 0FEAh ;# 
  1415  0000                     # 8380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1416                           PLUSW0 equ 0FEBh ;# 
  1417  0000                     # 8387 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1418                           PREINC0 equ 0FECh ;# 
  1419  0000                     # 8394 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1420                           POSTDEC0 equ 0FEDh ;# 
  1421  0000                     # 8401 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1422                           POSTINC0 equ 0FEEh ;# 
  1423  0000                     # 8408 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1424                           INDF0 equ 0FEFh ;# 
  1425  0000                     # 8415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1426                           INTCON3 equ 0FF0h ;# 
  1427  0000                     # 8507 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1428                           INTCON2 equ 0FF1h ;# 
  1429  0000                     # 8584 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1430                           INTCON equ 0FF2h ;# 
  1431  0000                     # 8701 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1432                           PROD equ 0FF3h ;# 
  1433  0000                     # 8708 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1434                           PRODL equ 0FF3h ;# 
  1435  0000                     # 8715 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1436                           PRODH equ 0FF4h ;# 
  1437  0000                     # 8722 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1438                           TABLAT equ 0FF5h ;# 
  1439  0000                     # 8731 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1440                           TBLPTR equ 0FF6h ;# 
  1441  0000                     # 8738 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1442                           TBLPTRL equ 0FF6h ;# 
  1443  0000                     # 8745 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1444                           TBLPTRH equ 0FF7h ;# 
  1445  0000                     # 8752 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1446                           TBLPTRU equ 0FF8h ;# 
  1447  0000                     # 8761 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1448                           PCLAT equ 0FF9h ;# 
  1449  0000                     # 8768 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1450                           PC equ 0FF9h ;# 
  1451  0000                     # 8775 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1452                           PCL equ 0FF9h ;# 
  1453  0000                     # 8782 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1454                           PCLATH equ 0FFAh ;# 
  1455  0000                     # 8789 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1456                           PCLATU equ 0FFBh ;# 
  1457  0000                     # 8796 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1458                           STKPTR equ 0FFCh ;# 
  1459  0000                     # 8872 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1460                           TOS equ 0FFDh ;# 
  1461  0000                     # 8879 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1462                           TOSL equ 0FFDh ;# 
  1463  0000                     # 8886 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1464                           TOSH equ 0FFEh ;# 
  1465  0000                     # 8893 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1466                           TOSU equ 0FFFh ;# 
  1467  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1468                           SPPDATA equ 0F62h ;# 
  1469  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1470                           SPPCFG equ 0F63h ;# 
  1471  0000                     # 151 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1472                           SPPEPS equ 0F64h ;# 
  1473  0000                     # 225 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1474                           SPPCON equ 0F65h ;# 
  1475  0000                     # 251 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1476                           UFRM equ 0F66h ;# 
  1477  0000                     # 258 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1478                           UFRML equ 0F66h ;# 
  1479  0000                     # 336 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1480                           UFRMH equ 0F67h ;# 
  1481  0000                     # 376 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1482                           UIR equ 0F68h ;# 
  1483  0000                     # 432 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1484                           UIE equ 0F69h ;# 
  1485  0000                     # 488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1486                           UEIR equ 0F6Ah ;# 
  1487  0000                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1488                           UEIE equ 0F6Bh ;# 
  1489  0000                     # 590 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1490                           USTAT equ 0F6Ch ;# 
  1491  0000                     # 650 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1492                           UCON equ 0F6Dh ;# 
  1493  0000                     # 701 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1494                           UADDR equ 0F6Eh ;# 
  1495  0000                     # 765 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1496                           UCFG equ 0F6Fh ;# 
  1497  0000                     # 844 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1498                           UEP0 equ 0F70h ;# 
  1499  0000                     # 952 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1500                           UEP1 equ 0F71h ;# 
  1501  0000                     # 1060 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1502                           UEP2 equ 0F72h ;# 
  1503  0000                     # 1168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1504                           UEP3 equ 0F73h ;# 
  1505  0000                     # 1276 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1506                           UEP4 equ 0F74h ;# 
  1507  0000                     # 1384 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1508                           UEP5 equ 0F75h ;# 
  1509  0000                     # 1492 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1510                           UEP6 equ 0F76h ;# 
  1511  0000                     # 1600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1512                           UEP7 equ 0F77h ;# 
  1513  0000                     # 1708 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1514                           UEP8 equ 0F78h ;# 
  1515  0000                     # 1784 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1516                           UEP9 equ 0F79h ;# 
  1517  0000                     # 1860 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1518                           UEP10 equ 0F7Ah ;# 
  1519  0000                     # 1936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1520                           UEP11 equ 0F7Bh ;# 
  1521  0000                     # 2012 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1522                           UEP12 equ 0F7Ch ;# 
  1523  0000                     # 2088 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1524                           UEP13 equ 0F7Dh ;# 
  1525  0000                     # 2164 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1526                           UEP14 equ 0F7Eh ;# 
  1527  0000                     # 2240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1528                           UEP15 equ 0F7Fh ;# 
  1529  0000                     # 2316 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1530                           PORTA equ 0F80h ;# 
  1531  0000                     # 2455 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1532                           PORTB equ 0F81h ;# 
  1533  0000                     # 2565 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1534                           PORTC equ 0F82h ;# 
  1535  0000                     # 2707 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1536                           PORTD equ 0F83h ;# 
  1537  0000                     # 2828 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1538                           PORTE equ 0F84h ;# 
  1539  0000                     # 2975 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1540                           LATA equ 0F89h ;# 
  1541  0000                     # 3075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1542                           LATB equ 0F8Ah ;# 
  1543  0000                     # 3187 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1544                           LATC equ 0F8Bh ;# 
  1545  0000                     # 3265 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1546                           LATD equ 0F8Ch ;# 
  1547  0000                     # 3377 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1548                           LATE equ 0F8Dh ;# 
  1549  0000                     # 3429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1550                           TRISA equ 0F92h ;# 
  1551  0000                     # 3434 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1552                           DDRA equ 0F92h ;# 
  1553  0000                     # 3627 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1554                           TRISB equ 0F93h ;# 
  1555  0000                     # 3632 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1556                           DDRB equ 0F93h ;# 
  1557  0000                     # 3849 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1558                           TRISC equ 0F94h ;# 
  1559  0000                     # 3854 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1560                           DDRC equ 0F94h ;# 
  1561  0000                     # 4003 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1562                           TRISD equ 0F95h ;# 
  1563  0000                     # 4008 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1564                           DDRD equ 0F95h ;# 
  1565  0000                     # 4225 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1566                           TRISE equ 0F96h ;# 
  1567  0000                     # 4230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1568                           DDRE equ 0F96h ;# 
  1569  0000                     # 4327 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1570                           OSCTUNE equ 0F9Bh ;# 
  1571  0000                     # 4386 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1572                           PIE1 equ 0F9Dh ;# 
  1573  0000                     # 4470 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1574                           PIR1 equ 0F9Eh ;# 
  1575  0000                     # 4554 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1576                           IPR1 equ 0F9Fh ;# 
  1577  0000                     # 4638 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1578                           PIE2 equ 0FA0h ;# 
  1579  0000                     # 4709 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1580                           PIR2 equ 0FA1h ;# 
  1581  0000                     # 4780 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1582                           IPR2 equ 0FA2h ;# 
  1583  0000                     # 4851 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1584                           EECON1 equ 0FA6h ;# 
  1585  0000                     # 4917 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1586                           EECON2 equ 0FA7h ;# 
  1587  0000                     # 4924 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1588                           EEDATA equ 0FA8h ;# 
  1589  0000                     # 4931 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1590                           EEADR equ 0FA9h ;# 
  1591  0000                     # 4938 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1592                           RCSTA equ 0FABh ;# 
  1593  0000                     # 4943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1594                           RCSTA1 equ 0FABh ;# 
  1595  0000                     # 5148 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1596                           TXSTA equ 0FACh ;# 
  1597  0000                     # 5153 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1598                           TXSTA1 equ 0FACh ;# 
  1599  0000                     # 5404 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1600                           TXREG equ 0FADh ;# 
  1601  0000                     # 5409 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1602                           TXREG1 equ 0FADh ;# 
  1603  0000                     # 5416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1604                           RCREG equ 0FAEh ;# 
  1605  0000                     # 5421 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1606                           RCREG1 equ 0FAEh ;# 
  1607  0000                     # 5428 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1608                           SPBRG equ 0FAFh ;# 
  1609  0000                     # 5433 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1610                           SPBRG1 equ 0FAFh ;# 
  1611  0000                     # 5440 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1612                           SPBRGH equ 0FB0h ;# 
  1613  0000                     # 5447 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1614                           T3CON equ 0FB1h ;# 
  1615  0000                     # 5568 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1616                           TMR3 equ 0FB2h ;# 
  1617  0000                     # 5575 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1618                           TMR3L equ 0FB2h ;# 
  1619  0000                     # 5582 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1620                           TMR3H equ 0FB3h ;# 
  1621  0000                     # 5589 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1622                           CMCON equ 0FB4h ;# 
  1623  0000                     # 5679 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1624                           CVRCON equ 0FB5h ;# 
  1625  0000                     # 5764 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1626                           ECCP1AS equ 0FB6h ;# 
  1627  0000                     # 5769 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1628                           CCP1AS equ 0FB6h ;# 
  1629  0000                     # 5926 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1630                           ECCP1DEL equ 0FB7h ;# 
  1631  0000                     # 5931 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1632                           CCP1DEL equ 0FB7h ;# 
  1633  0000                     # 6064 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1634                           BAUDCON equ 0FB8h ;# 
  1635  0000                     # 6069 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1636                           BAUDCTL equ 0FB8h ;# 
  1637  0000                     # 6244 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1638                           CCP2CON equ 0FBAh ;# 
  1639  0000                     # 6308 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1640                           CCPR2 equ 0FBBh ;# 
  1641  0000                     # 6315 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1642                           CCPR2L equ 0FBBh ;# 
  1643  0000                     # 6322 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1644                           CCPR2H equ 0FBCh ;# 
  1645  0000                     # 6329 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1646                           CCP1CON equ 0FBDh ;# 
  1647  0000                     # 6334 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1648                           ECCP1CON equ 0FBDh ;# 
  1649  0000                     # 6491 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1650                           CCPR1 equ 0FBEh ;# 
  1651  0000                     # 6498 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1652                           CCPR1L equ 0FBEh ;# 
  1653  0000                     # 6505 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1654                           CCPR1H equ 0FBFh ;# 
  1655  0000                     # 6512 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1656                           ADCON2 equ 0FC0h ;# 
  1657  0000                     # 6583 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1658                           ADCON1 equ 0FC1h ;# 
  1659  0000                     # 6668 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1660                           ADCON0 equ 0FC2h ;# 
  1661  0000                     # 6787 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1662                           ADRES equ 0FC3h ;# 
  1663  0000                     # 6794 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1664                           ADRESL equ 0FC3h ;# 
  1665  0000                     # 6801 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1666                           ADRESH equ 0FC4h ;# 
  1667  0000                     # 6808 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1668                           SSPCON2 equ 0FC5h ;# 
  1669  0000                     # 6870 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1670                           SSPCON1 equ 0FC6h ;# 
  1671  0000                     # 6940 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1672                           SSPSTAT equ 0FC7h ;# 
  1673  0000                     # 7188 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1674                           SSPADD equ 0FC8h ;# 
  1675  0000                     # 7195 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1676                           SSPBUF equ 0FC9h ;# 
  1677  0000                     # 7202 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1678                           T2CON equ 0FCAh ;# 
  1679  0000                     # 7300 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1680                           PR2 equ 0FCBh ;# 
  1681  0000                     # 7305 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1682                           MEMCON equ 0FCBh ;# 
  1683  0000                     # 7410 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1684                           TMR2 equ 0FCCh ;# 
  1685  0000                     # 7417 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1686                           T1CON equ 0FCDh ;# 
  1687  0000                     # 7520 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1688                           TMR1 equ 0FCEh ;# 
  1689  0000                     # 7527 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1690                           TMR1L equ 0FCEh ;# 
  1691  0000                     # 7534 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1692                           TMR1H equ 0FCFh ;# 
  1693  0000                     # 7541 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1694                           RCON equ 0FD0h ;# 
  1695  0000                     # 7690 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1696                           WDTCON equ 0FD1h ;# 
  1697  0000                     # 7718 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1698                           HLVDCON equ 0FD2h ;# 
  1699  0000                     # 7723 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1700                           LVDCON equ 0FD2h ;# 
  1701  0000                     # 7988 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1702                           OSCCON equ 0FD3h ;# 
  1703  0000                     # 8071 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1704                           T0CON equ 0FD5h ;# 
  1705  0000                     # 8141 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1706                           TMR0 equ 0FD6h ;# 
  1707  0000                     # 8148 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1708                           TMR0L equ 0FD6h ;# 
  1709  0000                     # 8155 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1710                           TMR0H equ 0FD7h ;# 
  1711  0000                     # 8162 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1712                           STATUS equ 0FD8h ;# 
  1713  0000                     # 8233 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1714                           FSR2 equ 0FD9h ;# 
  1715  0000                     # 8240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1716                           FSR2L equ 0FD9h ;# 
  1717  0000                     # 8247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1718                           FSR2H equ 0FDAh ;# 
  1719  0000                     # 8254 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1720                           PLUSW2 equ 0FDBh ;# 
  1721  0000                     # 8261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1722                           PREINC2 equ 0FDCh ;# 
  1723  0000                     # 8268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1724                           POSTDEC2 equ 0FDDh ;# 
  1725  0000                     # 8275 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1726                           POSTINC2 equ 0FDEh ;# 
  1727  0000                     # 8282 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1728                           INDF2 equ 0FDFh ;# 
  1729  0000                     # 8289 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1730                           BSR equ 0FE0h ;# 
  1731  0000                     # 8296 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1732                           FSR1 equ 0FE1h ;# 
  1733  0000                     # 8303 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1734                           FSR1L equ 0FE1h ;# 
  1735  0000                     # 8310 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1736                           FSR1H equ 0FE2h ;# 
  1737  0000                     # 8317 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1738                           PLUSW1 equ 0FE3h ;# 
  1739  0000                     # 8324 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1740                           PREINC1 equ 0FE4h ;# 
  1741  0000                     # 8331 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1742                           POSTDEC1 equ 0FE5h ;# 
  1743  0000                     # 8338 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1744                           POSTINC1 equ 0FE6h ;# 
  1745  0000                     # 8345 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1746                           INDF1 equ 0FE7h ;# 
  1747  0000                     # 8352 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1748                           WREG equ 0FE8h ;# 
  1749  0000                     # 8359 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1750                           FSR0 equ 0FE9h ;# 
  1751  0000                     # 8366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1752                           FSR0L equ 0FE9h ;# 
  1753  0000                     # 8373 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1754                           FSR0H equ 0FEAh ;# 
  1755  0000                     # 8380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1756                           PLUSW0 equ 0FEBh ;# 
  1757  0000                     # 8387 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1758                           PREINC0 equ 0FECh ;# 
  1759  0000                     # 8394 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1760                           POSTDEC0 equ 0FEDh ;# 
  1761  0000                     # 8401 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1762                           POSTINC0 equ 0FEEh ;# 
  1763  0000                     # 8408 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1764                           INDF0 equ 0FEFh ;# 
  1765  0000                     # 8415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1766                           INTCON3 equ 0FF0h ;# 
  1767  0000                     # 8507 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1768                           INTCON2 equ 0FF1h ;# 
  1769  0000                     # 8584 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1770                           INTCON equ 0FF2h ;# 
  1771  0000                     # 8701 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1772                           PROD equ 0FF3h ;# 
  1773  0000                     # 8708 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1774                           PRODL equ 0FF3h ;# 
  1775  0000                     # 8715 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1776                           PRODH equ 0FF4h ;# 
  1777  0000                     # 8722 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1778                           TABLAT equ 0FF5h ;# 
  1779  0000                     # 8731 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1780                           TBLPTR equ 0FF6h ;# 
  1781  0000                     # 8738 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1782                           TBLPTRL equ 0FF6h ;# 
  1783  0000                     # 8745 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1784                           TBLPTRH equ 0FF7h ;# 
  1785  0000                     # 8752 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1786                           TBLPTRU equ 0FF8h ;# 
  1787  0000                     # 8761 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1788                           PCLAT equ 0FF9h ;# 
  1789  0000                     # 8768 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1790                           PC equ 0FF9h ;# 
  1791  0000                     # 8775 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1792                           PCL equ 0FF9h ;# 
  1793  0000                     # 8782 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1794                           PCLATH equ 0FFAh ;# 
  1795  0000                     # 8789 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1796                           PCLATU equ 0FFBh ;# 
  1797  0000                     # 8796 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1798                           STKPTR equ 0FFCh ;# 
  1799  0000                     # 8872 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1800                           TOS equ 0FFDh ;# 
  1801  0000                     # 8879 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1802                           TOSL equ 0FFDh ;# 
  1803  0000                     # 8886 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1804                           TOSH equ 0FFEh ;# 
  1805  0000                     # 8893 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1806                           TOSU equ 0FFFh ;# 
  1807  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1808                           SPPDATA equ 0F62h ;# 
  1809  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1810                           SPPCFG equ 0F63h ;# 
  1811  0000                     # 151 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1812                           SPPEPS equ 0F64h ;# 
  1813  0000                     # 225 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1814                           SPPCON equ 0F65h ;# 
  1815  0000                     # 251 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1816                           UFRM equ 0F66h ;# 
  1817  0000                     # 258 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1818                           UFRML equ 0F66h ;# 
  1819  0000                     # 336 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1820                           UFRMH equ 0F67h ;# 
  1821  0000                     # 376 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1822                           UIR equ 0F68h ;# 
  1823  0000                     # 432 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1824                           UIE equ 0F69h ;# 
  1825  0000                     # 488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1826                           UEIR equ 0F6Ah ;# 
  1827  0000                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1828                           UEIE equ 0F6Bh ;# 
  1829  0000                     # 590 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1830                           USTAT equ 0F6Ch ;# 
  1831  0000                     # 650 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1832                           UCON equ 0F6Dh ;# 
  1833  0000                     # 701 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1834                           UADDR equ 0F6Eh ;# 
  1835  0000                     # 765 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1836                           UCFG equ 0F6Fh ;# 
  1837  0000                     # 844 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1838                           UEP0 equ 0F70h ;# 
  1839  0000                     # 952 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1840                           UEP1 equ 0F71h ;# 
  1841  0000                     # 1060 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1842                           UEP2 equ 0F72h ;# 
  1843  0000                     # 1168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1844                           UEP3 equ 0F73h ;# 
  1845  0000                     # 1276 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1846                           UEP4 equ 0F74h ;# 
  1847  0000                     # 1384 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1848                           UEP5 equ 0F75h ;# 
  1849  0000                     # 1492 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1850                           UEP6 equ 0F76h ;# 
  1851  0000                     # 1600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1852                           UEP7 equ 0F77h ;# 
  1853  0000                     # 1708 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1854                           UEP8 equ 0F78h ;# 
  1855  0000                     # 1784 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1856                           UEP9 equ 0F79h ;# 
  1857  0000                     # 1860 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1858                           UEP10 equ 0F7Ah ;# 
  1859  0000                     # 1936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1860                           UEP11 equ 0F7Bh ;# 
  1861  0000                     # 2012 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1862                           UEP12 equ 0F7Ch ;# 
  1863  0000                     # 2088 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1864                           UEP13 equ 0F7Dh ;# 
  1865  0000                     # 2164 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1866                           UEP14 equ 0F7Eh ;# 
  1867  0000                     # 2240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1868                           UEP15 equ 0F7Fh ;# 
  1869  0000                     # 2316 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1870                           PORTA equ 0F80h ;# 
  1871  0000                     # 2455 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1872                           PORTB equ 0F81h ;# 
  1873  0000                     # 2565 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1874                           PORTC equ 0F82h ;# 
  1875  0000                     # 2707 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1876                           PORTD equ 0F83h ;# 
  1877  0000                     # 2828 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1878                           PORTE equ 0F84h ;# 
  1879  0000                     # 2975 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1880                           LATA equ 0F89h ;# 
  1881  0000                     # 3075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1882                           LATB equ 0F8Ah ;# 
  1883  0000                     # 3187 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1884                           LATC equ 0F8Bh ;# 
  1885  0000                     # 3265 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1886                           LATD equ 0F8Ch ;# 
  1887  0000                     # 3377 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1888                           LATE equ 0F8Dh ;# 
  1889  0000                     # 3429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1890                           TRISA equ 0F92h ;# 
  1891  0000                     # 3434 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1892                           DDRA equ 0F92h ;# 
  1893  0000                     # 3627 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1894                           TRISB equ 0F93h ;# 
  1895  0000                     # 3632 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1896                           DDRB equ 0F93h ;# 
  1897  0000                     # 3849 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1898                           TRISC equ 0F94h ;# 
  1899  0000                     # 3854 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1900                           DDRC equ 0F94h ;# 
  1901  0000                     # 4003 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1902                           TRISD equ 0F95h ;# 
  1903  0000                     # 4008 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1904                           DDRD equ 0F95h ;# 
  1905  0000                     # 4225 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1906                           TRISE equ 0F96h ;# 
  1907  0000                     # 4230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1908                           DDRE equ 0F96h ;# 
  1909  0000                     # 4327 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1910                           OSCTUNE equ 0F9Bh ;# 
  1911  0000                     # 4386 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1912                           PIE1 equ 0F9Dh ;# 
  1913  0000                     # 4470 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1914                           PIR1 equ 0F9Eh ;# 
  1915  0000                     # 4554 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1916                           IPR1 equ 0F9Fh ;# 
  1917  0000                     # 4638 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1918                           PIE2 equ 0FA0h ;# 
  1919  0000                     # 4709 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1920                           PIR2 equ 0FA1h ;# 
  1921  0000                     # 4780 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1922                           IPR2 equ 0FA2h ;# 
  1923  0000                     # 4851 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1924                           EECON1 equ 0FA6h ;# 
  1925  0000                     # 4917 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1926                           EECON2 equ 0FA7h ;# 
  1927  0000                     # 4924 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1928                           EEDATA equ 0FA8h ;# 
  1929  0000                     # 4931 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1930                           EEADR equ 0FA9h ;# 
  1931  0000                     # 4938 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1932                           RCSTA equ 0FABh ;# 
  1933  0000                     # 4943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1934                           RCSTA1 equ 0FABh ;# 
  1935  0000                     # 5148 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1936                           TXSTA equ 0FACh ;# 
  1937  0000                     # 5153 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1938                           TXSTA1 equ 0FACh ;# 
  1939  0000                     # 5404 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1940                           TXREG equ 0FADh ;# 
  1941  0000                     # 5409 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1942                           TXREG1 equ 0FADh ;# 
  1943  0000                     # 5416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1944                           RCREG equ 0FAEh ;# 
  1945  0000                     # 5421 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1946                           RCREG1 equ 0FAEh ;# 
  1947  0000                     # 5428 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1948                           SPBRG equ 0FAFh ;# 
  1949  0000                     # 5433 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1950                           SPBRG1 equ 0FAFh ;# 
  1951  0000                     # 5440 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1952                           SPBRGH equ 0FB0h ;# 
  1953  0000                     # 5447 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1954                           T3CON equ 0FB1h ;# 
  1955  0000                     # 5568 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1956                           TMR3 equ 0FB2h ;# 
  1957  0000                     # 5575 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1958                           TMR3L equ 0FB2h ;# 
  1959  0000                     # 5582 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1960                           TMR3H equ 0FB3h ;# 
  1961  0000                     # 5589 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1962                           CMCON equ 0FB4h ;# 
  1963  0000                     # 5679 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1964                           CVRCON equ 0FB5h ;# 
  1965  0000                     # 5764 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1966                           ECCP1AS equ 0FB6h ;# 
  1967  0000                     # 5769 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1968                           CCP1AS equ 0FB6h ;# 
  1969  0000                     # 5926 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1970                           ECCP1DEL equ 0FB7h ;# 
  1971  0000                     # 5931 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1972                           CCP1DEL equ 0FB7h ;# 
  1973  0000                     # 6064 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1974                           BAUDCON equ 0FB8h ;# 
  1975  0000                     # 6069 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1976                           BAUDCTL equ 0FB8h ;# 
  1977  0000                     # 6244 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1978                           CCP2CON equ 0FBAh ;# 
  1979  0000                     # 6308 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1980                           CCPR2 equ 0FBBh ;# 
  1981  0000                     # 6315 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1982                           CCPR2L equ 0FBBh ;# 
  1983  0000                     # 6322 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1984                           CCPR2H equ 0FBCh ;# 
  1985  0000                     # 6329 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1986                           CCP1CON equ 0FBDh ;# 
  1987  0000                     # 6334 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1988                           ECCP1CON equ 0FBDh ;# 
  1989  0000                     # 6491 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1990                           CCPR1 equ 0FBEh ;# 
  1991  0000                     # 6498 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1992                           CCPR1L equ 0FBEh ;# 
  1993  0000                     # 6505 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1994                           CCPR1H equ 0FBFh ;# 
  1995  0000                     # 6512 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1996                           ADCON2 equ 0FC0h ;# 
  1997  0000                     # 6583 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1998                           ADCON1 equ 0FC1h ;# 
  1999  0000                     # 6668 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2000                           ADCON0 equ 0FC2h ;# 
  2001  0000                     # 6787 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2002                           ADRES equ 0FC3h ;# 
  2003  0000                     # 6794 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2004                           ADRESL equ 0FC3h ;# 
  2005  0000                     # 6801 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2006                           ADRESH equ 0FC4h ;# 
  2007  0000                     # 6808 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2008                           SSPCON2 equ 0FC5h ;# 
  2009  0000                     # 6870 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2010                           SSPCON1 equ 0FC6h ;# 
  2011  0000                     # 6940 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2012                           SSPSTAT equ 0FC7h ;# 
  2013  0000                     # 7188 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2014                           SSPADD equ 0FC8h ;# 
  2015  0000                     # 7195 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2016                           SSPBUF equ 0FC9h ;# 
  2017  0000                     # 7202 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2018                           T2CON equ 0FCAh ;# 
  2019  0000                     # 7300 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2020                           PR2 equ 0FCBh ;# 
  2021  0000                     # 7305 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2022                           MEMCON equ 0FCBh ;# 
  2023  0000                     # 7410 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2024                           TMR2 equ 0FCCh ;# 
  2025  0000                     # 7417 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2026                           T1CON equ 0FCDh ;# 
  2027  0000                     # 7520 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2028                           TMR1 equ 0FCEh ;# 
  2029  0000                     # 7527 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2030                           TMR1L equ 0FCEh ;# 
  2031  0000                     # 7534 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2032                           TMR1H equ 0FCFh ;# 
  2033  0000                     # 7541 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2034                           RCON equ 0FD0h ;# 
  2035  0000                     # 7690 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2036                           WDTCON equ 0FD1h ;# 
  2037  0000                     # 7718 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2038                           HLVDCON equ 0FD2h ;# 
  2039  0000                     # 7723 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2040                           LVDCON equ 0FD2h ;# 
  2041  0000                     # 7988 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2042                           OSCCON equ 0FD3h ;# 
  2043  0000                     # 8071 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2044                           T0CON equ 0FD5h ;# 
  2045  0000                     # 8141 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2046                           TMR0 equ 0FD6h ;# 
  2047  0000                     # 8148 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2048                           TMR0L equ 0FD6h ;# 
  2049  0000                     # 8155 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2050                           TMR0H equ 0FD7h ;# 
  2051  0000                     # 8162 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2052                           STATUS equ 0FD8h ;# 
  2053  0000                     # 8233 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2054                           FSR2 equ 0FD9h ;# 
  2055  0000                     # 8240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2056                           FSR2L equ 0FD9h ;# 
  2057  0000                     # 8247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2058                           FSR2H equ 0FDAh ;# 
  2059  0000                     # 8254 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2060                           PLUSW2 equ 0FDBh ;# 
  2061  0000                     # 8261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2062                           PREINC2 equ 0FDCh ;# 
  2063  0000                     # 8268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2064                           POSTDEC2 equ 0FDDh ;# 
  2065  0000                     # 8275 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2066                           POSTINC2 equ 0FDEh ;# 
  2067  0000                     # 8282 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2068                           INDF2 equ 0FDFh ;# 
  2069  0000                     # 8289 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2070                           BSR equ 0FE0h ;# 
  2071  0000                     # 8296 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2072                           FSR1 equ 0FE1h ;# 
  2073  0000                     # 8303 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2074                           FSR1L equ 0FE1h ;# 
  2075  0000                     # 8310 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2076                           FSR1H equ 0FE2h ;# 
  2077  0000                     # 8317 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2078                           PLUSW1 equ 0FE3h ;# 
  2079  0000                     # 8324 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2080                           PREINC1 equ 0FE4h ;# 
  2081  0000                     # 8331 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2082                           POSTDEC1 equ 0FE5h ;# 
  2083  0000                     # 8338 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2084                           POSTINC1 equ 0FE6h ;# 
  2085  0000                     # 8345 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2086                           INDF1 equ 0FE7h ;# 
  2087  0000                     # 8352 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2088                           WREG equ 0FE8h ;# 
  2089  0000                     # 8359 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2090                           FSR0 equ 0FE9h ;# 
  2091  0000                     # 8366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2092                           FSR0L equ 0FE9h ;# 
  2093  0000                     # 8373 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2094                           FSR0H equ 0FEAh ;# 
  2095  0000                     # 8380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2096                           PLUSW0 equ 0FEBh ;# 
  2097  0000                     # 8387 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2098                           PREINC0 equ 0FECh ;# 
  2099  0000                     # 8394 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2100                           POSTDEC0 equ 0FEDh ;# 
  2101  0000                     # 8401 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2102                           POSTINC0 equ 0FEEh ;# 
  2103  0000                     # 8408 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2104                           INDF0 equ 0FEFh ;# 
  2105  0000                     # 8415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2106                           INTCON3 equ 0FF0h ;# 
  2107  0000                     # 8507 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2108                           INTCON2 equ 0FF1h ;# 
  2109  0000                     # 8584 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2110                           INTCON equ 0FF2h ;# 
  2111  0000                     # 8701 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2112                           PROD equ 0FF3h ;# 
  2113  0000                     # 8708 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2114                           PRODL equ 0FF3h ;# 
  2115  0000                     # 8715 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2116                           PRODH equ 0FF4h ;# 
  2117  0000                     # 8722 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2118                           TABLAT equ 0FF5h ;# 
  2119  0000                     # 8731 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2120                           TBLPTR equ 0FF6h ;# 
  2121  0000                     # 8738 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2122                           TBLPTRL equ 0FF6h ;# 
  2123  0000                     # 8745 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2124                           TBLPTRH equ 0FF7h ;# 
  2125  0000                     # 8752 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2126                           TBLPTRU equ 0FF8h ;# 
  2127  0000                     # 8761 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2128                           PCLAT equ 0FF9h ;# 
  2129  0000                     # 8768 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2130                           PC equ 0FF9h ;# 
  2131  0000                     # 8775 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2132                           PCL equ 0FF9h ;# 
  2133  0000                     # 8782 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2134                           PCLATH equ 0FFAh ;# 
  2135  0000                     # 8789 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2136                           PCLATU equ 0FFBh ;# 
  2137  0000                     # 8796 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2138                           STKPTR equ 0FFCh ;# 
  2139  0000                     # 8872 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2140                           TOS equ 0FFDh ;# 
  2141  0000                     # 8879 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2142                           TOSL equ 0FFDh ;# 
  2143  0000                     # 8886 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2144                           TOSH equ 0FFEh ;# 
  2145  0000                     # 8893 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2146                           TOSU equ 0FFFh ;# 
  2147  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2148                           SPPDATA equ 0F62h ;# 
  2149  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2150                           SPPCFG equ 0F63h ;# 
  2151  0000                     # 151 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2152                           SPPEPS equ 0F64h ;# 
  2153  0000                     # 225 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2154                           SPPCON equ 0F65h ;# 
  2155  0000                     # 251 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2156                           UFRM equ 0F66h ;# 
  2157  0000                     # 258 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2158                           UFRML equ 0F66h ;# 
  2159  0000                     # 336 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2160                           UFRMH equ 0F67h ;# 
  2161  0000                     # 376 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2162                           UIR equ 0F68h ;# 
  2163  0000                     # 432 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2164                           UIE equ 0F69h ;# 
  2165  0000                     # 488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2166                           UEIR equ 0F6Ah ;# 
  2167  0000                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2168                           UEIE equ 0F6Bh ;# 
  2169  0000                     # 590 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2170                           USTAT equ 0F6Ch ;# 
  2171  0000                     # 650 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2172                           UCON equ 0F6Dh ;# 
  2173  0000                     # 701 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2174                           UADDR equ 0F6Eh ;# 
  2175  0000                     # 765 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2176                           UCFG equ 0F6Fh ;# 
  2177  0000                     # 844 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2178                           UEP0 equ 0F70h ;# 
  2179  0000                     # 952 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2180                           UEP1 equ 0F71h ;# 
  2181  0000                     # 1060 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2182                           UEP2 equ 0F72h ;# 
  2183  0000                     # 1168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2184                           UEP3 equ 0F73h ;# 
  2185  0000                     # 1276 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2186                           UEP4 equ 0F74h ;# 
  2187  0000                     # 1384 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2188                           UEP5 equ 0F75h ;# 
  2189  0000                     # 1492 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2190                           UEP6 equ 0F76h ;# 
  2191  0000                     # 1600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2192                           UEP7 equ 0F77h ;# 
  2193  0000                     # 1708 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2194                           UEP8 equ 0F78h ;# 
  2195  0000                     # 1784 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2196                           UEP9 equ 0F79h ;# 
  2197  0000                     # 1860 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2198                           UEP10 equ 0F7Ah ;# 
  2199  0000                     # 1936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2200                           UEP11 equ 0F7Bh ;# 
  2201  0000                     # 2012 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2202                           UEP12 equ 0F7Ch ;# 
  2203  0000                     # 2088 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2204                           UEP13 equ 0F7Dh ;# 
  2205  0000                     # 2164 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2206                           UEP14 equ 0F7Eh ;# 
  2207  0000                     # 2240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2208                           UEP15 equ 0F7Fh ;# 
  2209  0000                     # 2316 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2210                           PORTA equ 0F80h ;# 
  2211  0000                     # 2455 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2212                           PORTB equ 0F81h ;# 
  2213  0000                     # 2565 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2214                           PORTC equ 0F82h ;# 
  2215  0000                     # 2707 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2216                           PORTD equ 0F83h ;# 
  2217  0000                     # 2828 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2218                           PORTE equ 0F84h ;# 
  2219  0000                     # 2975 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2220                           LATA equ 0F89h ;# 
  2221  0000                     # 3075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2222                           LATB equ 0F8Ah ;# 
  2223  0000                     # 3187 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2224                           LATC equ 0F8Bh ;# 
  2225  0000                     # 3265 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2226                           LATD equ 0F8Ch ;# 
  2227  0000                     # 3377 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2228                           LATE equ 0F8Dh ;# 
  2229  0000                     # 3429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2230                           TRISA equ 0F92h ;# 
  2231  0000                     # 3434 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2232                           DDRA equ 0F92h ;# 
  2233  0000                     # 3627 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2234                           TRISB equ 0F93h ;# 
  2235  0000                     # 3632 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2236                           DDRB equ 0F93h ;# 
  2237  0000                     # 3849 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2238                           TRISC equ 0F94h ;# 
  2239  0000                     # 3854 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2240                           DDRC equ 0F94h ;# 
  2241  0000                     # 4003 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2242                           TRISD equ 0F95h ;# 
  2243  0000                     # 4008 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2244                           DDRD equ 0F95h ;# 
  2245  0000                     # 4225 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2246                           TRISE equ 0F96h ;# 
  2247  0000                     # 4230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2248                           DDRE equ 0F96h ;# 
  2249  0000                     # 4327 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2250                           OSCTUNE equ 0F9Bh ;# 
  2251  0000                     # 4386 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2252                           PIE1 equ 0F9Dh ;# 
  2253  0000                     # 4470 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2254                           PIR1 equ 0F9Eh ;# 
  2255  0000                     # 4554 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2256                           IPR1 equ 0F9Fh ;# 
  2257  0000                     # 4638 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2258                           PIE2 equ 0FA0h ;# 
  2259  0000                     # 4709 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2260                           PIR2 equ 0FA1h ;# 
  2261  0000                     # 4780 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2262                           IPR2 equ 0FA2h ;# 
  2263  0000                     # 4851 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2264                           EECON1 equ 0FA6h ;# 
  2265  0000                     # 4917 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2266                           EECON2 equ 0FA7h ;# 
  2267  0000                     # 4924 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2268                           EEDATA equ 0FA8h ;# 
  2269  0000                     # 4931 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2270                           EEADR equ 0FA9h ;# 
  2271  0000                     # 4938 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2272                           RCSTA equ 0FABh ;# 
  2273  0000                     # 4943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2274                           RCSTA1 equ 0FABh ;# 
  2275  0000                     # 5148 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2276                           TXSTA equ 0FACh ;# 
  2277  0000                     # 5153 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2278                           TXSTA1 equ 0FACh ;# 
  2279  0000                     # 5404 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2280                           TXREG equ 0FADh ;# 
  2281  0000                     # 5409 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2282                           TXREG1 equ 0FADh ;# 
  2283  0000                     # 5416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2284                           RCREG equ 0FAEh ;# 
  2285  0000                     # 5421 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2286                           RCREG1 equ 0FAEh ;# 
  2287  0000                     # 5428 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2288                           SPBRG equ 0FAFh ;# 
  2289  0000                     # 5433 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2290                           SPBRG1 equ 0FAFh ;# 
  2291  0000                     # 5440 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2292                           SPBRGH equ 0FB0h ;# 
  2293  0000                     # 5447 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2294                           T3CON equ 0FB1h ;# 
  2295  0000                     # 5568 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2296                           TMR3 equ 0FB2h ;# 
  2297  0000                     # 5575 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2298                           TMR3L equ 0FB2h ;# 
  2299  0000                     # 5582 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2300                           TMR3H equ 0FB3h ;# 
  2301  0000                     # 5589 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2302                           CMCON equ 0FB4h ;# 
  2303  0000                     # 5679 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2304                           CVRCON equ 0FB5h ;# 
  2305  0000                     # 5764 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2306                           ECCP1AS equ 0FB6h ;# 
  2307  0000                     # 5769 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2308                           CCP1AS equ 0FB6h ;# 
  2309  0000                     # 5926 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2310                           ECCP1DEL equ 0FB7h ;# 
  2311  0000                     # 5931 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2312                           CCP1DEL equ 0FB7h ;# 
  2313  0000                     # 6064 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2314                           BAUDCON equ 0FB8h ;# 
  2315  0000                     # 6069 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2316                           BAUDCTL equ 0FB8h ;# 
  2317  0000                     # 6244 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2318                           CCP2CON equ 0FBAh ;# 
  2319  0000                     # 6308 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2320                           CCPR2 equ 0FBBh ;# 
  2321  0000                     # 6315 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2322                           CCPR2L equ 0FBBh ;# 
  2323  0000                     # 6322 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2324                           CCPR2H equ 0FBCh ;# 
  2325  0000                     # 6329 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2326                           CCP1CON equ 0FBDh ;# 
  2327  0000                     # 6334 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2328                           ECCP1CON equ 0FBDh ;# 
  2329  0000                     # 6491 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2330                           CCPR1 equ 0FBEh ;# 
  2331  0000                     # 6498 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2332                           CCPR1L equ 0FBEh ;# 
  2333  0000                     # 6505 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2334                           CCPR1H equ 0FBFh ;# 
  2335  0000                     # 6512 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2336                           ADCON2 equ 0FC0h ;# 
  2337  0000                     # 6583 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2338                           ADCON1 equ 0FC1h ;# 
  2339  0000                     # 6668 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2340                           ADCON0 equ 0FC2h ;# 
  2341  0000                     # 6787 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2342                           ADRES equ 0FC3h ;# 
  2343  0000                     # 6794 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2344                           ADRESL equ 0FC3h ;# 
  2345  0000                     # 6801 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2346                           ADRESH equ 0FC4h ;# 
  2347  0000                     # 6808 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2348                           SSPCON2 equ 0FC5h ;# 
  2349  0000                     # 6870 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2350                           SSPCON1 equ 0FC6h ;# 
  2351  0000                     # 6940 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2352                           SSPSTAT equ 0FC7h ;# 
  2353  0000                     # 7188 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2354                           SSPADD equ 0FC8h ;# 
  2355  0000                     # 7195 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2356                           SSPBUF equ 0FC9h ;# 
  2357  0000                     # 7202 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2358                           T2CON equ 0FCAh ;# 
  2359  0000                     # 7300 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2360                           PR2 equ 0FCBh ;# 
  2361  0000                     # 7305 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2362                           MEMCON equ 0FCBh ;# 
  2363  0000                     # 7410 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2364                           TMR2 equ 0FCCh ;# 
  2365  0000                     # 7417 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2366                           T1CON equ 0FCDh ;# 
  2367  0000                     # 7520 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2368                           TMR1 equ 0FCEh ;# 
  2369  0000                     # 7527 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2370                           TMR1L equ 0FCEh ;# 
  2371  0000                     # 7534 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2372                           TMR1H equ 0FCFh ;# 
  2373  0000                     # 7541 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2374                           RCON equ 0FD0h ;# 
  2375  0000                     # 7690 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2376                           WDTCON equ 0FD1h ;# 
  2377  0000                     # 7718 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2378                           HLVDCON equ 0FD2h ;# 
  2379  0000                     # 7723 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2380                           LVDCON equ 0FD2h ;# 
  2381  0000                     # 7988 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2382                           OSCCON equ 0FD3h ;# 
  2383  0000                     # 8071 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2384                           T0CON equ 0FD5h ;# 
  2385  0000                     # 8141 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2386                           TMR0 equ 0FD6h ;# 
  2387  0000                     # 8148 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2388                           TMR0L equ 0FD6h ;# 
  2389  0000                     # 8155 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2390                           TMR0H equ 0FD7h ;# 
  2391  0000                     # 8162 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2392                           STATUS equ 0FD8h ;# 
  2393  0000                     # 8233 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2394                           FSR2 equ 0FD9h ;# 
  2395  0000                     # 8240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2396                           FSR2L equ 0FD9h ;# 
  2397  0000                     # 8247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2398                           FSR2H equ 0FDAh ;# 
  2399  0000                     # 8254 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2400                           PLUSW2 equ 0FDBh ;# 
  2401  0000                     # 8261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2402                           PREINC2 equ 0FDCh ;# 
  2403  0000                     # 8268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2404                           POSTDEC2 equ 0FDDh ;# 
  2405  0000                     # 8275 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2406                           POSTINC2 equ 0FDEh ;# 
  2407  0000                     # 8282 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2408                           INDF2 equ 0FDFh ;# 
  2409  0000                     # 8289 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2410                           BSR equ 0FE0h ;# 
  2411  0000                     # 8296 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2412                           FSR1 equ 0FE1h ;# 
  2413  0000                     # 8303 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2414                           FSR1L equ 0FE1h ;# 
  2415  0000                     # 8310 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2416                           FSR1H equ 0FE2h ;# 
  2417  0000                     # 8317 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2418                           PLUSW1 equ 0FE3h ;# 
  2419  0000                     # 8324 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2420                           PREINC1 equ 0FE4h ;# 
  2421  0000                     # 8331 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2422                           POSTDEC1 equ 0FE5h ;# 
  2423  0000                     # 8338 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2424                           POSTINC1 equ 0FE6h ;# 
  2425  0000                     # 8345 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2426                           INDF1 equ 0FE7h ;# 
  2427  0000                     # 8352 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2428                           WREG equ 0FE8h ;# 
  2429  0000                     # 8359 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2430                           FSR0 equ 0FE9h ;# 
  2431  0000                     # 8366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2432                           FSR0L equ 0FE9h ;# 
  2433  0000                     # 8373 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2434                           FSR0H equ 0FEAh ;# 
  2435  0000                     # 8380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2436                           PLUSW0 equ 0FEBh ;# 
  2437  0000                     # 8387 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2438                           PREINC0 equ 0FECh ;# 
  2439  0000                     # 8394 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2440                           POSTDEC0 equ 0FEDh ;# 
  2441  0000                     # 8401 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2442                           POSTINC0 equ 0FEEh ;# 
  2443  0000                     # 8408 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2444                           INDF0 equ 0FEFh ;# 
  2445  0000                     # 8415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2446                           INTCON3 equ 0FF0h ;# 
  2447  0000                     # 8507 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2448                           INTCON2 equ 0FF1h ;# 
  2449  0000                     # 8584 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2450                           INTCON equ 0FF2h ;# 
  2451  0000                     # 8701 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2452                           PROD equ 0FF3h ;# 
  2453  0000                     # 8708 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2454                           PRODL equ 0FF3h ;# 
  2455  0000                     # 8715 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2456                           PRODH equ 0FF4h ;# 
  2457  0000                     # 8722 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2458                           TABLAT equ 0FF5h ;# 
  2459  0000                     # 8731 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2460                           TBLPTR equ 0FF6h ;# 
  2461  0000                     # 8738 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2462                           TBLPTRL equ 0FF6h ;# 
  2463  0000                     # 8745 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2464                           TBLPTRH equ 0FF7h ;# 
  2465  0000                     # 8752 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2466                           TBLPTRU equ 0FF8h ;# 
  2467  0000                     # 8761 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2468                           PCLAT equ 0FF9h ;# 
  2469  0000                     # 8768 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2470                           PC equ 0FF9h ;# 
  2471  0000                     # 8775 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2472                           PCL equ 0FF9h ;# 
  2473  0000                     # 8782 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2474                           PCLATH equ 0FFAh ;# 
  2475  0000                     # 8789 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2476                           PCLATU equ 0FFBh ;# 
  2477  0000                     # 8796 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2478                           STKPTR equ 0FFCh ;# 
  2479  0000                     # 8872 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2480                           TOS equ 0FFDh ;# 
  2481  0000                     # 8879 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2482                           TOSL equ 0FFDh ;# 
  2483  0000                     # 8886 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2484                           TOSH equ 0FFEh ;# 
  2485  0000                     # 8893 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2486                           TOSU equ 0FFFh ;# 
  2487  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2488                           SPPDATA equ 0F62h ;# 
  2489  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2490                           SPPCFG equ 0F63h ;# 
  2491  0000                     # 151 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2492                           SPPEPS equ 0F64h ;# 
  2493  0000                     # 225 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2494                           SPPCON equ 0F65h ;# 
  2495  0000                     # 251 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2496                           UFRM equ 0F66h ;# 
  2497  0000                     # 258 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2498                           UFRML equ 0F66h ;# 
  2499  0000                     # 336 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2500                           UFRMH equ 0F67h ;# 
  2501  0000                     # 376 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2502                           UIR equ 0F68h ;# 
  2503  0000                     # 432 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2504                           UIE equ 0F69h ;# 
  2505  0000                     # 488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2506                           UEIR equ 0F6Ah ;# 
  2507  0000                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2508                           UEIE equ 0F6Bh ;# 
  2509  0000                     # 590 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2510                           USTAT equ 0F6Ch ;# 
  2511  0000                     # 650 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2512                           UCON equ 0F6Dh ;# 
  2513  0000                     # 701 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2514                           UADDR equ 0F6Eh ;# 
  2515  0000                     # 765 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2516                           UCFG equ 0F6Fh ;# 
  2517  0000                     # 844 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2518                           UEP0 equ 0F70h ;# 
  2519  0000                     # 952 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2520                           UEP1 equ 0F71h ;# 
  2521  0000                     # 1060 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2522                           UEP2 equ 0F72h ;# 
  2523  0000                     # 1168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2524                           UEP3 equ 0F73h ;# 
  2525  0000                     # 1276 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2526                           UEP4 equ 0F74h ;# 
  2527  0000                     # 1384 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2528                           UEP5 equ 0F75h ;# 
  2529  0000                     # 1492 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2530                           UEP6 equ 0F76h ;# 
  2531  0000                     # 1600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2532                           UEP7 equ 0F77h ;# 
  2533  0000                     # 1708 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2534                           UEP8 equ 0F78h ;# 
  2535  0000                     # 1784 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2536                           UEP9 equ 0F79h ;# 
  2537  0000                     # 1860 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2538                           UEP10 equ 0F7Ah ;# 
  2539  0000                     # 1936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2540                           UEP11 equ 0F7Bh ;# 
  2541  0000                     # 2012 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2542                           UEP12 equ 0F7Ch ;# 
  2543  0000                     # 2088 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2544                           UEP13 equ 0F7Dh ;# 
  2545  0000                     # 2164 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2546                           UEP14 equ 0F7Eh ;# 
  2547  0000                     # 2240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2548                           UEP15 equ 0F7Fh ;# 
  2549  0000                     # 2316 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2550                           PORTA equ 0F80h ;# 
  2551  0000                     # 2455 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2552                           PORTB equ 0F81h ;# 
  2553  0000                     # 2565 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2554                           PORTC equ 0F82h ;# 
  2555  0000                     # 2707 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2556                           PORTD equ 0F83h ;# 
  2557  0000                     # 2828 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2558                           PORTE equ 0F84h ;# 
  2559  0000                     # 2975 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2560                           LATA equ 0F89h ;# 
  2561  0000                     # 3075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2562                           LATB equ 0F8Ah ;# 
  2563  0000                     # 3187 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2564                           LATC equ 0F8Bh ;# 
  2565  0000                     # 3265 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2566                           LATD equ 0F8Ch ;# 
  2567  0000                     # 3377 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2568                           LATE equ 0F8Dh ;# 
  2569  0000                     # 3429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2570                           TRISA equ 0F92h ;# 
  2571  0000                     # 3434 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2572                           DDRA equ 0F92h ;# 
  2573  0000                     # 3627 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2574                           TRISB equ 0F93h ;# 
  2575  0000                     # 3632 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2576                           DDRB equ 0F93h ;# 
  2577  0000                     # 3849 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2578                           TRISC equ 0F94h ;# 
  2579  0000                     # 3854 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2580                           DDRC equ 0F94h ;# 
  2581  0000                     # 4003 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2582                           TRISD equ 0F95h ;# 
  2583  0000                     # 4008 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2584                           DDRD equ 0F95h ;# 
  2585  0000                     # 4225 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2586                           TRISE equ 0F96h ;# 
  2587  0000                     # 4230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2588                           DDRE equ 0F96h ;# 
  2589  0000                     # 4327 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2590                           OSCTUNE equ 0F9Bh ;# 
  2591  0000                     # 4386 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2592                           PIE1 equ 0F9Dh ;# 
  2593  0000                     # 4470 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2594                           PIR1 equ 0F9Eh ;# 
  2595  0000                     # 4554 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2596                           IPR1 equ 0F9Fh ;# 
  2597  0000                     # 4638 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2598                           PIE2 equ 0FA0h ;# 
  2599  0000                     # 4709 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2600                           PIR2 equ 0FA1h ;# 
  2601  0000                     # 4780 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2602                           IPR2 equ 0FA2h ;# 
  2603  0000                     # 4851 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2604                           EECON1 equ 0FA6h ;# 
  2605  0000                     # 4917 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2606                           EECON2 equ 0FA7h ;# 
  2607  0000                     # 4924 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2608                           EEDATA equ 0FA8h ;# 
  2609  0000                     # 4931 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2610                           EEADR equ 0FA9h ;# 
  2611  0000                     # 4938 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2612                           RCSTA equ 0FABh ;# 
  2613  0000                     # 4943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2614                           RCSTA1 equ 0FABh ;# 
  2615  0000                     # 5148 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2616                           TXSTA equ 0FACh ;# 
  2617  0000                     # 5153 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2618                           TXSTA1 equ 0FACh ;# 
  2619  0000                     # 5404 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2620                           TXREG equ 0FADh ;# 
  2621  0000                     # 5409 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2622                           TXREG1 equ 0FADh ;# 
  2623  0000                     # 5416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2624                           RCREG equ 0FAEh ;# 
  2625  0000                     # 5421 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2626                           RCREG1 equ 0FAEh ;# 
  2627  0000                     # 5428 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2628                           SPBRG equ 0FAFh ;# 
  2629  0000                     # 5433 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2630                           SPBRG1 equ 0FAFh ;# 
  2631  0000                     # 5440 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2632                           SPBRGH equ 0FB0h ;# 
  2633  0000                     # 5447 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2634                           T3CON equ 0FB1h ;# 
  2635  0000                     # 5568 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2636                           TMR3 equ 0FB2h ;# 
  2637  0000                     # 5575 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2638                           TMR3L equ 0FB2h ;# 
  2639  0000                     # 5582 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2640                           TMR3H equ 0FB3h ;# 
  2641  0000                     # 5589 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2642                           CMCON equ 0FB4h ;# 
  2643  0000                     # 5679 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2644                           CVRCON equ 0FB5h ;# 
  2645  0000                     # 5764 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2646                           ECCP1AS equ 0FB6h ;# 
  2647  0000                     # 5769 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2648                           CCP1AS equ 0FB6h ;# 
  2649  0000                     # 5926 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2650                           ECCP1DEL equ 0FB7h ;# 
  2651  0000                     # 5931 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2652                           CCP1DEL equ 0FB7h ;# 
  2653  0000                     # 6064 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2654                           BAUDCON equ 0FB8h ;# 
  2655  0000                     # 6069 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2656                           BAUDCTL equ 0FB8h ;# 
  2657  0000                     # 6244 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2658                           CCP2CON equ 0FBAh ;# 
  2659  0000                     # 6308 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2660                           CCPR2 equ 0FBBh ;# 
  2661  0000                     # 6315 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2662                           CCPR2L equ 0FBBh ;# 
  2663  0000                     # 6322 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2664                           CCPR2H equ 0FBCh ;# 
  2665  0000                     # 6329 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2666                           CCP1CON equ 0FBDh ;# 
  2667  0000                     # 6334 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2668                           ECCP1CON equ 0FBDh ;# 
  2669  0000                     # 6491 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2670                           CCPR1 equ 0FBEh ;# 
  2671  0000                     # 6498 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2672                           CCPR1L equ 0FBEh ;# 
  2673  0000                     # 6505 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2674                           CCPR1H equ 0FBFh ;# 
  2675  0000                     # 6512 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2676                           ADCON2 equ 0FC0h ;# 
  2677  0000                     # 6583 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2678                           ADCON1 equ 0FC1h ;# 
  2679  0000                     # 6668 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2680                           ADCON0 equ 0FC2h ;# 
  2681  0000                     # 6787 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2682                           ADRES equ 0FC3h ;# 
  2683  0000                     # 6794 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2684                           ADRESL equ 0FC3h ;# 
  2685  0000                     # 6801 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2686                           ADRESH equ 0FC4h ;# 
  2687  0000                     # 6808 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2688                           SSPCON2 equ 0FC5h ;# 
  2689  0000                     # 6870 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2690                           SSPCON1 equ 0FC6h ;# 
  2691  0000                     # 6940 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2692                           SSPSTAT equ 0FC7h ;# 
  2693  0000                     # 7188 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2694                           SSPADD equ 0FC8h ;# 
  2695  0000                     # 7195 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2696                           SSPBUF equ 0FC9h ;# 
  2697  0000                     # 7202 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2698                           T2CON equ 0FCAh ;# 
  2699  0000                     # 7300 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2700                           PR2 equ 0FCBh ;# 
  2701  0000                     # 7305 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2702                           MEMCON equ 0FCBh ;# 
  2703  0000                     # 7410 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2704                           TMR2 equ 0FCCh ;# 
  2705  0000                     # 7417 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2706                           T1CON equ 0FCDh ;# 
  2707  0000                     # 7520 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2708                           TMR1 equ 0FCEh ;# 
  2709  0000                     # 7527 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2710                           TMR1L equ 0FCEh ;# 
  2711  0000                     # 7534 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2712                           TMR1H equ 0FCFh ;# 
  2713  0000                     # 7541 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2714                           RCON equ 0FD0h ;# 
  2715  0000                     # 7690 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2716                           WDTCON equ 0FD1h ;# 
  2717  0000                     # 7718 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2718                           HLVDCON equ 0FD2h ;# 
  2719  0000                     # 7723 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2720                           LVDCON equ 0FD2h ;# 
  2721  0000                     # 7988 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2722                           OSCCON equ 0FD3h ;# 
  2723  0000                     # 8071 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2724                           T0CON equ 0FD5h ;# 
  2725  0000                     # 8141 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2726                           TMR0 equ 0FD6h ;# 
  2727  0000                     # 8148 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2728                           TMR0L equ 0FD6h ;# 
  2729  0000                     # 8155 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2730                           TMR0H equ 0FD7h ;# 
  2731  0000                     # 8162 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2732                           STATUS equ 0FD8h ;# 
  2733  0000                     # 8233 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2734                           FSR2 equ 0FD9h ;# 
  2735  0000                     # 8240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2736                           FSR2L equ 0FD9h ;# 
  2737  0000                     # 8247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2738                           FSR2H equ 0FDAh ;# 
  2739  0000                     # 8254 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2740                           PLUSW2 equ 0FDBh ;# 
  2741  0000                     # 8261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2742                           PREINC2 equ 0FDCh ;# 
  2743  0000                     # 8268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2744                           POSTDEC2 equ 0FDDh ;# 
  2745  0000                     # 8275 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2746                           POSTINC2 equ 0FDEh ;# 
  2747  0000                     # 8282 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2748                           INDF2 equ 0FDFh ;# 
  2749  0000                     # 8289 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2750                           BSR equ 0FE0h ;# 
  2751  0000                     # 8296 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2752                           FSR1 equ 0FE1h ;# 
  2753  0000                     # 8303 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2754                           FSR1L equ 0FE1h ;# 
  2755  0000                     # 8310 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2756                           FSR1H equ 0FE2h ;# 
  2757  0000                     # 8317 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2758                           PLUSW1 equ 0FE3h ;# 
  2759  0000                     # 8324 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2760                           PREINC1 equ 0FE4h ;# 
  2761  0000                     # 8331 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2762                           POSTDEC1 equ 0FE5h ;# 
  2763  0000                     # 8338 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2764                           POSTINC1 equ 0FE6h ;# 
  2765  0000                     # 8345 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2766                           INDF1 equ 0FE7h ;# 
  2767  0000                     # 8352 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2768                           WREG equ 0FE8h ;# 
  2769  0000                     # 8359 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2770                           FSR0 equ 0FE9h ;# 
  2771  0000                     # 8366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2772                           FSR0L equ 0FE9h ;# 
  2773  0000                     # 8373 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2774                           FSR0H equ 0FEAh ;# 
  2775  0000                     # 8380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2776                           PLUSW0 equ 0FEBh ;# 
  2777  0000                     # 8387 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2778                           PREINC0 equ 0FECh ;# 
  2779  0000                     # 8394 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2780                           POSTDEC0 equ 0FEDh ;# 
  2781  0000                     # 8401 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2782                           POSTINC0 equ 0FEEh ;# 
  2783  0000                     # 8408 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2784                           INDF0 equ 0FEFh ;# 
  2785  0000                     # 8415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2786                           INTCON3 equ 0FF0h ;# 
  2787  0000                     # 8507 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2788                           INTCON2 equ 0FF1h ;# 
  2789  0000                     # 8584 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2790                           INTCON equ 0FF2h ;# 
  2791  0000                     # 8701 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2792                           PROD equ 0FF3h ;# 
  2793  0000                     # 8708 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2794                           PRODL equ 0FF3h ;# 
  2795  0000                     # 8715 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2796                           PRODH equ 0FF4h ;# 
  2797  0000                     # 8722 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2798                           TABLAT equ 0FF5h ;# 
  2799  0000                     # 8731 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2800                           TBLPTR equ 0FF6h ;# 
  2801  0000                     # 8738 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2802                           TBLPTRL equ 0FF6h ;# 
  2803  0000                     # 8745 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2804                           TBLPTRH equ 0FF7h ;# 
  2805  0000                     # 8752 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2806                           TBLPTRU equ 0FF8h ;# 
  2807  0000                     # 8761 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2808                           PCLAT equ 0FF9h ;# 
  2809  0000                     # 8768 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2810                           PC equ 0FF9h ;# 
  2811  0000                     # 8775 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2812                           PCL equ 0FF9h ;# 
  2813  0000                     # 8782 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2814                           PCLATH equ 0FFAh ;# 
  2815  0000                     # 8789 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2816                           PCLATU equ 0FFBh ;# 
  2817  0000                     # 8796 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2818                           STKPTR equ 0FFCh ;# 
  2819  0000                     # 8872 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2820                           TOS equ 0FFDh ;# 
  2821  0000                     # 8879 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2822                           TOSL equ 0FFDh ;# 
  2823  0000                     # 8886 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2824                           TOSH equ 0FFEh ;# 
  2825  0000                     # 8893 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2826                           TOSU equ 0FFFh ;# 
  2827  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2828                           SPPDATA equ 0F62h ;# 
  2829  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2830                           SPPCFG equ 0F63h ;# 
  2831  0000                     # 151 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2832                           SPPEPS equ 0F64h ;# 
  2833  0000                     # 225 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2834                           SPPCON equ 0F65h ;# 
  2835  0000                     # 251 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2836                           UFRM equ 0F66h ;# 
  2837  0000                     # 258 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2838                           UFRML equ 0F66h ;# 
  2839  0000                     # 336 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2840                           UFRMH equ 0F67h ;# 
  2841  0000                     # 376 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2842                           UIR equ 0F68h ;# 
  2843  0000                     # 432 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2844                           UIE equ 0F69h ;# 
  2845  0000                     # 488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2846                           UEIR equ 0F6Ah ;# 
  2847  0000                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2848                           UEIE equ 0F6Bh ;# 
  2849  0000                     # 590 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2850                           USTAT equ 0F6Ch ;# 
  2851  0000                     # 650 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2852                           UCON equ 0F6Dh ;# 
  2853  0000                     # 701 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2854                           UADDR equ 0F6Eh ;# 
  2855  0000                     # 765 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2856                           UCFG equ 0F6Fh ;# 
  2857  0000                     # 844 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2858                           UEP0 equ 0F70h ;# 
  2859  0000                     # 952 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2860                           UEP1 equ 0F71h ;# 
  2861  0000                     # 1060 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2862                           UEP2 equ 0F72h ;# 
  2863  0000                     # 1168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2864                           UEP3 equ 0F73h ;# 
  2865  0000                     # 1276 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2866                           UEP4 equ 0F74h ;# 
  2867  0000                     # 1384 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2868                           UEP5 equ 0F75h ;# 
  2869  0000                     # 1492 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2870                           UEP6 equ 0F76h ;# 
  2871  0000                     # 1600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2872                           UEP7 equ 0F77h ;# 
  2873  0000                     # 1708 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2874                           UEP8 equ 0F78h ;# 
  2875  0000                     # 1784 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2876                           UEP9 equ 0F79h ;# 
  2877  0000                     # 1860 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2878                           UEP10 equ 0F7Ah ;# 
  2879  0000                     # 1936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2880                           UEP11 equ 0F7Bh ;# 
  2881  0000                     # 2012 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2882                           UEP12 equ 0F7Ch ;# 
  2883  0000                     # 2088 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2884                           UEP13 equ 0F7Dh ;# 
  2885  0000                     # 2164 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2886                           UEP14 equ 0F7Eh ;# 
  2887  0000                     # 2240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2888                           UEP15 equ 0F7Fh ;# 
  2889  0000                     # 2316 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2890                           PORTA equ 0F80h ;# 
  2891  0000                     # 2455 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2892                           PORTB equ 0F81h ;# 
  2893  0000                     # 2565 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2894                           PORTC equ 0F82h ;# 
  2895  0000                     # 2707 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2896                           PORTD equ 0F83h ;# 
  2897  0000                     # 2828 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2898                           PORTE equ 0F84h ;# 
  2899  0000                     # 2975 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2900                           LATA equ 0F89h ;# 
  2901  0000                     # 3075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2902                           LATB equ 0F8Ah ;# 
  2903  0000                     # 3187 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2904                           LATC equ 0F8Bh ;# 
  2905  0000                     # 3265 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2906                           LATD equ 0F8Ch ;# 
  2907  0000                     # 3377 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2908                           LATE equ 0F8Dh ;# 
  2909  0000                     # 3429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2910                           TRISA equ 0F92h ;# 
  2911  0000                     # 3434 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2912                           DDRA equ 0F92h ;# 
  2913  0000                     # 3627 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2914                           TRISB equ 0F93h ;# 
  2915  0000                     # 3632 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2916                           DDRB equ 0F93h ;# 
  2917  0000                     # 3849 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2918                           TRISC equ 0F94h ;# 
  2919  0000                     # 3854 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2920                           DDRC equ 0F94h ;# 
  2921  0000                     # 4003 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2922                           TRISD equ 0F95h ;# 
  2923  0000                     # 4008 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2924                           DDRD equ 0F95h ;# 
  2925  0000                     # 4225 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2926                           TRISE equ 0F96h ;# 
  2927  0000                     # 4230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2928                           DDRE equ 0F96h ;# 
  2929  0000                     # 4327 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2930                           OSCTUNE equ 0F9Bh ;# 
  2931  0000                     # 4386 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2932                           PIE1 equ 0F9Dh ;# 
  2933  0000                     # 4470 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2934                           PIR1 equ 0F9Eh ;# 
  2935  0000                     # 4554 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2936                           IPR1 equ 0F9Fh ;# 
  2937  0000                     # 4638 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2938                           PIE2 equ 0FA0h ;# 
  2939  0000                     # 4709 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2940                           PIR2 equ 0FA1h ;# 
  2941  0000                     # 4780 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2942                           IPR2 equ 0FA2h ;# 
  2943  0000                     # 4851 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2944                           EECON1 equ 0FA6h ;# 
  2945  0000                     # 4917 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2946                           EECON2 equ 0FA7h ;# 
  2947  0000                     # 4924 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2948                           EEDATA equ 0FA8h ;# 
  2949  0000                     # 4931 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2950                           EEADR equ 0FA9h ;# 
  2951  0000                     # 4938 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2952                           RCSTA equ 0FABh ;# 
  2953  0000                     # 4943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2954                           RCSTA1 equ 0FABh ;# 
  2955  0000                     # 5148 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2956                           TXSTA equ 0FACh ;# 
  2957  0000                     # 5153 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2958                           TXSTA1 equ 0FACh ;# 
  2959  0000                     # 5404 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2960                           TXREG equ 0FADh ;# 
  2961  0000                     # 5409 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2962                           TXREG1 equ 0FADh ;# 
  2963  0000                     # 5416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2964                           RCREG equ 0FAEh ;# 
  2965  0000                     # 5421 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2966                           RCREG1 equ 0FAEh ;# 
  2967  0000                     # 5428 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2968                           SPBRG equ 0FAFh ;# 
  2969  0000                     # 5433 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2970                           SPBRG1 equ 0FAFh ;# 
  2971  0000                     # 5440 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2972                           SPBRGH equ 0FB0h ;# 
  2973  0000                     # 5447 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2974                           T3CON equ 0FB1h ;# 
  2975  0000                     # 5568 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2976                           TMR3 equ 0FB2h ;# 
  2977  0000                     # 5575 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2978                           TMR3L equ 0FB2h ;# 
  2979  0000                     # 5582 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2980                           TMR3H equ 0FB3h ;# 
  2981  0000                     # 5589 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2982                           CMCON equ 0FB4h ;# 
  2983  0000                     # 5679 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2984                           CVRCON equ 0FB5h ;# 
  2985  0000                     # 5764 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2986                           ECCP1AS equ 0FB6h ;# 
  2987  0000                     # 5769 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2988                           CCP1AS equ 0FB6h ;# 
  2989  0000                     # 5926 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2990                           ECCP1DEL equ 0FB7h ;# 
  2991  0000                     # 5931 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2992                           CCP1DEL equ 0FB7h ;# 
  2993  0000                     # 6064 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2994                           BAUDCON equ 0FB8h ;# 
  2995  0000                     # 6069 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2996                           BAUDCTL equ 0FB8h ;# 
  2997  0000                     # 6244 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2998                           CCP2CON equ 0FBAh ;# 
  2999  0000                     # 6308 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3000                           CCPR2 equ 0FBBh ;# 
  3001  0000                     # 6315 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3002                           CCPR2L equ 0FBBh ;# 
  3003  0000                     # 6322 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3004                           CCPR2H equ 0FBCh ;# 
  3005  0000                     # 6329 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3006                           CCP1CON equ 0FBDh ;# 
  3007  0000                     # 6334 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3008                           ECCP1CON equ 0FBDh ;# 
  3009  0000                     # 6491 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3010                           CCPR1 equ 0FBEh ;# 
  3011  0000                     # 6498 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3012                           CCPR1L equ 0FBEh ;# 
  3013  0000                     # 6505 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3014                           CCPR1H equ 0FBFh ;# 
  3015  0000                     # 6512 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3016                           ADCON2 equ 0FC0h ;# 
  3017  0000                     # 6583 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3018                           ADCON1 equ 0FC1h ;# 
  3019  0000                     # 6668 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3020                           ADCON0 equ 0FC2h ;# 
  3021  0000                     # 6787 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3022                           ADRES equ 0FC3h ;# 
  3023  0000                     # 6794 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3024                           ADRESL equ 0FC3h ;# 
  3025  0000                     # 6801 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3026                           ADRESH equ 0FC4h ;# 
  3027  0000                     # 6808 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3028                           SSPCON2 equ 0FC5h ;# 
  3029  0000                     # 6870 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3030                           SSPCON1 equ 0FC6h ;# 
  3031  0000                     # 6940 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3032                           SSPSTAT equ 0FC7h ;# 
  3033  0000                     # 7188 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3034                           SSPADD equ 0FC8h ;# 
  3035  0000                     # 7195 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3036                           SSPBUF equ 0FC9h ;# 
  3037  0000                     # 7202 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3038                           T2CON equ 0FCAh ;# 
  3039  0000                     # 7300 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3040                           PR2 equ 0FCBh ;# 
  3041  0000                     # 7305 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3042                           MEMCON equ 0FCBh ;# 
  3043  0000                     # 7410 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3044                           TMR2 equ 0FCCh ;# 
  3045  0000                     # 7417 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3046                           T1CON equ 0FCDh ;# 
  3047  0000                     # 7520 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3048                           TMR1 equ 0FCEh ;# 
  3049  0000                     # 7527 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3050                           TMR1L equ 0FCEh ;# 
  3051  0000                     # 7534 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3052                           TMR1H equ 0FCFh ;# 
  3053  0000                     # 7541 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3054                           RCON equ 0FD0h ;# 
  3055  0000                     # 7690 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3056                           WDTCON equ 0FD1h ;# 
  3057  0000                     # 7718 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3058                           HLVDCON equ 0FD2h ;# 
  3059  0000                     # 7723 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3060                           LVDCON equ 0FD2h ;# 
  3061  0000                     # 7988 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3062                           OSCCON equ 0FD3h ;# 
  3063  0000                     # 8071 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3064                           T0CON equ 0FD5h ;# 
  3065  0000                     # 8141 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3066                           TMR0 equ 0FD6h ;# 
  3067  0000                     # 8148 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3068                           TMR0L equ 0FD6h ;# 
  3069  0000                     # 8155 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3070                           TMR0H equ 0FD7h ;# 
  3071  0000                     # 8162 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3072                           STATUS equ 0FD8h ;# 
  3073  0000                     # 8233 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3074                           FSR2 equ 0FD9h ;# 
  3075  0000                     # 8240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3076                           FSR2L equ 0FD9h ;# 
  3077  0000                     # 8247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3078                           FSR2H equ 0FDAh ;# 
  3079  0000                     # 8254 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3080                           PLUSW2 equ 0FDBh ;# 
  3081  0000                     # 8261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3082                           PREINC2 equ 0FDCh ;# 
  3083  0000                     # 8268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3084                           POSTDEC2 equ 0FDDh ;# 
  3085  0000                     # 8275 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3086                           POSTINC2 equ 0FDEh ;# 
  3087  0000                     # 8282 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3088                           INDF2 equ 0FDFh ;# 
  3089  0000                     # 8289 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3090                           BSR equ 0FE0h ;# 
  3091  0000                     # 8296 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3092                           FSR1 equ 0FE1h ;# 
  3093  0000                     # 8303 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3094                           FSR1L equ 0FE1h ;# 
  3095  0000                     # 8310 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3096                           FSR1H equ 0FE2h ;# 
  3097  0000                     # 8317 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3098                           PLUSW1 equ 0FE3h ;# 
  3099  0000                     # 8324 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3100                           PREINC1 equ 0FE4h ;# 
  3101  0000                     # 8331 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3102                           POSTDEC1 equ 0FE5h ;# 
  3103  0000                     # 8338 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3104                           POSTINC1 equ 0FE6h ;# 
  3105  0000                     # 8345 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3106                           INDF1 equ 0FE7h ;# 
  3107  0000                     # 8352 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3108                           WREG equ 0FE8h ;# 
  3109  0000                     # 8359 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3110                           FSR0 equ 0FE9h ;# 
  3111  0000                     # 8366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3112                           FSR0L equ 0FE9h ;# 
  3113  0000                     # 8373 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3114                           FSR0H equ 0FEAh ;# 
  3115  0000                     # 8380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3116                           PLUSW0 equ 0FEBh ;# 
  3117  0000                     # 8387 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3118                           PREINC0 equ 0FECh ;# 
  3119  0000                     # 8394 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3120                           POSTDEC0 equ 0FEDh ;# 
  3121  0000                     # 8401 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3122                           POSTINC0 equ 0FEEh ;# 
  3123  0000                     # 8408 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3124                           INDF0 equ 0FEFh ;# 
  3125  0000                     # 8415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3126                           INTCON3 equ 0FF0h ;# 
  3127  0000                     # 8507 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3128                           INTCON2 equ 0FF1h ;# 
  3129  0000                     # 8584 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3130                           INTCON equ 0FF2h ;# 
  3131  0000                     # 8701 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3132                           PROD equ 0FF3h ;# 
  3133  0000                     # 8708 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3134                           PRODL equ 0FF3h ;# 
  3135  0000                     # 8715 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3136                           PRODH equ 0FF4h ;# 
  3137  0000                     # 8722 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3138                           TABLAT equ 0FF5h ;# 
  3139  0000                     # 8731 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3140                           TBLPTR equ 0FF6h ;# 
  3141  0000                     # 8738 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3142                           TBLPTRL equ 0FF6h ;# 
  3143  0000                     # 8745 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3144                           TBLPTRH equ 0FF7h ;# 
  3145  0000                     # 8752 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3146                           TBLPTRU equ 0FF8h ;# 
  3147  0000                     # 8761 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3148                           PCLAT equ 0FF9h ;# 
  3149  0000                     # 8768 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3150                           PC equ 0FF9h ;# 
  3151  0000                     # 8775 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3152                           PCL equ 0FF9h ;# 
  3153  0000                     # 8782 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3154                           PCLATH equ 0FFAh ;# 
  3155  0000                     # 8789 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3156                           PCLATU equ 0FFBh ;# 
  3157  0000                     # 8796 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3158                           STKPTR equ 0FFCh ;# 
  3159  0000                     # 8872 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3160                           TOS equ 0FFDh ;# 
  3161  0000                     # 8879 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3162                           TOSL equ 0FFDh ;# 
  3163  0000                     # 8886 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3164                           TOSH equ 0FFEh ;# 
  3165  0000                     # 8893 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3166                           TOSU equ 0FFFh ;# 
  3167  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3168                           SPPDATA equ 0F62h ;# 
  3169  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3170                           SPPCFG equ 0F63h ;# 
  3171  0000                     # 151 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3172                           SPPEPS equ 0F64h ;# 
  3173  0000                     # 225 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3174                           SPPCON equ 0F65h ;# 
  3175  0000                     # 251 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3176                           UFRM equ 0F66h ;# 
  3177  0000                     # 258 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3178                           UFRML equ 0F66h ;# 
  3179  0000                     # 336 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3180                           UFRMH equ 0F67h ;# 
  3181  0000                     # 376 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3182                           UIR equ 0F68h ;# 
  3183  0000                     # 432 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3184                           UIE equ 0F69h ;# 
  3185  0000                     # 488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3186                           UEIR equ 0F6Ah ;# 
  3187  0000                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3188                           UEIE equ 0F6Bh ;# 
  3189  0000                     # 590 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3190                           USTAT equ 0F6Ch ;# 
  3191  0000                     # 650 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3192                           UCON equ 0F6Dh ;# 
  3193  0000                     # 701 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3194                           UADDR equ 0F6Eh ;# 
  3195  0000                     # 765 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3196                           UCFG equ 0F6Fh ;# 
  3197  0000                     # 844 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3198                           UEP0 equ 0F70h ;# 
  3199  0000                     # 952 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3200                           UEP1 equ 0F71h ;# 
  3201  0000                     # 1060 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3202                           UEP2 equ 0F72h ;# 
  3203  0000                     # 1168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3204                           UEP3 equ 0F73h ;# 
  3205  0000                     # 1276 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3206                           UEP4 equ 0F74h ;# 
  3207  0000                     # 1384 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3208                           UEP5 equ 0F75h ;# 
  3209  0000                     # 1492 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3210                           UEP6 equ 0F76h ;# 
  3211  0000                     # 1600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3212                           UEP7 equ 0F77h ;# 
  3213  0000                     # 1708 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3214                           UEP8 equ 0F78h ;# 
  3215  0000                     # 1784 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3216                           UEP9 equ 0F79h ;# 
  3217  0000                     # 1860 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3218                           UEP10 equ 0F7Ah ;# 
  3219  0000                     # 1936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3220                           UEP11 equ 0F7Bh ;# 
  3221  0000                     # 2012 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3222                           UEP12 equ 0F7Ch ;# 
  3223  0000                     # 2088 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3224                           UEP13 equ 0F7Dh ;# 
  3225  0000                     # 2164 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3226                           UEP14 equ 0F7Eh ;# 
  3227  0000                     # 2240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3228                           UEP15 equ 0F7Fh ;# 
  3229  0000                     # 2316 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3230                           PORTA equ 0F80h ;# 
  3231  0000                     # 2455 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3232                           PORTB equ 0F81h ;# 
  3233  0000                     # 2565 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3234                           PORTC equ 0F82h ;# 
  3235  0000                     # 2707 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3236                           PORTD equ 0F83h ;# 
  3237  0000                     # 2828 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3238                           PORTE equ 0F84h ;# 
  3239  0000                     # 2975 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3240                           LATA equ 0F89h ;# 
  3241  0000                     # 3075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3242                           LATB equ 0F8Ah ;# 
  3243  0000                     # 3187 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3244                           LATC equ 0F8Bh ;# 
  3245  0000                     # 3265 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3246                           LATD equ 0F8Ch ;# 
  3247  0000                     # 3377 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3248                           LATE equ 0F8Dh ;# 
  3249  0000                     # 3429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3250                           TRISA equ 0F92h ;# 
  3251  0000                     # 3434 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3252                           DDRA equ 0F92h ;# 
  3253  0000                     # 3627 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3254                           TRISB equ 0F93h ;# 
  3255  0000                     # 3632 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3256                           DDRB equ 0F93h ;# 
  3257  0000                     # 3849 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3258                           TRISC equ 0F94h ;# 
  3259  0000                     # 3854 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3260                           DDRC equ 0F94h ;# 
  3261  0000                     # 4003 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3262                           TRISD equ 0F95h ;# 
  3263  0000                     # 4008 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3264                           DDRD equ 0F95h ;# 
  3265  0000                     # 4225 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3266                           TRISE equ 0F96h ;# 
  3267  0000                     # 4230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3268                           DDRE equ 0F96h ;# 
  3269  0000                     # 4327 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3270                           OSCTUNE equ 0F9Bh ;# 
  3271  0000                     # 4386 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3272                           PIE1 equ 0F9Dh ;# 
  3273  0000                     # 4470 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3274                           PIR1 equ 0F9Eh ;# 
  3275  0000                     # 4554 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3276                           IPR1 equ 0F9Fh ;# 
  3277  0000                     # 4638 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3278                           PIE2 equ 0FA0h ;# 
  3279  0000                     # 4709 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3280                           PIR2 equ 0FA1h ;# 
  3281  0000                     # 4780 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3282                           IPR2 equ 0FA2h ;# 
  3283  0000                     # 4851 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3284                           EECON1 equ 0FA6h ;# 
  3285  0000                     # 4917 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3286                           EECON2 equ 0FA7h ;# 
  3287  0000                     # 4924 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3288                           EEDATA equ 0FA8h ;# 
  3289  0000                     # 4931 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3290                           EEADR equ 0FA9h ;# 
  3291  0000                     # 4938 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3292                           RCSTA equ 0FABh ;# 
  3293  0000                     # 4943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3294                           RCSTA1 equ 0FABh ;# 
  3295  0000                     # 5148 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3296                           TXSTA equ 0FACh ;# 
  3297  0000                     # 5153 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3298                           TXSTA1 equ 0FACh ;# 
  3299  0000                     # 5404 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3300                           TXREG equ 0FADh ;# 
  3301  0000                     # 5409 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3302                           TXREG1 equ 0FADh ;# 
  3303  0000                     # 5416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3304                           RCREG equ 0FAEh ;# 
  3305  0000                     # 5421 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3306                           RCREG1 equ 0FAEh ;# 
  3307  0000                     # 5428 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3308                           SPBRG equ 0FAFh ;# 
  3309  0000                     # 5433 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3310                           SPBRG1 equ 0FAFh ;# 
  3311  0000                     # 5440 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3312                           SPBRGH equ 0FB0h ;# 
  3313  0000                     # 5447 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3314                           T3CON equ 0FB1h ;# 
  3315  0000                     # 5568 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3316                           TMR3 equ 0FB2h ;# 
  3317  0000                     # 5575 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3318                           TMR3L equ 0FB2h ;# 
  3319  0000                     # 5582 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3320                           TMR3H equ 0FB3h ;# 
  3321  0000                     # 5589 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3322                           CMCON equ 0FB4h ;# 
  3323  0000                     # 5679 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3324                           CVRCON equ 0FB5h ;# 
  3325  0000                     # 5764 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3326                           ECCP1AS equ 0FB6h ;# 
  3327  0000                     # 5769 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3328                           CCP1AS equ 0FB6h ;# 
  3329  0000                     # 5926 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3330                           ECCP1DEL equ 0FB7h ;# 
  3331  0000                     # 5931 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3332                           CCP1DEL equ 0FB7h ;# 
  3333  0000                     # 6064 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3334                           BAUDCON equ 0FB8h ;# 
  3335  0000                     # 6069 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3336                           BAUDCTL equ 0FB8h ;# 
  3337  0000                     # 6244 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3338                           CCP2CON equ 0FBAh ;# 
  3339  0000                     # 6308 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3340                           CCPR2 equ 0FBBh ;# 
  3341  0000                     # 6315 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3342                           CCPR2L equ 0FBBh ;# 
  3343  0000                     # 6322 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3344                           CCPR2H equ 0FBCh ;# 
  3345  0000                     # 6329 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3346                           CCP1CON equ 0FBDh ;# 
  3347  0000                     # 6334 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3348                           ECCP1CON equ 0FBDh ;# 
  3349  0000                     # 6491 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3350                           CCPR1 equ 0FBEh ;# 
  3351  0000                     # 6498 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3352                           CCPR1L equ 0FBEh ;# 
  3353  0000                     # 6505 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3354                           CCPR1H equ 0FBFh ;# 
  3355  0000                     # 6512 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3356                           ADCON2 equ 0FC0h ;# 
  3357  0000                     # 6583 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3358                           ADCON1 equ 0FC1h ;# 
  3359  0000                     # 6668 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3360                           ADCON0 equ 0FC2h ;# 
  3361  0000                     # 6787 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3362                           ADRES equ 0FC3h ;# 
  3363  0000                     # 6794 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3364                           ADRESL equ 0FC3h ;# 
  3365  0000                     # 6801 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3366                           ADRESH equ 0FC4h ;# 
  3367  0000                     # 6808 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3368                           SSPCON2 equ 0FC5h ;# 
  3369  0000                     # 6870 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3370                           SSPCON1 equ 0FC6h ;# 
  3371  0000                     # 6940 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3372                           SSPSTAT equ 0FC7h ;# 
  3373  0000                     # 7188 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3374                           SSPADD equ 0FC8h ;# 
  3375  0000                     # 7195 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3376                           SSPBUF equ 0FC9h ;# 
  3377  0000                     # 7202 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3378                           T2CON equ 0FCAh ;# 
  3379  0000                     # 7300 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3380                           PR2 equ 0FCBh ;# 
  3381  0000                     # 7305 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3382                           MEMCON equ 0FCBh ;# 
  3383  0000                     # 7410 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3384                           TMR2 equ 0FCCh ;# 
  3385  0000                     # 7417 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3386                           T1CON equ 0FCDh ;# 
  3387  0000                     # 7520 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3388                           TMR1 equ 0FCEh ;# 
  3389  0000                     # 7527 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3390                           TMR1L equ 0FCEh ;# 
  3391  0000                     # 7534 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3392                           TMR1H equ 0FCFh ;# 
  3393  0000                     # 7541 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3394                           RCON equ 0FD0h ;# 
  3395  0000                     # 7690 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3396                           WDTCON equ 0FD1h ;# 
  3397  0000                     # 7718 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3398                           HLVDCON equ 0FD2h ;# 
  3399  0000                     # 7723 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3400                           LVDCON equ 0FD2h ;# 
  3401  0000                     # 7988 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3402                           OSCCON equ 0FD3h ;# 
  3403  0000                     # 8071 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3404                           T0CON equ 0FD5h ;# 
  3405  0000                     # 8141 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3406                           TMR0 equ 0FD6h ;# 
  3407  0000                     # 8148 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3408                           TMR0L equ 0FD6h ;# 
  3409  0000                     # 8155 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3410                           TMR0H equ 0FD7h ;# 
  3411  0000                     # 8162 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3412                           STATUS equ 0FD8h ;# 
  3413  0000                     # 8233 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3414                           FSR2 equ 0FD9h ;# 
  3415  0000                     # 8240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3416                           FSR2L equ 0FD9h ;# 
  3417  0000                     # 8247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3418                           FSR2H equ 0FDAh ;# 
  3419  0000                     # 8254 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3420                           PLUSW2 equ 0FDBh ;# 
  3421  0000                     # 8261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3422                           PREINC2 equ 0FDCh ;# 
  3423  0000                     # 8268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3424                           POSTDEC2 equ 0FDDh ;# 
  3425  0000                     # 8275 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3426                           POSTINC2 equ 0FDEh ;# 
  3427  0000                     # 8282 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3428                           INDF2 equ 0FDFh ;# 
  3429  0000                     # 8289 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3430                           BSR equ 0FE0h ;# 
  3431  0000                     # 8296 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3432                           FSR1 equ 0FE1h ;# 
  3433  0000                     # 8303 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3434                           FSR1L equ 0FE1h ;# 
  3435  0000                     # 8310 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3436                           FSR1H equ 0FE2h ;# 
  3437  0000                     # 8317 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3438                           PLUSW1 equ 0FE3h ;# 
  3439  0000                     # 8324 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3440                           PREINC1 equ 0FE4h ;# 
  3441  0000                     # 8331 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3442                           POSTDEC1 equ 0FE5h ;# 
  3443  0000                     # 8338 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3444                           POSTINC1 equ 0FE6h ;# 
  3445  0000                     # 8345 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3446                           INDF1 equ 0FE7h ;# 
  3447  0000                     # 8352 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3448                           WREG equ 0FE8h ;# 
  3449  0000                     # 8359 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3450                           FSR0 equ 0FE9h ;# 
  3451  0000                     # 8366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3452                           FSR0L equ 0FE9h ;# 
  3453  0000                     # 8373 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3454                           FSR0H equ 0FEAh ;# 
  3455  0000                     # 8380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3456                           PLUSW0 equ 0FEBh ;# 
  3457  0000                     # 8387 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3458                           PREINC0 equ 0FECh ;# 
  3459  0000                     # 8394 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3460                           POSTDEC0 equ 0FEDh ;# 
  3461  0000                     # 8401 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3462                           POSTINC0 equ 0FEEh ;# 
  3463  0000                     # 8408 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3464                           INDF0 equ 0FEFh ;# 
  3465  0000                     # 8415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3466                           INTCON3 equ 0FF0h ;# 
  3467  0000                     # 8507 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3468                           INTCON2 equ 0FF1h ;# 
  3469  0000                     # 8584 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3470                           INTCON equ 0FF2h ;# 
  3471  0000                     # 8701 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3472                           PROD equ 0FF3h ;# 
  3473  0000                     # 8708 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3474                           PRODL equ 0FF3h ;# 
  3475  0000                     # 8715 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3476                           PRODH equ 0FF4h ;# 
  3477  0000                     # 8722 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3478                           TABLAT equ 0FF5h ;# 
  3479  0000                     # 8731 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3480                           TBLPTR equ 0FF6h ;# 
  3481  0000                     # 8738 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3482                           TBLPTRL equ 0FF6h ;# 
  3483  0000                     # 8745 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3484                           TBLPTRH equ 0FF7h ;# 
  3485  0000                     # 8752 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3486                           TBLPTRU equ 0FF8h ;# 
  3487  0000                     # 8761 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3488                           PCLAT equ 0FF9h ;# 
  3489  0000                     # 8768 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3490                           PC equ 0FF9h ;# 
  3491  0000                     # 8775 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3492                           PCL equ 0FF9h ;# 
  3493  0000                     # 8782 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3494                           PCLATH equ 0FFAh ;# 
  3495  0000                     # 8789 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3496                           PCLATU equ 0FFBh ;# 
  3497  0000                     # 8796 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3498                           STKPTR equ 0FFCh ;# 
  3499  0000                     # 8872 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3500                           TOS equ 0FFDh ;# 
  3501  0000                     # 8879 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3502                           TOSL equ 0FFDh ;# 
  3503  0000                     # 8886 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3504                           TOSH equ 0FFEh ;# 
  3505  0000                     # 8893 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3506                           TOSU equ 0FFFh ;# 
  3507  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3508                           SPPDATA equ 0F62h ;# 
  3509  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3510                           SPPCFG equ 0F63h ;# 
  3511  0000                     # 151 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3512                           SPPEPS equ 0F64h ;# 
  3513  0000                     # 225 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3514                           SPPCON equ 0F65h ;# 
  3515  0000                     # 251 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3516                           UFRM equ 0F66h ;# 
  3517  0000                     # 258 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3518                           UFRML equ 0F66h ;# 
  3519  0000                     # 336 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3520                           UFRMH equ 0F67h ;# 
  3521  0000                     # 376 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3522                           UIR equ 0F68h ;# 
  3523  0000                     # 432 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3524                           UIE equ 0F69h ;# 
  3525  0000                     # 488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3526                           UEIR equ 0F6Ah ;# 
  3527  0000                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3528                           UEIE equ 0F6Bh ;# 
  3529  0000                     # 590 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3530                           USTAT equ 0F6Ch ;# 
  3531  0000                     # 650 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3532                           UCON equ 0F6Dh ;# 
  3533  0000                     # 701 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3534                           UADDR equ 0F6Eh ;# 
  3535  0000                     # 765 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3536                           UCFG equ 0F6Fh ;# 
  3537  0000                     # 844 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3538                           UEP0 equ 0F70h ;# 
  3539  0000                     # 952 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3540                           UEP1 equ 0F71h ;# 
  3541  0000                     # 1060 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3542                           UEP2 equ 0F72h ;# 
  3543  0000                     # 1168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3544                           UEP3 equ 0F73h ;# 
  3545  0000                     # 1276 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3546                           UEP4 equ 0F74h ;# 
  3547  0000                     # 1384 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3548                           UEP5 equ 0F75h ;# 
  3549  0000                     # 1492 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3550                           UEP6 equ 0F76h ;# 
  3551  0000                     # 1600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3552                           UEP7 equ 0F77h ;# 
  3553  0000                     # 1708 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3554                           UEP8 equ 0F78h ;# 
  3555  0000                     # 1784 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3556                           UEP9 equ 0F79h ;# 
  3557  0000                     # 1860 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3558                           UEP10 equ 0F7Ah ;# 
  3559  0000                     # 1936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3560                           UEP11 equ 0F7Bh ;# 
  3561  0000                     # 2012 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3562                           UEP12 equ 0F7Ch ;# 
  3563  0000                     # 2088 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3564                           UEP13 equ 0F7Dh ;# 
  3565  0000                     # 2164 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3566                           UEP14 equ 0F7Eh ;# 
  3567  0000                     # 2240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3568                           UEP15 equ 0F7Fh ;# 
  3569  0000                     # 2316 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3570                           PORTA equ 0F80h ;# 
  3571  0000                     # 2455 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3572                           PORTB equ 0F81h ;# 
  3573  0000                     # 2565 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3574                           PORTC equ 0F82h ;# 
  3575  0000                     # 2707 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3576                           PORTD equ 0F83h ;# 
  3577  0000                     # 2828 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3578                           PORTE equ 0F84h ;# 
  3579  0000                     # 2975 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3580                           LATA equ 0F89h ;# 
  3581  0000                     # 3075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3582                           LATB equ 0F8Ah ;# 
  3583  0000                     # 3187 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3584                           LATC equ 0F8Bh ;# 
  3585  0000                     # 3265 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3586                           LATD equ 0F8Ch ;# 
  3587  0000                     # 3377 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3588                           LATE equ 0F8Dh ;# 
  3589  0000                     # 3429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3590                           TRISA equ 0F92h ;# 
  3591  0000                     # 3434 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3592                           DDRA equ 0F92h ;# 
  3593  0000                     # 3627 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3594                           TRISB equ 0F93h ;# 
  3595  0000                     # 3632 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3596                           DDRB equ 0F93h ;# 
  3597  0000                     # 3849 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3598                           TRISC equ 0F94h ;# 
  3599  0000                     # 3854 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3600                           DDRC equ 0F94h ;# 
  3601  0000                     # 4003 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3602                           TRISD equ 0F95h ;# 
  3603  0000                     # 4008 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3604                           DDRD equ 0F95h ;# 
  3605  0000                     # 4225 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3606                           TRISE equ 0F96h ;# 
  3607  0000                     # 4230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3608                           DDRE equ 0F96h ;# 
  3609  0000                     # 4327 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3610                           OSCTUNE equ 0F9Bh ;# 
  3611  0000                     # 4386 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3612                           PIE1 equ 0F9Dh ;# 
  3613  0000                     # 4470 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3614                           PIR1 equ 0F9Eh ;# 
  3615  0000                     # 4554 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3616                           IPR1 equ 0F9Fh ;# 
  3617  0000                     # 4638 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3618                           PIE2 equ 0FA0h ;# 
  3619  0000                     # 4709 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3620                           PIR2 equ 0FA1h ;# 
  3621  0000                     # 4780 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3622                           IPR2 equ 0FA2h ;# 
  3623  0000                     # 4851 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3624                           EECON1 equ 0FA6h ;# 
  3625  0000                     # 4917 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3626                           EECON2 equ 0FA7h ;# 
  3627  0000                     # 4924 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3628                           EEDATA equ 0FA8h ;# 
  3629  0000                     # 4931 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3630                           EEADR equ 0FA9h ;# 
  3631  0000                     # 4938 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3632                           RCSTA equ 0FABh ;# 
  3633  0000                     # 4943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3634                           RCSTA1 equ 0FABh ;# 
  3635  0000                     # 5148 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3636                           TXSTA equ 0FACh ;# 
  3637  0000                     # 5153 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3638                           TXSTA1 equ 0FACh ;# 
  3639  0000                     # 5404 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3640                           TXREG equ 0FADh ;# 
  3641  0000                     # 5409 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3642                           TXREG1 equ 0FADh ;# 
  3643  0000                     # 5416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3644                           RCREG equ 0FAEh ;# 
  3645  0000                     # 5421 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3646                           RCREG1 equ 0FAEh ;# 
  3647  0000                     # 5428 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3648                           SPBRG equ 0FAFh ;# 
  3649  0000                     # 5433 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3650                           SPBRG1 equ 0FAFh ;# 
  3651  0000                     # 5440 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3652                           SPBRGH equ 0FB0h ;# 
  3653  0000                     # 5447 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3654                           T3CON equ 0FB1h ;# 
  3655  0000                     # 5568 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3656                           TMR3 equ 0FB2h ;# 
  3657  0000                     # 5575 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3658                           TMR3L equ 0FB2h ;# 
  3659  0000                     # 5582 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3660                           TMR3H equ 0FB3h ;# 
  3661  0000                     # 5589 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3662                           CMCON equ 0FB4h ;# 
  3663  0000                     # 5679 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3664                           CVRCON equ 0FB5h ;# 
  3665  0000                     # 5764 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3666                           ECCP1AS equ 0FB6h ;# 
  3667  0000                     # 5769 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3668                           CCP1AS equ 0FB6h ;# 
  3669  0000                     # 5926 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3670                           ECCP1DEL equ 0FB7h ;# 
  3671  0000                     # 5931 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3672                           CCP1DEL equ 0FB7h ;# 
  3673  0000                     # 6064 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3674                           BAUDCON equ 0FB8h ;# 
  3675  0000                     # 6069 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3676                           BAUDCTL equ 0FB8h ;# 
  3677  0000                     # 6244 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3678                           CCP2CON equ 0FBAh ;# 
  3679  0000                     # 6308 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3680                           CCPR2 equ 0FBBh ;# 
  3681  0000                     # 6315 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3682                           CCPR2L equ 0FBBh ;# 
  3683  0000                     # 6322 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3684                           CCPR2H equ 0FBCh ;# 
  3685  0000                     # 6329 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3686                           CCP1CON equ 0FBDh ;# 
  3687  0000                     # 6334 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3688                           ECCP1CON equ 0FBDh ;# 
  3689  0000                     # 6491 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3690                           CCPR1 equ 0FBEh ;# 
  3691  0000                     # 6498 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3692                           CCPR1L equ 0FBEh ;# 
  3693  0000                     # 6505 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3694                           CCPR1H equ 0FBFh ;# 
  3695  0000                     # 6512 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3696                           ADCON2 equ 0FC0h ;# 
  3697  0000                     # 6583 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3698                           ADCON1 equ 0FC1h ;# 
  3699  0000                     # 6668 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3700                           ADCON0 equ 0FC2h ;# 
  3701  0000                     # 6787 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3702                           ADRES equ 0FC3h ;# 
  3703  0000                     # 6794 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3704                           ADRESL equ 0FC3h ;# 
  3705  0000                     # 6801 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3706                           ADRESH equ 0FC4h ;# 
  3707  0000                     # 6808 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3708                           SSPCON2 equ 0FC5h ;# 
  3709  0000                     # 6870 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3710                           SSPCON1 equ 0FC6h ;# 
  3711  0000                     # 6940 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3712                           SSPSTAT equ 0FC7h ;# 
  3713  0000                     # 7188 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3714                           SSPADD equ 0FC8h ;# 
  3715  0000                     # 7195 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3716                           SSPBUF equ 0FC9h ;# 
  3717  0000                     # 7202 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3718                           T2CON equ 0FCAh ;# 
  3719  0000                     # 7300 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3720                           PR2 equ 0FCBh ;# 
  3721  0000                     # 7305 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3722                           MEMCON equ 0FCBh ;# 
  3723  0000                     # 7410 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3724                           TMR2 equ 0FCCh ;# 
  3725  0000                     # 7417 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3726                           T1CON equ 0FCDh ;# 
  3727  0000                     # 7520 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3728                           TMR1 equ 0FCEh ;# 
  3729  0000                     # 7527 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3730                           TMR1L equ 0FCEh ;# 
  3731  0000                     # 7534 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3732                           TMR1H equ 0FCFh ;# 
  3733  0000                     # 7541 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3734                           RCON equ 0FD0h ;# 
  3735  0000                     # 7690 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3736                           WDTCON equ 0FD1h ;# 
  3737  0000                     # 7718 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3738                           HLVDCON equ 0FD2h ;# 
  3739  0000                     # 7723 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3740                           LVDCON equ 0FD2h ;# 
  3741  0000                     # 7988 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3742                           OSCCON equ 0FD3h ;# 
  3743  0000                     # 8071 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3744                           T0CON equ 0FD5h ;# 
  3745  0000                     # 8141 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3746                           TMR0 equ 0FD6h ;# 
  3747  0000                     # 8148 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3748                           TMR0L equ 0FD6h ;# 
  3749  0000                     # 8155 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3750                           TMR0H equ 0FD7h ;# 
  3751  0000                     # 8162 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3752                           STATUS equ 0FD8h ;# 
  3753  0000                     # 8233 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3754                           FSR2 equ 0FD9h ;# 
  3755  0000                     # 8240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3756                           FSR2L equ 0FD9h ;# 
  3757  0000                     # 8247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3758                           FSR2H equ 0FDAh ;# 
  3759  0000                     # 8254 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3760                           PLUSW2 equ 0FDBh ;# 
  3761  0000                     # 8261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3762                           PREINC2 equ 0FDCh ;# 
  3763  0000                     # 8268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3764                           POSTDEC2 equ 0FDDh ;# 
  3765  0000                     # 8275 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3766                           POSTINC2 equ 0FDEh ;# 
  3767  0000                     # 8282 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3768                           INDF2 equ 0FDFh ;# 
  3769  0000                     # 8289 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3770                           BSR equ 0FE0h ;# 
  3771  0000                     # 8296 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3772                           FSR1 equ 0FE1h ;# 
  3773  0000                     # 8303 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3774                           FSR1L equ 0FE1h ;# 
  3775  0000                     # 8310 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3776                           FSR1H equ 0FE2h ;# 
  3777  0000                     # 8317 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3778                           PLUSW1 equ 0FE3h ;# 
  3779  0000                     # 8324 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3780                           PREINC1 equ 0FE4h ;# 
  3781  0000                     # 8331 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3782                           POSTDEC1 equ 0FE5h ;# 
  3783  0000                     # 8338 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3784                           POSTINC1 equ 0FE6h ;# 
  3785  0000                     # 8345 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3786                           INDF1 equ 0FE7h ;# 
  3787  0000                     # 8352 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3788                           WREG equ 0FE8h ;# 
  3789  0000                     # 8359 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3790                           FSR0 equ 0FE9h ;# 
  3791  0000                     # 8366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3792                           FSR0L equ 0FE9h ;# 
  3793  0000                     # 8373 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3794                           FSR0H equ 0FEAh ;# 
  3795  0000                     # 8380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3796                           PLUSW0 equ 0FEBh ;# 
  3797  0000                     # 8387 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3798                           PREINC0 equ 0FECh ;# 
  3799  0000                     # 8394 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3800                           POSTDEC0 equ 0FEDh ;# 
  3801  0000                     # 8401 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3802                           POSTINC0 equ 0FEEh ;# 
  3803  0000                     # 8408 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3804                           INDF0 equ 0FEFh ;# 
  3805  0000                     # 8415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3806                           INTCON3 equ 0FF0h ;# 
  3807  0000                     # 8507 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3808                           INTCON2 equ 0FF1h ;# 
  3809  0000                     # 8584 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3810                           INTCON equ 0FF2h ;# 
  3811  0000                     # 8701 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3812                           PROD equ 0FF3h ;# 
  3813  0000                     # 8708 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3814                           PRODL equ 0FF3h ;# 
  3815  0000                     # 8715 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3816                           PRODH equ 0FF4h ;# 
  3817  0000                     # 8722 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3818                           TABLAT equ 0FF5h ;# 
  3819  0000                     # 8731 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3820                           TBLPTR equ 0FF6h ;# 
  3821  0000                     # 8738 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3822                           TBLPTRL equ 0FF6h ;# 
  3823  0000                     # 8745 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3824                           TBLPTRH equ 0FF7h ;# 
  3825  0000                     # 8752 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3826                           TBLPTRU equ 0FF8h ;# 
  3827  0000                     # 8761 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3828                           PCLAT equ 0FF9h ;# 
  3829  0000                     # 8768 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3830                           PC equ 0FF9h ;# 
  3831  0000                     # 8775 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3832                           PCL equ 0FF9h ;# 
  3833  0000                     # 8782 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3834                           PCLATH equ 0FFAh ;# 
  3835  0000                     # 8789 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3836                           PCLATU equ 0FFBh ;# 
  3837  0000                     # 8796 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3838                           STKPTR equ 0FFCh ;# 
  3839  0000                     # 8872 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3840                           TOS equ 0FFDh ;# 
  3841  0000                     # 8879 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3842                           TOSL equ 0FFDh ;# 
  3843  0000                     # 8886 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3844                           TOSH equ 0FFEh ;# 
  3845  0000                     # 8893 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3846                           TOSU equ 0FFFh ;# 
  3847  0000  ;; Function _receita_livre is unused but had its address taken
  3848                           global _receita_livre
  3849                           _receita_livre equ 0
  3850  0000  ;; Function _rxEUSART is unused but had its address taken
  3851                           global _rxEUSART
  3852                           _rxEUSART equ 0
  3853  0000  ;; Function _rxStatusEUSART is unused but had its address taken
  3854                           global _rxStatusEUSART
  3855                           _rxStatusEUSART equ 0
  3856  0000  ;; Function _rxErrorEUSART is unused but had its address taken
  3857                           global _rxErrorEUSART
  3858                           _rxErrorEUSART equ 0
  3859  0000  ;; Function _rxResetErrorEUSART is unused but had its address taken
  3860                           global _rxResetErrorEUSART
  3861                           _rxResetErrorEUSART equ 0
  3862  0000  ;; Function _search is unused but had its address taken
  3863                           global _search
  3864                           _search equ 0
  3865  0000  ;; Function _wifi_receive is unused but had its address taken
  3866                           global _wifi_receive
  3867                           _wifi_receive equ 0
  3868  0000  ;; Function _Wifi_connect is unused but had its address taken
  3869                           global _Wifi_connect
  3870                           _Wifi_connect equ 0
  3871  0000  ;; Function _Wifi_scan is unused but had its address taken
  3872                           global _Wifi_scan
  3873                           _Wifi_scan equ 0
  3874  0000  ;; Function _Wifi_ip is unused but had its address taken
  3875                           global _Wifi_ip
  3876                           _Wifi_ip equ 0
  3877  0000  ;; Function _Wifi_autoconnect is unused but had its address taken
  3878                           global _Wifi_autoconnect
  3879                           _Wifi_autoconnect equ 0
  3880  0000  ;; Function _Wifi_config_servidor is unused but had its address taken
  3881                           global _Wifi_config_servidor
  3882                           _Wifi_config_servidor equ 0
  3883  0000  ;; Function _Wifi_cipsend is unused but had its address taken
  3884                           global _Wifi_cipsend
  3885                           _Wifi_cipsend equ 0
  3886  0000                     	FNCALL	_main,_I2C_init
  3887                           	FNCALL	_main,_MCP4725
  3888                           	FNCALL	_main,_Wifi_mode
  3889                           	FNCALL	_main,___aldiv
  3890                           	FNCALL	_main,___awmod
  3891                           	FNCALL	_main,___lmul
  3892                           	FNCALL	_main,___wmul
  3893                           	FNCALL	_main,_addContCiclos
  3894                           	FNCALL	_main,_addIndicePassos
  3895                           	FNCALL	_main,_alt_atuador
  3896                           	FNCALL	_main,_buscar_dado
  3897                           	FNCALL	_main,_buscar_receita
  3898                           	FNCALL	_main,_decodifica
  3899                           	FNCALL	_main,_delay
  3900                           	FNCALL	_main,_deletar_receita
  3901                           	FNCALL	_main,_dignum_apagar
  3902                           	FNCALL	_main,_dignum_conc
  3903                           	FNCALL	_main,_dispLCD
  3904                           	FNCALL	_main,_dispLCD_clr
  3905                           	FNCALL	_main,_dispLCD_dataReg
  3906                           	FNCALL	_main,_dispLCD_init
  3907                           	FNCALL	_main,_dispLCD_lincol
  3908                           	FNCALL	_main,_dispLCD_num
  3909                           	FNCALL	_main,_dispLCD_str
  3910                           	FNCALL	_main,_fifo_add
  3911                           	FNCALL	_main,_fifo_add_ciclo
  3912                           	FNCALL	_main,_fifo_add_control
  3913                           	FNCALL	_main,_fifo_add_tempo
  3914                           	FNCALL	_main,_fifo_adrs
  3915                           	FNCALL	_main,_fifo_delete
  3916                           	FNCALL	_main,_fifo_disponivel
  3917                           	FNCALL	_main,_fifo_indice
  3918                           	FNCALL	_main,_fifo_indicePrint_dec
  3919                           	FNCALL	_main,_fifo_indicePrint_inc
  3920                           	FNCALL	_main,_fifo_lerPos
  3921                           	FNCALL	_main,_fifo_print
  3922                           	FNCALL	_main,_fifo_tam
  3923                           	FNCALL	_main,_formatar_receitas
  3924                           	FNCALL	_main,_getCiclos
  3925                           	FNCALL	_main,_getContCiclos
  3926                           	FNCALL	_main,_getIndicePassos
  3927                           	FNCALL	_main,_initSerialIO
  3928                           	FNCALL	_main,_init_atuadores
  3929                           	FNCALL	_main,_ler_atuador
  3930                           	FNCALL	_main,_ler_sensor
  3931                           	FNCALL	_main,_manipula_atuadores_init
  3932                           	FNCALL	_main,_printExec
  3933                           	FNCALL	_main,_resetContCiclos
  3934                           	FNCALL	_main,_resetIndicePassos
  3935                           	FNCALL	_main,_salva_atuadores_init
  3936                           	FNCALL	_main,_salvar_dado
  3937                           	FNCALL	_main,_salvar_receita
  3938                           	FNCALL	_main,_serialIOscan
  3939                           	FNCALL	_main,_setT1
  3940                           	FNCALL	_main,_set_passo
  3941                           	FNCALL	_main,_statusT1
  3942                           	FNCALL	_main,_teclado_borda
  3943                           	FNCALL	_main,_teclado_init
  3944                           	FNCALL	_main,_timer1_init
  3945                           	FNCALL	_main,_wifi_init
  3946                           	FNCALL	_wifi_init,_initEUSART
  3947                           	FNCALL	_initEUSART,___lldiv
  3948                           	FNCALL	_teclado_borda,_teclado_scan
  3949                           	FNCALL	_serialIOscan,_serialIObyteShift
  3950                           	FNCALL	_serialIOscan,_serialIOload
  3951                           	FNCALL	_salvar_receita,_EEPROM_write
  3952                           	FNCALL	_salvar_receita,_end_receita
  3953                           	FNCALL	_salvar_dado,_EEPROM_write
  3954                           	FNCALL	_salvar_dado,_end_receita
  3955                           	FNCALL	_salva_atuadores_init,_ler_atuador
  3956                           	FNCALL	_printExec,_decodifica
  3957                           	FNCALL	_printExec,_dignum_tam
  3958                           	FNCALL	_printExec,_dispLCD_dataReg
  3959                           	FNCALL	_printExec,_dispLCD_lincol
  3960                           	FNCALL	_printExec,_dispLCD_num
  3961                           	FNCALL	_printExec,_posAtual
  3962                           	FNCALL	_posAtual,_fifo_lerPos
  3963                           	FNCALL	_posAtual,_getIndicePassos
  3964                           	FNCALL	_dispLCD_num,___awdiv
  3965                           	FNCALL	_dispLCD_num,___awmod
  3966                           	FNCALL	_dispLCD_num,_dispLCD_dataReg
  3967                           	FNCALL	_dispLCD_num,_dispLCD_lincol
  3968                           	FNCALL	_manipula_atuadores_init,_alt_atuador
  3969                           	FNCALL	_formatar_receitas,_EEPROM_write
  3970                           	FNCALL	_fifo_print,___awdiv
  3971                           	FNCALL	_fifo_print,___awmod
  3972                           	FNCALL	_fifo_print,_decodifica
  3973                           	FNCALL	_fifo_print,_dispLCD_dataReg
  3974                           	FNCALL	_fifo_print,_dispLCD_lincol
  3975                           	FNCALL	_fifo_delete,_alt_atuador
  3976                           	FNCALL	_fifo_delete,_codifica
  3977                           	FNCALL	_fifo_delete,_decodifica
  3978                           	FNCALL	_fifo_delete,_fifo_alinharPrint
  3979                           	FNCALL	_fifo_add_tempo,_codifica
  3980                           	FNCALL	_fifo_add_tempo,_fifo_alinharPrint
  3981                           	FNCALL	_fifo_add_control,_codifica
  3982                           	FNCALL	_fifo_add_control,_fifo_alinharPrint
  3983                           	FNCALL	_fifo_add,_codifica
  3984                           	FNCALL	_fifo_add,_fifo_alinharPrint
  3985                           	FNCALL	_fifo_alinharPrint,_dignum_tam
  3986                           	FNCALL	_dignum_tam,___awdiv
  3987                           	FNCALL	_dispLCD_str,_dispLCD_dataReg
  3988                           	FNCALL	_dispLCD_str,_dispLCD_lincol
  3989                           	FNCALL	_dispLCD_init,_delay
  3990                           	FNCALL	_dispLCD_init,_dispLCD_instReg
  3991                           	FNCALL	_dispLCD_clr,_dispLCD_instReg
  3992                           	FNCALL	_dispLCD,_dispLCD_dataReg
  3993                           	FNCALL	_dispLCD,_dispLCD_lincol
  3994                           	FNCALL	_dispLCD_lincol,_dispLCD_instReg
  3995                           	FNCALL	_dignum_conc,___wmul
  3996                           	FNCALL	_dignum_apagar,___lwdiv
  3997                           	FNCALL	_deletar_receita,_EEPROM_write
  3998                           	FNCALL	_deletar_receita,_end_receita
  3999                           	FNCALL	_buscar_receita,_EEPROM_read
  4000                           	FNCALL	_buscar_receita,_end_receita
  4001                           	FNCALL	_buscar_dado,_EEPROM_read
  4002                           	FNCALL	_buscar_dado,_end_receita
  4003                           	FNCALL	_Wifi_mode,_wifi_send
  4004                           	FNCALL	_wifi_send,_txEUSART
  4005                           	FNCALL	_wifi_send,_txStatusEUSART
  4006                           	FNCALL	_MCP4725,_I2C_stop
  4007                           	FNCALL	_MCP4725,_dac_init
  4008                           	FNCALL	_MCP4725,_dac_write
  4009                           	FNCALL	_MCP4725,_delay
  4010                           	FNCALL	_dac_write,_I2C_ack_receive
  4011                           	FNCALL	_dac_write,_I2C_tx
  4012                           	FNCALL	_dac_write,_delay
  4013                           	FNCALL	_dac_init,_I2C_ack_receive
  4014                           	FNCALL	_dac_init,_I2C_start
  4015                           	FNCALL	_dac_init,_I2C_tx
  4016                           	FNCALL	_dac_init,_delay
  4017                           	FNCALL	_I2C_init,___lldiv
  4018                           	FNROOT	_main
  4019                           	FNCALL	_irq,_intt1_1ms
  4020                           	FNCALL	intlevel2,_irq
  4021                           	global	intlevel2
  4022                           	FNROOT	intlevel2
  4023                           	global	_EEPROM
  4024                           	global	_IHM
  4025                           	global	_indice_passos
  4026                           	global	_ind_print
  4027                           	global	_ind_fila
  4028                           	global	_wifi
  4029                           	global	_eusart
  4030                           	global	_teclas
  4031                           	global	Wifi_connect@F3282
  4032                           	global	Wifi_cipsend@F3292
  4033                           	global	main@F3508
  4034                           psect	idataCOMRAM,class=CODE,space=0,delta=1,noexec
  4035                           global __pidataCOMRAM
  4036                           __pidataCOMRAM:
  4037  0044D4                     	file	"./eeprom.h"
  4038                           	line	28
  4039                           
  4040                           ;initializer for _EEPROM
  4041                           		db	low(_salvar_receita)
  4042  0044D4  0E                 	db	high(_salvar_receita)
  4043  0044D5  3D                 
  4044                           		db	low(_buscar_receita)
  4045  0044D6  6E                 	db	high(_buscar_receita)
  4046  0044D7  3D                 
  4047                           		db	low(_deletar_receita)
  4048  0044D8  7A                 	db	high(_deletar_receita)
  4049  0044D9  3E                 
  4050                           		db	low(0)
  4051  0044DA  00                 	db	high(0)
  4052  0044DB  00                 
  4053                           		db	low(_formatar_receitas)
  4054  0044DC  9E                 	db	high(_formatar_receitas)
  4055  0044DD  43                 
  4056                           	file	"./ihm.h"
  4057                           	line	14
  4058                           
  4059                           ;initializer for _IHM
  4060                           		db	low(_dispLCD_init)
  4061  0044DE  00                 	db	high(_dispLCD_init)
  4062  0044DF  41                 
  4063                           		db	low(_dispLCD_str)
  4064  0044E0  3A                 	db	high(_dispLCD_str)
  4065  0044E1  3A                 
  4066                           		db	low(_dispLCD)
  4067  0044E2  CE                 	db	high(_dispLCD)
  4068  0044E3  3E                 
  4069                           		db	low(_dispLCD_num)
  4070  0044E4  C4                 	db	high(_dispLCD_num)
  4071  0044E5  26                 
  4072                           		db	low(_dispLCD_clr)
  4073  0044E6  7C                 	db	high(_dispLCD_clr)
  4074  0044E7  45                 
  4075                           	file	"fifo.c"
  4076                           	line	16
  4077                           
  4078                           ;initializer for _indice_passos
  4079                           	db	low(02h)
  4080  0044E8  02                 	line	12
  4081                           
  4082                           ;initializer for _ind_print
  4083                           	db	low(02h)
  4084  0044E9  02                 	line	11
  4085                           
  4086                           ;initializer for _ind_fila
  4087                           	db	low(02h)
  4088  0044EA  02                 psect	idataBANK0l,class=CODE,space=0,delta=1,noexec
  4089                           global __pidataBANK0l
  4090                           __pidataBANK0l:
  4091  004136                     	file	"./wifi.h"
  4092                           	line	38
  4093                           
  4094                           ;initializer for _wifi
  4095                           		db	low(_wifi_init)
  4096  004136  02                 	db	high(_wifi_init)
  4097  004137  42                 
  4098                           		db	low(_wifi_send)
  4099  004138  F0                 	db	high(_wifi_send)
  4100  004139  33                 
  4101                           		db	low(0)
  4102  00413A  00                 	db	high(0)
  4103  00413B  00                 
  4104                           		db	low(_Wifi_mode)
  4105  00413C  B8                 	db	high(_Wifi_mode)
  4106  00413D  36                 
  4107                           		db	low(0)
  4108  00413E  00                 	db	high(0)
  4109  00413F  00                 
  4110                           		db	low(0)
  4111  004140  00                 	db	high(0)
  4112  004141  00                 
  4113                           		db	low(0)
  4114  004142  00                 	db	high(0)
  4115  004143  00                 
  4116                           		db	low(0)
  4117  004144  00                 	db	high(0)
  4118  004145  00                 
  4119                           		db	low(0)
  4120  004146  00                 	db	high(0)
  4121  004147  00                 
  4122                           		db	low(0)
  4123  004148  00                 	db	high(0)
  4124  004149  00                 
  4125                           	file	"eusart.c"
  4126                           	line	26
  4127                           
  4128                           ;initializer for _eusart
  4129                           		db	low(0)
  4130  00414A  00                 	db	high(0)
  4131  00414B  00                 
  4132                           		db	low(0)
  4133  00414C  00                 	db	high(0)
  4134  00414D  00                 
  4135                           		db	low(0)
  4136  00414E  00                 	db	high(0)
  4137  00414F  00                 
  4138                           		db	low(0)
  4139  004150  00                 	db	high(0)
  4140  004151  00                 
  4141                           		db	low(_txEUSART)
  4142  004152  84                 	db	high(_txEUSART)
  4143  004153  45                 
  4144                           		db	low(_txStatusEUSART)
  4145  004154  74                 	db	high(_txStatusEUSART)
  4146  004155  44                 
  4147                           		db	low(_initEUSART)
  4148  004156  CE                 	db	high(_initEUSART)
  4149  004157  39                 
  4150                           		db	low(0)
  4151  004158  00                 	db	high(0)
  4152  004159  00                 
  4153                           	file	"teclado.c"
  4154                           	line	50
  4155                           
  4156                           ;initializer for _teclas
  4157                           	db	low(031h)
  4158  00415A  31                 	db	low(032h)
  4159  00415B  32                 	db	low(033h)
  4160  00415C  33                 	db	low(041h)
  4161  00415D  41                 	db	low(034h)
  4162  00415E  34                 	db	low(035h)
  4163  00415F  35                 	db	low(036h)
  4164  004160  36                 	db	low(042h)
  4165  004161  42                 	db	low(037h)
  4166  004162  37                 	db	low(038h)
  4167  004163  38                 	db	low(039h)
  4168  004164  39                 	db	low(043h)
  4169  004165  43                 	db	low(02Ah)
  4170  004166  2A                 	db	low(030h)
  4171  004167  30                 	db	low(023h)
  4172  004168  23                 	db	low(044h)
  4173  004169  44                 psect	idataBANK1,class=CODE,space=0,delta=1,noexec
  4174                           global __pidataBANK1
  4175                           __pidataBANK1:
  4176  003DCC                     	file	"wifi.c"
  4177                           	line	69
  4178                           
  4179                           ;initializer for Wifi_connect@F3282
  4180                           	db	low(041h)
  4181  003DCC  41                 	db	low(054h)
  4182  003DCD  54                 	db	low(02Bh)
  4183  003DCE  2B                 	db	low(043h)
  4184  003DCF  43                 	db	low(057h)
  4185  003DD0  57                 	db	low(04Ah)
  4186  003DD1  4A                 	db	low(041h)
  4187  003DD2  41                 	db	low(050h)
  4188  003DD3  50                 	db	low(03Dh)
  4189  003DD4  3D                 	db	low(022h)
  4190  003DD5  22                 	db	low(0)
  4191  003DD6  00                 	db   0
  4192  003DD7  00                 	db   0
  4193  003DD8  00                 	db   0
  4194  003DD9  00                 	db   0
  4195  003DDA  00                 	db   0
  4196  003DDB  00                 	db   0
  4197  003DDC  00                 	db   0
  4198  003DDD  00                 	db   0
  4199  003DDE  00                 	db   0
  4200  003DDF  00                 	db   0
  4201  003DE0  00                 	db   0
  4202  003DE1  00                 	db   0
  4203  003DE2  00                 	db   0
  4204  003DE3  00                 	db   0
  4205  003DE4  00                 	db   0
  4206  003DE5  00                 	db   0
  4207  003DE6  00                 	db   0
  4208  003DE7  00                 	db   0
  4209  003DE8  00                 	db   0
  4210  003DE9  00                 	db   0
  4211  003DEA  00                 	db   0
  4212  003DEB  00                 	db   0
  4213  003DEC  00                 	db   0
  4214  003DED  00                 	db   0
  4215  003DEE  00                 	db   0
  4216  003DEF  00                 	db   0
  4217  003DF0  00                 	db   0
  4218  003DF1  00                 	db   0
  4219  003DF2  00                 	db   0
  4220  003DF3  00                 	line	117
  4221                           
  4222                           ;initializer for Wifi_cipsend@F3292
  4223                           	db	low(041h)
  4224  003DF4  41                 	db	low(054h)
  4225  003DF5  54                 	db	low(02Bh)
  4226  003DF6  2B                 	db	low(043h)
  4227  003DF7  43                 	db	low(049h)
  4228  003DF8  49                 	db	low(050h)
  4229  003DF9  50                 	db	low(053h)
  4230  003DFA  53                 	db	low(045h)
  4231  003DFB  45                 	db	low(04Eh)
  4232  003DFC  4E                 	db	low(044h)
  4233  003DFD  44                 	db	low(03Dh)
  4234  003DFE  3D                 	db	low(022h)
  4235  003DFF  22                 	db	low(0)
  4236  003E00  00                 	db   0
  4237  003E01  00                 	db   0
  4238  003E02  00                 	db   0
  4239  003E03  00                 	db   0
  4240  003E04  00                 	db   0
  4241  003E05  00                 	db   0
  4242  003E06  00                 	db   0
  4243  003E07  00                 	db   0
  4244  003E08  00                 	db   0
  4245  003E09  00                 	db   0
  4246  003E0A  00                 	db   0
  4247  003E0B  00                 	db   0
  4248  003E0C  00                 	db   0
  4249  003E0D  00                 	db   0
  4250  003E0E  00                 	db   0
  4251  003E0F  00                 	db   0
  4252  003E10  00                 	db   0
  4253  003E11  00                 	file	"main.c"
  4254                           	line	136
  4255                           
  4256                           ;initializer for main@F3508
  4257                           	db	low(04Dh)
  4258  003E12  4D                 	db	low(075h)
  4259  003E13  75                 	db	low(06Eh)
  4260  003E14  6E                 	db	low(064h)
  4261  003E15  64                 	db	low(06Fh)
  4262  003E16  6F                 	db	low(020h)
  4263  003E17  20                 	db	low(061h)
  4264  003E18  61                 	db	low(06Fh)
  4265  003E19  6F                 	db	low(020h)
  4266  003E1A  20                 	db	low(073h)
  4267  003E1B  73                 	db	low(065h)
  4268  003E1C  65                 	db	low(075h)
  4269  003E1D  75                 	db	low(020h)
  4270  003E1E  20                 	db	low(063h)
  4271  003E1F  63                 	db	low(06Fh)
  4272  003E20  6F                 	db	low(06Dh)
  4273  003E21  6D                 	db	low(061h)
  4274  003E22  61                 	db	low(06Eh)
  4275  003E23  6E                 	db	low(064h)
  4276  003E24  64                 	db	low(06Fh)
  4277  003E25  6F                 	global	_t1cont
  4278                           	global	salva_atuadores_init@F108
  4279                           	global	_ptrSerialOut
  4280                           	global	_ptrSerialIn
  4281                           	global	_cont_ciclos
  4282                           	global	_teclaAnterior
  4283                           	global	_lenSerialIO
  4284                           	global	_atuador
  4285                           	global	_fila
  4286                           	global	Wifi_cipsend@F3295
  4287                           	global	main@F3484
  4288                           	global	main@F3482
  4289                           	global	_SPBRbits
  4290                           _SPBRbits	set	0x99
  4291  0000                     	global	_BAUDCTLbits
  4292                           _BAUDCTLbits	set	0xFB8
  4293  0000                     	global	_TXSTAbits
  4294                           _TXSTAbits	set	0xFAC
  4295  0000                     	global	_TXREG
  4296                           _TXREG	set	0xFAD
  4297  0000                     	global	_RCSTAbits
  4298                           _RCSTAbits	set	0xFAB
  4299  0000                     	global	_RCREG
  4300                           _RCREG	set	0xFAE
  4301  0000                     	global	_T1CONbits
  4302                           _T1CONbits	set	0xFCD
  4303  0000                     	global	_TMR1L
  4304                           _TMR1L	set	0xFCE
  4305  0000                     	global	_TMR1H
  4306                           _TMR1H	set	0xFCF
  4307  0000                     	global	_TRISD
  4308                           _TRISD	set	0xF95
  4309  0000                     	global	_PORTD
  4310                           _PORTD	set	0xF83
  4311  0000                     	global	_SSPBUF
  4312                           _SSPBUF	set	0xFC9
  4313  0000                     	global	_SSPCON2bits
  4314                           _SSPCON2bits	set	0xFC5
  4315  0000                     	global	_SSPSTATbits
  4316                           _SSPSTATbits	set	0xFC7
  4317  0000                     	global	_SSPADD
  4318                           _SSPADD	set	0xFC8
  4319  0000                     	global	_SSPCON1bits
  4320                           _SSPCON1bits	set	0xFC6
  4321  0000                     	global	_SERIALIO
  4322                           	global	_SERIALIO
  4323                           _SERIALIO  equ     3968
  4324  0000                     	global	_TRISAbits
  4325                           _TRISAbits	set	0xF92
  4326  0000                     	global	_PORTAbits
  4327                           _PORTAbits	set	0xF80
  4328  0000                     	global	_EECON2
  4329                           _EECON2	set	0xFA7
  4330  0000                     	global	_EEDATA
  4331                           _EEDATA	set	0xFA8
  4332  0000                     	global	_EECON1bits
  4333                           _EECON1bits	set	0xFA6
  4334  0000                     	global	_EEADR
  4335                           _EEADR	set	0xFA9
  4336  0000                     	global	_LCDbits
  4337                           	global	_LCDbits
  4338                           _LCDbits  equ     3978
  4339  0000                     	global	_TRISBbits
  4340                           _TRISBbits	set	0xF93
  4341  0000                     	global	_ADCON1
  4342                           _ADCON1	set	0xFC1
  4343  0000                     	global	_PIE1bits
  4344                           _PIE1bits	set	0xF9D
  4345  0000                     	global	_PIR1bits
  4346                           _PIR1bits	set	0xF9E
  4347  0000                     	global	_INTCONbits
  4348                           _INTCONbits	set	0xFF2
  4349  0000                     psect	mediumconst,class=MEDIUMCONST,space=0,reloc=2,noexec
  4350                           global __pmediumconst
  4351                           __pmediumconst:
  4352  007C2E                     	db	0
  4353  007C2E  00                 	
  4354                           STR_4:
  4355  007C2F                     	db	49	;'1'
  4356  007C2F  31                 	db	58	;':'
  4357  007C30  3A                 	db	32
  4358  007C31  20                 	db	73	;'I'
  4359  007C32  49                 	db	78	;'N'
  4360  007C33  4E                 	db	83	;'S'
  4361  007C34  53                 	db	69	;'E'
  4362  007C35  45                 	db	82	;'R'
  4363  007C36  52                 	db	73	;'I'
  4364  007C37  49                 	db	82	;'R'
  4365  007C38  52                 	db	32
  4366  007C39  20                 	db	83	;'S'
  4367  007C3A  53                 	db	69	;'E'
  4368  007C3B  45                 	db	81	;'Q'
  4369  007C3C  51                 	db	85	;'U'
  4370  007C3D  55                 	db	69	;'E'
  4371  007C3E  45                 	db	78	;'N'
  4372  007C3F  4E                 	db	67	;'C'
  4373  007C40  43                 	db	73	;'I'
  4374  007C41  49                 	db	65	;'A'
  4375  007C42  41                 	db	10
  4376  007C43  0A                 	db	50	;'2'
  4377  007C44  32                 	db	58	;':'
  4378  007C45  3A                 	db	32
  4379  007C46  20                 	db	66	;'B'
  4380  007C47  42                 	db	85	;'U'
  4381  007C48  55                 	db	83	;'S'
  4382  007C49  53                 	db	67	;'C'
  4383  007C4A  43                 	db	65	;'A'
  4384  007C4B  41                 	db	82	;'R'
  4385  007C4C  52                 	db	32
  4386  007C4D  20                 	db	83	;'S'
  4387  007C4E  53                 	db	69	;'E'
  4388  007C4F  45                 	db	81	;'Q'
  4389  007C50  51                 	db	85	;'U'
  4390  007C51  55                 	db	69	;'E'
  4391  007C52  45                 	db	78	;'N'
  4392  007C53  4E                 	db	67	;'C'
  4393  007C54  43                 	db	73	;'I'
  4394  007C55  49                 	db	65	;'A'
  4395  007C56  41                 	db	10
  4396  007C57  0A                 	db	51	;'3'
  4397  007C58  33                 	db	58	;':'
  4398  007C59  3A                 	db	32
  4399  007C5A  20                 	db	82	;'R'
  4400  007C5B  52                 	db	69	;'E'
  4401  007C5C  45                 	db	80	;'P'
  4402  007C5D  50                 	db	69	;'E'
  4403  007C5E  45                 	db	84	;'T'
  4404  007C5F  54                 	db	73	;'I'
  4405  007C60  49                 	db	82	;'R'
  4406  007C61  52                 	db	32
  4407  007C62  20                 	db	85	;'U'
  4408  007C63  55                 	db	76	;'L'
  4409  007C64  4C                 	db	84	;'T'
  4410  007C65  54                 	db	46
  4411  007C66  2E                 	db	32
  4412  007C67  20                 	db	83	;'S'
  4413  007C68  53                 	db	69	;'E'
  4414  007C69  45                 	db	81	;'Q'
  4415  007C6A  51                 	db	85	;'U'
  4416  007C6B  55                 	db	10
  4417  007C6C  0A                 	db	52	;'4'
  4418  007C6D  34                 	db	58	;':'
  4419  007C6E  3A                 	db	32
  4420  007C6F  20                 	db	67	;'C'
  4421  007C70  43                 	db	79	;'O'
  4422  007C71  4F                 	db	78	;'N'
  4423  007C72  4E                 	db	70	;'F'
  4424  007C73  46                 	db	73	;'I'
  4425  007C74  49                 	db	71	;'G'
  4426  007C75  47                 	db	85	;'U'
  4427  007C76  55                 	db	82	;'R'
  4428  007C77  52                 	db	65	;'A'
  4429  007C78  41                 	db	67	;'C'
  4430  007C79  43                 	db	79	;'O'
  4431  007C7A  4F                 	db	69	;'E'
  4432  007C7B  45                 	db	83	;'S'
  4433  007C7C  53                 	db	32
  4434  007C7D  20                 	db	32
  4435  007C7E  20                 	db	32
  4436  007C7F  20                 	db	32
  4437  007C80  20                 	db	0
  4438  007C81  00                 	
  4439                           STR_15:
  4440  007C82                     	db	32
  4441  007C82  20                 	db	69	;'E'
  4442  007C83  45                 	db	83	;'S'
  4443  007C84  53                 	db	67	;'C'
  4444  007C85  43                 	db	79	;'O'
  4445  007C86  4F                 	db	76	;'L'
  4446  007C87  4C                 	db	72	;'H'
  4447  007C88  48                 	db	65	;'A'
  4448  007C89  41                 	db	32
  4449  007C8A  20                 	db	65	;'A'
  4450  007C8B  41                 	db	32
  4451  007C8C  20                 	db	77	;'M'
  4452  007C8D  4D                 	db	69	;'E'
  4453  007C8E  45                 	db	77	;'M'
  4454  007C8F  4D                 	db	79	;'O'
  4455  007C90  4F                 	db	82	;'R'
  4456  007C91  52                 	db	73	;'I'
  4457  007C92  49                 	db	65	;'A'
  4458  007C93  41                 	db	32
  4459  007C94  20                 	db	10
  4460  007C95  0A                 	db	81	;'Q'
  4461  007C96  51                 	db	85	;'U'
  4462  007C97  55                 	db	69	;'E'
  4463  007C98  45                 	db	32
  4464  007C99  20                 	db	68	;'D'
  4465  007C9A  44                 	db	69	;'E'
  4466  007C9B  45                 	db	83	;'S'
  4467  007C9C  53                 	db	69	;'E'
  4468  007C9D  45                 	db	74	;'J'
  4469  007C9E  4A                 	db	65	;'A'
  4470  007C9F  41                 	db	32
  4471  007CA0  20                 	db	69	;'E'
  4472  007CA1  45                 	db	88	;'X'
  4473  007CA2  58                 	db	69	;'E'
  4474  007CA3  45                 	db	67	;'C'
  4475  007CA4  43                 	db	85	;'U'
  4476  007CA5  55                 	db	84	;'T'
  4477  007CA6  54                 	db	65	;'A'
  4478  007CA7  41                 	db	82	;'R'
  4479  007CA8  52                 	db	10
  4480  007CA9  0A                 	db	32
  4481  007CAA  20                 	db	48	;'0'
  4482  007CAB  30                 	db	32
  4483  007CAC  20                 	db	32
  4484  007CAD  20                 	db	32
  4485  007CAE  20                 	db	49	;'1'
  4486  007CAF  31                 	db	32
  4487  007CB0  20                 	db	32
  4488  007CB1  20                 	db	32
  4489  007CB2  20                 	db	50	;'2'
  4490  007CB3  32                 	db	32
  4491  007CB4  20                 	db	32
  4492  007CB5  20                 	db	32
  4493  007CB6  20                 	db	51	;'3'
  4494  007CB7  33                 	db	32
  4495  007CB8  20                 	db	32
  4496  007CB9  20                 	db	32
  4497  007CBA  20                 	db	52	;'4'
  4498  007CBB  34                 	db	32
  4499  007CBC  20                 	db	10
  4500  007CBD  0A                 	db	32
  4501  007CBE  20                 	db	53	;'5'
  4502  007CBF  35                 	db	32
  4503  007CC0  20                 	db	32
  4504  007CC1  20                 	db	32
  4505  007CC2  20                 	db	54	;'6'
  4506  007CC3  36                 	db	32
  4507  007CC4  20                 	db	32
  4508  007CC5  20                 	db	32
  4509  007CC6  20                 	db	55	;'7'
  4510  007CC7  37                 	db	32
  4511  007CC8  20                 	db	32
  4512  007CC9  20                 	db	32
  4513  007CCA  20                 	db	56	;'8'
  4514  007CCB  38                 	db	32
  4515  007CCC  20                 	db	32
  4516  007CCD  20                 	db	32
  4517  007CCE  20                 	db	57	;'9'
  4518  007CCF  39                 	db	32
  4519  007CD0  20                 	db	10
  4520  007CD1  0A                 	db	0
  4521  007CD2  00                 	
  4522                           STR_27:
  4523  007CD3                     	db	32
  4524  007CD3  20                 	db	69	;'E'
  4525  007CD4  45                 	db	83	;'S'
  4526  007CD5  53                 	db	67	;'C'
  4527  007CD6  43                 	db	79	;'O'
  4528  007CD7  4F                 	db	76	;'L'
  4529  007CD8  4C                 	db	72	;'H'
  4530  007CD9  48                 	db	65	;'A'
  4531  007CDA  41                 	db	32
  4532  007CDB  20                 	db	65	;'A'
  4533  007CDC  41                 	db	32
  4534  007CDD  20                 	db	77	;'M'
  4535  007CDE  4D                 	db	69	;'E'
  4536  007CDF  45                 	db	77	;'M'
  4537  007CE0  4D                 	db	79	;'O'
  4538  007CE1  4F                 	db	82	;'R'
  4539  007CE2  52                 	db	73	;'I'
  4540  007CE3  49                 	db	65	;'A'
  4541  007CE4  41                 	db	10
  4542  007CE5  0A                 	db	32
  4543  007CE6  20                 	db	81	;'Q'
  4544  007CE7  51                 	db	85	;'U'
  4545  007CE8  55                 	db	69	;'E'
  4546  007CE9  45                 	db	32
  4547  007CEA  20                 	db	68	;'D'
  4548  007CEB  44                 	db	69	;'E'
  4549  007CEC  45                 	db	83	;'S'
  4550  007CED  53                 	db	69	;'E'
  4551  007CEE  45                 	db	74	;'J'
  4552  007CEF  4A                 	db	65	;'A'
  4553  007CF0  41                 	db	32
  4554  007CF1  20                 	db	83	;'S'
  4555  007CF2  53                 	db	65	;'A'
  4556  007CF3  41                 	db	76	;'L'
  4557  007CF4  4C                 	db	86	;'V'
  4558  007CF5  56                 	db	65	;'A'
  4559  007CF6  41                 	db	82	;'R'
  4560  007CF7  52                 	db	10
  4561  007CF8  0A                 	db	32
  4562  007CF9  20                 	db	48	;'0'
  4563  007CFA  30                 	db	32
  4564  007CFB  20                 	db	32
  4565  007CFC  20                 	db	32
  4566  007CFD  20                 	db	49	;'1'
  4567  007CFE  31                 	db	32
  4568  007CFF  20                 	db	32
  4569  007D00  20                 	db	32
  4570  007D01  20                 	db	50	;'2'
  4571  007D02  32                 	db	32
  4572  007D03  20                 	db	32
  4573  007D04  20                 	db	32
  4574  007D05  20                 	db	51	;'3'
  4575  007D06  33                 	db	32
  4576  007D07  20                 	db	32
  4577  007D08  20                 	db	32
  4578  007D09  20                 	db	52	;'4'
  4579  007D0A  34                 	db	10
  4580  007D0B  0A                 	db	32
  4581  007D0C  20                 	db	53	;'5'
  4582  007D0D  35                 	db	32
  4583  007D0E  20                 	db	32
  4584  007D0F  20                 	db	32
  4585  007D10  20                 	db	54	;'6'
  4586  007D11  36                 	db	32
  4587  007D12  20                 	db	32
  4588  007D13  20                 	db	32
  4589  007D14  20                 	db	55	;'7'
  4590  007D15  37                 	db	32
  4591  007D16  20                 	db	32
  4592  007D17  20                 	db	32
  4593  007D18  20                 	db	56	;'8'
  4594  007D19  38                 	db	32
  4595  007D1A  20                 	db	32
  4596  007D1B  20                 	db	32
  4597  007D1C  20                 	db	57	;'9'
  4598  007D1D  39                 	db	32
  4599  007D1E  20                 	db	32
  4600  007D1F  20                 	db	0
  4601  007D20  00                 	
  4602                           STR_26:
  4603  007D21                     	db	32
  4604  007D21  20                 	db	32
  4605  007D22  20                 	db	32
  4606  007D23  20                 	db	32
  4607  007D24  20                 	db	68	;'D'
  4608  007D25  44                 	db	69	;'E'
  4609  007D26  45                 	db	83	;'S'
  4610  007D27  53                 	db	69	;'E'
  4611  007D28  45                 	db	74	;'J'
  4612  007D29  4A                 	db	65	;'A'
  4613  007D2A  41                 	db	32
  4614  007D2B  20                 	db	83	;'S'
  4615  007D2C  53                 	db	65	;'A'
  4616  007D2D  41                 	db	76	;'L'
  4617  007D2E  4C                 	db	86	;'V'
  4618  007D2F  56                 	db	65	;'A'
  4619  007D30  41                 	db	82	;'R'
  4620  007D31  52                 	db	32
  4621  007D32  20                 	db	32
  4622  007D33  20                 	db	32
  4623  007D34  20                 	db	10
  4624  007D35  0A                 	db	32
  4625  007D36  20                 	db	32
  4626  007D37  20                 	db	32
  4627  007D38  20                 	db	32
  4628  007D39  20                 	db	32
  4629  007D3A  20                 	db	83	;'S'
  4630  007D3B  53                 	db	69	;'E'
  4631  007D3C  45                 	db	81	;'Q'
  4632  007D3D  51                 	db	85	;'U'
  4633  007D3E  55                 	db	69	;'E'
  4634  007D3F  45                 	db	78	;'N'
  4635  007D40  4E                 	db	67	;'C'
  4636  007D41  43                 	db	73	;'I'
  4637  007D42  49                 	db	65	;'A'
  4638  007D43  41                 	db	32
  4639  007D44  20                 	db	63	;'?'
  4640  007D45  3F                 	db	32
  4641  007D46  20                 	db	32
  4642  007D47  20                 	db	10
  4643  007D48  0A                 	db	10
  4644  007D49  0A                 	db	35
  4645  007D4A  23                 	db	32
  4646  007D4B  20                 	db	45
  4647  007D4C  2D                 	db	32
  4648  007D4D  20                 	db	83	;'S'
  4649  007D4E  53                 	db	73	;'I'
  4650  007D4F  49                 	db	77	;'M'
  4651  007D50  4D                 	db	32
  4652  007D51  20                 	db	32
  4653  007D52  20                 	db	32
  4654  007D53  20                 	db	32
  4655  007D54  20                 	db	32
  4656  007D55  20                 	db	32
  4657  007D56  20                 	db	42
  4658  007D57  2A                 	db	32
  4659  007D58  20                 	db	45
  4660  007D59  2D                 	db	32
  4661  007D5A  20                 	db	78	;'N'
  4662  007D5B  4E                 	db	65	;'A'
  4663  007D5C  41                 	db	79	;'O'
  4664  007D5D  4F                 	db	0
  4665  007D5E  00                 	
  4666                           STR_35:
  4667  007D5F                     	db	65	;'A'
  4668  007D5F  41                 	db	84	;'T'
  4669  007D60  54                 	db	43
  4670  007D61  2B                 	db	67	;'C'
  4671  007D62  43                 	db	87	;'W'
  4672  007D63  57                 	db	83	;'S'
  4673  007D64  53                 	db	65	;'A'
  4674  007D65  41                 	db	80	;'P'
  4675  007D66  50                 	db	61	;'='
  4676  007D67  3D                 	db	34
  4677  007D68  22                 	db	87	;'W'
  4678  007D69  57                 	db	105	;'i'
  4679  007D6A  69                 	db	114	;'r'
  4680  007D6B  72                 	db	101	;'e'
  4681  007D6C  65                 	db	108	;'l'
  4682  007D6D  6C                 	db	101	;'e'
  4683  007D6E  65                 	db	115	;'s'
  4684  007D6F  73                 	db	115	;'s'
  4685  007D70  73                 	db	34
  4686  007D71  22                 	db	44
  4687  007D72  2C                 	db	34
  4688  007D73  22                 	db	42
  4689  007D74  2A                 	db	42
  4690  007D75  2A                 	db	42
  4691  007D76  2A                 	db	42
  4692  007D77  2A                 	db	42
  4693  007D78  2A                 	db	42
  4694  007D79  2A                 	db	42
  4695  007D7A  2A                 	db	42
  4696  007D7B  2A                 	db	34
  4697  007D7C  22                 	db	44
  4698  007D7D  2C                 	db	49	;'1'
  4699  007D7E  31                 	db	44
  4700  007D7F  2C                 	db	50	;'2'
  4701  007D80  32                 	db	44
  4702  007D81  2C                 	db	52	;'4'
  4703  007D82  34                 	db	44
  4704  007D83  2C                 	db	48	;'0'
  4705  007D84  30                 	db	13
  4706  007D85  0D                 	db	10
  4707  007D86  0A                 	db	0
  4708  007D87  00                 	
  4709                           STR_45:
  4710  007D88                     	db	65	;'A'
  4711  007D88  41                 	db	84	;'T'
  4712  007D89  54                 	db	43
  4713  007D8A  2B                 	db	67	;'C'
  4714  007D8B  43                 	db	73	;'I'
  4715  007D8C  49                 	db	80	;'P'
  4716  007D8D  50                 	db	83	;'S'
  4717  007D8E  53                 	db	84	;'T'
  4718  007D8F  54                 	db	65	;'A'
  4719  007D90  41                 	db	82	;'R'
  4720  007D91  52                 	db	84	;'T'
  4721  007D92  54                 	db	61	;'='
  4722  007D93  3D                 	db	34
  4723  007D94  22                 	db	84	;'T'
  4724  007D95  54                 	db	67	;'C'
  4725  007D96  43                 	db	80	;'P'
  4726  007D97  50                 	db	34
  4727  007D98  22                 	db	44
  4728  007D99  2C                 	db	34
  4729  007D9A  22                 	db	49	;'1'
  4730  007D9B  31                 	db	57	;'9'
  4731  007D9C  39                 	db	50	;'2'
  4732  007D9D  32                 	db	46
  4733  007D9E  2E                 	db	49	;'1'
  4734  007D9F  31                 	db	54	;'6'
  4735  007DA0  36                 	db	56	;'8'
  4736  007DA1  38                 	db	46
  4737  007DA2  2E                 	db	52	;'4'
  4738  007DA3  34                 	db	46
  4739  007DA4  2E                 	db	49	;'1'
  4740  007DA5  31                 	db	34
  4741  007DA6  22                 	db	44
  4742  007DA7  2C                 	db	34
  4743  007DA8  22                 	db	51	;'3'
  4744  007DA9  33                 	db	51	;'3'
  4745  007DAA  33                 	db	51	;'3'
  4746  007DAB  33                 	db	34
  4747  007DAC  22                 	db	13
  4748  007DAD  0D                 	db	10
  4749  007DAE  0A                 	db	0
  4750  007DAF  00                 	
  4751                           STR_44:
  4752  007DB0                     	db	65	;'A'
  4753  007DB0  41                 	db	84	;'T'
  4754  007DB1  54                 	db	43
  4755  007DB2  2B                 	db	67	;'C'
  4756  007DB3  43                 	db	73	;'I'
  4757  007DB4  49                 	db	80	;'P'
  4758  007DB5  50                 	db	83	;'S'
  4759  007DB6  53                 	db	69	;'E'
  4760  007DB7  45                 	db	82	;'R'
  4761  007DB8  52                 	db	86	;'V'
  4762  007DB9  56                 	db	69	;'E'
  4763  007DBA  45                 	db	82	;'R'
  4764  007DBB  52                 	db	61	;'='
  4765  007DBC  3D                 	db	49	;'1'
  4766  007DBD  31                 	db	44
  4767  007DBE  2C                 	db	51	;'3'
  4768  007DBF  33                 	db	51	;'3'
  4769  007DC0  33                 	db	51	;'3'
  4770  007DC1  33                 	db	13
  4771  007DC2  0D                 	db	10
  4772  007DC3  0A                 	db	0
  4773  007DC4  00                 	
  4774                           STR_24:
  4775  007DC5                     	db	67	;'C'
  4776  007DC5  43                 	db	105	;'i'
  4777  007DC6  69                 	db	99	;'c'
  4778  007DC7  63                 	db	108	;'l'
  4779  007DC8  6C                 	db	111	;'o'
  4780  007DC9  6F                 	db	115	;'s'
  4781  007DCA  73                 	db	58	;':'
  4782  007DCB  3A                 	db	32
  4783  007DCC  20                 	db	32
  4784  007DCD  20                 	db	32
  4785  007DCE  20                 	db	32
  4786  007DCF  20                 	db	32
  4787  007DD0  20                 	db	32
  4788  007DD1  20                 	db	32
  4789  007DD2  20                 	db	32
  4790  007DD3  20                 	db	32
  4791  007DD4  20                 	db	32
  4792  007DD5  20                 	db	32
  4793  007DD6  20                 	db	32
  4794  007DD7  20                 	db	32
  4795  007DD8  20                 	db	0
  4796  007DD9  00                 	
  4797                           STR_22:
  4798  007DDA                     	db	60	;'<'
  4799  007DDA  3C                 	db	32
  4800  007DDB  20                 	db	32
  4801  007DDC  20                 	db	47
  4802  007DDD  2F                 	db	32
  4803  007DDE  20                 	db	32
  4804  007DDF  20                 	db	62	;'>'
  4805  007DE0  3E                 	db	32
  4806  007DE1  20                 	db	99	;'c'
  4807  007DE2  63                 	db	58	;':'
  4808  007DE3  3A                 	db	32
  4809  007DE4  20                 	db	32
  4810  007DE5  20                 	db	32
  4811  007DE6  20                 	db	32
  4812  007DE7  20                 	db	32
  4813  007DE8  20                 	db	32
  4814  007DE9  20                 	db	32
  4815  007DEA  20                 	db	32
  4816  007DEB  20                 	db	32
  4817  007DEC  20                 	db	32
  4818  007DED  20                 	db	0
  4819  007DEE  00                 	
  4820                           STR_31:
  4821  007DEF                     	db	32
  4822  007DEF  20                 	db	32
  4823  007DF0  20                 	db	32
  4824  007DF1  20                 	db	32
  4825  007DF2  20                 	db	32
  4826  007DF3  20                 	db	32
  4827  007DF4  20                 	db	32
  4828  007DF5  20                 	db	32
  4829  007DF6  20                 	db	83	;'S'
  4830  007DF7  53                 	db	65	;'A'
  4831  007DF8  41                 	db	76	;'L'
  4832  007DF9  4C                 	db	86	;'V'
  4833  007DFA  56                 	db	65	;'A'
  4834  007DFB  41                 	db	32
  4835  007DFC  20                 	db	32
  4836  007DFD  20                 	db	32
  4837  007DFE  20                 	db	32
  4838  007DFF  20                 	db	32
  4839  007E00  20                 	db	32
  4840  007E01  20                 	db	32
  4841  007E02  20                 	db	0
  4842  007E03  00                 	
  4843                           STR_3:
  4844  007E04                     	db	32
  4845  007E04  20                 	db	32
  4846  007E05  20                 	db	32
  4847  007E06  20                 	db	32
  4848  007E07  20                 	db	32
  4849  007E08  20                 	db	32
  4850  007E09  20                 	db	83	;'S'
  4851  007E0A  53                 	db	69	;'E'
  4852  007E0B  45                 	db	71	;'G'
  4853  007E0C  47                 	db	71	;'G'
  4854  007E0D  47                 	db	85	;'U'
  4855  007E0E  55                 	db	73	;'I'
  4856  007E0F  49                 	db	84	;'T'
  4857  007E10  54                 	db	32
  4858  007E11  20                 	db	32
  4859  007E12  20                 	db	32
  4860  007E13  20                 	db	32
  4861  007E14  20                 	db	32
  4862  007E15  20                 	db	32
  4863  007E16  20                 	db	32
  4864  007E17  20                 	db	0
  4865  007E18  00                 	
  4866                           STR_21:
  4867  007E19                     	db	32
  4868  007E19  20                 	db	32
  4869  007E1A  20                 	db	32
  4870  007E1B  20                 	db	32
  4871  007E1C  20                 	db	32
  4872  007E1D  20                 	db	32
  4873  007E1E  20                 	db	32
  4874  007E1F  20                 	db	91	;'['
  4875  007E20  5B                 	db	32
  4876  007E21  20                 	db	32
  4877  007E22  20                 	db	32
  4878  007E23  20                 	db	32
  4879  007E24  20                 	db	93	;']'
  4880  007E25  5D                 	db	32
  4881  007E26  20                 	db	32
  4882  007E27  20                 	db	32
  4883  007E28  20                 	db	32
  4884  007E29  20                 	db	32
  4885  007E2A  20                 	db	32
  4886  007E2B  20                 	db	32
  4887  007E2C  20                 	db	0
  4888  007E2D  00                 	
  4889                           STR_13:
  4890  007E2E                     	db	32
  4891  007E2E  20                 	db	32
  4892  007E2F  20                 	db	32
  4893  007E30  20                 	db	32
  4894  007E31  20                 	db	32
  4895  007E32  20                 	db	32
  4896  007E33  20                 	db	32
  4897  007E34  20                 	db	68	;'D'
  4898  007E35  44                 	db	69	;'E'
  4899  007E36  45                 	db	76	;'L'
  4900  007E37  4C                 	db	69	;'E'
  4901  007E38  45                 	db	84	;'T'
  4902  007E39  54                 	db	69	;'E'
  4903  007E3A  45                 	db	68	;'D'
  4904  007E3B  44                 	db	32
  4905  007E3C  20                 	db	32
  4906  007E3D  20                 	db	32
  4907  007E3E  20                 	db	32
  4908  007E3F  20                 	db	32
  4909  007E40  20                 	db	32
  4910  007E41  20                 	db	0
  4911  007E42  00                 	
  4912                           STR_14:
  4913  007E43                     	db	32
  4914  007E43  20                 	db	32
  4915  007E44  20                 	db	32
  4916  007E45  20                 	db	32
  4917  007E46  20                 	db	32
  4918  007E47  20                 	db	32
  4919  007E48  20                 	db	32
  4920  007E49  20                 	db	32
  4921  007E4A  20                 	db	77	;'M'
  4922  007E4B  4D                 	db	69	;'E'
  4923  007E4C  45                 	db	77	;'M'
  4924  007E4D  4D                 	db	79	;'O'
  4925  007E4E  4F                 	db	82	;'R'
  4926  007E4F  52                 	db	89	;'Y'
  4927  007E50  59                 	db	32
  4928  007E51  20                 	db	32
  4929  007E52  20                 	db	32
  4930  007E53  20                 	db	32
  4931  007E54  20                 	db	32
  4932  007E55  20                 	db	32
  4933  007E56  20                 	db	0
  4934  007E57  00                 	
  4935                           STR_9:
  4936  007E58                     	db	32
  4937  007E58  20                 	db	32
  4938  007E59  20                 	db	32
  4939  007E5A  20                 	db	32
  4940  007E5B  20                 	db	32
  4941  007E5C  20                 	db	32
  4942  007E5D  20                 	db	77	;'M'
  4943  007E5E  4D                 	db	69	;'E'
  4944  007E5F  45                 	db	77	;'M'
  4945  007E60  4D                 	db	79	;'O'
  4946  007E61  4F                 	db	82	;'R'
  4947  007E62  52                 	db	73	;'I'
  4948  007E63  49                 	db	65	;'A'
  4949  007E64  41                 	db	32
  4950  007E65  20                 	db	63	;'?'
  4951  007E66  3F                 	db	32
  4952  007E67  20                 	db	32
  4953  007E68  20                 	db	32
  4954  007E69  20                 	db	32
  4955  007E6A  20                 	db	32
  4956  007E6B  20                 	db	0
  4957  007E6C  00                 	
  4958                           STR_30:
  4959  007E6D                     	db	32
  4960  007E6D  20                 	db	32
  4961  007E6E  20                 	db	32
  4962  007E6F  20                 	db	32
  4963  007E70  20                 	db	32
  4964  007E71  20                 	db	32
  4965  007E72  20                 	db	83	;'S'
  4966  007E73  53                 	db	69	;'E'
  4967  007E74  45                 	db	81	;'Q'
  4968  007E75  51                 	db	85	;'U'
  4969  007E76  55                 	db	69	;'E'
  4970  007E77  45                 	db	78	;'N'
  4971  007E78  4E                 	db	67	;'C'
  4972  007E79  43                 	db	73	;'I'
  4973  007E7A  49                 	db	65	;'A'
  4974  007E7B  41                 	db	32
  4975  007E7C  20                 	db	32
  4976  007E7D  20                 	db	32
  4977  007E7E  20                 	db	32
  4978  007E7F  20                 	db	32
  4979  007E80  20                 	db	0
  4980  007E81  00                 	
  4981                           STR_17:
  4982  007E82                     	db	32
  4983  007E82  20                 	db	32
  4984  007E83  20                 	db	32
  4985  007E84  20                 	db	32
  4986  007E85  20                 	db	32
  4987  007E86  20                 	db	68	;'D'
  4988  007E87  44                 	db	79	;'O'
  4989  007E88  4F                 	db	32
  4990  007E89  20                 	db	83	;'S'
  4991  007E8A  53                 	db	73	;'I'
  4992  007E8B  49                 	db	83	;'S'
  4993  007E8C  53                 	db	84	;'T'
  4994  007E8D  54                 	db	69	;'E'
  4995  007E8E  45                 	db	77	;'M'
  4996  007E8F  4D                 	db	65	;'A'
  4997  007E90  41                 	db	32
  4998  007E91  20                 	db	32
  4999  007E92  20                 	db	32
  5000  007E93  20                 	db	32
  5001  007E94  20                 	db	32
  5002  007E95  20                 	db	0
  5003  007E96  00                 	
  5004                           STR_18:
  5005  007E97                     	db	32
  5006  007E97  20                 	db	32
  5007  007E98  20                 	db	32
  5008  007E99  20                 	db	65	;'A'
  5009  007E9A  41                 	db	32
  5010  007E9B  20                 	db	32
  5011  007E9C  20                 	db	32
  5012  007E9D  20                 	db	66	;'B'
  5013  007E9E  42                 	db	32
  5014  007E9F  20                 	db	32
  5015  007EA0  20                 	db	32
  5016  007EA1  20                 	db	67	;'C'
  5017  007EA2  43                 	db	32
  5018  007EA3  20                 	db	32
  5019  007EA4  20                 	db	32
  5020  007EA5  20                 	db	68	;'D'
  5021  007EA6  44                 	db	32
  5022  007EA7  20                 	db	32
  5023  007EA8  20                 	db	32
  5024  007EA9  20                 	db	32
  5025  007EAA  20                 	db	0
  5026  007EAB  00                 	
  5027                           STR_8:
  5028  007EAC                     	db	32
  5029  007EAC  20                 	db	32
  5030  007EAD  20                 	db	32
  5031  007EAE  20                 	db	68	;'D'
  5032  007EAF  44                 	db	69	;'E'
  5033  007EB0  45                 	db	76	;'L'
  5034  007EB1  4C                 	db	69	;'E'
  5035  007EB2  45                 	db	84	;'T'
  5036  007EB3  54                 	db	65	;'A'
  5037  007EB4  41                 	db	82	;'R'
  5038  007EB5  52                 	db	32
  5039  007EB6  20                 	db	84	;'T'
  5040  007EB7  54                 	db	79	;'O'
  5041  007EB8  4F                 	db	68	;'D'
  5042  007EB9  44                 	db	65	;'A'
  5043  007EBA  41                 	db	32
  5044  007EBB  20                 	db	65	;'A'
  5045  007EBC  41                 	db	32
  5046  007EBD  20                 	db	32
  5047  007EBE  20                 	db	32
  5048  007EBF  20                 	db	0
  5049  007EC0  00                 	
  5050                           STR_6:
  5051  007EC1                     	db	50	;'2'
  5052  007EC1  32                 	db	58	;':'
  5053  007EC2  3A                 	db	32
  5054  007EC3  20                 	db	76	;'L'
  5055  007EC4  4C                 	db	73	;'I'
  5056  007EC5  49                 	db	77	;'M'
  5057  007EC6  4D                 	db	80	;'P'
  5058  007EC7  50                 	db	65	;'A'
  5059  007EC8  41                 	db	82	;'R'
  5060  007EC9  52                 	db	32
  5061  007ECA  20                 	db	77	;'M'
  5062  007ECB  4D                 	db	69	;'E'
  5063  007ECC  45                 	db	77	;'M'
  5064  007ECD  4D                 	db	79	;'O'
  5065  007ECE  4F                 	db	82	;'R'
  5066  007ECF  52                 	db	73	;'I'
  5067  007ED0  49                 	db	65	;'A'
  5068  007ED1  41                 	db	32
  5069  007ED2  20                 	db	32
  5070  007ED3  20                 	db	32
  5071  007ED4  20                 	db	0
  5072  007ED5  00                 	
  5073                           STR_16:
  5074  007ED6                     	db	32
  5075  007ED6  20                 	db	32
  5076  007ED7  20                 	db	32
  5077  007ED8  20                 	db	65	;'A'
  5078  007ED9  41                 	db	74	;'J'
  5079  007EDA  4A                 	db	85	;'U'
  5080  007EDB  55                 	db	83	;'S'
  5081  007EDC  53                 	db	84	;'T'
  5082  007EDD  54                 	db	69	;'E'
  5083  007EDE  45                 	db	32
  5084  007EDF  20                 	db	79	;'O'
  5085  007EE0  4F                 	db	32
  5086  007EE1  20                 	db	73	;'I'
  5087  007EE2  49                 	db	78	;'N'
  5088  007EE3  4E                 	db	73	;'I'
  5089  007EE4  49                 	db	67	;'C'
  5090  007EE5  43                 	db	73	;'I'
  5091  007EE6  49                 	db	79	;'O'
  5092  007EE7  4F                 	db	32
  5093  007EE8  20                 	db	32
  5094  007EE9  20                 	db	0
  5095  007EEA  00                 	
  5096                           STR_19:
  5097  007EEB                     	db	32
  5098  007EEB  20                 	db	32
  5099  007EEC  20                 	db	73	;'I'
  5100  007EED  49                 	db	78	;'N'
  5101  007EEE  4E                 	db	83	;'S'
  5102  007EEF  53                 	db	73	;'I'
  5103  007EF0  49                 	db	82	;'R'
  5104  007EF1  52                 	db	65	;'A'
  5105  007EF2  41                 	db	32
  5106  007EF3  20                 	db	79	;'O'
  5107  007EF4  4F                 	db	83	;'S'
  5108  007EF5  53                 	db	32
  5109  007EF6  20                 	db	80	;'P'
  5110  007EF7  50                 	db	65	;'A'
  5111  007EF8  41                 	db	83	;'S'
  5112  007EF9  53                 	db	83	;'S'
  5113  007EFA  53                 	db	79	;'O'
  5114  007EFB  4F                 	db	83	;'S'
  5115  007EFC  53                 	db	32
  5116  007EFD  20                 	db	32
  5117  007EFE  20                 	db	0
  5118  007EFF  00                 	
  5119                           STR_25:
  5120  007F00                     	db	48	;'0'
  5121  007F00  30                 	db	32
  5122  007F01  20                 	db	45
  5123  007F02  2D                 	db	32
  5124  007F03  20                 	db	67	;'C'
  5125  007F04  43                 	db	105	;'i'
  5126  007F05  69                 	db	99	;'c'
  5127  007F06  63                 	db	108	;'l'
  5128  007F07  6C                 	db	111	;'o'
  5129  007F08  6F                 	db	32
  5130  007F09  20                 	db	99	;'c'
  5131  007F0A  63                 	db	111	;'o'
  5132  007F0B  6F                 	db	110	;'n'
  5133  007F0C  6E                 	db	116	;'t'
  5134  007F0D  74                 	db	105	;'i'
  5135  007F0E  69                 	db	110	;'n'
  5136  007F0F  6E                 	db	117	;'u'
  5137  007F10  75                 	db	111	;'o'
  5138  007F11  6F                 	db	32
  5139  007F12  20                 	db	32
  5140  007F13  20                 	db	0
  5141  007F14  00                 	
  5142                           STR_7:
  5143  007F15                     	db	32
  5144  007F15  20                 	db	67	;'C'
  5145  007F16  43                 	db	69	;'E'
  5146  007F17  45                 	db	82	;'R'
  5147  007F18  52                 	db	84	;'T'
  5148  007F19  54                 	db	69	;'E'
  5149  007F1A  45                 	db	90	;'Z'
  5150  007F1B  5A                 	db	65	;'A'
  5151  007F1C  41                 	db	32
  5152  007F1D  20                 	db	81	;'Q'
  5153  007F1E  51                 	db	85	;'U'
  5154  007F1F  55                 	db	69	;'E'
  5155  007F20  45                 	db	32
  5156  007F21  20                 	db	68	;'D'
  5157  007F22  44                 	db	69	;'E'
  5158  007F23  45                 	db	83	;'S'
  5159  007F24  53                 	db	69	;'E'
  5160  007F25  45                 	db	74	;'J'
  5161  007F26  4A                 	db	65	;'A'
  5162  007F27  41                 	db	32
  5163  007F28  20                 	db	0
  5164  007F29  00                 	
  5165                           STR_32:
  5166  007F2A                     	db	99	;'c'
  5167  007F2A  63                 	db	111	;'o'
  5168  007F2B  6F                 	db	110	;'n'
  5169  007F2C  6E                 	db	102	;'f'
  5170  007F2D  66                 	db	105	;'i'
  5171  007F2E  69                 	db	103	;'g'
  5172  007F2F  67                 	db	32
  5173  007F30  20                 	db	99	;'c'
  5174  007F31  63                 	db	111	;'o'
  5175  007F32  6F                 	db	110	;'n'
  5176  007F33  6E                 	db	116	;'t'
  5177  007F34  74                 	db	114	;'r'
  5178  007F35  72                 	db	108	;'l'
  5179  007F36  6C                 	db	58	;':'
  5180  007F37  3A                 	db	32
  5181  007F38  20                 	db	32
  5182  007F39  20                 	db	32
  5183  007F3A  20                 	db	32
  5184  007F3B  20                 	db	32
  5185  007F3C  20                 	db	37
  5186  007F3D  25                 	db	0
  5187  007F3E  00                 	
  5188                           STR_5:
  5189  007F3F                     	db	49	;'1'
  5190  007F3F  31                 	db	58	;':'
  5191  007F40  3A                 	db	32
  5192  007F41  20                 	db	86	;'V'
  5193  007F42  56                 	db	69	;'E'
  5194  007F43  45                 	db	82	;'R'
  5195  007F44  52                 	db	73	;'I'
  5196  007F45  49                 	db	70	;'F'
  5197  007F46  46                 	db	73	;'I'
  5198  007F47  49                 	db	67	;'C'
  5199  007F48  43                 	db	65	;'A'
  5200  007F49  41                 	db	82	;'R'
  5201  007F4A  52                 	db	32
  5202  007F4B  20                 	db	77	;'M'
  5203  007F4C  4D                 	db	69	;'E'
  5204  007F4D  45                 	db	77	;'M'
  5205  007F4E  4D                 	db	79	;'O'
  5206  007F4F  4F                 	db	82	;'R'
  5207  007F50  52                 	db	73	;'I'
  5208  007F51  49                 	db	65	;'A'
  5209  007F52  41                 	db	0
  5210  007F53  00                 	
  5211                           STR_23:
  5212  007F54                     	db	99	;'c'
  5213  007F54  63                 	db	111	;'o'
  5214  007F55  6F                 	db	110	;'n'
  5215  007F56  6E                 	db	102	;'f'
  5216  007F57  66                 	db	105	;'i'
  5217  007F58  69                 	db	103	;'g'
  5218  007F59  67                 	db	32
  5219  007F5A  20                 	db	116	;'t'
  5220  007F5B  74                 	db	101	;'e'
  5221  007F5C  65                 	db	109	;'m'
  5222  007F5D  6D                 	db	112	;'p'
  5223  007F5E  70                 	db	111	;'o'
  5224  007F5F  6F                 	db	58	;':'
  5225  007F60  3A                 	db	32
  5226  007F61  20                 	db	32
  5227  007F62  20                 	db	32
  5228  007F63  20                 	db	32
  5229  007F64  20                 	db	32
  5230  007F65  20                 	db	32
  5231  007F66  20                 	db	115	;'s'
  5232  007F67  73                 	db	0
  5233  007F68  00                 	
  5234                           STR_41:
  5235  007F69                     	db	65	;'A'
  5236  007F69  41                 	db	84	;'T'
  5237  007F6A  54                 	db	43
  5238  007F6B  2B                 	db	67	;'C'
  5239  007F6C  43                 	db	87	;'W'
  5240  007F6D  57                 	db	65	;'A'
  5241  007F6E  41                 	db	85	;'U'
  5242  007F6F  55                 	db	84	;'T'
  5243  007F70  54                 	db	79	;'O'
  5244  007F71  4F                 	db	67	;'C'
  5245  007F72  43                 	db	79	;'O'
  5246  007F73  4F                 	db	78	;'N'
  5247  007F74  4E                 	db	78	;'N'
  5248  007F75  4E                 	db	61	;'='
  5249  007F76  3D                 	db	48	;'0'
  5250  007F77  30                 	db	13
  5251  007F78  0D                 	db	10
  5252  007F79  0A                 	db	0
  5253  007F7A  00                 	
  5254                           STR_42:
  5255  007F7B                     	db	65	;'A'
  5256  007F7B  41                 	db	84	;'T'
  5257  007F7C  54                 	db	43
  5258  007F7D  2B                 	db	67	;'C'
  5259  007F7E  43                 	db	73	;'I'
  5260  007F7F  49                 	db	80	;'P'
  5261  007F80  50                 	db	77	;'M'
  5262  007F81  4D                 	db	79	;'O'
  5263  007F82  4F                 	db	68	;'D'
  5264  007F83  44                 	db	69	;'E'
  5265  007F84  45                 	db	61	;'='
  5266  007F85  3D                 	db	48	;'0'
  5267  007F86  30                 	db	13
  5268  007F87  0D                 	db	10
  5269  007F88  0A                 	db	0
  5270  007F89  00                 	
  5271                           STR_38:
  5272  007F8A                     	db	65	;'A'
  5273  007F8A  41                 	db	84	;'T'
  5274  007F8B  54                 	db	43
  5275  007F8C  2B                 	db	67	;'C'
  5276  007F8D  43                 	db	87	;'W'
  5277  007F8E  57                 	db	77	;'M'
  5278  007F8F  4D                 	db	79	;'O'
  5279  007F90  4F                 	db	68	;'D'
  5280  007F91  44                 	db	69	;'E'
  5281  007F92  45                 	db	61	;'='
  5282  007F93  3D                 	db	48	;'0'
  5283  007F94  30                 	db	13
  5284  007F95  0D                 	db	10
  5285  007F96  0A                 	db	0
  5286  007F97  00                 	
  5287                           STR_33:
  5288  007F98                     	db	65	;'A'
  5289  007F98  41                 	db	84	;'T'
  5290  007F99  54                 	db	43
  5291  007F9A  2B                 	db	67	;'C'
  5292  007F9B  43                 	db	87	;'W'
  5293  007F9C  57                 	db	77	;'M'
  5294  007F9D  4D                 	db	79	;'O'
  5295  007F9E  4F                 	db	68	;'D'
  5296  007F9F  44                 	db	69	;'E'
  5297  007FA0  45                 	db	61	;'='
  5298  007FA1  3D                 	db	49	;'1'
  5299  007FA2  31                 	db	13
  5300  007FA3  0D                 	db	10
  5301  007FA4  0A                 	db	0
  5302  007FA5  00                 	
  5303                           STR_43:
  5304  007FA6                     	db	65	;'A'
  5305  007FA6  41                 	db	84	;'T'
  5306  007FA7  54                 	db	43
  5307  007FA8  2B                 	db	67	;'C'
  5308  007FA9  43                 	db	73	;'I'
  5309  007FAA  49                 	db	80	;'P'
  5310  007FAB  50                 	db	77	;'M'
  5311  007FAC  4D                 	db	85	;'U'
  5312  007FAD  55                 	db	88	;'X'
  5313  007FAE  58                 	db	61	;'='
  5314  007FAF  3D                 	db	49	;'1'
  5315  007FB0  31                 	db	13
  5316  007FB1  0D                 	db	10
  5317  007FB2  0A                 	db	0
  5318  007FB3  00                 	
  5319                           STR_34:
  5320  007FB4                     	db	65	;'A'
  5321  007FB4  41                 	db	84	;'T'
  5322  007FB5  54                 	db	43
  5323  007FB6  2B                 	db	67	;'C'
  5324  007FB7  43                 	db	87	;'W'
  5325  007FB8  57                 	db	77	;'M'
  5326  007FB9  4D                 	db	79	;'O'
  5327  007FBA  4F                 	db	68	;'D'
  5328  007FBB  44                 	db	69	;'E'
  5329  007FBC  45                 	db	61	;'='
  5330  007FBD  3D                 	db	50	;'2'
  5331  007FBE  32                 	db	13
  5332  007FBF  0D                 	db	10
  5333  007FC0  0A                 	db	0
  5334  007FC1  00                 	
  5335                           STR_36:
  5336  007FC2                     	db	65	;'A'
  5337  007FC2  41                 	db	84	;'T'
  5338  007FC3  54                 	db	43
  5339  007FC4  2B                 	db	67	;'C'
  5340  007FC5  43                 	db	87	;'W'
  5341  007FC6  57                 	db	77	;'M'
  5342  007FC7  4D                 	db	79	;'O'
  5343  007FC8  4F                 	db	68	;'D'
  5344  007FC9  44                 	db	69	;'E'
  5345  007FCA  45                 	db	61	;'='
  5346  007FCB  3D                 	db	51	;'3'
  5347  007FCC  33                 	db	13
  5348  007FCD  0D                 	db	10
  5349  007FCE  0A                 	db	0
  5350  007FCF  00                 	
  5351                           STR_46:
  5352  007FD0                     	db	65	;'A'
  5353  007FD0  41                 	db	84	;'T'
  5354  007FD1  54                 	db	43
  5355  007FD2  2B                 	db	67	;'C'
  5356  007FD3  43                 	db	73	;'I'
  5357  007FD4  49                 	db	80	;'P'
  5358  007FD5  50                 	db	67	;'C'
  5359  007FD6  43                 	db	76	;'L'
  5360  007FD7  4C                 	db	79	;'O'
  5361  007FD8  4F                 	db	83	;'S'
  5362  007FD9  53                 	db	69	;'E'
  5363  007FDA  45                 	db	13
  5364  007FDB  0D                 	db	10
  5365  007FDC  0A                 	db	0
  5366  007FDD  00                 	
  5367                           STR_39:
  5368  007FDE                     	db	65	;'A'
  5369  007FDE  41                 	db	84	;'T'
  5370  007FDF  54                 	db	43
  5371  007FE0  2B                 	db	67	;'C'
  5372  007FE1  43                 	db	87	;'W'
  5373  007FE2  57                 	db	76	;'L'
  5374  007FE3  4C                 	db	65	;'A'
  5375  007FE4  41                 	db	80	;'P'
  5376  007FE5  50                 	db	13
  5377  007FE6  0D                 	db	10
  5378  007FE7  0A                 	db	0
  5379  007FE8  00                 	
  5380                           STR_40:
  5381  007FE9                     	db	65	;'A'
  5382  007FE9  41                 	db	84	;'T'
  5383  007FEA  54                 	db	43
  5384  007FEB  2B                 	db	67	;'C'
  5385  007FEC  43                 	db	73	;'I'
  5386  007FED  49                 	db	70	;'F'
  5387  007FEE  46                 	db	83	;'S'
  5388  007FEF  53                 	db	82	;'R'
  5389  007FF0  52                 	db	13
  5390  007FF1  0D                 	db	10
  5391  007FF2  0A                 	db	0
  5392  007FF3  00                 	
  5393                           STR_20:
  5394  007FF4                     	db	60	;'<'
  5395  007FF4  3C                 	db	32
  5396  007FF5  20                 	db	32
  5397  007FF6  20                 	db	47
  5398  007FF7  2F                 	db	32
  5399  007FF8  20                 	db	32
  5400  007FF9  20                 	db	62	;'>'
  5401  007FFA  3E                 	db	0
  5402  007FFB  00                 	
  5403                           STR_1:
  5404  007FFC                     	db	-1
  5405  007FFC  FF                 	db	0
  5406  007FFD  00                 STR_10	equ	STR_26+41
  5407  0000                     STR_2	equ	STR_24+19
  5408  0000                     STR_12	equ	STR_24+19
  5409  0000                     STR_29	equ	STR_24+19
  5410  0000                     STR_37	equ	STR_35+0
  5411  0000                     STR_11	equ	STR_1+0
  5412  0000                     STR_28	equ	STR_1+0
  5413  0000                     ; #config settings
  5414                           global __CFG_PLLDIV$5
  5415                           __CFG_PLLDIV$5 equ 0x0
  5416  0000                     global __CFG_CPUDIV$OSC1_PLL2
  5417                           __CFG_CPUDIV$OSC1_PLL2 equ 0x0
  5418  0000                     global __CFG_USBDIV$1
  5419                           __CFG_USBDIV$1 equ 0x0
  5420  0000                     global __CFG_FOSC$HS
  5421                           __CFG_FOSC$HS equ 0x0
  5422  0000                     global __CFG_FCMEN$OFF
  5423                           __CFG_FCMEN$OFF equ 0x0
  5424  0000                     global __CFG_IESO$OFF
  5425                           __CFG_IESO$OFF equ 0x0
  5426  0000                     global __CFG_PWRT$ON
  5427                           __CFG_PWRT$ON equ 0x0
  5428  0000                     global __CFG_BOR$OFF
  5429                           __CFG_BOR$OFF equ 0x0
  5430  0000                     global __CFG_BORV$3
  5431                           __CFG_BORV$3 equ 0x0
  5432  0000                     global __CFG_VREGEN$OFF
  5433                           __CFG_VREGEN$OFF equ 0x0
  5434  0000                     global __CFG_WDT$OFF
  5435                           __CFG_WDT$OFF equ 0x0
  5436  0000                     global __CFG_WDTPS$32768
  5437                           __CFG_WDTPS$32768 equ 0x0
  5438  0000                     global __CFG_CCP2MX$ON
  5439                           __CFG_CCP2MX$ON equ 0x0
  5440  0000                     global __CFG_PBADEN$OFF
  5441                           __CFG_PBADEN$OFF equ 0x0
  5442  0000                     global __CFG_LPT1OSC$OFF
  5443                           __CFG_LPT1OSC$OFF equ 0x0
  5444  0000                     global __CFG_MCLRE$OFF
  5445                           __CFG_MCLRE$OFF equ 0x0
  5446  0000                     global __CFG_STVREN$OFF
  5447                           __CFG_STVREN$OFF equ 0x0
  5448  0000                     global __CFG_LVP$OFF
  5449                           __CFG_LVP$OFF equ 0x0
  5450  0000                     global __CFG_ICPRT$OFF
  5451                           __CFG_ICPRT$OFF equ 0x0
  5452  0000                     global __CFG_XINST$OFF
  5453                           __CFG_XINST$OFF equ 0x0
  5454  0000                     global __CFG_CP0$OFF
  5455                           __CFG_CP0$OFF equ 0x0
  5456  0000                     global __CFG_CP1$OFF
  5457                           __CFG_CP1$OFF equ 0x0
  5458  0000                     global __CFG_CP2$OFF
  5459                           __CFG_CP2$OFF equ 0x0
  5460  0000                     global __CFG_CP3$OFF
  5461                           __CFG_CP3$OFF equ 0x0
  5462  0000                     global __CFG_CPB$OFF
  5463                           __CFG_CPB$OFF equ 0x0
  5464  0000                     global __CFG_CPD$OFF
  5465                           __CFG_CPD$OFF equ 0x0
  5466  0000                     global __CFG_WRT0$OFF
  5467                           __CFG_WRT0$OFF equ 0x0
  5468  0000                     global __CFG_WRT1$OFF
  5469                           __CFG_WRT1$OFF equ 0x0
  5470  0000                     global __CFG_WRT2$OFF
  5471                           __CFG_WRT2$OFF equ 0x0
  5472  0000                     global __CFG_WRT3$OFF
  5473                           __CFG_WRT3$OFF equ 0x0
  5474  0000                     global __CFG_WRTC$OFF
  5475                           __CFG_WRTC$OFF equ 0x0
  5476  0000                     global __CFG_WRTB$OFF
  5477                           __CFG_WRTB$OFF equ 0x0
  5478  0000                     global __CFG_WRTD$OFF
  5479                           __CFG_WRTD$OFF equ 0x0
  5480  0000                     global __CFG_EBTR0$OFF
  5481                           __CFG_EBTR0$OFF equ 0x0
  5482  0000                     global __CFG_EBTR1$OFF
  5483                           __CFG_EBTR1$OFF equ 0x0
  5484  0000                     global __CFG_EBTR2$OFF
  5485                           __CFG_EBTR2$OFF equ 0x0
  5486  0000                     global __CFG_EBTR3$OFF
  5487                           __CFG_EBTR3$OFF equ 0x0
  5488  0000                     global __CFG_EBTRB$OFF
  5489                           __CFG_EBTRB$OFF equ 0x0
  5490  0000                     	file	"C:\Users\20185189\AppData\Local\Temp\scsc."
  5491                           	line	#
  5492                           psect	cinit,class=CODE,delta=1,reloc=2
  5493                           global __pcinit
  5494                           __pcinit:
  5495  0037D6                     global start_initialization
  5496                           start_initialization:
  5497  0037D6                     
  5498                           global __initialization
  5499                           __initialization:
  5500  0037D6                     psect	bssCOMRAM,class=COMRAM,space=1,noexec
  5501                           global __pbssCOMRAM
  5502                           __pbssCOMRAM:
  5503  000001                     	global	_t1cont
  5504                           _t1cont:
  5505  000001                            ds      4
  5506  000001                     salva_atuadores_init@F108:
  5507  000005                            ds      4
  5508  000005                     	global	_ptrSerialOut
  5509                           _ptrSerialOut:
  5510  000009                            ds      2
  5511  000009                     	global	_ptrSerialIn
  5512                           _ptrSerialIn:
  5513  00000B                            ds      2
  5514  00000B                     	global	_cont_ciclos
  5515                           _cont_ciclos:
  5516  00000D                            ds      2
  5517  00000D                     	global	_ciclos
  5518                           	global	_ciclos
  5519                           _ciclos:
  5520  00000F                            ds      2
  5521  00000F                     	global	_teclaAnterior
  5522                           _teclaAnterior:
  5523  000011                            ds      1
  5524  000011                     	global	_lenSerialIO
  5525                           _lenSerialIO:
  5526  000012                            ds      1
  5527  000012                     	global	_atuador
  5528                           _atuador:
  5529  000013                            ds      1
  5530  000013                     	global	_d
  5531                           	global	_d
  5532                           _d:
  5533  000014                            ds      1
  5534  000014                     	global	_fila
  5535                           _fila:
  5536  000015                            ds      18
  5537  000015                     psect	dataCOMRAM,class=COMRAM,space=1,noexec
  5538                           global __pdataCOMRAM
  5539                           __pdataCOMRAM:
  5540  000047                     	file	"./eeprom.h"
  5541                           	line	28
  5542                           	global	_EEPROM
  5543                           _EEPROM:
  5544  000047                            ds      10
  5545  000047                     psect	dataCOMRAM
  5546                           	file	"./ihm.h"
  5547                           	line	14
  5548                           	global	_IHM
  5549                           _IHM:
  5550  000051                            ds      10
  5551  000051                     psect	dataCOMRAM
  5552                           	file	"fifo.c"
  5553                           	line	16
  5554                           	global	_indice_passos
  5555                           _indice_passos:
  5556  00005B                            ds      1
  5557  00005B                     psect	dataCOMRAM
  5558                           	file	"fifo.c"
  5559                           	line	12
  5560                           	global	_ind_print
  5561                           _ind_print:
  5562  00005C                            ds      1
  5563  00005C                     psect	dataCOMRAM
  5564                           	file	"fifo.c"
  5565                           	line	11
  5566                           	global	_ind_fila
  5567                           _ind_fila:
  5568  00005D                            ds      1
  5569  00005D                     psect	bssBANK0h,class=BANK0,space=1,noexec,lowdata
  5570                           global __pbssBANK0h
  5571                           __pbssBANK0h:
  5572  0000F1                     main@F3484:
  5573  0000F1                            ds      1
  5574  0000F1                     main@F3482:
  5575  0000F2                            ds      1
  5576  0000F2                     psect	dataBANK0l,class=BANK0,space=1,noexec,lowdata
  5577                           global __pdataBANK0l
  5578                           __pdataBANK0l:
  5579  0000BD                     	file	"./wifi.h"
  5580                           	line	38
  5581                           	global	_wifi
  5582                           _wifi:
  5583  0000BD                            ds      20
  5584  0000BD                     psect	dataBANK0l
  5585                           	file	"eusart.c"
  5586                           	line	26
  5587                           	global	_eusart
  5588                           _eusart:
  5589  0000D1                            ds      16
  5590  0000D1                     psect	dataBANK0l
  5591                           	file	"teclado.c"
  5592                           	line	50
  5593                           	global	_teclas
  5594                           _teclas:
  5595  0000E1                            ds      16
  5596  0000E1                     psect	bssBANK1,class=BANK1,space=1,noexec,lowdata
  5597                           global __pbssBANK1
  5598                           __pbssBANK1:
  5599  00015A                     Wifi_cipsend@F3295:
  5600  00015A                            ds      30
  5601  00015A                     psect	dataBANK1,class=BANK1,space=1,noexec,lowdata
  5602                           global __pdataBANK1
  5603                           __pdataBANK1:
  5604  000100                     	file	"wifi.c"
  5605                           	line	69
  5606                           Wifi_connect@F3282:
  5607  000100                            ds      40
  5608  000100                     psect	dataBANK1
  5609                           	file	"wifi.c"
  5610                           	line	117
  5611                           Wifi_cipsend@F3292:
  5612  000128                            ds      30
  5613  000128                     psect	dataBANK1
  5614                           	file	"main.c"
  5615                           	line	136
  5616                           main@F3508:
  5617  000146                            ds      20
  5618  000146                     	file	"C:\Users\20185189\AppData\Local\Temp\scsc."
  5619                           	line	#
  5620                           psect	cinit
  5621                           ; Initialize objects allocated to BANK1 (90 bytes)
  5622                           	global __pidataBANK1
  5623                           	; load TBLPTR registers with __pidataBANK1
  5624                           	movlw	low (__pidataBANK1)
  5625  0037D6  0ECC               	movwf	tblptrl
  5626  0037D8  6EF6               	movlw	high(__pidataBANK1)
  5627  0037DA  0E3D               	movwf	tblptrh
  5628  0037DC  6EF7               	movlw	low highword(__pidataBANK1)
  5629  0037DE  0E00               	movwf	tblptru
  5630  0037E0  6EF8               	lfsr	0,__pdataBANK1
  5631  0037E2  EE01  F000         	lfsr	1,90
  5632  0037E6  EE10 F05A          	copy_data0:
  5633  0037EA                     	tblrd	*+
  5634  0037EA  0009               	movff	tablat, postinc0
  5635  0037EC  CFF5 FFEE          	movf	postdec1,w
  5636  0037F0  50E5               	movf	fsr1l,w
  5637  0037F2  50E1               	bnz	copy_data0
  5638  0037F4  E1FA               ; Initialize objects allocated to COMRAM (23 bytes)
  5639                           	global __pidataCOMRAM
  5640                           	; load TBLPTR registers with __pidataCOMRAM
  5641                           	movlw	low (__pidataCOMRAM)
  5642  0037F6  0ED4               	movwf	tblptrl
  5643  0037F8  6EF6               	movlw	high(__pidataCOMRAM)
  5644  0037FA  0E44               	movwf	tblptrh
  5645  0037FC  6EF7               	movlw	low highword(__pidataCOMRAM)
  5646  0037FE  0E00               	movwf	tblptru
  5647  003800  6EF8               	lfsr	0,__pdataCOMRAM
  5648  003802  EE00  F047         	lfsr	1,23
  5649  003806  EE10 F017          	copy_data1:
  5650  00380A                     	tblrd	*+
  5651  00380A  0009               	movff	tablat, postinc0
  5652  00380C  CFF5 FFEE          	movf	postdec1,w
  5653  003810  50E5               	movf	fsr1l,w
  5654  003812  50E1               	bnz	copy_data1
  5655  003814  E1FA               ; Initialize objects allocated to BANK0l (52 bytes)
  5656                           	global __pidataBANK0l
  5657                           	; load TBLPTR registers with __pidataBANK0l
  5658                           	movlw	low (__pidataBANK0l)
  5659  003816  0E36               	movwf	tblptrl
  5660  003818  6EF6               	movlw	high(__pidataBANK0l)
  5661  00381A  0E41               	movwf	tblptrh
  5662  00381C  6EF7               	movlw	low highword(__pidataBANK0l)
  5663  00381E  0E00               	movwf	tblptru
  5664  003820  6EF8               	lfsr	0,__pdataBANK0l
  5665  003822  EE00  F0BD         	lfsr	1,52
  5666  003826  EE10 F034          	copy_data2:
  5667  00382A                     	tblrd	*+
  5668  00382A  0009               	movff	tablat, postinc0
  5669  00382C  CFF5 FFEE          	movf	postdec1,w
  5670  003830  50E5               	movf	fsr1l,w
  5671  003832  50E1               	bnz	copy_data2
  5672  003834  E1FA               	line	#
  5673                           ; Clear objects allocated to BANK1 (30 bytes)
  5674                           	global __pbssBANK1
  5675                           lfsr	0,__pbssBANK1
  5676  003836  EE01  F05A         movlw	30
  5677  00383A  0E1E               clear_0:
  5678  00383C                     clrf	postinc0,c
  5679  00383C  6AEE               decf	wreg
  5680  00383E  06E8               bnz	clear_0
  5681  003840  E1FD               ; Clear objects allocated to BANK0h (2 bytes)
  5682                           	global __pbssBANK0h
  5683                           movlb	0
  5684  003842  0100               clrf	(__pbssBANK0h+1)&0xffh,b
  5685  003844  6BF2               clrf	(__pbssBANK0h+0)&0xffh,b
  5686  003846  6BF1               ; Clear objects allocated to COMRAM (38 bytes)
  5687                           	global __pbssCOMRAM
  5688                           lfsr	0,__pbssCOMRAM
  5689  003848  EE00  F001         movlw	38
  5690  00384C  0E26               clear_1:
  5691  00384E                     clrf	postinc0,c
  5692  00384E  6AEE               decf	wreg
  5693  003850  06E8               bnz	clear_1
  5694  003852  E1FD               psect cinit,class=CODE,delta=1
  5695                           global end_of_initialization,__end_of__initialization
  5696                           
  5697                           ;End of C runtime variable initialization code
  5698                           
  5699                           end_of_initialization:
  5700  003854                     __end_of__initialization:
  5701  003854                     	bcf int$flags,0,c ;clear compiler interrupt flag (level 1)
  5702  003854  905E               	bcf int$flags,1,c ;clear compiler interrupt flag (level 2)
  5703  003856  925E               	GLOBAL	__Lmediumconst
  5704                           	movlw	low highword(__Lmediumconst)
  5705  003858  0E00               	movwf	tblptru
  5706  00385A  6EF8               movlb 0
  5707  00385C  0100               goto _main	;jump to C main() function
  5708  00385E  EF09  F000         psect	cstackBANK0h,class=BANK0,space=1,noexec
  5709                           global __pcstackBANK0h
  5710                           __pcstackBANK0h:
  5711  000060                     	global	main@lema
  5712                           main@lema:	; 20 bytes @ 0x0
  5713  000060                     	ds   20
  5714  000060                     	global	main@contPassos
  5715                           main@contPassos:	; 1 bytes @ 0x14
  5716  000074                     	ds   1
  5717  000074                     	global	main@aux
  5718                           main@aux:	; 1 bytes @ 0x15
  5719  000075                     	ds   1
  5720  000075                     	global	main@vetor_aux
  5721                           main@vetor_aux:	; 16 bytes @ 0x16
  5722  000076                     	ds   16
  5723  000076                     	global	_main$653
  5724                           _main$653:	; 2 bytes @ 0x26
  5725  000086                     	ds   2
  5726  000086                     	global	_main$672
  5727                           _main$672:	; 2 bytes @ 0x28
  5728  000088                     	ds   2
  5729  000088                     	global	_main$676
  5730                           _main$676:	; 2 bytes @ 0x2A
  5731  00008A                     	ds   2
  5732  00008A                     	global	_main$677
  5733                           _main$677:	; 2 bytes @ 0x2C
  5734  00008C                     	ds   2
  5735  00008C                     	global	_main$678
  5736                           _main$678:	; 2 bytes @ 0x2E
  5737  00008E                     	ds   2
  5738  00008E                     	global	_main$679
  5739                           _main$679:	; 2 bytes @ 0x30
  5740  000090                     	ds   2
  5741  000090                     	global	_main$680
  5742                           _main$680:	; 2 bytes @ 0x32
  5743  000092                     	ds   2
  5744  000092                     	global	_main$681
  5745                           _main$681:	; 2 bytes @ 0x34
  5746  000094                     	ds   2
  5747  000094                     	global	_main$682
  5748                           _main$682:	; 2 bytes @ 0x36
  5749  000096                     	ds   2
  5750  000096                     	global	_main$683
  5751                           _main$683:	; 2 bytes @ 0x38
  5752  000098                     	ds   2
  5753  000098                     	global	_main$685
  5754                           _main$685:	; 2 bytes @ 0x3A
  5755  00009A                     	ds   2
  5756  00009A                     	global	main@i_649
  5757                           main@i_649:	; 1 bytes @ 0x3C
  5758  00009C                     	ds   1
  5759  00009C                     	global	main@pt
  5760                           main@pt:	; 2 bytes @ 0x3D
  5761  00009D                     	ds   2
  5762  00009D                     	global	main@ptr
  5763                           main@ptr:	; 2 bytes @ 0x3F
  5764  00009F                     	ds   2
  5765  00009F                     	global	main@i
  5766                           main@i:	; 1 bytes @ 0x41
  5767  0000A1                     	ds   1
  5768  0000A1                     	global	main@j
  5769                           main@j:	; 1 bytes @ 0x42
  5770  0000A2                     	ds   1
  5771  0000A2                     	global	main@i_643
  5772                           main@i_643:	; 1 bytes @ 0x43
  5773  0000A3                     	ds   1
  5774  0000A3                     	global	main@j_644
  5775                           main@j_644:	; 1 bytes @ 0x44
  5776  0000A4                     	ds   1
  5777  0000A4                     	global	main@i_661
  5778                           main@i_661:	; 1 bytes @ 0x45
  5779  0000A5                     	ds   1
  5780  0000A5                     	global	main@j_662
  5781                           main@j_662:	; 1 bytes @ 0x46
  5782  0000A6                     	ds   1
  5783  0000A6                     	global	main@i_664
  5784                           main@i_664:	; 1 bytes @ 0x47
  5785  0000A7                     	ds   1
  5786  0000A7                     	global	main@j_665
  5787                           main@j_665:	; 1 bytes @ 0x48
  5788  0000A8                     	ds   1
  5789  0000A8                     	global	main@i_694
  5790                           main@i_694:	; 1 bytes @ 0x49
  5791  0000A9                     	ds   1
  5792  0000A9                     	global	main@j_695
  5793                           main@j_695:	; 1 bytes @ 0x4A
  5794  0000AA                     	ds   1
  5795  0000AA                     	global	main@i_697
  5796                           main@i_697:	; 1 bytes @ 0x4B
  5797  0000AB                     	ds   1
  5798  0000AB                     	global	main@j_698
  5799                           main@j_698:	; 1 bytes @ 0x4C
  5800  0000AC                     	ds   1
  5801  0000AC                     	global	main@vetorIn
  5802                           main@vetorIn:	; 1 bytes @ 0x4D
  5803  0000AD                     	ds   1
  5804  0000AD                     	global	main@vetorOut
  5805                           main@vetorOut:	; 1 bytes @ 0x4E
  5806  0000AE                     	ds   1
  5807  0000AE                     	global	main@meAtuadores
  5808                           main@meAtuadores:	; 1 bytes @ 0x4F
  5809  0000AF                     	ds   1
  5810  0000AF                     	global	main@ciclos
  5811                           main@ciclos:	; 2 bytes @ 0x50
  5812  0000B0                     	ds   2
  5813  0000B0                     	global	main@init_cond
  5814                           main@init_cond:	; 1 bytes @ 0x52
  5815  0000B2                     	ds   1
  5816  0000B2                     	global	main@botao
  5817                           main@botao:	; 1 bytes @ 0x53
  5818  0000B3                     	ds   1
  5819  0000B3                     	global	main@num
  5820                           main@num:	; 2 bytes @ 0x54
  5821  0000B4                     	ds   2
  5822  0000B4                     	global	main@ptr_652
  5823                           main@ptr_652:	; 2 bytes @ 0x56
  5824  0000B6                     	ds   2
  5825  0000B6                     	global	main@ptr_671
  5826                           main@ptr_671:	; 2 bytes @ 0x58
  5827  0000B8                     	ds   2
  5828  0000B8                     	global	main@auxPasso
  5829                           main@auxPasso:	; 1 bytes @ 0x5A
  5830  0000BA                     	ds   1
  5831  0000BA                     	global	main@estado
  5832                           main@estado:	; 1 bytes @ 0x5B
  5833  0000BB                     	ds   1
  5834  0000BB                     	global	main@tecla
  5835                           main@tecla:	; 1 bytes @ 0x5C
  5836  0000BC                     	ds   1
  5837  0000BC                     psect	cstackCOMRAM,class=COMRAM,space=1,noexec
  5838                           global __pcstackCOMRAM
  5839                           __pcstackCOMRAM:
  5840  000027                     ?_dispLCD_init:	; 1 bytes @ 0x0
  5841  000027                     ?_dispLCD_clr:	; 1 bytes @ 0x0
  5842  000027                     ?_deletar_receita:	; 1 bytes @ 0x0
  5843  000027                     ?_formatar_receitas:	; 1 bytes @ 0x0
  5844  000027                     ?_Wifi_mode:	; 1 bytes @ 0x0
  5845  000027                     ?_intt1_1ms:	; 1 bytes @ 0x0
  5846  000027                     ??_intt1_1ms:	; 1 bytes @ 0x0
  5847  000027                     ?_teclado_init:	; 1 bytes @ 0x0
  5848  000027                     ??_teclado_init:	; 1 bytes @ 0x0
  5849  000027                     ?_timer1_init:	; 1 bytes @ 0x0
  5850  000027                     ??_timer1_init:	; 1 bytes @ 0x0
  5851  000027                     ?_initSerialIO:	; 1 bytes @ 0x0
  5852  000027                     ?_delay:	; 1 bytes @ 0x0
  5853  000027                     ?_dispLCD_dataReg:	; 1 bytes @ 0x0
  5854  000027                     ??_dispLCD_dataReg:	; 1 bytes @ 0x0
  5855  000027                     ?_init_atuadores:	; 1 bytes @ 0x0
  5856  000027                     ??_init_atuadores:	; 1 bytes @ 0x0
  5857  000027                     ?_teclado_borda:	; 1 bytes @ 0x0
  5858  000027                     ?_manipula_atuadores_init:	; 1 bytes @ 0x0
  5859  000027                     ?_decodifica:	; 1 bytes @ 0x0
  5860  000027                     ?_fifo_add_control:	; 1 bytes @ 0x0
  5861  000027                     ?_fifo_add_tempo:	; 1 bytes @ 0x0
  5862  000027                     ?_alt_atuador:	; 1 bytes @ 0x0
  5863  000027                     ??_alt_atuador:	; 1 bytes @ 0x0
  5864  000027                     ?_fifo_add:	; 1 bytes @ 0x0
  5865  000027                     ?_ler_atuador:	; 1 bytes @ 0x0
  5866  000027                     ??_ler_atuador:	; 1 bytes @ 0x0
  5867  000027                     ?_fifo_print:	; 1 bytes @ 0x0
  5868  000027                     ?_salva_atuadores_init:	; 1 bytes @ 0x0
  5869  000027                     ?_fifo_disponivel:	; 1 bytes @ 0x0
  5870  000027                     ??_fifo_disponivel:	; 1 bytes @ 0x0
  5871  000027                     ?_fifo_indicePrint_inc:	; 1 bytes @ 0x0
  5872  000027                     ??_fifo_indicePrint_inc:	; 1 bytes @ 0x0
  5873  000027                     ?_fifo_indicePrint_dec:	; 1 bytes @ 0x0
  5874  000027                     ??_fifo_indicePrint_dec:	; 1 bytes @ 0x0
  5875  000027                     ?_fifo_indice:	; 1 bytes @ 0x0
  5876  000027                     ??_fifo_indice:	; 1 bytes @ 0x0
  5877  000027                     ?_fifo_delete:	; 1 bytes @ 0x0
  5878  000027                     ?_fifo_tam:	; 1 bytes @ 0x0
  5879  000027                     ??_fifo_tam:	; 1 bytes @ 0x0
  5880  000027                     ?_getIndicePassos:	; 1 bytes @ 0x0
  5881  000027                     ??_getIndicePassos:	; 1 bytes @ 0x0
  5882  000027                     ?_fifo_add_ciclo:	; 1 bytes @ 0x0
  5883  000027                     ?_serialIOscan:	; 1 bytes @ 0x0
  5884  000027                     ?_resetIndicePassos:	; 1 bytes @ 0x0
  5885  000027                     ??_resetIndicePassos:	; 1 bytes @ 0x0
  5886  000027                     ?_resetContCiclos:	; 1 bytes @ 0x0
  5887  000027                     ??_resetContCiclos:	; 1 bytes @ 0x0
  5888  000027                     ?_fifo_lerPos:	; 1 bytes @ 0x0
  5889  000027                     ??_fifo_lerPos:	; 1 bytes @ 0x0
  5890  000027                     ?_set_passo:	; 1 bytes @ 0x0
  5891  000027                     ?_ler_sensor:	; 1 bytes @ 0x0
  5892  000027                     ?_addIndicePassos:	; 1 bytes @ 0x0
  5893  000027                     ??_addIndicePassos:	; 1 bytes @ 0x0
  5894  000027                     ?_addContCiclos:	; 1 bytes @ 0x0
  5895  000027                     ??_addContCiclos:	; 1 bytes @ 0x0
  5896  000027                     ?_codifica:	; 1 bytes @ 0x0
  5897  000027                     ?_fifo_alinharPrint:	; 1 bytes @ 0x0
  5898  000027                     ?_I2C_start:	; 1 bytes @ 0x0
  5899  000027                     ??_I2C_start:	; 1 bytes @ 0x0
  5900  000027                     ?_I2C_tx:	; 1 bytes @ 0x0
  5901  000027                     ??_I2C_tx:	; 1 bytes @ 0x0
  5902  000027                     ?_I2C_ack_receive:	; 1 bytes @ 0x0
  5903  000027                     ??_I2C_ack_receive:	; 1 bytes @ 0x0
  5904  000027                     ?_I2C_stop:	; 1 bytes @ 0x0
  5905  000027                     ??_I2C_stop:	; 1 bytes @ 0x0
  5906  000027                     ?_txEUSART:	; 1 bytes @ 0x0
  5907  000027                     ??_txEUSART:	; 1 bytes @ 0x0
  5908  000027                     ?_txStatusEUSART:	; 1 bytes @ 0x0
  5909  000027                     ??_txStatusEUSART:	; 1 bytes @ 0x0
  5910  000027                     ?_irq:	; 1 bytes @ 0x0
  5911  000027                     ??_irq:	; 1 bytes @ 0x0
  5912  000027                     ?_main:	; 1 bytes @ 0x0
  5913  000027                     ?_dispLCD_instReg:	; 1 bytes @ 0x0
  5914  000027                     ??_dispLCD_instReg:	; 1 bytes @ 0x0
  5915  000027                     ?_EEPROM_read:	; 1 bytes @ 0x0
  5916  000027                     ??_EEPROM_read:	; 1 bytes @ 0x0
  5917  000027                     ?_EEPROM_write:	; 1 bytes @ 0x0
  5918  000027                     ?_posAtual:	; 1 bytes @ 0x0
  5919  000027                     ?_dac_init:	; 1 bytes @ 0x0
  5920  000027                     ?_serialIOload:	; 1 bytes @ 0x0
  5921  000027                     ??_serialIOload:	; 1 bytes @ 0x0
  5922  000027                     ?_serialIObyteShift:	; 1 bytes @ 0x0
  5923  000027                     ??_serialIObyteShift:	; 1 bytes @ 0x0
  5924  000027                     ?_teclado_scan:	; 1 bytes @ 0x0
  5925  000027                     ??_teclado_scan:	; 1 bytes @ 0x0
  5926  000027                     	global	?_getContCiclos
  5927                           ?_getContCiclos:	; 2 bytes @ 0x0
  5928  000027                     	global	?_fifo_adrs
  5929                           ?_fifo_adrs:	; 2 bytes @ 0x0
  5930  000027                     	global	?_getCiclos
  5931                           ?_getCiclos:	; 2 bytes @ 0x0
  5932  000027                     	global	?_end_receita
  5933                           ?_end_receita:	; 2 bytes @ 0x0
  5934  000027                     	global	?___wmul
  5935                           ?___wmul:	; 2 bytes @ 0x0
  5936  000027                     	global	?___awdiv
  5937                           ?___awdiv:	; 2 bytes @ 0x0
  5938  000027                     	global	?___awmod
  5939                           ?___awmod:	; 2 bytes @ 0x0
  5940  000027                     	global	?___lwdiv
  5941                           ?___lwdiv:	; 2 bytes @ 0x0
  5942  000027                     	global	?_statusT1
  5943                           ?_statusT1:	; 4 bytes @ 0x0
  5944  000027                     	global	?___lmul
  5945                           ?___lmul:	; 4 bytes @ 0x0
  5946  000027                     	global	?___lldiv
  5947                           ?___lldiv:	; 4 bytes @ 0x0
  5948  000027                     	global	EEPROM_read@addr
  5949                           EEPROM_read@addr:	; 1 bytes @ 0x0
  5950  000027                     	global	EEPROM_write@data
  5951                           EEPROM_write@data:	; 1 bytes @ 0x0
  5952  000027                     	global	fifo_lerPos@i
  5953                           fifo_lerPos@i:	; 1 bytes @ 0x0
  5954  000027                     	global	serialIObyteShift@dataIn
  5955                           serialIObyteShift@dataIn:	; 1 bytes @ 0x0
  5956  000027                     	global	I2C_tx@b
  5957                           I2C_tx@b:	; 1 bytes @ 0x0
  5958  000027                     	global	txEUSART@d
  5959                           txEUSART@d:	; 1 bytes @ 0x0
  5960  000027                     	global	set_passo@ptr
  5961                           set_passo@ptr:	; 2 bytes @ 0x0
  5962  000027                     	global	ler_sensor@ptr
  5963                           ler_sensor@ptr:	; 2 bytes @ 0x0
  5964  000027                     	global	delay@t
  5965                           delay@t:	; 2 bytes @ 0x0
  5966  000027                     	global	end_receita@x
  5967                           end_receita@x:	; 2 bytes @ 0x0
  5968  000027                     	global	codifica@dado
  5969                           codifica@dado:	; 2 bytes @ 0x0
  5970  000027                     	global	decodifica@d
  5971                           decodifica@d:	; 2 bytes @ 0x0
  5972  000027                     	global	fifo_add_ciclo@ciclos
  5973                           fifo_add_ciclo@ciclos:	; 2 bytes @ 0x0
  5974  000027                     	global	initSerialIO@ptrIn
  5975                           initSerialIO@ptrIn:	; 2 bytes @ 0x0
  5976  000027                     	global	___wmul@multiplier
  5977                           ___wmul@multiplier:	; 2 bytes @ 0x0
  5978  000027                     	global	___awdiv@dividend
  5979                           ___awdiv@dividend:	; 2 bytes @ 0x0
  5980  000027                     	global	___awmod@dividend
  5981                           ___awmod@dividend:	; 2 bytes @ 0x0
  5982  000027                     	global	___lwdiv@dividend
  5983                           ___lwdiv@dividend:	; 2 bytes @ 0x0
  5984  000027                     	global	___lmul@multiplier
  5985                           ___lmul@multiplier:	; 4 bytes @ 0x0
  5986  000027                     	global	___lldiv@dividend
  5987                           ___lldiv@dividend:	; 4 bytes @ 0x0
  5988  000027                     	ds   1
  5989  000027                     ?_wifi_send:	; 1 bytes @ 0x1
  5990  000028                     ??_EEPROM_write:	; 1 bytes @ 0x1
  5991  000028                     ??_posAtual:	; 1 bytes @ 0x1
  5992  000028                     	global	dispLCD_instReg@i
  5993                           dispLCD_instReg@i:	; 1 bytes @ 0x1
  5994  000028                     	global	dispLCD_dataReg@d
  5995                           dispLCD_dataReg@d:	; 1 bytes @ 0x1
  5996  000028                     	global	EEPROM_write@addr
  5997                           EEPROM_write@addr:	; 1 bytes @ 0x1
  5998  000028                     	global	posAtual@ind
  5999                           posAtual@ind:	; 1 bytes @ 0x1
  6000  000028                     	global	serialIObyteShift@dataOut
  6001                           serialIObyteShift@dataOut:	; 1 bytes @ 0x1
  6002  000028                     	global	wifi_send@msg
  6003                           wifi_send@msg:	; 2 bytes @ 0x1
  6004  000028                     	ds   1
  6005  000028                     ??_dispLCD_clr:	; 1 bytes @ 0x2
  6006  000029                     ??_formatar_receitas:	; 1 bytes @ 0x2
  6007  000029                     ??_delay:	; 1 bytes @ 0x2
  6008  000029                     ?_dispLCD_lincol:	; 1 bytes @ 0x2
  6009  000029                     ??_decodifica:	; 1 bytes @ 0x2
  6010  000029                     ??_getContCiclos:	; 1 bytes @ 0x2
  6011  000029                     ??_fifo_adrs:	; 1 bytes @ 0x2
  6012  000029                     ??_fifo_add_ciclo:	; 1 bytes @ 0x2
  6013  000029                     ??_set_passo:	; 1 bytes @ 0x2
  6014  000029                     ??_ler_sensor:	; 1 bytes @ 0x2
  6015  000029                     ??_getCiclos:	; 1 bytes @ 0x2
  6016  000029                     ??_codifica:	; 1 bytes @ 0x2
  6017  000029                     ??_end_receita:	; 1 bytes @ 0x2
  6018  000029                     	global	dispLCD_lincol@col
  6019                           dispLCD_lincol@col:	; 1 bytes @ 0x2
  6020  000029                     	global	formatar_receitas@i
  6021                           formatar_receitas@i:	; 1 bytes @ 0x2
  6022  000029                     	global	ler_atuador@tecla
  6023                           ler_atuador@tecla:	; 1 bytes @ 0x2
  6024  000029                     	global	alt_atuador@tecla
  6025                           alt_atuador@tecla:	; 1 bytes @ 0x2
  6026  000029                     	global	posAtual@passo
  6027                           posAtual@passo:	; 1 bytes @ 0x2
  6028  000029                     	global	serialIObyteShift@dataBit
  6029                           serialIObyteShift@dataBit:	; 1 bytes @ 0x2
  6030  000029                     	global	teclado_scan@tecla
  6031                           teclado_scan@tecla:	; 1 bytes @ 0x2
  6032  000029                     	global	getCiclos@aux
  6033                           getCiclos@aux:	; 2 bytes @ 0x2
  6034  000029                     	global	initSerialIO@ptrOut
  6035                           initSerialIO@ptrOut:	; 2 bytes @ 0x2
  6036  000029                     	global	___wmul@multiplicand
  6037                           ___wmul@multiplicand:	; 2 bytes @ 0x2
  6038  000029                     	global	___awdiv@divisor
  6039                           ___awdiv@divisor:	; 2 bytes @ 0x2
  6040  000029                     	global	___awmod@divisor
  6041                           ___awmod@divisor:	; 2 bytes @ 0x2
  6042  000029                     	global	___lwdiv@divisor
  6043                           ___lwdiv@divisor:	; 2 bytes @ 0x2
  6044  000029                     	ds   1
  6045  000029                     ??_dispLCD_init:	; 1 bytes @ 0x3
  6046  00002A                     ??_wifi_send:	; 1 bytes @ 0x3
  6047  00002A                     ??_Wifi_mode:	; 1 bytes @ 0x3
  6048  00002A                     ??_dispLCD_lincol:	; 1 bytes @ 0x3
  6049  00002A                     ??_manipula_atuadores_init:	; 1 bytes @ 0x3
  6050  00002A                     ??_salva_atuadores_init:	; 1 bytes @ 0x3
  6051  00002A                     ??_serialIOscan:	; 1 bytes @ 0x3
  6052  00002A                     ??_dac_init:	; 1 bytes @ 0x3
  6053  00002A                     ?_dac_write:	; 1 bytes @ 0x3
  6054  00002A                     	global	manipula_atuadores_init@atuador
  6055                           manipula_atuadores_init@atuador:	; 1 bytes @ 0x3
  6056  00002A                     	global	teclado_scan@l
  6057                           teclado_scan@l:	; 1 bytes @ 0x3
  6058  00002A                     	global	Wifi_mode@d
  6059                           Wifi_mode@d:	; 1 bytes @ 0x3
  6060  00002A                     	global	dac_write@code
  6061                           dac_write@code:	; 2 bytes @ 0x3
  6062  00002A                     	global	salva_atuadores_init@condi_init
  6063                           salva_atuadores_init@condi_init:	; 4 bytes @ 0x3
  6064  00002A                     	ds   1
  6065  00002A                     ??_deletar_receita:	; 1 bytes @ 0x4
  6066  00002B                     ??_statusT1:	; 1 bytes @ 0x4
  6067  00002B                     ??___wmul:	; 1 bytes @ 0x4
  6068  00002B                     ??___awdiv:	; 1 bytes @ 0x4
  6069  00002B                     ??___awmod:	; 1 bytes @ 0x4
  6070  00002B                     ??___lwdiv:	; 1 bytes @ 0x4
  6071  00002B                     	global	set_passo@passo
  6072                           set_passo@passo:	; 1 bytes @ 0x4
  6073  00002B                     	global	ler_sensor@passo
  6074                           ler_sensor@passo:	; 1 bytes @ 0x4
  6075  00002B                     	global	manipula_atuadores_init@aux
  6076                           manipula_atuadores_init@aux:	; 1 bytes @ 0x4
  6077  00002B                     	global	codifica@tipo
  6078                           codifica@tipo:	; 1 bytes @ 0x4
  6079  00002B                     	global	initSerialIO@length
  6080                           initSerialIO@length:	; 1 bytes @ 0x4
  6081  00002B                     	global	teclado_scan@c
  6082                           teclado_scan@c:	; 1 bytes @ 0x4
  6083  00002B                     	global	___awdiv@counter
  6084                           ___awdiv@counter:	; 1 bytes @ 0x4
  6085  00002B                     	global	___awmod@counter
  6086                           ___awmod@counter:	; 1 bytes @ 0x4
  6087  00002B                     	global	deletar_receita@aux
  6088                           deletar_receita@aux:	; 2 bytes @ 0x4
  6089  00002B                     	global	___wmul@product
  6090                           ___wmul@product:	; 2 bytes @ 0x4
  6091  00002B                     	global	___lwdiv@quotient
  6092                           ___lwdiv@quotient:	; 2 bytes @ 0x4
  6093  00002B                     	global	___lmul@multiplicand
  6094                           ___lmul@multiplicand:	; 4 bytes @ 0x4
  6095  00002B                     	global	___lldiv@divisor
  6096                           ___lldiv@divisor:	; 4 bytes @ 0x4
  6097  00002B                     	ds   1
  6098  00002B                     ??_initSerialIO:	; 1 bytes @ 0x5
  6099  00002C                     ??_teclado_borda:	; 1 bytes @ 0x5
  6100  00002C                     ??_dac_write:	; 1 bytes @ 0x5
  6101  00002C                     	global	dispLCD_lincol@lin
  6102                           dispLCD_lincol@lin:	; 1 bytes @ 0x5
  6103  00002C                     	global	manipula_atuadores_init@mask
  6104                           manipula_atuadores_init@mask:	; 1 bytes @ 0x5
  6105  00002C                     	global	teclado_borda@aux
  6106                           teclado_borda@aux:	; 1 bytes @ 0x5
  6107  00002C                     	global	___awdiv@sign
  6108                           ___awdiv@sign:	; 1 bytes @ 0x5
  6109  00002C                     	global	___awmod@sign
  6110                           ___awmod@sign:	; 1 bytes @ 0x5
  6111  00002C                     	ds   1
  6112  00002C                     ?_salvar_receita:	; 1 bytes @ 0x6
  6113  00002D                     ?_buscar_receita:	; 1 bytes @ 0x6
  6114  00002D                     ?_setT1:	; 1 bytes @ 0x6
  6115  00002D                     ?_buscar_dado:	; 1 bytes @ 0x6
  6116  00002D                     ?_dignum_conc:	; 1 bytes @ 0x6
  6117  00002D                     ?_salvar_dado:	; 1 bytes @ 0x6
  6118  00002D                     	global	dispLCD_lincol@aux
  6119                           dispLCD_lincol@aux:	; 1 bytes @ 0x6
  6120  00002D                     	global	salvar_dado@col
  6121                           salvar_dado@col:	; 1 bytes @ 0x6
  6122  00002D                     	global	buscar_dado@col
  6123                           buscar_dado@col:	; 1 bytes @ 0x6
  6124  00002D                     	global	deletar_receita@receita
  6125                           deletar_receita@receita:	; 1 bytes @ 0x6
  6126  00002D                     	global	teclado_borda@tecla
  6127                           teclado_borda@tecla:	; 1 bytes @ 0x6
  6128  00002D                     	global	___lwdiv@counter
  6129                           ___lwdiv@counter:	; 1 bytes @ 0x6
  6130  00002D                     	global	salvar_receita@data
  6131                           salvar_receita@data:	; 2 bytes @ 0x6
  6132  00002D                     	global	buscar_receita@data
  6133                           buscar_receita@data:	; 2 bytes @ 0x6
  6134  00002D                     	global	dignum_conc@ptrNum
  6135                           dignum_conc@ptrNum:	; 2 bytes @ 0x6
  6136  00002D                     	global	___awdiv@quotient
  6137                           ___awdiv@quotient:	; 2 bytes @ 0x6
  6138  00002D                     	global	setT1@c
  6139                           setT1@c:	; 4 bytes @ 0x6
  6140  00002D                     	ds   1
  6141  00002D                     ?_dispLCD_str:	; 1 bytes @ 0x7
  6142  00002E                     ?_dispLCD:	; 1 bytes @ 0x7
  6143  00002E                     ?_dignum_apagar:	; 1 bytes @ 0x7
  6144  00002E                     	global	dispLCD@col
  6145                           dispLCD@col:	; 1 bytes @ 0x7
  6146  00002E                     	global	salvar_dado@data
  6147                           salvar_dado@data:	; 1 bytes @ 0x7
  6148  00002E                     	global	deletar_receita@i
  6149                           deletar_receita@i:	; 1 bytes @ 0x7
  6150  00002E                     	global	serialIOscan@j
  6151                           serialIOscan@j:	; 1 bytes @ 0x7
  6152  00002E                     	global	dispLCD_str@str
  6153                           dispLCD_str@str:	; 2 bytes @ 0x7
  6154  00002E                     	global	buscar_dado@data
  6155                           buscar_dado@data:	; 2 bytes @ 0x7
  6156  00002E                     	global	salva_atuadores_init@pt
  6157                           salva_atuadores_init@pt:	; 2 bytes @ 0x7
  6158  00002E                     	global	dignum_apagar@ptrNum
  6159                           dignum_apagar@ptrNum:	; 2 bytes @ 0x7
  6160  00002E                     	ds   1
  6161  00002E                     ??_salvar_receita:	; 1 bytes @ 0x8
  6162  00002F                     ??_buscar_receita:	; 1 bytes @ 0x8
  6163  00002F                     ??_fifo_print:	; 1 bytes @ 0x8
  6164  00002F                     ??_dignum_conc:	; 1 bytes @ 0x8
  6165  00002F                     ??_salvar_dado:	; 1 bytes @ 0x8
  6166  00002F                     ?_dignum_tam:	; 1 bytes @ 0x8
  6167  00002F                     ??___lmul:	; 1 bytes @ 0x8
  6168  00002F                     ??___lldiv:	; 1 bytes @ 0x8
  6169  00002F                     	global	serialIOscan@i
  6170                           serialIOscan@i:	; 1 bytes @ 0x8
  6171  00002F                     	global	dispLCD@str
  6172                           dispLCD@str:	; 2 bytes @ 0x8
  6173  00002F                     	global	salvar_receita@aux
  6174                           salvar_receita@aux:	; 2 bytes @ 0x8
  6175  00002F                     	global	buscar_receita@aux
  6176                           buscar_receita@aux:	; 2 bytes @ 0x8
  6177  00002F                     	global	salvar_dado@aux
  6178                           salvar_dado@aux:	; 2 bytes @ 0x8
  6179  00002F                     	global	dignum_tam@num
  6180                           dignum_tam@num:	; 2 bytes @ 0x8
  6181  00002F                     	global	___lmul@product
  6182                           ___lmul@product:	; 4 bytes @ 0x8
  6183  00002F                     	global	___lldiv@quotient
  6184                           ___lldiv@quotient:	; 4 bytes @ 0x8
  6185  00002F                     	ds   1
  6186  00002F                     ??_dispLCD_str:	; 1 bytes @ 0x9
  6187  000030                     ??_buscar_dado:	; 1 bytes @ 0x9
  6188  000030                     ??_dignum_apagar:	; 1 bytes @ 0x9
  6189  000030                     	global	dispLCD_str@lin
  6190                           dispLCD_str@lin:	; 1 bytes @ 0x9
  6191  000030                     	global	salva_atuadores_init@dado
  6192                           salva_atuadores_init@dado:	; 1 bytes @ 0x9
  6193  000030                     	global	buscar_dado@aux
  6194                           buscar_dado@aux:	; 2 bytes @ 0x9
  6195  000030                     	ds   1
  6196  000030                     ??_dispLCD:	; 1 bytes @ 0xA
  6197  000031                     ??_setT1:	; 1 bytes @ 0xA
  6198  000031                     ??_dignum_tam:	; 1 bytes @ 0xA
  6199  000031                     	global	dispLCD@pos
  6200                           dispLCD@pos:	; 1 bytes @ 0xA
  6201  000031                     	global	dispLCD_str@c
  6202                           dispLCD_str@c:	; 1 bytes @ 0xA
  6203  000031                     	global	salvar_receita@adrs
  6204                           salvar_receita@adrs:	; 1 bytes @ 0xA
  6205  000031                     	global	buscar_receita@adrs
  6206                           buscar_receita@adrs:	; 1 bytes @ 0xA
  6207  000031                     	global	salvar_dado@adrs
  6208                           salvar_dado@adrs:	; 1 bytes @ 0xA
  6209  000031                     	global	salva_atuadores_init@mask
  6210                           salva_atuadores_init@mask:	; 1 bytes @ 0xA
  6211  000031                     	global	dignum_tam@tam
  6212                           dignum_tam@tam:	; 1 bytes @ 0xA
  6213  000031                     	global	_fifo_print$1053
  6214                           _fifo_print$1053:	; 2 bytes @ 0xA
  6215  000031                     	ds   1
  6216  000031                     ?_dispLCD_num:	; 1 bytes @ 0xB
  6217  000032                     ??_fifo_alinharPrint:	; 1 bytes @ 0xB
  6218  000032                     	global	dispLCD@lin
  6219                           dispLCD@lin:	; 1 bytes @ 0xB
  6220  000032                     	global	dispLCD_num@col
  6221                           dispLCD_num@col:	; 1 bytes @ 0xB
  6222  000032                     	global	salvar_receita@i
  6223                           salvar_receita@i:	; 1 bytes @ 0xB
  6224  000032                     	global	buscar_receita@i
  6225                           buscar_receita@i:	; 1 bytes @ 0xB
  6226  000032                     	global	buscar_dado@adrs
  6227                           buscar_dado@adrs:	; 1 bytes @ 0xB
  6228  000032                     	ds   1
  6229  000032                     	global	?___aldiv
  6230                           ?___aldiv:	; 4 bytes @ 0xC
  6231  000033                     	global	fifo_print@completar
  6232                           fifo_print@completar:	; 1 bytes @ 0xC
  6233  000033                     	global	dignum_conc@dig
  6234                           dignum_conc@dig:	; 1 bytes @ 0xC
  6235  000033                     	global	fifo_alinharPrint@cont
  6236                           fifo_alinharPrint@cont:	; 1 bytes @ 0xC
  6237  000033                     	global	___lldiv@counter
  6238                           ___lldiv@counter:	; 1 bytes @ 0xC
  6239  000033                     	global	dispLCD_num@num
  6240                           dispLCD_num@num:	; 2 bytes @ 0xC
  6241  000033                     	global	___aldiv@dividend
  6242                           ___aldiv@dividend:	; 4 bytes @ 0xC
  6243  000033                     	ds   1
  6244  000033                     ?_I2C_init:	; 1 bytes @ 0xD
  6245  000034                     ?_initEUSART:	; 1 bytes @ 0xD
  6246  000034                     	global	fifo_print@indPrint
  6247                           fifo_print@indPrint:	; 1 bytes @ 0xD
  6248  000034                     	global	fifo_alinharPrint@i
  6249                           fifo_alinharPrint@i:	; 1 bytes @ 0xD
  6250  000034                     	global	I2C_init@freq
  6251                           I2C_init@freq:	; 4 bytes @ 0xD
  6252  000034                     	global	initEUSART@baudRate
  6253                           initEUSART@baudRate:	; 4 bytes @ 0xD
  6254  000034                     	ds   1
  6255  000034                     	global	dispLCD_num@tam
  6256                           dispLCD_num@tam:	; 1 bytes @ 0xE
  6257  000035                     	global	fifo_print@i
  6258                           fifo_print@i:	; 1 bytes @ 0xE
  6259  000035                     	global	fifo_alinharPrint@aux
  6260                           fifo_alinharPrint@aux:	; 1 bytes @ 0xE
  6261  000035                     	ds   1
  6262  000035                     ??_dispLCD_num:	; 1 bytes @ 0xF
  6263  000036                     ??_fifo_add_control:	; 1 bytes @ 0xF
  6264  000036                     ??_fifo_add_tempo:	; 1 bytes @ 0xF
  6265  000036                     ??_fifo_add:	; 1 bytes @ 0xF
  6266  000036                     ??_fifo_delete:	; 1 bytes @ 0xF
  6267  000036                     	global	fifo_add@passo
  6268                           fifo_add@passo:	; 1 bytes @ 0xF
  6269  000036                     	global	fifo_add_tempo@t
  6270                           fifo_add_tempo@t:	; 1 bytes @ 0xF
  6271  000036                     	global	fifo_add_control@c
  6272                           fifo_add_control@c:	; 1 bytes @ 0xF
  6273  000036                     	global	fifo_print@atraso
  6274                           fifo_print@atraso:	; 1 bytes @ 0xF
  6275  000036                     	ds   1
  6276  000036                     	global	fifo_print@comando
  6277                           fifo_print@comando:	; 1 bytes @ 0x10
  6278  000037                     	global	___aldiv@divisor
  6279                           ___aldiv@divisor:	; 4 bytes @ 0x10
  6280  000037                     	ds   1
  6281  000037                     ??_I2C_init:	; 1 bytes @ 0x11
  6282  000038                     ??_initEUSART:	; 1 bytes @ 0x11
  6283  000038                     	ds   3
  6284  000038                     ??___aldiv:	; 1 bytes @ 0x14
  6285  00003B                     	global	dispLCD_num@lin
  6286                           dispLCD_num@lin:	; 1 bytes @ 0x14
  6287  00003B                     	global	___aldiv@counter
  6288                           ___aldiv@counter:	; 1 bytes @ 0x14
  6289  00003B                     	ds   1
  6290  00003B                     ?_wifi_init:	; 1 bytes @ 0x15
  6291  00003C                     	global	dispLCD_num@size
  6292                           dispLCD_num@size:	; 1 bytes @ 0x15
  6293  00003C                     	global	___aldiv@sign
  6294                           ___aldiv@sign:	; 1 bytes @ 0x15
  6295  00003C                     	global	wifi_init@br
  6296                           wifi_init@br:	; 4 bytes @ 0x15
  6297  00003C                     	ds   1
  6298  00003C                     	global	dispLCD_num@sinal
  6299                           dispLCD_num@sinal:	; 1 bytes @ 0x16
  6300  00003D                     	global	___aldiv@quotient
  6301                           ___aldiv@quotient:	; 4 bytes @ 0x16
  6302  00003D                     	ds   1
  6303  00003D                     	global	dispLCD_num@div
  6304                           dispLCD_num@div:	; 2 bytes @ 0x17
  6305  00003E                     	ds   2
  6306  00003E                     ??_wifi_init:	; 1 bytes @ 0x19
  6307  000040                     ?_printExec:	; 1 bytes @ 0x19
  6308  000040                     	global	printExec@ind
  6309                           printExec@ind:	; 1 bytes @ 0x19
  6310  000040                     	ds   1
  6311  000040                     ?_MCP4725:	; 1 bytes @ 0x1A
  6312  000041                     ??_printExec:	; 1 bytes @ 0x1A
  6313  000041                     	global	_printExec$1075
  6314                           _printExec$1075:	; 2 bytes @ 0x1A
  6315  000041                     	global	MCP4725@Vout
  6316                           MCP4725@Vout:	; 2 bytes @ 0x1A
  6317  000041                     	ds   2
  6318  000041                     ??_MCP4725:	; 1 bytes @ 0x1C
  6319  000043                     	global	printExec@col
  6320                           printExec@col:	; 1 bytes @ 0x1C
  6321  000043                     	ds   1
  6322  000043                     	global	printExec@passo
  6323                           printExec@passo:	; 1 bytes @ 0x1D
  6324  000044                     	ds   1
  6325  000044                     ??_main:	; 1 bytes @ 0x1E
  6326  000045                     	ds   2
  6327  000045                     ;!
  6328                           ;!Data Sizes:
  6329                           ;!    Strings     975
  6330                           ;!    Constant    0
  6331                           ;!    Data        165
  6332                           ;!    BSS         70
  6333                           ;!    Persistent  0
  6334                           ;!    Stack       0
  6335                           ;!
  6336                           ;!Auto Spaces:
  6337                           ;!    Space          Size  Autos    Used
  6338                           ;!    COMRAM           94     32      93
  6339                           ;!    BANK0h          101     93      95
  6340                           ;!    BANK0l           57      0      52
  6341                           ;!    BANK1           256      0     120
  6342                           ;!    BANK2           256      0       0
  6343                           ;!    BANK3           256      0       0
  6344                           ;!    BANK4           256      0       0
  6345                           ;!    BANK5           256      0       0
  6346                           ;!    BANK6           256      0       0
  6347                           ;!    BANK7           256      0       0
  6348                           
  6349                           ;!
  6350                           ;!Pointer List with Targets:
  6351                           ;!
  6352                           ;!    S85$3$0	PTR unsigned char  size(2) Largest target is 0
  6353                           ;!
  6354                           ;!    S145$1$0	PTR const unsigned char  size(2) Largest target is 41
  6355                           ;!		 -> STR_46(CODE[14]), STR_45(CODE[40]), Wifi_cipsend@vtr(COMRAM[30]), Wifi_cipsend@s
                                 tr(COMRAM[30]), 
  6356                           ;!		 -> STR_44(CODE[21]), STR_43(CODE[14]), STR_42(CODE[15]), STR_41(CODE[18]), 
  6357                           ;!		 -> STR_40(CODE[11]), STR_39(CODE[11]), Wifi_connect@str(COMRAM[40]), STR_38(CODE[14
                                 ]), 
  6358                           ;!		 -> STR_37(CODE[41]), STR_36(CODE[14]), STR_35(CODE[41]), STR_34(CODE[14]), 
  6359                           ;!		 -> STR_33(CODE[14]), 
  6360                           ;!
  6361                           ;!    S145$2$0	PTR unsigned char  size(2) Largest target is 0
  6362                           ;!
  6363                           ;!    S145$4$1	PTR const unsigned char  size(2) Largest target is 0
  6364                           ;!
  6365                           ;!    S145$4$0	PTR const unsigned char  size(2) Largest target is 0
  6366                           ;!
  6367                           ;!    S145$9$1	PTR unsigned char  size(2) Largest target is 0
  6368                           ;!
  6369                           ;!    S145$9$0	PTR unsigned char  size(2) Largest target is 0
  6370                           ;!
  6371                           ;!    S1655$7$1	PTR const unsigned char  size(2) Largest target is 0
  6372                           ;!
  6373                           ;!    S1655$7$0	PTR const unsigned char  size(2) Largest target is 0
  6374                           ;!
  6375                           ;!    S85$0$1	PTR unsigned char  size(2) Largest target is 18
  6376                           ;!		 -> fila(COMRAM[18]), 
  6377                           ;!
  6378                           ;!    S85$1$1	PTR unsigned char  size(2) Largest target is 16
  6379                           ;!		 -> main@vetor_aux(BANK0h[16]), 
  6380                           ;!
  6381                           ;!    S29$1$0	PTR const unsigned char  size(2) Largest target is 83
  6382                           ;!		 -> STR_27(CODE[78]), STR_26(CODE[62]), STR_15(CODE[81]), STR_4(CODE[83]), 
  6383                           ;!
  6384                           ;!    S29$2$2	PTR const unsigned char  size(2) Largest target is 21
  6385                           ;!		 -> STR_32(CODE[21]), STR_31(CODE[21]), STR_30(CODE[21]), STR_29(CODE[2]), 
  6386                           ;!		 -> STR_28(CODE[2]), STR_25(CODE[21]), STR_24(CODE[21]), STR_23(CODE[21]), 
  6387                           ;!		 -> STR_22(CODE[21]), STR_21(CODE[21]), STR_20(CODE[8]), STR_19(CODE[21]), 
  6388                           ;!		 -> STR_18(CODE[21]), STR_17(CODE[21]), STR_16(CODE[21]), STR_14(CODE[21]), 
  6389                           ;!		 -> STR_13(CODE[21]), STR_12(CODE[2]), STR_11(CODE[2]), STR_10(CODE[21]), 
  6390                           ;!		 -> STR_9(CODE[21]), STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), 
  6391                           ;!		 -> STR_5(CODE[21]), STR_3(CODE[21]), STR_2(CODE[2]), STR_1(CODE[2]), 
  6392                           ;!
  6393                           ;!    wifi_send@msg	PTR const unsigned char  size(2) Largest target is 41
  6394                           ;!		 -> STR_46(CODE[14]), STR_45(CODE[40]), Wifi_cipsend@vtr(COMRAM[30]), Wifi_cipsend@s
                                 tr(COMRAM[30]), 
  6395                           ;!		 -> STR_44(CODE[21]), STR_43(CODE[14]), STR_42(CODE[15]), STR_41(CODE[18]), 
  6396                           ;!		 -> STR_40(CODE[11]), STR_39(CODE[11]), Wifi_connect@str(COMRAM[40]), STR_38(CODE[14
                                 ]), 
  6397                           ;!		 -> STR_37(CODE[41]), STR_36(CODE[14]), STR_35(CODE[41]), STR_34(CODE[14]), 
  6398                           ;!		 -> STR_33(CODE[14]), 
  6399                           ;!
  6400                           ;!    S1655eusartT$search_string	PTR FTN(PTR const unsigned char ,PTR const unsigned cha
                                 r ,)int  size(2) Largest target is 2
  6401                           ;!		 -> search(), 
  6402                           ;!
  6403                           ;!    eusart.search_string	PTR FTN(PTR const unsigned char ,PTR const unsigned char ,)in
                                 t  size(2) Largest target is 2
  6404                           ;!		 -> search(), 
  6405                           ;!
  6406                           ;!    S1655eusartT$init	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
  6407                           ;!		 -> initEUSART(), 
  6408                           ;!
  6409                           ;!    eusart.init	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
  6410                           ;!		 -> initEUSART(), 
  6411                           ;!
  6412                           ;!    S1655eusartT$txSTATUS	PTR FTN()unsigned char  size(2) Largest target is 1
  6413                           ;!		 -> txStatusEUSART(), 
  6414                           ;!
  6415                           ;!    eusart.txSTATUS	PTR FTN()unsigned char  size(2) Largest target is 1
  6416                           ;!		 -> txStatusEUSART(), 
  6417                           ;!
  6418                           ;!    S1655eusartT$tx	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
  6419                           ;!		 -> txEUSART(), 
  6420                           ;!
  6421                           ;!    eusart.tx	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
  6422                           ;!		 -> txEUSART(), 
  6423                           ;!
  6424                           ;!    S1655eusartT$rxResetERROR	PTR FTN()void  size(2) Largest target is 1
  6425                           ;!		 -> rxResetErrorEUSART(), 
  6426                           ;!
  6427                           ;!    eusart.rxResetERROR	PTR FTN()void  size(2) Largest target is 1
  6428                           ;!		 -> rxResetErrorEUSART(), 
  6429                           ;!
  6430                           ;!    S1655eusartT$rxERROR	PTR FTN()unsigned char  size(2) Largest target is 1
  6431                           ;!		 -> rxErrorEUSART(), 
  6432                           ;!
  6433                           ;!    eusart.rxERROR	PTR FTN()unsigned char  size(2) Largest target is 1
  6434                           ;!		 -> rxErrorEUSART(), 
  6435                           ;!
  6436                           ;!    S1655eusartT$rxSTATUS	PTR FTN()unsigned char  size(2) Largest target is 1
  6437                           ;!		 -> rxStatusEUSART(), 
  6438                           ;!
  6439                           ;!    eusart.rxSTATUS	PTR FTN()unsigned char  size(2) Largest target is 1
  6440                           ;!		 -> rxStatusEUSART(), 
  6441                           ;!
  6442                           ;!    S1655eusartT$rx	PTR FTN()unsigned char  size(2) Largest target is 1
  6443                           ;!		 -> rxEUSART(), 
  6444                           ;!
  6445                           ;!    eusart.rx	PTR FTN()unsigned char  size(2) Largest target is 1
  6446                           ;!		 -> rxEUSART(), 
  6447                           ;!
  6448                           ;!    initSerialIO@ptrOut	PTR unsigned char  size(2) Largest target is 1
  6449                           ;!		 -> main@vetorOut(BANK0h[1]), 
  6450                           ;!
  6451                           ;!    initSerialIO@ptrIn	PTR unsigned char  size(2) Largest target is 1
  6452                           ;!		 -> main@vetorIn(BANK0h[1]), 
  6453                           ;!
  6454                           ;!    ptrSerialOut	PTR unsigned char  size(2) Largest target is 1
  6455                           ;!		 -> NULL(NULL[0]), main@vetorOut(BANK0h[1]), 
  6456                           ;!
  6457                           ;!    ptrSerialIn	PTR unsigned char  size(2) Largest target is 1
  6458                           ;!		 -> NULL(NULL[0]), main@vetorIn(BANK0h[1]), 
  6459                           ;!
  6460                           ;!    dignum_apagar@ptrNum	PTR unsigned int  size(2) Largest target is 2
  6461                           ;!		 -> main@ciclos(BANK0h[2]), main@num(BANK0h[2]), 
  6462                           ;!
  6463                           ;!    dignum_conc@ptrNum	PTR unsigned int  size(2) Largest target is 2
  6464                           ;!		 -> main@ciclos(BANK0h[2]), main@num(BANK0h[2]), 
  6465                           ;!
  6466                           ;!    decodifica@d	PTR unsigned char  size(2) Largest target is 18
  6467                           ;!		 -> printExec@passo(COMRAM[1]), fifo_print@comando(COMRAM[1]), fila(COMRAM[18]), mai
                                 n@vetor_aux(BANK0h[16]), 
  6468                           ;!		 -> main@auxPasso(BANK0h[1]), 
  6469                           ;!
  6470                           ;!    codifica@dado	PTR unsigned char  size(2) Largest target is 2047
  6471                           ;!		 -> fifo_add_control@c(COMRAM[1]), fifo_add_tempo@t(COMRAM[1]), fifo_add@passo(COMRA
                                 M[1]), RAM(DATA[2047]), 
  6472                           ;!
  6473                           ;!    salva_atuadores_init@pt	PTR unsigned char  size(2) Largest target is 4
  6474                           ;!		 -> salva_atuadores_init@condi_init(COMRAM[4]), 
  6475                           ;!
  6476                           ;!    buscar_dado@data	PTR unsigned char  size(2) Largest target is 1
  6477                           ;!		 -> main@init_cond(BANK0h[1]), 
  6478                           ;!
  6479                           ;!    buscar_receita@data	PTR unsigned char  size(2) Largest target is 16
  6480                           ;!		 -> main@vetor_aux(BANK0h[16]), 
  6481                           ;!
  6482                           ;!    salvar_receita@data	PTR unsigned char  size(2) Largest target is 18
  6483                           ;!		 -> fila(COMRAM[18]), 
  6484                           ;!
  6485                           ;!    dispLCD_str@str	PTR const unsigned char  size(2) Largest target is 83
  6486                           ;!		 -> STR_27(CODE[78]), STR_26(CODE[62]), STR_15(CODE[81]), STR_4(CODE[83]), 
  6487                           ;!
  6488                           ;!    dispLCD@str	PTR const unsigned char  size(2) Largest target is 21
  6489                           ;!		 -> STR_32(CODE[21]), STR_31(CODE[21]), STR_30(CODE[21]), STR_29(CODE[2]), 
  6490                           ;!		 -> STR_28(CODE[2]), STR_25(CODE[21]), STR_24(CODE[21]), STR_23(CODE[21]), 
  6491                           ;!		 -> STR_22(CODE[21]), STR_21(CODE[21]), STR_20(CODE[8]), STR_19(CODE[21]), 
  6492                           ;!		 -> STR_18(CODE[21]), STR_17(CODE[21]), STR_16(CODE[21]), STR_14(CODE[21]), 
  6493                           ;!		 -> STR_13(CODE[21]), STR_12(CODE[2]), STR_11(CODE[2]), STR_10(CODE[21]), 
  6494                           ;!		 -> STR_9(CODE[21]), STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), 
  6495                           ;!		 -> STR_5(CODE[21]), STR_3(CODE[21]), STR_2(CODE[2]), STR_1(CODE[2]), 
  6496                           ;!
  6497                           ;!    ler_sensor@ptr	PTR unsigned char  size(2) Largest target is 1
  6498                           ;!		 -> main@vetorIn(BANK0h[1]), 
  6499                           ;!
  6500                           ;!    set_passo@ptr	PTR unsigned char  size(2) Largest target is 1
  6501                           ;!		 -> main@vetorOut(BANK0h[1]), 
  6502                           ;!
  6503                           ;!    sp__fifo_adrs	PTR unsigned char  size(2) Largest target is 18
  6504                           ;!		 -> fila(COMRAM[18]), 
  6505                           ;!
  6506                           ;!    main@ptr_671	PTR unsigned char  size(2) Largest target is 16
  6507                           ;!		 -> main@vetor_aux(BANK0h[16]), 
  6508                           ;!
  6509                           ;!    main@ptr_652	PTR unsigned char  size(2) Largest target is 16
  6510                           ;!		 -> main@vetor_aux(BANK0h[16]), 
  6511                           ;!
  6512                           ;!    main@pt	PTR unsigned char  size(2) Largest target is 16
  6513                           ;!		 -> main@vetor_aux(BANK0h[16]), 
  6514                           ;!
  6515                           ;!    main@ptr	PTR unsigned char  size(2) Largest target is 20
  6516                           ;!		 -> main@lema(BANK0h[20]), 
  6517                           ;!
  6518                           ;!    S145$cipsend	PTR FTN(PTR unsigned char ,PTR unsigned char ,)void  size(2) Largest 
                                 target is 1
  6519                           ;!		 -> Wifi_cipsend(), 
  6520                           ;!
  6521                           ;!    wifi.cipsend	PTR FTN(PTR unsigned char ,PTR unsigned char ,)void  size(2) Largest 
                                 target is 1
  6522                           ;!		 -> Wifi_cipsend(), 
  6523                           ;!
  6524                           ;!    S145$config_servidor	PTR FTN()void  size(2) Largest target is 1
  6525                           ;!		 -> Wifi_config_servidor(), 
  6526                           ;!
  6527                           ;!    wifi.config_servidor	PTR FTN()void  size(2) Largest target is 1
  6528                           ;!		 -> Wifi_config_servidor(), 
  6529                           ;!
  6530                           ;!    S145$scan	PTR FTN()void  size(2) Largest target is 1
  6531                           ;!		 -> Wifi_scan(), 
  6532                           ;!
  6533                           ;!    wifi.scan	PTR FTN()void  size(2) Largest target is 1
  6534                           ;!		 -> Wifi_scan(), 
  6535                           ;!
  6536                           ;!    S145$autoconnect	PTR FTN()void  size(2) Largest target is 1
  6537                           ;!		 -> Wifi_autoconnect(), 
  6538                           ;!
  6539                           ;!    wifi.autoconnect	PTR FTN()void  size(2) Largest target is 1
  6540                           ;!		 -> Wifi_autoconnect(), 
  6541                           ;!
  6542                           ;!    S145$ip	PTR FTN()void  size(2) Largest target is 1
  6543                           ;!		 -> Wifi_ip(), 
  6544                           ;!
  6545                           ;!    wifi.ip	PTR FTN()void  size(2) Largest target is 1
  6546                           ;!		 -> Wifi_ip(), 
  6547                           ;!
  6548                           ;!    S145$connect	PTR FTN(PTR const unsigned char ,PTR const unsigned char ,)void  size
                                 (2) Largest target is 1
  6549                           ;!		 -> Wifi_connect(), 
  6550                           ;!
  6551                           ;!    wifi.connect	PTR FTN(PTR const unsigned char ,PTR const unsigned char ,)void  size
                                 (2) Largest target is 1
  6552                           ;!		 -> Wifi_connect(), 
  6553                           ;!
  6554                           ;!    S145$mode	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
  6555                           ;!		 -> Wifi_mode(), 
  6556                           ;!
  6557                           ;!    wifi.mode	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
  6558                           ;!		 -> Wifi_mode(), 
  6559                           ;!
  6560                           ;!    S145$receive	PTR FTN(PTR unsigned char ,)unsigned char  size(2) Largest target is 
                                 1
  6561                           ;!		 -> wifi_receive(), 
  6562                           ;!
  6563                           ;!    wifi.receive	PTR FTN(PTR unsigned char ,)unsigned char  size(2) Largest target is 
                                 1
  6564                           ;!		 -> wifi_receive(), 
  6565                           ;!
  6566                           ;!    S145$send	PTR FTN(PTR const unsigned char ,)void  size(2) Largest target is 1
  6567                           ;!		 -> wifi_send(), 
  6568                           ;!
  6569                           ;!    wifi.send	PTR FTN(PTR const unsigned char ,)void  size(2) Largest target is 1
  6570                           ;!		 -> wifi_send(), 
  6571                           ;!
  6572                           ;!    S145$init	PTR FTN(long ,)void  size(2) Largest target is 1
  6573                           ;!		 -> wifi_init(), 
  6574                           ;!
  6575                           ;!    wifi.init	PTR FTN(long ,)void  size(2) Largest target is 1
  6576                           ;!		 -> wifi_init(), 
  6577                           ;!
  6578                           ;!    S85$formatar	PTR FTN()void  size(2) Largest target is 1
  6579                           ;!		 -> formatar_receitas(), 
  6580                           ;!
  6581                           ;!    EEPROM.formatar	PTR FTN()void  size(2) Largest target is 1
  6582                           ;!		 -> formatar_receitas(), 
  6583                           ;!
  6584                           ;!    S85$livre	PTR FTN(PTR unsigned char ,)void  size(2) Largest target is 1
  6585                           ;!		 -> receita_livre(), 
  6586                           ;!
  6587                           ;!    EEPROM.livre	PTR FTN(PTR unsigned char ,)void  size(2) Largest target is 1
  6588                           ;!		 -> receita_livre(), 
  6589                           ;!
  6590                           ;!    S85$deletar	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
  6591                           ;!		 -> deletar_receita(), 
  6592                           ;!
  6593                           ;!    EEPROM.deletar	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
  6594                           ;!		 -> deletar_receita(), 
  6595                           ;!
  6596                           ;!    S85$buscar	PTR FTN(unsigned char ,PTR unsigned char ,)void  size(2) Largest target
                                  is 1
  6597                           ;!		 -> buscar_receita(), 
  6598                           ;!
  6599                           ;!    EEPROM.buscar	PTR FTN(unsigned char ,PTR unsigned char ,)void  size(2) Largest tar
                                 get is 1
  6600                           ;!		 -> buscar_receita(), 
  6601                           ;!
  6602                           ;!    S85$salvar	PTR FTN(unsigned char ,PTR unsigned char ,)void  size(2) Largest target
                                  is 1
  6603                           ;!		 -> salvar_receita(), 
  6604                           ;!
  6605                           ;!    EEPROM.salvar	PTR FTN(unsigned char ,PTR unsigned char ,)void  size(2) Largest tar
                                 get is 1
  6606                           ;!		 -> salvar_receita(), 
  6607                           ;!
  6608                           ;!    S29$clr	PTR FTN()void  size(2) Largest target is 1
  6609                           ;!		 -> dispLCD_clr(), 
  6610                           ;!
  6611                           ;!    IHM.clr	PTR FTN()void  size(2) Largest target is 1
  6612                           ;!		 -> dispLCD_clr(), 
  6613                           ;!
  6614                           ;!    S29$printv	PTR FTN(unsigned char ,unsigned char ,int ,unsigned char ,)void  size(2
                                 ) Largest target is 1
  6615                           ;!		 -> dispLCD_num(), 
  6616                           ;!
  6617                           ;!    IHM.printv	PTR FTN(unsigned char ,unsigned char ,int ,unsigned char ,)void  size(2
                                 ) Largest target is 1
  6618                           ;!		 -> dispLCD_num(), 
  6619                           ;!
  6620                           ;!    S29$printpos	PTR FTN(unsigned char ,unsigned char ,PTR const unsigned char ,)void 
                                  size(2) Largest target is 1
  6621                           ;!		 -> dispLCD(), 
  6622                           ;!
  6623                           ;!    IHM.printpos	PTR FTN(unsigned char ,unsigned char ,PTR const unsigned char ,)void 
                                  size(2) Largest target is 1
  6624                           ;!		 -> dispLCD(), 
  6625                           ;!
  6626                           ;!    S29$print	PTR FTN(PTR const unsigned char ,)void  size(2) Largest target is 1
  6627                           ;!		 -> dispLCD_str(), 
  6628                           ;!
  6629                           ;!    IHM.print	PTR FTN(PTR const unsigned char ,)void  size(2) Largest target is 1
  6630                           ;!		 -> dispLCD_str(), 
  6631                           ;!
  6632                           ;!    S29$init	PTR FTN()void  size(2) Largest target is 1
  6633                           ;!		 -> dispLCD_init(), 
  6634                           ;!
  6635                           ;!    IHM.init	PTR FTN()void  size(2) Largest target is 1
  6636                           ;!		 -> dispLCD_init(), 
  6637                           ;!
  6638                           
  6639                           
  6640                           ;!
  6641                           ;!Critical Paths under _main in COMRAM
  6642                           ;!
  6643                           ;!    _main->_printExec
  6644                           ;!    _wifi_init->_initEUSART
  6645                           ;!    _initEUSART->___lldiv
  6646                           ;!    _teclado_borda->_teclado_scan
  6647                           ;!    _setT1->___wmul
  6648                           ;!    _serialIOscan->_serialIObyteShift
  6649                           ;!    _salvar_receita->___awmod
  6650                           ;!    _salvar_dado->___awmod
  6651                           ;!    _salva_atuadores_init->_ler_atuador
  6652                           ;!    _printExec->_dispLCD_num
  6653                           ;!    _posAtual->_fifo_lerPos
  6654                           ;!    _dispLCD_num->_dignum_tam
  6655                           ;!    _manipula_atuadores_init->_alt_atuador
  6656                           ;!    _formatar_receitas->_EEPROM_write
  6657                           ;!    _fifo_print->___awdiv
  6658                           ;!    _fifo_delete->_fifo_alinharPrint
  6659                           ;!    _fifo_add_tempo->_fifo_alinharPrint
  6660                           ;!    _fifo_add_control->_fifo_alinharPrint
  6661                           ;!    _fifo_add->_fifo_alinharPrint
  6662                           ;!    _fifo_alinharPrint->_dignum_tam
  6663                           ;!    _dignum_tam->___awdiv
  6664                           ;!    _dispLCD_str->_dispLCD_lincol
  6665                           ;!    _dispLCD_init->_delay
  6666                           ;!    _dispLCD_clr->_dispLCD_instReg
  6667                           ;!    _dispLCD->_dispLCD_lincol
  6668                           ;!    _dispLCD_lincol->_dispLCD_instReg
  6669                           ;!    _dignum_conc->___wmul
  6670                           ;!    _dignum_apagar->___lwdiv
  6671                           ;!    _deletar_receita->_end_receita
  6672                           ;!    _buscar_receita->___awmod
  6673                           ;!    _buscar_dado->___awmod
  6674                           ;!    ___aldiv->___lmul
  6675                           ;!    _Wifi_mode->_wifi_send
  6676                           ;!    _wifi_send->_txEUSART
  6677                           ;!    _MCP4725->___aldiv
  6678                           ;!    _dac_write->_delay
  6679                           ;!    _dac_init->_delay
  6680                           ;!    _I2C_init->___lldiv
  6681                           ;!
  6682                           ;!Critical Paths under _irq in COMRAM
  6683                           ;!
  6684                           ;!    None.
  6685                           ;!
  6686                           ;!Critical Paths under _main in BANK0h
  6687                           ;!
  6688                           ;!    None.
  6689                           ;!
  6690                           ;!Critical Paths under _irq in BANK0h
  6691                           ;!
  6692                           ;!    None.
  6693                           ;!
  6694                           ;!Critical Paths under _main in BANK0l
  6695                           ;!
  6696                           ;!    None.
  6697                           ;!
  6698                           ;!Critical Paths under _irq in BANK0l
  6699                           ;!
  6700                           ;!    None.
  6701                           ;!
  6702                           ;!Critical Paths under _main in BANK1
  6703                           ;!
  6704                           ;!    None.
  6705                           ;!
  6706                           ;!Critical Paths under _irq in BANK1
  6707                           ;!
  6708                           ;!    None.
  6709                           ;!
  6710                           ;!Critical Paths under _main in BANK2
  6711                           ;!
  6712                           ;!    None.
  6713                           ;!
  6714                           ;!Critical Paths under _irq in BANK2
  6715                           ;!
  6716                           ;!    None.
  6717                           ;!
  6718                           ;!Critical Paths under _main in BANK3
  6719                           ;!
  6720                           ;!    None.
  6721                           ;!
  6722                           ;!Critical Paths under _irq in BANK3
  6723                           ;!
  6724                           ;!    None.
  6725                           ;!
  6726                           ;!Critical Paths under _main in BANK4
  6727                           ;!
  6728                           ;!    None.
  6729                           ;!
  6730                           ;!Critical Paths under _irq in BANK4
  6731                           ;!
  6732                           ;!    None.
  6733                           ;!
  6734                           ;!Critical Paths under _main in BANK5
  6735                           ;!
  6736                           ;!    None.
  6737                           ;!
  6738                           ;!Critical Paths under _irq in BANK5
  6739                           ;!
  6740                           ;!    None.
  6741                           ;!
  6742                           ;!Critical Paths under _main in BANK6
  6743                           ;!
  6744                           ;!    None.
  6745                           ;!
  6746                           ;!Critical Paths under _irq in BANK6
  6747                           ;!
  6748                           ;!    None.
  6749                           ;!
  6750                           ;!Critical Paths under _main in BANK7
  6751                           ;!
  6752                           ;!    None.
  6753                           ;!
  6754                           ;!Critical Paths under _irq in BANK7
  6755                           ;!
  6756                           ;!    None.
  6757                           
  6758 ;;
  6759 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  6760 ;;
  6761                           
  6762                           ;!
  6763                           ;!Call Graph Tables:
  6764                           ;!
  6765                           ;! ---------------------------------------------------------------------------------
  6766                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  6767                           ;! ---------------------------------------------------------------------------------
  6768                           ;! (0) _main                                                96    96      0   76167
  6769                           ;!                                             30 COMRAM     2     2      0
  6770                           ;!                                              0 BANK0h    93    93      0
  6771                           ;!                           _I2C_init
  6772                           ;!                            _MCP4725
  6773                           ;!                          _Wifi_mode *
  6774                           ;!                            ___aldiv
  6775                           ;!                            ___awmod
  6776                           ;!                             ___lmul
  6777                           ;!                             ___wmul
  6778                           ;!                      _addContCiclos
  6779                           ;!                    _addIndicePassos
  6780                           ;!                        _alt_atuador
  6781                           ;!                        _buscar_dado
  6782                           ;!                     _buscar_receita *
  6783                           ;!                         _decodifica
  6784                           ;!                              _delay
  6785                           ;!                    _deletar_receita *
  6786                           ;!                      _dignum_apagar
  6787                           ;!                        _dignum_conc
  6788                           ;!                            _dispLCD *
  6789                           ;!                        _dispLCD_clr *
  6790                           ;!                    _dispLCD_dataReg
  6791                           ;!                       _dispLCD_init
  6792                           ;!                     _dispLCD_lincol
  6793                           ;!                        _dispLCD_num *
  6794                           ;!                        _dispLCD_str *
  6795                           ;!                           _fifo_add
  6796                           ;!                     _fifo_add_ciclo
  6797                           ;!                   _fifo_add_control
  6798                           ;!                     _fifo_add_tempo
  6799                           ;!                          _fifo_adrs
  6800                           ;!                        _fifo_delete
  6801                           ;!                    _fifo_disponivel
  6802                           ;!                        _fifo_indice
  6803                           ;!               _fifo_indicePrint_dec
  6804                           ;!               _fifo_indicePrint_inc
  6805                           ;!                        _fifo_lerPos
  6806                           ;!                         _fifo_print
  6807                           ;!                           _fifo_tam
  6808                           ;!                  _formatar_receitas *
  6809                           ;!                          _getCiclos
  6810                           ;!                      _getContCiclos
  6811                           ;!                    _getIndicePassos
  6812                           ;!                       _initSerialIO
  6813                           ;!                     _init_atuadores
  6814                           ;!                        _ler_atuador
  6815                           ;!                         _ler_sensor
  6816                           ;!            _manipula_atuadores_init
  6817                           ;!                          _printExec
  6818                           ;!                    _resetContCiclos
  6819                           ;!                  _resetIndicePassos
  6820                           ;!               _salva_atuadores_init
  6821                           ;!                        _salvar_dado
  6822                           ;!                     _salvar_receita *
  6823                           ;!                       _serialIOscan
  6824                           ;!                              _setT1
  6825                           ;!                          _set_passo
  6826                           ;!                           _statusT1
  6827                           ;!                      _teclado_borda
  6828                           ;!                       _teclado_init
  6829                           ;!                        _timer1_init
  6830                           ;!                          _wifi_init *
  6831                           ;! ---------------------------------------------------------------------------------
  6832                           ;! (1) _wifi_init                                            4     0      4     616
  6833                           ;!                                             21 COMRAM     4     0      4
  6834                           ;!                         _initEUSART *
  6835                           ;! ---------------------------------------------------------------------------------
  6836                           ;! (2) _initEUSART                                           8     4      4     541
  6837                           ;!                                             13 COMRAM     8     4      4
  6838                           ;!                            ___lldiv
  6839                           ;! ---------------------------------------------------------------------------------
  6840                           ;! (1) _timer1_init                                          0     0      0       0
  6841                           ;! ---------------------------------------------------------------------------------
  6842                           ;! (1) _teclado_init                                         0     0      0       0
  6843                           ;! ---------------------------------------------------------------------------------
  6844                           ;! (1) _teclado_borda                                        2     2      0     296
  6845                           ;!                                              5 COMRAM     2     2      0
  6846                           ;!                       _teclado_scan
  6847                           ;! ---------------------------------------------------------------------------------
  6848                           ;! (2) _teclado_scan                                         5     5      0     204
  6849                           ;!                                              0 COMRAM     5     5      0
  6850                           ;! ---------------------------------------------------------------------------------
  6851                           ;! (1) _statusT1                                             4     0      4       0
  6852                           ;!                                              0 COMRAM     4     0      4
  6853                           ;! ---------------------------------------------------------------------------------
  6854                           ;! (1) _set_passo                                            5     3      2     274
  6855                           ;!                                              0 COMRAM     5     3      2
  6856                           ;! ---------------------------------------------------------------------------------
  6857                           ;! (1) _setT1                                                4     0      4     478
  6858                           ;!                                              6 COMRAM     4     0      4
  6859                           ;!                             ___wmul (ARG)
  6860                           ;! ---------------------------------------------------------------------------------
  6861                           ;! (1) _serialIOscan                                         6     6      0     205
  6862                           ;!                                              3 COMRAM     6     6      0
  6863                           ;!                  _serialIObyteShift
  6864                           ;!                       _serialIOload
  6865                           ;! ---------------------------------------------------------------------------------
  6866                           ;! (2) _serialIOload                                         0     0      0       0
  6867                           ;! ---------------------------------------------------------------------------------
  6868                           ;! (2) _serialIObyteShift                                    3     3      0     114
  6869                           ;!                                              0 COMRAM     3     3      0
  6870                           ;! ---------------------------------------------------------------------------------
  6871                           ;! (1) _salvar_receita                                       6     4      2    1089
  6872                           ;!                                              6 COMRAM     6     4      2
  6873                           ;!                       _EEPROM_write
  6874                           ;!                            ___awmod (ARG)
  6875                           ;!                        _end_receita
  6876                           ;!                          _fifo_adrs (ARG)
  6877                           ;! ---------------------------------------------------------------------------------
  6878                           ;! (1) _salvar_dado                                          5     3      2    1219
  6879                           ;!                                              6 COMRAM     5     3      2
  6880                           ;!                       _EEPROM_write
  6881                           ;!                            ___awmod (ARG)
  6882                           ;!                        _end_receita
  6883                           ;! ---------------------------------------------------------------------------------
  6884                           ;! (1) _salva_atuadores_init                                 8     8      0     235
  6885                           ;!                                              3 COMRAM     8     8      0
  6886                           ;!                        _ler_atuador
  6887                           ;! ---------------------------------------------------------------------------------
  6888                           ;! (2) _ler_atuador                                          3     3      0      22
  6889                           ;!                                              0 COMRAM     3     3      0
  6890                           ;! ---------------------------------------------------------------------------------
  6891                           ;! (1) _resetIndicePassos                                    0     0      0       0
  6892                           ;! ---------------------------------------------------------------------------------
  6893                           ;! (1) _resetContCiclos                                      0     0      0       0
  6894                           ;! ---------------------------------------------------------------------------------
  6895                           ;! (1) _printExec                                            5     4      1   12960
  6896                           ;!                                             25 COMRAM     5     4      1
  6897                           ;!                         _decodifica
  6898                           ;!                         _dignum_tam
  6899                           ;!                    _dispLCD_dataReg
  6900                           ;!                     _dispLCD_lincol
  6901                           ;!                        _dispLCD_num
  6902                           ;!                           _posAtual
  6903                           ;! ---------------------------------------------------------------------------------
  6904                           ;! (2) _posAtual                                             2     2      0      68
  6905                           ;!                                              1 COMRAM     2     2      0
  6906                           ;!                        _fifo_lerPos
  6907                           ;!                    _getIndicePassos
  6908                           ;! ---------------------------------------------------------------------------------
  6909                           ;! (3) _getIndicePassos                                      0     0      0       0
  6910                           ;! ---------------------------------------------------------------------------------
  6911                           ;! (3) _fifo_lerPos                                          1     1      0      22
  6912                           ;!                                              0 COMRAM     1     1      0
  6913                           ;! ---------------------------------------------------------------------------------
  6914                           ;! (2) _dispLCD_num                                         14    10      4    7167
  6915                           ;!                                             11 COMRAM    14    10      4
  6916                           ;!                            ___awdiv
  6917                           ;!                            ___awmod
  6918                           ;!                         _dignum_tam (ARG)
  6919                           ;!                    _dispLCD_dataReg
  6920                           ;!                     _dispLCD_lincol
  6921                           ;!                        _fifo_indice (ARG)
  6922                           ;!                           _fifo_tam (ARG)
  6923                           ;!                      _getContCiclos (ARG)
  6924                           ;!                    _getIndicePassos (ARG)
  6925                           ;! ---------------------------------------------------------------------------------
  6926                           ;! (1) _manipula_atuadores_init                              3     3      0     136
  6927                           ;!                                              3 COMRAM     3     3      0
  6928                           ;!                        _alt_atuador
  6929                           ;! ---------------------------------------------------------------------------------
  6930                           ;! (1) _ler_sensor                                           5     3      2     274
  6931                           ;!                                              0 COMRAM     5     3      2
  6932                           ;! ---------------------------------------------------------------------------------
  6933                           ;! (1) _init_atuadores                                       0     0      0       0
  6934                           ;! ---------------------------------------------------------------------------------
  6935                           ;! (1) _initSerialIO                                         5     0      5     294
  6936                           ;!                                              0 COMRAM     5     0      5
  6937                           ;! ---------------------------------------------------------------------------------
  6938                           ;! (1) _getContCiclos                                        2     0      2       0
  6939                           ;!                                              0 COMRAM     2     0      2
  6940                           ;! ---------------------------------------------------------------------------------
  6941                           ;! (1) _getCiclos                                            4     2      2      25
  6942                           ;!                                              0 COMRAM     4     2      2
  6943                           ;! ---------------------------------------------------------------------------------
  6944                           ;! (1) _formatar_receitas                                    1     1      0     372
  6945                           ;!                                              2 COMRAM     1     1      0
  6946                           ;!                       _EEPROM_write
  6947                           ;! ---------------------------------------------------------------------------------
  6948                           ;! (1) _fifo_tam                                             0     0      0       0
  6949                           ;! ---------------------------------------------------------------------------------
  6950                           ;! (1) _fifo_print                                           9     9      0    7013
  6951                           ;!                                              8 COMRAM     9     9      0
  6952                           ;!                            ___awdiv
  6953                           ;!                            ___awmod
  6954                           ;!                         _decodifica
  6955                           ;!                    _dispLCD_dataReg
  6956                           ;!                     _dispLCD_lincol
  6957                           ;! ---------------------------------------------------------------------------------
  6958                           ;! (3) ___awmod                                              6     2      4    1968
  6959                           ;!                                              0 COMRAM     6     2      4
  6960                           ;! ---------------------------------------------------------------------------------
  6961                           ;! (1) _fifo_indicePrint_inc                                 7     7      0       0
  6962                           ;!                                              0 COMRAM     7     7      0
  6963                           ;! ---------------------------------------------------------------------------------
  6964                           ;! (1) _fifo_indicePrint_dec                                 0     0      0       0
  6965                           ;! ---------------------------------------------------------------------------------
  6966                           ;! (1) _fifo_indice                                          0     0      0       0
  6967                           ;! ---------------------------------------------------------------------------------
  6968                           ;! (1) _fifo_disponivel                                      0     0      0       0
  6969                           ;! ---------------------------------------------------------------------------------
  6970                           ;! (1) _fifo_delete                                          2     2      0    4395
  6971                           ;!                                             15 COMRAM     2     2      0
  6972                           ;!                        _alt_atuador
  6973                           ;!                           _codifica
  6974                           ;!                         _decodifica
  6975                           ;!                  _fifo_alinharPrint
  6976                           ;! ---------------------------------------------------------------------------------
  6977                           ;! (2) _decodifica                                           4     2      2    1426
  6978                           ;!                                              0 COMRAM     4     2      2
  6979                           ;! ---------------------------------------------------------------------------------
  6980                           ;! (2) _alt_atuador                                          3     3      0      22
  6981                           ;!                                              0 COMRAM     3     3      0
  6982                           ;! ---------------------------------------------------------------------------------
  6983                           ;! (1) _fifo_adrs                                            2     0      2       0
  6984                           ;!                                              0 COMRAM     2     0      2
  6985                           ;! ---------------------------------------------------------------------------------
  6986                           ;! (1) _fifo_add_tempo                                       1     1      0    3035
  6987                           ;!                                             15 COMRAM     1     1      0
  6988                           ;!                           _codifica
  6989                           ;!                  _fifo_alinharPrint
  6990                           ;! ---------------------------------------------------------------------------------
  6991                           ;! (1) _fifo_add_control                                     1     1      0    3013
  6992                           ;!                                             15 COMRAM     1     1      0
  6993                           ;!                           _codifica
  6994                           ;!                  _fifo_alinharPrint
  6995                           ;! ---------------------------------------------------------------------------------
  6996                           ;! (1) _fifo_add_ciclo                                       2     0      2     120
  6997                           ;!                                              0 COMRAM     2     0      2
  6998                           ;! ---------------------------------------------------------------------------------
  6999                           ;! (1) _fifo_add                                             1     1      0    3035
  7000                           ;!                                             15 COMRAM     1     1      0
  7001                           ;!                           _codifica
  7002                           ;!                  _fifo_alinharPrint
  7003                           ;! ---------------------------------------------------------------------------------
  7004                           ;! (2) _fifo_alinharPrint                                    4     4      0    2357
  7005                           ;!                                             11 COMRAM     4     4      0
  7006                           ;!                         _dignum_tam
  7007                           ;! ---------------------------------------------------------------------------------
  7008                           ;! (2) _dignum_tam                                           3     1      2    2041
  7009                           ;!                                              8 COMRAM     3     1      2
  7010                           ;!                            ___awdiv
  7011                           ;! ---------------------------------------------------------------------------------
  7012                           ;! (3) ___awdiv                                              8     4      4    1364
  7013                           ;!                                              0 COMRAM     8     4      4
  7014                           ;! ---------------------------------------------------------------------------------
  7015                           ;! (2) _codifica                                             5     3      2     590
  7016                           ;!                                              0 COMRAM     5     3      2
  7017                           ;! ---------------------------------------------------------------------------------
  7018                           ;! (1) _dispLCD_str                                          4     2      2    1733
  7019                           ;!                                              7 COMRAM     4     2      2
  7020                           ;!                    _dispLCD_dataReg
  7021                           ;!                     _dispLCD_lincol
  7022                           ;! ---------------------------------------------------------------------------------
  7023                           ;! (1) _dispLCD_init                                         0     0      0    1415
  7024                           ;!                              _delay
  7025                           ;!                    _dispLCD_instReg
  7026                           ;! ---------------------------------------------------------------------------------
  7027                           ;! (1) _dispLCD_clr                                          0     0      0     176
  7028                           ;!                    _dispLCD_instReg
  7029                           ;! ---------------------------------------------------------------------------------
  7030                           ;! (1) _dispLCD                                              5     2      3    4971
  7031                           ;!                                              7 COMRAM     5     2      3
  7032                           ;!                    _dispLCD_dataReg
  7033                           ;!                     _dispLCD_lincol
  7034                           ;! ---------------------------------------------------------------------------------
  7035                           ;! (3) _dispLCD_lincol                                       5     4      1    1386
  7036                           ;!                                              2 COMRAM     5     4      1
  7037                           ;!                    _dispLCD_instReg
  7038                           ;! ---------------------------------------------------------------------------------
  7039                           ;! (4) _dispLCD_instReg                                      2     2      0     176
  7040                           ;!                                              0 COMRAM     2     2      0
  7041                           ;! ---------------------------------------------------------------------------------
  7042                           ;! (3) _dispLCD_dataReg                                      2     2      0      44
  7043                           ;!                                              0 COMRAM     2     2      0
  7044                           ;! ---------------------------------------------------------------------------------
  7045                           ;! (1) _dignum_conc                                          7     5      2     757
  7046                           ;!                                              6 COMRAM     7     5      2
  7047                           ;!                             ___wmul
  7048                           ;! ---------------------------------------------------------------------------------
  7049                           ;! (2) ___wmul                                               6     2      4     463
  7050                           ;!                                              0 COMRAM     6     2      4
  7051                           ;! ---------------------------------------------------------------------------------
  7052                           ;! (1) _dignum_apagar                                        2     0      2     540
  7053                           ;!                                              7 COMRAM     2     0      2
  7054                           ;!                            ___lwdiv
  7055                           ;! ---------------------------------------------------------------------------------
  7056                           ;! (2) ___lwdiv                                              7     3      4     268
  7057                           ;!                                              0 COMRAM     7     3      4
  7058                           ;! ---------------------------------------------------------------------------------
  7059                           ;! (1) _deletar_receita                                      4     4      0     939
  7060                           ;!                                              4 COMRAM     4     4      0
  7061                           ;!                       _EEPROM_write
  7062                           ;!                        _end_receita
  7063                           ;! ---------------------------------------------------------------------------------
  7064                           ;! (2) _EEPROM_write                                         2     1      1     348
  7065                           ;!                                              0 COMRAM     2     1      1
  7066                           ;! ---------------------------------------------------------------------------------
  7067                           ;! (1) _buscar_receita                                       6     4      2     763
  7068                           ;!                                              6 COMRAM     6     4      2
  7069                           ;!                        _EEPROM_read
  7070                           ;!                            ___awmod (ARG)
  7071                           ;!                        _end_receita
  7072                           ;! ---------------------------------------------------------------------------------
  7073                           ;! (1) _buscar_dado                                          6     3      3     893
  7074                           ;!                                              6 COMRAM     6     3      3
  7075                           ;!                        _EEPROM_read
  7076                           ;!                            ___awmod (ARG)
  7077                           ;!                        _end_receita
  7078                           ;! ---------------------------------------------------------------------------------
  7079                           ;! (2) _end_receita                                          4     2      2     478
  7080                           ;!                                              0 COMRAM     4     2      2
  7081                           ;! ---------------------------------------------------------------------------------
  7082                           ;! (2) _EEPROM_read                                          1     1      0      22
  7083                           ;!                                              0 COMRAM     1     1      0
  7084                           ;! ---------------------------------------------------------------------------------
  7085                           ;! (1) _addIndicePassos                                      0     0      0       0
  7086                           ;! ---------------------------------------------------------------------------------
  7087                           ;! (1) _addContCiclos                                        0     0      0       0
  7088                           ;! ---------------------------------------------------------------------------------
  7089                           ;! (1) ___lmul                                              12     4      8     370
  7090                           ;!                                              0 COMRAM    12     4      8
  7091                           ;! ---------------------------------------------------------------------------------
  7092                           ;! (1) ___aldiv                                             14     6      8     452
  7093                           ;!                                             12 COMRAM    14     6      8
  7094                           ;!                             ___lmul (ARG)
  7095                           ;! ---------------------------------------------------------------------------------
  7096                           ;! (1) _Wifi_mode                                            1     1      0    1425
  7097                           ;!                                              3 COMRAM     1     1      0
  7098                           ;!                          _wifi_send
  7099                           ;! ---------------------------------------------------------------------------------
  7100                           ;! (2) _wifi_send                                            2     0      2    1359
  7101                           ;!                                              1 COMRAM     2     0      2
  7102                           ;!                           _txEUSART *
  7103                           ;!                     _txStatusEUSART *
  7104                           ;! ---------------------------------------------------------------------------------
  7105                           ;! (3) _txStatusEUSART                                       0     0      0       0
  7106                           ;! ---------------------------------------------------------------------------------
  7107                           ;! (3) _txEUSART                                             1     1      0      22
  7108                           ;!                                              0 COMRAM     1     1      0
  7109                           ;! ---------------------------------------------------------------------------------
  7110                           ;! (1) _MCP4725                                              2     0      2    4207
  7111                           ;!                                             26 COMRAM     2     0      2
  7112                           ;!                           _I2C_stop
  7113                           ;!                            ___aldiv (ARG)
  7114                           ;!                             ___lmul (ARG)
  7115                           ;!                           _dac_init
  7116                           ;!                          _dac_write
  7117                           ;!                              _delay
  7118                           ;! ---------------------------------------------------------------------------------
  7119                           ;! (2) _dac_write                                            5     3      2    1533
  7120                           ;!                                              3 COMRAM     5     3      2
  7121                           ;!                    _I2C_ack_receive
  7122                           ;!                             _I2C_tx
  7123                           ;!                              _delay
  7124                           ;! ---------------------------------------------------------------------------------
  7125                           ;! (2) _dac_init                                             0     0      0    1261
  7126                           ;!                    _I2C_ack_receive
  7127                           ;!                          _I2C_start
  7128                           ;!                             _I2C_tx
  7129                           ;!                              _delay
  7130                           ;! ---------------------------------------------------------------------------------
  7131                           ;! (2) _delay                                                3     1      2    1239
  7132                           ;!                                              0 COMRAM     3     1      2
  7133                           ;! ---------------------------------------------------------------------------------
  7134                           ;! (3) _I2C_tx                                               1     1      0      22
  7135                           ;!                                              0 COMRAM     1     1      0
  7136                           ;! ---------------------------------------------------------------------------------
  7137                           ;! (3) _I2C_start                                            0     0      0       0
  7138                           ;! ---------------------------------------------------------------------------------
  7139                           ;! (3) _I2C_ack_receive                                      0     0      0       0
  7140                           ;! ---------------------------------------------------------------------------------
  7141                           ;! (2) _I2C_stop                                             0     0      0       0
  7142                           ;! ---------------------------------------------------------------------------------
  7143                           ;! (1) _I2C_init                                             4     0      4     564
  7144                           ;!                                             13 COMRAM     4     0      4
  7145                           ;!                            ___lldiv
  7146                           ;! ---------------------------------------------------------------------------------
  7147                           ;! (3) ___lldiv                                             13     5      8     466
  7148                           ;!                                              0 COMRAM    13     5      8
  7149                           ;! ---------------------------------------------------------------------------------
  7150                           ;! Estimated maximum stack depth 4
  7151                           ;! ---------------------------------------------------------------------------------
  7152                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  7153                           ;! ---------------------------------------------------------------------------------
  7154                           ;! (5) _irq                                                  0     0      0       0
  7155                           ;!                          _intt1_1ms
  7156                           ;! ---------------------------------------------------------------------------------
  7157                           ;! (6) _intt1_1ms                                            0     0      0       0
  7158                           ;! ---------------------------------------------------------------------------------
  7159                           ;! Estimated maximum stack depth 6
  7160                           ;! ---------------------------------------------------------------------------------
  7161                           ;!
  7162                           ;! Call Graph Graphs:
  7163                           ;!
  7164                           ;! _main (ROOT)
  7165                           ;!   _I2C_init
  7166                           ;!     ___lldiv
  7167                           ;!   _MCP4725
  7168                           ;!     _I2C_stop
  7169                           ;!     ___aldiv (ARG)
  7170                           ;!       ___lmul (ARG)
  7171                           ;!     ___lmul (ARG)
  7172                           ;!     _dac_init (ARG)
  7173                           ;!       _I2C_ack_receive
  7174                           ;!       _I2C_start
  7175                           ;!       _I2C_tx
  7176                           ;!       _delay
  7177                           ;!     _dac_write (ARG)
  7178                           ;!       _I2C_ack_receive
  7179                           ;!       _I2C_tx
  7180                           ;!       _delay
  7181                           ;!     _delay (ARG)
  7182                           ;!   _Wifi_mode *
  7183                           ;!     _wifi_send
  7184                           ;!       _txEUSART *
  7185                           ;!       _txStatusEUSART *
  7186                           ;!   ___aldiv *
  7187                           ;!     ___lmul (ARG)
  7188                           ;!   ___awmod *
  7189                           ;!   ___lmul *
  7190                           ;!   ___wmul *
  7191                           ;!   _addContCiclos *
  7192                           ;!   _addIndicePassos *
  7193                           ;!   _alt_atuador *
  7194                           ;!   _buscar_dado *
  7195                           ;!     _EEPROM_read
  7196                           ;!     ___awmod (ARG)
  7197                           ;!     _end_receita (ARG)
  7198                           ;!   _buscar_receita *
  7199                           ;!     _EEPROM_read
  7200                           ;!     ___awmod (ARG)
  7201                           ;!     _end_receita (ARG)
  7202                           ;!   _decodifica *
  7203                           ;!   _delay *
  7204                           ;!   _deletar_receita *
  7205                           ;!     _EEPROM_write
  7206                           ;!     _end_receita
  7207                           ;!   _dignum_apagar *
  7208                           ;!     ___lwdiv
  7209                           ;!   _dignum_conc *
  7210                           ;!     ___wmul
  7211                           ;!   _dispLCD *
  7212                           ;!     _dispLCD_dataReg
  7213                           ;!     _dispLCD_lincol
  7214                           ;!       _dispLCD_instReg
  7215                           ;!   _dispLCD_clr *
  7216                           ;!     _dispLCD_instReg
  7217                           ;!   _dispLCD_dataReg *
  7218                           ;!   _dispLCD_init *
  7219                           ;!     _delay
  7220                           ;!     _dispLCD_instReg
  7221                           ;!   _dispLCD_lincol *
  7222                           ;!     _dispLCD_instReg
  7223                           ;!   _dispLCD_num *
  7224                           ;!     ___awdiv
  7225                           ;!     ___awmod
  7226                           ;!     _dignum_tam (ARG)
  7227                           ;!       ___awdiv
  7228                           ;!     _dispLCD_dataReg (ARG)
  7229                           ;!     _dispLCD_lincol (ARG)
  7230                           ;!       _dispLCD_instReg
  7231                           ;!     _fifo_indice (ARG)
  7232                           ;!     _fifo_tam (ARG)
  7233                           ;!     _getContCiclos (ARG)
  7234                           ;!     _getIndicePassos (ARG)
  7235                           ;!   _dispLCD_str *
  7236                           ;!     _dispLCD_dataReg
  7237                           ;!     _dispLCD_lincol
  7238                           ;!       _dispLCD_instReg
  7239                           ;!   _fifo_add *
  7240                           ;!     _codifica
  7241                           ;!     _fifo_alinharPrint
  7242                           ;!       _dignum_tam
  7243                           ;!         ___awdiv
  7244                           ;!   _fifo_add_ciclo *
  7245                           ;!   _fifo_add_control *
  7246                           ;!     _codifica
  7247                           ;!     _fifo_alinharPrint
  7248                           ;!       _dignum_tam
  7249                           ;!         ___awdiv
  7250                           ;!   _fifo_add_tempo *
  7251                           ;!     _codifica
  7252                           ;!     _fifo_alinharPrint
  7253                           ;!       _dignum_tam
  7254                           ;!         ___awdiv
  7255                           ;!   _fifo_adrs *
  7256                           ;!   _fifo_delete *
  7257                           ;!     _alt_atuador
  7258                           ;!     _codifica
  7259                           ;!     _decodifica
  7260                           ;!     _fifo_alinharPrint
  7261                           ;!       _dignum_tam
  7262                           ;!         ___awdiv
  7263                           ;!   _fifo_disponivel *
  7264                           ;!   _fifo_indice *
  7265                           ;!   _fifo_indicePrint_dec *
  7266                           ;!   _fifo_indicePrint_inc *
  7267                           ;!   _fifo_lerPos *
  7268                           ;!   _fifo_print *
  7269                           ;!     ___awdiv
  7270                           ;!     ___awmod
  7271                           ;!     _decodifica
  7272                           ;!     _dispLCD_dataReg
  7273                           ;!     _dispLCD_lincol
  7274                           ;!       _dispLCD_instReg
  7275                           ;!   _fifo_tam *
  7276                           ;!   _formatar_receitas *
  7277                           ;!     _EEPROM_write
  7278                           ;!   _getCiclos *
  7279                           ;!   _getContCiclos *
  7280                           ;!   _getIndicePassos *
  7281                           ;!   _initSerialIO *
  7282                           ;!   _init_atuadores *
  7283                           ;!   _ler_atuador *
  7284                           ;!   _ler_sensor *
  7285                           ;!   _manipula_atuadores_init *
  7286                           ;!     _alt_atuador
  7287                           ;!   _printExec *
  7288                           ;!     _decodifica
  7289                           ;!     _dignum_tam
  7290                           ;!       ___awdiv
  7291                           ;!     _dispLCD_dataReg
  7292                           ;!     _dispLCD_lincol
  7293                           ;!       _dispLCD_instReg
  7294                           ;!     _dispLCD_num
  7295                           ;!       ___awdiv
  7296                           ;!       ___awmod
  7297                           ;!       _dignum_tam (ARG)
  7298                           ;!         ___awdiv
  7299                           ;!       _dispLCD_dataReg (ARG)
  7300                           ;!       _dispLCD_lincol (ARG)
  7301                           ;!         _dispLCD_instReg
  7302                           ;!       _fifo_indice (ARG)
  7303                           ;!       _fifo_tam (ARG)
  7304                           ;!       _getContCiclos (ARG)
  7305                           ;!       _getIndicePassos (ARG)
  7306                           ;!     _posAtual
  7307                           ;!       _fifo_lerPos
  7308                           ;!       _getIndicePassos
  7309                           ;!   _resetContCiclos *
  7310                           ;!   _resetIndicePassos *
  7311                           ;!   _salva_atuadores_init *
  7312                           ;!     _ler_atuador
  7313                           ;!   _salvar_dado *
  7314                           ;!     _EEPROM_write
  7315                           ;!     ___awmod (ARG)
  7316                           ;!     _end_receita (ARG)
  7317                           ;!   _salvar_receita *
  7318                           ;!     _EEPROM_write
  7319                           ;!     ___awmod (ARG)
  7320                           ;!     _end_receita (ARG)
  7321                           ;!     _fifo_adrs (ARG)
  7322                           ;!   _serialIOscan *
  7323                           ;!     _serialIObyteShift
  7324                           ;!     _serialIOload
  7325                           ;!   _setT1 *
  7326                           ;!     ___wmul (ARG)
  7327                           ;!   _set_passo *
  7328                           ;!   _statusT1 *
  7329                           ;!   _teclado_borda *
  7330                           ;!     _teclado_scan
  7331                           ;!   _teclado_init *
  7332                           ;!   _timer1_init *
  7333                           ;!   _wifi_init *
  7334                           ;!     _initEUSART *
  7335                           ;!       ___lldiv
  7336                           ;!
  7337                           ;! _irq (ROOT)
  7338                           ;!   _intt1_1ms
  7339                           ;!
  7340                           
  7341                           ;! Address spaces:
  7342                           
  7343                           ;!Name               Size   Autos  Total    Cost      Usage
  7344                           ;!BIGRAMh            765      0       0      23        0.0%
  7345                           ;!EEDATA             100      0       0       0        0.0%
  7346                           ;!BITBANK7           100      0       0      21        0.0%
  7347                           ;!BANK7              100      0       0      22        0.0%
  7348                           ;!BITBANK6           100      0       0      19        0.0%
  7349                           ;!BANK6              100      0       0      20        0.0%
  7350                           ;!BITBANK5           100      0       0      16        0.0%
  7351                           ;!BANK5              100      0       0      17        0.0%
  7352                           ;!BITBANK4           100      0       0      14        0.0%
  7353                           ;!BANK4              100      0       0      15        0.0%
  7354                           ;!BITBANK3           100      0       0      12        0.0%
  7355                           ;!BANK3              100      0       0      13        0.0%
  7356                           ;!BITBANK2           100      0       0      10        0.0%
  7357                           ;!BANK2              100      0       0      11        0.0%
  7358                           ;!BITBANK1           100      0       0       8        0.0%
  7359                           ;!BANK1              100      0      78       9       46.9%
  7360                           ;!BIGRAMl             98      0       0      24        0.0%
  7361                           ;!BANK0h              65     5D      5F       6       94.1%
  7362                           ;!BITBANK0h           65      0       0       4        0.0%
  7363                           ;!BITCOMRAM           5E      0       0       0        0.0%
  7364                           ;!COMRAM              5E     20      5D       1       98.9%
  7365                           ;!BITBANK0l           39      0       0       5        0.0%
  7366                           ;!BANK0l              39      0      34       7       91.2%
  7367                           ;!BITSFR               0      0       0     200        0.0%
  7368                           ;!SFR                  0      0       0     200        0.0%
  7369                           ;!STACK                0      0       0       2        0.0%
  7370                           ;!NULL                 0      0       0       0        0.0%
  7371                           ;!ABS                  0      0     168      18        0.0%
  7372                           ;!DATA                 0      0     168       3        0.0%
  7373                           ;!CODE                 0      0       0       0        0.0%
  7374                           
  7375                           	global	_main
  7376                           
  7377 ;; *************** function _main *****************
  7378 ;; Defined at:
  7379 ;;		line 71 in file "main.c"
  7380 ;; Parameters:    Size  Location     Type
  7381 ;;		None
  7382 ;; Auto vars:     Size  Location     Type
  7383 ;;  j               1   76[BANK0h] unsigned char 
  7384 ;;  j               1   74[BANK0h] unsigned char 
  7385 ;;  j               1   72[BANK0h] unsigned char 
  7386 ;;  j               1   70[BANK0h] unsigned char 
  7387 ;;  j               1   68[BANK0h] unsigned char 
  7388 ;;  j               1   66[BANK0h] unsigned char 
  7389 ;;  ptr             2   88[BANK0h] PTR unsigned char 
  7390 ;;		 -> main@vetor_aux(16), 
  7391 ;;  i               1   75[BANK0h] unsigned char 
  7392 ;;  i               1   73[BANK0h] unsigned char 
  7393 ;;  i               1   71[BANK0h] unsigned char 
  7394 ;;  i               1   69[BANK0h] unsigned char 
  7395 ;;  ptr             2   86[BANK0h] PTR unsigned char 
  7396 ;;		 -> main@vetor_aux(16), 
  7397 ;;  i               1   67[BANK0h] unsigned char 
  7398 ;;  i               1   65[BANK0h] unsigned char 
  7399 ;;  lema           20    0[BANK0h] unsigned char [20]
  7400 ;;  ptr             2   63[BANK0h] PTR unsigned char 
  7401 ;;		 -> main@lema(20), 
  7402 ;;  i               1   60[BANK0h] unsigned char 
  7403 ;;  vetor_aux      16   22[BANK0h] unsigned char [16]
  7404 ;;  num             2   84[BANK0h] unsigned int 
  7405 ;;  ciclos          2   80[BANK0h] unsigned int 
  7406 ;;  pt              2   61[BANK0h] PTR unsigned char 
  7407 ;;		 -> main@vetor_aux(16), 
  7408 ;;  tecla           1   92[BANK0h] unsigned char 
  7409 ;;  estado          1   91[BANK0h] unsigned char 
  7410 ;;  auxPasso        1   90[BANK0h] unsigned char 
  7411 ;;  botao           1   83[BANK0h] unsigned char 
  7412 ;;  init_cond       1   82[BANK0h] unsigned char 
  7413 ;;  meAtuadores     1   79[BANK0h] unsigned char 
  7414 ;;  vetorOut        1   78[BANK0h] unsigned char [1]
  7415 ;;  vetorIn         1   77[BANK0h] unsigned char [1]
  7416 ;;  aux             1   21[BANK0h] unsigned char 
  7417 ;;  contPassos      1   20[BANK0h] unsigned char 
  7418 ;;  atuador         1    0        unsigned char 
  7419 ;; Return value:  Size  Location     Type
  7420 ;;                  1    wreg      void 
  7421 ;; Registers used:
  7422 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack

  7423 ;; Tracked objects:
  7424 ;;		On entry : 0/0
  7425 ;;		On exit  : 0/0
  7426 ;;		Unchanged: 0/0
  7427 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7428 ;;      Params:         0       0       0       0       0       0       0       0       0       0
  7429 ;;      Locals:         0      93       0       0       0       0       0       0       0       0
  7430 ;;      Temps:          2       0       0       0       0       0       0       0       0       0
  7431 ;;      Totals:         2      93       0       0       0       0       0       0       0       0
  7432 ;;Total ram usage:       95 bytes
  7433 ;; Hardware stack levels required when called:    6
  7434 ;; This function calls:
  7435 ;;		_I2C_init
  7436 ;;		_MCP4725
  7437 ;;		_Wifi_mode
  7438 ;;		___aldiv
  7439 ;;		___awmod
  7440 ;;		___lmul
  7441 ;;		___wmul
  7442 ;;		_addContCiclos
  7443 ;;		_addIndicePassos
  7444 ;;		_alt_atuador
  7445 ;;		_buscar_dado
  7446 ;;		_buscar_receita
  7447 ;;		_decodifica
  7448 ;;		_delay
  7449 ;;		_deletar_receita
  7450 ;;		_dignum_apagar
  7451 ;;		_dignum_conc
  7452 ;;		_dispLCD
  7453 ;;		_dispLCD_clr
  7454 ;;		_dispLCD_dataReg
  7455 ;;		_dispLCD_init
  7456 ;;		_dispLCD_lincol
  7457 ;;		_dispLCD_num
  7458 ;;		_dispLCD_str
  7459 ;;		_fifo_add
  7460 ;;		_fifo_add_ciclo
  7461 ;;		_fifo_add_control
  7462 ;;		_fifo_add_tempo
  7463 ;;		_fifo_adrs
  7464 ;;		_fifo_delete
  7465 ;;		_fifo_disponivel
  7466 ;;		_fifo_indice
  7467 ;;		_fifo_indicePrint_dec
  7468 ;;		_fifo_indicePrint_inc
  7469 ;;		_fifo_lerPos
  7470 ;;		_fifo_print
  7471 ;;		_fifo_tam
  7472 ;;		_formatar_receitas
  7473 ;;		_getCiclos
  7474 ;;		_getContCiclos
  7475 ;;		_getIndicePassos
  7476 ;;		_initSerialIO
  7477 ;;		_init_atuadores
  7478 ;;		_ler_atuador
  7479 ;;		_ler_sensor
  7480 ;;		_manipula_atuadores_init
  7481 ;;		_printExec
  7482 ;;		_resetContCiclos
  7483 ;;		_resetIndicePassos
  7484 ;;		_salva_atuadores_init
  7485 ;;		_salvar_dado
  7486 ;;		_salvar_receita
  7487 ;;		_serialIOscan
  7488 ;;		_setT1
  7489 ;;		_set_passo
  7490 ;;		_statusT1
  7491 ;;		_teclado_borda
  7492 ;;		_teclado_init
  7493 ;;		_timer1_init
  7494 ;;		_wifi_init
  7495 ;; This function is called by:
  7496 ;;		Startup code after reset
  7497 ;; This function uses a non-reentrant model
  7498 ;;
  7499                           psect	text0,class=CODE,space=0,reloc=2,group=0
  7500                           	file	"main.c"
  7501                           	line	71
  7502                           global __ptext0
  7503                           __ptext0:
  7504  000012                     psect	text0
  7505                           	file	"main.c"
  7506                           	line	71
  7507                           	global	__size_of_main
  7508                           	__size_of_main	equ	__end_of_main-_main
  7509  0000                     	
  7510                           _main:
  7511  000012                     ;incstack = 0
  7512                           	opt	stack 25
  7513                           	line	73
  7514                           	
  7515                           l6255:
  7516  000012                     ;main.c: 73:     dispLCD_init();
  7517                           	call	_dispLCD_init	;wreg free
  7518  000012  EC80  F020         	line	74
  7519                           	
  7520                           l6257:
  7521  000016                     ;main.c: 74:     teclado_init();
  7522                           	call	_teclado_init	;wreg free
  7523  000016  EC99  F022         	line	75
  7524                           	
  7525                           l6259:
  7526  00001A                     ;main.c: 75:     timer1_init();
  7527                           	call	_timer1_init	;wreg free
  7528  00001A  ECED  F021         	line	76
  7529                           ;main.c: 76:     I2C_init(20000000);
  7530                           	movlw	low(01312D00h)
  7531  00001E  0E00               	movwf	((c:I2C_init@freq)),c
  7532  000020  6E34               	movlw	high(01312D00h)
  7533  000022  0E2D               	movwf	((c:I2C_init@freq+1)),c
  7534  000024  6E35               	movlw	low highword(01312D00h)
  7535  000026  0E31               	movwf	((c:I2C_init@freq+2)),c
  7536  000028  6E36               	movlw	high highword(01312D00h)
  7537  00002A  0E01               	movwf	((c:I2C_init@freq+3)),c
  7538  00002C  6E37               	call	_I2C_init	;wreg free
  7539  00002E  EC63  F020         	line	77
  7540                           ;main.c: 77:     MCP4725(0);
  7541                           	movlw	high(0)
  7542  000032  0E00               	movwf	((c:MCP4725@Vout+1)),c
  7543  000034  6E42               	movlw	low(0)
  7544  000036  0E00               	movwf	((c:MCP4725@Vout)),c
  7545  000038  6E41               	call	_MCP4725	;wreg free
  7546  00003A  ECBE  F021         	line	78
  7547                           	
  7548                           l6261:
  7549  00003E                     ;main.c: 78:     wifi.init(115200);
  7550                           	movlw	low(01C200h)
  7551  00003E  0E00               	movwf	((c:wifi_init@br)),c
  7552  000040  6E3C               	movlw	high(01C200h)
  7553  000042  0EC2               	movwf	((c:wifi_init@br+1)),c
  7554  000044  6E3D               	movlw	low highword(01C200h)
  7555  000046  0E01               	movwf	((c:wifi_init@br+2)),c
  7556  000048  6E3E               	movlw	high highword(01C200h)
  7557  00004A  0E00               	movwf	((c:wifi_init@br+3)),c
  7558  00004C  6E3F               	call	u4798
  7559  00004E  D802               	goto	u4799
  7560  000050  EF35  F000         u4798:
  7561  000054                     	push
  7562  000054  0005               	movlb	0	; () banked
  7563  000056  0100               	
  7564                           	movwf	pclath
  7565  000058  6EFA               	movf	((_wifi))&0ffh,w
  7566  00005A  51BD               	movwf	tosl
  7567  00005C  6EFD               	movf	((_wifi+1))&0ffh,w
  7568  00005E  51BE               	movwf	tosl+1
  7569  000060  6EFE               	movf	tblptru,w
  7570  000062  50F8               	movwf	tosl+2
  7571  000064  6EFF               	movf	pclath,w
  7572  000066  50FA               	
  7573                           	return	;indir
  7574  000068  0012               	u4799:
  7575  00006A                     	line	79
  7576                           	
  7577                           l6263:
  7578  00006A                     ;main.c: 79:     wifi.mode(1);
  7579                           	lfsr	2,(_wifi)+06h
  7580  00006A  EE20  F0C3         	call	u4808
  7581  00006E  D802               	goto	u4809
  7582  000070  EF45  F000         u4808:
  7583  000074                     	push
  7584  000074  0005               	movwf	pclath
  7585  000076  6EFA               	movf	postinc2,w
  7586  000078  50DE               	movwf	tosl
  7587  00007A  6EFD               	movf	postinc2,w
  7588  00007C  50DE               	movwf	tosl+1
  7589  00007E  6EFE               	movf	tblptru,w
  7590  000080  50F8               	movwf	tosl+2
  7591  000082  6EFF               	movf	pclath,w
  7592  000084  50FA               	
  7593                           	movlw	(01h)&0ffh
  7594  000086  0E01               	
  7595                           	return	;indir
  7596  000088  0012               	u4809:
  7597  00008A                     	line	81
  7598                           	
  7599                           l6265:
  7600  00008A                     ;main.c: 81:     char tecla = 0;
  7601                           	movlw	low(0)
  7602  00008A  0E00               	movlb	0	; () banked
  7603  00008C  0100               	movwf	((main@tecla))&0ffh
  7604  00008E  6FBC               	line	82
  7605                           	
  7606                           l6267:; BSR set to: 0
  7607  000090                     
  7608                           ;main.c: 82:     char estado = 0;
  7609                           	movlw	low(0)
  7610  000090  0E00               	movwf	((main@estado))&0ffh
  7611  000092  6FBB               	line	85
  7612                           	
  7613                           l6269:; BSR set to: 0
  7614  000094                     
  7615                           ;main.c: 83:     char atuador;;main.c: 84:     char vetor_aux[16];;main.c: 85:     char 
                                 init_cond = 0;
  7616                           	movlw	low(0)
  7617  000094  0E00               	movwf	((main@init_cond))&0ffh
  7618  000096  6FB2               	line	88
  7619                           	
  7620                           l6271:; BSR set to: 0
  7621  000098                     
  7622                           ;main.c: 86:     char *pt;;main.c: 88:     char contPassos = 0;
  7623                           	movlw	low(0)
  7624  000098  0E00               	movwf	((main@contPassos))&0ffh
  7625  00009A  6F74               	line	89
  7626                           	
  7627                           l6273:; BSR set to: 0
  7628  00009C                     
  7629                           ;main.c: 89:     char vetorIn[1] = { 0 };
  7630                           	movff	(main@F3482),(main@vetorIn)
  7631  00009C  C0F2  F0AD         	line	90
  7632                           	
  7633                           l6275:; BSR set to: 0
  7634  0000A0                     
  7635                           ;main.c: 90:     char vetorOut[1] = { 0 };
  7636                           	movff	(main@F3484),(main@vetorOut)
  7637  0000A0  C0F1  F0AE         	line	91
  7638                           	
  7639                           l6277:; BSR set to: 0
  7640  0000A4                     
  7641                           ;main.c: 91:     initSerialIO( vetorIn, vetorOut, 1 );
  7642                           		movlw	low(main@vetorIn)
  7643  0000A4  0EAD               	movwf	((c:initSerialIO@ptrIn)),c
  7644  0000A6  6E27               	movlw	high(main@vetorIn)
  7645  0000A8  0E00               	movwf	((c:initSerialIO@ptrIn+1)),c
  7646  0000AA  6E28               
  7647                           		movlw	low(main@vetorOut)
  7648  0000AC  0EAE               	movwf	((c:initSerialIO@ptrOut)),c
  7649  0000AE  6E29               	movlw	high(main@vetorOut)
  7650  0000B0  0E00               	movwf	((c:initSerialIO@ptrOut+1)),c
  7651  0000B2  6E2A               
  7652                           	movlw	low(01h)
  7653  0000B4  0E01               	movwf	((c:initSerialIO@length)),c
  7654  0000B6  6E2B               	call	_initSerialIO
  7655  0000B8  EC31  F021         	line	92
  7656                           	
  7657                           l6279:
  7658  0000BC                     ;main.c: 92:     char meAtuadores = -1;
  7659                           	movlb	0	; () banked
  7660  0000BC  0100               	setf	((main@meAtuadores))&0ffh
  7661  0000BE  69AF               	line	93
  7662                           	
  7663                           l6281:; BSR set to: 0
  7664  0000C0                     
  7665                           ;main.c: 93:     char auxPasso = 0;
  7666                           	movlw	low(0)
  7667  0000C0  0E00               	movwf	((main@auxPasso))&0ffh
  7668  0000C2  6FBA               	line	94
  7669                           	
  7670                           l6283:; BSR set to: 0
  7671  0000C4                     
  7672                           ;main.c: 94:     char aux = 2;
  7673                           	movlw	low(02h)
  7674  0000C4  0E02               	movwf	((main@aux))&0ffh
  7675  0000C6  6F75               	line	95
  7676                           	
  7677                           l6285:; BSR set to: 0
  7678  0000C8                     
  7679                           ;main.c: 95:     unsigned int num = 0;
  7680                           	movlw	high(0)
  7681  0000C8  0E00               	movwf	((main@num+1))&0ffh
  7682  0000CA  6FB5               	movlw	low(0)
  7683  0000CC  0E00               	movwf	((main@num))&0ffh
  7684  0000CE  6FB4               	line	96
  7685                           	
  7686                           l6287:; BSR set to: 0
  7687  0000D0                     
  7688                           ;main.c: 96:     unsigned int ciclos = 0;
  7689                           	movlw	high(0)
  7690  0000D0  0E00               	movwf	((main@ciclos+1))&0ffh
  7691  0000D2  6FB1               	movlw	low(0)
  7692  0000D4  0E00               	movwf	((main@ciclos))&0ffh
  7693  0000D6  6FB0               	line	97
  7694                           	
  7695                           l6289:; BSR set to: 0
  7696  0000D8                     
  7697                           ;main.c: 97:     char botao = 0;
  7698                           	movlw	low(0)
  7699  0000D8  0E00               	movwf	((main@botao))&0ffh
  7700  0000DA  6FB3               	goto	l7033
  7701  0000DC  EFBF  F00E         	line	110
  7702                           ;main.c: 110:     while(1)
  7703                           	
  7704                           l161:; BSR set to: 0
  7705  0000E0                     
  7706                           	line	112
  7707                           ;main.c: 111:     {;main.c: 112:          switch(estado)
  7708                           	goto	l7033
  7709  0000E0  EFBF  F00E         	line	114
  7710                           ;main.c: 113:         {;main.c: 114:              case 0:
  7711                           	
  7712                           l163:; BSR set to: 0
  7713  0000E4                     
  7714                           	line	115
  7715                           	
  7716                           l6291:; BSR set to: 0
  7717  0000E4                     
  7718                           ;main.c: 115:                             for(char i = 0; i <= 3; i++)
  7719                           	movlw	low(0)
  7720  0000E4  0E00               	movwf	((main@i))&0ffh
  7721  0000E6  6FA1               	
  7722                           l6293:; BSR set to: 0
  7723  0000E8                     
  7724                           		movlw	04h-1
  7725  0000E8  0E03               	cpfsgt	((main@i))&0ffh
  7726  0000EA  65A1               	goto	u4811
  7727  0000EC  EF7A  F000         	goto	u4810
  7728  0000F0  EF7C  F000         
  7729                           u4811:
  7730  0000F4                     	goto	l6297
  7731  0000F4  EF80  F000         u4810:
  7732  0000F8                     	goto	l6315
  7733  0000F8  EFC1  F000         	
  7734                           l6295:; BSR set to: 0
  7735  0000FC                     
  7736                           	goto	l6315
  7737  0000FC  EFC1  F000         	
  7738                           l164:; BSR set to: 0
  7739  000100                     
  7740                           	line	117
  7741                           	
  7742                           l6297:; BSR set to: 0
  7743  000100                     
  7744                           ;main.c: 116:                             {;main.c: 117:                                
                                  for(char j = 0; j <= 19; j++)
  7745                           	movlw	low(0)
  7746  000100  0E00               	movwf	((main@j))&0ffh
  7747  000102  6FA2               	
  7748                           l6299:; BSR set to: 0
  7749  000104                     
  7750                           		movlw	014h-1
  7751  000104  0E13               	cpfsgt	((main@j))&0ffh
  7752  000106  65A2               	goto	u4821
  7753  000108  EF88  F000         	goto	u4820
  7754  00010C  EF8A  F000         
  7755                           u4821:
  7756  000110                     	goto	l6303
  7757  000110  EF8E  F000         u4820:
  7758  000114                     	goto	l6311
  7759  000114  EFB6  F000         	
  7760                           l6301:; BSR set to: 0
  7761  000118                     
  7762                           	goto	l6311
  7763  000118  EFB6  F000         	
  7764                           l166:; BSR set to: 0
  7765  00011C                     
  7766                           	line	119
  7767                           	
  7768                           l6303:; BSR set to: 0
  7769  00011C                     
  7770                           ;main.c: 118:                                 {;main.c: 119:                            
                                          IHM.printpos(i, j, "\377");
  7771                           	lfsr	2,(_IHM)+04h
  7772  00011C  EE20  F055         	call	u4838
  7773  000120  D802               	goto	u4839
  7774  000122  EFA4  F000         u4838:
  7775  000126                     	push
  7776  000126  0005               	movwf	pclath
  7777  000128  6EFA               	movf	postinc2,w
  7778  00012A  50DE               	movwf	tosl
  7779  00012C  6EFD               	movf	postinc2,w
  7780  00012E  50DE               	movwf	tosl+1
  7781  000130  6EFE               	movf	tblptru,w
  7782  000132  50F8               	movwf	tosl+2
  7783  000134  6EFF               	movf	pclath,w
  7784  000136  50FA               	
  7785                           	movff	(main@j),(c:dispLCD@col)
  7786  000138  C0A2  F02E         		movlw	low(STR_1)
  7787  00013C  0EFC               	movwf	((c:dispLCD@str)),c
  7788  00013E  6E2F               	movlw	high(STR_1)
  7789  000140  0E7F               	movwf	((c:dispLCD@str+1)),c
  7790  000142  6E30               
  7791                           	movf	((main@i))&0ffh,w
  7792  000144  51A1               	
  7793                           	return	;indir
  7794  000146  0012               	u4839:
  7795  000148                     	line	120
  7796                           	
  7797                           l6305:
  7798  000148                     ;main.c: 120:                                     delay(10);
  7799                           	movlw	high(0Ah)
  7800  000148  0E00               	movwf	((c:delay@t+1)),c
  7801  00014A  6E28               	movlw	low(0Ah)
  7802  00014C  0E0A               	movwf	((c:delay@t)),c
  7803  00014E  6E27               	call	_delay
  7804  000150  ECE8  F020         	line	121
  7805                           	
  7806                           l6307:
  7807  000154                     ;main.c: 121:                                 }
  7808                           	movlb	0	; () banked
  7809  000154  0100               	incf	((main@j))&0ffh
  7810  000156  2BA2               	
  7811                           l6309:; BSR set to: 0
  7812  000158                     
  7813                           		movlw	014h-1
  7814  000158  0E13               	cpfsgt	((main@j))&0ffh
  7815  00015A  65A2               	goto	u4841
  7816  00015C  EFB2  F000         	goto	u4840
  7817  000160  EFB4  F000         
  7818                           u4841:
  7819  000164                     	goto	l6303
  7820  000164  EF8E  F000         u4840:
  7821  000168                     	goto	l6311
  7822  000168  EFB6  F000         	
  7823                           l167:; BSR set to: 0
  7824  00016C                     
  7825                           	line	122
  7826                           	
  7827                           l6311:; BSR set to: 0
  7828  00016C                     
  7829                           ;main.c: 122:                             }
  7830                           	incf	((main@i))&0ffh
  7831  00016C  2BA1               	
  7832                           l6313:; BSR set to: 0
  7833  00016E                     
  7834                           		movlw	04h-1
  7835  00016E  0E03               	cpfsgt	((main@i))&0ffh
  7836  000170  65A1               	goto	u4851
  7837  000172  EFBD  F000         	goto	u4850
  7838  000176  EFBF  F000         
  7839                           u4851:
  7840  00017A                     	goto	l6297
  7841  00017A  EF80  F000         u4850:
  7842  00017E                     	goto	l6315
  7843  00017E  EFC1  F000         	
  7844                           l165:; BSR set to: 0
  7845  000182                     
  7846                           	line	124
  7847                           	
  7848                           l6315:; BSR set to: 0
  7849  000182                     
  7850                           ;main.c: 124:                             for(char i = 0; i <= 3; i++)
  7851                           	movlw	low(0)
  7852  000182  0E00               	movwf	((main@i_643))&0ffh
  7853  000184  6FA3               	
  7854                           l6317:; BSR set to: 0
  7855  000186                     
  7856                           		movlw	04h-1
  7857  000186  0E03               	cpfsgt	((main@i_643))&0ffh
  7858  000188  65A3               	goto	u4861
  7859  00018A  EFC9  F000         	goto	u4860
  7860  00018E  EFCB  F000         
  7861                           u4861:
  7862  000192                     	goto	l6321
  7863  000192  EFCF  F000         u4860:
  7864  000196                     	goto	l6339
  7865  000196  EF10  F001         	
  7866                           l6319:; BSR set to: 0
  7867  00019A                     
  7868                           	goto	l6339
  7869  00019A  EF10  F001         	
  7870                           l168:; BSR set to: 0
  7871  00019E                     
  7872                           	line	126
  7873                           	
  7874                           l6321:; BSR set to: 0
  7875  00019E                     
  7876                           ;main.c: 125:                             {;main.c: 126:                                
                                  for(char j = 0; j <= 19; j++)
  7877                           	movlw	low(0)
  7878  00019E  0E00               	movwf	((main@j_644))&0ffh
  7879  0001A0  6FA4               	
  7880                           l6323:; BSR set to: 0
  7881  0001A2                     
  7882                           		movlw	014h-1
  7883  0001A2  0E13               	cpfsgt	((main@j_644))&0ffh
  7884  0001A4  65A4               	goto	u4871
  7885  0001A6  EFD7  F000         	goto	u4870
  7886  0001AA  EFD9  F000         
  7887                           u4871:
  7888  0001AE                     	goto	l6327
  7889  0001AE  EFDD  F000         u4870:
  7890  0001B2                     	goto	l6335
  7891  0001B2  EF05  F001         	
  7892                           l6325:; BSR set to: 0
  7893  0001B6                     
  7894                           	goto	l6335
  7895  0001B6  EF05  F001         	
  7896                           l170:; BSR set to: 0
  7897  0001BA                     
  7898                           	line	128
  7899                           	
  7900                           l6327:; BSR set to: 0
  7901  0001BA                     
  7902                           ;main.c: 127:                                 {;main.c: 128:                            
                                          IHM.printpos(i, j, " ");
  7903                           	lfsr	2,(_IHM)+04h
  7904  0001BA  EE20  F055         	call	u4888
  7905  0001BE  D802               	goto	u4889
  7906  0001C0  EFF3  F000         u4888:
  7907  0001C4                     	push
  7908  0001C4  0005               	movwf	pclath
  7909  0001C6  6EFA               	movf	postinc2,w
  7910  0001C8  50DE               	movwf	tosl
  7911  0001CA  6EFD               	movf	postinc2,w
  7912  0001CC  50DE               	movwf	tosl+1
  7913  0001CE  6EFE               	movf	tblptru,w
  7914  0001D0  50F8               	movwf	tosl+2
  7915  0001D2  6EFF               	movf	pclath,w
  7916  0001D4  50FA               	
  7917                           	movff	(main@j_644),(c:dispLCD@col)
  7918  0001D6  C0A4  F02E         		movlw	low(STR_2)
  7919  0001DA  0ED8               	movwf	((c:dispLCD@str)),c
  7920  0001DC  6E2F               	movlw	high(STR_2)
  7921  0001DE  0E7D               	movwf	((c:dispLCD@str+1)),c
  7922  0001E0  6E30               
  7923                           	movf	((main@i_643))&0ffh,w
  7924  0001E2  51A3               	
  7925                           	return	;indir
  7926  0001E4  0012               	u4889:
  7927  0001E6                     	line	129
  7928                           	
  7929                           l6329:
  7930  0001E6                     ;main.c: 129:                                     delay(10);
  7931                           	movlw	high(0Ah)
  7932  0001E6  0E00               	movwf	((c:delay@t+1)),c
  7933  0001E8  6E28               	movlw	low(0Ah)
  7934  0001EA  0E0A               	movwf	((c:delay@t)),c
  7935  0001EC  6E27               	call	_delay
  7936  0001EE  ECE8  F020         	line	130
  7937                           	
  7938                           l6331:
  7939  0001F2                     ;main.c: 130:                                 }
  7940                           	movlb	0	; () banked
  7941  0001F2  0100               	incf	((main@j_644))&0ffh
  7942  0001F4  2BA4               	
  7943                           l6333:; BSR set to: 0
  7944  0001F6                     
  7945                           		movlw	014h-1
  7946  0001F6  0E13               	cpfsgt	((main@j_644))&0ffh
  7947  0001F8  65A4               	goto	u4891
  7948  0001FA  EF01  F001         	goto	u4890
  7949  0001FE  EF03  F001         
  7950                           u4891:
  7951  000202                     	goto	l6327
  7952  000202  EFDD  F000         u4890:
  7953  000206                     	goto	l6335
  7954  000206  EF05  F001         	
  7955                           l171:; BSR set to: 0
  7956  00020A                     
  7957                           	line	131
  7958                           	
  7959                           l6335:; BSR set to: 0
  7960  00020A                     
  7961                           ;main.c: 131:                             }
  7962                           	incf	((main@i_643))&0ffh
  7963  00020A  2BA3               	
  7964                           l6337:; BSR set to: 0
  7965  00020C                     
  7966                           		movlw	04h-1
  7967  00020C  0E03               	cpfsgt	((main@i_643))&0ffh
  7968  00020E  65A3               	goto	u4901
  7969  000210  EF0C  F001         	goto	u4900
  7970  000214  EF0E  F001         
  7971                           u4901:
  7972  000218                     	goto	l6321
  7973  000218  EFCF  F000         u4900:
  7974  00021C                     	goto	l6339
  7975  00021C  EF10  F001         	
  7976                           l169:; BSR set to: 0
  7977  000220                     
  7978                           	line	132
  7979                           	
  7980                           l6339:; BSR set to: 0
  7981  000220                     
  7982                           ;main.c: 132:                             estado = 1;
  7983                           	movlw	low(01h)
  7984  000220  0E01               	movwf	((main@estado))&0ffh
  7985  000222  6FBB               	line	133
  7986                           ;main.c: 133:                             break;
  7987                           	goto	l7035
  7988  000224  EF65  F00F         	line	135
  7989                           ;main.c: 135:             case 1:
  7990                           	
  7991                           l173:; BSR set to: 0
  7992  000228                     
  7993                           	line	136
  7994                           	
  7995                           l6341:; BSR set to: 0
  7996  000228                     
  7997                           ;main.c: 136:                             IHM.printpos(1, 0, "      SEGGUIT       ");
  7998                           	lfsr	2,(_IHM)+04h
  7999  000228  EE20  F055         	call	u4918
  8000  00022C  D802               	goto	u4919
  8001  00022E  EF2A  F001         u4918:
  8002  000232                     	push
  8003  000232  0005               	movwf	pclath
  8004  000234  6EFA               	movf	postinc2,w
  8005  000236  50DE               	movwf	tosl
  8006  000238  6EFD               	movf	postinc2,w
  8007  00023A  50DE               	movwf	tosl+1
  8008  00023C  6EFE               	movf	tblptru,w
  8009  00023E  50F8               	movwf	tosl+2
  8010  000240  6EFF               	movf	pclath,w
  8011  000242  50FA               	
  8012                           	movlw	low(0)
  8013  000244  0E00               	movwf	((c:dispLCD@col)),c
  8014  000246  6E2E               		movlw	low(STR_3)
  8015  000248  0E04               	movwf	((c:dispLCD@str)),c
  8016  00024A  6E2F               	movlw	high(STR_3)
  8017  00024C  0E7E               	movwf	((c:dispLCD@str+1)),c
  8018  00024E  6E30               
  8019                           	movlw	(01h)&0ffh
  8020  000250  0E01               	
  8021                           	return	;indir
  8022  000252  0012               	u4919:
  8023  000254                     	line	138
  8024                           	
  8025                           l6343:
  8026  000254                     ;main.c: 138:                             char lema[20] = "Mundo ao seu comando";
  8027                           	lfsr	2,(main@F3508)
  8028  000254  EE21  F046         	lfsr	1,(main@lema)
  8029  000258  EE10  F060         	movlw	20-1
  8030  00025C  0E13               u4921:
  8031  00025E                     	movff	plusw2,plusw1
  8032  00025E  CFDB FFE3          	decf	wreg
  8033  000262  06E8               	bc	u4921
  8034  000264  E2FC               
  8035                           	line	139
  8036                           	
  8037                           l6345:
  8038  000266                     ;main.c: 139:                             char i = 0;
  8039                           	movlw	low(0)
  8040  000266  0E00               	movlb	0	; () banked
  8041  000268  0100               	movwf	((main@i_649))&0ffh
  8042  00026A  6F9C               	line	142
  8043                           	
  8044                           l6347:; BSR set to: 0
  8045  00026C                     
  8046                           ;main.c: 140:                             char *ptr;;main.c: 142:                       
                                       for(ptr = lema; *ptr != 0; ptr++)
  8047                           		movlw	low(main@lema)
  8048  00026C  0E60               	movwf	((main@ptr))&0ffh
  8049  00026E  6F9F               	movlw	high(main@lema)
  8050  000270  0E00               	movwf	((main@ptr+1))&0ffh
  8051  000272  6FA0               
  8052                           	goto	l6359
  8053  000274  EF55  F001         	
  8054                           l177:; BSR set to: 0
  8055  000278                     
  8056                           	line	144
  8057                           	
  8058                           l6349:; BSR set to: 0
  8059  000278                     
  8060                           ;main.c: 143:                             {;main.c: 144:                                
                                  dispLCD_lincol( 2, i );
  8061                           	movff	(main@i_649),(c:dispLCD_lincol@col)
  8062  000278  C09C  F029         	movlw	(02h)&0ffh
  8063  00027C  0E02               	
  8064                           	call	_dispLCD_lincol
  8065  00027E  EC54  F01E         	line	145
  8066                           	
  8067                           l6351:
  8068  000282                     ;main.c: 145:                                 dispLCD_dataReg( *ptr );
  8069                           	movff	(main@ptr),fsr2l
  8070  000282  C09F  FFD9         	movff	(main@ptr+1),fsr2h
  8071  000286  C0A0  FFDA         	movf	indf2,w
  8072  00028A  50DF               	
  8073                           	call	_dispLCD_dataReg
  8074  00028C  EC8F  F01F         	line	146
  8075                           	
  8076                           l6353:
  8077  000290                     ;main.c: 146:                                 i++;
  8078                           	movlb	0	; () banked
  8079  000290  0100               	incf	((main@i_649))&0ffh
  8080  000292  2B9C               	line	147
  8081                           	
  8082                           l6355:; BSR set to: 0
  8083  000294                     
  8084                           ;main.c: 147:                                 delay(50);
  8085                           	movlw	high(032h)
  8086  000294  0E00               	movwf	((c:delay@t+1)),c
  8087  000296  6E28               	movlw	low(032h)
  8088  000298  0E32               	movwf	((c:delay@t)),c
  8089  00029A  6E27               	call	_delay	;wreg free
  8090  00029C  ECE8  F020         	line	148
  8091                           	
  8092                           l6357:
  8093  0002A0                     ;main.c: 148:                             }
  8094                           	movlb	0	; () banked
  8095  0002A0  0100               	infsnz	((main@ptr))&0ffh
  8096  0002A2  4B9F               	incf	((main@ptr+1))&0ffh
  8097  0002A4  2BA0               	goto	l6359
  8098  0002A6  EF55  F001         	
  8099                           l176:; BSR set to: 0
  8100  0002AA                     
  8101                           	
  8102                           l6359:; BSR set to: 0
  8103  0002AA                     
  8104                           	movff	(main@ptr),fsr2l
  8105  0002AA  C09F  FFD9         	movff	(main@ptr+1),fsr2h
  8106  0002AE  C0A0  FFDA         	movf	indf2,w
  8107  0002B2  50DF               	btfss	status,2
  8108  0002B4  A4D8               	goto	u4931
  8109  0002B6  EF5F  F001         	goto	u4930
  8110  0002BA  EF61  F001         u4931:
  8111  0002BE                     	goto	l6349
  8112  0002BE  EF3C  F001         u4930:
  8113  0002C2                     	goto	l6361
  8114  0002C2  EF63  F001         	
  8115                           l178:; BSR set to: 0
  8116  0002C6                     
  8117                           	line	150
  8118                           	
  8119                           l6361:; BSR set to: 0
  8120  0002C6                     
  8121                           ;main.c: 150:                             setT1(1500);
  8122                           	movlw	low(05DCh)
  8123  0002C6  0EDC               	movwf	((c:setT1@c)),c
  8124  0002C8  6E2D               	movlw	high(05DCh)
  8125  0002CA  0E05               	movwf	((c:setT1@c+1)),c
  8126  0002CC  6E2E               	movlw	low highword(05DCh)
  8127  0002CE  0E00               	movwf	((c:setT1@c+2)),c
  8128  0002D0  6E2F               	movlw	high highword(05DCh)
  8129  0002D2  0E00               	movwf	((c:setT1@c+3)),c
  8130  0002D4  6E30               	call	_setT1	;wreg free
  8131  0002D6  EC76  F022         	line	151
  8132                           	
  8133                           l6363:
  8134  0002DA                     ;main.c: 151:                             estado = 2;
  8135                           	movlw	low(02h)
  8136  0002DA  0E02               	movlb	0	; () banked
  8137  0002DC  0100               	movwf	((main@estado))&0ffh
  8138  0002DE  6FBB               	line	152
  8139                           ;main.c: 152:                             break;
  8140                           	goto	l7035
  8141  0002E0  EF65  F00F         	line	154
  8142                           ;main.c: 154:              case 2:
  8143                           	
  8144                           l179:; BSR set to: 0
  8145  0002E4                     
  8146                           	line	155
  8147                           	
  8148                           l6365:; BSR set to: 0
  8149  0002E4                     
  8150                           ;main.c: 155:                             if(!statusT1())
  8151                           	call	_statusT1	;wreg free
  8152  0002E4  EC80  F022         	movf	(0+?_statusT1),c,w
  8153  0002E8  5027               iorwf	(1+?_statusT1),c,w
  8154  0002EA  1028               iorwf	(2+?_statusT1),c,w
  8155  0002EC  1029               iorwf	(3+?_statusT1),c,w
  8156  0002EE  102A               	btfss	status,2
  8157  0002F0  A4D8               	goto	u4941
  8158  0002F2  EF7D  F001         	goto	u4940
  8159  0002F6  EF7F  F001         
  8160                           u4941:
  8161  0002FA                     	goto	l7035
  8162  0002FA  EF65  F00F         u4940:
  8163  0002FE                     	line	156
  8164                           	
  8165                           l6367:
  8166  0002FE                     ;main.c: 156:                                 estado = 8;
  8167                           	movlw	low(08h)
  8168  0002FE  0E08               	movlb	0	; () banked
  8169  000300  0100               	movwf	((main@estado))&0ffh
  8170  000302  6FBB               	goto	l7035
  8171  000304  EF65  F00F         	
  8172                           l180:; BSR set to: 0
  8173  000308                     
  8174                           	line	157
  8175                           ;main.c: 157:                             break;
  8176                           	goto	l7035
  8177  000308  EF65  F00F         	line	174
  8178                           ;main.c: 174:              case 8:
  8179                           	
  8180                           l181:; BSR set to: 0
  8181  00030C                     
  8182                           	line	175
  8183                           	
  8184                           l6369:; BSR set to: 0
  8185  00030C                     
  8186                           ;main.c: 175:                             init_atuadores();
  8187                           	call	_init_atuadores	;wreg free
  8188  00030C  ECA3  F022         	line	176
  8189                           	
  8190                           l6371:
  8191  000310                     ;main.c: 176:                             IHM.print("1: INSERIR SEQUENCIA\n"
  8192                           		movlw	low(STR_4)
  8193  000310  0E2F               	movwf	((c:dispLCD_str@str)),c
  8194  000312  6E2E               	movlw	high(STR_4)
  8195  000314  0E7C               	movwf	((c:dispLCD_str@str+1)),c
  8196  000316  6E2F               
  8197                           	lfsr	2,(_IHM)+02h
  8198  000318  EE20  F053         	call	u4958
  8199  00031C  D802               	goto	u4959
  8200  00031E  EF9B  F001         u4958:
  8201  000322                     	push
  8202  000322  0005               	movwf	pclath
  8203  000324  6EFA               	movf	postinc2,w
  8204  000326  50DE               	movwf	tosl
  8205  000328  6EFD               	movf	postinc2,w
  8206  00032A  50DE               	movwf	tosl+1
  8207  00032C  6EFE               	movf	tblptru,w
  8208  00032E  50F8               	movwf	tosl+2
  8209  000330  6EFF               	movf	pclath,w
  8210  000332  50FA               	
  8211                           	return	;indir
  8212  000334  0012               	u4959:
  8213  000336                     	line	180
  8214                           	
  8215                           l6373:
  8216  000336                     ;main.c: 180:                             setT1(1000);
  8217                           	movlw	low(03E8h)
  8218  000336  0EE8               	movwf	((c:setT1@c)),c
  8219  000338  6E2D               	movlw	high(03E8h)
  8220  00033A  0E03               	movwf	((c:setT1@c+1)),c
  8221  00033C  6E2E               	movlw	low highword(03E8h)
  8222  00033E  0E00               	movwf	((c:setT1@c+2)),c
  8223  000340  6E2F               	movlw	high highword(03E8h)
  8224  000342  0E00               	movwf	((c:setT1@c+3)),c
  8225  000344  6E30               	call	_setT1	;wreg free
  8226  000346  EC76  F022         	line	181
  8227                           	
  8228                           l6375:
  8229  00034A                     ;main.c: 181:                             estado = 9;
  8230                           	movlw	low(09h)
  8231  00034A  0E09               	movlb	0	; () banked
  8232  00034C  0100               	movwf	((main@estado))&0ffh
  8233  00034E  6FBB               	line	182
  8234                           ;main.c: 182:                             break;
  8235                           	goto	l7035
  8236  000350  EF65  F00F         	line	184
  8237                           ;main.c: 184:             case 9:
  8238                           	
  8239                           l182:; BSR set to: 0
  8240  000354                     
  8241                           	line	185
  8242                           	
  8243                           l6377:; BSR set to: 0
  8244  000354                     
  8245                           ;main.c: 185:                             if(!statusT1())
  8246                           	call	_statusT1	;wreg free
  8247  000354  EC80  F022         	movf	(0+?_statusT1),c,w
  8248  000358  5027               iorwf	(1+?_statusT1),c,w
  8249  00035A  1028               iorwf	(2+?_statusT1),c,w
  8250  00035C  1029               iorwf	(3+?_statusT1),c,w
  8251  00035E  102A               	btfss	status,2
  8252  000360  A4D8               	goto	u4961
  8253  000362  EFB5  F001         	goto	u4960
  8254  000366  EFB7  F001         
  8255                           u4961:
  8256  00036A                     	goto	l7035
  8257  00036A  EF65  F00F         u4960:
  8258  00036E                     	line	186
  8259                           	
  8260                           l6379:
  8261  00036E                     ;main.c: 186:                                 estado = 71;
  8262                           	movlw	low(047h)
  8263  00036E  0E47               	movlb	0	; () banked
  8264  000370  0100               	movwf	((main@estado))&0ffh
  8265  000372  6FBB               	goto	l7035
  8266  000374  EF65  F00F         	
  8267                           l183:; BSR set to: 0
  8268  000378                     
  8269                           	line	187
  8270                           ;main.c: 187:                             break;
  8271                           	goto	l7035
  8272  000378  EF65  F00F         	line	189
  8273                           ;main.c: 189:             case 71:
  8274                           	
  8275                           l184:; BSR set to: 0
  8276  00037C                     
  8277                           	line	190
  8278                           	
  8279                           l6381:; BSR set to: 0
  8280  00037C                     
  8281                           ;main.c: 190:                             tecla = teclado_borda();
  8282                           	call	_teclado_borda	;wreg free
  8283  00037C  EC25  F020         	movlb	0	; () banked
  8284  000380  0100               	movwf	((main@tecla))&0ffh
  8285  000382  6FBC               	line	191
  8286                           ;main.c: 191:                             switch(tecla)
  8287                           	goto	l6393
  8288  000384  EFD6  F001         	line	193
  8289                           ;main.c: 192:                             {;main.c: 193:                                
                                  case '1': estado = 3; break;
  8290                           	
  8291                           l186:; BSR set to: 0
  8292  000388                     
  8293                           	
  8294                           l6383:; BSR set to: 0
  8295  000388                     
  8296                           	movlw	low(03h)
  8297  000388  0E03               	movwf	((main@estado))&0ffh
  8298  00038A  6FBB               	goto	l7035
  8299  00038C  EF65  F00F         	line	194
  8300                           ;main.c: 194:                                 case '2': estado = 72; break;
  8301                           	
  8302                           l188:; BSR set to: 0
  8303  000390                     
  8304                           	
  8305                           l6385:; BSR set to: 0
  8306  000390                     
  8307                           	movlw	low(048h)
  8308  000390  0E48               	movwf	((main@estado))&0ffh
  8309  000392  6FBB               	goto	l7035
  8310  000394  EF65  F00F         	line	195
  8311                           ;main.c: 195:                                 case '3': estado = 100; break;
  8312                           	
  8313                           l189:; BSR set to: 0
  8314  000398                     
  8315                           	
  8316                           l6387:; BSR set to: 0
  8317  000398                     
  8318                           	movlw	low(064h)
  8319  000398  0E64               	movwf	((main@estado))&0ffh
  8320  00039A  6FBB               	goto	l7035
  8321  00039C  EF65  F00F         	line	196
  8322                           ;main.c: 196:                                 case '4': estado = 80; break;
  8323                           	
  8324                           l190:; BSR set to: 0
  8325  0003A0                     
  8326                           	
  8327                           l6389:; BSR set to: 0
  8328  0003A0                     
  8329                           	movlw	low(050h)
  8330  0003A0  0E50               	movwf	((main@estado))&0ffh
  8331  0003A2  6FBB               	goto	l7035
  8332  0003A4  EF65  F00F         	line	197
  8333                           	
  8334                           l6391:; BSR set to: 0
  8335  0003A8                     
  8336                           ;main.c: 197:                             }
  8337                           	goto	l7035
  8338  0003A8  EF65  F00F         	
  8339                           l185:; BSR set to: 0
  8340  0003AC                     
  8341                           	
  8342                           l6393:; BSR set to: 0
  8343  0003AC                     
  8344                           	movf	((main@tecla))&0ffh,w
  8345  0003AC  51BC               	movwf	(??_main+0+0)&0ffh,c
  8346  0003AE  6E45               	clrf	(??_main+0+0+1)&0ffh,c
  8347  0003B0  6A46               
  8348                           	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  8349                           ; Switch size 1, requested type "space"
  8350                           ; Number of cases is 1, Range of values is 0 to 0
  8351                           ; switch strategies available:
  8352                           ; Name         Instructions Cycles
  8353                           ; simple_byte            4     3 (average)
  8354                           ;	Chosen strategy is simple_byte
  8355                           
  8356                           	movf ??_main+0+1,c,w
  8357  0003B2  5046               	xorlw	0^0	; case 0
  8358  0003B4  0A00               	skipnz
  8359  0003B6  B4D8               	goto	l7939
  8360  0003B8  EFE0  F001         	goto	l7035
  8361  0003BC  EF65  F00F         	
  8362                           l7939:; BSR set to: 0
  8363  0003C0                     
  8364                           ; Switch size 1, requested type "space"
  8365                           ; Number of cases is 4, Range of values is 49 to 52
  8366                           ; switch strategies available:
  8367                           ; Name         Instructions Cycles
  8368                           ; simple_byte           13     7 (average)
  8369                           ;	Chosen strategy is simple_byte
  8370                           
  8371                           	movf ??_main+0+0,c,w
  8372  0003C0  5045               	xorlw	49^0	; case 49
  8373  0003C2  0A31               	skipnz
  8374  0003C4  B4D8               	goto	l6383
  8375  0003C6  EFC4  F001         	xorlw	50^49	; case 50
  8376  0003CA  0A03               	skipnz
  8377  0003CC  B4D8               	goto	l6385
  8378  0003CE  EFC8  F001         	xorlw	51^50	; case 51
  8379  0003D2  0A01               	skipnz
  8380  0003D4  B4D8               	goto	l6387
  8381  0003D6  EFCC  F001         	xorlw	52^51	; case 52
  8382  0003DA  0A07               	skipnz
  8383  0003DC  B4D8               	goto	l6389
  8384  0003DE  EFD0  F001         	goto	l7035
  8385  0003E2  EF65  F00F         
  8386                           	
  8387                           l187:; BSR set to: 0
  8388  0003E6                     
  8389                           	line	198
  8390                           ;main.c: 198:                             break;
  8391                           	goto	l7035
  8392  0003E6  EF65  F00F         	line	200
  8393                           ;main.c: 200:              case 100:
  8394                           	
  8395                           l191:; BSR set to: 0
  8396  0003EA                     
  8397                           	line	202
  8398                           	
  8399                           l6395:; BSR set to: 0
  8400  0003EA                     
  8401                           ;main.c: 202:                             buscar_dado(10, 10, &init_cond);
  8402                           	movlw	low(0Ah)
  8403  0003EA  0E0A               	movwf	((c:buscar_dado@col)),c
  8404  0003EC  6E2D               		movlw	low(main@init_cond)
  8405  0003EE  0EB2               	movwf	((c:buscar_dado@data)),c
  8406  0003F0  6E2E               	movlw	high(main@init_cond)
  8407  0003F2  0E00               	movwf	((c:buscar_dado@data+1)),c
  8408  0003F4  6E2F               
  8409                           	movlw	(0Ah)&0ffh
  8410  0003F6  0E0A               	
  8411                           	call	_buscar_dado
  8412  0003F8  EC74  F021         	line	203
  8413                           	
  8414                           l6397:
  8415  0003FC                     ;main.c: 203:                             manipula_atuadores_init(init_cond);
  8416                           	movlb	0	; () banked
  8417  0003FC  0100               	movf	((main@init_cond))&0ffh,w
  8418  0003FE  51B2               	
  8419                           	call	_manipula_atuadores_init
  8420  000400  EC52  F01D         	line	205
  8421                           	
  8422                           l6399:
  8423  000404                     ;main.c: 205:                             EEPROM.buscar(11, vetor_aux);
  8424                           	lfsr	2,(_EEPROM)+02h
  8425  000404  EE20  F049         	call	u4978
  8426  000408  D802               	goto	u4979
  8427  00040A  EF16  F002         u4978:
  8428  00040E                     	push
  8429  00040E  0005               	movwf	pclath
  8430  000410  6EFA               	movf	postinc2,w
  8431  000412  50DE               	movwf	tosl
  8432  000414  6EFD               	movf	postinc2,w
  8433  000416  50DE               	movwf	tosl+1
  8434  000418  6EFE               	movf	tblptru,w
  8435  00041A  50F8               	movwf	tosl+2
  8436  00041C  6EFF               	movf	pclath,w
  8437  00041E  50FA               	
  8438                           		movlw	low(main@vetor_aux)
  8439  000420  0E76               	movwf	((c:buscar_receita@data)),c
  8440  000422  6E2D               	movlw	high(main@vetor_aux)
  8441  000424  0E00               	movwf	((c:buscar_receita@data+1)),c
  8442  000426  6E2E               
  8443                           	movlw	(0Bh)&0ffh
  8444  000428  0E0B               	
  8445                           	return	;indir
  8446  00042A  0012               	u4979:
  8447  00042C                     	line	206
  8448                           	
  8449                           l6401:
  8450  00042C                     ;main.c: 206:                             pt = vetor_aux;
  8451                           		movlw	low(main@vetor_aux)
  8452  00042C  0E76               	movlb	0	; () banked
  8453  00042E  0100               	movwf	((main@pt))&0ffh
  8454  000430  6F9D               	movlw	high(main@vetor_aux)
  8455  000432  0E00               	movwf	((main@pt+1))&0ffh
  8456  000434  6F9E               
  8457                           	line	208
  8458                           	
  8459                           l6403:; BSR set to: 0
  8460  000436                     
  8461                           ;main.c: 208:                             if(*pt == 0xFF)
  8462                           	movff	(main@pt),fsr2l
  8463  000436  C09D  FFD9         	movff	(main@pt+1),fsr2h
  8464  00043A  C09E  FFDA         	incf	postinc2,w
  8465  00043E  28DE               	btfss	status,2
  8466  000440  A4D8               	goto	u4981
  8467  000442  EF25  F002         	goto	u4980
  8468  000446  EF27  F002         
  8469                           u4981:
  8470  00044A                     	goto	l6409
  8471  00044A  EF45  F002         u4980:
  8472  00044E                     	line	210
  8473                           	
  8474                           l6405:; BSR set to: 0
  8475  00044E                     
  8476                           ;main.c: 209:                             {;main.c: 210:                                
                                  EEPROM.deletar(tecla % 0x30);
  8477                           	lfsr	2,(_EEPROM)+04h
  8478  00044E  EE20  F04B         	call	u4998
  8479  000452  D802               	goto	u4999
  8480  000454  EF40  F002         u4998:
  8481  000458                     	push
  8482  000458  0005               	movwf	pclath
  8483  00045A  6EFA               	movf	postinc2,w
  8484  00045C  50DE               	movwf	tosl
  8485  00045E  6EFD               	movf	postinc2,w
  8486  000460  50DE               	movwf	tosl+1
  8487  000462  6EFE               	movf	tblptru,w
  8488  000464  50F8               	movwf	tosl+2
  8489  000466  6EFF               	movf	pclath,w
  8490  000468  50FA               	
  8491                           	movff	(main@tecla),(c:___awmod@dividend)
  8492  00046A  C0BC  F027         	clrf	((c:___awmod@dividend+1)),c
  8493  00046E  6A28               	movlw	high(030h)
  8494  000470  0E00               	movwf	((c:___awmod@divisor+1)),c
  8495  000472  6E2A               	movlw	low(030h)
  8496  000474  0E30               	movwf	((c:___awmod@divisor)),c
  8497  000476  6E29               	call	___awmod
  8498  000478  EC2E  F019         	movf	(0+?___awmod),c,w
  8499  00047C  5027               	
  8500                           	return	;indir
  8501  00047E  0012               	u4999:
  8502  000480                     	line	211
  8503                           	
  8504                           l6407:
  8505  000480                     ;main.c: 211:                                 vetor_aux[0] = 0;
  8506                           	movlw	low(0)
  8507  000480  0E00               	movlb	0	; () banked
  8508  000482  0100               	movwf	((main@vetor_aux))&0ffh
  8509  000484  6F76               	goto	l6409
  8510  000486  EF45  F002         	line	212
  8511                           ;main.c: 212:                             }
  8512                           	
  8513                           l192:; BSR set to: 0
  8514  00048A                     
  8515                           	line	215
  8516                           	
  8517                           l6409:; BSR set to: 0
  8518  00048A                     
  8519                           ;main.c: 215:                             for(char *ptr = vetor_aux; *ptr != 0; ptr++)
  8520                           		movlw	low(main@vetor_aux)
  8521  00048A  0E76               	movwf	((main@ptr_652))&0ffh
  8522  00048C  6FB6               	movlw	high(main@vetor_aux)
  8523  00048E  0E00               	movwf	((main@ptr_652+1))&0ffh
  8524  000490  6FB7               
  8525                           	goto	l6447
  8526  000492  EF2C  F003         	
  8527                           l194:; BSR set to: 0
  8528  000496                     
  8529                           	line	217
  8530                           	
  8531                           l6411:; BSR set to: 0
  8532  000496                     
  8533                           ;main.c: 216:                             {;main.c: 217:                                
                                  if(*ptr <= 0x64 || *ptr == 0xFE)
  8534                           	movff	(main@ptr_652),fsr2l
  8535  000496  C0B6  FFD9         	movff	(main@ptr_652+1),fsr2h
  8536  00049A  C0B7  FFDA         		movlw	065h-1
  8537  00049E  0E64               	cpfsgt	indf2
  8538  0004A0  64DF               	goto	u5001
  8539  0004A2  EF55  F002         	goto	u5000
  8540  0004A6  EF57  F002         
  8541                           u5001:
  8542  0004AA                     	goto	l6415
  8543  0004AA  EF66  F002         u5000:
  8544  0004AE                     	
  8545                           l6413:; BSR set to: 0
  8546  0004AE                     
  8547                           	movff	(main@ptr_652),fsr2l
  8548  0004AE  C0B6  FFD9         	movff	(main@ptr_652+1),fsr2h
  8549  0004B2  C0B7  FFDA         	movlw	254
  8550  0004B6  0EFE               	xorwf	postinc2,w
  8551  0004B8  18DE               	btfss	status,2
  8552  0004BA  A4D8               	goto	u5011
  8553  0004BC  EF62  F002         	goto	u5010
  8554  0004C0  EF64  F002         
  8555                           u5011:
  8556  0004C4                     	goto	l6419
  8557  0004C4  EF75  F002         u5010:
  8558  0004C8                     	goto	l6415
  8559  0004C8  EF66  F002         	
  8560                           l197:; BSR set to: 0
  8561  0004CC                     
  8562                           	line	219
  8563                           	
  8564                           l6415:; BSR set to: 0
  8565  0004CC                     
  8566                           ;main.c: 218:                                 {;main.c: 219:                            
                                          decodifica(&*ptr);
  8567                           		movff	(main@ptr_652),(c:decodifica@d)
  8568  0004CC  C0B6  F027         	movff	(main@ptr_652+1),(c:decodifica@d+1)
  8569  0004D0  C0B7  F028         
  8570                           	call	_decodifica
  8571  0004D4  ECE7  F014         	line	220
  8572                           	
  8573                           l6417:
  8574  0004D8                     ;main.c: 220:                                     fifo_add_control(*ptr);
  8575                           	movff	(main@ptr_652),fsr2l
  8576  0004D8  C0B6  FFD9         	movff	(main@ptr_652+1),fsr2h
  8577  0004DC  C0B7  FFDA         	movf	indf2,w
  8578  0004E0  50DF               	
  8579                           	call	_fifo_add_control
  8580  0004E2  EC13  F01F         	line	221
  8581                           ;main.c: 221:                                 }
  8582                           	goto	l6443
  8583  0004E6  EF25  F003         	line	222
  8584                           ;main.c: 222:                                 else if (*ptr > 0x64 && *ptr <= 0xDC)
  8585                           	
  8586                           l195:
  8587  0004EA                     	
  8588                           l6419:
  8589  0004EA                     	movff	(main@ptr_652),fsr2l
  8590  0004EA  C0B6  FFD9         	movff	(main@ptr_652+1),fsr2h
  8591  0004EE  C0B7  FFDA         		movlw	065h-1
  8592  0004F2  0E64               	cpfsgt	indf2
  8593  0004F4  64DF               	goto	u5021
  8594  0004F6  EF7F  F002         	goto	u5020
  8595  0004FA  EF81  F002         
  8596                           u5021:
  8597  0004FE                     	goto	l6427
  8598  0004FE  EF9C  F002         u5020:
  8599  000502                     	
  8600                           l6421:
  8601  000502                     	movff	(main@ptr_652),fsr2l
  8602  000502  C0B6  FFD9         	movff	(main@ptr_652+1),fsr2h
  8603  000506  C0B7  FFDA         		movlw	0DDh-0
  8604  00050A  0EDD               	cpfslt	indf2
  8605  00050C  60DF               	goto	u5031
  8606  00050E  EF8B  F002         	goto	u5030
  8607  000512  EF8D  F002         
  8608                           u5031:
  8609  000516                     	goto	l6427
  8610  000516  EF9C  F002         u5030:
  8611  00051A                     	line	224
  8612                           	
  8613                           l6423:
  8614  00051A                     ;main.c: 223:                                 {;main.c: 224:                            
                                          decodifica(&*ptr);
  8615                           		movff	(main@ptr_652),(c:decodifica@d)
  8616  00051A  C0B6  F027         	movff	(main@ptr_652+1),(c:decodifica@d+1)
  8617  00051E  C0B7  F028         
  8618                           	call	_decodifica	;wreg free
  8619  000522  ECE7  F014         	line	225
  8620                           	
  8621                           l6425:
  8622  000526                     ;main.c: 225:                                     fifo_add_tempo(*ptr);
  8623                           	movff	(main@ptr_652),fsr2l
  8624  000526  C0B6  FFD9         	movff	(main@ptr_652+1),fsr2h
  8625  00052A  C0B7  FFDA         	movf	indf2,w
  8626  00052E  50DF               	
  8627                           	call	_fifo_add_tempo
  8628  000530  EC86  F01D         	line	226
  8629                           ;main.c: 226:                                 }
  8630                           	goto	l6443
  8631  000534  EF25  F003         	line	227
  8632                           ;main.c: 227:                                 else
  8633                           	
  8634                           l199:
  8635  000538                     	line	229
  8636                           	
  8637                           l6427:
  8638  000538                     ;main.c: 228:                                 {;main.c: 229:                            
                                          decodifica(&*ptr);
  8639                           		movff	(main@ptr_652),(c:decodifica@d)
  8640  000538  C0B6  F027         	movff	(main@ptr_652+1),(c:decodifica@d+1)
  8641  00053C  C0B7  F028         
  8642                           	call	_decodifica	;wreg free
  8643  000540  ECE7  F014         	line	230
  8644                           ;main.c: 230:                                     switch( *ptr )
  8645                           	goto	l6433
  8646  000544  EFBC  F002         	line	232
  8647                           ;main.c: 231:                                     {;main.c: 232:                        
                                                  case 'A':
  8648                           	
  8649                           l202:
  8650  000548                     	goto	l6429
  8651  000548  EFB2  F002         	line	233
  8652                           ;main.c: 233:                                         case 'B':
  8653                           	
  8654                           l203:
  8655  00054C                     	goto	l6429
  8656  00054C  EFB2  F002         	line	234
  8657                           ;main.c: 234:                                         case 'C':
  8658                           	
  8659                           l204:
  8660  000550                     	goto	l6429
  8661  000550  EFB2  F002         	line	235
  8662                           ;main.c: 235:                                         case 'D':
  8663                           	
  8664                           l205:
  8665  000554                     	goto	l6429
  8666  000554  EFB2  F002         	line	236
  8667                           ;main.c: 236:                                         case 'a':
  8668                           	
  8669                           l206:
  8670  000558                     	goto	l6429
  8671  000558  EFB2  F002         	line	237
  8672                           ;main.c: 237:                                         case 'b':
  8673                           	
  8674                           l207:
  8675  00055C                     	goto	l6429
  8676  00055C  EFB2  F002         	line	238
  8677                           ;main.c: 238:                                         case 'c':
  8678                           	
  8679                           l208:
  8680  000560                     	goto	l6429
  8681  000560  EFB2  F002         	line	239
  8682                           ;main.c: 239:                                         case 'd':
  8683                           	
  8684                           l209:
  8685  000564                     	line	240
  8686                           	
  8687                           l6429:
  8688  000564                     ;main.c: 240:                                                 *ptr &= ~0x20;
  8689                           	movff	(main@ptr_652),fsr2l
  8690  000564  C0B6  FFD9         	movff	(main@ptr_652+1),fsr2h
  8691  000568  C0B7  FFDA         	movlw	0DFh
  8692  00056C  0EDF               	andwf	indf2
  8693  00056E  16DF               	line	241
  8694                           ;main.c: 241:                                                 break;
  8695                           	goto	l6435
  8696  000570  EFED  F002         	line	242
  8697                           	
  8698                           l6431:
  8699  000574                     ;main.c: 242:                                         }
  8700                           	goto	l6435
  8701  000574  EFED  F002         	
  8702                           l201:
  8703  000578                     	
  8704                           l6433:
  8705  000578                     	movff	(main@ptr_652),fsr2l
  8706  000578  C0B6  FFD9         	movff	(main@ptr_652+1),fsr2h
  8707  00057C  C0B7  FFDA         	movf	indf2,w
  8708  000580  50DF               	movwf	(??_main+0+0)&0ffh,c
  8709  000582  6E45               	clrf	(??_main+0+0+1)&0ffh,c
  8710  000584  6A46               
  8711                           	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  8712                           ; Switch size 1, requested type "space"
  8713                           ; Number of cases is 1, Range of values is 0 to 0
  8714                           ; switch strategies available:
  8715                           ; Name         Instructions Cycles
  8716                           ; simple_byte            4     3 (average)
  8717                           ;	Chosen strategy is simple_byte
  8718                           
  8719                           	movf ??_main+0+1,c,w
  8720  000586  5046               	xorlw	0^0	; case 0
  8721  000588  0A00               	skipnz
  8722  00058A  B4D8               	goto	l7941
  8723  00058C  EFCA  F002         	goto	l6435
  8724  000590  EFED  F002         	
  8725                           l7941:
  8726  000594                     ; Switch size 1, requested type "space"
  8727                           ; Number of cases is 8, Range of values is 65 to 100
  8728                           ; switch strategies available:
  8729                           ; Name         Instructions Cycles
  8730                           ; simple_byte           25    13 (average)
  8731                           ;	Chosen strategy is simple_byte
  8732                           
  8733                           	movf ??_main+0+0,c,w
  8734  000594  5045               	xorlw	65^0	; case 65
  8735  000596  0A41               	skipnz
  8736  000598  B4D8               	goto	l6429
  8737  00059A  EFB2  F002         	xorlw	66^65	; case 66
  8738  00059E  0A03               	skipnz
  8739  0005A0  B4D8               	goto	l6429
  8740  0005A2  EFB2  F002         	xorlw	67^66	; case 67
  8741  0005A6  0A01               	skipnz
  8742  0005A8  B4D8               	goto	l6429
  8743  0005AA  EFB2  F002         	xorlw	68^67	; case 68
  8744  0005AE  0A07               	skipnz
  8745  0005B0  B4D8               	goto	l6429
  8746  0005B2  EFB2  F002         	xorlw	97^68	; case 97
  8747  0005B6  0A25               	skipnz
  8748  0005B8  B4D8               	goto	l6429
  8749  0005BA  EFB2  F002         	xorlw	98^97	; case 98
  8750  0005BE  0A03               	skipnz
  8751  0005C0  B4D8               	goto	l6429
  8752  0005C2  EFB2  F002         	xorlw	99^98	; case 99
  8753  0005C6  0A01               	skipnz
  8754  0005C8  B4D8               	goto	l6429
  8755  0005CA  EFB2  F002         	xorlw	100^99	; case 100
  8756  0005CE  0A07               	skipnz
  8757  0005D0  B4D8               	goto	l6429
  8758  0005D2  EFB2  F002         	goto	l6435
  8759  0005D6  EFED  F002         
  8760                           	
  8761                           l210:
  8762  0005DA                     	line	243
  8763                           	
  8764                           l6435:
  8765  0005DA                     ;main.c: 243:                                         alt_atuador(*ptr);
  8766                           	movff	(main@ptr_652),fsr2l
  8767  0005DA  C0B6  FFD9         	movff	(main@ptr_652+1),fsr2h
  8768  0005DE  C0B7  FFDA         	movf	indf2,w
  8769  0005E2  50DF               	
  8770                           	call	_alt_atuador
  8771  0005E4  EC0D  F01B         	line	244
  8772                           ;main.c: 244:                                         fifo_add( ler_atuador(*ptr) ? *ptr
                                  : *ptr|0x20 );
  8773                           	movff	(main@ptr_652),fsr2l
  8774  0005E8  C0B6  FFD9         	movff	(main@ptr_652+1),fsr2h
  8775  0005EC  C0B7  FFDA         	movf	indf2,w
  8776  0005F0  50DF               	
  8777                           	call	_ler_atuador
  8778  0005F2  EC9A  F019         	iorlw	0
  8779  0005F6  0900               	btfss	status,2
  8780  0005F8  A4D8               	goto	u5041
  8781  0005FA  EF01  F003         	goto	u5040
  8782  0005FE  EF03  F003         u5041:
  8783  000602                     	goto	l6439
  8784  000602  EF12  F003         u5040:
  8785  000606                     	
  8786                           l6437:
  8787  000606                     	movff	(main@ptr_652),fsr2l
  8788  000606  C0B6  FFD9         	movff	(main@ptr_652+1),fsr2h
  8789  00060A  C0B7  FFDA         	movf	indf2,w
  8790  00060E  50DF               	movwf	(??_main+0+0)&0ffh,c
  8791  000610  6E45               	clrf	(??_main+0+0+1)&0ffh,c
  8792  000612  6A46               
  8793                           	movlw	020h
  8794  000614  0E20               	iorwf	(??_main+0+0),c,w
  8795  000616  1045               	movlb	0	; () banked
  8796  000618  0100               	movwf	((_main$653))&0ffh
  8797  00061A  6F86               	movf	(??_main+0+1),c,w
  8798  00061C  5046               	movwf	1+((_main$653))&0ffh
  8799  00061E  6F87               	goto	l6441
  8800  000620  EF1E  F003         	
  8801                           l212:; BSR set to: 0
  8802  000624                     
  8803                           	
  8804                           l6439:
  8805  000624                     	movff	(main@ptr_652),fsr2l
  8806  000624  C0B6  FFD9         	movff	(main@ptr_652+1),fsr2h
  8807  000628  C0B7  FFDA         	movf	indf2,w
  8808  00062C  50DF               	movwf	(??_main+0+0)&0ffh,c
  8809  00062E  6E45               	movf	((??_main+0+0)),c,w
  8810  000630  5045               	movlb	0	; () banked
  8811  000632  0100               	movwf	((_main$653))&0ffh
  8812  000634  6F86               	clrf	((_main$653+1))&0ffh
  8813  000636  6B87               	goto	l6441
  8814  000638  EF1E  F003         	
  8815                           l214:; BSR set to: 0
  8816  00063C                     
  8817                           	
  8818                           l6441:; BSR set to: 0
  8819  00063C                     
  8820                           	movf	((_main$653))&0ffh,w
  8821  00063C  5186               	
  8822                           	call	_fifo_add
  8823  00063E  ECBA  F01D         	goto	l6443
  8824  000642  EF25  F003         	line	245
  8825                           ;main.c: 245:                                     }
  8826                           	
  8827                           l200:
  8828  000646                     	goto	l6443
  8829  000646  EF25  F003         	
  8830                           l198:
  8831  00064A                     	line	246
  8832                           	
  8833                           l6443:
  8834  00064A                     ;main.c: 246:                                 fifo_print();
  8835                           	call	_fifo_print	;wreg free
  8836  00064A  ECE9  F010         	line	247
  8837                           	
  8838                           l6445:
  8839  00064E                     ;main.c: 247:                             }
  8840                           	movlb	0	; () banked
  8841  00064E  0100               	infsnz	((main@ptr_652))&0ffh
  8842  000650  4BB6               	incf	((main@ptr_652+1))&0ffh
  8843  000652  2BB7               	goto	l6447
  8844  000654  EF2C  F003         	
  8845                           l193:; BSR set to: 0
  8846  000658                     
  8847                           	
  8848                           l6447:; BSR set to: 0
  8849  000658                     
  8850                           	movff	(main@ptr_652),fsr2l
  8851  000658  C0B6  FFD9         	movff	(main@ptr_652+1),fsr2h
  8852  00065C  C0B7  FFDA         	movf	indf2,w
  8853  000660  50DF               	btfss	status,2
  8854  000662  A4D8               	goto	u5051
  8855  000664  EF36  F003         	goto	u5050
  8856  000668  EF38  F003         u5051:
  8857  00066C                     	goto	l6411
  8858  00066C  EF4B  F002         u5050:
  8859  000670                     	goto	l6449
  8860  000670  EF3A  F003         	
  8861                           l215:; BSR set to: 0
  8862  000674                     
  8863                           	line	249
  8864                           	
  8865                           l6449:; BSR set to: 0
  8866  000674                     
  8867                           ;main.c: 249:                             dispLCD_clr();
  8868                           	call	_dispLCD_clr	;wreg free
  8869  000674  ECBE  F022         	line	250
  8870                           	
  8871                           l6451:
  8872  000678                     ;main.c: 250:                             estado = 16;
  8873                           	movlw	low(010h)
  8874  000678  0E10               	movlb	0	; () banked
  8875  00067A  0100               	movwf	((main@estado))&0ffh
  8876  00067C  6FBB               	line	251
  8877                           ;main.c: 251:                             break;
  8878                           	goto	l7035
  8879  00067E  EF65  F00F         	line	253
  8880                           ;main.c: 253:              case 80:
  8881                           	
  8882                           l216:; BSR set to: 0
  8883  000682                     
  8884                           	line	254
  8885                           	
  8886                           l6453:; BSR set to: 0
  8887  000682                     
  8888                           ;main.c: 254:                             dispLCD_clr();
  8889                           	call	_dispLCD_clr	;wreg free
  8890  000682  ECBE  F022         	line	255
  8891                           	
  8892                           l6455:
  8893  000686                     ;main.c: 255:                             dispLCD(0,0,"1: VERIFICAR MEMORIA");
  8894                           	movlw	low(0)
  8895  000686  0E00               	movwf	((c:dispLCD@col)),c
  8896  000688  6E2E               		movlw	low(STR_5)
  8897  00068A  0E3F               	movwf	((c:dispLCD@str)),c
  8898  00068C  6E2F               	movlw	high(STR_5)
  8899  00068E  0E7F               	movwf	((c:dispLCD@str+1)),c
  8900  000690  6E30               
  8901                           	movlw	(0)&0ffh
  8902  000692  0E00               	
  8903                           	call	_dispLCD
  8904  000694  EC67  F01F         	line	256
  8905                           	
  8906                           l6457:
  8907  000698                     ;main.c: 256:                             dispLCD(1,0,"2: LIMPAR MEMORIA   ");
  8908                           	movlw	low(0)
  8909  000698  0E00               	movwf	((c:dispLCD@col)),c
  8910  00069A  6E2E               		movlw	low(STR_6)
  8911  00069C  0EC1               	movwf	((c:dispLCD@str)),c
  8912  00069E  6E2F               	movlw	high(STR_6)
  8913  0006A0  0E7E               	movwf	((c:dispLCD@str+1)),c
  8914  0006A2  6E30               
  8915                           	movlw	(01h)&0ffh
  8916  0006A4  0E01               	
  8917                           	call	_dispLCD
  8918  0006A6  EC67  F01F         	line	258
  8919                           	
  8920                           l6459:
  8921  0006AA                     ;main.c: 258:                             setT1(1000);
  8922                           	movlw	low(03E8h)
  8923  0006AA  0EE8               	movwf	((c:setT1@c)),c
  8924  0006AC  6E2D               	movlw	high(03E8h)
  8925  0006AE  0E03               	movwf	((c:setT1@c+1)),c
  8926  0006B0  6E2E               	movlw	low highword(03E8h)
  8927  0006B2  0E00               	movwf	((c:setT1@c+2)),c
  8928  0006B4  6E2F               	movlw	high highword(03E8h)
  8929  0006B6  0E00               	movwf	((c:setT1@c+3)),c
  8930  0006B8  6E30               	call	_setT1	;wreg free
  8931  0006BA  EC76  F022         	line	259
  8932                           	
  8933                           l6461:
  8934  0006BE                     ;main.c: 259:                             estado = 81;
  8935                           	movlw	low(051h)
  8936  0006BE  0E51               	movlb	0	; () banked
  8937  0006C0  0100               	movwf	((main@estado))&0ffh
  8938  0006C2  6FBB               	line	260
  8939                           ;main.c: 260:                             break;
  8940                           	goto	l7035
  8941  0006C4  EF65  F00F         	line	262
  8942                           ;main.c: 262:              case 81:
  8943                           	
  8944                           l217:; BSR set to: 0
  8945  0006C8                     
  8946                           	line	263
  8947                           	
  8948                           l6463:; BSR set to: 0
  8949  0006C8                     
  8950                           ;main.c: 263:                             if(!statusT1())
  8951                           	call	_statusT1	;wreg free
  8952  0006C8  EC80  F022         	movf	(0+?_statusT1),c,w
  8953  0006CC  5027               iorwf	(1+?_statusT1),c,w
  8954  0006CE  1028               iorwf	(2+?_statusT1),c,w
  8955  0006D0  1029               iorwf	(3+?_statusT1),c,w
  8956  0006D2  102A               	btfss	status,2
  8957  0006D4  A4D8               	goto	u5061
  8958  0006D6  EF6F  F003         	goto	u5060
  8959  0006DA  EF71  F003         
  8960                           u5061:
  8961  0006DE                     	goto	l7035
  8962  0006DE  EF65  F00F         u5060:
  8963  0006E2                     	line	264
  8964                           	
  8965                           l6465:
  8966  0006E2                     ;main.c: 264:                                 estado = 82;
  8967                           	movlw	low(052h)
  8968  0006E2  0E52               	movlb	0	; () banked
  8969  0006E4  0100               	movwf	((main@estado))&0ffh
  8970  0006E6  6FBB               	goto	l7035
  8971  0006E8  EF65  F00F         	
  8972                           l218:; BSR set to: 0
  8973  0006EC                     
  8974                           	line	265
  8975                           ;main.c: 265:                             break;
  8976                           	goto	l7035
  8977  0006EC  EF65  F00F         	line	267
  8978                           ;main.c: 267:              case 82:
  8979                           	
  8980                           l219:; BSR set to: 0
  8981  0006F0                     
  8982                           	line	268
  8983                           	
  8984                           l6467:; BSR set to: 0
  8985  0006F0                     
  8986                           ;main.c: 268:                             tecla = teclado_borda();
  8987                           	call	_teclado_borda	;wreg free
  8988  0006F0  EC25  F020         	movlb	0	; () banked
  8989  0006F4  0100               	movwf	((main@tecla))&0ffh
  8990  0006F6  6FBC               	line	269
  8991                           ;main.c: 269:                             switch(tecla)
  8992                           	goto	l6477
  8993  0006F8  EF8C  F003         	line	271
  8994                           ;main.c: 270:                             {;main.c: 271:                                
                                  case '1': estado = 83; break;
  8995                           	
  8996                           l221:; BSR set to: 0
  8997  0006FC                     
  8998                           	
  8999                           l6469:; BSR set to: 0
  9000  0006FC                     
  9001                           	movlw	low(053h)
  9002  0006FC  0E53               	movwf	((main@estado))&0ffh
  9003  0006FE  6FBB               	goto	l7035
  9004  000700  EF65  F00F         	line	272
  9005                           ;main.c: 272:                                 case '2': estado = 84; break;
  9006                           	
  9007                           l223:; BSR set to: 0
  9008  000704                     
  9009                           	
  9010                           l6471:; BSR set to: 0
  9011  000704                     
  9012                           	movlw	low(054h)
  9013  000704  0E54               	movwf	((main@estado))&0ffh
  9014  000706  6FBB               	goto	l7035
  9015  000708  EF65  F00F         	line	273
  9016                           ;main.c: 273:                                 case '*': estado = 8; break;
  9017                           	
  9018                           l224:; BSR set to: 0
  9019  00070C                     
  9020                           	
  9021                           l6473:; BSR set to: 0
  9022  00070C                     
  9023                           	movlw	low(08h)
  9024  00070C  0E08               	movwf	((main@estado))&0ffh
  9025  00070E  6FBB               	goto	l7035
  9026  000710  EF65  F00F         	line	274
  9027                           	
  9028                           l6475:; BSR set to: 0
  9029  000714                     
  9030                           ;main.c: 274:                             }
  9031                           	goto	l7035
  9032  000714  EF65  F00F         	
  9033                           l220:; BSR set to: 0
  9034  000718                     
  9035                           	
  9036                           l6477:; BSR set to: 0
  9037  000718                     
  9038                           	movf	((main@tecla))&0ffh,w
  9039  000718  51BC               	movwf	(??_main+0+0)&0ffh,c
  9040  00071A  6E45               	clrf	(??_main+0+0+1)&0ffh,c
  9041  00071C  6A46               
  9042                           	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  9043                           ; Switch size 1, requested type "space"
  9044                           ; Number of cases is 1, Range of values is 0 to 0
  9045                           ; switch strategies available:
  9046                           ; Name         Instructions Cycles
  9047                           ; simple_byte            4     3 (average)
  9048                           ;	Chosen strategy is simple_byte
  9049                           
  9050                           	movf ??_main+0+1,c,w
  9051  00071E  5046               	xorlw	0^0	; case 0
  9052  000720  0A00               	skipnz
  9053  000722  B4D8               	goto	l7943
  9054  000724  EF96  F003         	goto	l7035
  9055  000728  EF65  F00F         	
  9056                           l7943:; BSR set to: 0
  9057  00072C                     
  9058                           ; Switch size 1, requested type "space"
  9059                           ; Number of cases is 3, Range of values is 42 to 50
  9060                           ; switch strategies available:
  9061                           ; Name         Instructions Cycles
  9062                           ; simple_byte           10     6 (average)
  9063                           ;	Chosen strategy is simple_byte
  9064                           
  9065                           	movf ??_main+0+0,c,w
  9066  00072C  5045               	xorlw	42^0	; case 42
  9067  00072E  0A2A               	skipnz
  9068  000730  B4D8               	goto	l6473
  9069  000732  EF86  F003         	xorlw	49^42	; case 49
  9070  000736  0A1B               	skipnz
  9071  000738  B4D8               	goto	l6469
  9072  00073A  EF7E  F003         	xorlw	50^49	; case 50
  9073  00073E  0A03               	skipnz
  9074  000740  B4D8               	goto	l6471
  9075  000742  EF82  F003         	goto	l7035
  9076  000746  EF65  F00F         
  9077                           	
  9078                           l222:; BSR set to: 0
  9079  00074A                     
  9080                           	line	275
  9081                           ;main.c: 275:                             break;
  9082                           	goto	l7035
  9083  00074A  EF65  F00F         	line	277
  9084                           ;main.c: 277:              case 84:
  9085                           	
  9086                           l225:; BSR set to: 0
  9087  00074E                     
  9088                           	line	278
  9089                           	
  9090                           l6479:; BSR set to: 0
  9091  00074E                     
  9092                           ;main.c: 278:                             dispLCD(0, 0, " CERTEZA QUE DESEJA ");
  9093                           	movlw	low(0)
  9094  00074E  0E00               	movwf	((c:dispLCD@col)),c
  9095  000750  6E2E               		movlw	low(STR_7)
  9096  000752  0E15               	movwf	((c:dispLCD@str)),c
  9097  000754  6E2F               	movlw	high(STR_7)
  9098  000756  0E7F               	movwf	((c:dispLCD@str+1)),c
  9099  000758  6E30               
  9100                           	movlw	(0)&0ffh
  9101  00075A  0E00               	
  9102                           	call	_dispLCD
  9103  00075C  EC67  F01F         	line	279
  9104                           ;main.c: 279:                             dispLCD(1, 0, "   DELETAR TODA A   ");
  9105                           	movlw	low(0)
  9106  000760  0E00               	movwf	((c:dispLCD@col)),c
  9107  000762  6E2E               		movlw	low(STR_8)
  9108  000764  0EAC               	movwf	((c:dispLCD@str)),c
  9109  000766  6E2F               	movlw	high(STR_8)
  9110  000768  0E7E               	movwf	((c:dispLCD@str+1)),c
  9111  00076A  6E30               
  9112                           	movlw	(01h)&0ffh
  9113  00076C  0E01               	
  9114                           	call	_dispLCD
  9115  00076E  EC67  F01F         	line	280
  9116                           ;main.c: 280:                             dispLCD(2, 0, "      MEMORIA ?     ");
  9117                           	movlw	low(0)
  9118  000772  0E00               	movwf	((c:dispLCD@col)),c
  9119  000774  6E2E               		movlw	low(STR_9)
  9120  000776  0E58               	movwf	((c:dispLCD@str)),c
  9121  000778  6E2F               	movlw	high(STR_9)
  9122  00077A  0E7E               	movwf	((c:dispLCD@str+1)),c
  9123  00077C  6E30               
  9124                           	movlw	(02h)&0ffh
  9125  00077E  0E02               	
  9126                           	call	_dispLCD
  9127  000780  EC67  F01F         	line	281
  9128                           ;main.c: 281:                             dispLCD(3, 0, "# - SIM      * - NAO");
  9129                           	movlw	low(0)
  9130  000784  0E00               	movwf	((c:dispLCD@col)),c
  9131  000786  6E2E               		movlw	low(STR_10)
  9132  000788  0E4A               	movwf	((c:dispLCD@str)),c
  9133  00078A  6E2F               	movlw	high(STR_10)
  9134  00078C  0E7D               	movwf	((c:dispLCD@str+1)),c
  9135  00078E  6E30               
  9136                           	movlw	(03h)&0ffh
  9137  000790  0E03               	
  9138                           	call	_dispLCD
  9139  000792  EC67  F01F         	line	283
  9140                           	
  9141                           l6481:
  9142  000796                     ;main.c: 283:                             tecla = teclado_borda();
  9143                           	call	_teclado_borda	;wreg free
  9144  000796  EC25  F020         	movlb	0	; () banked
  9145  00079A  0100               	movwf	((main@tecla))&0ffh
  9146  00079C  6FBC               	line	284
  9147                           ;main.c: 284:                             switch(tecla)
  9148                           	goto	l6491
  9149  00079E  EFDE  F003         	line	286
  9150                           ;main.c: 285:                             {;main.c: 286:                                
                                  case '#': estado = 85; break;
  9151                           	
  9152                           l227:; BSR set to: 0
  9153  0007A2                     
  9154                           	
  9155                           l6483:; BSR set to: 0
  9156  0007A2                     
  9157                           	movlw	low(055h)
  9158  0007A2  0E55               	movwf	((main@estado))&0ffh
  9159  0007A4  6FBB               	goto	l7035
  9160  0007A6  EF65  F00F         	line	288
  9161                           ;main.c: 288:                                 case '*': dispLCD_clr(); estado = 80; brea
                                 k;
  9162                           	
  9163                           l229:; BSR set to: 0
  9164  0007AA                     
  9165                           	
  9166                           l6485:; BSR set to: 0
  9167  0007AA                     
  9168                           	call	_dispLCD_clr	;wreg free
  9169  0007AA  ECBE  F022         	
  9170                           l6487:
  9171  0007AE                     	movlw	low(050h)
  9172  0007AE  0E50               	movlb	0	; () banked
  9173  0007B0  0100               	movwf	((main@estado))&0ffh
  9174  0007B2  6FBB               	goto	l7035
  9175  0007B4  EF65  F00F         	line	289
  9176                           	
  9177                           l6489:; BSR set to: 0
  9178  0007B8                     
  9179                           ;main.c: 289:                             }
  9180                           	goto	l7035
  9181  0007B8  EF65  F00F         	
  9182                           l226:; BSR set to: 0
  9183  0007BC                     
  9184                           	
  9185                           l6491:; BSR set to: 0
  9186  0007BC                     
  9187                           	movf	((main@tecla))&0ffh,w
  9188  0007BC  51BC               	movwf	(??_main+0+0)&0ffh,c
  9189  0007BE  6E45               	clrf	(??_main+0+0+1)&0ffh,c
  9190  0007C0  6A46               
  9191                           	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  9192                           ; Switch size 1, requested type "space"
  9193                           ; Number of cases is 1, Range of values is 0 to 0
  9194                           ; switch strategies available:
  9195                           ; Name         Instructions Cycles
  9196                           ; simple_byte            4     3 (average)
  9197                           ;	Chosen strategy is simple_byte
  9198                           
  9199                           	movf ??_main+0+1,c,w
  9200  0007C2  5046               	xorlw	0^0	; case 0
  9201  0007C4  0A00               	skipnz
  9202  0007C6  B4D8               	goto	l7945
  9203  0007C8  EFE8  F003         	goto	l7035
  9204  0007CC  EF65  F00F         	
  9205                           l7945:; BSR set to: 0
  9206  0007D0                     
  9207                           ; Switch size 1, requested type "space"
  9208                           ; Number of cases is 2, Range of values is 35 to 42
  9209                           ; switch strategies available:
  9210                           ; Name         Instructions Cycles
  9211                           ; simple_byte            7     4 (average)
  9212                           ;	Chosen strategy is simple_byte
  9213                           
  9214                           	movf ??_main+0+0,c,w
  9215  0007D0  5045               	xorlw	35^0	; case 35
  9216  0007D2  0A23               	skipnz
  9217  0007D4  B4D8               	goto	l6483
  9218  0007D6  EFD1  F003         	xorlw	42^35	; case 42
  9219  0007DA  0A09               	skipnz
  9220  0007DC  B4D8               	goto	l6485
  9221  0007DE  EFD5  F003         	goto	l7035
  9222  0007E2  EF65  F00F         
  9223                           	
  9224                           l228:; BSR set to: 0
  9225  0007E6                     
  9226                           	line	290
  9227                           ;main.c: 290:                             break;
  9228                           	goto	l7035
  9229  0007E6  EF65  F00F         	line	292
  9230                           ;main.c: 292:              case 85:
  9231                           	
  9232                           l230:; BSR set to: 0
  9233  0007EA                     
  9234                           	line	293
  9235                           	
  9236                           l6493:; BSR set to: 0
  9237  0007EA                     
  9238                           ;main.c: 293:                             EEPROM.formatar();
  9239                           	lfsr	2,(_EEPROM)+08h
  9240  0007EA  EE20  F04F         	call	u5078
  9241  0007EE  D802               	goto	u5079
  9242  0007F0  EF04  F004         u5078:
  9243  0007F4                     	push
  9244  0007F4  0005               	movwf	pclath
  9245  0007F6  6EFA               	movf	postinc2,w
  9246  0007F8  50DE               	movwf	tosl
  9247  0007FA  6EFD               	movf	postinc2,w
  9248  0007FC  50DE               	movwf	tosl+1
  9249  0007FE  6EFE               	movf	tblptru,w
  9250  000800  50F8               	movwf	tosl+2
  9251  000802  6EFF               	movf	pclath,w
  9252  000804  50FA               	
  9253                           	return	;indir
  9254  000806  0012               	u5079:
  9255  000808                     	line	294
  9256                           	
  9257                           l6495:
  9258  000808                     ;main.c: 294:                             dispLCD_clr();
  9259                           	call	_dispLCD_clr	;wreg free
  9260  000808  ECBE  F022         	line	295
  9261                           	
  9262                           l6497:
  9263  00080C                     ;main.c: 295:                             for(char i = 0; i <= 3; i++)
  9264                           	movlw	low(0)
  9265  00080C  0E00               	movlb	0	; () banked
  9266  00080E  0100               	movwf	((main@i_661))&0ffh
  9267  000810  6FA5               	
  9268                           l6499:; BSR set to: 0
  9269  000812                     
  9270                           		movlw	04h-1
  9271  000812  0E03               	cpfsgt	((main@i_661))&0ffh
  9272  000814  65A5               	goto	u5081
  9273  000816  EF0F  F004         	goto	u5080
  9274  00081A  EF11  F004         
  9275                           u5081:
  9276  00081E                     	goto	l6503
  9277  00081E  EF15  F004         u5080:
  9278  000822                     	goto	l6521
  9279  000822  EF49  F004         	
  9280                           l6501:; BSR set to: 0
  9281  000826                     
  9282                           	goto	l6521
  9283  000826  EF49  F004         	
  9284                           l231:; BSR set to: 0
  9285  00082A                     
  9286                           	line	297
  9287                           	
  9288                           l6503:; BSR set to: 0
  9289  00082A                     
  9290                           ;main.c: 296:                             {;main.c: 297:                                
                                  for(char j = 0; j <= 19; j++)
  9291                           	movlw	low(0)
  9292  00082A  0E00               	movwf	((main@j_662))&0ffh
  9293  00082C  6FA6               	
  9294                           l6505:; BSR set to: 0
  9295  00082E                     
  9296                           		movlw	014h-1
  9297  00082E  0E13               	cpfsgt	((main@j_662))&0ffh
  9298  000830  65A6               	goto	u5091
  9299  000832  EF1D  F004         	goto	u5090
  9300  000836  EF1F  F004         
  9301                           u5091:
  9302  00083A                     	goto	l6509
  9303  00083A  EF23  F004         u5090:
  9304  00083E                     	goto	l6517
  9305  00083E  EF3E  F004         	
  9306                           l6507:; BSR set to: 0
  9307  000842                     
  9308                           	goto	l6517
  9309  000842  EF3E  F004         	
  9310                           l233:; BSR set to: 0
  9311  000846                     
  9312                           	line	299
  9313                           	
  9314                           l6509:; BSR set to: 0
  9315  000846                     
  9316                           ;main.c: 298:                                 {;main.c: 299:                            
                                          dispLCD(i, j, "\377");
  9317                           	movff	(main@j_662),(c:dispLCD@col)
  9318  000846  C0A6  F02E         		movlw	low(STR_11)
  9319  00084A  0EFC               	movwf	((c:dispLCD@str)),c
  9320  00084C  6E2F               	movlw	high(STR_11)
  9321  00084E  0E7F               	movwf	((c:dispLCD@str+1)),c
  9322  000850  6E30               
  9323                           	movf	((main@i_661))&0ffh,w
  9324  000852  51A5               	
  9325                           	call	_dispLCD
  9326  000854  EC67  F01F         	line	300
  9327                           	
  9328                           l6511:
  9329  000858                     ;main.c: 300:                                     delay(10);
  9330                           	movlw	high(0Ah)
  9331  000858  0E00               	movwf	((c:delay@t+1)),c
  9332  00085A  6E28               	movlw	low(0Ah)
  9333  00085C  0E0A               	movwf	((c:delay@t)),c
  9334  00085E  6E27               	call	_delay	;wreg free
  9335  000860  ECE8  F020         	line	301
  9336                           	
  9337                           l6513:
  9338  000864                     ;main.c: 301:                                 }
  9339                           	movlb	0	; () banked
  9340  000864  0100               	incf	((main@j_662))&0ffh
  9341  000866  2BA6               	
  9342                           l6515:; BSR set to: 0
  9343  000868                     
  9344                           		movlw	014h-1
  9345  000868  0E13               	cpfsgt	((main@j_662))&0ffh
  9346  00086A  65A6               	goto	u5101
  9347  00086C  EF3A  F004         	goto	u5100
  9348  000870  EF3C  F004         
  9349                           u5101:
  9350  000874                     	goto	l6509
  9351  000874  EF23  F004         u5100:
  9352  000878                     	goto	l6517
  9353  000878  EF3E  F004         	
  9354                           l234:; BSR set to: 0
  9355  00087C                     
  9356                           	line	302
  9357                           	
  9358                           l6517:; BSR set to: 0
  9359  00087C                     
  9360                           ;main.c: 302:                             }
  9361                           	incf	((main@i_661))&0ffh
  9362  00087C  2BA5               	
  9363                           l6519:; BSR set to: 0
  9364  00087E                     
  9365                           		movlw	04h-1
  9366  00087E  0E03               	cpfsgt	((main@i_661))&0ffh
  9367  000880  65A5               	goto	u5111
  9368  000882  EF45  F004         	goto	u5110
  9369  000886  EF47  F004         
  9370                           u5111:
  9371  00088A                     	goto	l6503
  9372  00088A  EF15  F004         u5110:
  9373  00088E                     	goto	l6521
  9374  00088E  EF49  F004         	
  9375                           l232:; BSR set to: 0
  9376  000892                     
  9377                           	line	304
  9378                           	
  9379                           l6521:; BSR set to: 0
  9380  000892                     
  9381                           ;main.c: 304:                             for(char i = 0; i <= 3; i++)
  9382                           	movlw	low(0)
  9383  000892  0E00               	movwf	((main@i_664))&0ffh
  9384  000894  6FA7               	
  9385                           l6523:; BSR set to: 0
  9386  000896                     
  9387                           		movlw	04h-1
  9388  000896  0E03               	cpfsgt	((main@i_664))&0ffh
  9389  000898  65A7               	goto	u5121
  9390  00089A  EF51  F004         	goto	u5120
  9391  00089E  EF53  F004         
  9392                           u5121:
  9393  0008A2                     	goto	l6527
  9394  0008A2  EF57  F004         u5120:
  9395  0008A6                     	goto	l6545
  9396  0008A6  EF8B  F004         	
  9397                           l6525:; BSR set to: 0
  9398  0008AA                     
  9399                           	goto	l6545
  9400  0008AA  EF8B  F004         	
  9401                           l235:; BSR set to: 0
  9402  0008AE                     
  9403                           	line	306
  9404                           	
  9405                           l6527:; BSR set to: 0
  9406  0008AE                     
  9407                           ;main.c: 305:                             {;main.c: 306:                                
                                  for(char j = 0; j <= 19; j++)
  9408                           	movlw	low(0)
  9409  0008AE  0E00               	movwf	((main@j_665))&0ffh
  9410  0008B0  6FA8               	
  9411                           l6529:; BSR set to: 0
  9412  0008B2                     
  9413                           		movlw	014h-1
  9414  0008B2  0E13               	cpfsgt	((main@j_665))&0ffh
  9415  0008B4  65A8               	goto	u5131
  9416  0008B6  EF5F  F004         	goto	u5130
  9417  0008BA  EF61  F004         
  9418                           u5131:
  9419  0008BE                     	goto	l6533
  9420  0008BE  EF65  F004         u5130:
  9421  0008C2                     	goto	l6541
  9422  0008C2  EF80  F004         	
  9423                           l6531:; BSR set to: 0
  9424  0008C6                     
  9425                           	goto	l6541
  9426  0008C6  EF80  F004         	
  9427                           l237:; BSR set to: 0
  9428  0008CA                     
  9429                           	line	308
  9430                           	
  9431                           l6533:; BSR set to: 0
  9432  0008CA                     
  9433                           ;main.c: 307:                                 {;main.c: 308:                            
                                          dispLCD(i, j, " ");
  9434                           	movff	(main@j_665),(c:dispLCD@col)
  9435  0008CA  C0A8  F02E         		movlw	low(STR_12)
  9436  0008CE  0ED8               	movwf	((c:dispLCD@str)),c
  9437  0008D0  6E2F               	movlw	high(STR_12)
  9438  0008D2  0E7D               	movwf	((c:dispLCD@str+1)),c
  9439  0008D4  6E30               
  9440                           	movf	((main@i_664))&0ffh,w
  9441  0008D6  51A7               	
  9442                           	call	_dispLCD
  9443  0008D8  EC67  F01F         	line	309
  9444                           	
  9445                           l6535:
  9446  0008DC                     ;main.c: 309:                                     delay(10);
  9447                           	movlw	high(0Ah)
  9448  0008DC  0E00               	movwf	((c:delay@t+1)),c
  9449  0008DE  6E28               	movlw	low(0Ah)
  9450  0008E0  0E0A               	movwf	((c:delay@t)),c
  9451  0008E2  6E27               	call	_delay	;wreg free
  9452  0008E4  ECE8  F020         	line	310
  9453                           	
  9454                           l6537:
  9455  0008E8                     ;main.c: 310:                                 }
  9456                           	movlb	0	; () banked
  9457  0008E8  0100               	incf	((main@j_665))&0ffh
  9458  0008EA  2BA8               	
  9459                           l6539:; BSR set to: 0
  9460  0008EC                     
  9461                           		movlw	014h-1
  9462  0008EC  0E13               	cpfsgt	((main@j_665))&0ffh
  9463  0008EE  65A8               	goto	u5141
  9464  0008F0  EF7C  F004         	goto	u5140
  9465  0008F4  EF7E  F004         
  9466                           u5141:
  9467  0008F8                     	goto	l6533
  9468  0008F8  EF65  F004         u5140:
  9469  0008FC                     	goto	l6541
  9470  0008FC  EF80  F004         	
  9471                           l238:; BSR set to: 0
  9472  000900                     
  9473                           	line	311
  9474                           	
  9475                           l6541:; BSR set to: 0
  9476  000900                     
  9477                           ;main.c: 311:                             }
  9478                           	incf	((main@i_664))&0ffh
  9479  000900  2BA7               	
  9480                           l6543:; BSR set to: 0
  9481  000902                     
  9482                           		movlw	04h-1
  9483  000902  0E03               	cpfsgt	((main@i_664))&0ffh
  9484  000904  65A7               	goto	u5151
  9485  000906  EF87  F004         	goto	u5150
  9486  00090A  EF89  F004         
  9487                           u5151:
  9488  00090E                     	goto	l6527
  9489  00090E  EF57  F004         u5150:
  9490  000912                     	goto	l6545
  9491  000912  EF8B  F004         	
  9492                           l236:; BSR set to: 0
  9493  000916                     
  9494                           	line	312
  9495                           	
  9496                           l6545:; BSR set to: 0
  9497  000916                     
  9498                           ;main.c: 312:                             dispLCD(1, 0, "       DELETED      ");
  9499                           	movlw	low(0)
  9500  000916  0E00               	movwf	((c:dispLCD@col)),c
  9501  000918  6E2E               		movlw	low(STR_13)
  9502  00091A  0E2E               	movwf	((c:dispLCD@str)),c
  9503  00091C  6E2F               	movlw	high(STR_13)
  9504  00091E  0E7E               	movwf	((c:dispLCD@str+1)),c
  9505  000920  6E30               
  9506                           	movlw	(01h)&0ffh
  9507  000922  0E01               	
  9508                           	call	_dispLCD
  9509  000924  EC67  F01F         	line	313
  9510                           ;main.c: 313:                             dispLCD(2, 0, "        MEMORY      ");
  9511                           	movlw	low(0)
  9512  000928  0E00               	movwf	((c:dispLCD@col)),c
  9513  00092A  6E2E               		movlw	low(STR_14)
  9514  00092C  0E43               	movwf	((c:dispLCD@str)),c
  9515  00092E  6E2F               	movlw	high(STR_14)
  9516  000930  0E7E               	movwf	((c:dispLCD@str+1)),c
  9517  000932  6E30               
  9518                           	movlw	(02h)&0ffh
  9519  000934  0E02               	
  9520                           	call	_dispLCD
  9521  000936  EC67  F01F         	line	315
  9522                           	
  9523                           l6547:
  9524  00093A                     ;main.c: 315:                             setT1(1000);
  9525                           	movlw	low(03E8h)
  9526  00093A  0EE8               	movwf	((c:setT1@c)),c
  9527  00093C  6E2D               	movlw	high(03E8h)
  9528  00093E  0E03               	movwf	((c:setT1@c+1)),c
  9529  000940  6E2E               	movlw	low highword(03E8h)
  9530  000942  0E00               	movwf	((c:setT1@c+2)),c
  9531  000944  6E2F               	movlw	high highword(03E8h)
  9532  000946  0E00               	movwf	((c:setT1@c+3)),c
  9533  000948  6E30               	call	_setT1	;wreg free
  9534  00094A  EC76  F022         	line	316
  9535                           	
  9536                           l6549:
  9537  00094E                     ;main.c: 316:                             estado = 86;
  9538                           	movlw	low(056h)
  9539  00094E  0E56               	movlb	0	; () banked
  9540  000950  0100               	movwf	((main@estado))&0ffh
  9541  000952  6FBB               	line	317
  9542                           ;main.c: 317:                             break;
  9543                           	goto	l7035
  9544  000954  EF65  F00F         	line	319
  9545                           ;main.c: 319:              case 86:
  9546                           	
  9547                           l239:; BSR set to: 0
  9548  000958                     
  9549                           	line	320
  9550                           	
  9551                           l6551:; BSR set to: 0
  9552  000958                     
  9553                           ;main.c: 320:                             if(!statusT1())
  9554                           	call	_statusT1	;wreg free
  9555  000958  EC80  F022         	movf	(0+?_statusT1),c,w
  9556  00095C  5027               iorwf	(1+?_statusT1),c,w
  9557  00095E  1028               iorwf	(2+?_statusT1),c,w
  9558  000960  1029               iorwf	(3+?_statusT1),c,w
  9559  000962  102A               	btfss	status,2
  9560  000964  A4D8               	goto	u5161
  9561  000966  EFB7  F004         	goto	u5160
  9562  00096A  EFB9  F004         
  9563                           u5161:
  9564  00096E                     	goto	l7035
  9565  00096E  EF65  F00F         u5160:
  9566  000972                     	line	321
  9567                           	
  9568                           l6553:
  9569  000972                     ;main.c: 321:                                 estado = 80;
  9570                           	movlw	low(050h)
  9571  000972  0E50               	movlb	0	; () banked
  9572  000974  0100               	movwf	((main@estado))&0ffh
  9573  000976  6FBB               	goto	l7035
  9574  000978  EF65  F00F         	
  9575                           l240:; BSR set to: 0
  9576  00097C                     
  9577                           	line	322
  9578                           ;main.c: 322:                             break;
  9579                           	goto	l7035
  9580  00097C  EF65  F00F         	line	324
  9581                           ;main.c: 324:              case 72:
  9582                           	
  9583                           l241:; BSR set to: 0
  9584  000980                     
  9585                           	line	325
  9586                           	
  9587                           l6555:; BSR set to: 0
  9588  000980                     
  9589                           ;main.c: 325:                             IHM.clr();
  9590                           	lfsr	2,(_IHM)+08h
  9591  000980  EE20  F059         	call	u5178
  9592  000984  D802               	goto	u5179
  9593  000986  EFCF  F004         u5178:
  9594  00098A                     	push
  9595  00098A  0005               	movwf	pclath
  9596  00098C  6EFA               	movf	postinc2,w
  9597  00098E  50DE               	movwf	tosl
  9598  000990  6EFD               	movf	postinc2,w
  9599  000992  50DE               	movwf	tosl+1
  9600  000994  6EFE               	movf	tblptru,w
  9601  000996  50F8               	movwf	tosl+2
  9602  000998  6EFF               	movf	pclath,w
  9603  00099A  50FA               	
  9604                           	return	;indir
  9605  00099C  0012               	u5179:
  9606  00099E                     	line	326
  9607                           	
  9608                           l6557:
  9609  00099E                     ;main.c: 326:                             IHM.print(" ESCOLHA A MEMORIA \n"
  9610                           		movlw	low(STR_15)
  9611  00099E  0E82               	movwf	((c:dispLCD_str@str)),c
  9612  0009A0  6E2E               	movlw	high(STR_15)
  9613  0009A2  0E7C               	movwf	((c:dispLCD_str@str+1)),c
  9614  0009A4  6E2F               
  9615                           	lfsr	2,(_IHM)+02h
  9616  0009A6  EE20  F053         	call	u5188
  9617  0009AA  D802               	goto	u5189
  9618  0009AC  EFE2  F004         u5188:
  9619  0009B0                     	push
  9620  0009B0  0005               	movwf	pclath
  9621  0009B2  6EFA               	movf	postinc2,w
  9622  0009B4  50DE               	movwf	tosl
  9623  0009B6  6EFD               	movf	postinc2,w
  9624  0009B8  50DE               	movwf	tosl+1
  9625  0009BA  6EFE               	movf	tblptru,w
  9626  0009BC  50F8               	movwf	tosl+2
  9627  0009BE  6EFF               	movf	pclath,w
  9628  0009C0  50FA               	
  9629                           	return	;indir
  9630  0009C2  0012               	u5189:
  9631  0009C4                     	line	330
  9632                           	
  9633                           l6559:
  9634  0009C4                     ;main.c: 330:                             estado = 73;
  9635                           	movlw	low(049h)
  9636  0009C4  0E49               	movlb	0	; () banked
  9637  0009C6  0100               	movwf	((main@estado))&0ffh
  9638  0009C8  6FBB               	goto	l6561
  9639  0009CA  EFE7  F004         	line	332
  9640                           ;main.c: 332:              case 73:
  9641                           	
  9642                           l242:; BSR set to: 0
  9643  0009CE                     
  9644                           	line	333
  9645                           	
  9646                           l6561:; BSR set to: 0
  9647  0009CE                     
  9648                           ;main.c: 333:                             tecla = teclado_borda();
  9649                           	call	_teclado_borda	;wreg free
  9650  0009CE  EC25  F020         	movlb	0	; () banked
  9651  0009D2  0100               	movwf	((main@tecla))&0ffh
  9652  0009D4  6FBC               	line	334
  9653                           ;main.c: 334:                             switch(tecla)
  9654                           	goto	l6625
  9655  0009D6  EF63  F006         	line	336
  9656                           ;main.c: 335:                             {;main.c: 336:                                
                                  case '0':
  9657                           	
  9658                           l244:; BSR set to: 0
  9659  0009DA                     
  9660                           	goto	l6563
  9661  0009DA  EFFF  F004         	line	337
  9662                           ;main.c: 337:                                 case '1':
  9663                           	
  9664                           l245:; BSR set to: 0
  9665  0009DE                     
  9666                           	goto	l6563
  9667  0009DE  EFFF  F004         	line	338
  9668                           ;main.c: 338:                                 case '2':
  9669                           	
  9670                           l246:; BSR set to: 0
  9671  0009E2                     
  9672                           	goto	l6563
  9673  0009E2  EFFF  F004         	line	339
  9674                           ;main.c: 339:                                 case '3':
  9675                           	
  9676                           l247:; BSR set to: 0
  9677  0009E6                     
  9678                           	goto	l6563
  9679  0009E6  EFFF  F004         	line	340
  9680                           ;main.c: 340:                                 case '4':
  9681                           	
  9682                           l248:; BSR set to: 0
  9683  0009EA                     
  9684                           	goto	l6563
  9685  0009EA  EFFF  F004         	line	341
  9686                           ;main.c: 341:                                 case '5':
  9687                           	
  9688                           l249:; BSR set to: 0
  9689  0009EE                     
  9690                           	goto	l6563
  9691  0009EE  EFFF  F004         	line	342
  9692                           ;main.c: 342:                                 case '6':
  9693                           	
  9694                           l250:; BSR set to: 0
  9695  0009F2                     
  9696                           	goto	l6563
  9697  0009F2  EFFF  F004         	line	343
  9698                           ;main.c: 343:                                 case '7':
  9699                           	
  9700                           l251:; BSR set to: 0
  9701  0009F6                     
  9702                           	goto	l6563
  9703  0009F6  EFFF  F004         	line	344
  9704                           ;main.c: 344:                                 case '8':
  9705                           	
  9706                           l252:; BSR set to: 0
  9707  0009FA                     
  9708                           	goto	l6563
  9709  0009FA  EFFF  F004         	line	345
  9710                           ;main.c: 345:                                 case '9':
  9711                           	
  9712                           l253:; BSR set to: 0
  9713  0009FE                     
  9714                           	line	346
  9715                           	
  9716                           l6563:; BSR set to: 0
  9717  0009FE                     
  9718                           ;main.c: 346:                                            buscar_dado(10, tecla % 0x30, &
                                 init_cond);
  9719                           	movff	(main@tecla),(c:___awmod@dividend)
  9720  0009FE  C0BC  F027         	clrf	((c:___awmod@dividend+1)),c
  9721  000A02  6A28               	movlw	high(030h)
  9722  000A04  0E00               	movwf	((c:___awmod@divisor+1)),c
  9723  000A06  6E2A               	movlw	low(030h)
  9724  000A08  0E30               	movwf	((c:___awmod@divisor)),c
  9725  000A0A  6E29               	call	___awmod	;wreg free
  9726  000A0C  EC2E  F019         	movf	(0+?___awmod),c,w
  9727  000A10  5027               	movwf	((c:buscar_dado@col)),c
  9728  000A12  6E2D               		movlw	low(main@init_cond)
  9729  000A14  0EB2               	movwf	((c:buscar_dado@data)),c
  9730  000A16  6E2E               	movlw	high(main@init_cond)
  9731  000A18  0E00               	movwf	((c:buscar_dado@data+1)),c
  9732  000A1A  6E2F               
  9733                           	movlw	(0Ah)&0ffh
  9734  000A1C  0E0A               	
  9735                           	call	_buscar_dado
  9736  000A1E  EC74  F021         	line	347
  9737                           	
  9738                           l6565:
  9739  000A22                     ;main.c: 347:                                            manipula_atuadores_init(init_co
                                 nd);
  9740                           	movlb	0	; () banked
  9741  000A22  0100               	movf	((main@init_cond))&0ffh,w
  9742  000A24  51B2               	
  9743                           	call	_manipula_atuadores_init
  9744  000A26  EC52  F01D         	line	349
  9745                           	
  9746                           l6567:
  9747  000A2A                     ;main.c: 349:                                            EEPROM.buscar(tecla % 0x30, vet
                                 or_aux);
  9748                           	lfsr	2,(_EEPROM)+02h
  9749  000A2A  EE20  F049         	call	u5198
  9750  000A2E  D802               	goto	u5199
  9751  000A30  EF32  F005         u5198:
  9752  000A34                     	push
  9753  000A34  0005               	movwf	pclath
  9754  000A36  6EFA               	movf	postinc2,w
  9755  000A38  50DE               	movwf	tosl
  9756  000A3A  6EFD               	movf	postinc2,w
  9757  000A3C  50DE               	movwf	tosl+1
  9758  000A3E  6EFE               	movf	tblptru,w
  9759  000A40  50F8               	movwf	tosl+2
  9760  000A42  6EFF               	movf	pclath,w
  9761  000A44  50FA               	
  9762                           		movlw	low(main@vetor_aux)
  9763  000A46  0E76               	movwf	((c:buscar_receita@data)),c
  9764  000A48  6E2D               	movlw	high(main@vetor_aux)
  9765  000A4A  0E00               	movwf	((c:buscar_receita@data+1)),c
  9766  000A4C  6E2E               
  9767                           	movff	(main@tecla),(c:___awmod@dividend)
  9768  000A4E  C0BC  F027         	clrf	((c:___awmod@dividend+1)),c
  9769  000A52  6A28               	movlw	high(030h)
  9770  000A54  0E00               	movwf	((c:___awmod@divisor+1)),c
  9771  000A56  6E2A               	movlw	low(030h)
  9772  000A58  0E30               	movwf	((c:___awmod@divisor)),c
  9773  000A5A  6E29               	call	___awmod	;wreg free
  9774  000A5C  EC2E  F019         	movf	(0+?___awmod),c,w
  9775  000A60  5027               	
  9776                           	return	;indir
  9777  000A62  0012               	u5199:
  9778  000A64                     	line	350
  9779                           	
  9780                           l6569:
  9781  000A64                     ;main.c: 350:                                            pt = vetor_aux;
  9782                           		movlw	low(main@vetor_aux)
  9783  000A64  0E76               	movlb	0	; () banked
  9784  000A66  0100               	movwf	((main@pt))&0ffh
  9785  000A68  6F9D               	movlw	high(main@vetor_aux)
  9786  000A6A  0E00               	movwf	((main@pt+1))&0ffh
  9787  000A6C  6F9E               
  9788                           	line	352
  9789                           	
  9790                           l6571:; BSR set to: 0
  9791  000A6E                     
  9792                           ;main.c: 352:                                            if(*pt == 0xFF)
  9793                           	movff	(main@pt),fsr2l
  9794  000A6E  C09D  FFD9         	movff	(main@pt+1),fsr2h
  9795  000A72  C09E  FFDA         	incf	postinc2,w
  9796  000A76  28DE               	btfss	status,2
  9797  000A78  A4D8               	goto	u5201
  9798  000A7A  EF41  F005         	goto	u5200
  9799  000A7E  EF43  F005         
  9800                           u5201:
  9801  000A82                     	goto	l6577
  9802  000A82  EF61  F005         u5200:
  9803  000A86                     	line	354
  9804                           	
  9805                           l6573:; BSR set to: 0
  9806  000A86                     
  9807                           ;main.c: 353:                                            {;main.c: 354:                 
                                                                EEPROM.deletar(tecla % 0x30);
  9808                           	lfsr	2,(_EEPROM)+04h
  9809  000A86  EE20  F04B         	call	u5218
  9810  000A8A  D802               	goto	u5219
  9811  000A8C  EF5C  F005         u5218:
  9812  000A90                     	push
  9813  000A90  0005               	movwf	pclath
  9814  000A92  6EFA               	movf	postinc2,w
  9815  000A94  50DE               	movwf	tosl
  9816  000A96  6EFD               	movf	postinc2,w
  9817  000A98  50DE               	movwf	tosl+1
  9818  000A9A  6EFE               	movf	tblptru,w
  9819  000A9C  50F8               	movwf	tosl+2
  9820  000A9E  6EFF               	movf	pclath,w
  9821  000AA0  50FA               	
  9822                           	movff	(main@tecla),(c:___awmod@dividend)
  9823  000AA2  C0BC  F027         	clrf	((c:___awmod@dividend+1)),c
  9824  000AA6  6A28               	movlw	high(030h)
  9825  000AA8  0E00               	movwf	((c:___awmod@divisor+1)),c
  9826  000AAA  6E2A               	movlw	low(030h)
  9827  000AAC  0E30               	movwf	((c:___awmod@divisor)),c
  9828  000AAE  6E29               	call	___awmod
  9829  000AB0  EC2E  F019         	movf	(0+?___awmod),c,w
  9830  000AB4  5027               	
  9831                           	return	;indir
  9832  000AB6  0012               	u5219:
  9833  000AB8                     	line	355
  9834                           	
  9835                           l6575:
  9836  000AB8                     ;main.c: 355:                                                vetor_aux[0] = 0;
  9837                           	movlw	low(0)
  9838  000AB8  0E00               	movlb	0	; () banked
  9839  000ABA  0100               	movwf	((main@vetor_aux))&0ffh
  9840  000ABC  6F76               	goto	l6577
  9841  000ABE  EF61  F005         	line	356
  9842                           ;main.c: 356:                                            }
  9843                           	
  9844                           l254:; BSR set to: 0
  9845  000AC2                     
  9846                           	line	359
  9847                           	
  9848                           l6577:; BSR set to: 0
  9849  000AC2                     
  9850                           ;main.c: 359:                                            for(char *ptr = vetor_aux; *ptr
                                  != 0; ptr++)
  9851                           		movlw	low(main@vetor_aux)
  9852  000AC2  0E76               	movwf	((main@ptr_671))&0ffh
  9853  000AC4  6FB8               	movlw	high(main@vetor_aux)
  9854  000AC6  0E00               	movwf	((main@ptr_671+1))&0ffh
  9855  000AC8  6FB9               
  9856                           	goto	l6615
  9857  000ACA  EF48  F006         	
  9858                           l256:; BSR set to: 0
  9859  000ACE                     
  9860                           	line	361
  9861                           	
  9862                           l6579:; BSR set to: 0
  9863  000ACE                     
  9864                           ;main.c: 360:                                            {;main.c: 361:                 
                                                                 if(*ptr <= 0x64 || *ptr == 0xFE)
  9865                           	movff	(main@ptr_671),fsr2l
  9866  000ACE  C0B8  FFD9         	movff	(main@ptr_671+1),fsr2h
  9867  000AD2  C0B9  FFDA         		movlw	065h-1
  9868  000AD6  0E64               	cpfsgt	indf2
  9869  000AD8  64DF               	goto	u5221
  9870  000ADA  EF71  F005         	goto	u5220
  9871  000ADE  EF73  F005         
  9872                           u5221:
  9873  000AE2                     	goto	l6583
  9874  000AE2  EF82  F005         u5220:
  9875  000AE6                     	
  9876                           l6581:; BSR set to: 0
  9877  000AE6                     
  9878                           	movff	(main@ptr_671),fsr2l
  9879  000AE6  C0B8  FFD9         	movff	(main@ptr_671+1),fsr2h
  9880  000AEA  C0B9  FFDA         	movlw	254
  9881  000AEE  0EFE               	xorwf	postinc2,w
  9882  000AF0  18DE               	btfss	status,2
  9883  000AF2  A4D8               	goto	u5231
  9884  000AF4  EF7E  F005         	goto	u5230
  9885  000AF8  EF80  F005         
  9886                           u5231:
  9887  000AFC                     	goto	l6587
  9888  000AFC  EF91  F005         u5230:
  9889  000B00                     	goto	l6583
  9890  000B00  EF82  F005         	
  9891                           l259:; BSR set to: 0
  9892  000B04                     
  9893                           	line	363
  9894                           	
  9895                           l6583:; BSR set to: 0
  9896  000B04                     
  9897                           ;main.c: 362:                                                 {;main.c: 363:            
                                                                          decodifica(&*ptr);
  9898                           		movff	(main@ptr_671),(c:decodifica@d)
  9899  000B04  C0B8  F027         	movff	(main@ptr_671+1),(c:decodifica@d+1)
  9900  000B08  C0B9  F028         
  9901                           	call	_decodifica
  9902  000B0C  ECE7  F014         	line	364
  9903                           	
  9904                           l6585:
  9905  000B10                     ;main.c: 364:                                                     fifo_add_control(*ptr)
                                 ;
  9906                           	movff	(main@ptr_671),fsr2l
  9907  000B10  C0B8  FFD9         	movff	(main@ptr_671+1),fsr2h
  9908  000B14  C0B9  FFDA         	movf	indf2,w
  9909  000B18  50DF               	
  9910                           	call	_fifo_add_control
  9911  000B1A  EC13  F01F         	line	365
  9912                           ;main.c: 365:                                                 }
  9913                           	goto	l6611
  9914  000B1E  EF41  F006         	line	366
  9915                           ;main.c: 366:                                                 else if (*ptr > 0x64 && *p
                                 tr <= 0xDC)
  9916                           	
  9917                           l257:
  9918  000B22                     	
  9919                           l6587:
  9920  000B22                     	movff	(main@ptr_671),fsr2l
  9921  000B22  C0B8  FFD9         	movff	(main@ptr_671+1),fsr2h
  9922  000B26  C0B9  FFDA         		movlw	065h-1
  9923  000B2A  0E64               	cpfsgt	indf2
  9924  000B2C  64DF               	goto	u5241
  9925  000B2E  EF9B  F005         	goto	u5240
  9926  000B32  EF9D  F005         
  9927                           u5241:
  9928  000B36                     	goto	l6595
  9929  000B36  EFB8  F005         u5240:
  9930  000B3A                     	
  9931                           l6589:
  9932  000B3A                     	movff	(main@ptr_671),fsr2l
  9933  000B3A  C0B8  FFD9         	movff	(main@ptr_671+1),fsr2h
  9934  000B3E  C0B9  FFDA         		movlw	0DDh-0
  9935  000B42  0EDD               	cpfslt	indf2
  9936  000B44  60DF               	goto	u5251
  9937  000B46  EFA7  F005         	goto	u5250
  9938  000B4A  EFA9  F005         
  9939                           u5251:
  9940  000B4E                     	goto	l6595
  9941  000B4E  EFB8  F005         u5250:
  9942  000B52                     	line	368
  9943                           	
  9944                           l6591:
  9945  000B52                     ;main.c: 367:                                                 {;main.c: 368:            
                                                                          decodifica(&*ptr);
  9946                           		movff	(main@ptr_671),(c:decodifica@d)
  9947  000B52  C0B8  F027         	movff	(main@ptr_671+1),(c:decodifica@d+1)
  9948  000B56  C0B9  F028         
  9949                           	call	_decodifica	;wreg free
  9950  000B5A  ECE7  F014         	line	369
  9951                           	
  9952                           l6593:
  9953  000B5E                     ;main.c: 369:                                                     fifo_add_tempo(*ptr);

  9954                           	movff	(main@ptr_671),fsr2l
  9955  000B5E  C0B8  FFD9         	movff	(main@ptr_671+1),fsr2h
  9956  000B62  C0B9  FFDA         	movf	indf2,w
  9957  000B66  50DF               	
  9958                           	call	_fifo_add_tempo
  9959  000B68  EC86  F01D         	line	370
  9960                           ;main.c: 370:                                                 }
  9961                           	goto	l6611
  9962  000B6C  EF41  F006         	line	371
  9963                           ;main.c: 371:                                                 else
  9964                           	
  9965                           l261:
  9966  000B70                     	line	373
  9967                           	
  9968                           l6595:
  9969  000B70                     ;main.c: 372:                                                 {;main.c: 373:            
                                                                          decodifica(&*ptr);
  9970                           		movff	(main@ptr_671),(c:decodifica@d)
  9971  000B70  C0B8  F027         	movff	(main@ptr_671+1),(c:decodifica@d+1)
  9972  000B74  C0B9  F028         
  9973                           	call	_decodifica	;wreg free
  9974  000B78  ECE7  F014         	line	374
  9975                           ;main.c: 374:                                                     switch( *ptr )
  9976                           	goto	l6601
  9977  000B7C  EFD8  F005         	line	376
  9978                           ;main.c: 375:                                                     {;main.c: 376:        
                                                                                  case 'A':
  9979                           	
  9980                           l264:
  9981  000B80                     	goto	l6597
  9982  000B80  EFCE  F005         	line	377
  9983                           ;main.c: 377:                                                         case 'B':
  9984                           	
  9985                           l265:
  9986  000B84                     	goto	l6597
  9987  000B84  EFCE  F005         	line	378
  9988                           ;main.c: 378:                                                         case 'C':
  9989                           	
  9990                           l266:
  9991  000B88                     	goto	l6597
  9992  000B88  EFCE  F005         	line	379
  9993                           ;main.c: 379:                                                         case 'D':
  9994                           	
  9995                           l267:
  9996  000B8C                     	goto	l6597
  9997  000B8C  EFCE  F005         	line	380
  9998                           ;main.c: 380:                                                         case 'a':
  9999                           	
 10000                           l268:
 10001  000B90                     	goto	l6597
 10002  000B90  EFCE  F005         	line	381
 10003                           ;main.c: 381:                                                         case 'b':
 10004                           	
 10005                           l269:
 10006  000B94                     	goto	l6597
 10007  000B94  EFCE  F005         	line	382
 10008                           ;main.c: 382:                                                         case 'c':
 10009                           	
 10010                           l270:
 10011  000B98                     	goto	l6597
 10012  000B98  EFCE  F005         	line	383
 10013                           ;main.c: 383:                                                         case 'd':
 10014                           	
 10015                           l271:
 10016  000B9C                     	line	384
 10017                           	
 10018                           l6597:
 10019  000B9C                     ;main.c: 384:                                                                 *ptr &= ~0
                                 x20;
 10020                           	movff	(main@ptr_671),fsr2l
 10021  000B9C  C0B8  FFD9         	movff	(main@ptr_671+1),fsr2h
 10022  000BA0  C0B9  FFDA         	movlw	0DFh
 10023  000BA4  0EDF               	andwf	indf2
 10024  000BA6  16DF               	line	385
 10025                           ;main.c: 385:                                                                 break;
 10026                           	goto	l6603
 10027  000BA8  EF09  F006         	line	386
 10028                           	
 10029                           l6599:
 10030  000BAC                     ;main.c: 386:                                                     }
 10031                           	goto	l6603
 10032  000BAC  EF09  F006         	
 10033                           l263:
 10034  000BB0                     	
 10035                           l6601:
 10036  000BB0                     	movff	(main@ptr_671),fsr2l
 10037  000BB0  C0B8  FFD9         	movff	(main@ptr_671+1),fsr2h
 10038  000BB4  C0B9  FFDA         	movf	indf2,w
 10039  000BB8  50DF               	movwf	(??_main+0+0)&0ffh,c
 10040  000BBA  6E45               	clrf	(??_main+0+0+1)&0ffh,c
 10041  000BBC  6A46               
 10042                           	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
 10043                           ; Switch size 1, requested type "space"
 10044                           ; Number of cases is 1, Range of values is 0 to 0
 10045                           ; switch strategies available:
 10046                           ; Name         Instructions Cycles
 10047                           ; simple_byte            4     3 (average)
 10048                           ;	Chosen strategy is simple_byte
 10049                           
 10050                           	movf ??_main+0+1,c,w
 10051  000BBE  5046               	xorlw	0^0	; case 0
 10052  000BC0  0A00               	skipnz
 10053  000BC2  B4D8               	goto	l7947
 10054  000BC4  EFE6  F005         	goto	l6603
 10055  000BC8  EF09  F006         	
 10056                           l7947:
 10057  000BCC                     ; Switch size 1, requested type "space"
 10058                           ; Number of cases is 8, Range of values is 65 to 100
 10059                           ; switch strategies available:
 10060                           ; Name         Instructions Cycles
 10061                           ; simple_byte           25    13 (average)
 10062                           ;	Chosen strategy is simple_byte
 10063                           
 10064                           	movf ??_main+0+0,c,w
 10065  000BCC  5045               	xorlw	65^0	; case 65
 10066  000BCE  0A41               	skipnz
 10067  000BD0  B4D8               	goto	l6597
 10068  000BD2  EFCE  F005         	xorlw	66^65	; case 66
 10069  000BD6  0A03               	skipnz
 10070  000BD8  B4D8               	goto	l6597
 10071  000BDA  EFCE  F005         	xorlw	67^66	; case 67
 10072  000BDE  0A01               	skipnz
 10073  000BE0  B4D8               	goto	l6597
 10074  000BE2  EFCE  F005         	xorlw	68^67	; case 68
 10075  000BE6  0A07               	skipnz
 10076  000BE8  B4D8               	goto	l6597
 10077  000BEA  EFCE  F005         	xorlw	97^68	; case 97
 10078  000BEE  0A25               	skipnz
 10079  000BF0  B4D8               	goto	l6597
 10080  000BF2  EFCE  F005         	xorlw	98^97	; case 98
 10081  000BF6  0A03               	skipnz
 10082  000BF8  B4D8               	goto	l6597
 10083  000BFA  EFCE  F005         	xorlw	99^98	; case 99
 10084  000BFE  0A01               	skipnz
 10085  000C00  B4D8               	goto	l6597
 10086  000C02  EFCE  F005         	xorlw	100^99	; case 100
 10087  000C06  0A07               	skipnz
 10088  000C08  B4D8               	goto	l6597
 10089  000C0A  EFCE  F005         	goto	l6603
 10090  000C0E  EF09  F006         
 10091                           	
 10092                           l272:
 10093  000C12                     	line	387
 10094                           	
 10095                           l6603:
 10096  000C12                     ;main.c: 387:                                                     alt_atuador(*ptr);
 10097                           	movff	(main@ptr_671),fsr2l
 10098  000C12  C0B8  FFD9         	movff	(main@ptr_671+1),fsr2h
 10099  000C16  C0B9  FFDA         	movf	indf2,w
 10100  000C1A  50DF               	
 10101                           	call	_alt_atuador
 10102  000C1C  EC0D  F01B         	line	388
 10103                           ;main.c: 388:                                                     fifo_add( ler_atuador(
                                 *ptr) ? *ptr : *ptr|0x20 );
 10104                           	movff	(main@ptr_671),fsr2l
 10105  000C20  C0B8  FFD9         	movff	(main@ptr_671+1),fsr2h
 10106  000C24  C0B9  FFDA         	movf	indf2,w
 10107  000C28  50DF               	
 10108                           	call	_ler_atuador
 10109  000C2A  EC9A  F019         	iorlw	0
 10110  000C2E  0900               	btfss	status,2
 10111  000C30  A4D8               	goto	u5261
 10112  000C32  EF1D  F006         	goto	u5260
 10113  000C36  EF1F  F006         u5261:
 10114  000C3A                     	goto	l6607
 10115  000C3A  EF2E  F006         u5260:
 10116  000C3E                     	
 10117                           l6605:
 10118  000C3E                     	movff	(main@ptr_671),fsr2l
 10119  000C3E  C0B8  FFD9         	movff	(main@ptr_671+1),fsr2h
 10120  000C42  C0B9  FFDA         	movf	indf2,w
 10121  000C46  50DF               	movwf	(??_main+0+0)&0ffh,c
 10122  000C48  6E45               	clrf	(??_main+0+0+1)&0ffh,c
 10123  000C4A  6A46               
 10124                           	movlw	020h
 10125  000C4C  0E20               	iorwf	(??_main+0+0),c,w
 10126  000C4E  1045               	movlb	0	; () banked
 10127  000C50  0100               	movwf	((_main$672))&0ffh
 10128  000C52  6F88               	movf	(??_main+0+1),c,w
 10129  000C54  5046               	movwf	1+((_main$672))&0ffh
 10130  000C56  6F89               	goto	l6609
 10131  000C58  EF3A  F006         	
 10132                           l274:; BSR set to: 0
 10133  000C5C                     
 10134                           	
 10135                           l6607:
 10136  000C5C                     	movff	(main@ptr_671),fsr2l
 10137  000C5C  C0B8  FFD9         	movff	(main@ptr_671+1),fsr2h
 10138  000C60  C0B9  FFDA         	movf	indf2,w
 10139  000C64  50DF               	movwf	(??_main+0+0)&0ffh,c
 10140  000C66  6E45               	movf	((??_main+0+0)),c,w
 10141  000C68  5045               	movlb	0	; () banked
 10142  000C6A  0100               	movwf	((_main$672))&0ffh
 10143  000C6C  6F88               	clrf	((_main$672+1))&0ffh
 10144  000C6E  6B89               	goto	l6609
 10145  000C70  EF3A  F006         	
 10146                           l276:; BSR set to: 0
 10147  000C74                     
 10148                           	
 10149                           l6609:; BSR set to: 0
 10150  000C74                     
 10151                           	movf	((_main$672))&0ffh,w
 10152  000C74  5188               	
 10153                           	call	_fifo_add
 10154  000C76  ECBA  F01D         	goto	l6611
 10155  000C7A  EF41  F006         	line	389
 10156                           ;main.c: 389:                                                 }
 10157                           	
 10158                           l262:
 10159  000C7E                     	goto	l6611
 10160  000C7E  EF41  F006         	
 10161                           l260:
 10162  000C82                     	line	390
 10163                           	
 10164                           l6611:
 10165  000C82                     ;main.c: 390:                                                 fifo_print();
 10166                           	call	_fifo_print	;wreg free
 10167  000C82  ECE9  F010         	line	391
 10168                           	
 10169                           l6613:
 10170  000C86                     ;main.c: 391:                                            }
 10171                           	movlb	0	; () banked
 10172  000C86  0100               	infsnz	((main@ptr_671))&0ffh
 10173  000C88  4BB8               	incf	((main@ptr_671+1))&0ffh
 10174  000C8A  2BB9               	goto	l6615
 10175  000C8C  EF48  F006         	
 10176                           l255:; BSR set to: 0
 10177  000C90                     
 10178                           	
 10179                           l6615:; BSR set to: 0
 10180  000C90                     
 10181                           	movff	(main@ptr_671),fsr2l
 10182  000C90  C0B8  FFD9         	movff	(main@ptr_671+1),fsr2h
 10183  000C94  C0B9  FFDA         	movf	indf2,w
 10184  000C98  50DF               	btfss	status,2
 10185  000C9A  A4D8               	goto	u5271
 10186  000C9C  EF52  F006         	goto	u5270
 10187  000CA0  EF54  F006         u5271:
 10188  000CA4                     	goto	l6579
 10189  000CA4  EF67  F005         u5270:
 10190  000CA8                     	goto	l6617
 10191  000CA8  EF56  F006         	
 10192                           l277:; BSR set to: 0
 10193  000CAC                     
 10194                           	line	393
 10195                           	
 10196                           l6617:; BSR set to: 0
 10197  000CAC                     
 10198                           ;main.c: 393:                                            dispLCD_clr();
 10199                           	call	_dispLCD_clr	;wreg free
 10200  000CAC  ECBE  F022         	line	394
 10201                           	
 10202                           l6619:
 10203  000CB0                     ;main.c: 394:                                            estado = 16;
 10204                           	movlw	low(010h)
 10205  000CB0  0E10               	movlb	0	; () banked
 10206  000CB2  0100               	movwf	((main@estado))&0ffh
 10207  000CB4  6FBB               	line	395
 10208                           ;main.c: 395:                                            break;
 10209                           	goto	l7035
 10210  000CB6  EF65  F00F         	line	397
 10211                           ;main.c: 397:                                 case '*': estado = 8; break;
 10212                           	
 10213                           l279:; BSR set to: 0
 10214  000CBA                     
 10215                           	
 10216                           l6621:; BSR set to: 0
 10217  000CBA                     
 10218                           	movlw	low(08h)
 10219  000CBA  0E08               	movwf	((main@estado))&0ffh
 10220  000CBC  6FBB               	goto	l7035
 10221  000CBE  EF65  F00F         	line	398
 10222                           	
 10223                           l6623:; BSR set to: 0
 10224  000CC2                     
 10225                           ;main.c: 398:                             }
 10226                           	goto	l7035
 10227  000CC2  EF65  F00F         	
 10228                           l243:; BSR set to: 0
 10229  000CC6                     
 10230                           	
 10231                           l6625:; BSR set to: 0
 10232  000CC6                     
 10233                           	movf	((main@tecla))&0ffh,w
 10234  000CC6  51BC               	movwf	(??_main+0+0)&0ffh,c
 10235  000CC8  6E45               	clrf	(??_main+0+0+1)&0ffh,c
 10236  000CCA  6A46               
 10237                           	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
 10238                           ; Switch size 1, requested type "space"
 10239                           ; Number of cases is 1, Range of values is 0 to 0
 10240                           ; switch strategies available:
 10241                           ; Name         Instructions Cycles
 10242                           ; simple_byte            4     3 (average)
 10243                           ;	Chosen strategy is simple_byte
 10244                           
 10245                           	movf ??_main+0+1,c,w
 10246  000CCC  5046               	xorlw	0^0	; case 0
 10247  000CCE  0A00               	skipnz
 10248  000CD0  B4D8               	goto	l7949
 10249  000CD2  EF6D  F006         	goto	l7035
 10250  000CD6  EF65  F00F         	
 10251                           l7949:; BSR set to: 0
 10252  000CDA                     
 10253                           ; Switch size 1, requested type "space"
 10254                           ; Number of cases is 11, Range of values is 42 to 57
 10255                           ; switch strategies available:
 10256                           ; Name         Instructions Cycles
 10257                           ; simple_byte           34    18 (average)
 10258                           ;	Chosen strategy is simple_byte
 10259                           
 10260                           	movf ??_main+0+0,c,w
 10261  000CDA  5045               	xorlw	42^0	; case 42
 10262  000CDC  0A2A               	skipnz
 10263  000CDE  B4D8               	goto	l6621
 10264  000CE0  EF5D  F006         	xorlw	48^42	; case 48
 10265  000CE4  0A1A               	skipnz
 10266  000CE6  B4D8               	goto	l6563
 10267  000CE8  EFFF  F004         	xorlw	49^48	; case 49
 10268  000CEC  0A01               	skipnz
 10269  000CEE  B4D8               	goto	l6563
 10270  000CF0  EFFF  F004         	xorlw	50^49	; case 50
 10271  000CF4  0A03               	skipnz
 10272  000CF6  B4D8               	goto	l6563
 10273  000CF8  EFFF  F004         	xorlw	51^50	; case 51
 10274  000CFC  0A01               	skipnz
 10275  000CFE  B4D8               	goto	l6563
 10276  000D00  EFFF  F004         	xorlw	52^51	; case 52
 10277  000D04  0A07               	skipnz
 10278  000D06  B4D8               	goto	l6563
 10279  000D08  EFFF  F004         	xorlw	53^52	; case 53
 10280  000D0C  0A01               	skipnz
 10281  000D0E  B4D8               	goto	l6563
 10282  000D10  EFFF  F004         	xorlw	54^53	; case 54
 10283  000D14  0A03               	skipnz
 10284  000D16  B4D8               	goto	l6563
 10285  000D18  EFFF  F004         	xorlw	55^54	; case 55
 10286  000D1C  0A01               	skipnz
 10287  000D1E  B4D8               	goto	l6563
 10288  000D20  EFFF  F004         	xorlw	56^55	; case 56
 10289  000D24  0A0F               	skipnz
 10290  000D26  B4D8               	goto	l6563
 10291  000D28  EFFF  F004         	xorlw	57^56	; case 57
 10292  000D2C  0A01               	skipnz
 10293  000D2E  B4D8               	goto	l6563
 10294  000D30  EFFF  F004         	goto	l7035
 10295  000D34  EF65  F00F         
 10296                           	
 10297                           l278:; BSR set to: 0
 10298  000D38                     
 10299                           	line	399
 10300                           ;main.c: 399:                             break;
 10301                           	goto	l7035
 10302  000D38  EF65  F00F         	line	401
 10303                           ;main.c: 401:              case 3:
 10304                           	
 10305                           l280:; BSR set to: 0
 10306  000D3C                     
 10307                           	line	402
 10308                           	
 10309                           l6627:; BSR set to: 0
 10310  000D3C                     
 10311                           ;main.c: 402:                             IHM.clr();
 10312                           	lfsr	2,(_IHM)+08h
 10313  000D3C  EE20  F059         	call	u5288
 10314  000D40  D802               	goto	u5289
 10315  000D42  EFAD  F006         u5288:
 10316  000D46                     	push
 10317  000D46  0005               	movwf	pclath
 10318  000D48  6EFA               	movf	postinc2,w
 10319  000D4A  50DE               	movwf	tosl
 10320  000D4C  6EFD               	movf	postinc2,w
 10321  000D4E  50DE               	movwf	tosl+1
 10322  000D50  6EFE               	movf	tblptru,w
 10323  000D52  50F8               	movwf	tosl+2
 10324  000D54  6EFF               	movf	pclath,w
 10325  000D56  50FA               	
 10326                           	return	;indir
 10327  000D58  0012               	u5289:
 10328  000D5A                     	line	403
 10329                           	
 10330                           l6629:
 10331  000D5A                     ;main.c: 403:                             IHM.printpos(0, 0, "   AJUSTE O INICIO  ");
 10332                           	lfsr	2,(_IHM)+04h
 10333  000D5A  EE20  F055         	call	u5298
 10334  000D5E  D802               	goto	u5299
 10335  000D60  EFC3  F006         u5298:
 10336  000D64                     	push
 10337  000D64  0005               	movwf	pclath
 10338  000D66  6EFA               	movf	postinc2,w
 10339  000D68  50DE               	movwf	tosl
 10340  000D6A  6EFD               	movf	postinc2,w
 10341  000D6C  50DE               	movwf	tosl+1
 10342  000D6E  6EFE               	movf	tblptru,w
 10343  000D70  50F8               	movwf	tosl+2
 10344  000D72  6EFF               	movf	pclath,w
 10345  000D74  50FA               	
 10346                           	movlw	low(0)
 10347  000D76  0E00               	movwf	((c:dispLCD@col)),c
 10348  000D78  6E2E               		movlw	low(STR_16)
 10349  000D7A  0ED6               	movwf	((c:dispLCD@str)),c
 10350  000D7C  6E2F               	movlw	high(STR_16)
 10351  000D7E  0E7E               	movwf	((c:dispLCD@str+1)),c
 10352  000D80  6E30               
 10353                           	movlw	(0)&0ffh
 10354  000D82  0E00               	
 10355                           	return	;indir
 10356  000D84  0012               	u5299:
 10357  000D86                     	line	404
 10358                           	
 10359                           l6631:
 10360  000D86                     ;main.c: 404:                             IHM.printpos(1, 0, "     DO SISTEMA     ");
 10361                           	lfsr	2,(_IHM)+04h
 10362  000D86  EE20  F055         	call	u5308
 10363  000D8A  D802               	goto	u5309
 10364  000D8C  EFD9  F006         u5308:
 10365  000D90                     	push
 10366  000D90  0005               	movwf	pclath
 10367  000D92  6EFA               	movf	postinc2,w
 10368  000D94  50DE               	movwf	tosl
 10369  000D96  6EFD               	movf	postinc2,w
 10370  000D98  50DE               	movwf	tosl+1
 10371  000D9A  6EFE               	movf	tblptru,w
 10372  000D9C  50F8               	movwf	tosl+2
 10373  000D9E  6EFF               	movf	pclath,w
 10374  000DA0  50FA               	
 10375                           	movlw	low(0)
 10376  000DA2  0E00               	movwf	((c:dispLCD@col)),c
 10377  000DA4  6E2E               		movlw	low(STR_17)
 10378  000DA6  0E82               	movwf	((c:dispLCD@str)),c
 10379  000DA8  6E2F               	movlw	high(STR_17)
 10380  000DAA  0E7E               	movwf	((c:dispLCD@str+1)),c
 10381  000DAC  6E30               
 10382                           	movlw	(01h)&0ffh
 10383  000DAE  0E01               	
 10384                           	return	;indir
 10385  000DB0  0012               	u5309:
 10386  000DB2                     	line	405
 10387                           	
 10388                           l6633:
 10389  000DB2                     ;main.c: 405:                             estado = 6;
 10390                           	movlw	low(06h)
 10391  000DB2  0E06               	movlb	0	; () banked
 10392  000DB4  0100               	movwf	((main@estado))&0ffh
 10393  000DB6  6FBB               	line	406
 10394                           ;main.c: 406:                             break;
 10395                           	goto	l7035
 10396  000DB8  EF65  F00F         	line	408
 10397                           ;main.c: 408:             case 6:
 10398                           	
 10399                           l281:; BSR set to: 0
 10400  000DBC                     
 10401                           	line	409
 10402                           	
 10403                           l6635:; BSR set to: 0
 10404  000DBC                     
 10405                           ;main.c: 409:                             IHM.printpos(3,0,"   A   B   C   D    ");
 10406                           	lfsr	2,(_IHM)+04h
 10407  000DBC  EE20  F055         	call	u5318
 10408  000DC0  D802               	goto	u5319
 10409  000DC2  EFF4  F006         u5318:
 10410  000DC6                     	push
 10411  000DC6  0005               	movwf	pclath
 10412  000DC8  6EFA               	movf	postinc2,w
 10413  000DCA  50DE               	movwf	tosl
 10414  000DCC  6EFD               	movf	postinc2,w
 10415  000DCE  50DE               	movwf	tosl+1
 10416  000DD0  6EFE               	movf	tblptru,w
 10417  000DD2  50F8               	movwf	tosl+2
 10418  000DD4  6EFF               	movf	pclath,w
 10419  000DD6  50FA               	
 10420                           	movlw	low(0)
 10421  000DD8  0E00               	movwf	((c:dispLCD@col)),c
 10422  000DDA  6E2E               		movlw	low(STR_18)
 10423  000DDC  0E97               	movwf	((c:dispLCD@str)),c
 10424  000DDE  6E2F               	movlw	high(STR_18)
 10425  000DE0  0E7E               	movwf	((c:dispLCD@str+1)),c
 10426  000DE2  6E30               
 10427                           	movlw	(03h)&0ffh
 10428  000DE4  0E03               	
 10429                           	return	;indir
 10430  000DE6  0012               	u5319:
 10431  000DE8                     	line	410
 10432                           	
 10433                           l6637:
 10434  000DE8                     ;main.c: 410:                             dispLCD_lincol(3, 4); dispLCD_dataReg(ler_atua
                                 dor('A') ? '+' : '-');
 10435                           	movlw	low(04h)
 10436  000DE8  0E04               	movwf	((c:dispLCD_lincol@col)),c
 10437  000DEA  6E29               	movlw	(03h)&0ffh
 10438  000DEC  0E03               	
 10439                           	call	_dispLCD_lincol
 10440  000DEE  EC54  F01E         	
 10441                           l6639:
 10442  000DF2                     	movlw	(041h)&0ffh
 10443  000DF2  0E41               	
 10444                           	call	_ler_atuador
 10445  000DF4  EC9A  F019         	iorlw	0
 10446  000DF8  0900               	btfss	status,2
 10447  000DFA  A4D8               	goto	u5321
 10448  000DFC  EF02  F007         	goto	u5320
 10449  000E00  EF04  F007         u5321:
 10450  000E04                     	goto	l6643
 10451  000E04  EF0B  F007         u5320:
 10452  000E08                     	
 10453                           l6641:
 10454  000E08                     	movlw	high(02Dh)
 10455  000E08  0E00               	movlb	0	; () banked
 10456  000E0A  0100               	movwf	((_main$676+1))&0ffh
 10457  000E0C  6F8B               	movlw	low(02Dh)
 10458  000E0E  0E2D               	movwf	((_main$676))&0ffh
 10459  000E10  6F8A               	goto	l6645
 10460  000E12  EF12  F007         	
 10461                           l283:; BSR set to: 0
 10462  000E16                     
 10463                           	
 10464                           l6643:
 10465  000E16                     	movlw	high(02Bh)
 10466  000E16  0E00               	movlb	0	; () banked
 10467  000E18  0100               	movwf	((_main$676+1))&0ffh
 10468  000E1A  6F8B               	movlw	low(02Bh)
 10469  000E1C  0E2B               	movwf	((_main$676))&0ffh
 10470  000E1E  6F8A               	goto	l6645
 10471  000E20  EF12  F007         	
 10472                           l285:; BSR set to: 0
 10473  000E24                     
 10474                           	
 10475                           l6645:; BSR set to: 0
 10476  000E24                     
 10477                           	movf	((_main$676))&0ffh,w
 10478  000E24  518A               	
 10479                           	call	_dispLCD_dataReg
 10480  000E26  EC8F  F01F         	line	411
 10481                           	
 10482                           l6647:
 10483  000E2A                     ;main.c: 411:                             dispLCD_lincol(3, 8);dispLCD_dataReg(ler_atuad
                                 or('B') ? '+' : '-');
 10484                           	movlw	low(08h)
 10485  000E2A  0E08               	movwf	((c:dispLCD_lincol@col)),c
 10486  000E2C  6E29               	movlw	(03h)&0ffh
 10487  000E2E  0E03               	
 10488                           	call	_dispLCD_lincol
 10489  000E30  EC54  F01E         	
 10490                           l6649:
 10491  000E34                     	movlw	(042h)&0ffh
 10492  000E34  0E42               	
 10493                           	call	_ler_atuador
 10494  000E36  EC9A  F019         	iorlw	0
 10495  000E3A  0900               	btfss	status,2
 10496  000E3C  A4D8               	goto	u5331
 10497  000E3E  EF23  F007         	goto	u5330
 10498  000E42  EF25  F007         u5331:
 10499  000E46                     	goto	l6653
 10500  000E46  EF2C  F007         u5330:
 10501  000E4A                     	
 10502                           l6651:
 10503  000E4A                     	movlw	high(02Dh)
 10504  000E4A  0E00               	movlb	0	; () banked
 10505  000E4C  0100               	movwf	((_main$677+1))&0ffh
 10506  000E4E  6F8D               	movlw	low(02Dh)
 10507  000E50  0E2D               	movwf	((_main$677))&0ffh
 10508  000E52  6F8C               	goto	l6655
 10509  000E54  EF33  F007         	
 10510                           l287:; BSR set to: 0
 10511  000E58                     
 10512                           	
 10513                           l6653:
 10514  000E58                     	movlw	high(02Bh)
 10515  000E58  0E00               	movlb	0	; () banked
 10516  000E5A  0100               	movwf	((_main$677+1))&0ffh
 10517  000E5C  6F8D               	movlw	low(02Bh)
 10518  000E5E  0E2B               	movwf	((_main$677))&0ffh
 10519  000E60  6F8C               	goto	l6655
 10520  000E62  EF33  F007         	
 10521                           l289:; BSR set to: 0
 10522  000E66                     
 10523                           	
 10524                           l6655:; BSR set to: 0
 10525  000E66                     
 10526                           	movf	((_main$677))&0ffh,w
 10527  000E66  518C               	
 10528                           	call	_dispLCD_dataReg
 10529  000E68  EC8F  F01F         	line	412
 10530                           	
 10531                           l6657:
 10532  000E6C                     ;main.c: 412:                             dispLCD_lincol(3, 12);dispLCD_dataReg(ler_atua
                                 dor('C') ? '+' : '-');
 10533                           	movlw	low(0Ch)
 10534  000E6C  0E0C               	movwf	((c:dispLCD_lincol@col)),c
 10535  000E6E  6E29               	movlw	(03h)&0ffh
 10536  000E70  0E03               	
 10537                           	call	_dispLCD_lincol
 10538  000E72  EC54  F01E         	
 10539                           l6659:
 10540  000E76                     	movlw	(043h)&0ffh
 10541  000E76  0E43               	
 10542                           	call	_ler_atuador
 10543  000E78  EC9A  F019         	iorlw	0
 10544  000E7C  0900               	btfss	status,2
 10545  000E7E  A4D8               	goto	u5341
 10546  000E80  EF44  F007         	goto	u5340
 10547  000E84  EF46  F007         u5341:
 10548  000E88                     	goto	l6663
 10549  000E88  EF4D  F007         u5340:
 10550  000E8C                     	
 10551                           l6661:
 10552  000E8C                     	movlw	high(02Dh)
 10553  000E8C  0E00               	movlb	0	; () banked
 10554  000E8E  0100               	movwf	((_main$678+1))&0ffh
 10555  000E90  6F8F               	movlw	low(02Dh)
 10556  000E92  0E2D               	movwf	((_main$678))&0ffh
 10557  000E94  6F8E               	goto	l6665
 10558  000E96  EF54  F007         	
 10559                           l291:; BSR set to: 0
 10560  000E9A                     
 10561                           	
 10562                           l6663:
 10563  000E9A                     	movlw	high(02Bh)
 10564  000E9A  0E00               	movlb	0	; () banked
 10565  000E9C  0100               	movwf	((_main$678+1))&0ffh
 10566  000E9E  6F8F               	movlw	low(02Bh)
 10567  000EA0  0E2B               	movwf	((_main$678))&0ffh
 10568  000EA2  6F8E               	goto	l6665
 10569  000EA4  EF54  F007         	
 10570                           l293:; BSR set to: 0
 10571  000EA8                     
 10572                           	
 10573                           l6665:; BSR set to: 0
 10574  000EA8                     
 10575                           	movf	((_main$678))&0ffh,w
 10576  000EA8  518E               	
 10577                           	call	_dispLCD_dataReg
 10578  000EAA  EC8F  F01F         	line	413
 10579                           	
 10580                           l6667:
 10581  000EAE                     ;main.c: 413:                             dispLCD_lincol(3, 16);dispLCD_dataReg(ler_atua
                                 dor('D') ? '+' : '-');
 10582                           	movlw	low(010h)
 10583  000EAE  0E10               	movwf	((c:dispLCD_lincol@col)),c
 10584  000EB0  6E29               	movlw	(03h)&0ffh
 10585  000EB2  0E03               	
 10586                           	call	_dispLCD_lincol
 10587  000EB4  EC54  F01E         	
 10588                           l6669:
 10589  000EB8                     	movlw	(044h)&0ffh
 10590  000EB8  0E44               	
 10591                           	call	_ler_atuador
 10592  000EBA  EC9A  F019         	iorlw	0
 10593  000EBE  0900               	btfss	status,2
 10594  000EC0  A4D8               	goto	u5351
 10595  000EC2  EF65  F007         	goto	u5350
 10596  000EC6  EF67  F007         u5351:
 10597  000ECA                     	goto	l6673
 10598  000ECA  EF6E  F007         u5350:
 10599  000ECE                     	
 10600                           l6671:
 10601  000ECE                     	movlw	high(02Dh)
 10602  000ECE  0E00               	movlb	0	; () banked
 10603  000ED0  0100               	movwf	((_main$679+1))&0ffh
 10604  000ED2  6F91               	movlw	low(02Dh)
 10605  000ED4  0E2D               	movwf	((_main$679))&0ffh
 10606  000ED6  6F90               	goto	l6675
 10607  000ED8  EF75  F007         	
 10608                           l295:; BSR set to: 0
 10609  000EDC                     
 10610                           	
 10611                           l6673:
 10612  000EDC                     	movlw	high(02Bh)
 10613  000EDC  0E00               	movlb	0	; () banked
 10614  000EDE  0100               	movwf	((_main$679+1))&0ffh
 10615  000EE0  6F91               	movlw	low(02Bh)
 10616  000EE2  0E2B               	movwf	((_main$679))&0ffh
 10617  000EE4  6F90               	goto	l6675
 10618  000EE6  EF75  F007         	
 10619                           l297:; BSR set to: 0
 10620  000EEA                     
 10621                           	
 10622                           l6675:; BSR set to: 0
 10623  000EEA                     
 10624                           	movf	((_main$679))&0ffh,w
 10625  000EEA  5190               	
 10626                           	call	_dispLCD_dataReg
 10627  000EEC  EC8F  F01F         	line	414
 10628                           	
 10629                           l6677:
 10630  000EF0                     ;main.c: 414:                             estado = 7;
 10631                           	movlw	low(07h)
 10632  000EF0  0E07               	movlb	0	; () banked
 10633  000EF2  0100               	movwf	((main@estado))&0ffh
 10634  000EF4  6FBB               	line	415
 10635                           ;main.c: 415:                             break;
 10636                           	goto	l7035
 10637  000EF6  EF65  F00F         	line	417
 10638                           ;main.c: 417:             case 7:
 10639                           	
 10640                           l298:; BSR set to: 0
 10641  000EFA                     
 10642                           	line	418
 10643                           	
 10644                           l6679:; BSR set to: 0
 10645  000EFA                     
 10646                           ;main.c: 418:                             tecla = teclado_borda();
 10647                           	call	_teclado_borda	;wreg free
 10648  000EFA  EC25  F020         	movlb	0	; () banked
 10649  000EFE  0100               	movwf	((main@tecla))&0ffh
 10650  000F00  6FBC               	line	419
 10651                           ;main.c: 419:                             switch(tecla)
 10652                           	goto	l6719
 10653  000F02  EF29  F008         	line	421
 10654                           ;main.c: 420:                             {;main.c: 421:                                
                                  case 'A': alt_atuador(tecla); dispLCD_lincol(3, 4); dispLCD_dataReg(ler_atuador('A') ? 
                                 '+' : '-'); break;
 10655                           	
 10656                           l300:; BSR set to: 0
 10657  000F06                     
 10658                           	
 10659                           l6681:; BSR set to: 0
 10660  000F06                     
 10661                           	movf	((main@tecla))&0ffh,w
 10662  000F06  51BC               	
 10663                           	call	_alt_atuador
 10664  000F08  EC0D  F01B         	movlw	low(04h)
 10665  000F0C  0E04               	movwf	((c:dispLCD_lincol@col)),c
 10666  000F0E  6E29               	movlw	(03h)&0ffh
 10667  000F10  0E03               	
 10668                           	call	_dispLCD_lincol
 10669  000F12  EC54  F01E         	movlw	(041h)&0ffh
 10670  000F16  0E41               	
 10671                           	call	_ler_atuador
 10672  000F18  EC9A  F019         	iorlw	0
 10673  000F1C  0900               	btfss	status,2
 10674  000F1E  A4D8               	goto	u5361
 10675  000F20  EF94  F007         	goto	u5360
 10676  000F24  EF96  F007         u5361:
 10677  000F28                     	goto	l6685
 10678  000F28  EF9D  F007         u5360:
 10679  000F2C                     	
 10680                           l6683:
 10681  000F2C                     	movlw	high(02Dh)
 10682  000F2C  0E00               	movlb	0	; () banked
 10683  000F2E  0100               	movwf	((_main$680+1))&0ffh
 10684  000F30  6F93               	movlw	low(02Dh)
 10685  000F32  0E2D               	movwf	((_main$680))&0ffh
 10686  000F34  6F92               	goto	l6687
 10687  000F36  EFA4  F007         	
 10688                           l302:; BSR set to: 0
 10689  000F3A                     
 10690                           	
 10691                           l6685:
 10692  000F3A                     	movlw	high(02Bh)
 10693  000F3A  0E00               	movlb	0	; () banked
 10694  000F3C  0100               	movwf	((_main$680+1))&0ffh
 10695  000F3E  6F93               	movlw	low(02Bh)
 10696  000F40  0E2B               	movwf	((_main$680))&0ffh
 10697  000F42  6F92               	goto	l6687
 10698  000F44  EFA4  F007         	
 10699                           l304:; BSR set to: 0
 10700  000F48                     
 10701                           	
 10702                           l6687:; BSR set to: 0
 10703  000F48                     
 10704                           	movf	((_main$680))&0ffh,w
 10705  000F48  5192               	
 10706                           	call	_dispLCD_dataReg
 10707  000F4A  EC8F  F01F         	goto	l7035
 10708  000F4E  EF65  F00F         	line	422
 10709                           ;main.c: 422:                                 case 'B': alt_atuador(tecla); dispLCD_linc
                                 ol(3, 8); dispLCD_dataReg(ler_atuador('B') ? '+' : '-'); break;
 10710                           	
 10711                           l306:
 10712  000F52                     	
 10713                           l6689:
 10714  000F52                     	movlb	0	; () banked
 10715  000F52  0100               	movf	((main@tecla))&0ffh,w
 10716  000F54  51BC               	
 10717                           	call	_alt_atuador
 10718  000F56  EC0D  F01B         	movlw	low(08h)
 10719  000F5A  0E08               	movwf	((c:dispLCD_lincol@col)),c
 10720  000F5C  6E29               	movlw	(03h)&0ffh
 10721  000F5E  0E03               	
 10722                           	call	_dispLCD_lincol
 10723  000F60  EC54  F01E         	movlw	(042h)&0ffh
 10724  000F64  0E42               	
 10725                           	call	_ler_atuador
 10726  000F66  EC9A  F019         	iorlw	0
 10727  000F6A  0900               	btfss	status,2
 10728  000F6C  A4D8               	goto	u5371
 10729  000F6E  EFBB  F007         	goto	u5370
 10730  000F72  EFBD  F007         u5371:
 10731  000F76                     	goto	l6693
 10732  000F76  EFC4  F007         u5370:
 10733  000F7A                     	
 10734                           l6691:
 10735  000F7A                     	movlw	high(02Dh)
 10736  000F7A  0E00               	movlb	0	; () banked
 10737  000F7C  0100               	movwf	((_main$681+1))&0ffh
 10738  000F7E  6F95               	movlw	low(02Dh)
 10739  000F80  0E2D               	movwf	((_main$681))&0ffh
 10740  000F82  6F94               	goto	l6695
 10741  000F84  EFCB  F007         	
 10742                           l308:; BSR set to: 0
 10743  000F88                     
 10744                           	
 10745                           l6693:
 10746  000F88                     	movlw	high(02Bh)
 10747  000F88  0E00               	movlb	0	; () banked
 10748  000F8A  0100               	movwf	((_main$681+1))&0ffh
 10749  000F8C  6F95               	movlw	low(02Bh)
 10750  000F8E  0E2B               	movwf	((_main$681))&0ffh
 10751  000F90  6F94               	goto	l6695
 10752  000F92  EFCB  F007         	
 10753                           l310:; BSR set to: 0
 10754  000F96                     
 10755                           	
 10756                           l6695:; BSR set to: 0
 10757  000F96                     
 10758                           	movf	((_main$681))&0ffh,w
 10759  000F96  5194               	
 10760                           	call	_dispLCD_dataReg
 10761  000F98  EC8F  F01F         	goto	l7035
 10762  000F9C  EF65  F00F         	line	423
 10763                           ;main.c: 423:                                 case 'C': alt_atuador(tecla); dispLCD_linc
                                 ol(3,12); dispLCD_dataReg(ler_atuador('C') ? '+' : '-'); break;
 10764                           	
 10765                           l311:
 10766  000FA0                     	
 10767                           l6697:
 10768  000FA0                     	movlb	0	; () banked
 10769  000FA0  0100               	movf	((main@tecla))&0ffh,w
 10770  000FA2  51BC               	
 10771                           	call	_alt_atuador
 10772  000FA4  EC0D  F01B         	movlw	low(0Ch)
 10773  000FA8  0E0C               	movwf	((c:dispLCD_lincol@col)),c
 10774  000FAA  6E29               	movlw	(03h)&0ffh
 10775  000FAC  0E03               	
 10776                           	call	_dispLCD_lincol
 10777  000FAE  EC54  F01E         	movlw	(043h)&0ffh
 10778  000FB2  0E43               	
 10779                           	call	_ler_atuador
 10780  000FB4  EC9A  F019         	iorlw	0
 10781  000FB8  0900               	btfss	status,2
 10782  000FBA  A4D8               	goto	u5381
 10783  000FBC  EFE2  F007         	goto	u5380
 10784  000FC0  EFE4  F007         u5381:
 10785  000FC4                     	goto	l6701
 10786  000FC4  EFEB  F007         u5380:
 10787  000FC8                     	
 10788                           l6699:
 10789  000FC8                     	movlw	high(02Dh)
 10790  000FC8  0E00               	movlb	0	; () banked
 10791  000FCA  0100               	movwf	((_main$682+1))&0ffh
 10792  000FCC  6F97               	movlw	low(02Dh)
 10793  000FCE  0E2D               	movwf	((_main$682))&0ffh
 10794  000FD0  6F96               	goto	l6703
 10795  000FD2  EFF2  F007         	
 10796                           l313:; BSR set to: 0
 10797  000FD6                     
 10798                           	
 10799                           l6701:
 10800  000FD6                     	movlw	high(02Bh)
 10801  000FD6  0E00               	movlb	0	; () banked
 10802  000FD8  0100               	movwf	((_main$682+1))&0ffh
 10803  000FDA  6F97               	movlw	low(02Bh)
 10804  000FDC  0E2B               	movwf	((_main$682))&0ffh
 10805  000FDE  6F96               	goto	l6703
 10806  000FE0  EFF2  F007         	
 10807                           l315:; BSR set to: 0
 10808  000FE4                     
 10809                           	
 10810                           l6703:; BSR set to: 0
 10811  000FE4                     
 10812                           	movf	((_main$682))&0ffh,w
 10813  000FE4  5196               	
 10814                           	call	_dispLCD_dataReg
 10815  000FE6  EC8F  F01F         	goto	l7035
 10816  000FEA  EF65  F00F         	line	424
 10817                           ;main.c: 424:                                 case 'D': alt_atuador(tecla); dispLCD_linc
                                 ol(3,16); dispLCD_dataReg(ler_atuador('D') ? '+' : '-'); break;
 10818                           	
 10819                           l316:
 10820  000FEE                     	
 10821                           l6705:
 10822  000FEE                     	movlb	0	; () banked
 10823  000FEE  0100               	movf	((main@tecla))&0ffh,w
 10824  000FF0  51BC               	
 10825                           	call	_alt_atuador
 10826  000FF2  EC0D  F01B         	movlw	low(010h)
 10827  000FF6  0E10               	movwf	((c:dispLCD_lincol@col)),c
 10828  000FF8  6E29               	movlw	(03h)&0ffh
 10829  000FFA  0E03               	
 10830                           	call	_dispLCD_lincol
 10831  000FFC  EC54  F01E         	movlw	(044h)&0ffh
 10832  001000  0E44               	
 10833                           	call	_ler_atuador
 10834  001002  EC9A  F019         	iorlw	0
 10835  001006  0900               	btfss	status,2
 10836  001008  A4D8               	goto	u5391
 10837  00100A  EF09  F008         	goto	u5390
 10838  00100E  EF0B  F008         u5391:
 10839  001012                     	goto	l6709
 10840  001012  EF12  F008         u5390:
 10841  001016                     	
 10842                           l6707:
 10843  001016                     	movlw	high(02Dh)
 10844  001016  0E00               	movlb	0	; () banked
 10845  001018  0100               	movwf	((_main$683+1))&0ffh
 10846  00101A  6F99               	movlw	low(02Dh)
 10847  00101C  0E2D               	movwf	((_main$683))&0ffh
 10848  00101E  6F98               	goto	l6711
 10849  001020  EF19  F008         	
 10850                           l318:; BSR set to: 0
 10851  001024                     
 10852                           	
 10853                           l6709:
 10854  001024                     	movlw	high(02Bh)
 10855  001024  0E00               	movlb	0	; () banked
 10856  001026  0100               	movwf	((_main$683+1))&0ffh
 10857  001028  6F99               	movlw	low(02Bh)
 10858  00102A  0E2B               	movwf	((_main$683))&0ffh
 10859  00102C  6F98               	goto	l6711
 10860  00102E  EF19  F008         	
 10861                           l320:; BSR set to: 0
 10862  001032                     
 10863                           	
 10864                           l6711:; BSR set to: 0
 10865  001032                     
 10866                           	movf	((_main$683))&0ffh,w
 10867  001032  5198               	
 10868                           	call	_dispLCD_dataReg
 10869  001034  EC8F  F01F         	goto	l7035
 10870  001038  EF65  F00F         	line	425
 10871                           ;main.c: 425:                                 case '#': estado = 10; break;
 10872                           	
 10873                           l321:
 10874  00103C                     	
 10875                           l6713:
 10876  00103C                     	movlw	low(0Ah)
 10877  00103C  0E0A               	movlb	0	; () banked
 10878  00103E  0100               	movwf	((main@estado))&0ffh
 10879  001040  6FBB               	goto	l7035
 10880  001042  EF65  F00F         	line	426
 10881                           ;main.c: 426:                                 case '*': estado = 8; break;
 10882                           	
 10883                           l322:; BSR set to: 0
 10884  001046                     
 10885                           	
 10886                           l6715:; BSR set to: 0
 10887  001046                     
 10888                           	movlw	low(08h)
 10889  001046  0E08               	movwf	((main@estado))&0ffh
 10890  001048  6FBB               	goto	l7035
 10891  00104A  EF65  F00F         	line	427
 10892                           	
 10893                           l6717:; BSR set to: 0
 10894  00104E                     
 10895                           ;main.c: 427:                             }
 10896                           	goto	l7035
 10897  00104E  EF65  F00F         	
 10898                           l299:; BSR set to: 0
 10899  001052                     
 10900                           	
 10901                           l6719:; BSR set to: 0
 10902  001052                     
 10903                           	movf	((main@tecla))&0ffh,w
 10904  001052  51BC               	movwf	(??_main+0+0)&0ffh,c
 10905  001054  6E45               	clrf	(??_main+0+0+1)&0ffh,c
 10906  001056  6A46               
 10907                           	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
 10908                           ; Switch size 1, requested type "space"
 10909                           ; Number of cases is 1, Range of values is 0 to 0
 10910                           ; switch strategies available:
 10911                           ; Name         Instructions Cycles
 10912                           ; simple_byte            4     3 (average)
 10913                           ;	Chosen strategy is simple_byte
 10914                           
 10915                           	movf ??_main+0+1,c,w
 10916  001058  5046               	xorlw	0^0	; case 0
 10917  00105A  0A00               	skipnz
 10918  00105C  B4D8               	goto	l7951
 10919  00105E  EF33  F008         	goto	l7035
 10920  001062  EF65  F00F         	
 10921                           l7951:; BSR set to: 0
 10922  001066                     
 10923                           ; Switch size 1, requested type "space"
 10924                           ; Number of cases is 6, Range of values is 35 to 68
 10925                           ; switch strategies available:
 10926                           ; Name         Instructions Cycles
 10927                           ; simple_byte           19    10 (average)
 10928                           ;	Chosen strategy is simple_byte
 10929                           
 10930                           	movf ??_main+0+0,c,w
 10931  001066  5045               	xorlw	35^0	; case 35
 10932  001068  0A23               	skipnz
 10933  00106A  B4D8               	goto	l6713
 10934  00106C  EF1E  F008         	xorlw	42^35	; case 42
 10935  001070  0A09               	skipnz
 10936  001072  B4D8               	goto	l6715
 10937  001074  EF23  F008         	xorlw	65^42	; case 65
 10938  001078  0A6B               	skipnz
 10939  00107A  B4D8               	goto	l6681
 10940  00107C  EF83  F007         	xorlw	66^65	; case 66
 10941  001080  0A03               	skipnz
 10942  001082  B4D8               	goto	l6689
 10943  001084  EFA9  F007         	xorlw	67^66	; case 67
 10944  001088  0A01               	skipnz
 10945  00108A  B4D8               	goto	l6697
 10946  00108C  EFD0  F007         	xorlw	68^67	; case 68
 10947  001090  0A07               	skipnz
 10948  001092  B4D8               	goto	l6705
 10949  001094  EFF7  F007         	goto	l7035
 10950  001098  EF65  F00F         
 10951                           	
 10952                           l305:; BSR set to: 0
 10953  00109C                     
 10954                           	line	428
 10955                           ;main.c: 428:                             break;
 10956                           	goto	l7035
 10957  00109C  EF65  F00F         	line	432
 10958                           ;main.c: 432:             case 10:
 10959                           	
 10960                           l323:; BSR set to: 0
 10961  0010A0                     
 10962                           	line	433
 10963                           	
 10964                           l6721:; BSR set to: 0
 10965  0010A0                     
 10966                           ;main.c: 433:                             init_cond = salva_atuadores_init();
 10967                           	call	_salva_atuadores_init	;wreg free
 10968  0010A0  ECA4  F01B         	movlb	0	; () banked
 10969  0010A4  0100               	movwf	((main@init_cond))&0ffh
 10970  0010A6  6FB2               	line	434
 10971                           	
 10972                           l6723:; BSR set to: 0
 10973  0010A8                     
 10974                           ;main.c: 434:                             IHM.clr();
 10975                           	lfsr	2,(_IHM)+08h
 10976  0010A8  EE20  F059         	call	u5408
 10977  0010AC  D802               	goto	u5409
 10978  0010AE  EF63  F008         u5408:
 10979  0010B2                     	push
 10980  0010B2  0005               	movwf	pclath
 10981  0010B4  6EFA               	movf	postinc2,w
 10982  0010B6  50DE               	movwf	tosl
 10983  0010B8  6EFD               	movf	postinc2,w
 10984  0010BA  50DE               	movwf	tosl+1
 10985  0010BC  6EFE               	movf	tblptru,w
 10986  0010BE  50F8               	movwf	tosl+2
 10987  0010C0  6EFF               	movf	pclath,w
 10988  0010C2  50FA               	
 10989                           	return	;indir
 10990  0010C4  0012               	u5409:
 10991  0010C6                     	line	435
 10992                           	
 10993                           l6725:
 10994  0010C6                     ;main.c: 435:                             IHM.printpos(0, 0, "  INSIRA OS PASSOS  ");
 10995                           	lfsr	2,(_IHM)+04h
 10996  0010C6  EE20  F055         	call	u5418
 10997  0010CA  D802               	goto	u5419
 10998  0010CC  EF79  F008         u5418:
 10999  0010D0                     	push
 11000  0010D0  0005               	movwf	pclath
 11001  0010D2  6EFA               	movf	postinc2,w
 11002  0010D4  50DE               	movwf	tosl
 11003  0010D6  6EFD               	movf	postinc2,w
 11004  0010D8  50DE               	movwf	tosl+1
 11005  0010DA  6EFE               	movf	tblptru,w
 11006  0010DC  50F8               	movwf	tosl+2
 11007  0010DE  6EFF               	movf	pclath,w
 11008  0010E0  50FA               	
 11009                           	movlw	low(0)
 11010  0010E2  0E00               	movwf	((c:dispLCD@col)),c
 11011  0010E4  6E2E               		movlw	low(STR_19)
 11012  0010E6  0EEB               	movwf	((c:dispLCD@str)),c
 11013  0010E8  6E2F               	movlw	high(STR_19)
 11014  0010EA  0E7E               	movwf	((c:dispLCD@str+1)),c
 11015  0010EC  6E30               
 11016                           	movlw	(0)&0ffh
 11017  0010EE  0E00               	
 11018                           	return	;indir
 11019  0010F0  0012               	u5419:
 11020  0010F2                     	line	436
 11021                           	
 11022                           l6727:
 11023  0010F2                     ;main.c: 436:                             estado = 14;
 11024                           	movlw	low(0Eh)
 11025  0010F2  0E0E               	movlb	0	; () banked
 11026  0010F4  0100               	movwf	((main@estado))&0ffh
 11027  0010F6  6FBB               	line	437
 11028                           ;main.c: 437:                             break;
 11029                           	goto	l7035
 11030  0010F8  EF65  F00F         	line	439
 11031                           ;main.c: 439:              case 11:
 11032                           	
 11033                           l324:; BSR set to: 0
 11034  0010FC                     
 11035                           	line	440
 11036                           	
 11037                           l6729:; BSR set to: 0
 11038  0010FC                     
 11039                           ;main.c: 440:                             tecla = teclado_borda();
 11040                           	call	_teclado_borda
 11041  0010FC  EC25  F020         	movlb	0	; () banked
 11042  001100  0100               	movwf	((main@tecla))&0ffh
 11043  001102  6FBC               	line	441
 11044                           ;main.c: 441:                             switch( tecla )
 11045                           	goto	l6765
 11046  001104  EFF3  F008         	line	443
 11047                           ;main.c: 442:                             {;main.c: 443:                                
                                  case 'A':
 11048                           	
 11049                           l326:; BSR set to: 0
 11050  001108                     
 11051                           	goto	l6731
 11052  001108  EF8A  F008         	line	444
 11053                           ;main.c: 444:                                 case 'B':
 11054                           	
 11055                           l327:; BSR set to: 0
 11056  00110C                     
 11057                           	goto	l6731
 11058  00110C  EF8A  F008         	line	445
 11059                           ;main.c: 445:                                 case 'C':
 11060                           	
 11061                           l328:; BSR set to: 0
 11062  001110                     
 11063                           	goto	l6731
 11064  001110  EF8A  F008         	line	446
 11065                           ;main.c: 446:                                 case 'D':
 11066                           	
 11067                           l329:; BSR set to: 0
 11068  001114                     
 11069                           	line	447
 11070                           	
 11071                           l6731:; BSR set to: 0
 11072  001114                     
 11073                           ;main.c: 447:                                             if( fifo_disponivel() )
 11074                           	call	_fifo_disponivel	;wreg free
 11075  001114  EC14  F022         	iorlw	0
 11076  001118  0900               	btfsc	status,2
 11077  00111A  B4D8               	goto	u5421
 11078  00111C  EF92  F008         	goto	u5420
 11079  001120  EF94  F008         u5421:
 11080  001124                     	goto	l7035
 11081  001124  EF65  F00F         u5420:
 11082  001128                     	line	449
 11083                           	
 11084                           l6733:
 11085  001128                     ;main.c: 448:                                             {;main.c: 449:                
                                                                  alt_atuador(tecla);
 11086                           	movlb	0	; () banked
 11087  001128  0100               	movf	((main@tecla))&0ffh,w
 11088  00112A  51BC               	
 11089                           	call	_alt_atuador
 11090  00112C  EC0D  F01B         	line	450
 11091                           ;main.c: 450:                                                 fifo_add( ler_atuador(tecl
                                 a) ? tecla : tecla|0x20 );
 11092                           	movlb	0	; () banked
 11093  001130  0100               	movf	((main@tecla))&0ffh,w
 11094  001132  51BC               	
 11095                           	call	_ler_atuador
 11096  001134  EC9A  F019         	iorlw	0
 11097  001138  0900               	btfss	status,2
 11098  00113A  A4D8               	goto	u5431
 11099  00113C  EFA2  F008         	goto	u5430
 11100  001140  EFA4  F008         u5431:
 11101  001144                     	goto	l332
 11102  001144  EFAF  F008         u5430:
 11103  001148                     	
 11104                           l6735:
 11105  001148                     	movlw	020h
 11106  001148  0E20               	movff	(main@tecla),??_main+0+0
 11107  00114A  C0BC  F045         	clrf	(??_main+0+0+1)&0ffh,c
 11108  00114E  6A46               	iorwf	(??_main+0+0),c,w
 11109  001150  1045               	movlb	0	; () banked
 11110  001152  0100               	movwf	((_main$685))&0ffh
 11111  001154  6F9A               	movf	(??_main+0+1),c,w
 11112  001156  5046               	movwf	1+((_main$685))&0ffh
 11113  001158  6F9B               	goto	l6737
 11114  00115A  EFB5  F008         	
 11115                           l332:
 11116  00115E                     	movff	(main@tecla),(_main$685)
 11117  00115E  C0BC  F09A         	movlb	0	; () banked
 11118  001162  0100               	clrf	((_main$685+1))&0ffh
 11119  001164  6B9B               	goto	l6737
 11120  001166  EFB5  F008         	
 11121                           l334:; BSR set to: 0
 11122  00116A                     
 11123                           	
 11124                           l6737:; BSR set to: 0
 11125  00116A                     
 11126                           	movf	((_main$685))&0ffh,w
 11127  00116A  519A               	
 11128                           	call	_fifo_add
 11129  00116C  ECBA  F01D         	line	451
 11130                           	
 11131                           l6739:
 11132  001170                     ;main.c: 451:                                                 estado = 16;
 11133                           	movlw	low(010h)
 11134  001170  0E10               	movlb	0	; () banked
 11135  001172  0100               	movwf	((main@estado))&0ffh
 11136  001174  6FBB               	goto	l7035
 11137  001176  EF65  F00F         	line	452
 11138                           ;main.c: 452:                                             }
 11139                           	
 11140                           l330:; BSR set to: 0
 11141  00117A                     
 11142                           	line	453
 11143                           ;main.c: 453:                                             break;
 11144                           	goto	l7035
 11145  00117A  EF65  F00F         	line	454
 11146                           ;main.c: 454:                                 case '6':
 11147                           	
 11148                           l336:; BSR set to: 0
 11149  00117E                     
 11150                           	line	455
 11151                           	
 11152                           l6741:; BSR set to: 0
 11153  00117E                     
 11154                           ;main.c: 455:                                             fifo_indicePrint_inc();
 11155                           	call	_fifo_indicePrint_inc	;wreg free
 11156  00117E  EC21  F01E         	line	456
 11157                           	
 11158                           l6743:
 11159  001182                     ;main.c: 456:                                             estado = 16;
 11160                           	movlw	low(010h)
 11161  001182  0E10               	movlb	0	; () banked
 11162  001184  0100               	movwf	((main@estado))&0ffh
 11163  001186  6FBB               	line	457
 11164                           ;main.c: 457:                                             break;
 11165                           	goto	l7035
 11166  001188  EF65  F00F         	line	458
 11167                           ;main.c: 458:                                 case '4':
 11168                           	
 11169                           l337:; BSR set to: 0
 11170  00118C                     
 11171                           	line	459
 11172                           	
 11173                           l6745:; BSR set to: 0
 11174  00118C                     
 11175                           ;main.c: 459:                                             fifo_indicePrint_dec();
 11176                           	call	_fifo_indicePrint_dec	;wreg free
 11177  00118C  EC2E  F022         	line	460
 11178                           	
 11179                           l6747:
 11180  001190                     ;main.c: 460:                                             estado = 16;
 11181                           	movlw	low(010h)
 11182  001190  0E10               	movlb	0	; () banked
 11183  001192  0100               	movwf	((main@estado))&0ffh
 11184  001194  6FBB               	line	461
 11185                           ;main.c: 461:                                             break;
 11186                           	goto	l7035
 11187  001196  EF65  F00F         	line	463
 11188                           ;main.c: 463:                                 case '*':
 11189                           	
 11190                           l338:; BSR set to: 0
 11191  00119A                     
 11192                           	line	464
 11193                           	
 11194                           l6749:; BSR set to: 0
 11195  00119A                     
 11196                           ;main.c: 464:                                             if(fifo_indice() == 2 )
 11197                           	call	_fifo_indice	;wreg free
 11198  00119A  ECBA  F022         	xorlw	02h
 11199  00119E  0A02               	btfss	status,2
 11200  0011A0  A4D8               	goto	u5441
 11201  0011A2  EFD5  F008         	goto	u5440
 11202  0011A6  EFD7  F008         u5441:
 11203  0011AA                     	goto	l6753
 11204  0011AA  EFDC  F008         u5440:
 11205  0011AE                     	line	465
 11206                           	
 11207                           l6751:
 11208  0011AE                     ;main.c: 465:                                                 estado = 3;
 11209                           	movlw	low(03h)
 11210  0011AE  0E03               	movlb	0	; () banked
 11211  0011B0  0100               	movwf	((main@estado))&0ffh
 11212  0011B2  6FBB               	goto	l7035
 11213  0011B4  EF65  F00F         	line	466
 11214                           ;main.c: 466:                                             else
 11215                           	
 11216                           l339:; BSR set to: 0
 11217  0011B8                     
 11218                           	line	468
 11219                           	
 11220                           l6753:
 11221  0011B8                     ;main.c: 467:                                             {;main.c: 468:                
                                                                  fifo_delete();
 11222                           	call	_fifo_delete	;wreg free
 11223  0011B8  EC55  F01A         	line	469
 11224                           	
 11225                           l6755:
 11226  0011BC                     ;main.c: 469:                                                 estado = 16;
 11227                           	movlw	low(010h)
 11228  0011BC  0E10               	movlb	0	; () banked
 11229  0011BE  0100               	movwf	((main@estado))&0ffh
 11230  0011C0  6FBB               	goto	l7035
 11231  0011C2  EF65  F00F         	line	470
 11232                           ;main.c: 470:                                             }
 11233                           	
 11234                           l340:; BSR set to: 0
 11235  0011C6                     
 11236                           	line	471
 11237                           ;main.c: 471:                                             break;
 11238                           	goto	l7035
 11239  0011C6  EF65  F00F         	line	473
 11240                           ;main.c: 473:                                 case '#': estado = 74; break;
 11241                           	
 11242                           l341:; BSR set to: 0
 11243  0011CA                     
 11244                           	
 11245                           l6757:; BSR set to: 0
 11246  0011CA                     
 11247                           	movlw	low(04Ah)
 11248  0011CA  0E4A               	movwf	((main@estado))&0ffh
 11249  0011CC  6FBB               	goto	l7035
 11250  0011CE  EF65  F00F         	line	475
 11251                           ;main.c: 475:                                 case '0': estado = 41; break;
 11252                           	
 11253                           l342:; BSR set to: 0
 11254  0011D2                     
 11255                           	
 11256                           l6759:; BSR set to: 0
 11257  0011D2                     
 11258                           	movlw	low(029h)
 11259  0011D2  0E29               	movwf	((main@estado))&0ffh
 11260  0011D4  6FBB               	goto	l7035
 11261  0011D6  EF65  F00F         	line	477
 11262                           ;main.c: 477:                                 case '9': estado = 90; break;
 11263                           	
 11264                           l343:; BSR set to: 0
 11265  0011DA                     
 11266                           	
 11267                           l6761:; BSR set to: 0
 11268  0011DA                     
 11269                           	movlw	low(05Ah)
 11270  0011DA  0E5A               	movwf	((main@estado))&0ffh
 11271  0011DC  6FBB               	goto	l7035
 11272  0011DE  EF65  F00F         	line	478
 11273                           	
 11274                           l6763:; BSR set to: 0
 11275  0011E2                     
 11276                           ;main.c: 478:                             }
 11277                           	goto	l7035
 11278  0011E2  EF65  F00F         	
 11279                           l325:; BSR set to: 0
 11280  0011E6                     
 11281                           	
 11282                           l6765:; BSR set to: 0
 11283  0011E6                     
 11284                           	movf	((main@tecla))&0ffh,w
 11285  0011E6  51BC               	movwf	(??_main+0+0)&0ffh,c
 11286  0011E8  6E45               	clrf	(??_main+0+0+1)&0ffh,c
 11287  0011EA  6A46               
 11288                           	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
 11289                           ; Switch size 1, requested type "space"
 11290                           ; Number of cases is 1, Range of values is 0 to 0
 11291                           ; switch strategies available:
 11292                           ; Name         Instructions Cycles
 11293                           ; simple_byte            4     3 (average)
 11294                           ;	Chosen strategy is simple_byte
 11295                           
 11296                           	movf ??_main+0+1,c,w
 11297  0011EC  5046               	xorlw	0^0	; case 0
 11298  0011EE  0A00               	skipnz
 11299  0011F0  B4D8               	goto	l7953
 11300  0011F2  EFFD  F008         	goto	l7035
 11301  0011F6  EF65  F00F         	
 11302                           l7953:; BSR set to: 0
 11303  0011FA                     
 11304                           ; Switch size 1, requested type "space"
 11305                           ; Number of cases is 10, Range of values is 35 to 68
 11306                           ; switch strategies available:
 11307                           ; Name         Instructions Cycles
 11308                           ; simple_byte           31    16 (average)
 11309                           ;	Chosen strategy is simple_byte
 11310                           
 11311                           	movf ??_main+0+0,c,w
 11312  0011FA  5045               	xorlw	35^0	; case 35
 11313  0011FC  0A23               	skipnz
 11314  0011FE  B4D8               	goto	l6757
 11315  001200  EFE5  F008         	xorlw	42^35	; case 42
 11316  001204  0A09               	skipnz
 11317  001206  B4D8               	goto	l6749
 11318  001208  EFCD  F008         	xorlw	48^42	; case 48
 11319  00120C  0A1A               	skipnz
 11320  00120E  B4D8               	goto	l6759
 11321  001210  EFE9  F008         	xorlw	52^48	; case 52
 11322  001214  0A04               	skipnz
 11323  001216  B4D8               	goto	l6745
 11324  001218  EFC6  F008         	xorlw	54^52	; case 54
 11325  00121C  0A02               	skipnz
 11326  00121E  B4D8               	goto	l6741
 11327  001220  EFBF  F008         	xorlw	57^54	; case 57
 11328  001224  0A0F               	skipnz
 11329  001226  B4D8               	goto	l6761
 11330  001228  EFED  F008         	xorlw	65^57	; case 65
 11331  00122C  0A78               	skipnz
 11332  00122E  B4D8               	goto	l6731
 11333  001230  EF8A  F008         	xorlw	66^65	; case 66
 11334  001234  0A03               	skipnz
 11335  001236  B4D8               	goto	l6731
 11336  001238  EF8A  F008         	xorlw	67^66	; case 67
 11337  00123C  0A01               	skipnz
 11338  00123E  B4D8               	goto	l6731
 11339  001240  EF8A  F008         	xorlw	68^67	; case 68
 11340  001244  0A07               	skipnz
 11341  001246  B4D8               	goto	l6731
 11342  001248  EF8A  F008         	goto	l7035
 11343  00124C  EF65  F00F         
 11344                           	
 11345                           l335:; BSR set to: 0
 11346  001250                     
 11347                           	line	479
 11348                           ;main.c: 479:                             break;
 11349                           	goto	l7035
 11350  001250  EF65  F00F         	line	481
 11351                           ;main.c: 481:              case 16:
 11352                           	
 11353                           l344:; BSR set to: 0
 11354  001254                     
 11355                           	line	482
 11356                           	
 11357                           l6767:; BSR set to: 0
 11358  001254                     
 11359                           ;main.c: 482:                             fifo_print();
 11360                           	call	_fifo_print	;wreg free
 11361  001254  ECE9  F010         	line	483
 11362                           	
 11363                           l6769:
 11364  001258                     ;main.c: 483:                             estado = 14;
 11365                           	movlw	low(0Eh)
 11366  001258  0E0E               	movlb	0	; () banked
 11367  00125A  0100               	movwf	((main@estado))&0ffh
 11368  00125C  6FBB               	line	484
 11369                           ;main.c: 484:                             break;
 11370                           	goto	l7035
 11371  00125E  EF65  F00F         	line	486
 11372                           ;main.c: 486:              case 14:
 11373                           	
 11374                           l345:; BSR set to: 0
 11375  001262                     
 11376                           	line	487
 11377                           	
 11378                           l6771:; BSR set to: 0
 11379  001262                     
 11380                           ;main.c: 487:                             IHM.printpos(3,0,"<  /  >");
 11381                           	lfsr	2,(_IHM)+04h
 11382  001262  EE20  F055         	call	u5458
 11383  001266  D802               	goto	u5459
 11384  001268  EF47  F009         u5458:
 11385  00126C                     	push
 11386  00126C  0005               	movwf	pclath
 11387  00126E  6EFA               	movf	postinc2,w
 11388  001270  50DE               	movwf	tosl
 11389  001272  6EFD               	movf	postinc2,w
 11390  001274  50DE               	movwf	tosl+1
 11391  001276  6EFE               	movf	tblptru,w
 11392  001278  50F8               	movwf	tosl+2
 11393  00127A  6EFF               	movf	pclath,w
 11394  00127C  50FA               	
 11395                           	movlw	low(0)
 11396  00127E  0E00               	movwf	((c:dispLCD@col)),c
 11397  001280  6E2E               		movlw	low(STR_20)
 11398  001282  0EF4               	movwf	((c:dispLCD@str)),c
 11399  001284  6E2F               	movlw	high(STR_20)
 11400  001286  0E7F               	movwf	((c:dispLCD@str+1)),c
 11401  001288  6E30               
 11402                           	movlw	(03h)&0ffh
 11403  00128A  0E03               	
 11404                           	return	;indir
 11405  00128C  0012               	u5459:
 11406  00128E                     	line	488
 11407                           	
 11408                           l6773:
 11409  00128E                     ;main.c: 488:                             IHM.printv(3, 1,( fifo_indice()-2 ), 2);
 11410                           	lfsr	2,(_IHM)+06h
 11411  00128E  EE20  F057         	call	u5468
 11412  001292  D802               	goto	u5469
 11413  001294  EF64  F009         u5468:
 11414  001298                     	push
 11415  001298  0005               	movwf	pclath
 11416  00129A  6EFA               	movf	postinc2,w
 11417  00129C  50DE               	movwf	tosl
 11418  00129E  6EFD               	movf	postinc2,w
 11419  0012A0  50DE               	movwf	tosl+1
 11420  0012A2  6EFE               	movf	tblptru,w
 11421  0012A4  50F8               	movwf	tosl+2
 11422  0012A6  6EFF               	movf	pclath,w
 11423  0012A8  50FA               	
 11424                           	movlw	low(01h)
 11425  0012AA  0E01               	movwf	((c:dispLCD_num@col)),c
 11426  0012AC  6E32               	call	_fifo_indice
 11427  0012AE  ECBA  F022         	movwf	(??_main+0+0)&0ffh,c
 11428  0012B2  6E45               	movlw	low(-2)
 11429  0012B4  0EFE               	addwf	((??_main+0+0)),c,w
 11430  0012B6  2445               	movwf	((c:dispLCD_num@num)),c
 11431  0012B8  6E33               	clrf	1+((c:dispLCD_num@num)),c
 11432  0012BA  6A34               	movlw	high(-2)
 11433  0012BC  0EFF               	addwfc	1+((c:dispLCD_num@num)),c
 11434  0012BE  2234               	movlw	low(02h)
 11435  0012C0  0E02               	movwf	((c:dispLCD_num@tam)),c
 11436  0012C2  6E35               	movlw	(03h)&0ffh
 11437  0012C4  0E03               	
 11438                           	return	;indir
 11439  0012C6  0012               	u5469:
 11440  0012C8                     	line	489
 11441                           	
 11442                           l6775:
 11443  0012C8                     ;main.c: 489:                             IHM.printv(3, 4,( fifo_tam()-2 ), 2);
 11444                           	lfsr	2,(_IHM)+06h
 11445  0012C8  EE20  F057         	call	u5478
 11446  0012CC  D802               	goto	u5479
 11447  0012CE  EF81  F009         u5478:
 11448  0012D2                     	push
 11449  0012D2  0005               	movwf	pclath
 11450  0012D4  6EFA               	movf	postinc2,w
 11451  0012D6  50DE               	movwf	tosl
 11452  0012D8  6EFD               	movf	postinc2,w
 11453  0012DA  50DE               	movwf	tosl+1
 11454  0012DC  6EFE               	movf	tblptru,w
 11455  0012DE  50F8               	movwf	tosl+2
 11456  0012E0  6EFF               	movf	pclath,w
 11457  0012E2  50FA               	
 11458                           	movlw	low(04h)
 11459  0012E4  0E04               	movwf	((c:dispLCD_num@col)),c
 11460  0012E6  6E32               	call	_fifo_tam
 11461  0012E8  ECB6  F022         	movwf	(??_main+0+0)&0ffh,c
 11462  0012EC  6E45               	movlw	low(-2)
 11463  0012EE  0EFE               	addwf	((??_main+0+0)),c,w
 11464  0012F0  2445               	movwf	((c:dispLCD_num@num)),c
 11465  0012F2  6E33               	clrf	1+((c:dispLCD_num@num)),c
 11466  0012F4  6A34               	movlw	high(-2)
 11467  0012F6  0EFF               	addwfc	1+((c:dispLCD_num@num)),c
 11468  0012F8  2234               	movlw	low(02h)
 11469  0012FA  0E02               	movwf	((c:dispLCD_num@tam)),c
 11470  0012FC  6E35               	movlw	(03h)&0ffh
 11471  0012FE  0E03               	
 11472                           	return	;indir
 11473  001300  0012               	u5479:
 11474  001302                     	line	490
 11475                           	
 11476                           l6777:
 11477  001302                     ;main.c: 490:                             estado = 11;
 11478                           	movlw	low(0Bh)
 11479  001302  0E0B               	movlb	0	; () banked
 11480  001304  0100               	movwf	((main@estado))&0ffh
 11481  001306  6FBB               	line	491
 11482                           ;main.c: 491:                             break;
 11483                           	goto	l7035
 11484  001308  EF65  F00F         	line	493
 11485                           ;main.c: 493:              case 30:
 11486                           	
 11487                           l346:; BSR set to: 0
 11488  00130C                     
 11489                           	line	495
 11490                           	
 11491                           l6779:; BSR set to: 0
 11492  00130C                     
 11493                           ;main.c: 495:                             estado = 70;
 11494                           	movlw	low(046h)
 11495  00130C  0E46               	movwf	((main@estado))&0ffh
 11496  00130E  6FBB               	line	496
 11497                           ;main.c: 496:                             meAtuadores = 1;
 11498                           	movlw	low(01h)
 11499  001310  0E01               	movwf	((main@meAtuadores))&0ffh
 11500  001312  6FAF               	line	497
 11501                           ;main.c: 497:                             break;
 11502                           	goto	l7035
 11503  001314  EF65  F00F         	line	499
 11504                           ;main.c: 499:              case 70:
 11505                           	
 11506                           l347:; BSR set to: 0
 11507  001318                     
 11508                           	line	500
 11509                           	
 11510                           l6781:; BSR set to: 0
 11511  001318                     
 11512                           ;main.c: 500:                             if( meAtuadores == 3 && botao != 2 )
 11513                           		movlw	3
 11514  001318  0E03               	xorwf	((main@meAtuadores))&0ffh,w
 11515  00131A  19AF               	btfss	status,2
 11516  00131C  A4D8               	goto	u5481
 11517  00131E  EF93  F009         	goto	u5480
 11518  001322  EF95  F009         
 11519                           u5481:
 11520  001326                     	goto	l6801
 11521  001326  EF31  F00A         u5480:
 11522  00132A                     	
 11523                           l6783:; BSR set to: 0
 11524  00132A                     
 11525                           		movlw	2
 11526  00132A  0E02               	xorwf	((main@botao))&0ffh,w
 11527  00132C  19B3               	btfsc	status,2
 11528  00132E  B4D8               	goto	u5491
 11529  001330  EF9C  F009         	goto	u5490
 11530  001334  EF9E  F009         
 11531                           u5491:
 11532  001338                     	goto	l6801
 11533  001338  EF31  F00A         u5490:
 11534  00133C                     	line	502
 11535                           	
 11536                           l6785:; BSR set to: 0
 11537  00133C                     
 11538                           ;main.c: 501:                             {;main.c: 502:                                
                                  IHM.printpos(0, 0, "       [    ]       ");
 11539                           	lfsr	2,(_IHM)+04h
 11540  00133C  EE20  F055         	call	u5508
 11541  001340  D802               	goto	u5509
 11542  001342  EFB4  F009         u5508:
 11543  001346                     	push
 11544  001346  0005               	movwf	pclath
 11545  001348  6EFA               	movf	postinc2,w
 11546  00134A  50DE               	movwf	tosl
 11547  00134C  6EFD               	movf	postinc2,w
 11548  00134E  50DE               	movwf	tosl+1
 11549  001350  6EFE               	movf	tblptru,w
 11550  001352  50F8               	movwf	tosl+2
 11551  001354  6EFF               	movf	pclath,w
 11552  001356  50FA               	
 11553                           	movlw	low(0)
 11554  001358  0E00               	movwf	((c:dispLCD@col)),c
 11555  00135A  6E2E               		movlw	low(STR_21)
 11556  00135C  0E19               	movwf	((c:dispLCD@str)),c
 11557  00135E  6E2F               	movlw	high(STR_21)
 11558  001360  0E7E               	movwf	((c:dispLCD@str+1)),c
 11559  001362  6E30               
 11560                           	movlw	(0)&0ffh
 11561  001364  0E00               	
 11562                           	return	;indir
 11563  001366  0012               	u5509:
 11564  001368                     	line	503
 11565                           	
 11566                           l6787:
 11567  001368                     ;main.c: 503:                                 printExec(1, -1);
 11568                           	movlw	low(0FFh)
 11569  001368  0EFF               	movwf	((c:printExec@ind)),c
 11570  00136A  6E40               	movlw	(01h)&0ffh
 11571  00136C  0E01               	
 11572                           	call	_printExec
 11573  00136E  EC91  F012         	line	504
 11574                           	
 11575                           l6789:
 11576  001372                     ;main.c: 504:                                 printExec(9, 0);
 11577                           	movlw	low(0)
 11578  001372  0E00               	movwf	((c:printExec@ind)),c
 11579  001374  6E40               	movlw	(09h)&0ffh
 11580  001376  0E09               	
 11581                           	call	_printExec
 11582  001378  EC91  F012         	line	505
 11583                           	
 11584                           l6791:
 11585  00137C                     ;main.c: 505:                                 printExec(14, 1);
 11586                           	movlw	low(01h)
 11587  00137C  0E01               	movwf	((c:printExec@ind)),c
 11588  00137E  6E40               	movlw	(0Eh)&0ffh
 11589  001380  0E0E               	
 11590                           	call	_printExec
 11591  001382  EC91  F012         	line	506
 11592                           	
 11593                           l6793:
 11594  001386                     ;main.c: 506:                                 IHM.printpos(2, 0, "<  /  > c:          ")
                                 ;
 11595                           	lfsr	2,(_IHM)+04h
 11596  001386  EE20  F055         	call	u5518
 11597  00138A  D802               	goto	u5519
 11598  00138C  EFD9  F009         u5518:
 11599  001390                     	push
 11600  001390  0005               	movwf	pclath
 11601  001392  6EFA               	movf	postinc2,w
 11602  001394  50DE               	movwf	tosl
 11603  001396  6EFD               	movf	postinc2,w
 11604  001398  50DE               	movwf	tosl+1
 11605  00139A  6EFE               	movf	tblptru,w
 11606  00139C  50F8               	movwf	tosl+2
 11607  00139E  6EFF               	movf	pclath,w
 11608  0013A0  50FA               	
 11609                           	movlw	low(0)
 11610  0013A2  0E00               	movwf	((c:dispLCD@col)),c
 11611  0013A4  6E2E               		movlw	low(STR_22)
 11612  0013A6  0EDA               	movwf	((c:dispLCD@str)),c
 11613  0013A8  6E2F               	movlw	high(STR_22)
 11614  0013AA  0E7D               	movwf	((c:dispLCD@str+1)),c
 11615  0013AC  6E30               
 11616                           	movlw	(02h)&0ffh
 11617  0013AE  0E02               	
 11618                           	return	;indir
 11619  0013B0  0012               	u5519:
 11620  0013B2                     	line	507
 11621                           	
 11622                           l6795:
 11623  0013B2                     ;main.c: 507:                                 IHM.printv(2, 4,( fifo_indice() - 2 ), 2);
                                 
 11624                           	lfsr	2,(_IHM)+06h
 11625  0013B2  EE20  F057         	call	u5528
 11626  0013B6  D802               	goto	u5529
 11627  0013B8  EFF6  F009         u5528:
 11628  0013BC                     	push
 11629  0013BC  0005               	movwf	pclath
 11630  0013BE  6EFA               	movf	postinc2,w
 11631  0013C0  50DE               	movwf	tosl
 11632  0013C2  6EFD               	movf	postinc2,w
 11633  0013C4  50DE               	movwf	tosl+1
 11634  0013C6  6EFE               	movf	tblptru,w
 11635  0013C8  50F8               	movwf	tosl+2
 11636  0013CA  6EFF               	movf	pclath,w
 11637  0013CC  50FA               	
 11638                           	movlw	low(04h)
 11639  0013CE  0E04               	movwf	((c:dispLCD_num@col)),c
 11640  0013D0  6E32               	call	_fifo_indice
 11641  0013D2  ECBA  F022         	movwf	(??_main+0+0)&0ffh,c
 11642  0013D6  6E45               	movlw	low(-2)
 11643  0013D8  0EFE               	addwf	((??_main+0+0)),c,w
 11644  0013DA  2445               	movwf	((c:dispLCD_num@num)),c
 11645  0013DC  6E33               	clrf	1+((c:dispLCD_num@num)),c
 11646  0013DE  6A34               	movlw	high(-2)
 11647  0013E0  0EFF               	addwfc	1+((c:dispLCD_num@num)),c
 11648  0013E2  2234               	movlw	low(02h)
 11649  0013E4  0E02               	movwf	((c:dispLCD_num@tam)),c
 11650  0013E6  6E35               	movlw	(02h)&0ffh
 11651  0013E8  0E02               	
 11652                           	return	;indir
 11653  0013EA  0012               	u5529:
 11654  0013EC                     	line	508
 11655                           	
 11656                           l6797:
 11657  0013EC                     ;main.c: 508:                                 IHM.printv(2, 1, ( getIndicePassos() - 1 )
                                 , 2);
 11658                           	lfsr	2,(_IHM)+06h
 11659  0013EC  EE20  F057         	call	u5538
 11660  0013F0  D802               	goto	u5539
 11661  0013F2  EF13  F00A         u5538:
 11662  0013F6                     	push
 11663  0013F6  0005               	movwf	pclath
 11664  0013F8  6EFA               	movf	postinc2,w
 11665  0013FA  50DE               	movwf	tosl
 11666  0013FC  6EFD               	movf	postinc2,w
 11667  0013FE  50DE               	movwf	tosl+1
 11668  001400  6EFE               	movf	tblptru,w
 11669  001402  50F8               	movwf	tosl+2
 11670  001404  6EFF               	movf	pclath,w
 11671  001406  50FA               	
 11672                           	movlw	low(01h)
 11673  001408  0E01               	movwf	((c:dispLCD_num@col)),c
 11674  00140A  6E32               	call	_getIndicePassos
 11675  00140C  ECB2  F022         	movwf	(??_main+0+0)&0ffh,c
 11676  001410  6E45               	movlw	low(-1)
 11677  001412  0EFF               	addwf	((??_main+0+0)),c,w
 11678  001414  2445               	movwf	((c:dispLCD_num@num)),c
 11679  001416  6E33               	clrf	1+((c:dispLCD_num@num)),c
 11680  001418  6A34               	movlw	high(-1)
 11681  00141A  0EFF               	addwfc	1+((c:dispLCD_num@num)),c
 11682  00141C  2234               	movlw	low(02h)
 11683  00141E  0E02               	movwf	((c:dispLCD_num@tam)),c
 11684  001420  6E35               	movlw	(02h)&0ffh
 11685  001422  0E02               	
 11686                           	return	;indir
 11687  001424  0012               	u5539:
 11688  001426                     	line	509
 11689                           	
 11690                           l6799:
 11691  001426                     ;main.c: 509:                                 IHM.printv(2, 11, ( getContCiclos() + 1 ),
                                  5);
 11692                           	lfsr	2,(_IHM)+06h
 11693  001426  EE20  F057         	call	u5548
 11694  00142A  D802               	goto	u5549
 11695  00142C  EF2F  F00A         u5548:
 11696  001430                     	push
 11697  001430  0005               	movwf	pclath
 11698  001432  6EFA               	movf	postinc2,w
 11699  001434  50DE               	movwf	tosl
 11700  001436  6EFD               	movf	postinc2,w
 11701  001438  50DE               	movwf	tosl+1
 11702  00143A  6EFE               	movf	tblptru,w
 11703  00143C  50F8               	movwf	tosl+2
 11704  00143E  6EFF               	movf	pclath,w
 11705  001440  50FA               	
 11706                           	movlw	low(0Bh)
 11707  001442  0E0B               	movwf	((c:dispLCD_num@col)),c
 11708  001444  6E32               	call	_getContCiclos
 11709  001446  ECA8  F022         	movlw	low(01h)
 11710  00144A  0E01               	addwf	(0+?_getContCiclos),c,w
 11711  00144C  2427               	movwf	((c:dispLCD_num@num)),c
 11712  00144E  6E33               	movlw	high(01h)
 11713  001450  0E00               	addwfc	(1+?_getContCiclos),c,w
 11714  001452  2028               	movwf	1+((c:dispLCD_num@num)),c
 11715  001454  6E34               	movlw	low(05h)
 11716  001456  0E05               	movwf	((c:dispLCD_num@tam)),c
 11717  001458  6E35               	movlw	(02h)&0ffh
 11718  00145A  0E02               	
 11719                           	return	;indir
 11720  00145C  0012               	u5549:
 11721  00145E                     	goto	l6801
 11722  00145E  EF31  F00A         	line	511
 11723                           ;main.c: 511:                             }
 11724                           	
 11725                           l348:
 11726  001462                     	line	512
 11727                           	
 11728                           l6801:
 11729  001462                     ;main.c: 512:                             if(meAtuadores == 0)
 11730                           	movlb	0	; () banked
 11731  001462  0100               	movf	((main@meAtuadores))&0ffh,w
 11732  001464  51AF               	btfss	status,2
 11733  001466  A4D8               	goto	u5551
 11734  001468  EF38  F00A         	goto	u5550
 11735  00146C  EF3A  F00A         u5551:
 11736  001470                     	goto	l6807
 11737  001470  EF4D  F00A         u5550:
 11738  001474                     	line	514
 11739                           	
 11740                           l6803:; BSR set to: 0
 11741  001474                     
 11742                           ;main.c: 513:                             {;main.c: 514:                                
                                  estado = 16;
 11743                           	movlw	low(010h)
 11744  001474  0E10               	movwf	((main@estado))&0ffh
 11745  001476  6FBB               	line	515
 11746                           	
 11747                           l6805:; BSR set to: 0
 11748  001478                     
 11749                           ;main.c: 515:                                 IHM.clr();
 11750                           	lfsr	2,(_IHM)+08h
 11751  001478  EE20  F059         	call	u5568
 11752  00147C  D802               	goto	u5569
 11753  00147E  EF4B  F00A         u5568:
 11754  001482                     	push
 11755  001482  0005               	movwf	pclath
 11756  001484  6EFA               	movf	postinc2,w
 11757  001486  50DE               	movwf	tosl
 11758  001488  6EFD               	movf	postinc2,w
 11759  00148A  50DE               	movwf	tosl+1
 11760  00148C  6EFE               	movf	tblptru,w
 11761  00148E  50F8               	movwf	tosl+2
 11762  001490  6EFF               	movf	pclath,w
 11763  001492  50FA               	
 11764                           	return	;indir
 11765  001494  0012               	u5569:
 11766  001496                     	goto	l6807
 11767  001496  EF4D  F00A         	line	516
 11768                           ;main.c: 516:                             }
 11769                           	
 11770                           l349:
 11771  00149A                     	line	517
 11772                           	
 11773                           l6807:
 11774  00149A                     ;main.c: 517:                             tecla = teclado_borda();
 11775                           	call	_teclado_borda
 11776  00149A  EC25  F020         	movlb	0	; () banked
 11777  00149E  0100               	movwf	((main@tecla))&0ffh
 11778  0014A0  6FBC               	line	518
 11779                           ;main.c: 518:                             switch(tecla)
 11780                           	goto	l6821
 11781  0014A2  EF70  F00A         	line	520
 11782                           ;main.c: 519:                             {;main.c: 520:                                
                                  case '#':
 11783                           	
 11784                           l351:; BSR set to: 0
 11785  0014A6                     
 11786                           	line	521
 11787                           	
 11788                           l6809:; BSR set to: 0
 11789  0014A6                     
 11790                           ;main.c: 521:                                     botao = 1;
 11791                           	movlw	low(01h)
 11792  0014A6  0E01               	movwf	((main@botao))&0ffh
 11793  0014A8  6FB3               	line	522
 11794                           ;main.c: 522:                                     break;
 11795                           	goto	l7035
 11796  0014AA  EF65  F00F         	line	524
 11797                           ;main.c: 524:                                 case '5':
 11798                           	
 11799                           l353:; BSR set to: 0
 11800  0014AE                     
 11801                           	line	525
 11802                           	
 11803                           l6811:; BSR set to: 0
 11804  0014AE                     
 11805                           ;main.c: 525:                                     botao = 2;
 11806                           	movlw	low(02h)
 11807  0014AE  0E02               	movwf	((main@botao))&0ffh
 11808  0014B0  6FB3               	line	526
 11809                           ;main.c: 526:                                     break;
 11810                           	goto	l7035
 11811  0014B2  EF65  F00F         	line	528
 11812                           ;main.c: 528:                                 case '0':
 11813                           	
 11814                           l354:; BSR set to: 0
 11815  0014B6                     
 11816                           	line	529
 11817                           	
 11818                           l6813:; BSR set to: 0
 11819  0014B6                     
 11820                           ;main.c: 529:                                     botao = 0;
 11821                           	movlw	low(0)
 11822  0014B6  0E00               	movwf	((main@botao))&0ffh
 11823  0014B8  6FB3               	line	530
 11824                           ;main.c: 530:                                     break;
 11825                           	goto	l7035
 11826  0014BA  EF65  F00F         	line	532
 11827                           ;main.c: 532:                                 case '1':
 11828                           	
 11829                           l355:; BSR set to: 0
 11830  0014BE                     
 11831                           	line	533
 11832                           	
 11833                           l6815:; BSR set to: 0
 11834  0014BE                     
 11835                           ;main.c: 533:                                     if(botao == 2)
 11836                           		movlw	2
 11837  0014BE  0E02               	xorwf	((main@botao))&0ffh,w
 11838  0014C0  19B3               	btfss	status,2
 11839  0014C2  A4D8               	goto	u5571
 11840  0014C4  EF66  F00A         	goto	u5570
 11841  0014C8  EF68  F00A         
 11842                           u5571:
 11843  0014CC                     	goto	l7035
 11844  0014CC  EF65  F00F         u5570:
 11845  0014D0                     	line	534
 11846                           	
 11847                           l6817:; BSR set to: 0
 11848  0014D0                     
 11849                           ;main.c: 534:                                         botao = 3;
 11850                           	movlw	low(03h)
 11851  0014D0  0E03               	movwf	((main@botao))&0ffh
 11852  0014D2  6FB3               	goto	l7035
 11853  0014D4  EF65  F00F         	
 11854                           l356:; BSR set to: 0
 11855  0014D8                     
 11856                           	line	535
 11857                           ;main.c: 535:                                     break;
 11858                           	goto	l7035
 11859  0014D8  EF65  F00F         	line	536
 11860                           	
 11861                           l6819:; BSR set to: 0
 11862  0014DC                     
 11863                           ;main.c: 536:                             }
 11864                           	goto	l7035
 11865  0014DC  EF65  F00F         	
 11866                           l350:; BSR set to: 0
 11867  0014E0                     
 11868                           	
 11869                           l6821:; BSR set to: 0
 11870  0014E0                     
 11871                           	movf	((main@tecla))&0ffh,w
 11872  0014E0  51BC               	movwf	(??_main+0+0)&0ffh,c
 11873  0014E2  6E45               	clrf	(??_main+0+0+1)&0ffh,c
 11874  0014E4  6A46               
 11875                           	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
 11876                           ; Switch size 1, requested type "space"
 11877                           ; Number of cases is 1, Range of values is 0 to 0
 11878                           ; switch strategies available:
 11879                           ; Name         Instructions Cycles
 11880                           ; simple_byte            4     3 (average)
 11881                           ;	Chosen strategy is simple_byte
 11882                           
 11883                           	movf ??_main+0+1,c,w
 11884  0014E6  5046               	xorlw	0^0	; case 0
 11885  0014E8  0A00               	skipnz
 11886  0014EA  B4D8               	goto	l7955
 11887  0014EC  EF7A  F00A         	goto	l7035
 11888  0014F0  EF65  F00F         	
 11889                           l7955:; BSR set to: 0
 11890  0014F4                     
 11891                           ; Switch size 1, requested type "space"
 11892                           ; Number of cases is 4, Range of values is 35 to 53
 11893                           ; switch strategies available:
 11894                           ; Name         Instructions Cycles
 11895                           ; simple_byte           13     7 (average)
 11896                           ;	Chosen strategy is simple_byte
 11897                           
 11898                           	movf ??_main+0+0,c,w
 11899  0014F4  5045               	xorlw	35^0	; case 35
 11900  0014F6  0A23               	skipnz
 11901  0014F8  B4D8               	goto	l6809
 11902  0014FA  EF53  F00A         	xorlw	48^35	; case 48
 11903  0014FE  0A13               	skipnz
 11904  001500  B4D8               	goto	l6813
 11905  001502  EF5B  F00A         	xorlw	49^48	; case 49
 11906  001506  0A01               	skipnz
 11907  001508  B4D8               	goto	l6815
 11908  00150A  EF5F  F00A         	xorlw	53^49	; case 53
 11909  00150E  0A04               	skipnz
 11910  001510  B4D8               	goto	l6811
 11911  001512  EF57  F00A         	goto	l7035
 11912  001516  EF65  F00F         
 11913                           	
 11914                           l352:; BSR set to: 0
 11915  00151A                     
 11916                           	line	537
 11917                           ;main.c: 537:                             break;
 11918                           	goto	l7035
 11919  00151A  EF65  F00F         	line	539
 11920                           ;main.c: 539:              case 40:
 11921                           	
 11922                           l357:; BSR set to: 0
 11923  00151E                     
 11924                           	line	540
 11925                           	
 11926                           l6823:; BSR set to: 0
 11927  00151E                     
 11928                           ;main.c: 540:                             tecla = teclado_borda();
 11929                           	call	_teclado_borda	;wreg free
 11930  00151E  EC25  F020         	movlb	0	; () banked
 11931  001522  0100               	movwf	((main@tecla))&0ffh
 11932  001524  6FBC               	line	541
 11933                           	
 11934                           l6825:; BSR set to: 0
 11935  001526                     
 11936                           ;main.c: 541:                             if(tecla >= '0' && tecla <= '9')
 11937                           		movlw	030h-1
 11938  001526  0E2F               	cpfsgt	((main@tecla))&0ffh
 11939  001528  65BC               	goto	u5581
 11940  00152A  EF99  F00A         	goto	u5580
 11941  00152E  EF9B  F00A         
 11942                           u5581:
 11943  001532                     	goto	l6835
 11944  001532  EFBE  F00A         u5580:
 11945  001536                     	
 11946                           l6827:; BSR set to: 0
 11947  001536                     
 11948                           		movlw	03Ah-0
 11949  001536  0E3A               	cpfslt	((main@tecla))&0ffh
 11950  001538  61BC               	goto	u5591
 11951  00153A  EFA1  F00A         	goto	u5590
 11952  00153E  EFA3  F00A         
 11953                           u5591:
 11954  001542                     	goto	l6835
 11955  001542  EFBE  F00A         u5590:
 11956  001546                     	line	543
 11957                           	
 11958                           l6829:; BSR set to: 0
 11959  001546                     
 11960                           ;main.c: 542:                             {;main.c: 543:                                
                                  dignum_conc(tecla, &num);
 11961                           		movlw	low(main@num)
 11962  001546  0EB4               	movwf	((c:dignum_conc@ptrNum)),c
 11963  001548  6E2D               	movlw	high(main@num)
 11964  00154A  0E00               	movwf	((c:dignum_conc@ptrNum+1)),c
 11965  00154C  6E2E               
 11966                           	movf	((main@tecla))&0ffh,w
 11967  00154E  51BC               	
 11968                           	call	_dignum_conc
 11969  001550  ECB6  F01F         	line	544
 11970                           	
 11971                           l6831:
 11972  001554                     ;main.c: 544:                                 if(num > 120)
 11973                           	movlb	0	; () banked
 11974  001554  0100               		movf	((main@num+1))&0ffh,w
 11975  001556  51B5               	bnz	u5600
 11976  001558  E109               	movlw	121
 11977  00155A  0E79               	subwf	 ((main@num))&0ffh,w
 11978  00155C  5DB4               	btfss	status,0
 11979  00155E  A0D8               	goto	u5601
 11980  001560  EFB4  F00A         	goto	u5600
 11981  001564  EFB6  F00A         
 11982                           u5601:
 11983  001568                     	goto	l359
 11984  001568  EFBA  F00A         u5600:
 11985  00156C                     	line	545
 11986                           	
 11987                           l6833:; BSR set to: 0
 11988  00156C                     
 11989                           ;main.c: 545:                                     num = 120;
 11990                           	movlw	high(078h)
 11991  00156C  0E00               	movwf	((main@num+1))&0ffh
 11992  00156E  6FB5               	movlw	low(078h)
 11993  001570  0E78               	movwf	((main@num))&0ffh
 11994  001572  6FB4               	
 11995                           l359:; BSR set to: 0
 11996  001574                     
 11997                           	line	546
 11998                           ;main.c: 546:                                 estado = 41;
 11999                           	movlw	low(029h)
 12000  001574  0E29               	movwf	((main@estado))&0ffh
 12001  001576  6FBB               	goto	l6835
 12002  001578  EFBE  F00A         	line	547
 12003                           ;main.c: 547:                             }
 12004                           	
 12005                           l358:; BSR set to: 0
 12006  00157C                     
 12007                           	line	548
 12008                           	
 12009                           l6835:; BSR set to: 0
 12010  00157C                     
 12011                           ;main.c: 548:                             if(tecla == '*')
 12012                           		movlw	42
 12013  00157C  0E2A               	xorwf	((main@tecla))&0ffh,w
 12014  00157E  19BC               	btfss	status,2
 12015  001580  A4D8               	goto	u5611
 12016  001582  EFC5  F00A         	goto	u5610
 12017  001586  EFC7  F00A         
 12018                           u5611:
 12019  00158A                     	goto	l6841
 12020  00158A  EFD2  F00A         u5610:
 12021  00158E                     	line	550
 12022                           	
 12023                           l6837:; BSR set to: 0
 12024  00158E                     
 12025                           ;main.c: 549:                             {;main.c: 550:                                
                                  dignum_apagar(&num);
 12026                           		movlw	low(main@num)
 12027  00158E  0EB4               	movwf	((c:dignum_apagar@ptrNum)),c
 12028  001590  6E2E               	movlw	high(main@num)
 12029  001592  0E00               	movwf	((c:dignum_apagar@ptrNum+1)),c
 12030  001594  6E2F               
 12031                           	call	_dignum_apagar	;wreg free
 12032  001596  EC48  F021         	line	551
 12033                           	
 12034                           l6839:
 12035  00159A                     ;main.c: 551:                                 estado = 41;
 12036                           	movlw	low(029h)
 12037  00159A  0E29               	movlb	0	; () banked
 12038  00159C  0100               	movwf	((main@estado))&0ffh
 12039  00159E  6FBB               	goto	l6841
 12040  0015A0  EFD2  F00A         	line	552
 12041                           ;main.c: 552:                             }
 12042                           	
 12043                           l360:; BSR set to: 0
 12044  0015A4                     
 12045                           	line	553
 12046                           	
 12047                           l6841:; BSR set to: 0
 12048  0015A4                     
 12049                           ;main.c: 553:                             if(tecla == '#')
 12050                           		movlw	35
 12051  0015A4  0E23               	xorwf	((main@tecla))&0ffh,w
 12052  0015A6  19BC               	btfss	status,2
 12053  0015A8  A4D8               	goto	u5621
 12054  0015AA  EFD9  F00A         	goto	u5620
 12055  0015AE  EFDB  F00A         
 12056                           u5621:
 12057  0015B2                     	goto	l7035
 12058  0015B2  EF65  F00F         u5620:
 12059  0015B6                     	line	554
 12060                           	
 12061                           l6843:; BSR set to: 0
 12062  0015B6                     
 12063                           ;main.c: 554:                                 estado = 42;
 12064                           	movlw	low(02Ah)
 12065  0015B6  0E2A               	movwf	((main@estado))&0ffh
 12066  0015B8  6FBB               	goto	l7035
 12067  0015BA  EF65  F00F         	
 12068                           l361:; BSR set to: 0
 12069  0015BE                     
 12070                           	line	555
 12071                           ;main.c: 555:                             break;
 12072                           	goto	l7035
 12073  0015BE  EF65  F00F         	line	557
 12074                           ;main.c: 557:              case 41:
 12075                           	
 12076                           l362:; BSR set to: 0
 12077  0015C2                     
 12078                           	line	559
 12079                           	
 12080                           l6845:; BSR set to: 0
 12081  0015C2                     
 12082                           ;main.c: 559:                             IHM.printpos(2, 0, "config tempo:      s");
 12083                           	lfsr	2,(_IHM)+04h
 12084  0015C2  EE20  F055         	call	u5638
 12085  0015C6  D802               	goto	u5639
 12086  0015C8  EFF7  F00A         u5638:
 12087  0015CC                     	push
 12088  0015CC  0005               	movwf	pclath
 12089  0015CE  6EFA               	movf	postinc2,w
 12090  0015D0  50DE               	movwf	tosl
 12091  0015D2  6EFD               	movf	postinc2,w
 12092  0015D4  50DE               	movwf	tosl+1
 12093  0015D6  6EFE               	movf	tblptru,w
 12094  0015D8  50F8               	movwf	tosl+2
 12095  0015DA  6EFF               	movf	pclath,w
 12096  0015DC  50FA               	
 12097                           	movlw	low(0)
 12098  0015DE  0E00               	movwf	((c:dispLCD@col)),c
 12099  0015E0  6E2E               		movlw	low(STR_23)
 12100  0015E2  0E54               	movwf	((c:dispLCD@str)),c
 12101  0015E4  6E2F               	movlw	high(STR_23)
 12102  0015E6  0E7F               	movwf	((c:dispLCD@str+1)),c
 12103  0015E8  6E30               
 12104                           	movlw	(02h)&0ffh
 12105  0015EA  0E02               	
 12106                           	return	;indir
 12107  0015EC  0012               	u5639:
 12108  0015EE                     	line	560
 12109                           	
 12110                           l6847:
 12111  0015EE                     ;main.c: 560:                             IHM.printv(2, 15, num, 3);
 12112                           	lfsr	2,(_IHM)+06h
 12113  0015EE  EE20  F057         	call	u5648
 12114  0015F2  D802               	goto	u5649
 12115  0015F4  EF0F  F00B         u5648:
 12116  0015F8                     	push
 12117  0015F8  0005               	movwf	pclath
 12118  0015FA  6EFA               	movf	postinc2,w
 12119  0015FC  50DE               	movwf	tosl
 12120  0015FE  6EFD               	movf	postinc2,w
 12121  001600  50DE               	movwf	tosl+1
 12122  001602  6EFE               	movf	tblptru,w
 12123  001604  50F8               	movwf	tosl+2
 12124  001606  6EFF               	movf	pclath,w
 12125  001608  50FA               	
 12126                           	movlw	low(0Fh)
 12127  00160A  0E0F               	movwf	((c:dispLCD_num@col)),c
 12128  00160C  6E32               	movff	(main@num),(c:dispLCD_num@num)
 12129  00160E  C0B4  F033         	movff	(main@num+1),(c:dispLCD_num@num+1)
 12130  001612  C0B5  F034         	movlw	low(03h)
 12131  001616  0E03               	movwf	((c:dispLCD_num@tam)),c
 12132  001618  6E35               	movlw	(02h)&0ffh
 12133  00161A  0E02               	
 12134                           	return	;indir
 12135  00161C  0012               	u5649:
 12136  00161E                     	line	561
 12137                           	
 12138                           l6849:
 12139  00161E                     ;main.c: 561:                             estado = 40;
 12140                           	movlw	low(028h)
 12141  00161E  0E28               	movlb	0	; () banked
 12142  001620  0100               	movwf	((main@estado))&0ffh
 12143  001622  6FBB               	line	562
 12144                           ;main.c: 562:                             break;
 12145                           	goto	l7035
 12146  001624  EF65  F00F         	line	564
 12147                           ;main.c: 564:              case 42:
 12148                           	
 12149                           l363:; BSR set to: 0
 12150  001628                     
 12151                           	line	565
 12152                           	
 12153                           l6851:; BSR set to: 0
 12154  001628                     
 12155                           ;main.c: 565:                             fifo_add_tempo(num);
 12156                           	movf	((main@num))&0ffh,w
 12157  001628  51B4               	
 12158                           	call	_fifo_add_tempo
 12159  00162A  EC86  F01D         	line	566
 12160                           	
 12161                           l6853:
 12162  00162E                     ;main.c: 566:                             IHM.clr();
 12163                           	lfsr	2,(_IHM)+08h
 12164  00162E  EE20  F059         	call	u5658
 12165  001632  D802               	goto	u5659
 12166  001634  EF26  F00B         u5658:
 12167  001638                     	push
 12168  001638  0005               	movwf	pclath
 12169  00163A  6EFA               	movf	postinc2,w
 12170  00163C  50DE               	movwf	tosl
 12171  00163E  6EFD               	movf	postinc2,w
 12172  001640  50DE               	movwf	tosl+1
 12173  001642  6EFE               	movf	tblptru,w
 12174  001644  50F8               	movwf	tosl+2
 12175  001646  6EFF               	movf	pclath,w
 12176  001648  50FA               	
 12177                           	return	;indir
 12178  00164A  0012               	u5659:
 12179  00164C                     	line	567
 12180                           	
 12181                           l6855:
 12182  00164C                     ;main.c: 567:                             estado = 16;
 12183                           	movlw	low(010h)
 12184  00164C  0E10               	movlb	0	; () banked
 12185  00164E  0100               	movwf	((main@estado))&0ffh
 12186  001650  6FBB               	line	568
 12187                           ;main.c: 568:                             break;
 12188                           	goto	l7035
 12189  001652  EF65  F00F         	line	598
 12190                           ;main.c: 598:              case 52:
 12191                           	
 12192                           l364:; BSR set to: 0
 12193  001656                     
 12194                           	line	599
 12195                           	
 12196                           l6857:; BSR set to: 0
 12197  001656                     
 12198                           ;main.c: 599:                             tecla = teclado_borda();
 12199                           	call	_teclado_borda	;wreg free
 12200  001656  EC25  F020         	movlb	0	; () banked
 12201  00165A  0100               	movwf	((main@tecla))&0ffh
 12202  00165C  6FBC               	line	600
 12203                           	
 12204                           l6859:; BSR set to: 0
 12205  00165E                     
 12206                           ;main.c: 600:                             if(tecla >= '0' && tecla <= '9')
 12207                           		movlw	030h-1
 12208  00165E  0E2F               	cpfsgt	((main@tecla))&0ffh
 12209  001660  65BC               	goto	u5661
 12210  001662  EF35  F00B         	goto	u5660
 12211  001666  EF37  F00B         
 12212                           u5661:
 12213  00166A                     	goto	l6881
 12214  00166A  EF7A  F00B         u5660:
 12215  00166E                     	
 12216                           l6861:; BSR set to: 0
 12217  00166E                     
 12218                           		movlw	03Ah-0
 12219  00166E  0E3A               	cpfslt	((main@tecla))&0ffh
 12220  001670  61BC               	goto	u5671
 12221  001672  EF3D  F00B         	goto	u5670
 12222  001676  EF3F  F00B         
 12223                           u5671:
 12224  00167A                     	goto	l6881
 12225  00167A  EF7A  F00B         u5670:
 12226  00167E                     	line	602
 12227                           	
 12228                           l6863:; BSR set to: 0
 12229  00167E                     
 12230                           ;main.c: 601:                                {;main.c: 602:                             
                                     dignum_conc(tecla, &ciclos);
 12231                           		movlw	low(main@ciclos)
 12232  00167E  0EB0               	movwf	((c:dignum_conc@ptrNum)),c
 12233  001680  6E2D               	movlw	high(main@ciclos)
 12234  001682  0E00               	movwf	((c:dignum_conc@ptrNum+1)),c
 12235  001684  6E2E               
 12236                           	movf	((main@tecla))&0ffh,w
 12237  001686  51BC               	
 12238                           	call	_dignum_conc
 12239  001688  ECB6  F01F         	line	603
 12240                           	
 12241                           l6865:
 12242  00168C                     ;main.c: 603:                                 if(ciclos > 10000)
 12243                           		movlw	17
 12244  00168C  0E11               	movlb	0	; () banked
 12245  00168E  0100               	subwf	 ((main@ciclos))&0ffh,w
 12246  001690  5DB0               	movlw	39
 12247  001692  0E27               	subwfb	((main@ciclos+1))&0ffh,w
 12248  001694  59B1               	btfss	status,0
 12249  001696  A0D8               	goto	u5681
 12250  001698  EF50  F00B         	goto	u5680
 12251  00169C  EF52  F00B         
 12252                           u5681:
 12253  0016A0                     	goto	l366
 12254  0016A0  EF56  F00B         u5680:
 12255  0016A4                     	line	604
 12256                           	
 12257                           l6867:; BSR set to: 0
 12258  0016A4                     
 12259                           ;main.c: 604:                                     ciclos = 10000;
 12260                           	movlw	high(02710h)
 12261  0016A4  0E27               	movwf	((main@ciclos+1))&0ffh
 12262  0016A6  6FB1               	movlw	low(02710h)
 12263  0016A8  0E10               	movwf	((main@ciclos))&0ffh
 12264  0016AA  6FB0               	
 12265                           l366:; BSR set to: 0
 12266  0016AC                     
 12267                           	line	605
 12268                           ;main.c: 605:                                 estado = 53;
 12269                           	movlw	low(035h)
 12270  0016AC  0E35               	movwf	((main@estado))&0ffh
 12271  0016AE  6FBB               	line	606
 12272                           ;main.c: 606:                                 break;
 12273                           	goto	l7035
 12274  0016B0  EF65  F00F         	line	607
 12275                           ;main.c: 607:                                }
 12276                           	
 12277                           l365:; BSR set to: 0
 12278  0016B4                     
 12279                           	line	608
 12280                           ;main.c: 608:                             switch(tecla)
 12281                           	goto	l6881
 12282  0016B4  EF7A  F00B         	line	610
 12283                           ;main.c: 609:                                {;main.c: 610:                             
                                        case 'A':
 12284                           	
 12285                           l368:; BSR set to: 0
 12286  0016B8                     
 12287                           	goto	l6869
 12288  0016B8  EF62  F00B         	line	611
 12289                           ;main.c: 611:                                    case 'B':
 12290                           	
 12291                           l369:; BSR set to: 0
 12292  0016BC                     
 12293                           	goto	l6869
 12294  0016BC  EF62  F00B         	line	612
 12295                           ;main.c: 612:                                    case 'C':
 12296                           	
 12297                           l370:; BSR set to: 0
 12298  0016C0                     
 12299                           	goto	l6869
 12300  0016C0  EF62  F00B         	line	613
 12301                           ;main.c: 613:                                    case 'D':
 12302                           	
 12303                           l371:; BSR set to: 0
 12304  0016C4                     
 12305                           	line	614
 12306                           	
 12307                           l6869:; BSR set to: 0
 12308  0016C4                     
 12309                           ;main.c: 614:                                        dispLCD_clr();
 12310                           	call	_dispLCD_clr	;wreg free
 12311  0016C4  ECBE  F022         	line	615
 12312                           	
 12313                           l6871:
 12314  0016C8                     ;main.c: 615:                                        estado = 16;
 12315                           	movlw	low(010h)
 12316  0016C8  0E10               	movlb	0	; () banked
 12317  0016CA  0100               	movwf	((main@estado))&0ffh
 12318  0016CC  6FBB               	line	616
 12319                           ;main.c: 616:                                        break;
 12320                           	goto	l7035
 12321  0016CE  EF65  F00F         	line	617
 12322                           ;main.c: 617:                                    case '#':
 12323                           	
 12324                           l373:; BSR set to: 0
 12325  0016D2                     
 12326                           	line	618
 12327                           	
 12328                           l6873:; BSR set to: 0
 12329  0016D2                     
 12330                           ;main.c: 618:                                        estado = 54;
 12331                           	movlw	low(036h)
 12332  0016D2  0E36               	movwf	((main@estado))&0ffh
 12333  0016D4  6FBB               	line	619
 12334                           ;main.c: 619:                                        break;
 12335                           	goto	l7035
 12336  0016D6  EF65  F00F         	line	620
 12337                           ;main.c: 620:                                    case '*':
 12338                           	
 12339                           l374:; BSR set to: 0
 12340  0016DA                     
 12341                           	line	621
 12342                           	
 12343                           l6875:; BSR set to: 0
 12344  0016DA                     
 12345                           ;main.c: 621:                                        dignum_apagar(&ciclos);
 12346                           		movlw	low(main@ciclos)
 12347  0016DA  0EB0               	movwf	((c:dignum_apagar@ptrNum)),c
 12348  0016DC  6E2E               	movlw	high(main@ciclos)
 12349  0016DE  0E00               	movwf	((c:dignum_apagar@ptrNum+1)),c
 12350  0016E0  6E2F               
 12351                           	call	_dignum_apagar	;wreg free
 12352  0016E2  EC48  F021         	line	622
 12353                           	
 12354                           l6877:
 12355  0016E6                     ;main.c: 622:                                        estado = 53;
 12356                           	movlw	low(035h)
 12357  0016E6  0E35               	movlb	0	; () banked
 12358  0016E8  0100               	movwf	((main@estado))&0ffh
 12359  0016EA  6FBB               	line	623
 12360                           ;main.c: 623:                                        break;
 12361                           	goto	l7035
 12362  0016EC  EF65  F00F         	line	624
 12363                           	
 12364                           l6879:; BSR set to: 0
 12365  0016F0                     
 12366                           ;main.c: 624:                                }
 12367                           	goto	l7035
 12368  0016F0  EF65  F00F         	
 12369                           l367:; BSR set to: 0
 12370  0016F4                     
 12371                           	
 12372                           l6881:; BSR set to: 0
 12373  0016F4                     
 12374                           	movf	((main@tecla))&0ffh,w
 12375  0016F4  51BC               	movwf	(??_main+0+0)&0ffh,c
 12376  0016F6  6E45               	clrf	(??_main+0+0+1)&0ffh,c
 12377  0016F8  6A46               
 12378                           	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
 12379                           ; Switch size 1, requested type "space"
 12380                           ; Number of cases is 1, Range of values is 0 to 0
 12381                           ; switch strategies available:
 12382                           ; Name         Instructions Cycles
 12383                           ; simple_byte            4     3 (average)
 12384                           ;	Chosen strategy is simple_byte
 12385                           
 12386                           	movf ??_main+0+1,c,w
 12387  0016FA  5046               	xorlw	0^0	; case 0
 12388  0016FC  0A00               	skipnz
 12389  0016FE  B4D8               	goto	l7957
 12390  001700  EF84  F00B         	goto	l7035
 12391  001704  EF65  F00F         	
 12392                           l7957:; BSR set to: 0
 12393  001708                     
 12394                           ; Switch size 1, requested type "space"
 12395                           ; Number of cases is 6, Range of values is 35 to 68
 12396                           ; switch strategies available:
 12397                           ; Name         Instructions Cycles
 12398                           ; simple_byte           19    10 (average)
 12399                           ;	Chosen strategy is simple_byte
 12400                           
 12401                           	movf ??_main+0+0,c,w
 12402  001708  5045               	xorlw	35^0	; case 35
 12403  00170A  0A23               	skipnz
 12404  00170C  B4D8               	goto	l6873
 12405  00170E  EF69  F00B         	xorlw	42^35	; case 42
 12406  001712  0A09               	skipnz
 12407  001714  B4D8               	goto	l6875
 12408  001716  EF6D  F00B         	xorlw	65^42	; case 65
 12409  00171A  0A6B               	skipnz
 12410  00171C  B4D8               	goto	l6869
 12411  00171E  EF62  F00B         	xorlw	66^65	; case 66
 12412  001722  0A03               	skipnz
 12413  001724  B4D8               	goto	l6869
 12414  001726  EF62  F00B         	xorlw	67^66	; case 67
 12415  00172A  0A01               	skipnz
 12416  00172C  B4D8               	goto	l6869
 12417  00172E  EF62  F00B         	xorlw	68^67	; case 68
 12418  001732  0A07               	skipnz
 12419  001734  B4D8               	goto	l6869
 12420  001736  EF62  F00B         	goto	l7035
 12421  00173A  EF65  F00F         
 12422                           	
 12423                           l372:; BSR set to: 0
 12424  00173E                     
 12425                           	line	625
 12426                           ;main.c: 625:                             break;
 12427                           	goto	l7035
 12428  00173E  EF65  F00F         	line	627
 12429                           ;main.c: 627:              case 53:
 12430                           	
 12431                           l375:; BSR set to: 0
 12432  001742                     
 12433                           	line	628
 12434                           	
 12435                           l6883:; BSR set to: 0
 12436  001742                     
 12437                           ;main.c: 628:                             IHM.clr();
 12438                           	lfsr	2,(_IHM)+08h
 12439  001742  EE20  F059         	call	u5698
 12440  001746  D802               	goto	u5699
 12441  001748  EFB0  F00B         u5698:
 12442  00174C                     	push
 12443  00174C  0005               	movwf	pclath
 12444  00174E  6EFA               	movf	postinc2,w
 12445  001750  50DE               	movwf	tosl
 12446  001752  6EFD               	movf	postinc2,w
 12447  001754  50DE               	movwf	tosl+1
 12448  001756  6EFE               	movf	tblptru,w
 12449  001758  50F8               	movwf	tosl+2
 12450  00175A  6EFF               	movf	pclath,w
 12451  00175C  50FA               	
 12452                           	return	;indir
 12453  00175E  0012               	u5699:
 12454  001760                     	line	629
 12455                           	
 12456                           l6885:
 12457  001760                     ;main.c: 629:                             IHM.printpos(0, 0, "Ciclos:             ");
 12458                           	lfsr	2,(_IHM)+04h
 12459  001760  EE20  F055         	call	u5708
 12460  001764  D802               	goto	u5709
 12461  001766  EFC6  F00B         u5708:
 12462  00176A                     	push
 12463  00176A  0005               	movwf	pclath
 12464  00176C  6EFA               	movf	postinc2,w
 12465  00176E  50DE               	movwf	tosl
 12466  001770  6EFD               	movf	postinc2,w
 12467  001772  50DE               	movwf	tosl+1
 12468  001774  6EFE               	movf	tblptru,w
 12469  001776  50F8               	movwf	tosl+2
 12470  001778  6EFF               	movf	pclath,w
 12471  00177A  50FA               	
 12472                           	movlw	low(0)
 12473  00177C  0E00               	movwf	((c:dispLCD@col)),c
 12474  00177E  6E2E               		movlw	low(STR_24)
 12475  001780  0EC5               	movwf	((c:dispLCD@str)),c
 12476  001782  6E2F               	movlw	high(STR_24)
 12477  001784  0E7D               	movwf	((c:dispLCD@str+1)),c
 12478  001786  6E30               
 12479                           	movlw	(0)&0ffh
 12480  001788  0E00               	
 12481                           	return	;indir
 12482  00178A  0012               	u5709:
 12483  00178C                     	line	630
 12484                           	
 12485                           l6887:
 12486  00178C                     ;main.c: 630:                             IHM.printv(0, 15, ciclos, 5);
 12487                           	lfsr	2,(_IHM)+06h
 12488  00178C  EE20  F057         	call	u5718
 12489  001790  D802               	goto	u5719
 12490  001792  EFDE  F00B         u5718:
 12491  001796                     	push
 12492  001796  0005               	movwf	pclath
 12493  001798  6EFA               	movf	postinc2,w
 12494  00179A  50DE               	movwf	tosl
 12495  00179C  6EFD               	movf	postinc2,w
 12496  00179E  50DE               	movwf	tosl+1
 12497  0017A0  6EFE               	movf	tblptru,w
 12498  0017A2  50F8               	movwf	tosl+2
 12499  0017A4  6EFF               	movf	pclath,w
 12500  0017A6  50FA               	
 12501                           	movlw	low(0Fh)
 12502  0017A8  0E0F               	movwf	((c:dispLCD_num@col)),c
 12503  0017AA  6E32               	movff	(main@ciclos),(c:dispLCD_num@num)
 12504  0017AC  C0B0  F033         	movff	(main@ciclos+1),(c:dispLCD_num@num+1)
 12505  0017B0  C0B1  F034         	movlw	low(05h)
 12506  0017B4  0E05               	movwf	((c:dispLCD_num@tam)),c
 12507  0017B6  6E35               	movlw	(0)&0ffh
 12508  0017B8  0E00               	
 12509                           	return	;indir
 12510  0017BA  0012               	u5719:
 12511  0017BC                     	line	631
 12512                           ;main.c: 631:                             IHM.printpos(2, 0, "0 - Ciclo continuo  ");
 12513                           	lfsr	2,(_IHM)+04h
 12514  0017BC  EE20  F055         	call	u5728
 12515  0017C0  D802               	goto	u5729
 12516  0017C2  EFF4  F00B         u5728:
 12517  0017C6                     	push
 12518  0017C6  0005               	movwf	pclath
 12519  0017C8  6EFA               	movf	postinc2,w
 12520  0017CA  50DE               	movwf	tosl
 12521  0017CC  6EFD               	movf	postinc2,w
 12522  0017CE  50DE               	movwf	tosl+1
 12523  0017D0  6EFE               	movf	tblptru,w
 12524  0017D2  50F8               	movwf	tosl+2
 12525  0017D4  6EFF               	movf	pclath,w
 12526  0017D6  50FA               	
 12527                           	movlw	low(0)
 12528  0017D8  0E00               	movwf	((c:dispLCD@col)),c
 12529  0017DA  6E2E               		movlw	low(STR_25)
 12530  0017DC  0E00               	movwf	((c:dispLCD@str)),c
 12531  0017DE  6E2F               	movlw	high(STR_25)
 12532  0017E0  0E7F               	movwf	((c:dispLCD@str+1)),c
 12533  0017E2  6E30               
 12534                           	movlw	(02h)&0ffh
 12535  0017E4  0E02               	
 12536                           	return	;indir
 12537  0017E6  0012               	u5729:
 12538  0017E8                     	line	632
 12539                           	
 12540                           l6889:
 12541  0017E8                     ;main.c: 632:                             estado = 52;
 12542                           	movlw	low(034h)
 12543  0017E8  0E34               	movlb	0	; () banked
 12544  0017EA  0100               	movwf	((main@estado))&0ffh
 12545  0017EC  6FBB               	line	633
 12546                           ;main.c: 633:                             break;
 12547                           	goto	l7035
 12548  0017EE  EF65  F00F         	line	635
 12549                           ;main.c: 635:              case 74:
 12550                           	
 12551                           l376:; BSR set to: 0
 12552  0017F2                     
 12553                           	line	636
 12554                           	
 12555                           l6891:; BSR set to: 0
 12556  0017F2                     
 12557                           ;main.c: 636:                             salvar_dado(10, 10, init_cond);
 12558                           	movlw	low(0Ah)
 12559  0017F2  0E0A               	movwf	((c:salvar_dado@col)),c
 12560  0017F4  6E2D               	movff	(main@init_cond),(c:salvar_dado@data)
 12561  0017F6  C0B2  F02E         	movlw	(0Ah)&0ffh
 12562  0017FA  0E0A               	
 12563                           	call	_salvar_dado
 12564  0017FC  EC9C  F021         	line	637
 12565                           	
 12566                           l6893:
 12567  001800                     ;main.c: 637:                             EEPROM.salvar(11, fifo_adrs() + 2);
 12568                           	call	u5738
 12569  001800  D802               	goto	u5739
 12570  001802  EF16  F00C         u5738:
 12571  001806                     	push
 12572  001806  0005               	
 12573                           	movwf	pclath
 12574  001808  6EFA               	movf	((c:_EEPROM)),c,w
 12575  00180A  5047               	movwf	tosl
 12576  00180C  6EFD               	movf	((c:_EEPROM+1)),c,w
 12577  00180E  5048               	movwf	tosl+1
 12578  001810  6EFE               	movf	tblptru,w
 12579  001812  50F8               	movwf	tosl+2
 12580  001814  6EFF               	movf	pclath,w
 12581  001816  50FA               	
 12582                           	call	_fifo_adrs	;wreg free
 12583  001818  EC92  F022         	movlw	low(02h)
 12584  00181C  0E02               	addwf	(0+?_fifo_adrs),c,w
 12585  00181E  2427               	movwf	((c:salvar_receita@data)),c
 12586  001820  6E2D               	movlw	high(02h)
 12587  001822  0E00               	addwfc	(1+?_fifo_adrs),c,w
 12588  001824  2028               	movwf	1+((c:salvar_receita@data)),c
 12589  001826  6E2E               	movlw	(0Bh)&0ffh
 12590  001828  0E0B               	
 12591                           	return	;indir
 12592  00182A  0012               	u5739:
 12593  00182C                     	line	638
 12594                           	
 12595                           l6895:
 12596  00182C                     ;main.c: 638:                             IHM.print("    DESEJA SALVAR   \n"
 12597                           		movlw	low(STR_26)
 12598  00182C  0E21               	movwf	((c:dispLCD_str@str)),c
 12599  00182E  6E2E               	movlw	high(STR_26)
 12600  001830  0E7D               	movwf	((c:dispLCD_str@str+1)),c
 12601  001832  6E2F               
 12602                           	lfsr	2,(_IHM)+02h
 12603  001834  EE20  F053         	call	u5748
 12604  001838  D802               	goto	u5749
 12605  00183A  EF29  F00C         u5748:
 12606  00183E                     	push
 12607  00183E  0005               	movwf	pclath
 12608  001840  6EFA               	movf	postinc2,w
 12609  001842  50DE               	movwf	tosl
 12610  001844  6EFD               	movf	postinc2,w
 12611  001846  50DE               	movwf	tosl+1
 12612  001848  6EFE               	movf	tblptru,w
 12613  00184A  50F8               	movwf	tosl+2
 12614  00184C  6EFF               	movf	pclath,w
 12615  00184E  50FA               	
 12616                           	return	;indir
 12617  001850  0012               	u5749:
 12618  001852                     	line	642
 12619                           	
 12620                           l6897:
 12621  001852                     ;main.c: 642:                             tecla = teclado_borda();
 12622                           	call	_teclado_borda
 12623  001852  EC25  F020         	movlb	0	; () banked
 12624  001856  0100               	movwf	((main@tecla))&0ffh
 12625  001858  6FBC               	line	643
 12626                           ;main.c: 643:                             switch(tecla)
 12627                           	goto	l6907
 12628  00185A  EF3C  F00C         	line	645
 12629                           ;main.c: 644:                             {;main.c: 645:                                
                                  case '#': estado = 75; break;
 12630                           	
 12631                           l378:; BSR set to: 0
 12632  00185E                     
 12633                           	
 12634                           l6899:; BSR set to: 0
 12635  00185E                     
 12636                           	movlw	low(04Bh)
 12637  00185E  0E4B               	movwf	((main@estado))&0ffh
 12638  001860  6FBB               	goto	l7035
 12639  001862  EF65  F00F         	line	646
 12640                           ;main.c: 646:                                 case '*': dispLCD_clr(); estado = 53; brea
                                 k;
 12641                           	
 12642                           l380:; BSR set to: 0
 12643  001866                     
 12644                           	
 12645                           l6901:; BSR set to: 0
 12646  001866                     
 12647                           	call	_dispLCD_clr	;wreg free
 12648  001866  ECBE  F022         	
 12649                           l6903:
 12650  00186A                     	movlw	low(035h)
 12651  00186A  0E35               	movlb	0	; () banked
 12652  00186C  0100               	movwf	((main@estado))&0ffh
 12653  00186E  6FBB               	goto	l7035
 12654  001870  EF65  F00F         	line	647
 12655                           	
 12656                           l6905:; BSR set to: 0
 12657  001874                     
 12658                           ;main.c: 647:                             }
 12659                           	goto	l7035
 12660  001874  EF65  F00F         	
 12661                           l377:; BSR set to: 0
 12662  001878                     
 12663                           	
 12664                           l6907:; BSR set to: 0
 12665  001878                     
 12666                           	movf	((main@tecla))&0ffh,w
 12667  001878  51BC               	movwf	(??_main+0+0)&0ffh,c
 12668  00187A  6E45               	clrf	(??_main+0+0+1)&0ffh,c
 12669  00187C  6A46               
 12670                           	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
 12671                           ; Switch size 1, requested type "space"
 12672                           ; Number of cases is 1, Range of values is 0 to 0
 12673                           ; switch strategies available:
 12674                           ; Name         Instructions Cycles
 12675                           ; simple_byte            4     3 (average)
 12676                           ;	Chosen strategy is simple_byte
 12677                           
 12678                           	movf ??_main+0+1,c,w
 12679  00187E  5046               	xorlw	0^0	; case 0
 12680  001880  0A00               	skipnz
 12681  001882  B4D8               	goto	l7959
 12682  001884  EF46  F00C         	goto	l7035
 12683  001888  EF65  F00F         	
 12684                           l7959:; BSR set to: 0
 12685  00188C                     
 12686                           ; Switch size 1, requested type "space"
 12687                           ; Number of cases is 2, Range of values is 35 to 42
 12688                           ; switch strategies available:
 12689                           ; Name         Instructions Cycles
 12690                           ; simple_byte            7     4 (average)
 12691                           ;	Chosen strategy is simple_byte
 12692                           
 12693                           	movf ??_main+0+0,c,w
 12694  00188C  5045               	xorlw	35^0	; case 35
 12695  00188E  0A23               	skipnz
 12696  001890  B4D8               	goto	l6899
 12697  001892  EF2F  F00C         	xorlw	42^35	; case 42
 12698  001896  0A09               	skipnz
 12699  001898  B4D8               	goto	l6901
 12700  00189A  EF33  F00C         	goto	l7035
 12701  00189E  EF65  F00F         
 12702                           	
 12703                           l379:; BSR set to: 0
 12704  0018A2                     
 12705                           	line	648
 12706                           ;main.c: 648:                             break;
 12707                           	goto	l7035
 12708  0018A2  EF65  F00F         	line	650
 12709                           ;main.c: 650:              case 75:
 12710                           	
 12711                           l381:; BSR set to: 0
 12712  0018A6                     
 12713                           	line	651
 12714                           	
 12715                           l6909:; BSR set to: 0
 12716  0018A6                     
 12717                           ;main.c: 651:                             IHM.clr();
 12718                           	lfsr	2,(_IHM)+08h
 12719  0018A6  EE20  F059         	call	u5758
 12720  0018AA  D802               	goto	u5759
 12721  0018AC  EF62  F00C         u5758:
 12722  0018B0                     	push
 12723  0018B0  0005               	movwf	pclath
 12724  0018B2  6EFA               	movf	postinc2,w
 12725  0018B4  50DE               	movwf	tosl
 12726  0018B6  6EFD               	movf	postinc2,w
 12727  0018B8  50DE               	movwf	tosl+1
 12728  0018BA  6EFE               	movf	tblptru,w
 12729  0018BC  50F8               	movwf	tosl+2
 12730  0018BE  6EFF               	movf	pclath,w
 12731  0018C0  50FA               	
 12732                           	return	;indir
 12733  0018C2  0012               	u5759:
 12734  0018C4                     	line	652
 12735                           	
 12736                           l6911:
 12737  0018C4                     ;main.c: 652:                             IHM.print(" ESCOLHA A MEMORIA\n"
 12738                           		movlw	low(STR_27)
 12739  0018C4  0ED3               	movwf	((c:dispLCD_str@str)),c
 12740  0018C6  6E2E               	movlw	high(STR_27)
 12741  0018C8  0E7C               	movwf	((c:dispLCD_str@str+1)),c
 12742  0018CA  6E2F               
 12743                           	lfsr	2,(_IHM)+02h
 12744  0018CC  EE20  F053         	call	u5768
 12745  0018D0  D802               	goto	u5769
 12746  0018D2  EF75  F00C         u5768:
 12747  0018D6                     	push
 12748  0018D6  0005               	movwf	pclath
 12749  0018D8  6EFA               	movf	postinc2,w
 12750  0018DA  50DE               	movwf	tosl
 12751  0018DC  6EFD               	movf	postinc2,w
 12752  0018DE  50DE               	movwf	tosl+1
 12753  0018E0  6EFE               	movf	tblptru,w
 12754  0018E2  50F8               	movwf	tosl+2
 12755  0018E4  6EFF               	movf	pclath,w
 12756  0018E6  50FA               	
 12757                           	return	;indir
 12758  0018E8  0012               	u5769:
 12759  0018EA                     	line	656
 12760                           	
 12761                           l6913:
 12762  0018EA                     ;main.c: 656:                             estado = 76;
 12763                           	movlw	low(04Ch)
 12764  0018EA  0E4C               	movlb	0	; () banked
 12765  0018EC  0100               	movwf	((main@estado))&0ffh
 12766  0018EE  6FBB               	goto	l6915
 12767  0018F0  EF7A  F00C         	line	658
 12768                           ;main.c: 658:              case 76:
 12769                           	
 12770                           l382:; BSR set to: 0
 12771  0018F4                     
 12772                           	line	659
 12773                           	
 12774                           l6915:; BSR set to: 0
 12775  0018F4                     
 12776                           ;main.c: 659:                             tecla = teclado_borda();
 12777                           	call	_teclado_borda	;wreg free
 12778  0018F4  EC25  F020         	movlb	0	; () banked
 12779  0018F8  0100               	movwf	((main@tecla))&0ffh
 12780  0018FA  6FBC               	line	660
 12781                           ;main.c: 660:                             switch(tecla)
 12782                           	goto	l6929
 12783  0018FC  EFDC  F00C         	line	662
 12784                           ;main.c: 661:                             {;main.c: 662:                                
                                  case '0':
 12785                           	
 12786                           l384:; BSR set to: 0
 12787  001900                     
 12788                           	goto	l6917
 12789  001900  EF92  F00C         	line	663
 12790                           ;main.c: 663:                                 case '1':
 12791                           	
 12792                           l385:; BSR set to: 0
 12793  001904                     
 12794                           	goto	l6917
 12795  001904  EF92  F00C         	line	664
 12796                           ;main.c: 664:                                 case '2':
 12797                           	
 12798                           l386:; BSR set to: 0
 12799  001908                     
 12800                           	goto	l6917
 12801  001908  EF92  F00C         	line	665
 12802                           ;main.c: 665:                                 case '3':
 12803                           	
 12804                           l387:; BSR set to: 0
 12805  00190C                     
 12806                           	goto	l6917
 12807  00190C  EF92  F00C         	line	666
 12808                           ;main.c: 666:                                 case '4':
 12809                           	
 12810                           l388:; BSR set to: 0
 12811  001910                     
 12812                           	goto	l6917
 12813  001910  EF92  F00C         	line	667
 12814                           ;main.c: 667:                                 case '5':
 12815                           	
 12816                           l389:; BSR set to: 0
 12817  001914                     
 12818                           	goto	l6917
 12819  001914  EF92  F00C         	line	668
 12820                           ;main.c: 668:                                 case '6':
 12821                           	
 12822                           l390:; BSR set to: 0
 12823  001918                     
 12824                           	goto	l6917
 12825  001918  EF92  F00C         	line	669
 12826                           ;main.c: 669:                                 case '7':
 12827                           	
 12828                           l391:; BSR set to: 0
 12829  00191C                     
 12830                           	goto	l6917
 12831  00191C  EF92  F00C         	line	670
 12832                           ;main.c: 670:                                 case '8':
 12833                           	
 12834                           l392:; BSR set to: 0
 12835  001920                     
 12836                           	goto	l6917
 12837  001920  EF92  F00C         	line	671
 12838                           ;main.c: 671:                                 case '9':
 12839                           	
 12840                           l393:; BSR set to: 0
 12841  001924                     
 12842                           	line	672
 12843                           	
 12844                           l6917:; BSR set to: 0
 12845  001924                     
 12846                           ;main.c: 672:                                            salvar_dado(10, tecla % 0x30, i
                                 nit_cond);
 12847                           	movff	(main@tecla),(c:___awmod@dividend)
 12848  001924  C0BC  F027         	clrf	((c:___awmod@dividend+1)),c
 12849  001928  6A28               	movlw	high(030h)
 12850  00192A  0E00               	movwf	((c:___awmod@divisor+1)),c
 12851  00192C  6E2A               	movlw	low(030h)
 12852  00192E  0E30               	movwf	((c:___awmod@divisor)),c
 12853  001930  6E29               	call	___awmod	;wreg free
 12854  001932  EC2E  F019         	movf	(0+?___awmod),c,w
 12855  001936  5027               	movwf	((c:salvar_dado@col)),c
 12856  001938  6E2D               	movff	(main@init_cond),(c:salvar_dado@data)
 12857  00193A  C0B2  F02E         	movlw	(0Ah)&0ffh
 12858  00193E  0E0A               	
 12859                           	call	_salvar_dado
 12860  001940  EC9C  F021         	line	673
 12861                           	
 12862                           l6919:
 12863  001944                     ;main.c: 673:                                            EEPROM.salvar(tecla % 0x30, fif
                                 o_adrs() + 2);
 12864                           	call	u5778
 12865  001944  D802               	goto	u5779
 12866  001946  EFC1  F00C         u5778:
 12867  00194A                     	push
 12868  00194A  0005               	
 12869                           	movwf	pclath
 12870  00194C  6EFA               	movf	((c:_EEPROM)),c,w
 12871  00194E  5047               	movwf	tosl
 12872  001950  6EFD               	movf	((c:_EEPROM+1)),c,w
 12873  001952  5048               	movwf	tosl+1
 12874  001954  6EFE               	movf	tblptru,w
 12875  001956  50F8               	movwf	tosl+2
 12876  001958  6EFF               	movf	pclath,w
 12877  00195A  50FA               	
 12878                           	call	_fifo_adrs	;wreg free
 12879  00195C  EC92  F022         	movlw	low(02h)
 12880  001960  0E02               	addwf	(0+?_fifo_adrs),c,w
 12881  001962  2427               	movwf	((c:salvar_receita@data)),c
 12882  001964  6E2D               	movlw	high(02h)
 12883  001966  0E00               	addwfc	(1+?_fifo_adrs),c,w
 12884  001968  2028               	movwf	1+((c:salvar_receita@data)),c
 12885  00196A  6E2E               	movff	(main@tecla),(c:___awmod@dividend)
 12886  00196C  C0BC  F027         	clrf	((c:___awmod@dividend+1)),c
 12887  001970  6A28               	movlw	high(030h)
 12888  001972  0E00               	movwf	((c:___awmod@divisor+1)),c
 12889  001974  6E2A               	movlw	low(030h)
 12890  001976  0E30               	movwf	((c:___awmod@divisor)),c
 12891  001978  6E29               	call	___awmod	;wreg free
 12892  00197A  EC2E  F019         	movf	(0+?___awmod),c,w
 12893  00197E  5027               	
 12894                           	return	;indir
 12895  001980  0012               	u5779:
 12896  001982                     	line	674
 12897                           	
 12898                           l6921:
 12899  001982                     ;main.c: 674:                                            estado = 77;
 12900                           	movlw	low(04Dh)
 12901  001982  0E4D               	movlb	0	; () banked
 12902  001984  0100               	movwf	((main@estado))&0ffh
 12903  001986  6FBB               	line	675
 12904                           ;main.c: 675:                                            break;
 12905                           	goto	l7035
 12906  001988  EF65  F00F         	line	677
 12907                           ;main.c: 677:                                 case '*': IHM.clr(); estado = 74; break;
 12908                           	
 12909                           l395:; BSR set to: 0
 12910  00198C                     
 12911                           	
 12912                           l6923:; BSR set to: 0
 12913  00198C                     
 12914                           	lfsr	2,(_IHM)+08h
 12915  00198C  EE20  F059         	call	u5788
 12916  001990  D802               	goto	u5789
 12917  001992  EFD5  F00C         u5788:
 12918  001996                     	push
 12919  001996  0005               	movwf	pclath
 12920  001998  6EFA               	movf	postinc2,w
 12921  00199A  50DE               	movwf	tosl
 12922  00199C  6EFD               	movf	postinc2,w
 12923  00199E  50DE               	movwf	tosl+1
 12924  0019A0  6EFE               	movf	tblptru,w
 12925  0019A2  50F8               	movwf	tosl+2
 12926  0019A4  6EFF               	movf	pclath,w
 12927  0019A6  50FA               	
 12928                           	return	;indir
 12929  0019A8  0012               	u5789:
 12930  0019AA                     	
 12931                           l6925:
 12932  0019AA                     	movlw	low(04Ah)
 12933  0019AA  0E4A               	movlb	0	; () banked
 12934  0019AC  0100               	movwf	((main@estado))&0ffh
 12935  0019AE  6FBB               	goto	l7035
 12936  0019B0  EF65  F00F         	line	678
 12937                           	
 12938                           l6927:; BSR set to: 0
 12939  0019B4                     
 12940                           ;main.c: 678:                             }
 12941                           	goto	l7035
 12942  0019B4  EF65  F00F         	
 12943                           l383:; BSR set to: 0
 12944  0019B8                     
 12945                           	
 12946                           l6929:; BSR set to: 0
 12947  0019B8                     
 12948                           	movf	((main@tecla))&0ffh,w
 12949  0019B8  51BC               	movwf	(??_main+0+0)&0ffh,c
 12950  0019BA  6E45               	clrf	(??_main+0+0+1)&0ffh,c
 12951  0019BC  6A46               
 12952                           	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
 12953                           ; Switch size 1, requested type "space"
 12954                           ; Number of cases is 1, Range of values is 0 to 0
 12955                           ; switch strategies available:
 12956                           ; Name         Instructions Cycles
 12957                           ; simple_byte            4     3 (average)
 12958                           ;	Chosen strategy is simple_byte
 12959                           
 12960                           	movf ??_main+0+1,c,w
 12961  0019BE  5046               	xorlw	0^0	; case 0
 12962  0019C0  0A00               	skipnz
 12963  0019C2  B4D8               	goto	l7961
 12964  0019C4  EFE6  F00C         	goto	l7035
 12965  0019C8  EF65  F00F         	
 12966                           l7961:; BSR set to: 0
 12967  0019CC                     
 12968                           ; Switch size 1, requested type "space"
 12969                           ; Number of cases is 11, Range of values is 42 to 57
 12970                           ; switch strategies available:
 12971                           ; Name         Instructions Cycles
 12972                           ; simple_byte           34    18 (average)
 12973                           ;	Chosen strategy is simple_byte
 12974                           
 12975                           	movf ??_main+0+0,c,w
 12976  0019CC  5045               	xorlw	42^0	; case 42
 12977  0019CE  0A2A               	skipnz
 12978  0019D0  B4D8               	goto	l6923
 12979  0019D2  EFC6  F00C         	xorlw	48^42	; case 48
 12980  0019D6  0A1A               	skipnz
 12981  0019D8  B4D8               	goto	l6917
 12982  0019DA  EF92  F00C         	xorlw	49^48	; case 49
 12983  0019DE  0A01               	skipnz
 12984  0019E0  B4D8               	goto	l6917
 12985  0019E2  EF92  F00C         	xorlw	50^49	; case 50
 12986  0019E6  0A03               	skipnz
 12987  0019E8  B4D8               	goto	l6917
 12988  0019EA  EF92  F00C         	xorlw	51^50	; case 51
 12989  0019EE  0A01               	skipnz
 12990  0019F0  B4D8               	goto	l6917
 12991  0019F2  EF92  F00C         	xorlw	52^51	; case 52
 12992  0019F6  0A07               	skipnz
 12993  0019F8  B4D8               	goto	l6917
 12994  0019FA  EF92  F00C         	xorlw	53^52	; case 53
 12995  0019FE  0A01               	skipnz
 12996  001A00  B4D8               	goto	l6917
 12997  001A02  EF92  F00C         	xorlw	54^53	; case 54
 12998  001A06  0A03               	skipnz
 12999  001A08  B4D8               	goto	l6917
 13000  001A0A  EF92  F00C         	xorlw	55^54	; case 55
 13001  001A0E  0A01               	skipnz
 13002  001A10  B4D8               	goto	l6917
 13003  001A12  EF92  F00C         	xorlw	56^55	; case 56
 13004  001A16  0A0F               	skipnz
 13005  001A18  B4D8               	goto	l6917
 13006  001A1A  EF92  F00C         	xorlw	57^56	; case 57
 13007  001A1E  0A01               	skipnz
 13008  001A20  B4D8               	goto	l6917
 13009  001A22  EF92  F00C         	goto	l7035
 13010  001A26  EF65  F00F         
 13011                           	
 13012                           l394:; BSR set to: 0
 13013  001A2A                     
 13014                           	line	679
 13015                           ;main.c: 679:                             break;
 13016                           	goto	l7035
 13017  001A2A  EF65  F00F         	line	681
 13018                           ;main.c: 681:              case 77:
 13019                           	
 13020                           l396:; BSR set to: 0
 13021  001A2E                     
 13022                           	line	682
 13023                           	
 13024                           l6931:; BSR set to: 0
 13025  001A2E                     
 13026                           ;main.c: 682:                             IHM.clr();
 13027                           	lfsr	2,(_IHM)+08h
 13028  001A2E  EE20  F059         	call	u5798
 13029  001A32  D802               	goto	u5799
 13030  001A34  EF26  F00D         u5798:
 13031  001A38                     	push
 13032  001A38  0005               	movwf	pclath
 13033  001A3A  6EFA               	movf	postinc2,w
 13034  001A3C  50DE               	movwf	tosl
 13035  001A3E  6EFD               	movf	postinc2,w
 13036  001A40  50DE               	movwf	tosl+1
 13037  001A42  6EFE               	movf	tblptru,w
 13038  001A44  50F8               	movwf	tosl+2
 13039  001A46  6EFF               	movf	pclath,w
 13040  001A48  50FA               	
 13041                           	return	;indir
 13042  001A4A  0012               	u5799:
 13043  001A4C                     	line	683
 13044                           	
 13045                           l6933:
 13046  001A4C                     ;main.c: 683:                             for(char i = 0; i <= 3; i++)
 13047                           	movlw	low(0)
 13048  001A4C  0E00               	movlb	0	; () banked
 13049  001A4E  0100               	movwf	((main@i_694))&0ffh
 13050  001A50  6FA9               	
 13051                           l6935:; BSR set to: 0
 13052  001A52                     
 13053                           		movlw	04h-1
 13054  001A52  0E03               	cpfsgt	((main@i_694))&0ffh
 13055  001A54  65A9               	goto	u5801
 13056  001A56  EF2F  F00D         	goto	u5800
 13057  001A5A  EF31  F00D         
 13058                           u5801:
 13059  001A5E                     	goto	l6939
 13060  001A5E  EF35  F00D         u5800:
 13061  001A62                     	goto	l6957
 13062  001A62  EF76  F00D         	
 13063                           l6937:; BSR set to: 0
 13064  001A66                     
 13065                           	goto	l6957
 13066  001A66  EF76  F00D         	
 13067                           l397:; BSR set to: 0
 13068  001A6A                     
 13069                           	line	685
 13070                           	
 13071                           l6939:; BSR set to: 0
 13072  001A6A                     
 13073                           ;main.c: 684:                             {;main.c: 685:                                
                                  for(char j = 0; j <= 19; j++)
 13074                           	movlw	low(0)
 13075  001A6A  0E00               	movwf	((main@j_695))&0ffh
 13076  001A6C  6FAA               	
 13077                           l6941:; BSR set to: 0
 13078  001A6E                     
 13079                           		movlw	014h-1
 13080  001A6E  0E13               	cpfsgt	((main@j_695))&0ffh
 13081  001A70  65AA               	goto	u5811
 13082  001A72  EF3D  F00D         	goto	u5810
 13083  001A76  EF3F  F00D         
 13084                           u5811:
 13085  001A7A                     	goto	l6945
 13086  001A7A  EF43  F00D         u5810:
 13087  001A7E                     	goto	l6953
 13088  001A7E  EF6B  F00D         	
 13089                           l6943:; BSR set to: 0
 13090  001A82                     
 13091                           	goto	l6953
 13092  001A82  EF6B  F00D         	
 13093                           l399:; BSR set to: 0
 13094  001A86                     
 13095                           	line	687
 13096                           	
 13097                           l6945:; BSR set to: 0
 13098  001A86                     
 13099                           ;main.c: 686:                                 {;main.c: 687:                            
                                          IHM.printpos(i, j, "\377");
 13100                           	lfsr	2,(_IHM)+04h
 13101  001A86  EE20  F055         	call	u5828
 13102  001A8A  D802               	goto	u5829
 13103  001A8C  EF59  F00D         u5828:
 13104  001A90                     	push
 13105  001A90  0005               	movwf	pclath
 13106  001A92  6EFA               	movf	postinc2,w
 13107  001A94  50DE               	movwf	tosl
 13108  001A96  6EFD               	movf	postinc2,w
 13109  001A98  50DE               	movwf	tosl+1
 13110  001A9A  6EFE               	movf	tblptru,w
 13111  001A9C  50F8               	movwf	tosl+2
 13112  001A9E  6EFF               	movf	pclath,w
 13113  001AA0  50FA               	
 13114                           	movff	(main@j_695),(c:dispLCD@col)
 13115  001AA2  C0AA  F02E         		movlw	low(STR_28)
 13116  001AA6  0EFC               	movwf	((c:dispLCD@str)),c
 13117  001AA8  6E2F               	movlw	high(STR_28)
 13118  001AAA  0E7F               	movwf	((c:dispLCD@str+1)),c
 13119  001AAC  6E30               
 13120                           	movf	((main@i_694))&0ffh,w
 13121  001AAE  51A9               	
 13122                           	return	;indir
 13123  001AB0  0012               	u5829:
 13124  001AB2                     	line	688
 13125                           	
 13126                           l6947:
 13127  001AB2                     ;main.c: 688:                                     delay(10);
 13128                           	movlw	high(0Ah)
 13129  001AB2  0E00               	movwf	((c:delay@t+1)),c
 13130  001AB4  6E28               	movlw	low(0Ah)
 13131  001AB6  0E0A               	movwf	((c:delay@t)),c
 13132  001AB8  6E27               	call	_delay
 13133  001ABA  ECE8  F020         	line	689
 13134                           	
 13135                           l6949:
 13136  001ABE                     ;main.c: 689:                                 }
 13137                           	movlb	0	; () banked
 13138  001ABE  0100               	incf	((main@j_695))&0ffh
 13139  001AC0  2BAA               	
 13140                           l6951:; BSR set to: 0
 13141  001AC2                     
 13142                           		movlw	014h-1
 13143  001AC2  0E13               	cpfsgt	((main@j_695))&0ffh
 13144  001AC4  65AA               	goto	u5831
 13145  001AC6  EF67  F00D         	goto	u5830
 13146  001ACA  EF69  F00D         
 13147                           u5831:
 13148  001ACE                     	goto	l6945
 13149  001ACE  EF43  F00D         u5830:
 13150  001AD2                     	goto	l6953
 13151  001AD2  EF6B  F00D         	
 13152                           l400:; BSR set to: 0
 13153  001AD6                     
 13154                           	line	690
 13155                           	
 13156                           l6953:; BSR set to: 0
 13157  001AD6                     
 13158                           ;main.c: 690:                             }
 13159                           	incf	((main@i_694))&0ffh
 13160  001AD6  2BA9               	
 13161                           l6955:; BSR set to: 0
 13162  001AD8                     
 13163                           		movlw	04h-1
 13164  001AD8  0E03               	cpfsgt	((main@i_694))&0ffh
 13165  001ADA  65A9               	goto	u5841
 13166  001ADC  EF72  F00D         	goto	u5840
 13167  001AE0  EF74  F00D         
 13168                           u5841:
 13169  001AE4                     	goto	l6939
 13170  001AE4  EF35  F00D         u5840:
 13171  001AE8                     	goto	l6957
 13172  001AE8  EF76  F00D         	
 13173                           l398:; BSR set to: 0
 13174  001AEC                     
 13175                           	line	692
 13176                           	
 13177                           l6957:; BSR set to: 0
 13178  001AEC                     
 13179                           ;main.c: 692:                             for(char i = 0; i <= 3; i++)
 13180                           	movlw	low(0)
 13181  001AEC  0E00               	movwf	((main@i_697))&0ffh
 13182  001AEE  6FAB               	
 13183                           l6959:; BSR set to: 0
 13184  001AF0                     
 13185                           		movlw	04h-1
 13186  001AF0  0E03               	cpfsgt	((main@i_697))&0ffh
 13187  001AF2  65AB               	goto	u5851
 13188  001AF4  EF7E  F00D         	goto	u5850
 13189  001AF8  EF80  F00D         
 13190                           u5851:
 13191  001AFC                     	goto	l6963
 13192  001AFC  EF84  F00D         u5850:
 13193  001B00                     	goto	l6981
 13194  001B00  EFC5  F00D         	
 13195                           l6961:; BSR set to: 0
 13196  001B04                     
 13197                           	goto	l6981
 13198  001B04  EFC5  F00D         	
 13199                           l401:; BSR set to: 0
 13200  001B08                     
 13201                           	line	694
 13202                           	
 13203                           l6963:; BSR set to: 0
 13204  001B08                     
 13205                           ;main.c: 693:                             {;main.c: 694:                                
                                  for(char j = 0; j <= 19; j++)
 13206                           	movlw	low(0)
 13207  001B08  0E00               	movwf	((main@j_698))&0ffh
 13208  001B0A  6FAC               	
 13209                           l6965:; BSR set to: 0
 13210  001B0C                     
 13211                           		movlw	014h-1
 13212  001B0C  0E13               	cpfsgt	((main@j_698))&0ffh
 13213  001B0E  65AC               	goto	u5861
 13214  001B10  EF8C  F00D         	goto	u5860
 13215  001B14  EF8E  F00D         
 13216                           u5861:
 13217  001B18                     	goto	l6969
 13218  001B18  EF92  F00D         u5860:
 13219  001B1C                     	goto	l6977
 13220  001B1C  EFBA  F00D         	
 13221                           l6967:; BSR set to: 0
 13222  001B20                     
 13223                           	goto	l6977
 13224  001B20  EFBA  F00D         	
 13225                           l403:; BSR set to: 0
 13226  001B24                     
 13227                           	line	696
 13228                           	
 13229                           l6969:; BSR set to: 0
 13230  001B24                     
 13231                           ;main.c: 695:                                 {;main.c: 696:                            
                                          IHM.printpos(i, j, " ");
 13232                           	lfsr	2,(_IHM)+04h
 13233  001B24  EE20  F055         	call	u5878
 13234  001B28  D802               	goto	u5879
 13235  001B2A  EFA8  F00D         u5878:
 13236  001B2E                     	push
 13237  001B2E  0005               	movwf	pclath
 13238  001B30  6EFA               	movf	postinc2,w
 13239  001B32  50DE               	movwf	tosl
 13240  001B34  6EFD               	movf	postinc2,w
 13241  001B36  50DE               	movwf	tosl+1
 13242  001B38  6EFE               	movf	tblptru,w
 13243  001B3A  50F8               	movwf	tosl+2
 13244  001B3C  6EFF               	movf	pclath,w
 13245  001B3E  50FA               	
 13246                           	movff	(main@j_698),(c:dispLCD@col)
 13247  001B40  C0AC  F02E         		movlw	low(STR_29)
 13248  001B44  0ED8               	movwf	((c:dispLCD@str)),c
 13249  001B46  6E2F               	movlw	high(STR_29)
 13250  001B48  0E7D               	movwf	((c:dispLCD@str+1)),c
 13251  001B4A  6E30               
 13252                           	movf	((main@i_697))&0ffh,w
 13253  001B4C  51AB               	
 13254                           	return	;indir
 13255  001B4E  0012               	u5879:
 13256  001B50                     	line	697
 13257                           	
 13258                           l6971:
 13259  001B50                     ;main.c: 697:                                     delay(10);
 13260                           	movlw	high(0Ah)
 13261  001B50  0E00               	movwf	((c:delay@t+1)),c
 13262  001B52  6E28               	movlw	low(0Ah)
 13263  001B54  0E0A               	movwf	((c:delay@t)),c
 13264  001B56  6E27               	call	_delay
 13265  001B58  ECE8  F020         	line	698
 13266                           	
 13267                           l6973:
 13268  001B5C                     ;main.c: 698:                                 }
 13269                           	movlb	0	; () banked
 13270  001B5C  0100               	incf	((main@j_698))&0ffh
 13271  001B5E  2BAC               	
 13272                           l6975:; BSR set to: 0
 13273  001B60                     
 13274                           		movlw	014h-1
 13275  001B60  0E13               	cpfsgt	((main@j_698))&0ffh
 13276  001B62  65AC               	goto	u5881
 13277  001B64  EFB6  F00D         	goto	u5880
 13278  001B68  EFB8  F00D         
 13279                           u5881:
 13280  001B6C                     	goto	l6969
 13281  001B6C  EF92  F00D         u5880:
 13282  001B70                     	goto	l6977
 13283  001B70  EFBA  F00D         	
 13284                           l404:; BSR set to: 0
 13285  001B74                     
 13286                           	line	699
 13287                           	
 13288                           l6977:; BSR set to: 0
 13289  001B74                     
 13290                           ;main.c: 699:                             }
 13291                           	incf	((main@i_697))&0ffh
 13292  001B74  2BAB               	
 13293                           l6979:; BSR set to: 0
 13294  001B76                     
 13295                           		movlw	04h-1
 13296  001B76  0E03               	cpfsgt	((main@i_697))&0ffh
 13297  001B78  65AB               	goto	u5891
 13298  001B7A  EFC1  F00D         	goto	u5890
 13299  001B7E  EFC3  F00D         
 13300                           u5891:
 13301  001B82                     	goto	l6963
 13302  001B82  EF84  F00D         u5890:
 13303  001B86                     	goto	l6981
 13304  001B86  EFC5  F00D         	
 13305                           l402:; BSR set to: 0
 13306  001B8A                     
 13307                           	line	700
 13308                           	
 13309                           l6981:; BSR set to: 0
 13310  001B8A                     
 13311                           ;main.c: 700:                             IHM.printpos(1, 0, "      SEQUENCIA     ");
 13312                           	lfsr	2,(_IHM)+04h
 13313  001B8A  EE20  F055         	call	u5908
 13314  001B8E  D802               	goto	u5909
 13315  001B90  EFDB  F00D         u5908:
 13316  001B94                     	push
 13317  001B94  0005               	movwf	pclath
 13318  001B96  6EFA               	movf	postinc2,w
 13319  001B98  50DE               	movwf	tosl
 13320  001B9A  6EFD               	movf	postinc2,w
 13321  001B9C  50DE               	movwf	tosl+1
 13322  001B9E  6EFE               	movf	tblptru,w
 13323  001BA0  50F8               	movwf	tosl+2
 13324  001BA2  6EFF               	movf	pclath,w
 13325  001BA4  50FA               	
 13326                           	movlw	low(0)
 13327  001BA6  0E00               	movwf	((c:dispLCD@col)),c
 13328  001BA8  6E2E               		movlw	low(STR_30)
 13329  001BAA  0E6D               	movwf	((c:dispLCD@str)),c
 13330  001BAC  6E2F               	movlw	high(STR_30)
 13331  001BAE  0E7E               	movwf	((c:dispLCD@str+1)),c
 13332  001BB0  6E30               
 13333                           	movlw	(01h)&0ffh
 13334  001BB2  0E01               	
 13335                           	return	;indir
 13336  001BB4  0012               	u5909:
 13337  001BB6                     	line	701
 13338                           ;main.c: 701:                             IHM.printpos(2, 0, "        SALVA       ");
 13339                           	lfsr	2,(_IHM)+04h
 13340  001BB6  EE20  F055         	call	u5918
 13341  001BBA  D802               	goto	u5919
 13342  001BBC  EFF1  F00D         u5918:
 13343  001BC0                     	push
 13344  001BC0  0005               	movwf	pclath
 13345  001BC2  6EFA               	movf	postinc2,w
 13346  001BC4  50DE               	movwf	tosl
 13347  001BC6  6EFD               	movf	postinc2,w
 13348  001BC8  50DE               	movwf	tosl+1
 13349  001BCA  6EFE               	movf	tblptru,w
 13350  001BCC  50F8               	movwf	tosl+2
 13351  001BCE  6EFF               	movf	pclath,w
 13352  001BD0  50FA               	
 13353                           	movlw	low(0)
 13354  001BD2  0E00               	movwf	((c:dispLCD@col)),c
 13355  001BD4  6E2E               		movlw	low(STR_31)
 13356  001BD6  0EEF               	movwf	((c:dispLCD@str)),c
 13357  001BD8  6E2F               	movlw	high(STR_31)
 13358  001BDA  0E7D               	movwf	((c:dispLCD@str+1)),c
 13359  001BDC  6E30               
 13360                           	movlw	(02h)&0ffh
 13361  001BDE  0E02               	
 13362                           	return	;indir
 13363  001BE0  0012               	u5919:
 13364  001BE2                     	line	703
 13365                           	
 13366                           l6983:
 13367  001BE2                     ;main.c: 703:                             setT1(1000);
 13368                           	movlw	low(03E8h)
 13369  001BE2  0EE8               	movwf	((c:setT1@c)),c
 13370  001BE4  6E2D               	movlw	high(03E8h)
 13371  001BE6  0E03               	movwf	((c:setT1@c+1)),c
 13372  001BE8  6E2E               	movlw	low highword(03E8h)
 13373  001BEA  0E00               	movwf	((c:setT1@c+2)),c
 13374  001BEC  6E2F               	movlw	high highword(03E8h)
 13375  001BEE  0E00               	movwf	((c:setT1@c+3)),c
 13376  001BF0  6E30               	call	_setT1
 13377  001BF2  EC76  F022         	line	704
 13378                           	
 13379                           l6985:
 13380  001BF6                     ;main.c: 704:                             estado = 78;
 13381                           	movlw	low(04Eh)
 13382  001BF6  0E4E               	movlb	0	; () banked
 13383  001BF8  0100               	movwf	((main@estado))&0ffh
 13384  001BFA  6FBB               	line	705
 13385                           ;main.c: 705:                             break;
 13386                           	goto	l7035
 13387  001BFC  EF65  F00F         	line	707
 13388                           ;main.c: 707:              case 78:
 13389                           	
 13390                           l405:; BSR set to: 0
 13391  001C00                     
 13392                           	line	708
 13393                           	
 13394                           l6987:; BSR set to: 0
 13395  001C00                     
 13396                           ;main.c: 708:                             if(!statusT1())
 13397                           	call	_statusT1	;wreg free
 13398  001C00  EC80  F022         	movf	(0+?_statusT1),c,w
 13399  001C04  5027               iorwf	(1+?_statusT1),c,w
 13400  001C06  1028               iorwf	(2+?_statusT1),c,w
 13401  001C08  1029               iorwf	(3+?_statusT1),c,w
 13402  001C0A  102A               	btfss	status,2
 13403  001C0C  A4D8               	goto	u5921
 13404  001C0E  EF0B  F00E         	goto	u5920
 13405  001C12  EF0D  F00E         
 13406                           u5921:
 13407  001C16                     	goto	l7035
 13408  001C16  EF65  F00F         u5920:
 13409  001C1A                     	line	709
 13410                           	
 13411                           l6989:
 13412  001C1A                     ;main.c: 709:                                 estado = 53;
 13413                           	movlw	low(035h)
 13414  001C1A  0E35               	movlb	0	; () banked
 13415  001C1C  0100               	movwf	((main@estado))&0ffh
 13416  001C1E  6FBB               	goto	l7035
 13417  001C20  EF65  F00F         	
 13418                           l406:; BSR set to: 0
 13419  001C24                     
 13420                           	line	710
 13421                           ;main.c: 710:                             break;
 13422                           	goto	l7035
 13423  001C24  EF65  F00F         	line	712
 13424                           ;main.c: 712:              case 90:
 13425                           	
 13426                           l407:; BSR set to: 0
 13427  001C28                     
 13428                           	line	713
 13429                           	
 13430                           l6991:; BSR set to: 0
 13431  001C28                     
 13432                           ;main.c: 713:                             IHM.printpos(2, 0, "config contrl:     %");
 13433                           	lfsr	2,(_IHM)+04h
 13434  001C28  EE20  F055         	call	u5938
 13435  001C2C  D802               	goto	u5939
 13436  001C2E  EF2A  F00E         u5938:
 13437  001C32                     	push
 13438  001C32  0005               	movwf	pclath
 13439  001C34  6EFA               	movf	postinc2,w
 13440  001C36  50DE               	movwf	tosl
 13441  001C38  6EFD               	movf	postinc2,w
 13442  001C3A  50DE               	movwf	tosl+1
 13443  001C3C  6EFE               	movf	tblptru,w
 13444  001C3E  50F8               	movwf	tosl+2
 13445  001C40  6EFF               	movf	pclath,w
 13446  001C42  50FA               	
 13447                           	movlw	low(0)
 13448  001C44  0E00               	movwf	((c:dispLCD@col)),c
 13449  001C46  6E2E               		movlw	low(STR_32)
 13450  001C48  0E2A               	movwf	((c:dispLCD@str)),c
 13451  001C4A  6E2F               	movlw	high(STR_32)
 13452  001C4C  0E7F               	movwf	((c:dispLCD@str+1)),c
 13453  001C4E  6E30               
 13454                           	movlw	(02h)&0ffh
 13455  001C50  0E02               	
 13456                           	return	;indir
 13457  001C52  0012               	u5939:
 13458  001C54                     	line	714
 13459                           	
 13460                           l6993:
 13461  001C54                     ;main.c: 714:                             IHM.printv(2, 15, num, 3);
 13462                           	lfsr	2,(_IHM)+06h
 13463  001C54  EE20  F057         	call	u5948
 13464  001C58  D802               	goto	u5949
 13465  001C5A  EF42  F00E         u5948:
 13466  001C5E                     	push
 13467  001C5E  0005               	movwf	pclath
 13468  001C60  6EFA               	movf	postinc2,w
 13469  001C62  50DE               	movwf	tosl
 13470  001C64  6EFD               	movf	postinc2,w
 13471  001C66  50DE               	movwf	tosl+1
 13472  001C68  6EFE               	movf	tblptru,w
 13473  001C6A  50F8               	movwf	tosl+2
 13474  001C6C  6EFF               	movf	pclath,w
 13475  001C6E  50FA               	
 13476                           	movlw	low(0Fh)
 13477  001C70  0E0F               	movwf	((c:dispLCD_num@col)),c
 13478  001C72  6E32               	movff	(main@num),(c:dispLCD_num@num)
 13479  001C74  C0B4  F033         	movff	(main@num+1),(c:dispLCD_num@num+1)
 13480  001C78  C0B5  F034         	movlw	low(03h)
 13481  001C7C  0E03               	movwf	((c:dispLCD_num@tam)),c
 13482  001C7E  6E35               	movlw	(02h)&0ffh
 13483  001C80  0E02               	
 13484                           	return	;indir
 13485  001C82  0012               	u5949:
 13486  001C84                     	line	715
 13487                           	
 13488                           l6995:
 13489  001C84                     ;main.c: 715:                             estado = 91;
 13490                           	movlw	low(05Bh)
 13491  001C84  0E5B               	movlb	0	; () banked
 13492  001C86  0100               	movwf	((main@estado))&0ffh
 13493  001C88  6FBB               	line	716
 13494                           ;main.c: 716:                             break;
 13495                           	goto	l7035
 13496  001C8A  EF65  F00F         	line	718
 13497                           ;main.c: 718:              case 91:
 13498                           	
 13499                           l408:; BSR set to: 0
 13500  001C8E                     
 13501                           	line	719
 13502                           	
 13503                           l6997:; BSR set to: 0
 13504  001C8E                     
 13505                           ;main.c: 719:                             tecla = teclado_borda();
 13506                           	call	_teclado_borda
 13507  001C8E  EC25  F020         	movlb	0	; () banked
 13508  001C92  0100               	movwf	((main@tecla))&0ffh
 13509  001C94  6FBC               	line	720
 13510                           	
 13511                           l6999:; BSR set to: 0
 13512  001C96                     
 13513                           ;main.c: 720:                             if(tecla >= '0' && tecla <= '9')
 13514                           		movlw	030h-1
 13515  001C96  0E2F               	cpfsgt	((main@tecla))&0ffh
 13516  001C98  65BC               	goto	u5951
 13517  001C9A  EF51  F00E         	goto	u5950
 13518  001C9E  EF53  F00E         
 13519                           u5951:
 13520  001CA2                     	goto	l7009
 13521  001CA2  EF76  F00E         u5950:
 13522  001CA6                     	
 13523                           l7001:; BSR set to: 0
 13524  001CA6                     
 13525                           		movlw	03Ah-0
 13526  001CA6  0E3A               	cpfslt	((main@tecla))&0ffh
 13527  001CA8  61BC               	goto	u5961
 13528  001CAA  EF59  F00E         	goto	u5960
 13529  001CAE  EF5B  F00E         
 13530                           u5961:
 13531  001CB2                     	goto	l7009
 13532  001CB2  EF76  F00E         u5960:
 13533  001CB6                     	line	722
 13534                           	
 13535                           l7003:; BSR set to: 0
 13536  001CB6                     
 13537                           ;main.c: 721:                             {;main.c: 722:                                
                                  dignum_conc(tecla, &num);
 13538                           		movlw	low(main@num)
 13539  001CB6  0EB4               	movwf	((c:dignum_conc@ptrNum)),c
 13540  001CB8  6E2D               	movlw	high(main@num)
 13541  001CBA  0E00               	movwf	((c:dignum_conc@ptrNum+1)),c
 13542  001CBC  6E2E               
 13543                           	movf	((main@tecla))&0ffh,w
 13544  001CBE  51BC               	
 13545                           	call	_dignum_conc
 13546  001CC0  ECB6  F01F         	line	723
 13547                           	
 13548                           l7005:
 13549  001CC4                     ;main.c: 723:                                 if(num > 100)
 13550                           	movlb	0	; () banked
 13551  001CC4  0100               		movf	((main@num+1))&0ffh,w
 13552  001CC6  51B5               	bnz	u5970
 13553  001CC8  E109               	movlw	101
 13554  001CCA  0E65               	subwf	 ((main@num))&0ffh,w
 13555  001CCC  5DB4               	btfss	status,0
 13556  001CCE  A0D8               	goto	u5971
 13557  001CD0  EF6C  F00E         	goto	u5970
 13558  001CD4  EF6E  F00E         
 13559                           u5971:
 13560  001CD8                     	goto	l410
 13561  001CD8  EF72  F00E         u5970:
 13562  001CDC                     	line	724
 13563                           	
 13564                           l7007:; BSR set to: 0
 13565  001CDC                     
 13566                           ;main.c: 724:                                     num = 100;
 13567                           	movlw	high(064h)
 13568  001CDC  0E00               	movwf	((main@num+1))&0ffh
 13569  001CDE  6FB5               	movlw	low(064h)
 13570  001CE0  0E64               	movwf	((main@num))&0ffh
 13571  001CE2  6FB4               	
 13572                           l410:; BSR set to: 0
 13573  001CE4                     
 13574                           	line	725
 13575                           ;main.c: 725:                                 estado = 90;
 13576                           	movlw	low(05Ah)
 13577  001CE4  0E5A               	movwf	((main@estado))&0ffh
 13578  001CE6  6FBB               	goto	l7009
 13579  001CE8  EF76  F00E         	line	726
 13580                           ;main.c: 726:                             }
 13581                           	
 13582                           l409:; BSR set to: 0
 13583  001CEC                     
 13584                           	line	727
 13585                           	
 13586                           l7009:; BSR set to: 0
 13587  001CEC                     
 13588                           ;main.c: 727:                             if(tecla == '*')
 13589                           		movlw	42
 13590  001CEC  0E2A               	xorwf	((main@tecla))&0ffh,w
 13591  001CEE  19BC               	btfss	status,2
 13592  001CF0  A4D8               	goto	u5981
 13593  001CF2  EF7D  F00E         	goto	u5980
 13594  001CF6  EF7F  F00E         
 13595                           u5981:
 13596  001CFA                     	goto	l7015
 13597  001CFA  EF8A  F00E         u5980:
 13598  001CFE                     	line	729
 13599                           	
 13600                           l7011:; BSR set to: 0
 13601  001CFE                     
 13602                           ;main.c: 728:                             {;main.c: 729:                                
                                  dignum_apagar(&num);
 13603                           		movlw	low(main@num)
 13604  001CFE  0EB4               	movwf	((c:dignum_apagar@ptrNum)),c
 13605  001D00  6E2E               	movlw	high(main@num)
 13606  001D02  0E00               	movwf	((c:dignum_apagar@ptrNum+1)),c
 13607  001D04  6E2F               
 13608                           	call	_dignum_apagar	;wreg free
 13609  001D06  EC48  F021         	line	730
 13610                           	
 13611                           l7013:
 13612  001D0A                     ;main.c: 730:                                 estado = 90;
 13613                           	movlw	low(05Ah)
 13614  001D0A  0E5A               	movlb	0	; () banked
 13615  001D0C  0100               	movwf	((main@estado))&0ffh
 13616  001D0E  6FBB               	goto	l7015
 13617  001D10  EF8A  F00E         	line	731
 13618                           ;main.c: 731:                             }
 13619                           	
 13620                           l411:; BSR set to: 0
 13621  001D14                     
 13622                           	line	732
 13623                           	
 13624                           l7015:; BSR set to: 0
 13625  001D14                     
 13626                           ;main.c: 732:                             if(tecla == '#')
 13627                           		movlw	35
 13628  001D14  0E23               	xorwf	((main@tecla))&0ffh,w
 13629  001D16  19BC               	btfss	status,2
 13630  001D18  A4D8               	goto	u5991
 13631  001D1A  EF91  F00E         	goto	u5990
 13632  001D1E  EF93  F00E         
 13633                           u5991:
 13634  001D22                     	goto	l7035
 13635  001D22  EF65  F00F         u5990:
 13636  001D26                     	line	733
 13637                           	
 13638                           l7017:; BSR set to: 0
 13639  001D26                     
 13640                           ;main.c: 733:                                 estado = 92;
 13641                           	movlw	low(05Ch)
 13642  001D26  0E5C               	movwf	((main@estado))&0ffh
 13643  001D28  6FBB               	goto	l7035
 13644  001D2A  EF65  F00F         	
 13645                           l412:; BSR set to: 0
 13646  001D2E                     
 13647                           	line	734
 13648                           ;main.c: 734:                             break;
 13649                           	goto	l7035
 13650  001D2E  EF65  F00F         	line	736
 13651                           ;main.c: 736:              case 92:
 13652                           	
 13653                           l413:; BSR set to: 0
 13654  001D32                     
 13655                           	line	737
 13656                           	
 13657                           l7019:; BSR set to: 0
 13658  001D32                     
 13659                           ;main.c: 737:                             fifo_add_control(num);
 13660                           	movf	((main@num))&0ffh,w
 13661  001D32  51B4               	
 13662                           	call	_fifo_add_control
 13663  001D34  EC13  F01F         	line	738
 13664                           	
 13665                           l7021:
 13666  001D38                     ;main.c: 738:                             IHM.clr();
 13667                           	lfsr	2,(_IHM)+08h
 13668  001D38  EE20  F059         	call	u6008
 13669  001D3C  D802               	goto	u6009
 13670  001D3E  EFAB  F00E         u6008:
 13671  001D42                     	push
 13672  001D42  0005               	movwf	pclath
 13673  001D44  6EFA               	movf	postinc2,w
 13674  001D46  50DE               	movwf	tosl
 13675  001D48  6EFD               	movf	postinc2,w
 13676  001D4A  50DE               	movwf	tosl+1
 13677  001D4C  6EFE               	movf	tblptru,w
 13678  001D4E  50F8               	movwf	tosl+2
 13679  001D50  6EFF               	movf	pclath,w
 13680  001D52  50FA               	
 13681                           	return	;indir
 13682  001D54  0012               	u6009:
 13683  001D56                     	line	739
 13684                           	
 13685                           l7023:
 13686  001D56                     ;main.c: 739:                             estado = 16;
 13687                           	movlw	low(010h)
 13688  001D56  0E10               	movlb	0	; () banked
 13689  001D58  0100               	movwf	((main@estado))&0ffh
 13690  001D5A  6FBB               	line	740
 13691                           ;main.c: 740:                             break;
 13692                           	goto	l7035
 13693  001D5C  EF65  F00F         	line	742
 13694                           ;main.c: 742:              case 54:
 13695                           	
 13696                           l414:; BSR set to: 0
 13697  001D60                     
 13698                           	line	743
 13699                           	
 13700                           l7025:; BSR set to: 0
 13701  001D60                     
 13702                           ;main.c: 743:                             fifo_add_ciclo(ciclos);
 13703                           	movff	(main@ciclos),(c:fifo_add_ciclo@ciclos)
 13704  001D60  C0B0  F027         	movff	(main@ciclos+1),(c:fifo_add_ciclo@ciclos+1)
 13705  001D64  C0B1  F028         	call	_fifo_add_ciclo	;wreg free
 13706  001D68  ECAD  F022         	line	744
 13707                           	
 13708                           l7027:
 13709  001D6C                     ;main.c: 744:                             estado = 30;
 13710                           	movlw	low(01Eh)
 13711  001D6C  0E1E               	movlb	0	; () banked
 13712  001D6E  0100               	movwf	((main@estado))&0ffh
 13713  001D70  6FBB               	line	745
 13714                           	
 13715                           l7029:; BSR set to: 0
 13716  001D72                     
 13717                           ;main.c: 745:                             botao = 1;
 13718                           	movlw	low(01h)
 13719  001D72  0E01               	movwf	((main@botao))&0ffh
 13720  001D74  6FB3               	line	746
 13721                           ;main.c: 746:                             break;
 13722                           	goto	l7035
 13723  001D76  EF65  F00F         	line	747
 13724                           	
 13725                           l7031:; BSR set to: 0
 13726  001D7A                     
 13727                           ;main.c: 747:         }
 13728                           	goto	l7035
 13729  001D7A  EF65  F00F         	
 13730                           l162:; BSR set to: 0
 13731  001D7E                     
 13732                           	
 13733                           l7033:
 13734  001D7E                     	movlb	0	; () banked
 13735  001D7E  0100               	movf	((main@estado))&0ffh,w
 13736  001D80  51BB               	movwf	(??_main+0+0)&0ffh,c
 13737  001D82  6E45               	clrf	(??_main+0+0+1)&0ffh,c
 13738  001D84  6A46               
 13739                           	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
 13740                           ; Switch size 1, requested type "space"
 13741                           ; Number of cases is 1, Range of values is 0 to 0
 13742                           ; switch strategies available:
 13743                           ; Name         Instructions Cycles
 13744                           ; simple_byte            4     3 (average)
 13745                           ;	Chosen strategy is simple_byte
 13746                           
 13747                           	movf ??_main+0+1,c,w
 13748  001D86  5046               	xorlw	0^0	; case 0
 13749  001D88  0A00               	skipnz
 13750  001D8A  B4D8               	goto	l7963
 13751  001D8C  EFCA  F00E         	goto	l7035
 13752  001D90  EF65  F00F         	
 13753                           l7963:; BSR set to: 0
 13754  001D94                     
 13755                           ; Switch size 1, requested type "space"
 13756                           ; Number of cases is 38, Range of values is 0 to 100
 13757                           ; switch strategies available:
 13758                           ; Name         Instructions Cycles
 13759                           ; simple_byte          115    58 (average)
 13760                           ;	Chosen strategy is simple_byte
 13761                           
 13762                           	movf ??_main+0+0,c,w
 13763  001D94  5045               	xorlw	0^0	; case 0
 13764  001D96  0A00               	skipnz
 13765  001D98  B4D8               	goto	l6291
 13766  001D9A  EF72  F000         	xorlw	1^0	; case 1
 13767  001D9E  0A01               	skipnz
 13768  001DA0  B4D8               	goto	l6341
 13769  001DA2  EF14  F001         	xorlw	2^1	; case 2
 13770  001DA6  0A03               	skipnz
 13771  001DA8  B4D8               	goto	l6365
 13772  001DAA  EF72  F001         	xorlw	3^2	; case 3
 13773  001DAE  0A01               	skipnz
 13774  001DB0  B4D8               	goto	l6627
 13775  001DB2  EF9E  F006         	xorlw	6^3	; case 6
 13776  001DB6  0A05               	skipnz
 13777  001DB8  B4D8               	goto	l6635
 13778  001DBA  EFDE  F006         	xorlw	7^6	; case 7
 13779  001DBE  0A01               	skipnz
 13780  001DC0  B4D8               	goto	l6679
 13781  001DC2  EF7D  F007         	xorlw	8^7	; case 8
 13782  001DC6  0A0F               	skipnz
 13783  001DC8  B4D8               	goto	l6369
 13784  001DCA  EF86  F001         	xorlw	9^8	; case 9
 13785  001DCE  0A01               	skipnz
 13786  001DD0  B4D8               	goto	l6377
 13787  001DD2  EFAA  F001         	xorlw	10^9	; case 10
 13788  001DD6  0A03               	skipnz
 13789  001DD8  B4D8               	goto	l6721
 13790  001DDA  EF50  F008         	xorlw	11^10	; case 11
 13791  001DDE  0A01               	skipnz
 13792  001DE0  B4D8               	goto	l6729
 13793  001DE2  EF7E  F008         	xorlw	14^11	; case 14
 13794  001DE6  0A05               	skipnz
 13795  001DE8  B4D8               	goto	l6771
 13796  001DEA  EF31  F009         	xorlw	16^14	; case 16
 13797  001DEE  0A1E               	skipnz
 13798  001DF0  B4D8               	goto	l6767
 13799  001DF2  EF2A  F009         	xorlw	30^16	; case 30
 13800  001DF6  0A0E               	skipnz
 13801  001DF8  B4D8               	goto	l6779
 13802  001DFA  EF86  F009         	xorlw	40^30	; case 40
 13803  001DFE  0A36               	skipnz
 13804  001E00  B4D8               	goto	l6823
 13805  001E02  EF8F  F00A         	xorlw	41^40	; case 41
 13806  001E06  0A01               	skipnz
 13807  001E08  B4D8               	goto	l6845
 13808  001E0A  EFE1  F00A         	xorlw	42^41	; case 42
 13809  001E0E  0A03               	skipnz
 13810  001E10  B4D8               	goto	l6851
 13811  001E12  EF14  F00B         	xorlw	52^42	; case 52
 13812  001E16  0A1E               	skipnz
 13813  001E18  B4D8               	goto	l6857
 13814  001E1A  EF2B  F00B         	xorlw	53^52	; case 53
 13815  001E1E  0A01               	skipnz
 13816  001E20  B4D8               	goto	l6883
 13817  001E22  EFA1  F00B         	xorlw	54^53	; case 54
 13818  001E26  0A03               	skipnz
 13819  001E28  B4D8               	goto	l7025
 13820  001E2A  EFB0  F00E         	xorlw	70^54	; case 70
 13821  001E2E  0A70               	skipnz
 13822  001E30  B4D8               	goto	l6781
 13823  001E32  EF8C  F009         	xorlw	71^70	; case 71
 13824  001E36  0A01               	skipnz
 13825  001E38  B4D8               	goto	l6381
 13826  001E3A  EFBE  F001         	xorlw	72^71	; case 72
 13827  001E3E  0A0F               	skipnz
 13828  001E40  B4D8               	goto	l6555
 13829  001E42  EFC0  F004         	xorlw	73^72	; case 73
 13830  001E46  0A01               	skipnz
 13831  001E48  B4D8               	goto	l6561
 13832  001E4A  EFE7  F004         	xorlw	74^73	; case 74
 13833  001E4E  0A03               	skipnz
 13834  001E50  B4D8               	goto	l6891
 13835  001E52  EFF9  F00B         	xorlw	75^74	; case 75
 13836  001E56  0A01               	skipnz
 13837  001E58  B4D8               	goto	l6909
 13838  001E5A  EF53  F00C         	xorlw	76^75	; case 76
 13839  001E5E  0A07               	skipnz
 13840  001E60  B4D8               	goto	l6915
 13841  001E62  EF7A  F00C         	xorlw	77^76	; case 77
 13842  001E66  0A01               	skipnz
 13843  001E68  B4D8               	goto	l6931
 13844  001E6A  EF17  F00D         	xorlw	78^77	; case 78
 13845  001E6E  0A03               	skipnz
 13846  001E70  B4D8               	goto	l6987
 13847  001E72  EF00  F00E         	xorlw	80^78	; case 80
 13848  001E76  0A1E               	skipnz
 13849  001E78  B4D8               	goto	l6453
 13850  001E7A  EF41  F003         	xorlw	81^80	; case 81
 13851  001E7E  0A01               	skipnz
 13852  001E80  B4D8               	goto	l6463
 13853  001E82  EF64  F003         	xorlw	82^81	; case 82
 13854  001E86  0A03               	skipnz
 13855  001E88  B4D8               	goto	l6467
 13856  001E8A  EF78  F003         	xorlw	84^82	; case 84
 13857  001E8E  0A06               	skipnz
 13858  001E90  B4D8               	goto	l6479
 13859  001E92  EFA7  F003         	xorlw	85^84	; case 85
 13860  001E96  0A01               	skipnz
 13861  001E98  B4D8               	goto	l6493
 13862  001E9A  EFF5  F003         	xorlw	86^85	; case 86
 13863  001E9E  0A03               	skipnz
 13864  001EA0  B4D8               	goto	l6551
 13865  001EA2  EFAC  F004         	xorlw	90^86	; case 90
 13866  001EA6  0A0C               	skipnz
 13867  001EA8  B4D8               	goto	l6991
 13868  001EAA  EF14  F00E         	xorlw	91^90	; case 91
 13869  001EAE  0A01               	skipnz
 13870  001EB0  B4D8               	goto	l6997
 13871  001EB2  EF47  F00E         	xorlw	92^91	; case 92
 13872  001EB6  0A07               	skipnz
 13873  001EB8  B4D8               	goto	l7019
 13874  001EBA  EF99  F00E         	xorlw	100^92	; case 100
 13875  001EBE  0A38               	skipnz
 13876  001EC0  B4D8               	goto	l6395
 13877  001EC2  EFF5  F001         	goto	l7035
 13878  001EC6  EF65  F00F         
 13879                           	
 13880                           l172:; BSR set to: 0
 13881  001ECA                     
 13882                           	line	749
 13883                           	
 13884                           l7035:
 13885  001ECA                     ;main.c: 749:         serialIOscan();
 13886                           	call	_serialIOscan	;wreg free
 13887  001ECA  EC75  F01C         	line	751
 13888                           ;main.c: 751:         switch(meAtuadores)
 13889                           	goto	l7109
 13890  001ECE  EFB1  F010         	line	753
 13891                           ;main.c: 752:         {;main.c: 753:             case 0: break;
 13892                           	
 13893                           l416:
 13894  001ED2                     	goto	l7033
 13895  001ED2  EFBF  F00E         	line	755
 13896                           ;main.c: 755:             case 1:
 13897                           	
 13898                           l418:
 13899  001ED6                     	line	756
 13900                           	
 13901                           l7037:
 13902  001ED6                     ;main.c: 756:                             resetIndicePassos();
 13903                           	call	_resetIndicePassos	;wreg free
 13904  001ED6  ECC9  F022         	line	757
 13905                           ;main.c: 757:                             resetContCiclos();
 13906                           	call	_resetContCiclos	;wreg free
 13907  001EDA  EC9E  F022         	line	758
 13908                           	
 13909                           l7039:
 13910  001EDE                     ;main.c: 758:                             meAtuadores = 2;
 13911                           	movlw	low(02h)
 13912  001EDE  0E02               	movlb	0	; () banked
 13913  001EE0  0100               	movwf	((main@meAtuadores))&0ffh
 13914  001EE2  6FAF               	line	759
 13915                           ;main.c: 759:                             break;
 13916                           	goto	l7033
 13917  001EE4  EFBF  F00E         	line	761
 13918                           ;main.c: 761:             case 2:
 13919                           	
 13920                           l419:; BSR set to: 0
 13921  001EE8                     
 13922                           	line	762
 13923                           	
 13924                           l7041:; BSR set to: 0
 13925  001EE8                     
 13926                           ;main.c: 762:                             auxPasso = fifo_lerPos(getIndicePassos());
 13927                           	call	_getIndicePassos	;wreg free
 13928  001EE8  ECB2  F022         	
 13929                           	call	_fifo_lerPos
 13930  001EEC  EC07  F022         	movlb	0	; () banked
 13931  001EF0  0100               	movwf	((main@auxPasso))&0ffh
 13932  001EF2  6FBA               	line	764
 13933                           	
 13934                           l7043:; BSR set to: 0
 13935  001EF4                     
 13936                           ;main.c: 764:                             if(botao == 1 || botao == 3 || botao == 0)
 13937                           		decf	((main@botao))&0ffh,w
 13938  001EF4  05B3               	btfsc	status,2
 13939  001EF6  B4D8               	goto	u6011
 13940  001EF8  EF80  F00F         	goto	u6010
 13941  001EFC  EF82  F00F         
 13942                           u6011:
 13943  001F00                     	goto	l7049
 13944  001F00  EF95  F00F         u6010:
 13945  001F04                     	
 13946                           l7045:; BSR set to: 0
 13947  001F04                     
 13948                           		movlw	3
 13949  001F04  0E03               	xorwf	((main@botao))&0ffh,w
 13950  001F06  19B3               	btfsc	status,2
 13951  001F08  B4D8               	goto	u6021
 13952  001F0A  EF89  F00F         	goto	u6020
 13953  001F0E  EF8B  F00F         
 13954                           u6021:
 13955  001F12                     	goto	l7049
 13956  001F12  EF95  F00F         u6020:
 13957  001F16                     	
 13958                           l7047:; BSR set to: 0
 13959  001F16                     
 13960                           	movf	((main@botao))&0ffh,w
 13961  001F16  51B3               	btfss	status,2
 13962  001F18  A4D8               	goto	u6031
 13963  001F1A  EF91  F00F         	goto	u6030
 13964  001F1E  EF93  F00F         u6031:
 13965  001F22                     	goto	l7033
 13966  001F22  EFBF  F00E         u6030:
 13967  001F26                     	goto	l7049
 13968  001F26  EF95  F00F         	
 13969                           l422:; BSR set to: 0
 13970  001F2A                     
 13971                           	line	765
 13972                           	
 13973                           l7049:; BSR set to: 0
 13974  001F2A                     
 13975                           ;main.c: 765:                                 meAtuadores = 3;
 13976                           	movlw	low(03h)
 13977  001F2A  0E03               	movwf	((main@meAtuadores))&0ffh
 13978  001F2C  6FAF               	goto	l7033
 13979  001F2E  EFBF  F00E         	
 13980                           l420:; BSR set to: 0
 13981  001F32                     
 13982                           	line	766
 13983                           ;main.c: 766:                             break;
 13984                           	goto	l7033
 13985  001F32  EFBF  F00E         	line	768
 13986                           ;main.c: 768:             case 3:
 13987                           	
 13988                           l423:; BSR set to: 0
 13989  001F36                     
 13990                           	line	769
 13991                           	
 13992                           l7051:; BSR set to: 0
 13993  001F36                     
 13994                           ;main.c: 769:                             if(auxPasso <= 0x64 || auxPasso == 0xFE)
 13995                           		movlw	065h-1
 13996  001F36  0E64               	cpfsgt	((main@auxPasso))&0ffh
 13997  001F38  65BA               	goto	u6041
 13998  001F3A  EFA1  F00F         	goto	u6040
 13999  001F3E  EFA3  F00F         
 14000                           u6041:
 14001  001F42                     	goto	l7055
 14002  001F42  EFAE  F00F         u6040:
 14003  001F46                     	
 14004                           l7053:; BSR set to: 0
 14005  001F46                     
 14006                           		movlw	254
 14007  001F46  0EFE               	xorwf	((main@auxPasso))&0ffh,w
 14008  001F48  19BA               	btfss	status,2
 14009  001F4A  A4D8               	goto	u6051
 14010  001F4C  EFAA  F00F         	goto	u6050
 14011  001F50  EFAC  F00F         
 14012                           u6051:
 14013  001F54                     	goto	l7061
 14014  001F54  EFE1  F00F         u6050:
 14015  001F58                     	goto	l7055
 14016  001F58  EFAE  F00F         	
 14017                           l426:; BSR set to: 0
 14018  001F5C                     
 14019                           	line	771
 14020                           	
 14021                           l7055:; BSR set to: 0
 14022  001F5C                     
 14023                           ;main.c: 770:                             {;main.c: 771:                                
                                  decodifica(&auxPasso);
 14024                           		movlw	low(main@auxPasso)
 14025  001F5C  0EBA               	movwf	((c:decodifica@d)),c
 14026  001F5E  6E27               	movlw	high(main@auxPasso)
 14027  001F60  0E00               	movwf	((c:decodifica@d+1)),c
 14028  001F62  6E28               
 14029                           	call	_decodifica	;wreg free
 14030  001F64  ECE7  F014         	line	772
 14031                           	
 14032                           l7057:
 14033  001F68                     ;main.c: 772:                                 MCP4725((long)((4095L * auxPasso)/100));
 14034                           	movlb	0	; () banked
 14035  001F68  0100               	movf	((main@auxPasso))&0ffh,w
 14036  001F6A  51BA               	movwf	((c:___lmul@multiplier)),c
 14037  001F6C  6E27               	clrf	((c:___lmul@multiplier+1)),c
 14038  001F6E  6A28               	clrf	((c:___lmul@multiplier+2)),c
 14039  001F70  6A29               	clrf	((c:___lmul@multiplier+3)),c
 14040  001F72  6A2A               
 14041                           	movlw	low(0FFFh)
 14042  001F74  0EFF               	movwf	((c:___lmul@multiplicand)),c
 14043  001F76  6E2B               	movlw	high(0FFFh)
 14044  001F78  0E0F               	movwf	((c:___lmul@multiplicand+1)),c
 14045  001F7A  6E2C               	movlw	low highword(0FFFh)
 14046  001F7C  0E00               	movwf	((c:___lmul@multiplicand+2)),c
 14047  001F7E  6E2D               	movlw	high highword(0FFFh)
 14048  001F80  0E00               	movwf	((c:___lmul@multiplicand+3)),c
 14049  001F82  6E2E               	call	___lmul	;wreg free
 14050  001F84  ECAE  F01C         	movff	0+?___lmul,(c:___aldiv@dividend)
 14051  001F88  C027  F033         	movff	1+?___lmul,(c:___aldiv@dividend+1)
 14052  001F8C  C028  F034         	movff	2+?___lmul,(c:___aldiv@dividend+2)
 14053  001F90  C029  F035         	movff	3+?___lmul,(c:___aldiv@dividend+3)
 14054  001F94  C02A  F036         	
 14055                           	movlw	low(064h)
 14056  001F98  0E64               	movwf	((c:___aldiv@divisor)),c
 14057  001F9A  6E37               	movlw	high(064h)
 14058  001F9C  0E00               	movwf	((c:___aldiv@divisor+1)),c
 14059  001F9E  6E38               	movlw	low highword(064h)
 14060  001FA0  0E00               	movwf	((c:___aldiv@divisor+2)),c
 14061  001FA2  6E39               	movlw	high highword(064h)
 14062  001FA4  0E00               	movwf	((c:___aldiv@divisor+3)),c
 14063  001FA6  6E3A               	call	___aldiv	;wreg free
 14064  001FA8  EC2B  F016         	movff	0+?___aldiv,(c:MCP4725@Vout)
 14065  001FAC  C033  F041         	movff	1+?___aldiv,(c:MCP4725@Vout+1)
 14066  001FB0  C034  F042         	call	_MCP4725	;wreg free
 14067  001FB4  ECBE  F021         	line	773
 14068                           	
 14069                           l7059:
 14070  001FB8                     ;main.c: 773:                                 meAtuadores = 6;
 14071                           	movlw	low(06h)
 14072  001FB8  0E06               	movlb	0	; () banked
 14073  001FBA  0100               	movwf	((main@meAtuadores))&0ffh
 14074  001FBC  6FAF               	line	774
 14075                           ;main.c: 774:                             }
 14076                           	goto	l7033
 14077  001FBE  EFBF  F00E         	line	775
 14078                           ;main.c: 775:                             else if( auxPasso > 0x64 && auxPasso <= 0xDC )
                                 
 14079                           	
 14080                           l424:; BSR set to: 0
 14081  001FC2                     
 14082                           	
 14083                           l7061:; BSR set to: 0
 14084  001FC2                     
 14085                           		movlw	065h-1
 14086  001FC2  0E64               	cpfsgt	((main@auxPasso))&0ffh
 14087  001FC4  65BA               	goto	u6061
 14088  001FC6  EFE7  F00F         	goto	u6060
 14089  001FCA  EFE9  F00F         
 14090                           u6061:
 14091  001FCE                     	goto	l7071
 14092  001FCE  EF0C  F010         u6060:
 14093  001FD2                     	
 14094                           l7063:; BSR set to: 0
 14095  001FD2                     
 14096                           		movlw	0DDh-0
 14097  001FD2  0EDD               	cpfslt	((main@auxPasso))&0ffh
 14098  001FD4  61BA               	goto	u6071
 14099  001FD6  EFEF  F00F         	goto	u6070
 14100  001FDA  EFF1  F00F         
 14101                           u6071:
 14102  001FDE                     	goto	l7071
 14103  001FDE  EF0C  F010         u6070:
 14104  001FE2                     	line	777
 14105                           	
 14106                           l7065:; BSR set to: 0
 14107  001FE2                     
 14108                           ;main.c: 776:                             {;main.c: 777:                                
                                  auxPasso -= 0x64;
 14109                           	movlw	(064h)&0ffh
 14110  001FE2  0E64               	subwf	((main@auxPasso))&0ffh
 14111  001FE4  5FBA               	line	778
 14112                           	
 14113                           l7067:; BSR set to: 0
 14114  001FE6                     
 14115                           ;main.c: 778:                                 setT1(auxPasso * 1000 );
 14116                           	movff	(main@auxPasso),(c:___wmul@multiplier)
 14117  001FE6  C0BA  F027         	clrf	((c:___wmul@multiplier+1)),c
 14118  001FEA  6A28               	movlw	high(03E8h)
 14119  001FEC  0E03               	movwf	((c:___wmul@multiplicand+1)),c
 14120  001FEE  6E2A               	movlw	low(03E8h)
 14121  001FF0  0EE8               	movwf	((c:___wmul@multiplicand)),c
 14122  001FF2  6E29               	call	___wmul	;wreg free
 14123  001FF4  EC5F  F021         	movff	0+?___wmul,(c:setT1@c)
 14124  001FF8  C027  F02D         	movff	1+?___wmul,(c:setT1@c+1)
 14125  001FFC  C028  F02E         	movlw	0
 14126  002000  0E00               	btfsc	((c:setT1@c+1)),c,7
 14127  002002  BE2E               	movlw	-1
 14128  002004  0EFF               	movwf	((c:setT1@c+2)),c
 14129  002006  6E2F               	movwf	((c:setT1@c+3)),c
 14130  002008  6E30               	call	_setT1	;wreg free
 14131  00200A  EC76  F022         	line	779
 14132                           	
 14133                           l7069:
 14134  00200E                     ;main.c: 779:                                 meAtuadores = 4;
 14135                           	movlw	low(04h)
 14136  00200E  0E04               	movlb	0	; () banked
 14137  002010  0100               	movwf	((main@meAtuadores))&0ffh
 14138  002012  6FAF               	line	780
 14139                           ;main.c: 780:                             }
 14140                           	goto	l7033
 14141  002014  EFBF  F00E         	line	781
 14142                           ;main.c: 781:                             else
 14143                           	
 14144                           l428:; BSR set to: 0
 14145  002018                     
 14146                           	line	783
 14147                           	
 14148                           l7071:; BSR set to: 0
 14149  002018                     
 14150                           ;main.c: 782:                             {;main.c: 783:                                
                                  decodifica(&auxPasso);
 14151                           		movlw	low(main@auxPasso)
 14152  002018  0EBA               	movwf	((c:decodifica@d)),c
 14153  00201A  6E27               	movlw	high(main@auxPasso)
 14154  00201C  0E00               	movwf	((c:decodifica@d+1)),c
 14155  00201E  6E28               
 14156                           	call	_decodifica	;wreg free
 14157  002020  ECE7  F014         	line	784
 14158                           ;main.c: 784:                                 set_passo(auxPasso, vetorOut);
 14159                           		movlw	low(main@vetorOut)
 14160  002024  0EAE               	movwf	((c:set_passo@ptr)),c
 14161  002026  6E27               	movlw	high(main@vetorOut)
 14162  002028  0E00               	movwf	((c:set_passo@ptr+1)),c
 14163  00202A  6E28               
 14164                           	movlb	0	; () banked
 14165  00202C  0100               	movf	((main@auxPasso))&0ffh,w
 14166  00202E  51BA               	
 14167                           	call	_set_passo
 14168  002030  EC49  F018         	line	785
 14169                           	
 14170                           l7073:
 14171  002034                     ;main.c: 785:                                 meAtuadores = 5;
 14172                           	movlw	low(05h)
 14173  002034  0E05               	movlb	0	; () banked
 14174  002036  0100               	movwf	((main@meAtuadores))&0ffh
 14175  002038  6FAF               	goto	l7033
 14176  00203A  EFBF  F00E         	line	786
 14177                           ;main.c: 786:                             }
 14178                           	
 14179                           l429:; BSR set to: 0
 14180  00203E                     
 14181                           	goto	l7033
 14182  00203E  EFBF  F00E         	
 14183                           l427:; BSR set to: 0
 14184  002042                     
 14185                           	line	787
 14186                           ;main.c: 787:                             break;
 14187                           	goto	l7033
 14188  002042  EFBF  F00E         	line	789
 14189                           ;main.c: 789:             case 4:
 14190                           	
 14191                           l430:; BSR set to: 0
 14192  002046                     
 14193                           	line	790
 14194                           	
 14195                           l7075:; BSR set to: 0
 14196  002046                     
 14197                           ;main.c: 790:                             if(!statusT1())
 14198                           	call	_statusT1	;wreg free
 14199  002046  EC80  F022         	movf	(0+?_statusT1),c,w
 14200  00204A  5027               iorwf	(1+?_statusT1),c,w
 14201  00204C  1028               iorwf	(2+?_statusT1),c,w
 14202  00204E  1029               iorwf	(3+?_statusT1),c,w
 14203  002050  102A               	btfss	status,2
 14204  002052  A4D8               	goto	u6081
 14205  002054  EF2E  F010         	goto	u6080
 14206  002058  EF30  F010         
 14207                           u6081:
 14208  00205C                     	goto	l7033
 14209  00205C  EFBF  F00E         u6080:
 14210  002060                     	line	791
 14211                           	
 14212                           l7077:
 14213  002060                     ;main.c: 791:                                 meAtuadores = 6;
 14214                           	movlw	low(06h)
 14215  002060  0E06               	movlb	0	; () banked
 14216  002062  0100               	movwf	((main@meAtuadores))&0ffh
 14217  002064  6FAF               	goto	l7033
 14218  002066  EFBF  F00E         	
 14219                           l431:; BSR set to: 0
 14220  00206A                     
 14221                           	line	792
 14222                           ;main.c: 792:                             break;
 14223                           	goto	l7033
 14224  00206A  EFBF  F00E         	line	794
 14225                           ;main.c: 794:             case 5:
 14226                           	
 14227                           l432:; BSR set to: 0
 14228  00206E                     
 14229                           	line	795
 14230                           	
 14231                           l7079:; BSR set to: 0
 14232  00206E                     
 14233                           ;main.c: 795:                             if(ler_sensor(auxPasso, vetorIn))
 14234                           		movlw	low(main@vetorIn)
 14235  00206E  0EAD               	movwf	((c:ler_sensor@ptr)),c
 14236  002070  6E27               	movlw	high(main@vetorIn)
 14237  002072  0E00               	movwf	((c:ler_sensor@ptr+1)),c
 14238  002074  6E28               
 14239                           	movf	((main@auxPasso))&0ffh,w
 14240  002076  51BA               	
 14241                           	call	_ler_sensor
 14242  002078  EC91  F015         	iorlw	0
 14243  00207C  0900               	btfsc	status,2
 14244  00207E  B4D8               	goto	u6091
 14245  002080  EF44  F010         	goto	u6090
 14246  002084  EF46  F010         u6091:
 14247  002088                     	goto	l7033
 14248  002088  EFBF  F00E         u6090:
 14249  00208C                     	line	796
 14250                           	
 14251                           l7081:
 14252  00208C                     ;main.c: 796:                                 meAtuadores = 6;
 14253                           	movlw	low(06h)
 14254  00208C  0E06               	movlb	0	; () banked
 14255  00208E  0100               	movwf	((main@meAtuadores))&0ffh
 14256  002090  6FAF               	goto	l7033
 14257  002092  EFBF  F00E         	
 14258                           l433:; BSR set to: 0
 14259  002096                     
 14260                           	line	797
 14261                           ;main.c: 797:                             break;
 14262                           	goto	l7033
 14263  002096  EFBF  F00E         	line	799
 14264                           ;main.c: 799:             case 6:
 14265                           	
 14266                           l434:; BSR set to: 0
 14267  00209A                     
 14268                           	line	800
 14269                           	
 14270                           l7083:; BSR set to: 0
 14271  00209A                     
 14272                           ;main.c: 800:                             if(botao == 3)
 14273                           		movlw	3
 14274  00209A  0E03               	xorwf	((main@botao))&0ffh,w
 14275  00209C  19B3               	btfss	status,2
 14276  00209E  A4D8               	goto	u6101
 14277  0020A0  EF54  F010         	goto	u6100
 14278  0020A4  EF56  F010         
 14279                           u6101:
 14280  0020A8                     	goto	l435
 14281  0020A8  EF58  F010         u6100:
 14282  0020AC                     	line	802
 14283                           	
 14284                           l7085:; BSR set to: 0
 14285  0020AC                     
 14286                           ;main.c: 801:                             {;main.c: 802:                                
                                  botao = 2;
 14287                           	movlw	low(02h)
 14288  0020AC  0E02               	movwf	((main@botao))&0ffh
 14289  0020AE  6FB3               	line	803
 14290                           ;main.c: 803:                             }
 14291                           	
 14292                           l435:; BSR set to: 0
 14293  0020B0                     
 14294                           	line	804
 14295                           ;main.c: 804:                             meAtuadores = 7;
 14296                           	movlw	low(07h)
 14297  0020B0  0E07               	movwf	((main@meAtuadores))&0ffh
 14298  0020B2  6FAF               	line	806
 14299                           ;main.c: 806:                             break;
 14300                           	goto	l7033
 14301  0020B4  EFBF  F00E         	line	808
 14302                           ;main.c: 808:             case 7:
 14303                           	
 14304                           l436:; BSR set to: 0
 14305  0020B8                     
 14306                           	line	809
 14307                           	
 14308                           l7087:; BSR set to: 0
 14309  0020B8                     
 14310                           ;main.c: 809:                             addIndicePassos();
 14311                           	call	_addIndicePassos	;wreg free
 14312  0020B8  EC21  F022         	line	810
 14313                           ;main.c: 810:                             if(getIndicePassos() < fifo_indice())
 14314                           	call	_getIndicePassos	;wreg free
 14315  0020BC  ECB2  F022         	movwf	(??_main+0+0)&0ffh,c
 14316  0020C0  6E45               	call	_fifo_indice	;wreg free
 14317  0020C2  ECBA  F022         	subwf	((??_main+0+0)),c,w
 14318  0020C6  5C45               	btfsc	status,0
 14319  0020C8  B0D8               	goto	u6111
 14320  0020CA  EF69  F010         	goto	u6110
 14321  0020CE  EF6B  F010         u6111:
 14322  0020D2                     	goto	l7091
 14323  0020D2  EF70  F010         u6110:
 14324  0020D6                     	line	811
 14325                           	
 14326                           l7089:
 14327  0020D6                     ;main.c: 811:                                 meAtuadores = 2;
 14328                           	movlw	low(02h)
 14329  0020D6  0E02               	movlb	0	; () banked
 14330  0020D8  0100               	movwf	((main@meAtuadores))&0ffh
 14331  0020DA  6FAF               	goto	l7033
 14332  0020DC  EFBF  F00E         	line	812
 14333                           ;main.c: 812:                             else
 14334                           	
 14335                           l437:; BSR set to: 0
 14336  0020E0                     
 14337                           	line	814
 14338                           	
 14339                           l7091:
 14340  0020E0                     ;main.c: 813:                             {;main.c: 814:                                
                                  addContCiclos();
 14341                           	call	_addContCiclos	;wreg free
 14342  0020E0  ECCC  F022         	line	815
 14343                           	
 14344                           l7093:
 14345  0020E4                     ;main.c: 815:                                 meAtuadores = 8;
 14346                           	movlw	low(08h)
 14347  0020E4  0E08               	movlb	0	; () banked
 14348  0020E6  0100               	movwf	((main@meAtuadores))&0ffh
 14349  0020E8  6FAF               	goto	l7033
 14350  0020EA  EFBF  F00E         	line	816
 14351                           ;main.c: 816:                             }
 14352                           	
 14353                           l438:; BSR set to: 0
 14354  0020EE                     
 14355                           	line	817
 14356                           ;main.c: 817:                             break;
 14357                           	goto	l7033
 14358  0020EE  EFBF  F00E         	line	819
 14359                           ;main.c: 819:             case 8:
 14360                           	
 14361                           l439:; BSR set to: 0
 14362  0020F2                     
 14363                           	line	820
 14364                           	
 14365                           l7095:; BSR set to: 0
 14366  0020F2                     
 14367                           ;main.c: 820:                             if((botao != 0) && ((getContCiclos() < getCicl
                                 os()) || (getCiclos() == 0)))
 14368                           	movf	((main@botao))&0ffh,w
 14369  0020F2  51B3               	btfsc	status,2
 14370  0020F4  B4D8               	goto	u6121
 14371  0020F6  EF7F  F010         	goto	u6120
 14372  0020FA  EF81  F010         u6121:
 14373  0020FE                     	goto	l7105
 14374  0020FE  EFA8  F010         u6120:
 14375  002102                     	
 14376                           l7097:; BSR set to: 0
 14377  002102                     
 14378                           	call	_getContCiclos	;wreg free
 14379  002102  ECA8  F022         	movff	0+?_getContCiclos,??_main+0+0
 14380  002106  C027  F045         	movff	1+?_getContCiclos,??_main+0+0+1
 14381  00210A  C028  F046         	call	_getCiclos	;wreg free
 14382  00210E  ECAD  F021         		movf	(0+?_getCiclos),c,w
 14383  002112  5027               	subwf	(??_main+0+0),c,w
 14384  002114  5C45               	movf	(1+?_getCiclos),c,w
 14385  002116  5028               	subwfb	(??_main+0+1),c,w
 14386  002118  5846               	btfss	status,0
 14387  00211A  A0D8               	goto	u6131
 14388  00211C  EF92  F010         	goto	u6130
 14389  002120  EF94  F010         
 14390                           u6131:
 14391  002124                     	goto	l7101
 14392  002124  EFA1  F010         u6130:
 14393  002128                     	
 14394                           l7099:
 14395  002128                     	call	_getCiclos	;wreg free
 14396  002128  ECAD  F021         	movf	(0+?_getCiclos),c,w
 14397  00212C  5027               iorwf	(1+?_getCiclos),c,w
 14398  00212E  1028               	btfss	status,2
 14399  002130  A4D8               	goto	u6141
 14400  002132  EF9D  F010         	goto	u6140
 14401  002136  EF9F  F010         
 14402                           u6141:
 14403  00213A                     	goto	l7105
 14404  00213A  EFA8  F010         u6140:
 14405  00213E                     	goto	l7101
 14406  00213E  EFA1  F010         	
 14407                           l442:
 14408  002142                     	line	822
 14409                           	
 14410                           l7101:
 14411  002142                     ;main.c: 821:                             {;main.c: 822:                                
                                  resetIndicePassos();
 14412                           	call	_resetIndicePassos	;wreg free
 14413  002142  ECC9  F022         	line	823
 14414                           	
 14415                           l7103:
 14416  002146                     ;main.c: 823:                                 meAtuadores = 2;
 14417                           	movlw	low(02h)
 14418  002146  0E02               	movlb	0	; () banked
 14419  002148  0100               	movwf	((main@meAtuadores))&0ffh
 14420  00214A  6FAF               	line	824
 14421                           ;main.c: 824:                             }
 14422                           	goto	l7033
 14423  00214C  EFBF  F00E         	line	825
 14424                           ;main.c: 825:                             else
 14425                           	
 14426                           l440:; BSR set to: 0
 14427  002150                     
 14428                           	line	827
 14429                           	
 14430                           l7105:
 14431  002150                     ;main.c: 826:                             {;main.c: 827:                                
                                  meAtuadores = 0;
 14432                           	movlw	low(0)
 14433  002150  0E00               	movlb	0	; () banked
 14434  002152  0100               	movwf	((main@meAtuadores))&0ffh
 14435  002154  6FAF               	goto	l7033
 14436  002156  EFBF  F00E         	line	828
 14437                           ;main.c: 828:                             }
 14438                           	
 14439                           l443:; BSR set to: 0
 14440  00215A                     
 14441                           	line	829
 14442                           ;main.c: 829:                             break;
 14443                           	goto	l7033
 14444  00215A  EFBF  F00E         	line	830
 14445                           	
 14446                           l7107:; BSR set to: 0
 14447  00215E                     
 14448                           ;main.c: 830:         }
 14449                           	goto	l7033
 14450  00215E  EFBF  F00E         	
 14451                           l415:; BSR set to: 0
 14452  002162                     
 14453                           	
 14454                           l7109:
 14455  002162                     	movlb	0	; () banked
 14456  002162  0100               	movf	((main@meAtuadores))&0ffh,w
 14457  002164  51AF               	movwf	(??_main+0+0)&0ffh,c
 14458  002166  6E45               	clrf	(??_main+0+0+1)&0ffh,c
 14459  002168  6A46               
 14460                           	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
 14461                           ; Switch size 1, requested type "space"
 14462                           ; Number of cases is 1, Range of values is 0 to 0
 14463                           ; switch strategies available:
 14464                           ; Name         Instructions Cycles
 14465                           ; simple_byte            4     3 (average)
 14466                           ;	Chosen strategy is simple_byte
 14467                           
 14468                           	movf ??_main+0+1,c,w
 14469  00216A  5046               	xorlw	0^0	; case 0
 14470  00216C  0A00               	skipnz
 14471  00216E  B4D8               	goto	l7965
 14472  002170  EFBC  F010         	goto	l7033
 14473  002174  EFBF  F00E         	
 14474                           l7965:; BSR set to: 0
 14475  002178                     
 14476                           ; Switch size 1, requested type "space"
 14477                           ; Number of cases is 9, Range of values is 0 to 8
 14478                           ; switch strategies available:
 14479                           ; Name         Instructions Cycles
 14480                           ; simple_byte           28    15 (average)
 14481                           ;	Chosen strategy is simple_byte
 14482                           
 14483                           	movf ??_main+0+0,c,w
 14484  002178  5045               	xorlw	0^0	; case 0
 14485  00217A  0A00               	skipnz
 14486  00217C  B4D8               	goto	l7033
 14487  00217E  EFBF  F00E         	xorlw	1^0	; case 1
 14488  002182  0A01               	skipnz
 14489  002184  B4D8               	goto	l7037
 14490  002186  EF6B  F00F         	xorlw	2^1	; case 2
 14491  00218A  0A03               	skipnz
 14492  00218C  B4D8               	goto	l7041
 14493  00218E  EF74  F00F         	xorlw	3^2	; case 3
 14494  002192  0A01               	skipnz
 14495  002194  B4D8               	goto	l7051
 14496  002196  EF9B  F00F         	xorlw	4^3	; case 4
 14497  00219A  0A07               	skipnz
 14498  00219C  B4D8               	goto	l7075
 14499  00219E  EF23  F010         	xorlw	5^4	; case 5
 14500  0021A2  0A01               	skipnz
 14501  0021A4  B4D8               	goto	l7079
 14502  0021A6  EF37  F010         	xorlw	6^5	; case 6
 14503  0021AA  0A03               	skipnz
 14504  0021AC  B4D8               	goto	l7083
 14505  0021AE  EF4D  F010         	xorlw	7^6	; case 7
 14506  0021B2  0A01               	skipnz
 14507  0021B4  B4D8               	goto	l7087
 14508  0021B6  EF5C  F010         	xorlw	8^7	; case 8
 14509  0021BA  0A0F               	skipnz
 14510  0021BC  B4D8               	goto	l7095
 14511  0021BE  EF79  F010         	goto	l7033
 14512  0021C2  EFBF  F00E         
 14513                           	
 14514                           l417:; BSR set to: 0
 14515  0021C6                     
 14516                           	goto	l7033
 14517  0021C6  EFBF  F00E         	line	831
 14518                           ;main.c: 831:     }
 14519                           	
 14520                           l444:; BSR set to: 0
 14521  0021CA                     
 14522                           	goto	l7033
 14523  0021CA  EFBF  F00E         	
 14524                           l445:; BSR set to: 0
 14525  0021CE                     
 14526                           	line	833
 14527                           ;main.c: 832:     return;
 14528                           	
 14529                           l446:; BSR set to: 0
 14530  0021CE                     
 14531                           	global	start
 14532                           	goto	start
 14533  0021CE  EF07  F000         	opt stack 0
 14534                           GLOBAL	__end_of_main
 14535                           	__end_of_main:
 14536  0021D2                     	signat	_main,89
 14537                           	global	_wifi_init
 14538                           
 14539 ;; *************** function _wifi_init *****************
 14540 ;; Defined at:
 14541 ;;		line 12 in file "wifi.c"
 14542 ;; Parameters:    Size  Location     Type
 14543 ;;  br              4   21[COMRAM] long 
 14544 ;; Auto vars:     Size  Location     Type
 14545 ;;		None
 14546 ;; Return value:  Size  Location     Type
 14547 ;;                  1    wreg      void 
 14548 ;; Registers used:
 14549 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 14550 ;; Tracked objects:
 14551 ;;		On entry : 0/0
 14552 ;;		On exit  : 0/0
 14553 ;;		Unchanged: 0/0
 14554 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14555 ;;      Params:         4       0       0       0       0       0       0       0       0       0
 14556 ;;      Locals:         0       0       0       0       0       0       0       0       0       0
 14557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0
 14558 ;;      Totals:         4       0       0       0       0       0       0       0       0       0
 14559 ;;Total ram usage:        4 bytes
 14560 ;; Hardware stack levels used:    1
 14561 ;; Hardware stack levels required when called:    4
 14562 ;; This function calls:
 14563 ;;		_initEUSART
 14564 ;; This function is called by:
 14565 ;;		_main
 14566 ;; This function uses a non-reentrant model
 14567 ;;
 14568                           psect	text1,class=CODE,space=0,reloc=2,group=0
 14569                           	file	"wifi.c"
 14570                           	line	12
 14571                           global __ptext1
 14572                           __ptext1:
 14573  004202                     psect	text1
 14574                           	file	"wifi.c"
 14575                           	line	12
 14576                           	global	__size_of_wifi_init
 14577                           	__size_of_wifi_init	equ	__end_of_wifi_init-_wifi_init
 14578  0000                     	
 14579                           _wifi_init:; BSR set to: 0
 14580  004202                     
 14581                           ;incstack = 0
 14582                           	opt	stack 26
 14583                           	line	14
 14584                           	
 14585                           l6185:
 14586  004202                     ;wifi.c: 12: void wifi_init( long br);wifi.c: 13: {;wifi.c: 14:     eusart.init(br);
 14587                           	movff	(c:wifi_init@br),(c:initEUSART@baudRate)
 14588  004202  C03C  F034         	movff	(c:wifi_init@br+1),(c:initEUSART@baudRate+1)
 14589  004206  C03D  F035         	movff	(c:wifi_init@br+2),(c:initEUSART@baudRate+2)
 14590  00420A  C03E  F036         	movff	(c:wifi_init@br+3),(c:initEUSART@baudRate+3)
 14591  00420E  C03F  F037         	lfsr	2,(_eusart)+0Ch
 14592  004212  EE20  F0DD         	call	u4678
 14593  004216  D802               	goto	u4679
 14594  004218  EF18  F021         u4678:
 14595  00421C                     	push
 14596  00421C  0005               	movwf	pclath
 14597  00421E  6EFA               	movf	postinc2,w
 14598  004220  50DE               	movwf	tosl
 14599  004222  6EFD               	movf	postinc2,w
 14600  004224  50DE               	movwf	tosl+1
 14601  004226  6EFE               	movf	tblptru,w
 14602  004228  50F8               	movwf	tosl+2
 14603  00422A  6EFF               	movf	pclath,w
 14604  00422C  50FA               	
 14605                           	return	;indir
 14606  00422E  0012               	u4679:
 14607  004230                     	line	15
 14608                           	
 14609                           l1175:
 14610  004230                     	return	;funcret
 14611  004230  0012               	opt stack 0
 14612                           GLOBAL	__end_of_wifi_init
 14613                           	__end_of_wifi_init:
 14614  004232                     	signat	_wifi_init,4217
 14615                           	global	_initEUSART
 14616                           
 14617 ;; *************** function _initEUSART *****************
 14618 ;; Defined at:
 14619 ;;		line 137 in file "eusart.c"
 14620 ;; Parameters:    Size  Location     Type
 14621 ;;  baudRate        4   13[COMRAM] unsigned long 
 14622 ;; Auto vars:     Size  Location     Type
 14623 ;;		None
 14624 ;; Return value:  Size  Location     Type
 14625 ;;                  1    wreg      void 
 14626 ;; Registers used:
 14627 ;;		wreg, status,2, status,0, cstack
 14628 ;; Tracked objects:
 14629 ;;		On entry : 0/0
 14630 ;;		On exit  : 0/0
 14631 ;;		Unchanged: 0/0
 14632 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14633 ;;      Params:         4       0       0       0       0       0       0       0       0       0
 14634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0
 14635 ;;      Temps:          4       0       0       0       0       0       0       0       0       0
 14636 ;;      Totals:         8       0       0       0       0       0       0       0       0       0
 14637 ;;Total ram usage:        8 bytes
 14638 ;; Hardware stack levels used:    1
 14639 ;; Hardware stack levels required when called:    3
 14640 ;; This function calls:
 14641 ;;		___lldiv
 14642 ;; This function is called by:
 14643 ;;		_wifi_init
 14644 ;; This function uses a non-reentrant model
 14645 ;;
 14646                           psect	text2,class=CODE,space=0,reloc=2,group=0
 14647                           	file	"eusart.c"
 14648                           	line	137
 14649                           global __ptext2
 14650                           __ptext2:
 14651  0039CE                     psect	text2
 14652                           	file	"eusart.c"
 14653                           	line	137
 14654                           	global	__size_of_initEUSART
 14655                           	__size_of_initEUSART	equ	__end_of_initEUSART-_initEUSART
 14656  0000                     	
 14657                           _initEUSART:
 14658  0039CE                     ;incstack = 0
 14659                           	opt	stack 26
 14660                           	line	139
 14661                           	
 14662                           l5503:
 14663  0039CE                     ;eusart.c: 137: void initEUSART( unsigned long baudRate );eusart.c: 138: {;eusart.c: 139
                                 :     INTCONbits.GIE = 0;
 14664                           	bcf	((c:4082)),c,7	;volatile
 14665  0039CE  9EF2               	line	142
 14666                           	
 14667                           l5505:
 14668  0039D0                     ;eusart.c: 142:     SPBRbits.u16 = (unsigned int)( (20000000 / (baudRate<<2)) - 1);
 14669                           	movlw	low(01312D00h)
 14670  0039D0  0E00               	movwf	((c:___lldiv@dividend)),c
 14671  0039D2  6E27               	movlw	high(01312D00h)
 14672  0039D4  0E2D               	movwf	((c:___lldiv@dividend+1)),c
 14673  0039D6  6E28               	movlw	low highword(01312D00h)
 14674  0039D8  0E31               	movwf	((c:___lldiv@dividend+2)),c
 14675  0039DA  6E29               	movlw	high highword(01312D00h)
 14676  0039DC  0E01               	movwf	((c:___lldiv@dividend+3)),c
 14677  0039DE  6E2A               	movff	(c:initEUSART@baudRate),??_initEUSART+0+0
 14678  0039E0  C034  F038         	movff	(c:initEUSART@baudRate+1),??_initEUSART+0+0+1
 14679  0039E4  C035  F039         	movff	(c:initEUSART@baudRate+2),??_initEUSART+0+0+2
 14680  0039E8  C036  F03A         	movff	(c:initEUSART@baudRate+3),??_initEUSART+0+0+3
 14681  0039EC  C037  F03B         	movlw	02h
 14682  0039F0  0E02               u3995:
 14683  0039F2                     	bcf	status,0
 14684  0039F2  90D8               	rlcf	(??_initEUSART+0+0),c
 14685  0039F4  3638               	rlcf	(??_initEUSART+0+1),c
 14686  0039F6  3639               	rlcf	(??_initEUSART+0+2),c
 14687  0039F8  363A               	rlcf	(??_initEUSART+0+3),c
 14688  0039FA  363B               	decfsz	wreg
 14689  0039FC  2EE8               	goto	u3995
 14690  0039FE  EFF9  F01C         	movff	??_initEUSART+0+0,(c:___lldiv@divisor)
 14691  003A02  C038  F02B         	movff	??_initEUSART+0+1,(c:___lldiv@divisor+1)
 14692  003A06  C039  F02C         	movff	??_initEUSART+0+2,(c:___lldiv@divisor+2)
 14693  003A0A  C03A  F02D         	movff	??_initEUSART+0+3,(c:___lldiv@divisor+3)
 14694  003A0E  C03B  F02E         	call	___lldiv	;wreg free
 14695  003A12  ECB1  F01A         	movlw	low(0FFFFh)
 14696  003A16  0EFF               	addwf	(0+?___lldiv),c,w
 14697  003A18  2427               	movlb	0	; () banked
 14698  003A1A  0100               	movwf	((153))&0ffh	;volatile
 14699  003A1C  6F99               	movlw	high(0FFFFh)
 14700  003A1E  0EFF               	addwfc	(1+?___lldiv),c,w
 14701  003A20  2028               	movwf	1+((153))&0ffh	;volatile
 14702  003A22  6F9A               	line	146
 14703                           	
 14704                           l5507:; BSR set to: 0
 14705  003A24                     
 14706                           ;eusart.c: 146:     TXSTAbits.SYNC = 0;
 14707                           	bcf	((c:4012)),c,4	;volatile
 14708  003A24  98AC               	line	147
 14709                           	
 14710                           l5509:; BSR set to: 0
 14711  003A26                     
 14712                           ;eusart.c: 147:     BAUDCTLbits.BRG16 = 1;
 14713                           	bsf	((c:4024)),c,3	;volatile
 14714  003A26  86B8               	line	148
 14715                           	
 14716                           l5511:; BSR set to: 0
 14717  003A28                     
 14718                           ;eusart.c: 148:     TXSTAbits.BRGH = 1;
 14719                           	bsf	((c:4012)),c,2	;volatile
 14720  003A28  84AC               	line	150
 14721                           	
 14722                           l5513:; BSR set to: 0
 14723  003A2A                     
 14724                           ;eusart.c: 150:     RCSTAbits.SPEN = 1;
 14725                           	bsf	((c:4011)),c,7	;volatile
 14726  003A2A  8EAB               	line	151
 14727                           	
 14728                           l5515:; BSR set to: 0
 14729  003A2C                     
 14730                           ;eusart.c: 151:     TXSTAbits.TXEN = 1;
 14731                           	bsf	((c:4012)),c,5	;volatile
 14732  003A2C  8AAC               	line	152
 14733                           	
 14734                           l5517:; BSR set to: 0
 14735  003A2E                     
 14736                           ;eusart.c: 152:     RCSTAbits.CREN = 1;
 14737                           	bsf	((c:4011)),c,4	;volatile
 14738  003A2E  88AB               	line	154
 14739                           	
 14740                           l5519:; BSR set to: 0
 14741  003A30                     
 14742                           ;eusart.c: 154:     PIE1bits.RCIE = 1;
 14743                           	bsf	((c:3997)),c,5	;volatile
 14744  003A30  8A9D               	line	155
 14745                           	
 14746                           l5521:; BSR set to: 0
 14747  003A32                     
 14748                           ;eusart.c: 155:     PIE1bits.TXIE = 0;
 14749                           	bcf	((c:3997)),c,4	;volatile
 14750  003A32  989D               	line	156
 14751                           	
 14752                           l5523:; BSR set to: 0
 14753  003A34                     
 14754                           ;eusart.c: 156:     INTCONbits.PEIE = 1;
 14755                           	bsf	((c:4082)),c,6	;volatile
 14756  003A34  8CF2               	line	157
 14757                           	
 14758                           l5525:; BSR set to: 0
 14759  003A36                     
 14760                           ;eusart.c: 157:     INTCONbits.GIE = 1;
 14761                           	bsf	((c:4082)),c,7	;volatile
 14762  003A36  8EF2               	line	158
 14763                           	
 14764                           l1137:; BSR set to: 0
 14765  003A38                     
 14766                           	return	;funcret
 14767  003A38  0012               	opt stack 0
 14768                           GLOBAL	__end_of_initEUSART
 14769                           	__end_of_initEUSART:
 14770  003A3A                     	signat	_initEUSART,4217
 14771                           	global	_timer1_init
 14772                           
 14773 ;; *************** function _timer1_init *****************
 14774 ;; Defined at:
 14775 ;;		line 16 in file "timer1.c"
 14776 ;; Parameters:    Size  Location     Type
 14777 ;;		None
 14778 ;; Auto vars:     Size  Location     Type
 14779 ;;		None
 14780 ;; Return value:  Size  Location     Type
 14781 ;;                  1    wreg      void 
 14782 ;; Registers used:
 14783 ;;		wreg, status,2
 14784 ;; Tracked objects:
 14785 ;;		On entry : 0/0
 14786 ;;		On exit  : 0/0
 14787 ;;		Unchanged: 0/0
 14788 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14789 ;;      Params:         0       0       0       0       0       0       0       0       0       0
 14790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0
 14791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0
 14792 ;;      Totals:         0       0       0       0       0       0       0       0       0       0
 14793 ;;Total ram usage:        0 bytes
 14794 ;; Hardware stack levels used:    1
 14795 ;; Hardware stack levels required when called:    2
 14796 ;; This function calls:
 14797 ;;		Nothing
 14798 ;; This function is called by:
 14799 ;;		_main
 14800 ;; This function uses a non-reentrant model
 14801 ;;
 14802                           psect	text3,class=CODE,space=0,reloc=2,group=0
 14803                           	file	"timer1.c"
 14804                           	line	16
 14805                           global __ptext3
 14806                           __ptext3:
 14807  0043DA                     psect	text3
 14808                           	file	"timer1.c"
 14809                           	line	16
 14810                           	global	__size_of_timer1_init
 14811                           	__size_of_timer1_init	equ	__end_of_timer1_init-_timer1_init
 14812  0000                     	
 14813                           _timer1_init:; BSR set to: 0
 14814  0043DA                     
 14815                           ;incstack = 0
 14816                           	opt	stack 28
 14817                           	line	18
 14818                           	
 14819                           l5571:
 14820  0043DA                     ;timer1.c: 18:     T1CONbits.TMR1CS = 0;
 14821                           	bcf	((c:4045)),c,1	;volatile
 14822  0043DA  92CD               	line	19
 14823                           	
 14824                           l5573:
 14825  0043DC                     ;timer1.c: 19:     T1CONbits.T1CKPS = 0b11;
 14826                           	movlw	(03h & ((1<<2)-1))<<4
 14827  0043DC  0E30               	iorwf	((c:4045)),c	;volatile
 14828  0043DE  12CD               	line	20
 14829                           	
 14830                           l5575:
 14831  0043E0                     ;timer1.c: 20:     T1CONbits.nT1SYNC = 1;
 14832                           	bsf	((c:4045)),c,2	;volatile
 14833  0043E0  84CD               	line	21
 14834                           ;timer1.c: 21:     TMR1H = ((65536-625)>>8) & 0x00FF;
 14835                           	movlw	low(0FDh)
 14836  0043E2  0EFD               	movwf	((c:4047)),c	;volatile
 14837  0043E4  6ECF               	line	22
 14838                           ;timer1.c: 22:     TMR1L = (65536-625) & 0x00FF;
 14839                           	movlw	low(08Fh)
 14840  0043E6  0E8F               	movwf	((c:4046)),c	;volatile
 14841  0043E8  6ECE               	line	23
 14842                           	
 14843                           l5577:
 14844  0043EA                     ;timer1.c: 23:     T1CONbits.T1RUN = 0;
 14845                           	bcf	((c:4045)),c,6	;volatile
 14846  0043EA  9CCD               	line	25
 14847                           	
 14848                           l5579:
 14849  0043EC                     ;timer1.c: 25:     PIE1bits.TMR1IE = 1;
 14850                           	bsf	((c:3997)),c,0	;volatile
 14851  0043EC  809D               	line	26
 14852                           	
 14853                           l5581:
 14854  0043EE                     ;timer1.c: 26:     INTCONbits.PEIE = 1;
 14855                           	bsf	((c:4082)),c,6	;volatile
 14856  0043EE  8CF2               	line	27
 14857                           	
 14858                           l5583:
 14859  0043F0                     ;timer1.c: 27:     INTCONbits.GIE = 1;
 14860                           	bsf	((c:4082)),c,7	;volatile
 14861  0043F0  8EF2               	line	29
 14862                           	
 14863                           l1066:
 14864  0043F2                     	return	;funcret
 14865  0043F2  0012               	opt stack 0
 14866                           GLOBAL	__end_of_timer1_init
 14867                           	__end_of_timer1_init:
 14868  0043F4                     	signat	_timer1_init,89
 14869                           	global	_teclado_init
 14870                           
 14871 ;; *************** function _teclado_init *****************
 14872 ;; Defined at:
 14873 ;;		line 29 in file "teclado.c"
 14874 ;; Parameters:    Size  Location     Type
 14875 ;;		None
 14876 ;; Auto vars:     Size  Location     Type
 14877 ;;		None
 14878 ;; Return value:  Size  Location     Type
 14879 ;;                  1    wreg      void 
 14880 ;; Registers used:
 14881 ;;		wreg, status,2
 14882 ;; Tracked objects:
 14883 ;;		On entry : 0/0
 14884 ;;		On exit  : 0/0
 14885 ;;		Unchanged: 0/0
 14886 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14887 ;;      Params:         0       0       0       0       0       0       0       0       0       0
 14888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0
 14889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0
 14890 ;;      Totals:         0       0       0       0       0       0       0       0       0       0
 14891 ;;Total ram usage:        0 bytes
 14892 ;; Hardware stack levels used:    1
 14893 ;; Hardware stack levels required when called:    2
 14894 ;; This function calls:
 14895 ;;		Nothing
 14896 ;; This function is called by:
 14897 ;;		_main
 14898 ;; This function uses a non-reentrant model
 14899 ;;
 14900                           psect	text4,class=CODE,space=0,reloc=2,group=0
 14901                           	file	"teclado.c"
 14902                           	line	29
 14903                           global __ptext4
 14904                           __ptext4:
 14905  004532                     psect	text4
 14906                           	file	"teclado.c"
 14907                           	line	29
 14908                           	global	__size_of_teclado_init
 14909                           	__size_of_teclado_init	equ	__end_of_teclado_init-_teclado_init
 14910  0000                     	
 14911                           _teclado_init:
 14912  004532                     ;incstack = 0
 14913                           	opt	stack 28
 14914                           	line	31
 14915                           	
 14916                           l5569:
 14917  004532                     ;teclado.c: 31:     PORTD = 0x00;
 14918                           	movlw	low(0)
 14919  004532  0E00               	movwf	((c:3971)),c	;volatile
 14920  004534  6E83               	line	32
 14921                           ;teclado.c: 32:     TRISD = 0xF0;
 14922                           	movlw	low(0F0h)
 14923  004536  0EF0               	movwf	((c:3989)),c	;volatile
 14924  004538  6E95               	line	34
 14925                           	
 14926                           l1014:
 14927  00453A                     	return	;funcret
 14928  00453A  0012               	opt stack 0
 14929                           GLOBAL	__end_of_teclado_init
 14930                           	__end_of_teclado_init:
 14931  00453C                     	signat	_teclado_init,89
 14932                           	global	_teclado_borda
 14933                           
 14934 ;; *************** function _teclado_borda *****************
 14935 ;; Defined at:
 14936 ;;		line 92 in file "teclado.c"
 14937 ;; Parameters:    Size  Location     Type
 14938 ;;		None
 14939 ;; Auto vars:     Size  Location     Type
 14940 ;;  tecla           1    6[COMRAM] unsigned char 
 14941 ;;  aux             1    5[COMRAM] unsigned char 
 14942 ;; Return value:  Size  Location     Type
 14943 ;;                  1    wreg      unsigned char 
 14944 ;; Registers used:
 14945 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14946 ;; Tracked objects:
 14947 ;;		On entry : 0/0
 14948 ;;		On exit  : 0/0
 14949 ;;		Unchanged: 0/0
 14950 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14951 ;;      Params:         0       0       0       0       0       0       0       0       0       0
 14952 ;;      Locals:         2       0       0       0       0       0       0       0       0       0
 14953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0
 14954 ;;      Totals:         2       0       0       0       0       0       0       0       0       0
 14955 ;;Total ram usage:        2 bytes
 14956 ;; Hardware stack levels used:    1
 14957 ;; Hardware stack levels required when called:    3
 14958 ;; This function calls:
 14959 ;;		_teclado_scan
 14960 ;; This function is called by:
 14961 ;;		_main
 14962 ;; This function uses a non-reentrant model
 14963 ;;
 14964                           psect	text5,class=CODE,space=0,reloc=2,group=0
 14965                           	line	92
 14966                           global __ptext5
 14967                           __ptext5:
 14968  00404A                     psect	text5
 14969                           	file	"teclado.c"
 14970                           	line	92
 14971                           	global	__size_of_teclado_borda
 14972                           	__size_of_teclado_borda	equ	__end_of_teclado_borda-_teclado_borda
 14973  0000                     	
 14974                           _teclado_borda:
 14975  00404A                     ;incstack = 0
 14976                           	opt	stack 27
 14977                           	line	94
 14978                           	
 14979                           l5635:
 14980  00404A                     ;teclado.c: 94:     char tecla = 0;
 14981                           	movlw	low(0)
 14982  00404A  0E00               	movwf	((c:teclado_borda@tecla)),c
 14983  00404C  6E2D               	line	95
 14984                           ;teclado.c: 95:     char aux = 0;
 14985                           	movlw	low(0)
 14986  00404E  0E00               	movwf	((c:teclado_borda@aux)),c
 14987  004050  6E2C               	line	97
 14988                           	
 14989                           l5637:
 14990  004052                     ;teclado.c: 97:     tecla = teclado_scan();
 14991                           	call	_teclado_scan	;wreg free
 14992  004052  ECBC  F018         	movwf	((c:teclado_borda@tecla)),c
 14993  004056  6E2D               	line	99
 14994                           	
 14995                           l5639:
 14996  004058                     ;teclado.c: 99:     if(tecla && !teclaAnterior)
 14997                           	movf	((c:teclado_borda@tecla)),c,w
 14998  004058  502D               	btfsc	status,2
 14999  00405A  B4D8               	goto	u4091
 15000  00405C  EF32  F020         	goto	u4090
 15001  004060  EF34  F020         u4091:
 15002  004064                     	goto	l1029
 15003  004064  EF3E  F020         u4090:
 15004  004068                     	
 15005                           l5641:
 15006  004068                     	movf	((c:_teclaAnterior)),c,w
 15007  004068  5011               	btfss	status,2
 15008  00406A  A4D8               	goto	u4101
 15009  00406C  EF3A  F020         	goto	u4100
 15010  004070  EF3C  F020         u4101:
 15011  004074                     	goto	l1029
 15012  004074  EF3E  F020         u4100:
 15013  004078                     	line	100
 15014                           	
 15015                           l5643:
 15016  004078                     ;teclado.c: 100:         aux = tecla;
 15017                           	movff	(c:teclado_borda@tecla),(c:teclado_borda@aux)
 15018  004078  C02D  F02C         	
 15019                           l1029:
 15020  00407C                     	line	102
 15021                           ;teclado.c: 102:     teclaAnterior = tecla;
 15022                           	movff	(c:teclado_borda@tecla),(c:_teclaAnterior)
 15023  00407C  C02D  F011         	line	104
 15024                           	
 15025                           l5645:
 15026  004080                     ;teclado.c: 104:     return(aux);
 15027                           	movf	((c:teclado_borda@aux)),c,w
 15028  004080  502C               	goto	l1030
 15029  004082  EF43  F020         	
 15030                           l5647:
 15031  004086                     	line	105
 15032                           	
 15033                           l1030:
 15034  004086                     	return	;funcret
 15035  004086  0012               	opt stack 0
 15036                           GLOBAL	__end_of_teclado_borda
 15037                           	__end_of_teclado_borda:
 15038  004088                     	signat	_teclado_borda,89
 15039                           	global	_teclado_scan
 15040                           
 15041 ;; *************** function _teclado_scan *****************
 15042 ;; Defined at:
 15043 ;;		line 55 in file "teclado.c"
 15044 ;; Parameters:    Size  Location     Type
 15045 ;;		None
 15046 ;; Auto vars:     Size  Location     Type
 15047 ;;  c               1    4[COMRAM] unsigned char 
 15048 ;;  l               1    3[COMRAM] unsigned char 
 15049 ;;  tecla           1    2[COMRAM] unsigned char 
 15050 ;; Return value:  Size  Location     Type
 15051 ;;                  1    wreg      unsigned char 
 15052 ;; Registers used:
 15053 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 15054 ;; Tracked objects:
 15055 ;;		On entry : 0/0
 15056 ;;		On exit  : 0/0
 15057 ;;		Unchanged: 0/0
 15058 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15059 ;;      Params:         0       0       0       0       0       0       0       0       0       0
 15060 ;;      Locals:         3       0       0       0       0       0       0       0       0       0
 15061 ;;      Temps:          2       0       0       0       0       0       0       0       0       0
 15062 ;;      Totals:         5       0       0       0       0       0       0       0       0       0
 15063 ;;Total ram usage:        5 bytes
 15064 ;; Hardware stack levels used:    1
 15065 ;; Hardware stack levels required when called:    2
 15066 ;; This function calls:
 15067 ;;		Nothing
 15068 ;; This function is called by:
 15069 ;;		_teclado_borda
 15070 ;; This function uses a non-reentrant model
 15071 ;;
 15072                           psect	text6,class=CODE,space=0,reloc=2,group=0
 15073                           	line	55
 15074                           global __ptext6
 15075                           __ptext6:
 15076  003178                     psect	text6
 15077                           	file	"teclado.c"
 15078                           	line	55
 15079                           	global	__size_of_teclado_scan
 15080                           	__size_of_teclado_scan	equ	__end_of_teclado_scan-_teclado_scan
 15081  0000                     	
 15082                           _teclado_scan:
 15083  003178                     ;incstack = 0
 15084                           	opt	stack 27
 15085                           	line	57
 15086                           	
 15087                           l5473:
 15088  003178                     ;teclado.c: 57:    char tecla = 0;
 15089                           	movlw	low(0)
 15090  003178  0E00               	movwf	((c:teclado_scan@tecla)),c
 15091  00317A  6E29               	line	73
 15092                           ;teclado.c: 71:     unsigned char l,c;;teclado.c: 73:     for( l=0; l<4; l++ )
 15093                           	movlw	low(0)
 15094  00317C  0E00               	movwf	((c:teclado_scan@l)),c
 15095  00317E  6E2A               	
 15096                           l5475:
 15097  003180                     		movlw	04h-1
 15098  003180  0E03               	cpfsgt	((c:teclado_scan@l)),c
 15099  003182  642A               	goto	u3921
 15100  003184  EFC6  F018         	goto	u3920
 15101  003188  EFC8  F018         
 15102                           u3921:
 15103  00318C                     	goto	l5479
 15104  00318C  EFCC  F018         u3920:
 15105  003190                     	goto	l5499
 15106  003190  EF2A  F019         	
 15107                           l5477:
 15108  003194                     	goto	l5499
 15109  003194  EF2A  F019         	
 15110                           l1019:
 15111  003198                     	line	75
 15112                           	
 15113                           l5479:
 15114  003198                     ;teclado.c: 74:     {;teclado.c: 75:         PORTD = (0x01 << l);
 15115                           	movff	(c:teclado_scan@l),??_teclado_scan+0+0
 15116  003198  C02A  F027         	movlw	(01h)&0ffh
 15117  00319C  0E01               	movwf	(??_teclado_scan+1+0)&0ffh,c
 15118  00319E  6E28               	incf	(??_teclado_scan+0+0),c
 15119  0031A0  2A27               	goto	u3934
 15120  0031A2  EFD5  F018         u3935:
 15121  0031A6                     	bcf	status,0
 15122  0031A6  90D8               	rlcf	((??_teclado_scan+1+0)),c
 15123  0031A8  3628               u3934:
 15124  0031AA                     	decfsz	(??_teclado_scan+0+0),c
 15125  0031AA  2E27               	goto	u3935
 15126  0031AC  EFD3  F018         	movf	((??_teclado_scan+1+0)),c,w
 15127  0031B0  5028               	movwf	((c:3971)),c	;volatile
 15128  0031B2  6E83               	line	77
 15129                           	
 15130                           l5481:
 15131  0031B4                     ;teclado.c: 77:         for( c=0; c<4; c++ )
 15132                           	movlw	low(0)
 15133  0031B4  0E00               	movwf	((c:teclado_scan@c)),c
 15134  0031B6  6E2B               	
 15135                           l5483:
 15136  0031B8                     		movlw	04h-1
 15137  0031B8  0E03               	cpfsgt	((c:teclado_scan@c)),c
 15138  0031BA  642B               	goto	u3941
 15139  0031BC  EFE2  F018         	goto	u3940
 15140  0031C0  EFE4  F018         
 15141                           u3941:
 15142  0031C4                     	goto	l5487
 15143  0031C4  EFE8  F018         u3940:
 15144  0031C8                     	goto	l5495
 15145  0031C8  EF1F  F019         	
 15146                           l5485:
 15147  0031CC                     	goto	l5495
 15148  0031CC  EF1F  F019         	
 15149                           l1021:
 15150  0031D0                     	line	80
 15151                           	
 15152                           l5487:
 15153  0031D0                     ;teclado.c: 78:         {;teclado.c: 80:             if( PORTD & (0x10<<c) )
 15154                           	movff	(c:teclado_scan@c),??_teclado_scan+0+0
 15155  0031D0  C02B  F027         	movlw	(010h)&0ffh
 15156  0031D4  0E10               	movwf	(??_teclado_scan+1+0)&0ffh,c
 15157  0031D6  6E28               	incf	(??_teclado_scan+0+0),c
 15158  0031D8  2A27               	goto	u3954
 15159  0031DA  EFF1  F018         u3955:
 15160  0031DE                     	bcf	status,0
 15161  0031DE  90D8               	rlcf	((??_teclado_scan+1+0)),c
 15162  0031E0  3628               u3954:
 15163  0031E2                     	decfsz	(??_teclado_scan+0+0),c
 15164  0031E2  2E27               	goto	u3955
 15165  0031E4  EFEF  F018         	movf	((??_teclado_scan+1+0)),c,w
 15166  0031E8  5028               	andwf	((c:3971)),c,w	;volatile
 15167  0031EA  1483               	iorlw	0
 15168  0031EC  0900               	btfsc	status,2
 15169  0031EE  B4D8               	goto	u3961
 15170  0031F0  EFFC  F018         	goto	u3960
 15171  0031F4  EFFE  F018         u3961:
 15172  0031F8                     	goto	l5491
 15173  0031F8  EF14  F019         u3960:
 15174  0031FC                     	line	82
 15175                           	
 15176                           l5489:
 15177  0031FC                     ;teclado.c: 81:             {;teclado.c: 82:                 tecla = teclas[l][c];
 15178                           	movf	((c:teclado_scan@l)),c,w
 15179  0031FC  502A               	mullw	04h
 15180  0031FE  0D04               	movlw	low((_teclas))
 15181  003200  0EE1               	movwf	(??_teclado_scan+0+0)&0ffh,c
 15182  003202  6E27               	movlw	high((_teclas))
 15183  003204  0E00               	movwf	1+(??_teclado_scan+0+0)&0ffh,c
 15184  003206  6E28               	movf	(prodl),c,w
 15185  003208  50F3               	addwf	(??_teclado_scan+0+0),c
 15186  00320A  2627               	movf	(prodh),c,w
 15187  00320C  50F4               	addwfc	(??_teclado_scan+0+1),c
 15188  00320E  2228               	movf	((c:teclado_scan@c)),c,w
 15189  003210  502B               	mullw	01h
 15190  003212  0D01               	movf	(prodl),c,w
 15191  003214  50F3               	addwf	(??_teclado_scan+0+0),c,w
 15192  003216  2427               	movwf	c:fsr2l
 15193  003218  6ED9               	movf	(prodh),c,w
 15194  00321A  50F4               	addwfc	(??_teclado_scan+0+1),c,w
 15195  00321C  2028               	movwf	1+c:fsr2l
 15196  00321E  6EDA               	movf	indf2,w
 15197  003220  50DF               	movwf	((c:teclado_scan@tecla)),c
 15198  003222  6E29               	goto	l5491
 15199  003224  EF14  F019         	line	84
 15200                           ;teclado.c: 84:             }
 15201                           	
 15202                           l1023:
 15203  003228                     	line	85
 15204                           	
 15205                           l5491:
 15206  003228                     ;teclado.c: 85:         }
 15207                           	incf	((c:teclado_scan@c)),c
 15208  003228  2A2B               	
 15209                           l5493:
 15210  00322A                     		movlw	04h-1
 15211  00322A  0E03               	cpfsgt	((c:teclado_scan@c)),c
 15212  00322C  642B               	goto	u3971
 15213  00322E  EF1B  F019         	goto	u3970
 15214  003232  EF1D  F019         
 15215                           u3971:
 15216  003236                     	goto	l5487
 15217  003236  EFE8  F018         u3970:
 15218  00323A                     	goto	l5495
 15219  00323A  EF1F  F019         	
 15220                           l1022:
 15221  00323E                     	line	86
 15222                           	
 15223                           l5495:
 15224  00323E                     ;teclado.c: 86:     }
 15225                           	incf	((c:teclado_scan@l)),c
 15226  00323E  2A2A               	
 15227                           l5497:
 15228  003240                     		movlw	04h-1
 15229  003240  0E03               	cpfsgt	((c:teclado_scan@l)),c
 15230  003242  642A               	goto	u3981
 15231  003244  EF26  F019         	goto	u3980
 15232  003248  EF28  F019         
 15233                           u3981:
 15234  00324C                     	goto	l5479
 15235  00324C  EFCC  F018         u3980:
 15236  003250                     	goto	l5499
 15237  003250  EF2A  F019         	
 15238                           l1020:
 15239  003254                     	line	87
 15240                           	
 15241                           l5499:
 15242  003254                     ;teclado.c: 87:     return( tecla );
 15243                           	movf	((c:teclado_scan@tecla)),c,w
 15244  003254  5029               	goto	l1024
 15245  003256  EF2D  F019         	
 15246                           l5501:
 15247  00325A                     	line	89
 15248                           	
 15249                           l1024:
 15250  00325A                     	return	;funcret
 15251  00325A  0012               	opt stack 0
 15252                           GLOBAL	__end_of_teclado_scan
 15253                           	__end_of_teclado_scan:
 15254  00325C                     	signat	_teclado_scan,89
 15255                           	global	_statusT1
 15256                           
 15257 ;; *************** function _statusT1 *****************
 15258 ;; Defined at:
 15259 ;;		line 38 in file "timer1.c"
 15260 ;; Parameters:    Size  Location     Type
 15261 ;;		None
 15262 ;; Auto vars:     Size  Location     Type
 15263 ;;		None
 15264 ;; Return value:  Size  Location     Type
 15265 ;;                  4    0[COMRAM] unsigned long 
 15266 ;; Registers used:
 15267 ;;		None
 15268 ;; Tracked objects:
 15269 ;;		On entry : 0/0
 15270 ;;		On exit  : 0/0
 15271 ;;		Unchanged: 0/0
 15272 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15273 ;;      Params:         4       0       0       0       0       0       0       0       0       0
 15274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0
 15275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0
 15276 ;;      Totals:         4       0       0       0       0       0       0       0       0       0
 15277 ;;Total ram usage:        4 bytes
 15278 ;; Hardware stack levels used:    1
 15279 ;; Hardware stack levels required when called:    2
 15280 ;; This function calls:
 15281 ;;		Nothing
 15282 ;; This function is called by:
 15283 ;;		_main
 15284 ;; This function uses a non-reentrant model
 15285 ;;
 15286                           psect	text7,class=CODE,space=0,reloc=2,group=0
 15287                           	file	"timer1.c"
 15288                           	line	38
 15289                           global __ptext7
 15290                           __ptext7:
 15291  004500                     psect	text7
 15292                           	file	"timer1.c"
 15293                           	line	38
 15294                           	global	__size_of_statusT1
 15295                           	__size_of_statusT1	equ	__end_of_statusT1-_statusT1
 15296  0000                     	
 15297                           _statusT1:
 15298  004500                     ;incstack = 0
 15299                           	opt	stack 28
 15300                           	line	40
 15301                           	
 15302                           l5631:
 15303  004500                     ;timer1.c: 40:     return( t1cont );
 15304                           	movff	(c:_t1cont),(c:?_statusT1)
 15305  004500  C001  F027         	movff	(c:_t1cont+1),(c:?_statusT1+1)
 15306  004504  C002  F028         	movff	(c:_t1cont+2),(c:?_statusT1+2)
 15307  004508  C003  F029         	movff	(c:_t1cont+3),(c:?_statusT1+3)
 15308  00450C  C004  F02A         	line	41
 15309                           	
 15310                           l1072:
 15311  004510                     	return	;funcret
 15312  004510  0012               	opt stack 0
 15313                           GLOBAL	__end_of_statusT1
 15314                           	__end_of_statusT1:
 15315  004512                     	signat	_statusT1,92
 15316                           	global	_set_passo
 15317                           
 15318 ;; *************** function _set_passo *****************
 15319 ;; Defined at:
 15320 ;;		line 53 in file "atuadores.c"
 15321 ;; Parameters:    Size  Location     Type
 15322 ;;  passo           1    wreg     unsigned char 
 15323 ;;  ptr             2    0[COMRAM] PTR unsigned char 
 15324 ;;		 -> main@vetorOut(1), 
 15325 ;; Auto vars:     Size  Location     Type
 15326 ;;  passo           1    4[COMRAM] unsigned char 
 15327 ;; Return value:  Size  Location     Type
 15328 ;;                  1    wreg      void 
 15329 ;; Registers used:
 15330 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15331 ;; Tracked objects:
 15332 ;;		On entry : 0/0
 15333 ;;		On exit  : 0/0
 15334 ;;		Unchanged: 0/0
 15335 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15336 ;;      Params:         2       0       0       0       0       0       0       0       0       0
 15337 ;;      Locals:         1       0       0       0       0       0       0       0       0       0
 15338 ;;      Temps:          2       0       0       0       0       0       0       0       0       0
 15339 ;;      Totals:         5       0       0       0       0       0       0       0       0       0
 15340 ;;Total ram usage:        5 bytes
 15341 ;; Hardware stack levels used:    1
 15342 ;; Hardware stack levels required when called:    2
 15343 ;; This function calls:
 15344 ;;		Nothing
 15345 ;; This function is called by:
 15346 ;;		_main
 15347 ;; This function uses a non-reentrant model
 15348 ;;
 15349                           psect	text8,class=CODE,space=0,reloc=2,group=0
 15350                           	file	"atuadores.c"
 15351                           	line	53
 15352                           global __ptext8
 15353                           __ptext8:
 15354  003092                     psect	text8
 15355                           	file	"atuadores.c"
 15356                           	line	53
 15357                           	global	__size_of_set_passo
 15358                           	__size_of_set_passo	equ	__end_of_set_passo-_set_passo
 15359  0000                     	
 15360                           _set_passo:
 15361  003092                     ;incstack = 0
 15362                           	opt	stack 28
 15363                           ;set_passo@passo stored from wreg
 15364                           	movwf	((c:set_passo@passo)),c
 15365  003092  6E2B               	line	55
 15366                           	
 15367                           l6007:
 15368  003094                     ;atuadores.c: 53: void set_passo(char passo, char* ptr);atuadores.c: 54: {;atuadores.c: 
                                 55:     switch (passo)
 15369                           	goto	l6027
 15370  003094  EF8E  F018         	line	57
 15371                           ;atuadores.c: 56:     {;atuadores.c: 57:         case 'A': *ptr |= 0x01; break;
 15372                           	
 15373                           l450:
 15374  003098                     	
 15375                           l6009:
 15376  003098                     	movff	(c:set_passo@ptr),fsr2l
 15377  003098  C027  FFD9         	movff	(c:set_passo@ptr+1),fsr2h
 15378  00309C  C028  FFDA         	movlw	0+(0/8)
 15379  0030A0  0E00               	bsf	plusw2,(0)&7
 15380  0030A2  80DB               	goto	l459
 15381  0030A4  EFBB  F018         	line	58
 15382                           ;atuadores.c: 58:         case 'a': *ptr &= ~0x01; break;
 15383                           	
 15384                           l452:
 15385  0030A8                     	
 15386                           l6011:
 15387  0030A8                     	movff	(c:set_passo@ptr),fsr2l
 15388  0030A8  C027  FFD9         	movff	(c:set_passo@ptr+1),fsr2h
 15389  0030AC  C028  FFDA         	movlw	0FEh
 15390  0030B0  0EFE               	andwf	indf2
 15391  0030B2  16DF               	goto	l459
 15392  0030B4  EFBB  F018         	line	59
 15393                           ;atuadores.c: 59:         case 'B': *ptr |= 0x02; break;
 15394                           	
 15395                           l453:
 15396  0030B8                     	
 15397                           l6013:
 15398  0030B8                     	movff	(c:set_passo@ptr),fsr2l
 15399  0030B8  C027  FFD9         	movff	(c:set_passo@ptr+1),fsr2h
 15400  0030BC  C028  FFDA         	movlw	0+(1/8)
 15401  0030C0  0E00               	bsf	plusw2,(1)&7
 15402  0030C2  82DB               	goto	l459
 15403  0030C4  EFBB  F018         	line	60
 15404                           ;atuadores.c: 60:         case 'b': *ptr &= ~0x02; break;
 15405                           	
 15406                           l454:
 15407  0030C8                     	
 15408                           l6015:
 15409  0030C8                     	movff	(c:set_passo@ptr),fsr2l
 15410  0030C8  C027  FFD9         	movff	(c:set_passo@ptr+1),fsr2h
 15411  0030CC  C028  FFDA         	movlw	0FDh
 15412  0030D0  0EFD               	andwf	indf2
 15413  0030D2  16DF               	goto	l459
 15414  0030D4  EFBB  F018         	line	61
 15415                           ;atuadores.c: 61:         case 'C': *ptr |= 0x04; break;
 15416                           	
 15417                           l455:
 15418  0030D8                     	
 15419                           l6017:
 15420  0030D8                     	movff	(c:set_passo@ptr),fsr2l
 15421  0030D8  C027  FFD9         	movff	(c:set_passo@ptr+1),fsr2h
 15422  0030DC  C028  FFDA         	movlw	0+(2/8)
 15423  0030E0  0E00               	bsf	plusw2,(2)&7
 15424  0030E2  84DB               	goto	l459
 15425  0030E4  EFBB  F018         	line	62
 15426                           ;atuadores.c: 62:         case 'c': *ptr &= ~0x04; break;
 15427                           	
 15428                           l456:
 15429  0030E8                     	
 15430                           l6019:
 15431  0030E8                     	movff	(c:set_passo@ptr),fsr2l
 15432  0030E8  C027  FFD9         	movff	(c:set_passo@ptr+1),fsr2h
 15433  0030EC  C028  FFDA         	movlw	0FBh
 15434  0030F0  0EFB               	andwf	indf2
 15435  0030F2  16DF               	goto	l459
 15436  0030F4  EFBB  F018         	line	63
 15437                           ;atuadores.c: 63:         case 'D': *ptr |= 0x08; break;
 15438                           	
 15439                           l457:
 15440  0030F8                     	
 15441                           l6021:
 15442  0030F8                     	movff	(c:set_passo@ptr),fsr2l
 15443  0030F8  C027  FFD9         	movff	(c:set_passo@ptr+1),fsr2h
 15444  0030FC  C028  FFDA         	movlw	0+(3/8)
 15445  003100  0E00               	bsf	plusw2,(3)&7
 15446  003102  86DB               	goto	l459
 15447  003104  EFBB  F018         	line	64
 15448                           ;atuadores.c: 64:         case 'd': *ptr &= ~0x08; break;
 15449                           	
 15450                           l458:
 15451  003108                     	
 15452                           l6023:
 15453  003108                     	movff	(c:set_passo@ptr),fsr2l
 15454  003108  C027  FFD9         	movff	(c:set_passo@ptr+1),fsr2h
 15455  00310C  C028  FFDA         	movlw	0F7h
 15456  003110  0EF7               	andwf	indf2
 15457  003112  16DF               	goto	l459
 15458  003114  EFBB  F018         	line	65
 15459                           	
 15460                           l6025:
 15461  003118                     ;atuadores.c: 65:     }
 15462                           	goto	l459
 15463  003118  EFBB  F018         	
 15464                           l449:
 15465  00311C                     	
 15466                           l6027:
 15467  00311C                     	movf	((c:set_passo@passo)),c,w
 15468  00311C  502B               	movwf	(??_set_passo+0+0)&0ffh,c
 15469  00311E  6E29               	clrf	(??_set_passo+0+0+1)&0ffh,c
 15470  003120  6A2A               
 15471                           	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
 15472                           ; Switch size 1, requested type "space"
 15473                           ; Number of cases is 1, Range of values is 0 to 0
 15474                           ; switch strategies available:
 15475                           ; Name         Instructions Cycles
 15476                           ; simple_byte            4     3 (average)
 15477                           ;	Chosen strategy is simple_byte
 15478                           
 15479                           	movf ??_set_passo+0+1,c,w
 15480  003122  502A               	xorlw	0^0	; case 0
 15481  003124  0A00               	skipnz
 15482  003126  B4D8               	goto	l7967
 15483  003128  EF98  F018         	goto	l459
 15484  00312C  EFBB  F018         	
 15485                           l7967:
 15486  003130                     ; Switch size 1, requested type "space"
 15487                           ; Number of cases is 8, Range of values is 65 to 100
 15488                           ; switch strategies available:
 15489                           ; Name         Instructions Cycles
 15490                           ; simple_byte           25    13 (average)
 15491                           ;	Chosen strategy is simple_byte
 15492                           
 15493                           	movf ??_set_passo+0+0,c,w
 15494  003130  5029               	xorlw	65^0	; case 65
 15495  003132  0A41               	skipnz
 15496  003134  B4D8               	goto	l6009
 15497  003136  EF4C  F018         	xorlw	66^65	; case 66
 15498  00313A  0A03               	skipnz
 15499  00313C  B4D8               	goto	l6013
 15500  00313E  EF5C  F018         	xorlw	67^66	; case 67
 15501  003142  0A01               	skipnz
 15502  003144  B4D8               	goto	l6017
 15503  003146  EF6C  F018         	xorlw	68^67	; case 68
 15504  00314A  0A07               	skipnz
 15505  00314C  B4D8               	goto	l6021
 15506  00314E  EF7C  F018         	xorlw	97^68	; case 97
 15507  003152  0A25               	skipnz
 15508  003154  B4D8               	goto	l6011
 15509  003156  EF54  F018         	xorlw	98^97	; case 98
 15510  00315A  0A03               	skipnz
 15511  00315C  B4D8               	goto	l6015
 15512  00315E  EF64  F018         	xorlw	99^98	; case 99
 15513  003162  0A01               	skipnz
 15514  003164  B4D8               	goto	l6019
 15515  003166  EF74  F018         	xorlw	100^99	; case 100
 15516  00316A  0A07               	skipnz
 15517  00316C  B4D8               	goto	l6023
 15518  00316E  EF84  F018         	goto	l459
 15519  003172  EFBB  F018         
 15520                           	
 15521                           l451:
 15522  003176                     	line	66
 15523                           	
 15524                           l459:
 15525  003176                     	return	;funcret
 15526  003176  0012               	opt stack 0
 15527                           GLOBAL	__end_of_set_passo
 15528                           	__end_of_set_passo:
 15529  003178                     	signat	_set_passo,8313
 15530                           	global	_setT1
 15531                           
 15532 ;; *************** function _setT1 *****************
 15533 ;; Defined at:
 15534 ;;		line 31 in file "timer1.c"
 15535 ;; Parameters:    Size  Location     Type
 15536 ;;  c               4    6[COMRAM] unsigned long 
 15537 ;; Auto vars:     Size  Location     Type
 15538 ;;		None
 15539 ;; Return value:  Size  Location     Type
 15540 ;;                  1    wreg      void 
 15541 ;; Registers used:
 15542 ;;		None
 15543 ;; Tracked objects:
 15544 ;;		On entry : 0/0
 15545 ;;		On exit  : 0/0
 15546 ;;		Unchanged: 0/0
 15547 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15548 ;;      Params:         4       0       0       0       0       0       0       0       0       0
 15549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0
 15550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0
 15551 ;;      Totals:         4       0       0       0       0       0       0       0       0       0
 15552 ;;Total ram usage:        4 bytes
 15553 ;; Hardware stack levels used:    1
 15554 ;; Hardware stack levels required when called:    2
 15555 ;; This function calls:
 15556 ;;		Nothing
 15557 ;; This function is called by:
 15558 ;;		_main
 15559 ;; This function uses a non-reentrant model
 15560 ;;
 15561                           psect	text9,class=CODE,space=0,reloc=2,group=0
 15562                           	file	"timer1.c"
 15563                           	line	31
 15564                           global __ptext9
 15565                           __ptext9:
 15566  0044EC                     psect	text9
 15567                           	file	"timer1.c"
 15568                           	line	31
 15569                           	global	__size_of_setT1
 15570                           	__size_of_setT1	equ	__end_of_setT1-_setT1
 15571  0000                     	
 15572                           _setT1:
 15573  0044EC                     ;incstack = 0
 15574                           	opt	stack 28
 15575                           	line	33
 15576                           	
 15577                           l5629:
 15578  0044EC                     ;timer1.c: 31: void setT1( unsigned long int c );timer1.c: 32: {;timer1.c: 33:     t1con
                                 t = c;
 15579                           	movff	(c:setT1@c),(c:_t1cont)
 15580  0044EC  C02D  F001         	movff	(c:setT1@c+1),(c:_t1cont+1)
 15581  0044F0  C02E  F002         	movff	(c:setT1@c+2),(c:_t1cont+2)
 15582  0044F4  C02F  F003         	movff	(c:setT1@c+3),(c:_t1cont+3)
 15583  0044F8  C030  F004         	line	34
 15584                           ;timer1.c: 34:     T1CONbits.TMR1ON = 1;
 15585                           	bsf	((c:4045)),c,0	;volatile
 15586  0044FC  80CD               	line	35
 15587                           	
 15588                           l1069:
 15589  0044FE                     	return	;funcret
 15590  0044FE  0012               	opt stack 0
 15591                           GLOBAL	__end_of_setT1
 15592                           	__end_of_setT1:
 15593  004500                     	signat	_setT1,4217
 15594                           	global	_serialIOscan
 15595                           
 15596 ;; *************** function _serialIOscan *****************
 15597 ;; Defined at:
 15598 ;;		line 76 in file "serialIO.c"
 15599 ;; Parameters:    Size  Location     Type
 15600 ;;		None
 15601 ;; Auto vars:     Size  Location     Type
 15602 ;;  i               1    8[COMRAM] unsigned char 
 15603 ;;  j               1    7[COMRAM] unsigned char 
 15604 ;; Return value:  Size  Location     Type
 15605 ;;                  1    wreg      void 
 15606 ;; Registers used:
 15607 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15608 ;; Tracked objects:
 15609 ;;		On entry : 0/0
 15610 ;;		On exit  : 0/0
 15611 ;;		Unchanged: 0/0
 15612 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15613 ;;      Params:         0       0       0       0       0       0       0       0       0       0
 15614 ;;      Locals:         2       0       0       0       0       0       0       0       0       0
 15615 ;;      Temps:          4       0       0       0       0       0       0       0       0       0
 15616 ;;      Totals:         6       0       0       0       0       0       0       0       0       0
 15617 ;;Total ram usage:        6 bytes
 15618 ;; Hardware stack levels used:    1
 15619 ;; Hardware stack levels required when called:    3
 15620 ;; This function calls:
 15621 ;;		_serialIObyteShift
 15622 ;;		_serialIOload
 15623 ;; This function is called by:
 15624 ;;		_main
 15625 ;; This function uses a non-reentrant model
 15626 ;;
 15627                           psect	text10,class=CODE,space=0,reloc=2,group=0
 15628                           	file	"serialIO.c"
 15629                           	line	76
 15630                           global __ptext10
 15631                           __ptext10:
 15632  0038EA                     psect	text10
 15633                           	file	"serialIO.c"
 15634                           	line	76
 15635                           	global	__size_of_serialIOscan
 15636                           	__size_of_serialIOscan	equ	__end_of_serialIOscan-_serialIOscan
 15637  0000                     	
 15638                           _serialIOscan:
 15639  0038EA                     ;incstack = 0
 15640                           	opt	stack 27
 15641                           	line	79
 15642                           	
 15643                           l5989:
 15644  0038EA                     ;serialIO.c: 78:     unsigned char i,j;;serialIO.c: 79:     j = lenSerialIO - 1;
 15645                           	decf	((c:_lenSerialIO)),c,w
 15646  0038EA  0412               	movwf	((c:serialIOscan@j)),c
 15647  0038EC  6E2E               	line	80
 15648                           	
 15649                           l5991:
 15650  0038EE                     ;serialIO.c: 80:     serialIOload();
 15651                           	call	_serialIOload	;wreg free
 15652  0038EE  ECC6  F022         	line	81
 15653                           	
 15654                           l5993:
 15655  0038F2                     ;serialIO.c: 81:     for( i=0; i<lenSerialIO; i++ )
 15656                           	movlw	low(0)
 15657  0038F2  0E00               	movwf	((c:serialIOscan@i)),c
 15658  0038F4  6E2F               	goto	l5999
 15659  0038F6  EFA0  F01C         	
 15660                           l935:
 15661  0038FA                     	line	83
 15662                           	
 15663                           l5995:
 15664  0038FA                     ;serialIO.c: 82:     {;serialIO.c: 83:         ptrSerialIn[i] = serialIObyteShift( ptrSe
                                 rialOut[j-i]);
 15665                           	movf	((c:serialIOscan@i)),c,w
 15666  0038FA  502F               	mullw	01h
 15667  0038FC  0D01               	movf	(prodl),c,w
 15668  0038FE  50F3               	addwf	((c:_ptrSerialIn)),c,w
 15669  003900  240B               	movwf	c:fsr2l
 15670  003902  6ED9               	movf	(prodh),c,w
 15671  003904  50F4               	addwfc	((c:_ptrSerialIn+1)),c,w
 15672  003906  200C               	movwf	1+c:fsr2l
 15673  003908  6EDA               	movf	((c:serialIOscan@i)),c,w
 15674  00390A  502F               	movwf	(??_serialIOscan+0+0)&0ffh,c
 15675  00390C  6E2A               	clrf	(??_serialIOscan+0+0+1)&0ffh,c
 15676  00390E  6A2B               
 15677                           	comf	(??_serialIOscan+0+0),c
 15678  003910  1E2A               	comf	(??_serialIOscan+0+1),c
 15679  003912  1E2B               	infsnz	(??_serialIOscan+0+0),c
 15680  003914  4A2A               	incf	(??_serialIOscan+0+1),c
 15681  003916  2A2B               	movf	((c:serialIOscan@j)),c,w
 15682  003918  502E               	movwf	(??_serialIOscan+2+0)&0ffh,c
 15683  00391A  6E2C               	clrf	(??_serialIOscan+2+0+1)&0ffh,c
 15684  00391C  6A2D               
 15685                           	movf	(??_serialIOscan+0+0),c,w
 15686  00391E  502A               	addwf	(??_serialIOscan+2+0),c
 15687  003920  262C               	movf	(??_serialIOscan+0+1),c,w
 15688  003922  502B               	addwfc	(??_serialIOscan+2+1),c
 15689  003924  222D               	movf	(??_serialIOscan+2+0),c,w
 15690  003926  502C               	addwf	((c:_ptrSerialOut)),c,w
 15691  003928  2409               	movwf	c:fsr1l
 15692  00392A  6EE1               	movf	(??_serialIOscan+2+1),c,w
 15693  00392C  502D               	addwfc	((c:_ptrSerialOut+1)),c,w
 15694  00392E  200A               	movwf	1+c:fsr1l
 15695  003930  6EE2               	movf	indf1,w
 15696  003932  50E7               	
 15697                           	call	_serialIObyteShift
 15698  003934  ECEE  F01D         	movwf	indf2,c
 15699  003938  6EDF               
 15700                           	line	84
 15701                           	
 15702                           l5997:
 15703  00393A                     ;serialIO.c: 84:     }
 15704                           	incf	((c:serialIOscan@i)),c
 15705  00393A  2A2F               	goto	l5999
 15706  00393C  EFA0  F01C         	
 15707                           l934:
 15708  003940                     	
 15709                           l5999:
 15710  003940                     		movf	((c:_lenSerialIO)),c,w
 15711  003940  5012               	subwf	((c:serialIOscan@i)),c,w
 15712  003942  5C2F               	btfss	status,0
 15713  003944  A0D8               	goto	u4561
 15714  003946  EFA7  F01C         	goto	u4560
 15715  00394A  EFA9  F01C         
 15716                           u4561:
 15717  00394E                     	goto	l5995
 15718  00394E  EF7D  F01C         u4560:
 15719  003952                     	goto	l6001
 15720  003952  EFAB  F01C         	
 15721                           l936:
 15722  003956                     	line	85
 15723                           	
 15724                           l6001:
 15725  003956                     ;serialIO.c: 85:     serialIOload();
 15726                           	call	_serialIOload	;wreg free
 15727  003956  ECC6  F022         	line	86
 15728                           	
 15729                           l937:
 15730  00395A                     	return	;funcret
 15731  00395A  0012               	opt stack 0
 15732                           GLOBAL	__end_of_serialIOscan
 15733                           	__end_of_serialIOscan:
 15734  00395C                     	signat	_serialIOscan,89
 15735                           	global	_serialIOload
 15736                           
 15737 ;; *************** function _serialIOload *****************
 15738 ;; Defined at:
 15739 ;;		line 45 in file "serialIO.c"
 15740 ;; Parameters:    Size  Location     Type
 15741 ;;		None
 15742 ;; Auto vars:     Size  Location     Type
 15743 ;;		None
 15744 ;; Return value:  Size  Location     Type
 15745 ;;                  1    wreg      void 
 15746 ;; Registers used:
 15747 ;;		None
 15748 ;; Tracked objects:
 15749 ;;		On entry : 0/0
 15750 ;;		On exit  : 0/0
 15751 ;;		Unchanged: 0/0
 15752 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15753 ;;      Params:         0       0       0       0       0       0       0       0       0       0
 15754 ;;      Locals:         0       0       0       0       0       0       0       0       0       0
 15755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0
 15756 ;;      Totals:         0       0       0       0       0       0       0       0       0       0
 15757 ;;Total ram usage:        0 bytes
 15758 ;; Hardware stack levels used:    1
 15759 ;; Hardware stack levels required when called:    2
 15760 ;; This function calls:
 15761 ;;		Nothing
 15762 ;; This function is called by:
 15763 ;;		_serialIOscan
 15764 ;; This function uses a non-reentrant model
 15765 ;;
 15766                           psect	text11,class=CODE,space=0,reloc=2,group=0
 15767                           	line	45
 15768                           global __ptext11
 15769                           __ptext11:
 15770  00458C                     psect	text11
 15771                           	file	"serialIO.c"
 15772                           	line	45
 15773                           	global	__size_of_serialIOload
 15774                           	__size_of_serialIOload	equ	__end_of_serialIOload-_serialIOload
 15775  0000                     	
 15776                           _serialIOload:
 15777  00458C                     ;incstack = 0
 15778                           	opt	stack 27
 15779                           	line	47
 15780                           	
 15781                           l5455:
 15782  00458C                     ;serialIO.c: 47:     SERIALIO.SHLD = 0;
 15783                           	bcf	((c:3968)),c,3	;volatile
 15784  00458C  9680               	line	48
 15785                           ;serialIO.c: 48:     SERIALIO.SHLD = 1;
 15786                           	bsf	((c:3968)),c,3	;volatile
 15787  00458E  8680               	line	49
 15788                           	
 15789                           l922:
 15790  004590                     	return	;funcret
 15791  004590  0012               	opt stack 0
 15792                           GLOBAL	__end_of_serialIOload
 15793                           	__end_of_serialIOload:
 15794  004592                     	signat	_serialIOload,89
 15795                           	global	_serialIObyteShift
 15796                           
 15797 ;; *************** function _serialIObyteShift *****************
 15798 ;; Defined at:
 15799 ;;		line 50 in file "serialIO.c"
 15800 ;; Parameters:    Size  Location     Type
 15801 ;;  dataIn          1    wreg     unsigned char 
 15802 ;; Auto vars:     Size  Location     Type
 15803 ;;  dataIn          1    0[COMRAM] unsigned char 
 15804 ;;  dataBit         1    2[COMRAM] unsigned char 
 15805 ;;  dataOut         1    1[COMRAM] unsigned char 
 15806 ;; Return value:  Size  Location     Type
 15807 ;;                  1    wreg      unsigned char 
 15808 ;; Registers used:
 15809 ;;		wreg, status,2, status,0
 15810 ;; Tracked objects:
 15811 ;;		On entry : 0/0
 15812 ;;		On exit  : 0/0
 15813 ;;		Unchanged: 0/0
 15814 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15815 ;;      Params:         0       0       0       0       0       0       0       0       0       0
 15816 ;;      Locals:         3       0       0       0       0       0       0       0       0       0
 15817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0
 15818 ;;      Totals:         3       0       0       0       0       0       0       0       0       0
 15819 ;;Total ram usage:        3 bytes
 15820 ;; Hardware stack levels used:    1
 15821 ;; Hardware stack levels required when called:    2
 15822 ;; This function calls:
 15823 ;;		Nothing
 15824 ;; This function is called by:
 15825 ;;		_serialIOscan
 15826 ;; This function uses a non-reentrant model
 15827 ;;
 15828                           psect	text12,class=CODE,space=0,reloc=2,group=0
 15829                           	line	50
 15830                           global __ptext12
 15831                           __ptext12:
 15832  003BDC                     psect	text12
 15833                           	file	"serialIO.c"
 15834                           	line	50
 15835                           	global	__size_of_serialIObyteShift
 15836                           	__size_of_serialIObyteShift	equ	__end_of_serialIObyteShift-_serialIObyteShift
 15837  0000                     	
 15838                           _serialIObyteShift:
 15839  003BDC                     ;incstack = 0
 15840                           	opt	stack 27
 15841                           ;serialIObyteShift@dataIn stored from wreg
 15842                           	movwf	((c:serialIObyteShift@dataIn)),c
 15843  003BDC  6E27               	line	55
 15844                           	
 15845                           l5457:
 15846  003BDE                     ;serialIO.c: 50: unsigned char serialIObyteShift( unsigned char dataIn );serialIO.c: 51:
                                  {;serialIO.c: 52:     unsigned char dataBit;;serialIO.c: 53:     unsigned char dataOut;
                                 ;serialIO.c: 55:     dataBit = 0x80;
 15847                           	movlw	low(080h)
 15848  003BDE  0E80               	movwf	((c:serialIObyteShift@dataBit)),c
 15849  003BE0  6E29               	line	56
 15850                           ;serialIO.c: 56:     dataOut = 0;
 15851                           	movlw	low(0)
 15852  003BE2  0E00               	movwf	((c:serialIObyteShift@dataOut)),c
 15853  003BE4  6E28               	line	58
 15854                           ;serialIO.c: 58:     while( dataBit )
 15855                           	goto	l5467
 15856  003BE6  EF14  F01E         	
 15857                           l926:
 15858  003BEA                     	line	60
 15859                           ;serialIO.c: 59:     {;serialIO.c: 60:         SERIALIO.CLK = 0;
 15860                           	bcf	((c:3968)),c,2	;volatile
 15861  003BEA  9480               	line	61
 15862                           	
 15863                           l5459:
 15864  003BEC                     ;serialIO.c: 61:         if( dataIn & dataBit )
 15865                           	movf	((c:serialIObyteShift@dataIn)),c,w
 15866  003BEC  5027               	andwf	((c:serialIObyteShift@dataBit)),c,w
 15867  003BEE  1429               	iorlw	0
 15868  003BF0  0900               	btfsc	status,2
 15869  003BF2  B4D8               	goto	u3891
 15870  003BF4  EFFE  F01D         	goto	u3890
 15871  003BF8  EF00  F01E         u3891:
 15872  003BFC                     	goto	l927
 15873  003BFC  EF03  F01E         u3890:
 15874  003C00                     	line	62
 15875                           	
 15876                           l5461:
 15877  003C00                     ;serialIO.c: 62:             SERIALIO.OUT = 1;
 15878                           	bsf	((c:3968)),c,0	;volatile
 15879  003C00  8080               	goto	l928
 15880  003C02  EF04  F01E         	line	63
 15881                           ;serialIO.c: 63:         else
 15882                           	
 15883                           l927:
 15884  003C06                     	line	64
 15885                           ;serialIO.c: 64:             SERIALIO.OUT = 0;
 15886                           	bcf	((c:3968)),c,0	;volatile
 15887  003C06  9080               	
 15888                           l928:
 15889  003C08                     	line	66
 15890                           ;serialIO.c: 66:         if( SERIALIO.IN )
 15891                           	btfss	((c:3968)),c,1	;volatile
 15892  003C08  A280               	goto	u3901
 15893  003C0A  EF09  F01E         	goto	u3900
 15894  003C0E  EF0B  F01E         u3901:
 15895  003C12                     	goto	l5465
 15896  003C12  EF0F  F01E         u3900:
 15897  003C16                     	line	67
 15898                           	
 15899                           l5463:
 15900  003C16                     ;serialIO.c: 67:             dataOut |= dataBit;
 15901                           	movf	((c:serialIObyteShift@dataBit)),c,w
 15902  003C16  5029               	iorwf	((c:serialIObyteShift@dataOut)),c
 15903  003C18  1228               	goto	l5465
 15904  003C1A  EF0F  F01E         	
 15905                           l929:
 15906  003C1E                     	line	68
 15907                           	
 15908                           l5465:
 15909  003C1E                     ;serialIO.c: 68:         SERIALIO.CLK = 1;
 15910                           	bsf	((c:3968)),c,2	;volatile
 15911  003C1E  8480               	line	69
 15912                           ;serialIO.c: 69:         dataBit >>= 1;
 15913                           	bcf status,0
 15914  003C20  90D8               	rrcf	((c:serialIObyteShift@dataBit)),c
 15915  003C22  3229               
 15916                           	goto	l5467
 15917  003C24  EF14  F01E         	line	70
 15918                           ;serialIO.c: 70:     }
 15919                           	
 15920                           l925:
 15921  003C28                     	line	58
 15922                           	
 15923                           l5467:
 15924  003C28                     ;serialIO.c: 58:     while( dataBit )
 15925                           	movf	((c:serialIObyteShift@dataBit)),c,w
 15926  003C28  5029               	btfss	status,2
 15927  003C2A  A4D8               	goto	u3911
 15928  003C2C  EF1A  F01E         	goto	u3910
 15929  003C30  EF1C  F01E         u3911:
 15930  003C34                     	goto	l926
 15931  003C34  EFF5  F01D         u3910:
 15932  003C38                     	
 15933                           l930:
 15934  003C38                     	line	71
 15935                           ;serialIO.c: 71:     SERIALIO.CLK = 0;
 15936                           	bcf	((c:3968)),c,2	;volatile
 15937  003C38  9480               	line	72
 15938                           	
 15939                           l5469:
 15940  003C3A                     ;serialIO.c: 72:     return( dataOut );
 15941                           	movf	((c:serialIObyteShift@dataOut)),c,w
 15942  003C3A  5028               	goto	l931
 15943  003C3C  EF20  F01E         	
 15944                           l5471:
 15945  003C40                     	line	73
 15946                           	
 15947                           l931:
 15948  003C40                     	return	;funcret
 15949  003C40  0012               	opt stack 0
 15950                           GLOBAL	__end_of_serialIObyteShift
 15951                           	__end_of_serialIObyteShift:
 15952  003C42                     	signat	_serialIObyteShift,4217
 15953                           	global	_salvar_receita
 15954                           
 15955 ;; *************** function _salvar_receita *****************
 15956 ;; Defined at:
 15957 ;;		line 46 in file "eeprom.c"
 15958 ;; Parameters:    Size  Location     Type
 15959 ;;  adrs            1    wreg     unsigned char 
 15960 ;;  data            2    6[COMRAM] PTR unsigned char 
 15961 ;;		 -> fila(18), 
 15962 ;; Auto vars:     Size  Location     Type
 15963 ;;  adrs            1   10[COMRAM] unsigned char 
 15964 ;;  i               1   11[COMRAM] unsigned char 
 15965 ;;  aux             2    8[COMRAM] int 
 15966 ;; Return value:  Size  Location     Type
 15967 ;;                  1    wreg      void 
 15968 ;; Registers used:
 15969 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15970 ;; Tracked objects:
 15971 ;;		On entry : 0/0
 15972 ;;		On exit  : 0/0
 15973 ;;		Unchanged: 0/0
 15974 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15975 ;;      Params:         2       0       0       0       0       0       0       0       0       0
 15976 ;;      Locals:         4       0       0       0       0       0       0       0       0       0
 15977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0
 15978 ;;      Totals:         6       0       0       0       0       0       0       0       0       0
 15979 ;;Total ram usage:        6 bytes
 15980 ;; Hardware stack levels used:    1
 15981 ;; Hardware stack levels required when called:    3
 15982 ;; This function calls:
 15983 ;;		_EEPROM_write
 15984 ;;		_end_receita
 15985 ;; This function is called by:
 15986 ;;		_main
 15987 ;; This function uses a non-reentrant model
 15988 ;;
 15989                           psect	text13,class=CODE,space=0,reloc=2,group=0
 15990                           	file	"eeprom.c"
 15991                           	line	46
 15992                           global __ptext13
 15993                           __ptext13:
 15994  003D0E                     psect	text13
 15995                           	file	"eeprom.c"
 15996                           	line	46
 15997                           	global	__size_of_salvar_receita
 15998                           	__size_of_salvar_receita	equ	__end_of_salvar_receita-_salvar_receita
 15999  0000                     	
 16000                           _salvar_receita:
 16001  003D0E                     ;incstack = 0
 16002                           	opt	stack 27
 16003                           ;salvar_receita@adrs stored from wreg
 16004                           	movwf	((c:salvar_receita@adrs)),c
 16005  003D0E  6E31               	line	49
 16006                           	
 16007                           l6127:
 16008  003D10                     ;eeprom.c: 46: void salvar_receita (char adrs, unsigned char *data );eeprom.c: 47: {;eep
                                 rom.c: 48:     int aux;;eeprom.c: 49:     aux = end_receita(adrs);
 16009                           	movff	(c:salvar_receita@adrs),(c:end_receita@x)
 16010  003D10  C031  F027         	clrf	((c:end_receita@x+1)),c
 16011  003D14  6A28               	call	_end_receita	;wreg free
 16012  003D16  EC88  F021         	movff	0+?_end_receita,(c:salvar_receita@aux)
 16013  003D1A  C027  F02F         	movff	1+?_end_receita,(c:salvar_receita@aux+1)
 16014  003D1E  C028  F030         	line	50
 16015                           	
 16016                           l6129:
 16017  003D22                     ;eeprom.c: 50:     for( char i=0 ; i<16; i++)
 16018                           	movlw	low(0)
 16019  003D22  0E00               	movwf	((c:salvar_receita@i)),c
 16020  003D24  6E32               	
 16021                           l6131:
 16022  003D26                     		movlw	010h-1
 16023  003D26  0E0F               	cpfsgt	((c:salvar_receita@i)),c
 16024  003D28  6432               	goto	u4601
 16025  003D2A  EF99  F01E         	goto	u4600
 16026  003D2E  EF9B  F01E         
 16027                           u4601:
 16028  003D32                     	goto	l6135
 16029  003D32  EF9F  F01E         u4600:
 16030  003D36                     	goto	l590
 16031  003D36  EFB6  F01E         	
 16032                           l6133:
 16033  003D3A                     	goto	l590
 16034  003D3A  EFB6  F01E         	
 16035                           l588:
 16036  003D3E                     	line	51
 16037                           	
 16038                           l6135:
 16039  003D3E                     ;eeprom.c: 51:          EEPROM_write( (aux+i), *(data+i) );
 16040                           	movf	((c:salvar_receita@i)),c,w
 16041  003D3E  5032               	addwf	((c:salvar_receita@data)),c,w
 16042  003D40  242D               	movwf	c:fsr2l
 16043  003D42  6ED9               	movlw	0
 16044  003D44  0E00               	addwfc	((c:salvar_receita@data+1)),c,w
 16045  003D46  202E               	movwf	1+c:fsr2l
 16046  003D48  6EDA               	movf	indf2,w
 16047  003D4A  50DF               	movwf	((c:EEPROM_write@data)),c
 16048  003D4C  6E27               	movf	((c:salvar_receita@i)),c,w
 16049  003D4E  5032               	addwf	((c:salvar_receita@aux)),c,w
 16050  003D50  242F               	
 16051                           	call	_EEPROM_write
 16052  003D52  ECCF  F020         	
 16053                           l6137:
 16054  003D56                     	incf	((c:salvar_receita@i)),c
 16055  003D56  2A32               	
 16056                           l6139:
 16057  003D58                     		movlw	010h-1
 16058  003D58  0E0F               	cpfsgt	((c:salvar_receita@i)),c
 16059  003D5A  6432               	goto	u4611
 16060  003D5C  EFB2  F01E         	goto	u4610
 16061  003D60  EFB4  F01E         
 16062                           u4611:
 16063  003D64                     	goto	l6135
 16064  003D64  EF9F  F01E         u4610:
 16065  003D68                     	goto	l590
 16066  003D68  EFB6  F01E         	
 16067                           l589:
 16068  003D6C                     	line	53
 16069                           	
 16070                           l590:
 16071  003D6C                     	return	;funcret
 16072  003D6C  0012               	opt stack 0
 16073                           GLOBAL	__end_of_salvar_receita
 16074                           	__end_of_salvar_receita:
 16075  003D6E                     	signat	_salvar_receita,8313
 16076                           	global	_salvar_dado
 16077                           
 16078 ;; *************** function _salvar_dado *****************
 16079 ;; Defined at:
 16080 ;;		line 63 in file "eeprom.c"
 16081 ;; Parameters:    Size  Location     Type
 16082 ;;  adrs            1    wreg     unsigned char 
 16083 ;;  col             1    6[COMRAM] unsigned char 
 16084 ;;  data            1    7[COMRAM] unsigned char 
 16085 ;; Auto vars:     Size  Location     Type
 16086 ;;  adrs            1   10[COMRAM] unsigned char 
 16087 ;;  aux             2    8[COMRAM] int 
 16088 ;; Return value:  Size  Location     Type
 16089 ;;                  1    wreg      void 
 16090 ;; Registers used:
 16091 ;;		wreg, status,2, status,0, cstack
 16092 ;; Tracked objects:
 16093 ;;		On entry : 0/0
 16094 ;;		On exit  : 0/0
 16095 ;;		Unchanged: 0/0
 16096 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16097 ;;      Params:         2       0       0       0       0       0       0       0       0       0
 16098 ;;      Locals:         3       0       0       0       0       0       0       0       0       0
 16099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0
 16100 ;;      Totals:         5       0       0       0       0       0       0       0       0       0
 16101 ;;Total ram usage:        5 bytes
 16102 ;; Hardware stack levels used:    1
 16103 ;; Hardware stack levels required when called:    3
 16104 ;; This function calls:
 16105 ;;		_EEPROM_write
 16106 ;;		_end_receita
 16107 ;; This function is called by:
 16108 ;;		_main
 16109 ;; This function uses a non-reentrant model
 16110 ;;
 16111                           psect	text14,class=CODE,space=0,reloc=2,group=0
 16112                           	line	63
 16113                           global __ptext14
 16114                           __ptext14:
 16115  004338                     psect	text14
 16116                           	file	"eeprom.c"
 16117                           	line	63
 16118                           	global	__size_of_salvar_dado
 16119                           	__size_of_salvar_dado	equ	__end_of_salvar_dado-_salvar_dado
 16120  0000                     	
 16121                           _salvar_dado:
 16122  004338                     ;incstack = 0
 16123                           	opt	stack 27
 16124                           ;salvar_dado@adrs stored from wreg
 16125                           	movwf	((c:salvar_dado@adrs)),c
 16126  004338  6E31               	line	66
 16127                           	
 16128                           l5979:
 16129  00433A                     ;eeprom.c: 63: void salvar_dado (char adrs, char col, unsigned char data);eeprom.c: 64: 
                                 {;eeprom.c: 65:     int aux;;eeprom.c: 66:     aux = end_receita(adrs);
 16130                           	movff	(c:salvar_dado@adrs),(c:end_receita@x)
 16131  00433A  C031  F027         	clrf	((c:end_receita@x+1)),c
 16132  00433E  6A28               	call	_end_receita	;wreg free
 16133  004340  EC88  F021         	movff	0+?_end_receita,(c:salvar_dado@aux)
 16134  004344  C027  F02F         	movff	1+?_end_receita,(c:salvar_dado@aux+1)
 16135  004348  C028  F030         	line	67
 16136                           ;eeprom.c: 67:     EEPROM_write((aux+col), data);
 16137                           	movff	(c:salvar_dado@data),(c:EEPROM_write@data)
 16138  00434C  C02E  F027         	movf	((c:salvar_dado@col)),c,w
 16139  004350  502D               	addwf	((c:salvar_dado@aux)),c,w
 16140  004352  242F               	
 16141                           	call	_EEPROM_write
 16142  004354  ECCF  F020         	line	68
 16143                           	
 16144                           l598:
 16145  004358                     	return	;funcret
 16146  004358  0012               	opt stack 0
 16147                           GLOBAL	__end_of_salvar_dado
 16148                           	__end_of_salvar_dado:
 16149  00435A                     	signat	_salvar_dado,12409
 16150                           	global	_salva_atuadores_init
 16151                           
 16152 ;; *************** function _salva_atuadores_init *****************
 16153 ;; Defined at:
 16154 ;;		line 117 in file "fifo.c"
 16155 ;; Parameters:    Size  Location     Type
 16156 ;;		None
 16157 ;; Auto vars:     Size  Location     Type
 16158 ;;  condi_init      4    3[COMRAM] unsigned char [4]
 16159 ;;  pt              2    7[COMRAM] PTR unsigned char 
 16160 ;;		 -> salva_atuadores_init@condi_init(4), 
 16161 ;;  mask            1   10[COMRAM] unsigned char 
 16162 ;;  dado            1    9[COMRAM] unsigned char 
 16163 ;; Return value:  Size  Location     Type
 16164 ;;                  1    wreg      unsigned char 
 16165 ;; Registers used:
 16166 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16167 ;; Tracked objects:
 16168 ;;		On entry : 0/0
 16169 ;;		On exit  : 0/0
 16170 ;;		Unchanged: 0/0
 16171 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16172 ;;      Params:         0       0       0       0       0       0       0       0       0       0
 16173 ;;      Locals:         8       0       0       0       0       0       0       0       0       0
 16174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0
 16175 ;;      Totals:         8       0       0       0       0       0       0       0       0       0
 16176 ;;Total ram usage:        8 bytes
 16177 ;; Hardware stack levels used:    1
 16178 ;; Hardware stack levels required when called:    3
 16179 ;; This function calls:
 16180 ;;		_ler_atuador
 16181 ;; This function is called by:
 16182 ;;		_main
 16183 ;; This function uses a non-reentrant model
 16184 ;;
 16185                           psect	text15,class=CODE,space=0,reloc=2,group=0
 16186                           	file	"fifo.c"
 16187                           	line	117
 16188                           global __ptext15
 16189                           __ptext15:
 16190  003748                     psect	text15
 16191                           	file	"fifo.c"
 16192                           	line	117
 16193                           	global	__size_of_salva_atuadores_init
 16194                           	__size_of_salva_atuadores_init	equ	__end_of_salva_atuadores_init-_salva_atuadores_init

 16195  0000                     	
 16196                           _salva_atuadores_init:
 16197  003748                     ;incstack = 0
 16198                           	opt	stack 27
 16199                           	line	119
 16200                           	
 16201                           l5855:
 16202  003748                     ;fifo.c: 119:     char condi_init[4] = {ler_atuador('A'), ler_atuador('B'), ler_atuador(
                                 'C'), ler_atuador('D')};
 16203                           	movff	(c:salva_atuadores_init@F108),(c:salva_atuadores_init@condi_init)
 16204  003748  C005  F02A         	movff	(c:salva_atuadores_init@F108+1),(c:salva_atuadores_init@condi_init+1)
 16205  00374C  C006  F02B         	movff	(c:salva_atuadores_init@F108+2),(c:salva_atuadores_init@condi_init+2)
 16206  003750  C007  F02C         	movff	(c:salva_atuadores_init@F108+3),(c:salva_atuadores_init@condi_init+3)
 16207  003754  C008  F02D         	
 16208                           l5857:
 16209  003758                     	movlw	(041h)&0ffh
 16210  003758  0E41               	
 16211                           	call	_ler_atuador
 16212  00375A  EC9A  F019         	movwf	((c:salva_atuadores_init@condi_init)),c
 16213  00375E  6E2A               	movlw	(042h)&0ffh
 16214  003760  0E42               	
 16215                           	call	_ler_atuador
 16216  003762  EC9A  F019         	movwf	(0+((c:salva_atuadores_init@condi_init)+01h)),c
 16217  003766  6E2B               	movlw	(043h)&0ffh
 16218  003768  0E43               	
 16219                           	call	_ler_atuador
 16220  00376A  EC9A  F019         	movwf	(0+((c:salva_atuadores_init@condi_init)+02h)),c
 16221  00376E  6E2C               	movlw	(044h)&0ffh
 16222  003770  0E44               	
 16223                           	call	_ler_atuador
 16224  003772  EC9A  F019         	movwf	(0+((c:salva_atuadores_init@condi_init)+03h)),c
 16225  003776  6E2D               	line	121
 16226                           	
 16227                           l5859:
 16228  003778                     ;fifo.c: 121:     char *pt = condi_init;
 16229                           		movlw	low(salva_atuadores_init@condi_init)
 16230  003778  0E2A               	movwf	((c:salva_atuadores_init@pt)),c
 16231  00377A  6E2E               	movlw	high(salva_atuadores_init@condi_init)
 16232  00377C  0E00               	movwf	((c:salva_atuadores_init@pt+1)),c
 16233  00377E  6E2F               
 16234                           	line	122
 16235                           	
 16236                           l5861:
 16237  003780                     ;fifo.c: 122:     char dado = 0;
 16238                           	movlw	low(0)
 16239  003780  0E00               	movwf	((c:salva_atuadores_init@dado)),c
 16240  003782  6E30               	line	123
 16241                           	
 16242                           l5863:
 16243  003784                     ;fifo.c: 123:     char mask = 0x08;
 16244                           	movlw	low(08h)
 16245  003784  0E08               	movwf	((c:salva_atuadores_init@mask)),c
 16246  003786  6E31               	line	125
 16247                           ;fifo.c: 125:     while( mask )
 16248                           	goto	l5873
 16249  003788  EFDD  F01B         	
 16250                           l699:
 16251  00378C                     	line	127
 16252                           	
 16253                           l5865:
 16254  00378C                     ;fifo.c: 126:     {;fifo.c: 127:         if( *pt )
 16255                           	movff	(c:salva_atuadores_init@pt),fsr2l
 16256  00378C  C02E  FFD9         	movff	(c:salva_atuadores_init@pt+1),fsr2h
 16257  003790  C02F  FFDA         	movf	indf2,w
 16258  003794  50DF               	btfsc	status,2
 16259  003796  B4D8               	goto	u4361
 16260  003798  EFD0  F01B         	goto	u4360
 16261  00379C  EFD2  F01B         u4361:
 16262  0037A0                     	goto	l5869
 16263  0037A0  EFD7  F01B         u4360:
 16264  0037A4                     	line	129
 16265                           	
 16266                           l5867:
 16267  0037A4                     ;fifo.c: 128:         {;fifo.c: 129:             dado = dado | mask;
 16268                           	movf	((c:salva_atuadores_init@dado)),c,w
 16269  0037A4  5030               	iorwf	((c:salva_atuadores_init@mask)),c,w
 16270  0037A6  1031               	movwf	((c:salva_atuadores_init@dado)),c
 16271  0037A8  6E30               	goto	l5869
 16272  0037AA  EFD7  F01B         	line	130
 16273                           ;fifo.c: 130:         }
 16274                           	
 16275                           l700:
 16276  0037AE                     	line	131
 16277                           	
 16278                           l5869:
 16279  0037AE                     ;fifo.c: 131:         pt++;
 16280                           	infsnz	((c:salva_atuadores_init@pt)),c
 16281  0037AE  4A2E               	incf	((c:salva_atuadores_init@pt+1)),c
 16282  0037B0  2A2F               	line	132
 16283                           	
 16284                           l5871:
 16285  0037B2                     ;fifo.c: 132:         mask >>= 1;
 16286                           	bcf status,0
 16287  0037B2  90D8               	rrcf	((c:salva_atuadores_init@mask)),c
 16288  0037B4  3231               
 16289                           	goto	l5873
 16290  0037B6  EFDD  F01B         	line	133
 16291                           ;fifo.c: 133:     }
 16292                           	
 16293                           l698:
 16294  0037BA                     	line	125
 16295                           	
 16296                           l5873:
 16297  0037BA                     ;fifo.c: 125:     while( mask )
 16298                           	movf	((c:salva_atuadores_init@mask)),c,w
 16299  0037BA  5031               	btfss	status,2
 16300  0037BC  A4D8               	goto	u4371
 16301  0037BE  EFE3  F01B         	goto	u4370
 16302  0037C2  EFE5  F01B         u4371:
 16303  0037C6                     	goto	l5865
 16304  0037C6  EFC6  F01B         u4370:
 16305  0037CA                     	goto	l5875
 16306  0037CA  EFE7  F01B         	
 16307                           l701:
 16308  0037CE                     	line	134
 16309                           	
 16310                           l5875:
 16311  0037CE                     ;fifo.c: 134:     return(dado);
 16312                           	movf	((c:salva_atuadores_init@dado)),c,w
 16313  0037CE  5030               	goto	l702
 16314  0037D0  EFEA  F01B         	
 16315                           l5877:
 16316  0037D4                     	line	135
 16317                           	
 16318                           l702:
 16319  0037D4                     	return	;funcret
 16320  0037D4  0012               	opt stack 0
 16321                           GLOBAL	__end_of_salva_atuadores_init
 16322                           	__end_of_salva_atuadores_init:
 16323  0037D6                     	signat	_salva_atuadores_init,89
 16324                           	global	_ler_atuador
 16325                           
 16326 ;; *************** function _ler_atuador *****************
 16327 ;; Defined at:
 16328 ;;		line 80 in file "fifo.c"
 16329 ;; Parameters:    Size  Location     Type
 16330 ;;  tecla           1    wreg     unsigned char 
 16331 ;; Auto vars:     Size  Location     Type
 16332 ;;  tecla           1    2[COMRAM] unsigned char 
 16333 ;; Return value:  Size  Location     Type
 16334 ;;                  1    wreg      unsigned char 
 16335 ;; Registers used:
 16336 ;;		wreg, status,2, status,0
 16337 ;; Tracked objects:
 16338 ;;		On entry : 0/0
 16339 ;;		On exit  : 0/0
 16340 ;;		Unchanged: 0/0
 16341 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16342 ;;      Params:         0       0       0       0       0       0       0       0       0       0
 16343 ;;      Locals:         1       0       0       0       0       0       0       0       0       0
 16344 ;;      Temps:          2       0       0       0       0       0       0       0       0       0
 16345 ;;      Totals:         3       0       0       0       0       0       0       0       0       0
 16346 ;;Total ram usage:        3 bytes
 16347 ;; Hardware stack levels used:    1
 16348 ;; Hardware stack levels required when called:    2
 16349 ;; This function calls:
 16350 ;;		Nothing
 16351 ;; This function is called by:
 16352 ;;		_main
 16353 ;;		_salva_atuadores_init
 16354 ;; This function uses a non-reentrant model
 16355 ;;
 16356                           psect	text16,class=CODE,space=0,reloc=2,group=0
 16357                           	line	80
 16358                           global __ptext16
 16359                           __ptext16:
 16360  003334                     psect	text16
 16361                           	file	"fifo.c"
 16362                           	line	80
 16363                           	global	__size_of_ler_atuador
 16364                           	__size_of_ler_atuador	equ	__end_of_ler_atuador-_ler_atuador
 16365  0000                     	
 16366                           _ler_atuador:
 16367  003334                     ;incstack = 0
 16368                           	opt	stack 27
 16369                           ;ler_atuador@tecla stored from wreg
 16370                           	movwf	((c:ler_atuador@tecla)),c
 16371  003334  6E29               	line	82
 16372                           	
 16373                           l5255:
 16374  003336                     ;fifo.c: 80: char ler_atuador(char tecla);fifo.c: 81: {;fifo.c: 82:     switch(tecla)
 16375                           	goto	l5273
 16376  003336  EFDA  F019         	line	84
 16377                           ;fifo.c: 83:     {;fifo.c: 84:         case 'A': return(atuador.A); break;
 16378                           	
 16379                           l675:
 16380  00333A                     	btfsc	((c:_atuador)),c,0
 16381  00333A  B013               	goto	u3631
 16382  00333C  EFA2  F019         	goto	u3630
 16383  003340  EFA5  F019         u3631:
 16384  003344                     	movlw	1
 16385  003344  0E01               	goto	u3636
 16386  003346  EFA6  F019         u3630:
 16387  00334A                     	movlw	0
 16388  00334A  0E00               u3636:
 16389  00334C                     	goto	l676
 16390  00334C  EFF7  F019         	
 16391                           l5257:
 16392  003350                     	goto	l676
 16393  003350  EFF7  F019         	line	85
 16394                           ;fifo.c: 85:         case 'B': return(atuador.B); break;
 16395                           	
 16396                           l678:
 16397  003354                     	btfsc	((c:_atuador)),c,1
 16398  003354  B213               	goto	u3641
 16399  003356  EFAF  F019         	goto	u3640
 16400  00335A  EFB2  F019         u3641:
 16401  00335E                     	movlw	1
 16402  00335E  0E01               	goto	u3646
 16403  003360  EFB3  F019         u3640:
 16404  003364                     	movlw	0
 16405  003364  0E00               u3646:
 16406  003366                     	goto	l676
 16407  003366  EFF7  F019         	
 16408                           l5259:
 16409  00336A                     	goto	l676
 16410  00336A  EFF7  F019         	line	86
 16411                           ;fifo.c: 86:         case 'C': return(atuador.C); break;
 16412                           	
 16413                           l679:
 16414  00336E                     	btfsc	((c:_atuador)),c,2
 16415  00336E  B413               	goto	u3651
 16416  003370  EFBC  F019         	goto	u3650
 16417  003374  EFBF  F019         u3651:
 16418  003378                     	movlw	1
 16419  003378  0E01               	goto	u3656
 16420  00337A  EFC0  F019         u3650:
 16421  00337E                     	movlw	0
 16422  00337E  0E00               u3656:
 16423  003380                     	goto	l676
 16424  003380  EFF7  F019         	
 16425                           l5261:
 16426  003384                     	goto	l676
 16427  003384  EFF7  F019         	line	87
 16428                           ;fifo.c: 87:         case 'D': return(atuador.D); break;
 16429                           	
 16430                           l680:
 16431  003388                     	btfsc	((c:_atuador)),c,3
 16432  003388  B613               	goto	u3661
 16433  00338A  EFC9  F019         	goto	u3660
 16434  00338E  EFCC  F019         u3661:
 16435  003392                     	movlw	1
 16436  003392  0E01               	goto	u3666
 16437  003394  EFCD  F019         u3660:
 16438  003398                     	movlw	0
 16439  003398  0E00               u3666:
 16440  00339A                     	goto	l676
 16441  00339A  EFF7  F019         	
 16442                           l5263:
 16443  00339E                     	goto	l676
 16444  00339E  EFF7  F019         	line	88
 16445                           ;fifo.c: 88:         default: return 0; break;
 16446                           	
 16447                           l681:
 16448  0033A2                     	
 16449                           l5265:
 16450  0033A2                     	movlw	(0)&0ffh
 16451  0033A2  0E00               	goto	l676
 16452  0033A4  EFF7  F019         	
 16453                           l5267:
 16454  0033A8                     	goto	l676
 16455  0033A8  EFF7  F019         	
 16456                           l5269:
 16457  0033AC                     	goto	l676
 16458  0033AC  EFF7  F019         	line	89
 16459                           	
 16460                           l5271:
 16461  0033B0                     ;fifo.c: 89:     }
 16462                           	goto	l676
 16463  0033B0  EFF7  F019         	
 16464                           l674:
 16465  0033B4                     	
 16466                           l5273:
 16467  0033B4                     	movf	((c:ler_atuador@tecla)),c,w
 16468  0033B4  5029               	movwf	(??_ler_atuador+0+0)&0ffh,c
 16469  0033B6  6E27               	clrf	(??_ler_atuador+0+0+1)&0ffh,c
 16470  0033B8  6A28               
 16471                           	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
 16472                           ; Switch size 1, requested type "space"
 16473                           ; Number of cases is 1, Range of values is 0 to 0
 16474                           ; switch strategies available:
 16475                           ; Name         Instructions Cycles
 16476                           ; simple_byte            4     3 (average)
 16477                           ;	Chosen strategy is simple_byte
 16478                           
 16479                           	movf ??_ler_atuador+0+1,c,w
 16480  0033BA  5028               	xorlw	0^0	; case 0
 16481  0033BC  0A00               	skipnz
 16482  0033BE  B4D8               	goto	l7969
 16483  0033C0  EFE4  F019         	goto	l5265
 16484  0033C4  EFD1  F019         	
 16485                           l7969:
 16486  0033C8                     ; Switch size 1, requested type "space"
 16487                           ; Number of cases is 4, Range of values is 65 to 68
 16488                           ; switch strategies available:
 16489                           ; Name         Instructions Cycles
 16490                           ; simple_byte           13     7 (average)
 16491                           ;	Chosen strategy is simple_byte
 16492                           
 16493                           	movf ??_ler_atuador+0+0,c,w
 16494  0033C8  5027               	xorlw	65^0	; case 65
 16495  0033CA  0A41               	skipnz
 16496  0033CC  B4D8               	goto	l675
 16497  0033CE  EF9D  F019         	xorlw	66^65	; case 66
 16498  0033D2  0A03               	skipnz
 16499  0033D4  B4D8               	goto	l678
 16500  0033D6  EFAA  F019         	xorlw	67^66	; case 67
 16501  0033DA  0A01               	skipnz
 16502  0033DC  B4D8               	goto	l679
 16503  0033DE  EFB7  F019         	xorlw	68^67	; case 68
 16504  0033E2  0A07               	skipnz
 16505  0033E4  B4D8               	goto	l680
 16506  0033E6  EFC4  F019         	goto	l5265
 16507  0033EA  EFD1  F019         
 16508                           	
 16509                           l677:
 16510  0033EE                     	line	90
 16511                           	
 16512                           l676:
 16513  0033EE                     	return	;funcret
 16514  0033EE  0012               	opt stack 0
 16515                           GLOBAL	__end_of_ler_atuador
 16516                           	__end_of_ler_atuador:
 16517  0033F0                     	signat	_ler_atuador,4217
 16518                           	global	_resetIndicePassos
 16519                           
 16520 ;; *************** function _resetIndicePassos *****************
 16521 ;; Defined at:
 16522 ;;		line 36 in file "fifo.c"
 16523 ;; Parameters:    Size  Location     Type
 16524 ;;		None
 16525 ;; Auto vars:     Size  Location     Type
 16526 ;;		None
 16527 ;; Return value:  Size  Location     Type
 16528 ;;                  1    wreg      void 
 16529 ;; Registers used:
 16530 ;;		wreg, status,2
 16531 ;; Tracked objects:
 16532 ;;		On entry : 0/0
 16533 ;;		On exit  : 0/0
 16534 ;;		Unchanged: 0/0
 16535 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16536 ;;      Params:         0       0       0       0       0       0       0       0       0       0
 16537 ;;      Locals:         0       0       0       0       0       0       0       0       0       0
 16538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0
 16539 ;;      Totals:         0       0       0       0       0       0       0       0       0       0
 16540 ;;Total ram usage:        0 bytes
 16541 ;; Hardware stack levels used:    1
 16542 ;; Hardware stack levels required when called:    2
 16543 ;; This function calls:
 16544 ;;		Nothing
 16545 ;; This function is called by:
 16546 ;;		_main
 16547 ;; This function uses a non-reentrant model
 16548 ;;
 16549                           psect	text17,class=CODE,space=0,reloc=2,group=0
 16550                           	line	36
 16551                           global __ptext17
 16552                           __ptext17:
 16553  004592                     psect	text17
 16554                           	file	"fifo.c"
 16555                           	line	36
 16556                           	global	__size_of_resetIndicePassos
 16557                           	__size_of_resetIndicePassos	equ	__end_of_resetIndicePassos-_resetIndicePassos
 16558  0000                     	
 16559                           _resetIndicePassos:
 16560  004592                     ;incstack = 0
 16561                           	opt	stack 28
 16562                           	line	38
 16563                           	
 16564                           l6003:
 16565  004592                     ;fifo.c: 38:     indice_passos = 2;
 16566                           	movlw	low(02h)
 16567  004592  0E02               	movwf	((c:_indice_passos)),c
 16568  004594  6E5B               	line	39
 16569                           	
 16570                           l657:
 16571  004596                     	return	;funcret
 16572  004596  0012               	opt stack 0
 16573                           GLOBAL	__end_of_resetIndicePassos
 16574                           	__end_of_resetIndicePassos:
 16575  004598                     	signat	_resetIndicePassos,89
 16576                           	global	_resetContCiclos
 16577                           
 16578 ;; *************** function _resetContCiclos *****************
 16579 ;; Defined at:
 16580 ;;		line 54 in file "fifo.c"
 16581 ;; Parameters:    Size  Location     Type
 16582 ;;		None
 16583 ;; Auto vars:     Size  Location     Type
 16584 ;;		None
 16585 ;; Return value:  Size  Location     Type
 16586 ;;                  1    wreg      void 
 16587 ;; Registers used:
 16588 ;;		wreg, status,2
 16589 ;; Tracked objects:
 16590 ;;		On entry : 0/0
 16591 ;;		On exit  : 0/0
 16592 ;;		Unchanged: 0/0
 16593 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16594 ;;      Params:         0       0       0       0       0       0       0       0       0       0
 16595 ;;      Locals:         0       0       0       0       0       0       0       0       0       0
 16596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0
 16597 ;;      Totals:         0       0       0       0       0       0       0       0       0       0
 16598 ;;Total ram usage:        0 bytes
 16599 ;; Hardware stack levels used:    1
 16600 ;; Hardware stack levels required when called:    2
 16601 ;; This function calls:
 16602 ;;		Nothing
 16603 ;; This function is called by:
 16604 ;;		_main
 16605 ;; This function uses a non-reentrant model
 16606 ;;
 16607                           psect	text18,class=CODE,space=0,reloc=2,group=0
 16608                           	line	54
 16609                           global __ptext18
 16610                           __ptext18:
 16611  00453C                     psect	text18
 16612                           	file	"fifo.c"
 16613                           	line	54
 16614                           	global	__size_of_resetContCiclos
 16615                           	__size_of_resetContCiclos	equ	__end_of_resetContCiclos-_resetContCiclos
 16616  0000                     	
 16617                           _resetContCiclos:
 16618  00453C                     ;incstack = 0
 16619                           	opt	stack 28
 16620                           	line	56
 16621                           	
 16622                           l6005:
 16623  00453C                     ;fifo.c: 56:     cont_ciclos = 0;
 16624                           	movlw	high(0)
 16625  00453C  0E00               	movwf	((c:_cont_ciclos+1)),c
 16626  00453E  6E0E               	movlw	low(0)
 16627  004540  0E00               	movwf	((c:_cont_ciclos)),c
 16628  004542  6E0D               	line	57
 16629                           	
 16630                           l666:
 16631  004544                     	return	;funcret
 16632  004544  0012               	opt stack 0
 16633                           GLOBAL	__end_of_resetContCiclos
 16634                           	__end_of_resetContCiclos:
 16635  004546                     	signat	_resetContCiclos,89
 16636                           	global	_printExec
 16637                           
 16638 ;; *************** function _printExec *****************
 16639 ;; Defined at:
 16640 ;;		line 520 in file "fifo.c"
 16641 ;; Parameters:    Size  Location     Type
 16642 ;;  col             1    wreg     unsigned char 
 16643 ;;  ind             1   25[COMRAM] unsigned char 
 16644 ;; Auto vars:     Size  Location     Type
 16645 ;;  col             1   28[COMRAM] unsigned char 
 16646 ;;  passo           1   29[COMRAM] unsigned char 
 16647 ;; Return value:  Size  Location     Type
 16648 ;;                  1    wreg      void 
 16649 ;; Registers used:
 16650 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16651 ;; Tracked objects:
 16652 ;;		On entry : 0/0
 16653 ;;		On exit  : 0/0
 16654 ;;		Unchanged: 0/0
 16655 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16656 ;;      Params:         1       0       0       0       0       0       0       0       0       0
 16657 ;;      Locals:         4       0       0       0       0       0       0       0       0       0
 16658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0
 16659 ;;      Totals:         5       0       0       0       0       0       0       0       0       0
 16660 ;;Total ram usage:        5 bytes
 16661 ;; Hardware stack levels used:    1
 16662 ;; Hardware stack levels required when called:    5
 16663 ;; This function calls:
 16664 ;;		_decodifica
 16665 ;;		_dignum_tam
 16666 ;;		_dispLCD_dataReg
 16667 ;;		_dispLCD_lincol
 16668 ;;		_dispLCD_num
 16669 ;;		_posAtual
 16670 ;; This function is called by:
 16671 ;;		_main
 16672 ;; This function uses a non-reentrant model
 16673 ;;
 16674                           psect	text19,class=CODE,space=0,reloc=2,group=0
 16675                           	line	520
 16676                           global __ptext19
 16677                           __ptext19:
 16678  002522                     psect	text19
 16679                           	file	"fifo.c"
 16680                           	line	520
 16681                           	global	__size_of_printExec
 16682                           	__size_of_printExec	equ	__end_of_printExec-_printExec
 16683  0000                     	
 16684                           _printExec:
 16685  002522                     ;incstack = 0
 16686                           	opt	stack 25
 16687                           ;printExec@col stored from wreg
 16688                           	movwf	((c:printExec@col)),c
 16689  002522  6E43               	line	522
 16690                           	
 16691                           l5919:
 16692  002524                     ;fifo.c: 520: void printExec (char col, char ind);fifo.c: 521: {;fifo.c: 522:     char p
                                 asso = posAtual( ind );
 16693                           	movf	((c:printExec@ind)),c,w
 16694  002524  5040               	
 16695                           	call	_posAtual
 16696  002526  ECFA  F021         	movwf	((c:printExec@passo)),c
 16697  00252A  6E44               	line	524
 16698                           	
 16699                           l5921:
 16700  00252C                     ;fifo.c: 524:     if(passo > 0 && passo <= 0x64)
 16701                           	movf	((c:printExec@passo)),c,w
 16702  00252C  5044               	btfsc	status,2
 16703  00252E  B4D8               	goto	u4461
 16704  002530  EF9C  F012         	goto	u4460
 16705  002534  EF9E  F012         u4461:
 16706  002538                     	goto	l5933
 16707  002538  EFC9  F012         u4460:
 16708  00253C                     	
 16709                           l5923:
 16710  00253C                     		movlw	065h-0
 16711  00253C  0E65               	cpfslt	((c:printExec@passo)),c
 16712  00253E  6044               	goto	u4471
 16713  002540  EFA4  F012         	goto	u4470
 16714  002544  EFA6  F012         
 16715                           u4471:
 16716  002548                     	goto	l5933
 16717  002548  EFC9  F012         u4470:
 16718  00254C                     	line	526
 16719                           	
 16720                           l5925:
 16721  00254C                     ;fifo.c: 525:     {;fifo.c: 526:         if( dignum_tam( (int) passo ) == 3 )
 16722                           	movff	(c:printExec@passo),(c:dignum_tam@num)
 16723  00254C  C044  F02F         	clrf	((c:dignum_tam@num+1)),c
 16724  002550  6A30               	call	_dignum_tam	;wreg free
 16725  002552  ECDD  F01F         	xorlw	03h
 16726  002556  0A03               	btfss	status,2
 16727  002558  A4D8               	goto	u4481
 16728  00255A  EFB1  F012         	goto	u4480
 16729  00255E  EFB3  F012         u4481:
 16730  002562                     	goto	l5929
 16731  002562  EFB6  F012         u4480:
 16732  002566                     	line	527
 16733                           	
 16734                           l5927:
 16735  002566                     ;fifo.c: 527:             col-=1;
 16736                           	decf	((c:printExec@col)),c
 16737  002566  0643               	goto	l5929
 16738  002568  EFB6  F012         	
 16739                           l871:
 16740  00256C                     	line	528
 16741                           	
 16742                           l5929:
 16743  00256C                     ;fifo.c: 528:         dispLCD_num(0, col, (int)passo, dignum_tam( (int)passo) );
 16744                           	movff	(c:printExec@col),(c:dispLCD_num@col)
 16745  00256C  C043  F032         	movff	(c:printExec@passo),(c:dispLCD_num@num)
 16746  002570  C044  F033         	clrf	((c:dispLCD_num@num+1)),c
 16747  002574  6A34               	movff	(c:printExec@passo),(c:dignum_tam@num)
 16748  002576  C044  F02F         	clrf	((c:dignum_tam@num+1)),c
 16749  00257A  6A30               	call	_dignum_tam	;wreg free
 16750  00257C  ECDD  F01F         	movwf	((c:dispLCD_num@tam)),c
 16751  002580  6E35               	movlw	(0)&0ffh
 16752  002582  0E00               	
 16753                           	call	_dispLCD_num
 16754  002584  EC62  F013         	line	529
 16755                           	
 16756                           l5931:
 16757  002588                     ;fifo.c: 529:         dispLCD_dataReg('%');
 16758                           	movlw	(025h)&0ffh
 16759  002588  0E25               	
 16760                           	call	_dispLCD_dataReg
 16761  00258A  EC8F  F01F         	line	530
 16762                           ;fifo.c: 530:     }
 16763                           	goto	l883
 16764  00258E  EF61  F013         	line	531
 16765                           ;fifo.c: 531:     else if(passo > 0x64 && passo <= 0xDC)
 16766                           	
 16767                           l870:
 16768  002592                     	
 16769                           l5933:
 16770  002592                     		movlw	065h-1
 16771  002592  0E64               	cpfsgt	((c:printExec@passo)),c
 16772  002594  6444               	goto	u4491
 16773  002596  EFCF  F012         	goto	u4490
 16774  00259A  EFD1  F012         
 16775                           u4491:
 16776  00259E                     	goto	l5947
 16777  00259E  EF02  F013         u4490:
 16778  0025A2                     	
 16779                           l5935:
 16780  0025A2                     		movlw	0DDh-0
 16781  0025A2  0EDD               	cpfslt	((c:printExec@passo)),c
 16782  0025A4  6044               	goto	u4501
 16783  0025A6  EFD7  F012         	goto	u4500
 16784  0025AA  EFD9  F012         
 16785                           u4501:
 16786  0025AE                     	goto	l5947
 16787  0025AE  EF02  F013         u4500:
 16788  0025B2                     	line	533
 16789                           	
 16790                           l5937:
 16791  0025B2                     ;fifo.c: 532:     {;fifo.c: 533:         decodifica(&passo);
 16792                           		movlw	low(printExec@passo)
 16793  0025B2  0E44               	movwf	((c:decodifica@d)),c
 16794  0025B4  6E27               	movlw	high(printExec@passo)
 16795  0025B6  0E00               	movwf	((c:decodifica@d+1)),c
 16796  0025B8  6E28               
 16797                           	call	_decodifica	;wreg free
 16798  0025BA  ECE7  F014         	line	534
 16799                           	
 16800                           l5939:
 16801  0025BE                     ;fifo.c: 534:         if( dignum_tam( (int) passo ) == 3 )
 16802                           	movff	(c:printExec@passo),(c:dignum_tam@num)
 16803  0025BE  C044  F02F         	clrf	((c:dignum_tam@num+1)),c
 16804  0025C2  6A30               	call	_dignum_tam	;wreg free
 16805  0025C4  ECDD  F01F         	xorlw	03h
 16806  0025C8  0A03               	btfss	status,2
 16807  0025CA  A4D8               	goto	u4511
 16808  0025CC  EFEA  F012         	goto	u4510
 16809  0025D0  EFEC  F012         u4511:
 16810  0025D4                     	goto	l5943
 16811  0025D4  EFEF  F012         u4510:
 16812  0025D8                     	line	535
 16813                           	
 16814                           l5941:
 16815  0025D8                     ;fifo.c: 535:             col-=1;
 16816                           	decf	((c:printExec@col)),c
 16817  0025D8  0643               	goto	l5943
 16818  0025DA  EFEF  F012         	
 16819                           l874:
 16820  0025DE                     	line	536
 16821                           	
 16822                           l5943:
 16823  0025DE                     ;fifo.c: 536:         dispLCD_num(0, col, (int)passo, dignum_tam( (int)passo) );
 16824                           	movff	(c:printExec@col),(c:dispLCD_num@col)
 16825  0025DE  C043  F032         	movff	(c:printExec@passo),(c:dispLCD_num@num)
 16826  0025E2  C044  F033         	clrf	((c:dispLCD_num@num+1)),c
 16827  0025E6  6A34               	movff	(c:printExec@passo),(c:dignum_tam@num)
 16828  0025E8  C044  F02F         	clrf	((c:dignum_tam@num+1)),c
 16829  0025EC  6A30               	call	_dignum_tam	;wreg free
 16830  0025EE  ECDD  F01F         	movwf	((c:dispLCD_num@tam)),c
 16831  0025F2  6E35               	movlw	(0)&0ffh
 16832  0025F4  0E00               	
 16833                           	call	_dispLCD_num
 16834  0025F6  EC62  F013         	line	537
 16835                           	
 16836                           l5945:
 16837  0025FA                     ;fifo.c: 537:         dispLCD_dataReg('s');
 16838                           	movlw	(073h)&0ffh
 16839  0025FA  0E73               	
 16840                           	call	_dispLCD_dataReg
 16841  0025FC  EC8F  F01F         	line	538
 16842                           ;fifo.c: 538:     }
 16843                           	goto	l883
 16844  002600  EF61  F013         	line	539
 16845                           ;fifo.c: 539:     else if( passo > 0xDC && passo <0xFE)
 16846                           	
 16847                           l873:
 16848  002604                     	
 16849                           l5947:
 16850  002604                     		movlw	0DDh-1
 16851  002604  0EDC               	cpfsgt	((c:printExec@passo)),c
 16852  002606  6444               	goto	u4521
 16853  002608  EF08  F013         	goto	u4520
 16854  00260C  EF0A  F013         
 16855                           u4521:
 16856  002610                     	goto	l5965
 16857  002610  EF39  F013         u4520:
 16858  002614                     	
 16859                           l5949:
 16860  002614                     		movlw	0FEh-0
 16861  002614  0EFE               	cpfslt	((c:printExec@passo)),c
 16862  002616  6044               	goto	u4531
 16863  002618  EF10  F013         	goto	u4530
 16864  00261C  EF12  F013         
 16865                           u4531:
 16866  002620                     	goto	l5965
 16867  002620  EF39  F013         u4530:
 16868  002624                     	line	541
 16869                           	
 16870                           l5951:
 16871  002624                     ;fifo.c: 540:     {;fifo.c: 541:         decodifica(&passo);
 16872                           		movlw	low(printExec@passo)
 16873  002624  0E44               	movwf	((c:decodifica@d)),c
 16874  002626  6E27               	movlw	high(printExec@passo)
 16875  002628  0E00               	movwf	((c:decodifica@d+1)),c
 16876  00262A  6E28               
 16877                           	call	_decodifica	;wreg free
 16878  00262C  ECE7  F014         	line	542
 16879                           	
 16880                           l5953:
 16881  002630                     ;fifo.c: 542:         dispLCD_lincol(0, col);
 16882                           	movff	(c:printExec@col),(c:dispLCD_lincol@col)
 16883  002630  C043  F029         	movlw	(0)&0ffh
 16884  002634  0E00               	
 16885                           	call	_dispLCD_lincol
 16886  002636  EC54  F01E         	line	543
 16887                           	
 16888                           l5955:
 16889  00263A                     ;fifo.c: 543:         dispLCD_dataReg( passo & ~0x20 );
 16890                           	movf	((c:printExec@passo)),c,w
 16891  00263A  5044               	andlw	low(0DFh)
 16892  00263C  0BDF               	
 16893                           	call	_dispLCD_dataReg
 16894  00263E  EC8F  F01F         	line	544
 16895                           	
 16896                           l5957:
 16897  002642                     ;fifo.c: 544:         dispLCD_dataReg( passo & 0x20 ? '-': '+' );
 16898                           	
 16899                           	btfsc	((c:printExec@passo)),c,(5)&7
 16900  002642  BA44               	goto	u4541
 16901  002644  EF26  F013         	goto	u4540
 16902  002648  EF28  F013         u4541:
 16903  00264C                     	goto	l5961
 16904  00264C  EF2E  F013         u4540:
 16905  002650                     	
 16906                           l5959:
 16907  002650                     	movlw	high(02Bh)
 16908  002650  0E00               	movwf	((c:_printExec$1075+1)),c
 16909  002652  6E42               	movlw	low(02Bh)
 16910  002654  0E2B               	movwf	((c:_printExec$1075)),c
 16911  002656  6E41               	goto	l5963
 16912  002658  EF34  F013         	
 16913                           l878:
 16914  00265C                     	
 16915                           l5961:
 16916  00265C                     	movlw	high(02Dh)
 16917  00265C  0E00               	movwf	((c:_printExec$1075+1)),c
 16918  00265E  6E42               	movlw	low(02Dh)
 16919  002660  0E2D               	movwf	((c:_printExec$1075)),c
 16920  002662  6E41               	goto	l5963
 16921  002664  EF34  F013         	
 16922                           l880:
 16923  002668                     	
 16924                           l5963:
 16925  002668                     	movf	((c:_printExec$1075)),c,w
 16926  002668  5041               	
 16927                           	call	_dispLCD_dataReg
 16928  00266A  EC8F  F01F         	line	545
 16929                           ;fifo.c: 545:     }
 16930                           	goto	l883
 16931  00266E  EF61  F013         	line	546
 16932                           ;fifo.c: 546:     else if( passo == 0xFE)
 16933                           	
 16934                           l876:
 16935  002672                     	
 16936                           l5965:
 16937  002672                     		movlw	254
 16938  002672  0EFE               	xorwf	((c:printExec@passo)),c,w
 16939  002674  1844               	btfss	status,2
 16940  002676  A4D8               	goto	u4551
 16941  002678  EF40  F013         	goto	u4550
 16942  00267C  EF42  F013         
 16943                           u4551:
 16944  002680                     	goto	l883
 16945  002680  EF61  F013         u4550:
 16946  002684                     	line	548
 16947                           	
 16948                           l5967:
 16949  002684                     ;fifo.c: 547:     {;fifo.c: 548:         decodifica(&passo);
 16950                           		movlw	low(printExec@passo)
 16951  002684  0E44               	movwf	((c:decodifica@d)),c
 16952  002686  6E27               	movlw	high(printExec@passo)
 16953  002688  0E00               	movwf	((c:decodifica@d+1)),c
 16954  00268A  6E28               
 16955                           	call	_decodifica	;wreg free
 16956  00268C  ECE7  F014         	line	549
 16957                           	
 16958                           l5969:
 16959  002690                     ;fifo.c: 549:         dispLCD_num(0, col, (int)passo, dignum_tam( (int)passo) );
 16960                           	movff	(c:printExec@col),(c:dispLCD_num@col)
 16961  002690  C043  F032         	movff	(c:printExec@passo),(c:dispLCD_num@num)
 16962  002694  C044  F033         	clrf	((c:dispLCD_num@num+1)),c
 16963  002698  6A34               	movff	(c:printExec@passo),(c:dignum_tam@num)
 16964  00269A  C044  F02F         	clrf	((c:dignum_tam@num+1)),c
 16965  00269E  6A30               	call	_dignum_tam	;wreg free
 16966  0026A0  ECDD  F01F         	movwf	((c:dispLCD_num@tam)),c
 16967  0026A4  6E35               	movlw	(0)&0ffh
 16968  0026A6  0E00               	
 16969                           	call	_dispLCD_num
 16970  0026A8  EC62  F013         	line	550
 16971                           	
 16972                           l5971:
 16973  0026AC                     ;fifo.c: 550:         dispLCD_dataReg('%');
 16974                           	movlw	(025h)&0ffh
 16975  0026AC  0E25               	
 16976                           	call	_dispLCD_dataReg
 16977  0026AE  EC8F  F01F         	goto	l883
 16978  0026B2  EF61  F013         	line	551
 16979                           ;fifo.c: 551:     }
 16980                           	
 16981                           l882:
 16982  0026B6                     	goto	l883
 16983  0026B6  EF61  F013         	
 16984                           l881:
 16985  0026BA                     	goto	l883
 16986  0026BA  EF61  F013         	
 16987                           l875:
 16988  0026BE                     	goto	l883
 16989  0026BE  EF61  F013         	
 16990                           l872:
 16991  0026C2                     	line	552
 16992                           	
 16993                           l883:
 16994  0026C2                     	return	;funcret
 16995  0026C2  0012               	opt stack 0
 16996                           GLOBAL	__end_of_printExec
 16997                           	__end_of_printExec:
 16998  0026C4                     	signat	_printExec,8313
 16999                           	global	_posAtual
 17000                           
 17001 ;; *************** function _posAtual *****************
 17002 ;; Defined at:
 17003 ;;		line 512 in file "fifo.c"
 17004 ;; Parameters:    Size  Location     Type
 17005 ;;  ind             1    wreg     unsigned char 
 17006 ;; Auto vars:     Size  Location     Type
 17007 ;;  ind             1    1[COMRAM] unsigned char 
 17008 ;;  passo           1    2[COMRAM] unsigned char 
 17009 ;; Return value:  Size  Location     Type
 17010 ;;                  1    wreg      unsigned char 
 17011 ;; Registers used:
 17012 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17013 ;; Tracked objects:
 17014 ;;		On entry : 0/0
 17015 ;;		On exit  : 0/0
 17016 ;;		Unchanged: 0/0
 17017 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17018 ;;      Params:         0       0       0       0       0       0       0       0       0       0
 17019 ;;      Locals:         2       0       0       0       0       0       0       0       0       0
 17020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0
 17021 ;;      Totals:         2       0       0       0       0       0       0       0       0       0
 17022 ;;Total ram usage:        2 bytes
 17023 ;; Hardware stack levels used:    1
 17024 ;; Hardware stack levels required when called:    3
 17025 ;; This function calls:
 17026 ;;		_fifo_lerPos
 17027 ;;		_getIndicePassos
 17028 ;; This function is called by:
 17029 ;;		_printExec
 17030 ;; This function uses a non-reentrant model
 17031 ;;
 17032                           psect	text20,class=CODE,space=0,reloc=2,group=0
 17033                           	line	512
 17034                           global __ptext20
 17035                           __ptext20:
 17036  0043F4                     psect	text20
 17037                           	file	"fifo.c"
 17038                           	line	512
 17039                           	global	__size_of_posAtual
 17040                           	__size_of_posAtual	equ	__end_of_posAtual-_posAtual
 17041  0000                     	
 17042                           _posAtual:
 17043  0043F4                     ;incstack = 0
 17044                           	opt	stack 26
 17045                           ;posAtual@ind stored from wreg
 17046                           	movwf	((c:posAtual@ind)),c
 17047  0043F4  6E28               	line	514
 17048                           	
 17049                           l5421:
 17050  0043F6                     ;fifo.c: 512: char posAtual(char ind);fifo.c: 513: {;fifo.c: 514:     char passo = 0;
 17051                           	movlw	low(0)
 17052  0043F6  0E00               	movwf	((c:posAtual@passo)),c
 17053  0043F8  6E29               	line	516
 17054                           	
 17055                           l5423:
 17056  0043FA                     ;fifo.c: 516:     passo = fifo_lerPos( getIndicePassos() + ind );
 17057                           	call	_getIndicePassos	;wreg free
 17058  0043FA  ECB2  F022         	addwf	((c:posAtual@ind)),c,w
 17059  0043FE  2428               	
 17060                           	call	_fifo_lerPos
 17061  004400  EC07  F022         	movwf	((c:posAtual@passo)),c
 17062  004404  6E29               	line	517
 17063                           	
 17064                           l5425:
 17065  004406                     ;fifo.c: 517:     return(passo);
 17066                           	movf	((c:posAtual@passo)),c,w
 17067  004406  5029               	goto	l867
 17068  004408  EF06  F022         	
 17069                           l5427:
 17070  00440C                     	line	518
 17071                           	
 17072                           l867:
 17073  00440C                     	return	;funcret
 17074  00440C  0012               	opt stack 0
 17075                           GLOBAL	__end_of_posAtual
 17076                           	__end_of_posAtual:
 17077  00440E                     	signat	_posAtual,4217
 17078                           	global	_getIndicePassos
 17079                           
 17080 ;; *************** function _getIndicePassos *****************
 17081 ;; Defined at:
 17082 ;;		line 31 in file "fifo.c"
 17083 ;; Parameters:    Size  Location     Type
 17084 ;;		None
 17085 ;; Auto vars:     Size  Location     Type
 17086 ;;		None
 17087 ;; Return value:  Size  Location     Type
 17088 ;;                  1    wreg      unsigned char 
 17089 ;; Registers used:
 17090 ;;		wreg, status,2
 17091 ;; Tracked objects:
 17092 ;;		On entry : 0/0
 17093 ;;		On exit  : 0/0
 17094 ;;		Unchanged: 0/0
 17095 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17096 ;;      Params:         0       0       0       0       0       0       0       0       0       0
 17097 ;;      Locals:         0       0       0       0       0       0       0       0       0       0
 17098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0
 17099 ;;      Totals:         0       0       0       0       0       0       0       0       0       0
 17100 ;;Total ram usage:        0 bytes
 17101 ;; Hardware stack levels used:    1
 17102 ;; Hardware stack levels required when called:    2
 17103 ;; This function calls:
 17104 ;;		Nothing
 17105 ;; This function is called by:
 17106 ;;		_main
 17107 ;;		_posAtual
 17108 ;; This function uses a non-reentrant model
 17109 ;;
 17110                           psect	text21,class=CODE,space=0,reloc=2,group=0
 17111                           	line	31
 17112                           global __ptext21
 17113                           __ptext21:
 17114  004564                     psect	text21
 17115                           	file	"fifo.c"
 17116                           	line	31
 17117                           	global	__size_of_getIndicePassos
 17118                           	__size_of_getIndicePassos	equ	__end_of_getIndicePassos-_getIndicePassos
 17119  0000                     	
 17120                           _getIndicePassos:
 17121  004564                     ;incstack = 0
 17122                           	opt	stack 26
 17123                           	line	33
 17124                           	
 17125                           l5121:
 17126  004564                     ;fifo.c: 33:     return(indice_passos);
 17127                           	movf	((c:_indice_passos)),c,w
 17128  004564  505B               	goto	l654
 17129  004566  EFB5  F022         	
 17130                           l5123:
 17131  00456A                     	line	34
 17132                           	
 17133                           l654:
 17134  00456A                     	return	;funcret
 17135  00456A  0012               	opt stack 0
 17136                           GLOBAL	__end_of_getIndicePassos
 17137                           	__end_of_getIndicePassos:
 17138  00456C                     	signat	_getIndicePassos,89
 17139                           	global	_fifo_lerPos
 17140                           
 17141 ;; *************** function _fifo_lerPos *****************
 17142 ;; Defined at:
 17143 ;;		line 168 in file "fifo.c"
 17144 ;; Parameters:    Size  Location     Type
 17145 ;;  i               1    wreg     unsigned char 
 17146 ;; Auto vars:     Size  Location     Type
 17147 ;;  i               1    0[COMRAM] unsigned char 
 17148 ;; Return value:  Size  Location     Type
 17149 ;;                  1    wreg      unsigned char 
 17150 ;; Registers used:
 17151 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 17152 ;; Tracked objects:
 17153 ;;		On entry : 0/0
 17154 ;;		On exit  : 0/0
 17155 ;;		Unchanged: 0/0
 17156 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17157 ;;      Params:         0       0       0       0       0       0       0       0       0       0
 17158 ;;      Locals:         1       0       0       0       0       0       0       0       0       0
 17159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0
 17160 ;;      Totals:         1       0       0       0       0       0       0       0       0       0
 17161 ;;Total ram usage:        1 bytes
 17162 ;; Hardware stack levels used:    1
 17163 ;; Hardware stack levels required when called:    2
 17164 ;; This function calls:
 17165 ;;		Nothing
 17166 ;; This function is called by:
 17167 ;;		_main
 17168 ;;		_posAtual
 17169 ;; This function uses a non-reentrant model
 17170 ;;
 17171                           psect	text22,class=CODE,space=0,reloc=2,group=0
 17172                           	line	168
 17173                           global __ptext22
 17174                           __ptext22:
 17175  00440E                     psect	text22
 17176                           	file	"fifo.c"
 17177                           	line	168
 17178                           	global	__size_of_fifo_lerPos
 17179                           	__size_of_fifo_lerPos	equ	__end_of_fifo_lerPos-_fifo_lerPos
 17180  0000                     	
 17181                           _fifo_lerPos:
 17182  00440E                     ;incstack = 0
 17183                           	opt	stack 26
 17184                           ;fifo_lerPos@i stored from wreg
 17185                           	movwf	((c:fifo_lerPos@i)),c
 17186  00440E  6E27               	line	170
 17187                           	
 17188                           l5125:
 17189  004410                     ;fifo.c: 168: char fifo_lerPos(char i);fifo.c: 169: {;fifo.c: 170:     return ( fila[i] 
                                 );
 17190                           	movf	((c:fifo_lerPos@i)),c,w
 17191  004410  5027               	mullw	01h
 17192  004412  0D01               	movlw	low(_fila)
 17193  004414  0E15               	addwf	(prodl),c,w
 17194  004416  24F3               	movwf	c:fsr2l
 17195  004418  6ED9               	movlw	high(_fila)
 17196  00441A  0E00               	addwfc	prod+1,w
 17197  00441C  20F4               	movwf	1+c:fsr2l
 17198  00441E  6EDA               	movf	indf2,w
 17199  004420  50DF               	goto	l719
 17200  004422  EF13  F022         	
 17201                           l5127:
 17202  004426                     	line	171
 17203                           	
 17204                           l719:
 17205  004426                     	return	;funcret
 17206  004426  0012               	opt stack 0
 17207                           GLOBAL	__end_of_fifo_lerPos
 17208                           	__end_of_fifo_lerPos:
 17209  004428                     	signat	_fifo_lerPos,4217
 17210                           	global	_dispLCD_num
 17211                           
 17212 ;; *************** function _dispLCD_num *****************
 17213 ;; Defined at:
 17214 ;;		line 201 in file "dispLCD4vias.c"
 17215 ;; Parameters:    Size  Location     Type
 17216 ;;  lin             1    wreg     unsigned char 
 17217 ;;  col             1   11[COMRAM] unsigned char 
 17218 ;;  num             2   12[COMRAM] int 
 17219 ;;  tam             1   14[COMRAM] unsigned char 
 17220 ;; Auto vars:     Size  Location     Type
 17221 ;;  lin             1   20[COMRAM] unsigned char 
 17222 ;;  div             2   23[COMRAM] int 
 17223 ;;  sinal           1   22[COMRAM] unsigned char 
 17224 ;;  size            1   21[COMRAM] unsigned char 
 17225 ;; Return value:  Size  Location     Type
 17226 ;;                  1    wreg      void 
 17227 ;; Registers used:
 17228 ;;		wreg, status,2, status,0, cstack
 17229 ;; Tracked objects:
 17230 ;;		On entry : 0/0
 17231 ;;		On exit  : 0/0
 17232 ;;		Unchanged: 0/0
 17233 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17234 ;;      Params:         4       0       0       0       0       0       0       0       0       0
 17235 ;;      Locals:         5       0       0       0       0       0       0       0       0       0
 17236 ;;      Temps:          5       0       0       0       0       0       0       0       0       0
 17237 ;;      Totals:        14       0       0       0       0       0       0       0       0       0
 17238 ;;Total ram usage:       14 bytes
 17239 ;; Hardware stack levels used:    1
 17240 ;; Hardware stack levels required when called:    4
 17241 ;; This function calls:
 17242 ;;		___awdiv
 17243 ;;		___awmod
 17244 ;;		_dispLCD_dataReg
 17245 ;;		_dispLCD_lincol
 17246 ;; This function is called by:
 17247 ;;		_printExec
 17248 ;;		_main
 17249 ;; This function uses a non-reentrant model
 17250 ;;
 17251                           psect	text23,class=CODE,space=0,reloc=2,group=0
 17252                           	file	"dispLCD4vias.c"
 17253                           	line	201
 17254                           global __ptext23
 17255                           __ptext23:
 17256  0026C4                     psect	text23
 17257                           	file	"dispLCD4vias.c"
 17258                           	line	201
 17259                           	global	__size_of_dispLCD_num
 17260                           	__size_of_dispLCD_num	equ	__end_of_dispLCD_num-_dispLCD_num
 17261  0000                     	
 17262                           _dispLCD_num:
 17263  0026C4                     ;incstack = 0
 17264                           	opt	stack 25
 17265                           ;dispLCD_num@lin stored from wreg
 17266                           	movwf	((c:dispLCD_num@lin)),c
 17267  0026C4  6E3B               	line	208
 17268                           	
 17269                           l5279:
 17270  0026C6                     ;dispLCD4vias.c: 201: void dispLCD_num( unsigned char lin, unsigned char col,;dispLCD4vi
                                 as.c: 202:                     int num, unsigned char tam );dispLCD4vias.c: 203: {;dispL
                                 CD4vias.c: 204:     int div;;dispLCD4vias.c: 205:     unsigned char size;;dispLCD4vias.c
                                 : 206:     char sinal;;dispLCD4vias.c: 208:     sinal = num < 0;
 17271                           	btfsc	((c:dispLCD_num@num+1)),c,7
 17272  0026C6  BE34               	goto	u3671
 17273  0026C8  EF68  F013         	goto	u3670
 17274  0026CC  EF6B  F013         
 17275                           u3671:
 17276  0026D0                     	movlw	1
 17277  0026D0  0E01               	goto	u3680
 17278  0026D2  EF6C  F013         u3670:
 17279  0026D6                     	movlw	0
 17280  0026D6  0E00               u3680:
 17281  0026D8                     	movwf	((c:dispLCD_num@sinal)),c
 17282  0026D8  6E3D               	line	209
 17283                           	
 17284                           l5281:
 17285  0026DA                     ;dispLCD4vias.c: 209:     if( sinal )
 17286                           	movf	((c:dispLCD_num@sinal)),c,w
 17287  0026DA  503D               	btfsc	status,2
 17288  0026DC  B4D8               	goto	u3691
 17289  0026DE  EF73  F013         	goto	u3690
 17290  0026E2  EF75  F013         u3691:
 17291  0026E6                     	goto	l5285
 17292  0026E6  EF7B  F013         u3690:
 17293  0026EA                     	line	210
 17294                           	
 17295                           l5283:
 17296  0026EA                     ;dispLCD4vias.c: 210:         num = (~num) + 1;
 17297                           	negf	((c:dispLCD_num@num)),c
 17298  0026EA  6C33               	comf	((c:dispLCD_num@num+1)),c
 17299  0026EC  1E34               	btfsc	status,0
 17300  0026EE  B0D8               	incf	((c:dispLCD_num@num+1)),c
 17301  0026F0  2A34               	goto	l5285
 17302  0026F2  EF7B  F013         	
 17303                           l526:
 17304  0026F6                     	line	212
 17305                           	
 17306                           l5285:
 17307  0026F6                     ;dispLCD4vias.c: 212:     dispLCD_lincol(lin, col);
 17308                           	movff	(c:dispLCD_num@col),(c:dispLCD_lincol@col)
 17309  0026F6  C032  F029         	movf	((c:dispLCD_num@lin)),c,w
 17310  0026FA  503B               	
 17311                           	call	_dispLCD_lincol
 17312  0026FC  EC54  F01E         	line	214
 17313                           	
 17314                           l5287:
 17315  002700                     ;dispLCD4vias.c: 214:     div=10000;
 17316                           	movlw	high(02710h)
 17317  002700  0E27               	movwf	((c:dispLCD_num@div+1)),c
 17318  002702  6E3F               	movlw	low(02710h)
 17319  002704  0E10               	movwf	((c:dispLCD_num@div)),c
 17320  002706  6E3E               	line	215
 17321                           	
 17322                           l5289:
 17323  002708                     ;dispLCD4vias.c: 215:     size = 5;
 17324                           	movlw	low(05h)
 17325  002708  0E05               	movwf	((c:dispLCD_num@size)),c
 17326  00270A  6E3C               	line	216
 17327                           ;dispLCD4vias.c: 216:     while( div >= 1 )
 17328                           	goto	l5297
 17329  00270C  EFB0  F013         	
 17330                           l528:
 17331  002710                     	line	218
 17332                           	
 17333                           l5291:
 17334  002710                     ;dispLCD4vias.c: 217:     {;dispLCD4vias.c: 218:         if( num/div == 0 )
 17335                           	movff	(c:dispLCD_num@num),(c:___awdiv@dividend)
 17336  002710  C033  F027         	movff	(c:dispLCD_num@num+1),(c:___awdiv@dividend+1)
 17337  002714  C034  F028         	movff	(c:dispLCD_num@div),(c:___awdiv@divisor)
 17338  002718  C03E  F029         	movff	(c:dispLCD_num@div+1),(c:___awdiv@divisor+1)
 17339  00271C  C03F  F02A         	call	___awdiv	;wreg free
 17340  002720  ECD3  F017         	movf	(0+?___awdiv),c,w
 17341  002724  5027               iorwf	(1+?___awdiv),c,w
 17342  002726  1028               	btfss	status,2
 17343  002728  A4D8               	goto	u3701
 17344  00272A  EF99  F013         	goto	u3700
 17345  00272E  EF9B  F013         
 17346                           u3701:
 17347  002732                     	goto	l5303
 17348  002732  EFC7  F013         u3700:
 17349  002736                     	line	219
 17350                           	
 17351                           l5293:
 17352  002736                     ;dispLCD4vias.c: 219:             --size;
 17353                           	decf	((c:dispLCD_num@size)),c
 17354  002736  063C               	goto	l5295
 17355  002738  EFA0  F013         	line	220
 17356                           ;dispLCD4vias.c: 220:         else
 17357                           	
 17358                           l529:
 17359  00273C                     	line	221
 17360                           ;dispLCD4vias.c: 221:             break;
 17361                           	goto	l5303
 17362  00273C  EFC7  F013         	
 17363                           l530:
 17364  002740                     	line	222
 17365                           	
 17366                           l5295:
 17367  002740                     ;dispLCD4vias.c: 222:         div/=10;
 17368                           	movff	(c:dispLCD_num@div),(c:___awdiv@dividend)
 17369  002740  C03E  F027         	movff	(c:dispLCD_num@div+1),(c:___awdiv@dividend+1)
 17370  002744  C03F  F028         	movlw	high(0Ah)
 17371  002748  0E00               	movwf	((c:___awdiv@divisor+1)),c
 17372  00274A  6E2A               	movlw	low(0Ah)
 17373  00274C  0E0A               	movwf	((c:___awdiv@divisor)),c
 17374  00274E  6E29               	call	___awdiv	;wreg free
 17375  002750  ECD3  F017         	movff	0+?___awdiv,(c:dispLCD_num@div)
 17376  002754  C027  F03E         	movff	1+?___awdiv,(c:dispLCD_num@div+1)
 17377  002758  C028  F03F         	goto	l5297
 17378  00275C  EFB0  F013         	line	223
 17379                           ;dispLCD4vias.c: 223:     }
 17380                           	
 17381                           l527:
 17382  002760                     	line	216
 17383                           	
 17384                           l5297:
 17385  002760                     ;dispLCD4vias.c: 216:     while( div >= 1 )
 17386                           	btfsc	((c:dispLCD_num@div+1)),c,7
 17387  002760  BE3F               	goto	u3710
 17388  002762  EFBD  F013         	movf	((c:dispLCD_num@div+1)),c,w
 17389  002766  503F               	bnz	u3711
 17390  002768  E106               	decf	((c:dispLCD_num@div)),c,w
 17391  00276A  043E               	btfsc	status,0
 17392  00276C  B0D8               	goto	u3711
 17393  00276E  EFBB  F013         	goto	u3710
 17394  002772  EFBD  F013         
 17395                           u3711:
 17396  002776                     	goto	l5291
 17397  002776  EF88  F013         u3710:
 17398  00277A                     	goto	l5303
 17399  00277A  EFC7  F013         	
 17400                           l531:
 17401  00277E                     	line	225
 17402                           ;dispLCD4vias.c: 225:     while( tam > (size+sinal) && tam > 1 )
 17403                           	goto	l5303
 17404  00277E  EFC7  F013         	
 17405                           l533:
 17406  002782                     	line	227
 17407                           	
 17408                           l5299:
 17409  002782                     ;dispLCD4vias.c: 226:     {;dispLCD4vias.c: 227:         dispLCD_dataReg(' ');
 17410                           	movlw	(020h)&0ffh
 17411  002782  0E20               	
 17412                           	call	_dispLCD_dataReg
 17413  002784  EC8F  F01F         	line	228
 17414                           	
 17415                           l5301:
 17416  002788                     ;dispLCD4vias.c: 228:         --tam;
 17417                           	decf	((c:dispLCD_num@tam)),c
 17418  002788  0635               	goto	l5303
 17419  00278A  EFC7  F013         	line	229
 17420                           ;dispLCD4vias.c: 229:     }
 17421                           	
 17422                           l532:
 17423  00278E                     	line	225
 17424                           	
 17425                           l5303:
 17426  00278E                     ;dispLCD4vias.c: 225:     while( tam > (size+sinal) && tam > 1 )
 17427                           	movf	((c:dispLCD_num@tam)),c,w
 17428  00278E  5035               	movwf	(??_dispLCD_num+0+0)&0ffh,c
 17429  002790  6E36               	clrf	(??_dispLCD_num+0+0+1)&0ffh,c
 17430  002792  6A37               
 17431                           	movf	((c:dispLCD_num@sinal)),c,w
 17432  002794  503D               	movff	(c:dispLCD_num@size),??_dispLCD_num+2+0
 17433  002796  C03C  F038         	clrf	(??_dispLCD_num+2+0+1)&0ffh,c
 17434  00279A  6A39               	addwf	(??_dispLCD_num+2+0),c
 17435  00279C  2638               	movlw	0
 17436  00279E  0E00               	addwfc	(??_dispLCD_num+2+1),c
 17437  0027A0  2239               		movf	(??_dispLCD_num+0+0),c,w
 17438  0027A2  5036               	subwf	(??_dispLCD_num+2+0),c,w
 17439  0027A4  5C38               	movf	(??_dispLCD_num+2+1),c,w
 17440  0027A6  5039               	xorlw	80h
 17441  0027A8  0A80               	movwf	(??_dispLCD_num+4+0)&0ffh,c
 17442  0027AA  6E3A               	movf	(??_dispLCD_num+0+1),c,w
 17443  0027AC  5037               	xorlw	80h
 17444  0027AE  0A80               	subwfb	(??_dispLCD_num+4+0)&0ffh,c,w
 17445  0027B0  583A               	btfsc	status,0
 17446  0027B2  B0D8               	goto	u3721
 17447  0027B4  EFDE  F013         	goto	u3720
 17448  0027B8  EFE0  F013         
 17449                           u3721:
 17450  0027BC                     	goto	l5307
 17451  0027BC  EFEC  F013         u3720:
 17452  0027C0                     	
 17453                           l5305:
 17454  0027C0                     		movlw	02h-0
 17455  0027C0  0E02               	cpfslt	((c:dispLCD_num@tam)),c
 17456  0027C2  6035               	goto	u3731
 17457  0027C4  EFE6  F013         	goto	u3730
 17458  0027C8  EFE8  F013         
 17459                           u3731:
 17460  0027CC                     	goto	l5299
 17461  0027CC  EFC1  F013         u3730:
 17462  0027D0                     	goto	l5307
 17463  0027D0  EFEC  F013         	
 17464                           l535:
 17465  0027D4                     	goto	l5307
 17466  0027D4  EFEC  F013         	
 17467                           l536:
 17468  0027D8                     	line	231
 17469                           	
 17470                           l5307:
 17471  0027D8                     ;dispLCD4vias.c: 231:     if( sinal )
 17472                           	movf	((c:dispLCD_num@sinal)),c,w
 17473  0027D8  503D               	btfsc	status,2
 17474  0027DA  B4D8               	goto	u3741
 17475  0027DC  EFF2  F013         	goto	u3740
 17476  0027E0  EFF4  F013         u3741:
 17477  0027E4                     	goto	l538
 17478  0027E4  EFF9  F013         u3740:
 17479  0027E8                     	line	232
 17480                           	
 17481                           l5309:
 17482  0027E8                     ;dispLCD4vias.c: 232:         dispLCD_dataReg('-');
 17483                           	movlw	(02Dh)&0ffh
 17484  0027E8  0E2D               	
 17485                           	call	_dispLCD_dataReg
 17486  0027EA  EC8F  F01F         	goto	l538
 17487  0027EE  EFF9  F013         	
 17488                           l537:
 17489  0027F2                     	line	234
 17490                           ;dispLCD4vias.c: 234:     do
 17491                           	
 17492                           l538:
 17493  0027F2                     	line	236
 17494                           ;dispLCD4vias.c: 235:     {;dispLCD4vias.c: 236:         dispLCD_dataReg( (num / div) + 
                                 '0' );
 17495                           	movff	(c:dispLCD_num@num),(c:___awdiv@dividend)
 17496  0027F2  C033  F027         	movff	(c:dispLCD_num@num+1),(c:___awdiv@dividend+1)
 17497  0027F6  C034  F028         	movff	(c:dispLCD_num@div),(c:___awdiv@divisor)
 17498  0027FA  C03E  F029         	movff	(c:dispLCD_num@div+1),(c:___awdiv@divisor+1)
 17499  0027FE  C03F  F02A         	call	___awdiv	;wreg free
 17500  002802  ECD3  F017         	movf	(0+?___awdiv),c,w
 17501  002806  5027               	addlw	low(030h)
 17502  002808  0F30               	
 17503                           	call	_dispLCD_dataReg
 17504  00280A  EC8F  F01F         	line	237
 17505                           ;dispLCD4vias.c: 237:         num = num % div;
 17506                           	movff	(c:dispLCD_num@num),(c:___awmod@dividend)
 17507  00280E  C033  F027         	movff	(c:dispLCD_num@num+1),(c:___awmod@dividend+1)
 17508  002812  C034  F028         	movff	(c:dispLCD_num@div),(c:___awmod@divisor)
 17509  002816  C03E  F029         	movff	(c:dispLCD_num@div+1),(c:___awmod@divisor+1)
 17510  00281A  C03F  F02A         	call	___awmod	;wreg free
 17511  00281E  EC2E  F019         	movff	0+?___awmod,(c:dispLCD_num@num)
 17512  002822  C027  F033         	movff	1+?___awmod,(c:dispLCD_num@num+1)
 17513  002826  C028  F034         	line	238
 17514                           ;dispLCD4vias.c: 238:         div/=10;
 17515                           	movff	(c:dispLCD_num@div),(c:___awdiv@dividend)
 17516  00282A  C03E  F027         	movff	(c:dispLCD_num@div+1),(c:___awdiv@dividend+1)
 17517  00282E  C03F  F028         	movlw	high(0Ah)
 17518  002832  0E00               	movwf	((c:___awdiv@divisor+1)),c
 17519  002834  6E2A               	movlw	low(0Ah)
 17520  002836  0E0A               	movwf	((c:___awdiv@divisor)),c
 17521  002838  6E29               	call	___awdiv	;wreg free
 17522  00283A  ECD3  F017         	movff	0+?___awdiv,(c:dispLCD_num@div)
 17523  00283E  C027  F03E         	movff	1+?___awdiv,(c:dispLCD_num@div+1)
 17524  002842  C028  F03F         	line	239
 17525                           	
 17526                           l5311:
 17527  002846                     ;dispLCD4vias.c: 239:     }
 17528                           	btfsc	((c:dispLCD_num@div+1)),c,7
 17529  002846  BE3F               	goto	u3750
 17530  002848  EF30  F014         	movf	((c:dispLCD_num@div+1)),c,w
 17531  00284C  503F               	bnz	u3751
 17532  00284E  E106               	decf	((c:dispLCD_num@div)),c,w
 17533  002850  043E               	btfsc	status,0
 17534  002852  B0D8               	goto	u3751
 17535  002854  EF2E  F014         	goto	u3750
 17536  002858  EF30  F014         
 17537                           u3751:
 17538  00285C                     	goto	l538
 17539  00285C  EFF9  F013         u3750:
 17540  002860                     	goto	l540
 17541  002860  EF32  F014         	
 17542                           l539:
 17543  002864                     	line	241
 17544                           	
 17545                           l540:
 17546  002864                     	return	;funcret
 17547  002864  0012               	opt stack 0
 17548                           GLOBAL	__end_of_dispLCD_num
 17549                           	__end_of_dispLCD_num:
 17550  002866                     	signat	_dispLCD_num,16505
 17551                           	global	_manipula_atuadores_init
 17552                           
 17553 ;; *************** function _manipula_atuadores_init *****************
 17554 ;; Defined at:
 17555 ;;		line 137 in file "fifo.c"
 17556 ;; Parameters:    Size  Location     Type
 17557 ;;  aux             1    wreg     unsigned char 
 17558 ;; Auto vars:     Size  Location     Type
 17559 ;;  aux             1    4[COMRAM] unsigned char 
 17560 ;;  mask            1    5[COMRAM] unsigned char 
 17561 ;;  atuador         1    3[COMRAM] unsigned char 
 17562 ;; Return value:  Size  Location     Type
 17563 ;;                  1    wreg      void 
 17564 ;; Registers used:
 17565 ;;		wreg, status,2, status,0, cstack
 17566 ;; Tracked objects:
 17567 ;;		On entry : 0/0
 17568 ;;		On exit  : 0/0
 17569 ;;		Unchanged: 0/0
 17570 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17571 ;;      Params:         0       0       0       0       0       0       0       0       0       0
 17572 ;;      Locals:         3       0       0       0       0       0       0       0       0       0
 17573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0
 17574 ;;      Totals:         3       0       0       0       0       0       0       0       0       0
 17575 ;;Total ram usage:        3 bytes
 17576 ;; Hardware stack levels used:    1
 17577 ;; Hardware stack levels required when called:    3
 17578 ;; This function calls:
 17579 ;;		_alt_atuador
 17580 ;; This function is called by:
 17581 ;;		_main
 17582 ;; This function uses a non-reentrant model
 17583 ;;
 17584                           psect	text24,class=CODE,space=0,reloc=2,group=0
 17585                           	file	"fifo.c"
 17586                           	line	137
 17587                           global __ptext24
 17588                           __ptext24:
 17589  003AA4                     psect	text24
 17590                           	file	"fifo.c"
 17591                           	line	137
 17592                           	global	__size_of_manipula_atuadores_init
 17593                           	__size_of_manipula_atuadores_init	equ	__end_of_manipula_atuadores_init-_manipula_atuado
                                 res_init
 17594  0000                     	
 17595                           _manipula_atuadores_init:
 17596  003AA4                     ;incstack = 0
 17597                           	opt	stack 27
 17598                           ;manipula_atuadores_init@aux stored from wreg
 17599                           	movwf	((c:manipula_atuadores_init@aux)),c
 17600  003AA4  6E2B               	line	139
 17601                           	
 17602                           l5653:
 17603  003AA6                     ;fifo.c: 137: void manipula_atuadores_init(char aux);fifo.c: 138: {;fifo.c: 139:     cha
                                 r mask = 0x08;
 17604                           	movlw	low(08h)
 17605  003AA6  0E08               	movwf	((c:manipula_atuadores_init@mask)),c
 17606  003AA8  6E2C               	line	140
 17607                           ;fifo.c: 140:     char atuador = 0x41;
 17608                           	movlw	low(041h)
 17609  003AAA  0E41               	movwf	((c:manipula_atuadores_init@atuador)),c
 17610  003AAC  6E2A               	line	142
 17611                           	
 17612                           l5655:
 17613  003AAE                     ;fifo.c: 142:     if(aux ==0xFF)
 17614                           		incf	((c:manipula_atuadores_init@aux)),c,w
 17615  003AAE  282B               	btfss	status,2
 17616  003AB0  A4D8               	goto	u4111
 17617  003AB2  EF5D  F01D         	goto	u4110
 17618  003AB6  EF5F  F01D         
 17619                           u4111:
 17620  003ABA                     	goto	l5667
 17621  003ABA  EF79  F01D         u4110:
 17622  003ABE                     	goto	l711
 17623  003ABE  EF85  F01D         	line	145
 17624                           	
 17625                           l5657:
 17626  003AC2                     ;fifo.c: 143:     {;fifo.c: 145:     }
 17627                           	goto	l711
 17628  003AC2  EF85  F01D         	line	146
 17629                           ;fifo.c: 146:     else
 17630                           	
 17631                           l705:
 17632  003AC6                     	line	147
 17633                           ;fifo.c: 147:         while(mask)
 17634                           	goto	l5667
 17635  003AC6  EF79  F01D         	
 17636                           l708:
 17637  003ACA                     	line	150
 17638                           	
 17639                           l5659:
 17640  003ACA                     ;fifo.c: 148:         {;fifo.c: 150:             if(aux & mask)
 17641                           	movf	((c:manipula_atuadores_init@aux)),c,w
 17642  003ACA  502B               	andwf	((c:manipula_atuadores_init@mask)),c,w
 17643  003ACC  142C               	iorlw	0
 17644  003ACE  0900               	btfsc	status,2
 17645  003AD0  B4D8               	goto	u4121
 17646  003AD2  EF6D  F01D         	goto	u4120
 17647  003AD6  EF6F  F01D         u4121:
 17648  003ADA                     	goto	l5663
 17649  003ADA  EF74  F01D         u4120:
 17650  003ADE                     	line	152
 17651                           	
 17652                           l5661:
 17653  003ADE                     ;fifo.c: 151:             {;fifo.c: 152:                 alt_atuador(atuador);
 17654                           	movf	((c:manipula_atuadores_init@atuador)),c,w
 17655  003ADE  502A               	
 17656                           	call	_alt_atuador
 17657  003AE0  EC0D  F01B         	goto	l5663
 17658  003AE4  EF74  F01D         	line	153
 17659                           ;fifo.c: 153:             }
 17660                           	
 17661                           l709:
 17662  003AE8                     	line	154
 17663                           	
 17664                           l5663:
 17665  003AE8                     ;fifo.c: 154:             atuador++;
 17666                           	incf	((c:manipula_atuadores_init@atuador)),c
 17667  003AE8  2A2A               	line	155
 17668                           	
 17669                           l5665:
 17670  003AEA                     ;fifo.c: 155:             mask >>= 1;
 17671                           	bcf status,0
 17672  003AEA  90D8               	rrcf	((c:manipula_atuadores_init@mask)),c
 17673  003AEC  322C               
 17674                           	goto	l5667
 17675  003AEE  EF79  F01D         	line	156
 17676                           ;fifo.c: 156:         }
 17677                           	
 17678                           l707:
 17679  003AF2                     	line	147
 17680                           	
 17681                           l5667:
 17682  003AF2                     ;fifo.c: 147:         while(mask)
 17683                           	movf	((c:manipula_atuadores_init@mask)),c,w
 17684  003AF2  502C               	btfss	status,2
 17685  003AF4  A4D8               	goto	u4131
 17686  003AF6  EF7F  F01D         	goto	u4130
 17687  003AFA  EF81  F01D         u4131:
 17688  003AFE                     	goto	l5659
 17689  003AFE  EF65  F01D         u4130:
 17690  003B02                     	goto	l711
 17691  003B02  EF85  F01D         	
 17692                           l710:
 17693  003B06                     	goto	l711
 17694  003B06  EF85  F01D         	line	156
 17695                           ;fifo.c: 156:         }
 17696                           	
 17697                           l706:
 17698  003B0A                     	line	157
 17699                           	
 17700                           l711:
 17701  003B0A                     	return	;funcret
 17702  003B0A  0012               	opt stack 0
 17703                           GLOBAL	__end_of_manipula_atuadores_init
 17704                           	__end_of_manipula_atuadores_init:
 17705  003B0C                     	signat	_manipula_atuadores_init,4217
 17706                           	global	_ler_sensor
 17707                           
 17708 ;; *************** function _ler_sensor *****************
 17709 ;; Defined at:
 17710 ;;		line 68 in file "atuadores.c"
 17711 ;; Parameters:    Size  Location     Type
 17712 ;;  passo           1    wreg     unsigned char 
 17713 ;;  ptr             2    0[COMRAM] PTR unsigned char 
 17714 ;;		 -> main@vetorIn(1), 
 17715 ;; Auto vars:     Size  Location     Type
 17716 ;;  passo           1    4[COMRAM] unsigned char 
 17717 ;; Return value:  Size  Location     Type
 17718 ;;                  1    wreg      unsigned char 
 17719 ;; Registers used:
 17720 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17721 ;; Tracked objects:
 17722 ;;		On entry : 0/0
 17723 ;;		On exit  : 0/0
 17724 ;;		Unchanged: 0/0
 17725 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17726 ;;      Params:         2       0       0       0       0       0       0       0       0       0
 17727 ;;      Locals:         1       0       0       0       0       0       0       0       0       0
 17728 ;;      Temps:          2       0       0       0       0       0       0       0       0       0
 17729 ;;      Totals:         5       0       0       0       0       0       0       0       0       0
 17730 ;;Total ram usage:        5 bytes
 17731 ;; Hardware stack levels used:    1
 17732 ;; Hardware stack levels required when called:    2
 17733 ;; This function calls:
 17734 ;;		Nothing
 17735 ;; This function is called by:
 17736 ;;		_main
 17737 ;; This function uses a non-reentrant model
 17738 ;;
 17739                           psect	text25,class=CODE,space=0,reloc=2,group=0
 17740                           	file	"atuadores.c"
 17741                           	line	68
 17742                           global __ptext25
 17743                           __ptext25:
 17744  002B22                     psect	text25
 17745                           	file	"atuadores.c"
 17746                           	line	68
 17747                           	global	__size_of_ler_sensor
 17748                           	__size_of_ler_sensor	equ	__end_of_ler_sensor-_ler_sensor
 17749  0000                     	
 17750                           _ler_sensor:
 17751  002B22                     ;incstack = 0
 17752                           	opt	stack 28
 17753                           ;ler_sensor@passo stored from wreg
 17754                           	movwf	((c:ler_sensor@passo)),c
 17755  002B22  6E2B               	line	70
 17756                           	
 17757                           l6033:
 17758  002B24                     ;atuadores.c: 68: char ler_sensor(char passo, char* ptr);atuadores.c: 69: {;atuadores.c:
                                  70:     switch (passo)
 17759                           	goto	l6091
 17760  002B24  EFFD  F015         	line	72
 17761                           ;atuadores.c: 71:     {;atuadores.c: 72:         case 'A': return(*ptr & 0x02); break;
 17762                           	
 17763                           l463:
 17764  002B28                     	
 17765                           l6035:
 17766  002B28                     	movff	(c:ler_sensor@ptr),fsr2l
 17767  002B28  C027  FFD9         	movff	(c:ler_sensor@ptr+1),fsr2h
 17768  002B2C  C028  FFDA         	movf	indf2,w
 17769  002B30  50DF               	andlw	low(02h)
 17770  002B32  0B02               	goto	l464
 17771  002B34  EF2A  F016         	
 17772                           l6037:
 17773  002B38                     	goto	l464
 17774  002B38  EF2A  F016         	
 17775                           l6039:
 17776  002B3C                     	goto	l464
 17777  002B3C  EF2A  F016         	line	73
 17778                           ;atuadores.c: 73:         case 'a': return(*ptr & 0x01); break;
 17779                           	
 17780                           l466:
 17781  002B40                     	
 17782                           l6041:
 17783  002B40                     	movff	(c:ler_sensor@ptr),fsr2l
 17784  002B40  C027  FFD9         	movff	(c:ler_sensor@ptr+1),fsr2h
 17785  002B44  C028  FFDA         	movf	indf2,w
 17786  002B48  50DF               	andlw	low(01h)
 17787  002B4A  0B01               	goto	l464
 17788  002B4C  EF2A  F016         	
 17789                           l6043:
 17790  002B50                     	goto	l464
 17791  002B50  EF2A  F016         	
 17792                           l6045:
 17793  002B54                     	goto	l464
 17794  002B54  EF2A  F016         	line	74
 17795                           ;atuadores.c: 74:         case 'B': return(*ptr & 0x08); break;
 17796                           	
 17797                           l467:
 17798  002B58                     	
 17799                           l6047:
 17800  002B58                     	movff	(c:ler_sensor@ptr),fsr2l
 17801  002B58  C027  FFD9         	movff	(c:ler_sensor@ptr+1),fsr2h
 17802  002B5C  C028  FFDA         	movf	indf2,w
 17803  002B60  50DF               	andlw	low(08h)
 17804  002B62  0B08               	goto	l464
 17805  002B64  EF2A  F016         	
 17806                           l6049:
 17807  002B68                     	goto	l464
 17808  002B68  EF2A  F016         	
 17809                           l6051:
 17810  002B6C                     	goto	l464
 17811  002B6C  EF2A  F016         	line	75
 17812                           ;atuadores.c: 75:         case 'b': return(*ptr & 0x04); break;
 17813                           	
 17814                           l468:
 17815  002B70                     	
 17816                           l6053:
 17817  002B70                     	movff	(c:ler_sensor@ptr),fsr2l
 17818  002B70  C027  FFD9         	movff	(c:ler_sensor@ptr+1),fsr2h
 17819  002B74  C028  FFDA         	movf	indf2,w
 17820  002B78  50DF               	andlw	low(04h)
 17821  002B7A  0B04               	goto	l464
 17822  002B7C  EF2A  F016         	
 17823                           l6055:
 17824  002B80                     	goto	l464
 17825  002B80  EF2A  F016         	
 17826                           l6057:
 17827  002B84                     	goto	l464
 17828  002B84  EF2A  F016         	line	76
 17829                           ;atuadores.c: 76:         case 'C': return(*ptr & 0x20); break;
 17830                           	
 17831                           l469:
 17832  002B88                     	
 17833                           l6059:
 17834  002B88                     	movff	(c:ler_sensor@ptr),fsr2l
 17835  002B88  C027  FFD9         	movff	(c:ler_sensor@ptr+1),fsr2h
 17836  002B8C  C028  FFDA         	movf	indf2,w
 17837  002B90  50DF               	andlw	low(020h)
 17838  002B92  0B20               	goto	l464
 17839  002B94  EF2A  F016         	
 17840                           l6061:
 17841  002B98                     	goto	l464
 17842  002B98  EF2A  F016         	
 17843                           l6063:
 17844  002B9C                     	goto	l464
 17845  002B9C  EF2A  F016         	line	77
 17846                           ;atuadores.c: 77:         case 'c': return(*ptr & 0x10); break;
 17847                           	
 17848                           l470:
 17849  002BA0                     	
 17850                           l6065:
 17851  002BA0                     	movff	(c:ler_sensor@ptr),fsr2l
 17852  002BA0  C027  FFD9         	movff	(c:ler_sensor@ptr+1),fsr2h
 17853  002BA4  C028  FFDA         	movf	indf2,w
 17854  002BA8  50DF               	andlw	low(010h)
 17855  002BAA  0B10               	goto	l464
 17856  002BAC  EF2A  F016         	
 17857                           l6067:
 17858  002BB0                     	goto	l464
 17859  002BB0  EF2A  F016         	
 17860                           l6069:
 17861  002BB4                     	goto	l464
 17862  002BB4  EF2A  F016         	line	78
 17863                           ;atuadores.c: 78:         case 'D': return(*ptr & 0x80); break;
 17864                           	
 17865                           l471:
 17866  002BB8                     	
 17867                           l6071:
 17868  002BB8                     	movff	(c:ler_sensor@ptr),fsr2l
 17869  002BB8  C027  FFD9         	movff	(c:ler_sensor@ptr+1),fsr2h
 17870  002BBC  C028  FFDA         	movf	indf2,w
 17871  002BC0  50DF               	andlw	low(080h)
 17872  002BC2  0B80               	goto	l464
 17873  002BC4  EF2A  F016         	
 17874                           l6073:
 17875  002BC8                     	goto	l464
 17876  002BC8  EF2A  F016         	
 17877                           l6075:
 17878  002BCC                     	goto	l464
 17879  002BCC  EF2A  F016         	line	79
 17880                           ;atuadores.c: 79:         case 'd': return(*ptr & 0x40); break;
 17881                           	
 17882                           l472:
 17883  002BD0                     	
 17884                           l6077:
 17885  002BD0                     	movff	(c:ler_sensor@ptr),fsr2l
 17886  002BD0  C027  FFD9         	movff	(c:ler_sensor@ptr+1),fsr2h
 17887  002BD4  C028  FFDA         	movf	indf2,w
 17888  002BD8  50DF               	andlw	low(040h)
 17889  002BDA  0B40               	goto	l464
 17890  002BDC  EF2A  F016         	
 17891                           l6079:
 17892  002BE0                     	goto	l464
 17893  002BE0  EF2A  F016         	
 17894                           l6081:
 17895  002BE4                     	goto	l464
 17896  002BE4  EF2A  F016         	line	80
 17897                           ;atuadores.c: 80:         default: return( 0 ); break;
 17898                           	
 17899                           l473:
 17900  002BE8                     	
 17901                           l6083:
 17902  002BE8                     	movlw	(0)&0ffh
 17903  002BE8  0E00               	goto	l464
 17904  002BEA  EF2A  F016         	
 17905                           l6085:
 17906  002BEE                     	goto	l464
 17907  002BEE  EF2A  F016         	
 17908                           l6087:
 17909  002BF2                     	goto	l464
 17910  002BF2  EF2A  F016         	line	81
 17911                           	
 17912                           l6089:
 17913  002BF6                     ;atuadores.c: 81:     }
 17914                           	goto	l464
 17915  002BF6  EF2A  F016         	
 17916                           l462:
 17917  002BFA                     	
 17918                           l6091:
 17919  002BFA                     	movf	((c:ler_sensor@passo)),c,w
 17920  002BFA  502B               	movwf	(??_ler_sensor+0+0)&0ffh,c
 17921  002BFC  6E29               	clrf	(??_ler_sensor+0+0+1)&0ffh,c
 17922  002BFE  6A2A               
 17923                           	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
 17924                           ; Switch size 1, requested type "space"
 17925                           ; Number of cases is 1, Range of values is 0 to 0
 17926                           ; switch strategies available:
 17927                           ; Name         Instructions Cycles
 17928                           ; simple_byte            4     3 (average)
 17929                           ;	Chosen strategy is simple_byte
 17930                           
 17931                           	movf ??_ler_sensor+0+1,c,w
 17932  002C00  502A               	xorlw	0^0	; case 0
 17933  002C02  0A00               	skipnz
 17934  002C04  B4D8               	goto	l7971
 17935  002C06  EF07  F016         	goto	l6083
 17936  002C0A  EFF4  F015         	
 17937                           l7971:
 17938  002C0E                     ; Switch size 1, requested type "space"
 17939                           ; Number of cases is 8, Range of values is 65 to 100
 17940                           ; switch strategies available:
 17941                           ; Name         Instructions Cycles
 17942                           ; simple_byte           25    13 (average)
 17943                           ;	Chosen strategy is simple_byte
 17944                           
 17945                           	movf ??_ler_sensor+0+0,c,w
 17946  002C0E  5029               	xorlw	65^0	; case 65
 17947  002C10  0A41               	skipnz
 17948  002C12  B4D8               	goto	l6035
 17949  002C14  EF94  F015         	xorlw	66^65	; case 66
 17950  002C18  0A03               	skipnz
 17951  002C1A  B4D8               	goto	l6047
 17952  002C1C  EFAC  F015         	xorlw	67^66	; case 67
 17953  002C20  0A01               	skipnz
 17954  002C22  B4D8               	goto	l6059
 17955  002C24  EFC4  F015         	xorlw	68^67	; case 68
 17956  002C28  0A07               	skipnz
 17957  002C2A  B4D8               	goto	l6071
 17958  002C2C  EFDC  F015         	xorlw	97^68	; case 97
 17959  002C30  0A25               	skipnz
 17960  002C32  B4D8               	goto	l6041
 17961  002C34  EFA0  F015         	xorlw	98^97	; case 98
 17962  002C38  0A03               	skipnz
 17963  002C3A  B4D8               	goto	l6053
 17964  002C3C  EFB8  F015         	xorlw	99^98	; case 99
 17965  002C40  0A01               	skipnz
 17966  002C42  B4D8               	goto	l6065
 17967  002C44  EFD0  F015         	xorlw	100^99	; case 100
 17968  002C48  0A07               	skipnz
 17969  002C4A  B4D8               	goto	l6077
 17970  002C4C  EFE8  F015         	goto	l6083
 17971  002C50  EFF4  F015         
 17972                           	
 17973                           l465:
 17974  002C54                     	line	83
 17975                           	
 17976                           l464:
 17977  002C54                     	return	;funcret
 17978  002C54  0012               	opt stack 0
 17979                           GLOBAL	__end_of_ler_sensor
 17980                           	__end_of_ler_sensor:
 17981  002C56                     	signat	_ler_sensor,8313
 17982                           	global	_init_atuadores
 17983                           
 17984 ;; *************** function _init_atuadores *****************
 17985 ;; Defined at:
 17986 ;;		line 103 in file "fifo.c"
 17987 ;; Parameters:    Size  Location     Type
 17988 ;;		None
 17989 ;; Auto vars:     Size  Location     Type
 17990 ;;		None
 17991 ;; Return value:  Size  Location     Type
 17992 ;;                  1    wreg      void 
 17993 ;; Registers used:
 17994 ;;		None
 17995 ;; Tracked objects:
 17996 ;;		On entry : 0/0
 17997 ;;		On exit  : 0/0
 17998 ;;		Unchanged: 0/0
 17999 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18000 ;;      Params:         0       0       0       0       0       0       0       0       0       0
 18001 ;;      Locals:         0       0       0       0       0       0       0       0       0       0
 18002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0
 18003 ;;      Totals:         0       0       0       0       0       0       0       0       0       0
 18004 ;;Total ram usage:        0 bytes
 18005 ;; Hardware stack levels used:    1
 18006 ;; Hardware stack levels required when called:    2
 18007 ;; This function calls:
 18008 ;;		Nothing
 18009 ;; This function is called by:
 18010 ;;		_main
 18011 ;; This function uses a non-reentrant model
 18012 ;;
 18013                           psect	text26,class=CODE,space=0,reloc=2,group=0
 18014                           	file	"fifo.c"
 18015                           	line	103
 18016                           global __ptext26
 18017                           __ptext26:
 18018  004546                     psect	text26
 18019                           	file	"fifo.c"
 18020                           	line	103
 18021                           	global	__size_of_init_atuadores
 18022                           	__size_of_init_atuadores	equ	__end_of_init_atuadores-_init_atuadores
 18023  0000                     	
 18024                           _init_atuadores:
 18025  004546                     ;incstack = 0
 18026                           	opt	stack 28
 18027                           	line	105
 18028                           	
 18029                           l5633:
 18030  004546                     ;fifo.c: 105:     atuador.A = 0;
 18031                           	bcf	((c:_atuador)),c,0
 18032  004546  9013               	line	106
 18033                           ;fifo.c: 106:     atuador.B = 0;
 18034                           	bcf	((c:_atuador)),c,1
 18035  004548  9213               	line	107
 18036                           ;fifo.c: 107:     atuador.C = 0;
 18037                           	bcf	((c:_atuador)),c,2
 18038  00454A  9413               	line	108
 18039                           ;fifo.c: 108:     atuador.D = 0;
 18040                           	bcf	((c:_atuador)),c,3
 18041  00454C  9613               	line	109
 18042                           	
 18043                           l693:
 18044  00454E                     	return	;funcret
 18045  00454E  0012               	opt stack 0
 18046                           GLOBAL	__end_of_init_atuadores
 18047                           	__end_of_init_atuadores:
 18048  004550                     	signat	_init_atuadores,89
 18049                           	global	_initSerialIO
 18050                           
 18051 ;; *************** function _initSerialIO *****************
 18052 ;; Defined at:
 18053 ;;		line 89 in file "serialIO.c"
 18054 ;; Parameters:    Size  Location     Type
 18055 ;;  ptrIn           2    0[COMRAM] PTR unsigned char 
 18056 ;;		 -> main@vetorIn(1), 
 18057 ;;  ptrOut          2    2[COMRAM] PTR unsigned char 
 18058 ;;		 -> main@vetorOut(1), 
 18059 ;;  length          1    4[COMRAM] unsigned char 
 18060 ;; Auto vars:     Size  Location     Type
 18061 ;;		None
 18062 ;; Return value:  Size  Location     Type
 18063 ;;                  1    wreg      void 
 18064 ;; Registers used:
 18065 ;;		wreg, status,2, status,0
 18066 ;; Tracked objects:
 18067 ;;		On entry : 0/0
 18068 ;;		On exit  : 0/0
 18069 ;;		Unchanged: 0/0
 18070 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18071 ;;      Params:         5       0       0       0       0       0       0       0       0       0
 18072 ;;      Locals:         0       0       0       0       0       0       0       0       0       0
 18073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0
 18074 ;;      Totals:         5       0       0       0       0       0       0       0       0       0
 18075 ;;Total ram usage:        5 bytes
 18076 ;; Hardware stack levels used:    1
 18077 ;; Hardware stack levels required when called:    2
 18078 ;; This function calls:
 18079 ;;		Nothing
 18080 ;; This function is called by:
 18081 ;;		_main
 18082 ;; This function uses a non-reentrant model
 18083 ;;
 18084                           psect	text27,class=CODE,space=0,reloc=2,group=0
 18085                           	file	"serialIO.c"
 18086                           	line	89
 18087                           global __ptext27
 18088                           __ptext27:
 18089  004262                     psect	text27
 18090                           	file	"serialIO.c"
 18091                           	line	89
 18092                           	global	__size_of_initSerialIO
 18093                           	__size_of_initSerialIO	equ	__end_of_initSerialIO-_initSerialIO
 18094  0000                     	
 18095                           _initSerialIO:
 18096  004262                     ;incstack = 0
 18097                           	opt	stack 28
 18098                           	line	91
 18099                           	
 18100                           l5601:
 18101  004262                     ;serialIO.c: 89: void initSerialIO( char * ptrIn, char * ptrOut, unsigned char length );
                                 serialIO.c: 90: {;serialIO.c: 91:     ADCON1 = 0xFF;
 18102                           	setf	((c:4033)),c	;volatile
 18103  004262  68C1               	line	93
 18104                           	
 18105                           l5603:
 18106  004264                     ;serialIO.c: 93:     ptrSerialIn = ptrIn;
 18107                           		movff	(c:initSerialIO@ptrIn),(c:_ptrSerialIn)
 18108  004264  C027  F00B         	movff	(c:initSerialIO@ptrIn+1),(c:_ptrSerialIn+1)
 18109  004268  C028  F00C         
 18110                           	line	94
 18111                           ;serialIO.c: 94:     ptrSerialOut = ptrOut;
 18112                           		movff	(c:initSerialIO@ptrOut),(c:_ptrSerialOut)
 18113  00426C  C029  F009         	movff	(c:initSerialIO@ptrOut+1),(c:_ptrSerialOut+1)
 18114  004270  C02A  F00A         
 18115                           	line	95
 18116                           	
 18117                           l5605:
 18118  004274                     ;serialIO.c: 95:     lenSerialIO = length;
 18119                           	movff	(c:initSerialIO@length),(c:_lenSerialIO)
 18120  004274  C02B  F012         	line	97
 18121                           	
 18122                           l5607:
 18123  004278                     ;serialIO.c: 97:     PORTAbits.RA3 = 0;
 18124                           	bcf	((c:3968)),c,3	;volatile
 18125  004278  9680               	line	99
 18126                           	
 18127                           l5609:
 18128  00427A                     ;serialIO.c: 99:     TRISAbits.TRISA3 = 0;
 18129                           	bcf	((c:3986)),c,3	;volatile
 18130  00427A  9692               	line	102
 18131                           	
 18132                           l5611:
 18133  00427C                     ;serialIO.c: 102:     PORTAbits.RA2 = 0;
 18134                           	bcf	((c:3968)),c,2	;volatile
 18135  00427C  9480               	line	104
 18136                           	
 18137                           l5613:
 18138  00427E                     ;serialIO.c: 104:     TRISAbits.TRISA2 = 0;
 18139                           	bcf	((c:3986)),c,2	;volatile
 18140  00427E  9492               	line	107
 18141                           	
 18142                           l5615:
 18143  004280                     ;serialIO.c: 107:     PORTAbits.RA0 = 0;
 18144                           	bcf	((c:3968)),c,0	;volatile
 18145  004280  9080               	line	109
 18146                           	
 18147                           l5617:
 18148  004282                     ;serialIO.c: 109:     TRISAbits.TRISA0 = 0;
 18149                           	bcf	((c:3986)),c,0	;volatile
 18150  004282  9092               	line	112
 18151                           	
 18152                           l5619:
 18153  004284                     ;serialIO.c: 112:     PORTAbits.RA1 = 0;
 18154                           	bcf	((c:3968)),c,1	;volatile
 18155  004284  9280               	line	114
 18156                           	
 18157                           l5621:
 18158  004286                     ;serialIO.c: 114:     TRISAbits.TRISA1 = 1;
 18159                           	bsf	((c:3986)),c,1	;volatile
 18160  004286  8292               	line	117
 18161                           	
 18162                           l5623:
 18163  004288                     ;serialIO.c: 117:     SERIALIO.CLK = 0;
 18164                           	bcf	((c:3968)),c,2	;volatile
 18165  004288  9480               	line	118
 18166                           	
 18167                           l5625:
 18168  00428A                     ;serialIO.c: 118:     SERIALIO.OUT = 0;
 18169                           	bcf	((c:3968)),c,0	;volatile
 18170  00428A  9080               	line	119
 18171                           	
 18172                           l5627:
 18173  00428C                     ;serialIO.c: 119:     SERIALIO.SHLD = 1;
 18174                           	bsf	((c:3968)),c,3	;volatile
 18175  00428C  8680               	line	120
 18176                           	
 18177                           l940:
 18178  00428E                     	return	;funcret
 18179  00428E  0012               	opt stack 0
 18180                           GLOBAL	__end_of_initSerialIO
 18181                           	__end_of_initSerialIO:
 18182  004290                     	signat	_initSerialIO,12409
 18183                           	global	_getContCiclos
 18184                           
 18185 ;; *************** function _getContCiclos *****************
 18186 ;; Defined at:
 18187 ;;		line 49 in file "fifo.c"
 18188 ;; Parameters:    Size  Location     Type
 18189 ;;		None
 18190 ;; Auto vars:     Size  Location     Type
 18191 ;;		None
 18192 ;; Return value:  Size  Location     Type
 18193 ;;                  2    0[COMRAM] unsigned int 
 18194 ;; Registers used:
 18195 ;;		None
 18196 ;; Tracked objects:
 18197 ;;		On entry : 0/0
 18198 ;;		On exit  : 0/0
 18199 ;;		Unchanged: 0/0
 18200 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18201 ;;      Params:         2       0       0       0       0       0       0       0       0       0
 18202 ;;      Locals:         0       0       0       0       0       0       0       0       0       0
 18203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0
 18204 ;;      Totals:         2       0       0       0       0       0       0       0       0       0
 18205 ;;Total ram usage:        2 bytes
 18206 ;; Hardware stack levels used:    1
 18207 ;; Hardware stack levels required when called:    2
 18208 ;; This function calls:
 18209 ;;		Nothing
 18210 ;; This function is called by:
 18211 ;;		_main
 18212 ;; This function uses a non-reentrant model
 18213 ;;
 18214                           psect	text28,class=CODE,space=0,reloc=2,group=0
 18215                           	file	"fifo.c"
 18216                           	line	49
 18217                           global __ptext28
 18218                           __ptext28:
 18219  004550                     psect	text28
 18220                           	file	"fifo.c"
 18221                           	line	49
 18222                           	global	__size_of_getContCiclos
 18223                           	__size_of_getContCiclos	equ	__end_of_getContCiclos-_getContCiclos
 18224  0000                     	
 18225                           _getContCiclos:
 18226  004550                     ;incstack = 0
 18227                           	opt	stack 28
 18228                           	line	51
 18229                           	
 18230                           l5973:
 18231  004550                     ;fifo.c: 51:     return(cont_ciclos);
 18232                           	movff	(c:_cont_ciclos),(c:?_getContCiclos)
 18233  004550  C00D  F027         	movff	(c:_cont_ciclos+1),(c:?_getContCiclos+1)
 18234  004554  C00E  F028         	line	52
 18235                           	
 18236                           l663:
 18237  004558                     	return	;funcret
 18238  004558  0012               	opt stack 0
 18239                           GLOBAL	__end_of_getContCiclos
 18240                           	__end_of_getContCiclos:
 18241  00455A                     	signat	_getContCiclos,90
 18242                           	global	_getCiclos
 18243                           
 18244 ;; *************** function _getCiclos *****************
 18245 ;; Defined at:
 18246 ;;		line 41 in file "fifo.c"
 18247 ;; Parameters:    Size  Location     Type
 18248 ;;		None
 18249 ;; Auto vars:     Size  Location     Type
 18250 ;;  aux             2    2[COMRAM] int 
 18251 ;; Return value:  Size  Location     Type
 18252 ;;                  2    0[COMRAM] unsigned int 
 18253 ;; Registers used:
 18254 ;;		wreg, status,2, status,0
 18255 ;; Tracked objects:
 18256 ;;		On entry : 0/0
 18257 ;;		On exit  : 0/0
 18258 ;;		Unchanged: 0/0
 18259 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18260 ;;      Params:         2       0       0       0       0       0       0       0       0       0
 18261 ;;      Locals:         2       0       0       0       0       0       0       0       0       0
 18262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0
 18263 ;;      Totals:         4       0       0       0       0       0       0       0       0       0
 18264 ;;Total ram usage:        4 bytes
 18265 ;; Hardware stack levels used:    1
 18266 ;; Hardware stack levels required when called:    2
 18267 ;; This function calls:
 18268 ;;		Nothing
 18269 ;; This function is called by:
 18270 ;;		_main
 18271 ;; This function uses a non-reentrant model
 18272 ;;
 18273                           psect	text29,class=CODE,space=0,reloc=2,group=0
 18274                           	line	41
 18275                           global __ptext29
 18276                           __ptext29:
 18277  00435A                     psect	text29
 18278                           	file	"fifo.c"
 18279                           	line	41
 18280                           	global	__size_of_getCiclos
 18281                           	__size_of_getCiclos	equ	__end_of_getCiclos-_getCiclos
 18282  0000                     	
 18283                           _getCiclos:
 18284  00435A                     ;incstack = 0
 18285                           	opt	stack 28
 18286                           	line	43
 18287                           	
 18288                           l6103:
 18289  00435A                     ;fifo.c: 43:     int aux = fila[1];
 18290                           	movff	0+((c:_fila)+01h),(c:getCiclos@aux)
 18291  00435A  C016  F029         	clrf	((c:getCiclos@aux+1)),c
 18292  00435E  6A2A               	line	44
 18293                           	
 18294                           l6105:
 18295  004360                     ;fifo.c: 44:     aux <<= 8;
 18296                           	movf	((c:getCiclos@aux)),c,w
 18297  004360  5029               	movwf	((c:getCiclos@aux+1)),c
 18298  004362  6E2A               	clrf	((c:getCiclos@aux)),c
 18299  004364  6A29               	line	45
 18300                           	
 18301                           l6107:
 18302  004366                     ;fifo.c: 45:     aux +=fila[0];
 18303                           	movf	((c:_fila)),c,w
 18304  004366  5015               	addwf	((c:getCiclos@aux)),c
 18305  004368  2629               	movlw	0
 18306  00436A  0E00               	addwfc	((c:getCiclos@aux+1)),c
 18307  00436C  222A               	line	46
 18308                           	
 18309                           l6109:
 18310  00436E                     ;fifo.c: 46:     return(aux);
 18311                           	movff	(c:getCiclos@aux),(c:?_getCiclos)
 18312  00436E  C029  F027         	movff	(c:getCiclos@aux+1),(c:?_getCiclos+1)
 18313  004372  C02A  F028         	goto	l660
 18314  004376  EFBD  F021         	
 18315                           l6111:
 18316  00437A                     	line	47
 18317                           	
 18318                           l660:
 18319  00437A                     	return	;funcret
 18320  00437A  0012               	opt stack 0
 18321                           GLOBAL	__end_of_getCiclos
 18322                           	__end_of_getCiclos:
 18323  00437C                     	signat	_getCiclos,90
 18324                           	global	_formatar_receitas
 18325                           
 18326 ;; *************** function _formatar_receitas *****************
 18327 ;; Defined at:
 18328 ;;		line 100 in file "eeprom.c"
 18329 ;; Parameters:    Size  Location     Type
 18330 ;;		None
 18331 ;; Auto vars:     Size  Location     Type
 18332 ;;  i               1    2[COMRAM] unsigned char 
 18333 ;; Return value:  Size  Location     Type
 18334 ;;                  1    wreg      void 
 18335 ;; Registers used:
 18336 ;;		wreg, status,2, status,0, cstack
 18337 ;; Tracked objects:
 18338 ;;		On entry : 0/0
 18339 ;;		On exit  : 0/0
 18340 ;;		Unchanged: 0/0
 18341 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18342 ;;      Params:         0       0       0       0       0       0       0       0       0       0
 18343 ;;      Locals:         1       0       0       0       0       0       0       0       0       0
 18344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0
 18345 ;;      Totals:         1       0       0       0       0       0       0       0       0       0
 18346 ;;Total ram usage:        1 bytes
 18347 ;; Hardware stack levels used:    1
 18348 ;; Hardware stack levels required when called:    3
 18349 ;; This function calls:
 18350 ;;		_EEPROM_write
 18351 ;; This function is called by:
 18352 ;;		_main
 18353 ;; This function uses a non-reentrant model
 18354 ;;
 18355                           psect	text30,class=CODE,space=0,reloc=2,group=0
 18356                           	file	"eeprom.c"
 18357                           	line	100
 18358                           global __ptext30
 18359                           __ptext30:
 18360  00439E                     psect	text30
 18361                           	file	"eeprom.c"
 18362                           	line	100
 18363                           	global	__size_of_formatar_receitas
 18364                           	__size_of_formatar_receitas	equ	__end_of_formatar_receitas-_formatar_receitas
 18365  0000                     	
 18366                           _formatar_receitas:
 18367  00439E                     ;incstack = 0
 18368                           	opt	stack 27
 18369                           	line	102
 18370                           	
 18371                           l6169:
 18372  00439E                     ;eeprom.c: 102:     for( char i = 0;i<256;i++)
 18373                           	movlw	low(0)
 18374  00439E  0E00               	movwf	((c:formatar_receitas@i)),c
 18375  0043A0  6E29               	goto	l6173
 18376  0043A2  EFD5  F021         	
 18377                           l6171:
 18378  0043A6                     	goto	l619
 18379  0043A6  EFDD  F021         	
 18380                           l617:
 18381  0043AA                     	line	103
 18382                           	
 18383                           l6173:
 18384  0043AA                     ;eeprom.c: 103:            EEPROM_write(i,0);
 18385                           	movlw	low(0)
 18386  0043AA  0E00               	movwf	((c:EEPROM_write@data)),c
 18387  0043AC  6E27               	movf	((c:formatar_receitas@i)),c,w
 18388  0043AE  5029               	
 18389                           	call	_EEPROM_write
 18390  0043B0  ECCF  F020         	
 18391                           l6175:
 18392  0043B4                     	incf	((c:formatar_receitas@i)),c
 18393  0043B4  2A29               	goto	l6173
 18394  0043B6  EFD5  F021         	
 18395                           l618:
 18396  0043BA                     	line	105
 18397                           	
 18398                           l619:
 18399  0043BA                     	return	;funcret
 18400  0043BA  0012               	opt stack 0
 18401                           GLOBAL	__end_of_formatar_receitas
 18402                           	__end_of_formatar_receitas:
 18403  0043BC                     	signat	_formatar_receitas,89
 18404                           	global	_fifo_tam
 18405                           
 18406 ;; *************** function _fifo_tam *****************
 18407 ;; Defined at:
 18408 ;;		line 317 in file "fifo.c"
 18409 ;; Parameters:    Size  Location     Type
 18410 ;;		None
 18411 ;; Auto vars:     Size  Location     Type
 18412 ;;		None
 18413 ;; Return value:  Size  Location     Type
 18414 ;;                  1    wreg      unsigned char 
 18415 ;; Registers used:
 18416 ;;		wreg
 18417 ;; Tracked objects:
 18418 ;;		On entry : 0/0
 18419 ;;		On exit  : 0/0
 18420 ;;		Unchanged: 0/0
 18421 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18422 ;;      Params:         0       0       0       0       0       0       0       0       0       0
 18423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0
 18424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0
 18425 ;;      Totals:         0       0       0       0       0       0       0       0       0       0
 18426 ;;Total ram usage:        0 bytes
 18427 ;; Hardware stack levels used:    1
 18428 ;; Hardware stack levels required when called:    2
 18429 ;; This function calls:
 18430 ;;		Nothing
 18431 ;; This function is called by:
 18432 ;;		_main
 18433 ;; This function uses a non-reentrant model
 18434 ;;
 18435                           psect	text31,class=CODE,space=0,reloc=2,group=0
 18436                           	file	"fifo.c"
 18437                           	line	317
 18438                           global __ptext31
 18439                           __ptext31:
 18440  00456C                     psect	text31
 18441                           	file	"fifo.c"
 18442                           	line	317
 18443                           	global	__size_of_fifo_tam
 18444                           	__size_of_fifo_tam	equ	__end_of_fifo_tam-_fifo_tam
 18445  0000                     	
 18446                           _fifo_tam:
 18447  00456C                     ;incstack = 0
 18448                           	opt	stack 28
 18449                           	line	319
 18450                           	
 18451                           l5915:
 18452  00456C                     ;fifo.c: 319:     return( 18 );
 18453                           	movlw	(012h)&0ffh
 18454  00456C  0E12               	goto	l794
 18455  00456E  EFB9  F022         	
 18456                           l5917:
 18457  004572                     	line	320
 18458                           	
 18459                           l794:
 18460  004572                     	return	;funcret
 18461  004572  0012               	opt stack 0
 18462                           GLOBAL	__end_of_fifo_tam
 18463                           	__end_of_fifo_tam:
 18464  004574                     	signat	_fifo_tam,89
 18465                           	global	_fifo_print
 18466                           
 18467 ;; *************** function _fifo_print *****************
 18468 ;; Defined at:
 18469 ;;		line 342 in file "fifo.c"
 18470 ;; Parameters:    Size  Location     Type
 18471 ;;		None
 18472 ;; Auto vars:     Size  Location     Type
 18473 ;;  comando         1   16[COMRAM] unsigned char 
 18474 ;;  atraso          1   15[COMRAM] unsigned char 
 18475 ;;  i               1   14[COMRAM] unsigned char 
 18476 ;;  indPrint        1   13[COMRAM] unsigned char 
 18477 ;;  completar       1   12[COMRAM] unsigned char 
 18478 ;; Return value:  Size  Location     Type
 18479 ;;                  1    wreg      void 
 18480 ;; Registers used:
 18481 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18482 ;; Tracked objects:
 18483 ;;		On entry : 0/0
 18484 ;;		On exit  : 0/0
 18485 ;;		Unchanged: 0/0
 18486 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18487 ;;      Params:         0       0       0       0       0       0       0       0       0       0
 18488 ;;      Locals:         7       0       0       0       0       0       0       0       0       0
 18489 ;;      Temps:          2       0       0       0       0       0       0       0       0       0
 18490 ;;      Totals:         9       0       0       0       0       0       0       0       0       0
 18491 ;;Total ram usage:        9 bytes
 18492 ;; Hardware stack levels used:    1
 18493 ;; Hardware stack levels required when called:    4
 18494 ;; This function calls:
 18495 ;;		___awdiv
 18496 ;;		___awmod
 18497 ;;		_decodifica
 18498 ;;		_dispLCD_dataReg
 18499 ;;		_dispLCD_lincol
 18500 ;; This function is called by:
 18501 ;;		_main
 18502 ;; This function uses a non-reentrant model
 18503 ;;
 18504                           psect	text32,class=CODE,space=0,reloc=2,group=0
 18505                           	line	342
 18506                           global __ptext32
 18507                           __ptext32:
 18508  0021D2                     psect	text32
 18509                           	file	"fifo.c"
 18510                           	line	342
 18511                           	global	__size_of_fifo_print
 18512                           	__size_of_fifo_print	equ	__end_of_fifo_print-_fifo_print
 18513  0000                     	
 18514                           _fifo_print:
 18515  0021D2                     ;incstack = 0
 18516                           	opt	stack 26
 18517                           	line	344
 18518                           	
 18519                           l5709:
 18520  0021D2                     ;fifo.c: 344:     char completar = 0;
 18521                           	movlw	low(0)
 18522  0021D2  0E00               	movwf	((c:fifo_print@completar)),c
 18523  0021D4  6E33               	line	345
 18524                           ;fifo.c: 345:     char comando = 0;
 18525                           	movlw	low(0)
 18526  0021D6  0E00               	movwf	((c:fifo_print@comando)),c
 18527  0021D8  6E37               	line	346
 18528                           ;fifo.c: 346:     char atraso = 0;
 18529                           	movlw	low(0)
 18530  0021DA  0E00               	movwf	((c:fifo_print@atraso)),c
 18531  0021DC  6E36               	line	347
 18532                           ;fifo.c: 347:     char i = 0;
 18533                           	movlw	low(0)
 18534  0021DE  0E00               	movwf	((c:fifo_print@i)),c
 18535  0021E0  6E35               	line	348
 18536                           	
 18537                           l5711:
 18538  0021E2                     ;fifo.c: 348:     char indPrint = ind_print;
 18539                           	movff	(c:_ind_print),(c:fifo_print@indPrint)
 18540  0021E2  C05C  F034         	line	350
 18541                           	
 18542                           l5713:
 18543  0021E6                     ;fifo.c: 350:     dispLCD_lincol(0, 0);
 18544                           	movlw	low(0)
 18545  0021E6  0E00               	movwf	((c:dispLCD_lincol@col)),c
 18546  0021E8  6E29               	movlw	(0)&0ffh
 18547  0021EA  0E00               	
 18548                           	call	_dispLCD_lincol
 18549  0021EC  EC54  F01E         	goto	l5715
 18550  0021F0  EFFA  F010         	line	351
 18551                           ;fifo.c: 351:     do
 18552                           	
 18553                           l808:
 18554  0021F4                     	line	353
 18555                           	
 18556                           l5715:
 18557  0021F4                     ;fifo.c: 352:     {;fifo.c: 353:         if( completar )
 18558                           	movf	((c:fifo_print@completar)),c,w
 18559  0021F4  5033               	btfsc	status,2
 18560  0021F6  B4D8               	goto	u4191
 18561  0021F8  EF00  F011         	goto	u4190
 18562  0021FC  EF02  F011         u4191:
 18563  002200                     	goto	l5721
 18564  002200  EF08  F011         u4190:
 18565  002204                     	line	355
 18566                           	
 18567                           l5717:
 18568  002204                     ;fifo.c: 354:         {;fifo.c: 355:             dispLCD_dataReg(' ');
 18569                           	movlw	(020h)&0ffh
 18570  002204  0E20               	
 18571                           	call	_dispLCD_dataReg
 18572  002206  EC8F  F01F         	line	356
 18573                           	
 18574                           l5719:
 18575  00220A                     ;fifo.c: 356:             ++i;
 18576                           	incf	((c:fifo_print@i)),c
 18577  00220A  2A35               	line	357
 18578                           ;fifo.c: 357:         }
 18579                           	goto	l5835
 18580  00220C  EF86  F012         	line	358
 18581                           ;fifo.c: 358:         else
 18582                           	
 18583                           l809:
 18584  002210                     	line	360
 18585                           	
 18586                           l5721:
 18587  002210                     ;fifo.c: 359:         {;fifo.c: 360:             comando = fila[indPrint++];
 18588                           	movf	((c:fifo_print@indPrint)),c,w
 18589  002210  5034               	mullw	01h
 18590  002212  0D01               	movlw	low(_fila)
 18591  002214  0E15               	addwf	(prodl),c,w
 18592  002216  24F3               	movwf	c:fsr2l
 18593  002218  6ED9               	movlw	high(_fila)
 18594  00221A  0E00               	addwfc	prod+1,w
 18595  00221C  20F4               	movwf	1+c:fsr2l
 18596  00221E  6EDA               	movf	indf2,w
 18597  002220  50DF               	movwf	((c:fifo_print@comando)),c
 18598  002222  6E37               	
 18599                           l5723:
 18600  002224                     	incf	((c:fifo_print@indPrint)),c
 18601  002224  2A34               	line	362
 18602                           	
 18603                           l5725:
 18604  002226                     ;fifo.c: 362:             if( comando == 0 )
 18605                           	movf	((c:fifo_print@comando)),c,w
 18606  002226  5037               	btfss	status,2
 18607  002228  A4D8               	goto	u4201
 18608  00222A  EF19  F011         	goto	u4200
 18609  00222E  EF1B  F011         u4201:
 18610  002232                     	goto	l5729
 18611  002232  EF1F  F011         u4200:
 18612  002236                     	line	363
 18613                           	
 18614                           l5727:
 18615  002236                     ;fifo.c: 363:                 completar = 1;
 18616                           	movlw	low(01h)
 18617  002236  0E01               	movwf	((c:fifo_print@completar)),c
 18618  002238  6E33               	goto	l5835
 18619  00223A  EF86  F012         	line	364
 18620                           ;fifo.c: 364:             else if ( comando <= 0x64 )
 18621                           	
 18622                           l811:
 18623  00223E                     	
 18624                           l5729:
 18625  00223E                     		movlw	065h-0
 18626  00223E  0E65               	cpfslt	((c:fifo_print@comando)),c
 18627  002240  6037               	goto	u4211
 18628  002242  EF25  F011         	goto	u4210
 18629  002246  EF27  F011         
 18630                           u4211:
 18631  00224A                     	goto	l5761
 18632  00224A  EF7E  F011         u4210:
 18633  00224E                     	line	366
 18634                           	
 18635                           l5731:
 18636  00224E                     ;fifo.c: 365:             {;fifo.c: 366:                 atraso = comando;
 18637                           	movff	(c:fifo_print@comando),(c:fifo_print@atraso)
 18638  00224E  C037  F036         	line	367
 18639                           	
 18640                           l5733:
 18641  002252                     ;fifo.c: 367:                 if( atraso >= 100 )
 18642                           		movlw	064h-1
 18643  002252  0E63               	cpfsgt	((c:fifo_print@atraso)),c
 18644  002254  6436               	goto	u4221
 18645  002256  EF2F  F011         	goto	u4220
 18646  00225A  EF31  F011         
 18647                           u4221:
 18648  00225E                     	goto	l5747
 18649  00225E  EF50  F011         u4220:
 18650  002262                     	line	369
 18651                           	
 18652                           l5735:
 18653  002262                     ;fifo.c: 368:                 {;fifo.c: 369:                     dispLCD_dataReg('1');
 18654                           	movlw	(031h)&0ffh
 18655  002262  0E31               	
 18656                           	call	_dispLCD_dataReg
 18657  002264  EC8F  F01F         	line	370
 18658                           	
 18659                           l5737:
 18660  002268                     ;fifo.c: 370:                     ++i;
 18661                           	incf	((c:fifo_print@i)),c
 18662  002268  2A35               	line	371
 18663                           	
 18664                           l5739:
 18665  00226A                     ;fifo.c: 371:                     atraso %= 100;
 18666                           	movff	(c:fifo_print@atraso),(c:___awmod@dividend)
 18667  00226A  C036  F027         	clrf	((c:___awmod@dividend+1)),c
 18668  00226E  6A28               	movlw	high(064h)
 18669  002270  0E00               	movwf	((c:___awmod@divisor+1)),c
 18670  002272  6E2A               	movlw	low(064h)
 18671  002274  0E64               	movwf	((c:___awmod@divisor)),c
 18672  002276  6E29               	call	___awmod	;wreg free
 18673  002278  EC2E  F019         	movf	(0+?___awmod),c,w
 18674  00227C  5027               	movwf	((c:fifo_print@atraso)),c
 18675  00227E  6E36               	line	372
 18676                           	
 18677                           l5741:
 18678  002280                     ;fifo.c: 372:                     if(atraso < 10)
 18679                           		movlw	0Ah-0
 18680  002280  0E0A               	cpfslt	((c:fifo_print@atraso)),c
 18681  002282  6036               	goto	u4231
 18682  002284  EF46  F011         	goto	u4230
 18683  002288  EF48  F011         
 18684                           u4231:
 18685  00228C                     	goto	l5747
 18686  00228C  EF50  F011         u4230:
 18687  002290                     	line	374
 18688                           	
 18689                           l5743:
 18690  002290                     ;fifo.c: 373:                     {;fifo.c: 374:                         dispLCD_dataReg
                                 ('0');
 18691                           	movlw	(030h)&0ffh
 18692  002290  0E30               	
 18693                           	call	_dispLCD_dataReg
 18694  002292  EC8F  F01F         	line	375
 18695                           	
 18696                           l5745:
 18697  002296                     ;fifo.c: 375:                         ++i;
 18698                           	incf	((c:fifo_print@i)),c
 18699  002296  2A35               	goto	l5747
 18700  002298  EF50  F011         	line	376
 18701                           ;fifo.c: 376:                     }
 18702                           	
 18703                           l815:
 18704  00229C                     	goto	l5747
 18705  00229C  EF50  F011         	line	377
 18706                           ;fifo.c: 377:                 }
 18707                           	
 18708                           l814:
 18709  0022A0                     	line	378
 18710                           	
 18711                           l5747:
 18712  0022A0                     ;fifo.c: 378:                 if( atraso >= 10 )
 18713                           		movlw	0Ah-1
 18714  0022A0  0E09               	cpfsgt	((c:fifo_print@atraso)),c
 18715  0022A2  6436               	goto	u4241
 18716  0022A4  EF56  F011         	goto	u4240
 18717  0022A8  EF58  F011         
 18718                           u4241:
 18719  0022AC                     	goto	l5755
 18720  0022AC  EF73  F011         u4240:
 18721  0022B0                     	line	380
 18722                           	
 18723                           l5749:
 18724  0022B0                     ;fifo.c: 379:                 {;fifo.c: 380:                     dispLCD_dataReg(atraso/
                                 10 + '0');
 18725                           	movff	(c:fifo_print@atraso),(c:___awdiv@dividend)
 18726  0022B0  C036  F027         	clrf	((c:___awdiv@dividend+1)),c
 18727  0022B4  6A28               	movlw	high(0Ah)
 18728  0022B6  0E00               	movwf	((c:___awdiv@divisor+1)),c
 18729  0022B8  6E2A               	movlw	low(0Ah)
 18730  0022BA  0E0A               	movwf	((c:___awdiv@divisor)),c
 18731  0022BC  6E29               	call	___awdiv	;wreg free
 18732  0022BE  ECD3  F017         	movf	(0+?___awdiv),c,w
 18733  0022C2  5027               	addlw	low(030h)
 18734  0022C4  0F30               	
 18735                           	call	_dispLCD_dataReg
 18736  0022C6  EC8F  F01F         	line	381
 18737                           	
 18738                           l5751:
 18739  0022CA                     ;fifo.c: 381:                     ++i;
 18740                           	incf	((c:fifo_print@i)),c
 18741  0022CA  2A35               	line	382
 18742                           	
 18743                           l5753:
 18744  0022CC                     ;fifo.c: 382:                     atraso %= 10;
 18745                           	movff	(c:fifo_print@atraso),(c:___awmod@dividend)
 18746  0022CC  C036  F027         	clrf	((c:___awmod@dividend+1)),c
 18747  0022D0  6A28               	movlw	high(0Ah)
 18748  0022D2  0E00               	movwf	((c:___awmod@divisor+1)),c
 18749  0022D4  6E2A               	movlw	low(0Ah)
 18750  0022D6  0E0A               	movwf	((c:___awmod@divisor)),c
 18751  0022D8  6E29               	call	___awmod	;wreg free
 18752  0022DA  EC2E  F019         	movf	(0+?___awmod),c,w
 18753  0022DE  5027               	movwf	((c:fifo_print@atraso)),c
 18754  0022E0  6E36               	goto	l5755
 18755  0022E2  EF73  F011         	line	383
 18756                           ;fifo.c: 383:                 }
 18757                           	
 18758                           l816:
 18759  0022E6                     	line	385
 18760                           	
 18761                           l5755:
 18762  0022E6                     ;fifo.c: 385:                 dispLCD_dataReg(atraso + '0');
 18763                           	movf	((c:fifo_print@atraso)),c,w
 18764  0022E6  5036               	addlw	low(030h)
 18765  0022E8  0F30               	
 18766                           	call	_dispLCD_dataReg
 18767  0022EA  EC8F  F01F         	line	386
 18768                           	
 18769                           l5757:
 18770  0022EE                     ;fifo.c: 386:                 ++i;
 18771                           	incf	((c:fifo_print@i)),c
 18772  0022EE  2A35               	line	388
 18773                           ;fifo.c: 388:                 dispLCD_dataReg('%');
 18774                           	movlw	(025h)&0ffh
 18775  0022F0  0E25               	
 18776                           	call	_dispLCD_dataReg
 18777  0022F2  EC8F  F01F         	line	389
 18778                           	
 18779                           l5759:
 18780  0022F6                     ;fifo.c: 389:                 ++i;
 18781                           	incf	((c:fifo_print@i)),c
 18782  0022F6  2A35               	line	390
 18783                           ;fifo.c: 390:             }
 18784                           	goto	l5835
 18785  0022F8  EF86  F012         	line	392
 18786                           ;fifo.c: 392:             else if( comando > 0x64 && comando <= 0xDC)
 18787                           	
 18788                           l813:
 18789  0022FC                     	
 18790                           l5761:
 18791  0022FC                     		movlw	065h-1
 18792  0022FC  0E64               	cpfsgt	((c:fifo_print@comando)),c
 18793  0022FE  6437               	goto	u4251
 18794  002300  EF84  F011         	goto	u4250
 18795  002304  EF86  F011         
 18796                           u4251:
 18797  002308                     	goto	l5797
 18798  002308  EFEB  F011         u4250:
 18799  00230C                     	
 18800                           l5763:
 18801  00230C                     		movlw	0DDh-0
 18802  00230C  0EDD               	cpfslt	((c:fifo_print@comando)),c
 18803  00230E  6037               	goto	u4261
 18804  002310  EF8C  F011         	goto	u4260
 18805  002314  EF8E  F011         
 18806                           u4261:
 18807  002318                     	goto	l5797
 18808  002318  EFEB  F011         u4260:
 18809  00231C                     	line	394
 18810                           	
 18811                           l5765:
 18812  00231C                     ;fifo.c: 393:             {;fifo.c: 394:                 decodifica(&comando);
 18813                           		movlw	low(fifo_print@comando)
 18814  00231C  0E37               	movwf	((c:decodifica@d)),c
 18815  00231E  6E27               	movlw	high(fifo_print@comando)
 18816  002320  0E00               	movwf	((c:decodifica@d+1)),c
 18817  002322  6E28               
 18818                           	call	_decodifica	;wreg free
 18819  002324  ECE7  F014         	line	395
 18820                           	
 18821                           l5767:
 18822  002328                     ;fifo.c: 395:                 atraso = comando;
 18823                           	movff	(c:fifo_print@comando),(c:fifo_print@atraso)
 18824  002328  C037  F036         	line	397
 18825                           	
 18826                           l5769:
 18827  00232C                     ;fifo.c: 397:                 if( atraso >= 100 )
 18828                           		movlw	064h-1
 18829  00232C  0E63               	cpfsgt	((c:fifo_print@atraso)),c
 18830  00232E  6436               	goto	u4271
 18831  002330  EF9C  F011         	goto	u4270
 18832  002334  EF9E  F011         
 18833                           u4271:
 18834  002338                     	goto	l5783
 18835  002338  EFBD  F011         u4270:
 18836  00233C                     	line	399
 18837                           	
 18838                           l5771:
 18839  00233C                     ;fifo.c: 398:                 {;fifo.c: 399:                     dispLCD_dataReg('1');
 18840                           	movlw	(031h)&0ffh
 18841  00233C  0E31               	
 18842                           	call	_dispLCD_dataReg
 18843  00233E  EC8F  F01F         	line	400
 18844                           	
 18845                           l5773:
 18846  002342                     ;fifo.c: 400:                     ++i;
 18847                           	incf	((c:fifo_print@i)),c
 18848  002342  2A35               	line	401
 18849                           	
 18850                           l5775:
 18851  002344                     ;fifo.c: 401:                     atraso %= 100;
 18852                           	movff	(c:fifo_print@atraso),(c:___awmod@dividend)
 18853  002344  C036  F027         	clrf	((c:___awmod@dividend+1)),c
 18854  002348  6A28               	movlw	high(064h)
 18855  00234A  0E00               	movwf	((c:___awmod@divisor+1)),c
 18856  00234C  6E2A               	movlw	low(064h)
 18857  00234E  0E64               	movwf	((c:___awmod@divisor)),c
 18858  002350  6E29               	call	___awmod	;wreg free
 18859  002352  EC2E  F019         	movf	(0+?___awmod),c,w
 18860  002356  5027               	movwf	((c:fifo_print@atraso)),c
 18861  002358  6E36               	line	402
 18862                           	
 18863                           l5777:
 18864  00235A                     ;fifo.c: 402:                     if(atraso < 10)
 18865                           		movlw	0Ah-0
 18866  00235A  0E0A               	cpfslt	((c:fifo_print@atraso)),c
 18867  00235C  6036               	goto	u4281
 18868  00235E  EFB3  F011         	goto	u4280
 18869  002362  EFB5  F011         
 18870                           u4281:
 18871  002366                     	goto	l5783
 18872  002366  EFBD  F011         u4280:
 18873  00236A                     	line	404
 18874                           	
 18875                           l5779:
 18876  00236A                     ;fifo.c: 403:                     {;fifo.c: 404:                         dispLCD_dataReg
                                 ('0');
 18877                           	movlw	(030h)&0ffh
 18878  00236A  0E30               	
 18879                           	call	_dispLCD_dataReg
 18880  00236C  EC8F  F01F         	line	405
 18881                           	
 18882                           l5781:
 18883  002370                     ;fifo.c: 405:                         ++i;
 18884                           	incf	((c:fifo_print@i)),c
 18885  002370  2A35               	goto	l5783
 18886  002372  EFBD  F011         	line	406
 18887                           ;fifo.c: 406:                     }
 18888                           	
 18889                           l820:
 18890  002376                     	goto	l5783
 18891  002376  EFBD  F011         	line	407
 18892                           ;fifo.c: 407:                 }
 18893                           	
 18894                           l819:
 18895  00237A                     	line	408
 18896                           	
 18897                           l5783:
 18898  00237A                     ;fifo.c: 408:                 if( atraso >= 10 )
 18899                           		movlw	0Ah-1
 18900  00237A  0E09               	cpfsgt	((c:fifo_print@atraso)),c
 18901  00237C  6436               	goto	u4291
 18902  00237E  EFC3  F011         	goto	u4290
 18903  002382  EFC5  F011         
 18904                           u4291:
 18905  002386                     	goto	l5791
 18906  002386  EFE0  F011         u4290:
 18907  00238A                     	line	410
 18908                           	
 18909                           l5785:
 18910  00238A                     ;fifo.c: 409:                 {;fifo.c: 410:                     dispLCD_dataReg(atraso/
                                 10 + '0');
 18911                           	movff	(c:fifo_print@atraso),(c:___awdiv@dividend)
 18912  00238A  C036  F027         	clrf	((c:___awdiv@dividend+1)),c
 18913  00238E  6A28               	movlw	high(0Ah)
 18914  002390  0E00               	movwf	((c:___awdiv@divisor+1)),c
 18915  002392  6E2A               	movlw	low(0Ah)
 18916  002394  0E0A               	movwf	((c:___awdiv@divisor)),c
 18917  002396  6E29               	call	___awdiv	;wreg free
 18918  002398  ECD3  F017         	movf	(0+?___awdiv),c,w
 18919  00239C  5027               	addlw	low(030h)
 18920  00239E  0F30               	
 18921                           	call	_dispLCD_dataReg
 18922  0023A0  EC8F  F01F         	line	411
 18923                           	
 18924                           l5787:
 18925  0023A4                     ;fifo.c: 411:                     ++i;
 18926                           	incf	((c:fifo_print@i)),c
 18927  0023A4  2A35               	line	412
 18928                           	
 18929                           l5789:
 18930  0023A6                     ;fifo.c: 412:                     atraso %= 10;
 18931                           	movff	(c:fifo_print@atraso),(c:___awmod@dividend)
 18932  0023A6  C036  F027         	clrf	((c:___awmod@dividend+1)),c
 18933  0023AA  6A28               	movlw	high(0Ah)
 18934  0023AC  0E00               	movwf	((c:___awmod@divisor+1)),c
 18935  0023AE  6E2A               	movlw	low(0Ah)
 18936  0023B0  0E0A               	movwf	((c:___awmod@divisor)),c
 18937  0023B2  6E29               	call	___awmod	;wreg free
 18938  0023B4  EC2E  F019         	movf	(0+?___awmod),c,w
 18939  0023B8  5027               	movwf	((c:fifo_print@atraso)),c
 18940  0023BA  6E36               	goto	l5791
 18941  0023BC  EFE0  F011         	line	413
 18942                           ;fifo.c: 413:                 }
 18943                           	
 18944                           l821:
 18945  0023C0                     	line	415
 18946                           	
 18947                           l5791:
 18948  0023C0                     ;fifo.c: 415:                 dispLCD_dataReg(atraso + '0');
 18949                           	movf	((c:fifo_print@atraso)),c,w
 18950  0023C0  5036               	addlw	low(030h)
 18951  0023C2  0F30               	
 18952                           	call	_dispLCD_dataReg
 18953  0023C4  EC8F  F01F         	line	416
 18954                           	
 18955                           l5793:
 18956  0023C8                     ;fifo.c: 416:                 ++i;
 18957                           	incf	((c:fifo_print@i)),c
 18958  0023C8  2A35               	line	418
 18959                           ;fifo.c: 418:                 dispLCD_dataReg('s');
 18960                           	movlw	(073h)&0ffh
 18961  0023CA  0E73               	
 18962                           	call	_dispLCD_dataReg
 18963  0023CC  EC8F  F01F         	line	419
 18964                           	
 18965                           l5795:
 18966  0023D0                     ;fifo.c: 419:                 ++i;
 18967                           	incf	((c:fifo_print@i)),c
 18968  0023D0  2A35               	line	420
 18969                           ;fifo.c: 420:             }
 18970                           	goto	l5835
 18971  0023D2  EF86  F012         	line	421
 18972                           ;fifo.c: 421:             else if( comando > 0xDC && comando < 0xFE )
 18973                           	
 18974                           l818:
 18975  0023D6                     	
 18976                           l5797:
 18977  0023D6                     		movlw	0DDh-1
 18978  0023D6  0EDC               	cpfsgt	((c:fifo_print@comando)),c
 18979  0023D8  6437               	goto	u4301
 18980  0023DA  EFF1  F011         	goto	u4300
 18981  0023DE  EFF3  F011         
 18982                           u4301:
 18983  0023E2                     	goto	l5821
 18984  0023E2  EF60  F012         u4300:
 18985  0023E6                     	
 18986                           l5799:
 18987  0023E6                     		movlw	0FEh-0
 18988  0023E6  0EFE               	cpfslt	((c:fifo_print@comando)),c
 18989  0023E8  6037               	goto	u4311
 18990  0023EA  EFF9  F011         	goto	u4310
 18991  0023EE  EFFB  F011         
 18992                           u4311:
 18993  0023F2                     	goto	l5821
 18994  0023F2  EF60  F012         u4310:
 18995  0023F6                     	line	423
 18996                           	
 18997                           l5801:
 18998  0023F6                     ;fifo.c: 422:             {;fifo.c: 423:                 decodifica(&comando);
 18999                           		movlw	low(fifo_print@comando)
 19000  0023F6  0E37               	movwf	((c:decodifica@d)),c
 19001  0023F8  6E27               	movlw	high(fifo_print@comando)
 19002  0023FA  0E00               	movwf	((c:decodifica@d+1)),c
 19003  0023FC  6E28               
 19004                           	call	_decodifica	;wreg free
 19005  0023FE  ECE7  F014         	line	424
 19006                           ;fifo.c: 424:                 switch( comando )
 19007                           	goto	l5819
 19008  002402  EF31  F012         	line	426
 19009                           ;fifo.c: 425:                 {;fifo.c: 426:                     case 'A':
 19010                           	
 19011                           l825:
 19012  002406                     	goto	l5803
 19013  002406  EF11  F012         	line	427
 19014                           ;fifo.c: 427:                     case 'B':
 19015                           	
 19016                           l826:
 19017  00240A                     	goto	l5803
 19018  00240A  EF11  F012         	line	428
 19019                           ;fifo.c: 428:                     case 'C':
 19020                           	
 19021                           l827:
 19022  00240E                     	goto	l5803
 19023  00240E  EF11  F012         	line	429
 19024                           ;fifo.c: 429:                     case 'D':
 19025                           	
 19026                           l828:
 19027  002412                     	goto	l5803
 19028  002412  EF11  F012         	line	430
 19029                           ;fifo.c: 430:                     case 'a':
 19030                           	
 19031                           l829:
 19032  002416                     	goto	l5803
 19033  002416  EF11  F012         	line	431
 19034                           ;fifo.c: 431:                     case 'b':
 19035                           	
 19036                           l830:
 19037  00241A                     	goto	l5803
 19038  00241A  EF11  F012         	line	432
 19039                           ;fifo.c: 432:                     case 'c':
 19040                           	
 19041                           l831:
 19042  00241E                     	goto	l5803
 19043  00241E  EF11  F012         	line	433
 19044                           ;fifo.c: 433:                     case 'd':
 19045                           	
 19046                           l832:
 19047  002422                     	line	434
 19048                           	
 19049                           l5803:
 19050  002422                     ;fifo.c: 434:                                 dispLCD_dataReg( comando & ~0x20 );
 19051                           	movf	((c:fifo_print@comando)),c,w
 19052  002422  5037               	andlw	low(0DFh)
 19053  002424  0BDF               	
 19054                           	call	_dispLCD_dataReg
 19055  002426  EC8F  F01F         	line	435
 19056                           	
 19057                           l5805:
 19058  00242A                     ;fifo.c: 435:                                 ++i;
 19059                           	incf	((c:fifo_print@i)),c
 19060  00242A  2A35               	line	436
 19061                           	
 19062                           l5807:
 19063  00242C                     ;fifo.c: 436:                                 dispLCD_dataReg( comando & 0x20 ? '-': '+'
                                  );
 19064                           	
 19065                           	btfsc	((c:fifo_print@comando)),c,(5)&7
 19066  00242C  BA37               	goto	u4321
 19067  00242E  EF1B  F012         	goto	u4320
 19068  002432  EF1D  F012         u4321:
 19069  002436                     	goto	l5811
 19070  002436  EF23  F012         u4320:
 19071  00243A                     	
 19072                           l5809:
 19073  00243A                     	movlw	high(02Bh)
 19074  00243A  0E00               	movwf	((c:_fifo_print$1053+1)),c
 19075  00243C  6E32               	movlw	low(02Bh)
 19076  00243E  0E2B               	movwf	((c:_fifo_print$1053)),c
 19077  002440  6E31               	goto	l5813
 19078  002442  EF29  F012         	
 19079                           l834:
 19080  002446                     	
 19081                           l5811:
 19082  002446                     	movlw	high(02Dh)
 19083  002446  0E00               	movwf	((c:_fifo_print$1053+1)),c
 19084  002448  6E32               	movlw	low(02Dh)
 19085  00244A  0E2D               	movwf	((c:_fifo_print$1053)),c
 19086  00244C  6E31               	goto	l5813
 19087  00244E  EF29  F012         	
 19088                           l836:
 19089  002452                     	
 19090                           l5813:
 19091  002452                     	movf	((c:_fifo_print$1053)),c,w
 19092  002452  5031               	
 19093                           	call	_dispLCD_dataReg
 19094  002454  EC8F  F01F         	line	437
 19095                           	
 19096                           l5815:
 19097  002458                     ;fifo.c: 437:                                 ++i;
 19098                           	incf	((c:fifo_print@i)),c
 19099  002458  2A35               	line	438
 19100                           ;fifo.c: 438:                                 break;
 19101                           	goto	l5835
 19102  00245A  EF86  F012         	line	439
 19103                           	
 19104                           l5817:
 19105  00245E                     ;fifo.c: 439:                 }
 19106                           	goto	l5835
 19107  00245E  EF86  F012         	
 19108                           l824:
 19109  002462                     	
 19110                           l5819:
 19111  002462                     	movf	((c:fifo_print@comando)),c,w
 19112  002462  5037               	movwf	(??_fifo_print+0+0)&0ffh,c
 19113  002464  6E2F               	clrf	(??_fifo_print+0+0+1)&0ffh,c
 19114  002466  6A30               
 19115                           	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
 19116                           ; Switch size 1, requested type "space"
 19117                           ; Number of cases is 1, Range of values is 0 to 0
 19118                           ; switch strategies available:
 19119                           ; Name         Instructions Cycles
 19120                           ; simple_byte            4     3 (average)
 19121                           ;	Chosen strategy is simple_byte
 19122                           
 19123                           	movf ??_fifo_print+0+1,c,w
 19124  002468  5030               	xorlw	0^0	; case 0
 19125  00246A  0A00               	skipnz
 19126  00246C  B4D8               	goto	l7973
 19127  00246E  EF3B  F012         	goto	l5835
 19128  002472  EF86  F012         	
 19129                           l7973:
 19130  002476                     ; Switch size 1, requested type "space"
 19131                           ; Number of cases is 8, Range of values is 65 to 100
 19132                           ; switch strategies available:
 19133                           ; Name         Instructions Cycles
 19134                           ; simple_byte           25    13 (average)
 19135                           ;	Chosen strategy is simple_byte
 19136                           
 19137                           	movf ??_fifo_print+0+0,c,w
 19138  002476  502F               	xorlw	65^0	; case 65
 19139  002478  0A41               	skipnz
 19140  00247A  B4D8               	goto	l5803
 19141  00247C  EF11  F012         	xorlw	66^65	; case 66
 19142  002480  0A03               	skipnz
 19143  002482  B4D8               	goto	l5803
 19144  002484  EF11  F012         	xorlw	67^66	; case 67
 19145  002488  0A01               	skipnz
 19146  00248A  B4D8               	goto	l5803
 19147  00248C  EF11  F012         	xorlw	68^67	; case 68
 19148  002490  0A07               	skipnz
 19149  002492  B4D8               	goto	l5803
 19150  002494  EF11  F012         	xorlw	97^68	; case 97
 19151  002498  0A25               	skipnz
 19152  00249A  B4D8               	goto	l5803
 19153  00249C  EF11  F012         	xorlw	98^97	; case 98
 19154  0024A0  0A03               	skipnz
 19155  0024A2  B4D8               	goto	l5803
 19156  0024A4  EF11  F012         	xorlw	99^98	; case 99
 19157  0024A8  0A01               	skipnz
 19158  0024AA  B4D8               	goto	l5803
 19159  0024AC  EF11  F012         	xorlw	100^99	; case 100
 19160  0024B0  0A07               	skipnz
 19161  0024B2  B4D8               	goto	l5803
 19162  0024B4  EF11  F012         	goto	l5835
 19163  0024B8  EF86  F012         
 19164                           	
 19165                           l837:
 19166  0024BC                     	line	440
 19167                           ;fifo.c: 440:             }
 19168                           	goto	l5835
 19169  0024BC  EF86  F012         	line	441
 19170                           ;fifo.c: 441:             else
 19171                           	
 19172                           l823:
 19173  0024C0                     	line	443
 19174                           	
 19175                           l5821:
 19176  0024C0                     ;fifo.c: 442:             {;fifo.c: 443:                 if(comando == 0xFE)
 19177                           		movlw	254
 19178  0024C0  0EFE               	xorwf	((c:fifo_print@comando)),c,w
 19179  0024C2  1837               	btfss	status,2
 19180  0024C4  A4D8               	goto	u4331
 19181  0024C6  EF67  F012         	goto	u4330
 19182  0024CA  EF69  F012         
 19183                           u4331:
 19184  0024CE                     	goto	l5835
 19185  0024CE  EF86  F012         u4330:
 19186  0024D2                     	line	445
 19187                           	
 19188                           l5823:
 19189  0024D2                     ;fifo.c: 444:                 {;fifo.c: 445:                     decodifica(&comando);
 19190                           		movlw	low(fifo_print@comando)
 19191  0024D2  0E37               	movwf	((c:decodifica@d)),c
 19192  0024D4  6E27               	movlw	high(fifo_print@comando)
 19193  0024D6  0E00               	movwf	((c:decodifica@d+1)),c
 19194  0024D8  6E28               
 19195                           	call	_decodifica	;wreg free
 19196  0024DA  ECE7  F014         	line	446
 19197                           	
 19198                           l5825:
 19199  0024DE                     ;fifo.c: 446:                     atraso = comando;
 19200                           	movff	(c:fifo_print@comando),(c:fifo_print@atraso)
 19201  0024DE  C037  F036         	line	448
 19202                           	
 19203                           l5827:
 19204  0024E2                     ;fifo.c: 448:                     dispLCD_dataReg(atraso + '0');
 19205                           	movf	((c:fifo_print@atraso)),c,w
 19206  0024E2  5036               	addlw	low(030h)
 19207  0024E4  0F30               	
 19208                           	call	_dispLCD_dataReg
 19209  0024E6  EC8F  F01F         	line	449
 19210                           	
 19211                           l5829:
 19212  0024EA                     ;fifo.c: 449:                     ++i;
 19213                           	incf	((c:fifo_print@i)),c
 19214  0024EA  2A35               	line	451
 19215                           	
 19216                           l5831:
 19217  0024EC                     ;fifo.c: 451:                     dispLCD_dataReg('%');
 19218                           	movlw	(025h)&0ffh
 19219  0024EC  0E25               	
 19220                           	call	_dispLCD_dataReg
 19221  0024EE  EC8F  F01F         	line	452
 19222                           	
 19223                           l5833:
 19224  0024F2                     ;fifo.c: 452:                     ++i;
 19225                           	incf	((c:fifo_print@i)),c
 19226  0024F2  2A35               	goto	l5835
 19227  0024F4  EF86  F012         	line	453
 19228                           ;fifo.c: 453:                 }
 19229                           	
 19230                           l839:
 19231  0024F8                     	goto	l5835
 19232  0024F8  EF86  F012         	line	454
 19233                           ;fifo.c: 454:             }
 19234                           	
 19235                           l838:
 19236  0024FC                     	goto	l5835
 19237  0024FC  EF86  F012         	
 19238                           l822:
 19239  002500                     	goto	l5835
 19240  002500  EF86  F012         	
 19241                           l817:
 19242  002504                     	goto	l5835
 19243  002504  EF86  F012         	
 19244                           l812:
 19245  002508                     	goto	l5835
 19246  002508  EF86  F012         	line	455
 19247                           ;fifo.c: 455:         }
 19248                           	
 19249                           l810:
 19250  00250C                     	line	456
 19251                           	
 19252                           l5835:
 19253  00250C                     ;fifo.c: 456:     }
 19254                           		movlw	015h-1
 19255  00250C  0E14               	cpfsgt	((c:fifo_print@i)),c
 19256  00250E  6435               	goto	u4341
 19257  002510  EF8C  F012         	goto	u4340
 19258  002514  EF8E  F012         
 19259                           u4341:
 19260  002518                     	goto	l5715
 19261  002518  EFFA  F010         u4340:
 19262  00251C                     	goto	l841
 19263  00251C  EF90  F012         	
 19264                           l840:
 19265  002520                     	line	458
 19266                           	
 19267                           l841:
 19268  002520                     	return	;funcret
 19269  002520  0012               	opt stack 0
 19270                           GLOBAL	__end_of_fifo_print
 19271                           	__end_of_fifo_print:
 19272  002522                     	signat	_fifo_print,89
 19273                           	global	___awmod
 19274                           
 19275 ;; *************** function ___awmod *****************
 19276 ;; Defined at:
 19277 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awmod.c"
 19278 ;; Parameters:    Size  Location     Type
 19279 ;;  dividend        2    0[COMRAM] int 
 19280 ;;  divisor         2    2[COMRAM] int 
 19281 ;; Auto vars:     Size  Location     Type
 19282 ;;  sign            1    5[COMRAM] unsigned char 
 19283 ;;  counter         1    4[COMRAM] unsigned char 
 19284 ;; Return value:  Size  Location     Type
 19285 ;;                  2    0[COMRAM] int 
 19286 ;; Registers used:
 19287 ;;		wreg, status,2, status,0
 19288 ;; Tracked objects:
 19289 ;;		On entry : 0/0
 19290 ;;		On exit  : 0/0
 19291 ;;		Unchanged: 0/0
 19292 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19293 ;;      Params:         4       0       0       0       0       0       0       0       0       0
 19294 ;;      Locals:         2       0       0       0       0       0       0       0       0       0
 19295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0
 19296 ;;      Totals:         6       0       0       0       0       0       0       0       0       0
 19297 ;;Total ram usage:        6 bytes
 19298 ;; Hardware stack levels used:    1
 19299 ;; Hardware stack levels required when called:    2
 19300 ;; This function calls:
 19301 ;;		Nothing
 19302 ;; This function is called by:
 19303 ;;		_main
 19304 ;;		_dispLCD_num
 19305 ;;		_fifo_print
 19306 ;; This function uses a non-reentrant model
 19307 ;;
 19308                           psect	text33,class=CODE,space=0,reloc=2,group=1
 19309                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awmod.c"
 19310                           	line	7
 19311                           global __ptext33
 19312                           __ptext33:
 19313  00325C                     psect	text33
 19314                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awmod.c"
 19315                           	line	7
 19316                           	global	__size_of___awmod
 19317                           	__size_of___awmod	equ	__end_of___awmod-___awmod
 19318  0000                     	
 19319                           ___awmod:
 19320  00325C                     ;incstack = 0
 19321                           	opt	stack 26
 19322                           	line	12
 19323                           	
 19324                           l5175:
 19325  00325C                     	movlw	low(0)
 19326  00325C  0E00               	movwf	((c:___awmod@sign)),c
 19327  00325E  6E2C               	line	13
 19328                           	
 19329                           l5177:
 19330  003260                     	btfsc	((c:___awmod@dividend+1)),c,7
 19331  003260  BE28               	goto	u3470
 19332  003262  EF37  F019         	goto	u3471
 19333  003266  EF35  F019         
 19334                           u3471:
 19335  00326A                     	goto	l5183
 19336  00326A  EF3F  F019         u3470:
 19337  00326E                     	line	14
 19338                           	
 19339                           l5179:
 19340  00326E                     	negf	((c:___awmod@dividend)),c
 19341  00326E  6C27               	comf	((c:___awmod@dividend+1)),c
 19342  003270  1E28               	btfsc	status,0
 19343  003272  B0D8               	incf	((c:___awmod@dividend+1)),c
 19344  003274  2A28               	line	15
 19345                           	
 19346                           l5181:
 19347  003276                     	movlw	low(01h)
 19348  003276  0E01               	movwf	((c:___awmod@sign)),c
 19349  003278  6E2C               	goto	l5183
 19350  00327A  EF3F  F019         	line	16
 19351                           	
 19352                           l1476:
 19353  00327E                     	line	17
 19354                           	
 19355                           l5183:
 19356  00327E                     	btfsc	((c:___awmod@divisor+1)),c,7
 19357  00327E  BE2A               	goto	u3480
 19358  003280  EF46  F019         	goto	u3481
 19359  003284  EF44  F019         
 19360                           u3481:
 19361  003288                     	goto	l5187
 19362  003288  EF4C  F019         u3480:
 19363  00328C                     	line	18
 19364                           	
 19365                           l5185:
 19366  00328C                     	negf	((c:___awmod@divisor)),c
 19367  00328C  6C29               	comf	((c:___awmod@divisor+1)),c
 19368  00328E  1E2A               	btfsc	status,0
 19369  003290  B0D8               	incf	((c:___awmod@divisor+1)),c
 19370  003292  2A2A               	goto	l5187
 19371  003294  EF4C  F019         	
 19372                           l1477:
 19373  003298                     	line	19
 19374                           	
 19375                           l5187:
 19376  003298                     	movf	((c:___awmod@divisor)),c,w
 19377  003298  5029               iorwf	((c:___awmod@divisor+1)),c,w
 19378  00329A  102A               	btfsc	status,2
 19379  00329C  B4D8               	goto	u3491
 19380  00329E  EF53  F019         	goto	u3490
 19381  0032A2  EF55  F019         
 19382                           u3491:
 19383  0032A6                     	goto	l5203
 19384  0032A6  EF85  F019         u3490:
 19385  0032AA                     	line	20
 19386                           	
 19387                           l5189:
 19388  0032AA                     	movlw	low(01h)
 19389  0032AA  0E01               	movwf	((c:___awmod@counter)),c
 19390  0032AC  6E2B               	line	21
 19391                           	goto	l5193
 19392  0032AE  EF5F  F019         	
 19393                           l1480:
 19394  0032B2                     	line	22
 19395                           	
 19396                           l5191:
 19397  0032B2                     	bcf	status,0
 19398  0032B2  90D8               	rlcf	((c:___awmod@divisor)),c
 19399  0032B4  3629               	rlcf	((c:___awmod@divisor+1)),c
 19400  0032B6  362A               	line	23
 19401                           	incf	((c:___awmod@counter)),c
 19402  0032B8  2A2B               	goto	l5193
 19403  0032BA  EF5F  F019         	line	24
 19404                           	
 19405                           l1479:
 19406  0032BE                     	line	21
 19407                           	
 19408                           l5193:
 19409  0032BE                     	
 19410                           	btfss	((c:___awmod@divisor+1)),c,(15)&7
 19411  0032BE  AE2A               	goto	u3501
 19412  0032C0  EF64  F019         	goto	u3500
 19413  0032C4  EF66  F019         u3501:
 19414  0032C8                     	goto	l5191
 19415  0032C8  EF59  F019         u3500:
 19416  0032CC                     	goto	l5195
 19417  0032CC  EF6A  F019         	
 19418                           l1481:
 19419  0032D0                     	goto	l5195
 19420  0032D0  EF6A  F019         	line	25
 19421                           	
 19422                           l1482:
 19423  0032D4                     	line	26
 19424                           	
 19425                           l5195:
 19426  0032D4                     		movf	((c:___awmod@divisor)),c,w
 19427  0032D4  5029               	subwf	((c:___awmod@dividend)),c,w
 19428  0032D6  5C27               	movf	((c:___awmod@divisor+1)),c,w
 19429  0032D8  502A               	subwfb	((c:___awmod@dividend+1)),c,w
 19430  0032DA  5828               	btfss	status,0
 19431  0032DC  A0D8               	goto	u3511
 19432  0032DE  EF73  F019         	goto	u3510
 19433  0032E2  EF75  F019         
 19434                           u3511:
 19435  0032E6                     	goto	l5199
 19436  0032E6  EF7B  F019         u3510:
 19437  0032EA                     	line	27
 19438                           	
 19439                           l5197:
 19440  0032EA                     	movf	((c:___awmod@divisor)),c,w
 19441  0032EA  5029               	subwf	((c:___awmod@dividend)),c
 19442  0032EC  5E27               	movf	((c:___awmod@divisor+1)),c,w
 19443  0032EE  502A               	subwfb	((c:___awmod@dividend+1)),c
 19444  0032F0  5A28               
 19445                           	goto	l5199
 19446  0032F2  EF7B  F019         	
 19447                           l1483:
 19448  0032F6                     	line	28
 19449                           	
 19450                           l5199:
 19451  0032F6                     	bcf	status,0
 19452  0032F6  90D8               	rrcf	((c:___awmod@divisor+1)),c
 19453  0032F8  322A               	rrcf	((c:___awmod@divisor)),c
 19454  0032FA  3229               	line	29
 19455                           	
 19456                           l5201:
 19457  0032FC                     	decfsz	((c:___awmod@counter)),c
 19458  0032FC  2E2B               	
 19459                           	goto	l5195
 19460  0032FE  EF6A  F019         	goto	l5203
 19461  003302  EF85  F019         	
 19462                           l1484:
 19463  003306                     	goto	l5203
 19464  003306  EF85  F019         	line	30
 19465                           	
 19466                           l1478:
 19467  00330A                     	line	31
 19468                           	
 19469                           l5203:
 19470  00330A                     	movf	((c:___awmod@sign)),c,w
 19471  00330A  502C               	btfsc	status,2
 19472  00330C  B4D8               	goto	u3521
 19473  00330E  EF8B  F019         	goto	u3520
 19474  003312  EF8D  F019         u3521:
 19475  003316                     	goto	l5207
 19476  003316  EF93  F019         u3520:
 19477  00331A                     	line	32
 19478                           	
 19479                           l5205:
 19480  00331A                     	negf	((c:___awmod@dividend)),c
 19481  00331A  6C27               	comf	((c:___awmod@dividend+1)),c
 19482  00331C  1E28               	btfsc	status,0
 19483  00331E  B0D8               	incf	((c:___awmod@dividend+1)),c
 19484  003320  2A28               	goto	l5207
 19485  003322  EF93  F019         	
 19486                           l1485:
 19487  003326                     	line	33
 19488                           	
 19489                           l5207:
 19490  003326                     	movff	(c:___awmod@dividend),(c:?___awmod)
 19491  003326  C027  F027         	movff	(c:___awmod@dividend+1),(c:?___awmod+1)
 19492  00332A  C028  F028         	goto	l1486
 19493  00332E  EF99  F019         	
 19494                           l5209:
 19495  003332                     	line	34
 19496                           	
 19497                           l1486:
 19498  003332                     	return	;funcret
 19499  003332  0012               	opt stack 0
 19500                           GLOBAL	__end_of___awmod
 19501                           	__end_of___awmod:
 19502  003334                     	signat	___awmod,8314
 19503                           	global	_fifo_indicePrint_inc
 19504                           
 19505 ;; *************** function _fifo_indicePrint_inc *****************
 19506 ;; Defined at:
 19507 ;;		line 322 in file "fifo.c"
 19508 ;; Parameters:    Size  Location     Type
 19509 ;;		None
 19510 ;; Auto vars:     Size  Location     Type
 19511 ;;		None
 19512 ;; Return value:  Size  Location     Type
 19513 ;;                  1    wreg      void 
 19514 ;; Registers used:
 19515 ;;		wreg, status,2, status,0
 19516 ;; Tracked objects:
 19517 ;;		On entry : 0/0
 19518 ;;		On exit  : 0/0
 19519 ;;		Unchanged: 0/0
 19520 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19521 ;;      Params:         0       0       0       0       0       0       0       0       0       0
 19522 ;;      Locals:         0       0       0       0       0       0       0       0       0       0
 19523 ;;      Temps:          7       0       0       0       0       0       0       0       0       0
 19524 ;;      Totals:         7       0       0       0       0       0       0       0       0       0
 19525 ;;Total ram usage:        7 bytes
 19526 ;; Hardware stack levels used:    1
 19527 ;; Hardware stack levels required when called:    2
 19528 ;; This function calls:
 19529 ;;		Nothing
 19530 ;; This function is called by:
 19531 ;;		_main
 19532 ;; This function uses a non-reentrant model
 19533 ;;
 19534                           psect	text34,class=CODE,space=0,reloc=2,group=0
 19535                           	file	"fifo.c"
 19536                           	line	322
 19537                           global __ptext34
 19538                           __ptext34:
 19539  003C42                     psect	text34
 19540                           	file	"fifo.c"
 19541                           	line	322
 19542                           	global	__size_of_fifo_indicePrint_inc
 19543                           	__size_of_fifo_indicePrint_inc	equ	__end_of_fifo_indicePrint_inc-_fifo_indicePrint_inc

 19544  0000                     	
 19545                           _fifo_indicePrint_inc:
 19546  003C42                     ;incstack = 0
 19547                           	opt	stack 28
 19548                           	line	324
 19549                           	
 19550                           l5883:
 19551  003C42                     ;fifo.c: 324:     if( ind_print < 18 -1 )
 19552                           		movlw	011h-0
 19553  003C42  0E11               	cpfslt	((c:_ind_print)),c
 19554  003C44  605C               	goto	u4401
 19555  003C46  EF27  F01E         	goto	u4400
 19556  003C4A  EF29  F01E         
 19557                           u4401:
 19558  003C4E                     	goto	l5891
 19559  003C4E  EF4F  F01E         u4400:
 19560  003C52                     	line	326
 19561                           	
 19562                           l5885:
 19563  003C52                     ;fifo.c: 325:     {;fifo.c: 326:         if( ind_print < ind_fila-1 )
 19564                           	movlw	low(-1)
 19565  003C52  0EFF               	movwf	(??_fifo_indicePrint_inc+0+0)&0ffh,c
 19566  003C54  6E27               	movlw	high(-1)
 19567  003C56  0EFF               	movwf	1+(??_fifo_indicePrint_inc+0+0)&0ffh,c
 19568  003C58  6E28               	movf	((c:_ind_fila)),c,w
 19569  003C5A  505D               	movwf	(??_fifo_indicePrint_inc+2+0)&0ffh,c
 19570  003C5C  6E29               	clrf	(??_fifo_indicePrint_inc+2+0+1)&0ffh,c
 19571  003C5E  6A2A               
 19572                           	movf	(??_fifo_indicePrint_inc+0+0),c,w
 19573  003C60  5027               	addwf	(??_fifo_indicePrint_inc+2+0),c
 19574  003C62  2629               	movf	(??_fifo_indicePrint_inc+0+1),c,w
 19575  003C64  5028               	addwfc	(??_fifo_indicePrint_inc+2+1),c
 19576  003C66  222A               	movf	((c:_ind_print)),c,w
 19577  003C68  505C               	movwf	(??_fifo_indicePrint_inc+4+0)&0ffh,c
 19578  003C6A  6E2B               	clrf	(??_fifo_indicePrint_inc+4+0+1)&0ffh,c
 19579  003C6C  6A2C               
 19580                           		movf	(??_fifo_indicePrint_inc+2+0),c,w
 19581  003C6E  5029               	subwf	(??_fifo_indicePrint_inc+4+0),c,w
 19582  003C70  5C2B               	movf	(??_fifo_indicePrint_inc+4+1),c,w
 19583  003C72  502C               	xorlw	80h
 19584  003C74  0A80               	movwf	(??_fifo_indicePrint_inc+6+0)&0ffh,c
 19585  003C76  6E2D               	movf	(??_fifo_indicePrint_inc+2+1),c,w
 19586  003C78  502A               	xorlw	80h
 19587  003C7A  0A80               	subwfb	(??_fifo_indicePrint_inc+6+0)&0ffh,c,w
 19588  003C7C  582D               	btfsc	status,0
 19589  003C7E  B0D8               	goto	u4411
 19590  003C80  EF44  F01E         	goto	u4410
 19591  003C84  EF46  F01E         
 19592                           u4411:
 19593  003C88                     	goto	l5889
 19594  003C88  EF49  F01E         u4410:
 19595  003C8C                     	line	327
 19596                           	
 19597                           l5887:
 19598  003C8C                     ;fifo.c: 327:             ind_print++;
 19599                           	incf	((c:_ind_print)),c
 19600  003C8C  2A5C               	goto	l801
 19601  003C8E  EF53  F01E         	line	328
 19602                           ;fifo.c: 328:         else
 19603                           	
 19604                           l798:
 19605  003C92                     	line	329
 19606                           	
 19607                           l5889:
 19608  003C92                     ;fifo.c: 329:             ind_print = ind_fila-1;
 19609                           	decf	((c:_ind_fila)),c,w
 19610  003C92  045D               	movwf	((c:_ind_print)),c
 19611  003C94  6E5C               	goto	l801
 19612  003C96  EF53  F01E         	
 19613                           l799:
 19614  003C9A                     	line	330
 19615                           ;fifo.c: 330:     }
 19616                           	goto	l801
 19617  003C9A  EF53  F01E         	line	331
 19618                           ;fifo.c: 331:     else
 19619                           	
 19620                           l797:
 19621  003C9E                     	line	332
 19622                           	
 19623                           l5891:
 19624  003C9E                     ;fifo.c: 332:         ind_print = 18 -1;
 19625                           	movlw	low(011h)
 19626  003C9E  0E11               	movwf	((c:_ind_print)),c
 19627  003CA0  6E5C               	goto	l801
 19628  003CA2  EF53  F01E         	
 19629                           l800:
 19630  003CA6                     	line	333
 19631                           	
 19632                           l801:
 19633  003CA6                     	return	;funcret
 19634  003CA6  0012               	opt stack 0
 19635                           GLOBAL	__end_of_fifo_indicePrint_inc
 19636                           	__end_of_fifo_indicePrint_inc:
 19637  003CA8                     	signat	_fifo_indicePrint_inc,89
 19638                           	global	_fifo_indicePrint_dec
 19639                           
 19640 ;; *************** function _fifo_indicePrint_dec *****************
 19641 ;; Defined at:
 19642 ;;		line 334 in file "fifo.c"
 19643 ;; Parameters:    Size  Location     Type
 19644 ;;		None
 19645 ;; Auto vars:     Size  Location     Type
 19646 ;;		None
 19647 ;; Return value:  Size  Location     Type
 19648 ;;                  1    wreg      void 
 19649 ;; Registers used:
 19650 ;;		wreg, status,2, status,0
 19651 ;; Tracked objects:
 19652 ;;		On entry : 0/0
 19653 ;;		On exit  : 0/0
 19654 ;;		Unchanged: 0/0
 19655 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19656 ;;      Params:         0       0       0       0       0       0       0       0       0       0
 19657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0
 19658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0
 19659 ;;      Totals:         0       0       0       0       0       0       0       0       0       0
 19660 ;;Total ram usage:        0 bytes
 19661 ;; Hardware stack levels used:    1
 19662 ;; Hardware stack levels required when called:    2
 19663 ;; This function calls:
 19664 ;;		Nothing
 19665 ;; This function is called by:
 19666 ;;		_main
 19667 ;; This function uses a non-reentrant model
 19668 ;;
 19669                           psect	text35,class=CODE,space=0,reloc=2,group=0
 19670                           	line	334
 19671                           global __ptext35
 19672                           __ptext35:
 19673  00445C                     psect	text35
 19674                           	file	"fifo.c"
 19675                           	line	334
 19676                           	global	__size_of_fifo_indicePrint_dec
 19677                           	__size_of_fifo_indicePrint_dec	equ	__end_of_fifo_indicePrint_dec-_fifo_indicePrint_dec

 19678  0000                     	
 19679                           _fifo_indicePrint_dec:
 19680  00445C                     ;incstack = 0
 19681                           	opt	stack 28
 19682                           	line	336
 19683                           	
 19684                           l5893:
 19685  00445C                     ;fifo.c: 336:     if( ind_print > 2 )
 19686                           		movlw	03h-1
 19687  00445C  0E02               	cpfsgt	((c:_ind_print)),c
 19688  00445E  645C               	goto	u4421
 19689  004460  EF34  F022         	goto	u4420
 19690  004464  EF36  F022         
 19691                           u4421:
 19692  004468                     	goto	l805
 19693  004468  EF39  F022         u4420:
 19694  00446C                     	line	337
 19695                           	
 19696                           l5895:
 19697  00446C                     ;fifo.c: 337:         ind_print--;
 19698                           	decf	((c:_ind_print)),c
 19699  00446C  065C               	goto	l805
 19700  00446E  EF39  F022         	
 19701                           l804:
 19702  004472                     	line	338
 19703                           	
 19704                           l805:
 19705  004472                     	return	;funcret
 19706  004472  0012               	opt stack 0
 19707                           GLOBAL	__end_of_fifo_indicePrint_dec
 19708                           	__end_of_fifo_indicePrint_dec:
 19709  004474                     	signat	_fifo_indicePrint_dec,89
 19710                           	global	_fifo_indice
 19711                           
 19712 ;; *************** function _fifo_indice *****************
 19713 ;; Defined at:
 19714 ;;		line 307 in file "fifo.c"
 19715 ;; Parameters:    Size  Location     Type
 19716 ;;		None
 19717 ;; Auto vars:     Size  Location     Type
 19718 ;;		None
 19719 ;; Return value:  Size  Location     Type
 19720 ;;                  1    wreg      unsigned char 
 19721 ;; Registers used:
 19722 ;;		wreg, status,2
 19723 ;; Tracked objects:
 19724 ;;		On entry : 0/0
 19725 ;;		On exit  : 0/0
 19726 ;;		Unchanged: 0/0
 19727 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19728 ;;      Params:         0       0       0       0       0       0       0       0       0       0
 19729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0
 19730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0
 19731 ;;      Totals:         0       0       0       0       0       0       0       0       0       0
 19732 ;;Total ram usage:        0 bytes
 19733 ;; Hardware stack levels used:    1
 19734 ;; Hardware stack levels required when called:    2
 19735 ;; This function calls:
 19736 ;;		Nothing
 19737 ;; This function is called by:
 19738 ;;		_main
 19739 ;; This function uses a non-reentrant model
 19740 ;;
 19741                           psect	text36,class=CODE,space=0,reloc=2,group=0
 19742                           	line	307
 19743                           global __ptext36
 19744                           __ptext36:
 19745  004574                     psect	text36
 19746                           	file	"fifo.c"
 19747                           	line	307
 19748                           	global	__size_of_fifo_indice
 19749                           	__size_of_fifo_indice	equ	__end_of_fifo_indice-_fifo_indice
 19750  0000                     	
 19751                           _fifo_indice:
 19752  004574                     ;incstack = 0
 19753                           	opt	stack 28
 19754                           	line	309
 19755                           	
 19756                           l5897:
 19757  004574                     ;fifo.c: 309:     return ( ind_fila );
 19758                           	movf	((c:_ind_fila)),c,w
 19759  004574  505D               	goto	l788
 19760  004576  EFBD  F022         	
 19761                           l5899:
 19762  00457A                     	line	310
 19763                           	
 19764                           l788:
 19765  00457A                     	return	;funcret
 19766  00457A  0012               	opt stack 0
 19767                           GLOBAL	__end_of_fifo_indice
 19768                           	__end_of_fifo_indice:
 19769  00457C                     	signat	_fifo_indice,89
 19770                           	global	_fifo_disponivel
 19771                           
 19772 ;; *************** function _fifo_disponivel *****************
 19773 ;; Defined at:
 19774 ;;		line 312 in file "fifo.c"
 19775 ;; Parameters:    Size  Location     Type
 19776 ;;		None
 19777 ;; Auto vars:     Size  Location     Type
 19778 ;;		None
 19779 ;; Return value:  Size  Location     Type
 19780 ;;                  1    wreg      unsigned char 
 19781 ;; Registers used:
 19782 ;;		wreg, status,2, status,0
 19783 ;; Tracked objects:
 19784 ;;		On entry : 0/0
 19785 ;;		On exit  : 0/0
 19786 ;;		Unchanged: 0/0
 19787 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19788 ;;      Params:         0       0       0       0       0       0       0       0       0       0
 19789 ;;      Locals:         0       0       0       0       0       0       0       0       0       0
 19790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0
 19791 ;;      Totals:         0       0       0       0       0       0       0       0       0       0
 19792 ;;Total ram usage:        0 bytes
 19793 ;; Hardware stack levels used:    1
 19794 ;; Hardware stack levels required when called:    2
 19795 ;; This function calls:
 19796 ;;		Nothing
 19797 ;; This function is called by:
 19798 ;;		_main
 19799 ;; This function uses a non-reentrant model
 19800 ;;
 19801                           psect	text37,class=CODE,space=0,reloc=2,group=0
 19802                           	line	312
 19803                           global __ptext37
 19804                           __ptext37:
 19805  004428                     psect	text37
 19806                           	file	"fifo.c"
 19807                           	line	312
 19808                           	global	__size_of_fifo_disponivel
 19809                           	__size_of_fifo_disponivel	equ	__end_of_fifo_disponivel-_fifo_disponivel
 19810  0000                     	
 19811                           _fifo_disponivel:
 19812  004428                     ;incstack = 0
 19813                           	opt	stack 28
 19814                           	line	314
 19815                           	
 19816                           l5879:
 19817  004428                     ;fifo.c: 314:     return( ind_fila < 18 );
 19818                           		movlw	012h-1
 19819  004428  0E11               	cpfsgt	((c:_ind_fila)),c
 19820  00442A  645D               	goto	u4381
 19821  00442C  EF1A  F022         	goto	u4380
 19822  004430  EF1D  F022         
 19823                           u4381:
 19824  004434                     	movlw	1
 19825  004434  0E01               	goto	u4390
 19826  004436  EF1E  F022         u4380:
 19827  00443A                     	movlw	0
 19828  00443A  0E00               u4390:
 19829  00443C                     	goto	l791
 19830  00443C  EF20  F022         	
 19831                           l5881:
 19832  004440                     	line	315
 19833                           	
 19834                           l791:
 19835  004440                     	return	;funcret
 19836  004440  0012               	opt stack 0
 19837                           GLOBAL	__end_of_fifo_disponivel
 19838                           	__end_of_fifo_disponivel:
 19839  004442                     	signat	_fifo_disponivel,89
 19840                           	global	_fifo_delete
 19841                           
 19842 ;; *************** function _fifo_delete *****************
 19843 ;; Defined at:
 19844 ;;		line 183 in file "fifo.c"
 19845 ;; Parameters:    Size  Location     Type
 19846 ;;		None
 19847 ;; Auto vars:     Size  Location     Type
 19848 ;;		None
 19849 ;; Return value:  Size  Location     Type
 19850 ;;                  1    wreg      void 
 19851 ;; Registers used:
 19852 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19853 ;; Tracked objects:
 19854 ;;		On entry : 0/0
 19855 ;;		On exit  : 0/0
 19856 ;;		Unchanged: 0/0
 19857 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19858 ;;      Params:         0       0       0       0       0       0       0       0       0       0
 19859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0
 19860 ;;      Temps:          2       0       0       0       0       0       0       0       0       0
 19861 ;;      Totals:         2       0       0       0       0       0       0       0       0       0
 19862 ;;Total ram usage:        2 bytes
 19863 ;; Hardware stack levels used:    1
 19864 ;; Hardware stack levels required when called:    5
 19865 ;; This function calls:
 19866 ;;		_alt_atuador
 19867 ;;		_codifica
 19868 ;;		_decodifica
 19869 ;;		_fifo_alinharPrint
 19870 ;; This function is called by:
 19871 ;;		_main
 19872 ;; This function uses a non-reentrant model
 19873 ;;
 19874                           psect	text38,class=CODE,space=0,reloc=2,group=0
 19875                           	line	183
 19876                           global __ptext38
 19877                           __ptext38:
 19878  0034AA                     psect	text38
 19879                           	file	"fifo.c"
 19880                           	line	183
 19881                           	global	__size_of_fifo_delete
 19882                           	__size_of_fifo_delete	equ	__end_of_fifo_delete-_fifo_delete
 19883  0000                     	
 19884                           _fifo_delete:
 19885  0034AA                     ;incstack = 0
 19886                           	opt	stack 25
 19887                           	line	185
 19888                           	
 19889                           l5901:
 19890  0034AA                     ;fifo.c: 185:     if(ind_fila)
 19891                           	movf	((c:_ind_fila)),c,w
 19892  0034AA  505D               	btfsc	status,2
 19893  0034AC  B4D8               	goto	u4431
 19894  0034AE  EF5B  F01A         	goto	u4430
 19895  0034B2  EF5D  F01A         u4431:
 19896  0034B6                     	goto	l5913
 19897  0034B6  EFAE  F01A         u4430:
 19898  0034BA                     	line	187
 19899                           	
 19900                           l5903:
 19901  0034BA                     ;fifo.c: 186:     {;fifo.c: 187:         if(ind_fila > 2)
 19902                           		movlw	03h-1
 19903  0034BA  0E02               	cpfsgt	((c:_ind_fila)),c
 19904  0034BC  645D               	goto	u4441
 19905  0034BE  EF63  F01A         	goto	u4440
 19906  0034C2  EF65  F01A         
 19907                           u4441:
 19908  0034C6                     	goto	l5907
 19909  0034C6  EF68  F01A         u4440:
 19910  0034CA                     	line	188
 19911                           	
 19912                           l5905:
 19913  0034CA                     ;fifo.c: 188:             ind_fila--;
 19914                           	decf	((c:_ind_fila)),c
 19915  0034CA  065D               	goto	l5907
 19916  0034CC  EF68  F01A         	
 19917                           l729:
 19918  0034D0                     	line	189
 19919                           	
 19920                           l5907:
 19921  0034D0                     ;fifo.c: 189:         if(fila[ind_fila] > 0xDC)
 19922                           	movf	((c:_ind_fila)),c,w
 19923  0034D0  505D               	mullw	01h
 19924  0034D2  0D01               	movlw	low(_fila)
 19925  0034D4  0E15               	addwf	(prodl),c,w
 19926  0034D6  24F3               	movwf	c:fsr2l
 19927  0034D8  6ED9               	movlw	high(_fila)
 19928  0034DA  0E00               	addwfc	prod+1,w
 19929  0034DC  20F4               	movwf	1+c:fsr2l
 19930  0034DE  6EDA               		movlw	0DDh-1
 19931  0034E0  0EDC               	cpfsgt	indf2
 19932  0034E2  64DF               	goto	u4451
 19933  0034E4  EF76  F01A         	goto	u4450
 19934  0034E8  EF78  F01A         
 19935                           u4451:
 19936  0034EC                     	goto	l5911
 19937  0034EC  EFA2  F01A         u4450:
 19938  0034F0                     	line	191
 19939                           	
 19940                           l5909:
 19941  0034F0                     ;fifo.c: 190:         {;fifo.c: 191:             decodifica(&fila[ind_fila]);
 19942                           	movf	((c:_ind_fila)),c,w
 19943  0034F0  505D               	mullw	01h
 19944  0034F2  0D01               	movlw	low(_fila)
 19945  0034F4  0E15               	addwf	(prodl),c,w
 19946  0034F6  24F3               	movwf	((c:decodifica@d)),c
 19947  0034F8  6E27               	movlw	high(_fila)
 19948  0034FA  0E00               	addwfc	prod+1,w
 19949  0034FC  20F4               	movwf	1+((c:decodifica@d)),c
 19950  0034FE  6E28               	call	_decodifica	;wreg free
 19951  003500  ECE7  F014         	line	192
 19952                           ;fifo.c: 192:             alt_atuador(fila[ind_fila] & ~0x20);
 19953                           	movf	((c:_ind_fila)),c,w
 19954  003504  505D               	mullw	01h
 19955  003506  0D01               	movlw	low(_fila)
 19956  003508  0E15               	addwf	(prodl),c,w
 19957  00350A  24F3               	movwf	c:fsr2l
 19958  00350C  6ED9               	movlw	high(_fila)
 19959  00350E  0E00               	addwfc	prod+1,w
 19960  003510  20F4               	movwf	1+c:fsr2l
 19961  003512  6EDA               	movf	indf2,w
 19962  003514  50DF               	andlw	low(0DFh)
 19963  003516  0BDF               	
 19964                           	call	_alt_atuador
 19965  003518  EC0D  F01B         	line	193
 19966                           ;fifo.c: 193:             codifica('a',fila[ind_fila]);
 19967                           	movf	((c:_ind_fila)),c,w
 19968  00351C  505D               	mullw	01h
 19969  00351E  0D01               	movlw	low(_fila)
 19970  003520  0E15               	addwf	(prodl),c,w
 19971  003522  24F3               	movwf	c:fsr2l
 19972  003524  6ED9               	movlw	high(_fila)
 19973  003526  0E00               	addwfc	prod+1,w
 19974  003528  20F4               	movwf	1+c:fsr2l
 19975  00352A  6EDA               	movf	indf2,w
 19976  00352C  50DF               	movwf	(??_fifo_delete+0+0)&0ffh,c
 19977  00352E  6E36               	clrf	(??_fifo_delete+0+0+1)&0ffh,c
 19978  003530  6A37               
 19979                           	movff	??_fifo_delete+0+0,(c:codifica@dado)
 19980  003532  C036  F027         	movff	??_fifo_delete+0+1,(c:codifica@dado+1)
 19981  003536  C037  F028         	movlw	(061h)&0ffh
 19982  00353A  0E61               	
 19983                           	call	_codifica
 19984  00353C  EC33  F014         	goto	l5911
 19985  003540  EFA2  F01A         	line	194
 19986                           ;fifo.c: 194:         }
 19987                           	
 19988                           l730:
 19989  003544                     	line	195
 19990                           	
 19991                           l5911:
 19992  003544                     ;fifo.c: 195:         fila[ind_fila] = 0;
 19993                           	movf	((c:_ind_fila)),c,w
 19994  003544  505D               	mullw	01h
 19995  003546  0D01               	movlw	low(_fila)
 19996  003548  0E15               	addwf	(prodl),c,w
 19997  00354A  24F3               	movwf	c:fsr2l
 19998  00354C  6ED9               	movlw	high(_fila)
 19999  00354E  0E00               	addwfc	prod+1,w
 20000  003550  20F4               	movwf	1+c:fsr2l
 20001  003552  6EDA               	movlw	low(0)
 20002  003554  0E00               	movwf	indf2
 20003  003556  6EDF               	goto	l5913
 20004  003558  EFAE  F01A         	line	196
 20005                           ;fifo.c: 196:     }
 20006                           	
 20007                           l728:
 20008  00355C                     	line	197
 20009                           	
 20010                           l5913:
 20011  00355C                     ;fifo.c: 197:     fifo_alinharPrint();
 20012                           	call	_fifo_alinharPrint	;wreg free
 20013  00355C  ECC5  F016         	line	198
 20014                           	
 20015                           l731:
 20016  003560                     	return	;funcret
 20017  003560  0012               	opt stack 0
 20018                           GLOBAL	__end_of_fifo_delete
 20019                           	__end_of_fifo_delete:
 20020  003562                     	signat	_fifo_delete,89
 20021                           	global	_decodifica
 20022                           
 20023 ;; *************** function _decodifica *****************
 20024 ;; Defined at:
 20025 ;;		line 228 in file "fifo.c"
 20026 ;; Parameters:    Size  Location     Type
 20027 ;;  d               2    0[COMRAM] PTR unsigned char 
 20028 ;;		 -> printExec@passo(1), fifo_print@comando(1), fila(18), main@vetor_aux(16), 
 20029 ;;		 -> main@auxPasso(1), 
 20030 ;; Auto vars:     Size  Location     Type
 20031 ;;		None
 20032 ;; Return value:  Size  Location     Type
 20033 ;;                  1    wreg      void 
 20034 ;; Registers used:
 20035 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20036 ;; Tracked objects:
 20037 ;;		On entry : 0/0
 20038 ;;		On exit  : 0/0
 20039 ;;		Unchanged: 0/0
 20040 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20041 ;;      Params:         2       0       0       0       0       0       0       0       0       0
 20042 ;;      Locals:         0       0       0       0       0       0       0       0       0       0
 20043 ;;      Temps:          2       0       0       0       0       0       0       0       0       0
 20044 ;;      Totals:         4       0       0       0       0       0       0       0       0       0
 20045 ;;Total ram usage:        4 bytes
 20046 ;; Hardware stack levels used:    1
 20047 ;; Hardware stack levels required when called:    2
 20048 ;; This function calls:
 20049 ;;		Nothing
 20050 ;; This function is called by:
 20051 ;;		_main
 20052 ;;		_fifo_delete
 20053 ;;		_fifo_print
 20054 ;;		_printExec
 20055 ;; This function uses a non-reentrant model
 20056 ;;
 20057                           psect	text39,class=CODE,space=0,reloc=2,group=0
 20058                           	line	228
 20059                           global __ptext39
 20060                           __ptext39:
 20061  0029CE                     psect	text39
 20062                           	file	"fifo.c"
 20063                           	line	228
 20064                           	global	__size_of_decodifica
 20065                           	__size_of_decodifica	equ	__end_of_decodifica-_decodifica
 20066  0000                     	
 20067                           _decodifica:
 20068  0029CE                     ;incstack = 0
 20069                           	opt	stack 27
 20070                           	line	230
 20071                           	
 20072                           l5211:
 20073  0029CE                     ;fifo.c: 228: void decodifica( unsigned char *d );fifo.c: 229: {;fifo.c: 230:     if( *d
                                  <= 100 )
 20074                           	movff	(c:decodifica@d),fsr2l
 20075  0029CE  C027  FFD9         	movff	(c:decodifica@d+1),fsr2h
 20076  0029D2  C028  FFDA         		movlw	065h-0
 20077  0029D6  0E65               	cpfslt	indf2
 20078  0029D8  60DF               	goto	u3531
 20079  0029DA  EFF1  F014         	goto	u3530
 20080  0029DE  EFF3  F014         
 20081                           u3531:
 20082  0029E2                     	goto	l5215
 20083  0029E2  EFF7  F014         u3530:
 20084  0029E6                     	goto	l768
 20085  0029E6  EF90  F015         	line	233
 20086                           	
 20087                           l5213:
 20088  0029EA                     ;fifo.c: 231:     {;fifo.c: 233:     }
 20089                           	goto	l768
 20090  0029EA  EF90  F015         	line	234
 20091                           ;fifo.c: 234:     else if( *d <= 220 )
 20092                           	
 20093                           l753:
 20094  0029EE                     	
 20095                           l5215:
 20096  0029EE                     	movff	(c:decodifica@d),fsr2l
 20097  0029EE  C027  FFD9         	movff	(c:decodifica@d+1),fsr2h
 20098  0029F2  C028  FFDA         		movlw	0DDh-0
 20099  0029F6  0EDD               	cpfslt	indf2
 20100  0029F8  60DF               	goto	u3541
 20101  0029FA  EF01  F015         	goto	u3540
 20102  0029FE  EF03  F015         
 20103                           u3541:
 20104  002A02                     	goto	l5239
 20105  002A02  EF57  F015         u3540:
 20106  002A06                     	line	236
 20107                           	
 20108                           l5217:
 20109  002A06                     ;fifo.c: 235:     {;fifo.c: 236:         *d -= 0x64;
 20110                           	movff	(c:decodifica@d),fsr2l
 20111  002A06  C027  FFD9         	movff	(c:decodifica@d+1),fsr2h
 20112  002A0A  C028  FFDA         	movlw	064h
 20113  002A0E  0E64               	subwf	indf2
 20114  002A10  5EDF               	line	237
 20115                           ;fifo.c: 237:     } else
 20116                           	goto	l768
 20117  002A12  EF90  F015         	
 20118                           l755:
 20119  002A16                     	line	239
 20120                           ;fifo.c: 238:     {;fifo.c: 239:         switch( *d )
 20121                           	goto	l5239
 20122  002A16  EF57  F015         	line	241
 20123                           ;fifo.c: 240:         {;fifo.c: 241:             case 221: *d = 'A'; break;
 20124                           	
 20125                           l758:
 20126  002A1A                     	
 20127                           l5219:
 20128  002A1A                     	movff	(c:decodifica@d),fsr2l
 20129  002A1A  C027  FFD9         	movff	(c:decodifica@d+1),fsr2h
 20130  002A1E  C028  FFDA         	movlw	low(041h)
 20131  002A22  0E41               	movwf	indf2
 20132  002A24  6EDF               	goto	l768
 20133  002A26  EF90  F015         	line	242
 20134                           ;fifo.c: 242:             case 222: *d = 'a'; break;
 20135                           	
 20136                           l760:
 20137  002A2A                     	
 20138                           l5221:
 20139  002A2A                     	movff	(c:decodifica@d),fsr2l
 20140  002A2A  C027  FFD9         	movff	(c:decodifica@d+1),fsr2h
 20141  002A2E  C028  FFDA         	movlw	low(061h)
 20142  002A32  0E61               	movwf	indf2
 20143  002A34  6EDF               	goto	l768
 20144  002A36  EF90  F015         	line	243
 20145                           ;fifo.c: 243:             case 223: *d = 'B'; break;
 20146                           	
 20147                           l761:
 20148  002A3A                     	
 20149                           l5223:
 20150  002A3A                     	movff	(c:decodifica@d),fsr2l
 20151  002A3A  C027  FFD9         	movff	(c:decodifica@d+1),fsr2h
 20152  002A3E  C028  FFDA         	movlw	low(042h)
 20153  002A42  0E42               	movwf	indf2
 20154  002A44  6EDF               	goto	l768
 20155  002A46  EF90  F015         	line	244
 20156                           ;fifo.c: 244:             case 224: *d = 'b'; break;
 20157                           	
 20158                           l762:
 20159  002A4A                     	
 20160                           l5225:
 20161  002A4A                     	movff	(c:decodifica@d),fsr2l
 20162  002A4A  C027  FFD9         	movff	(c:decodifica@d+1),fsr2h
 20163  002A4E  C028  FFDA         	movlw	low(062h)
 20164  002A52  0E62               	movwf	indf2
 20165  002A54  6EDF               	goto	l768
 20166  002A56  EF90  F015         	line	245
 20167                           ;fifo.c: 245:             case 225: *d = 'C'; break;
 20168                           	
 20169                           l763:
 20170  002A5A                     	
 20171                           l5227:
 20172  002A5A                     	movff	(c:decodifica@d),fsr2l
 20173  002A5A  C027  FFD9         	movff	(c:decodifica@d+1),fsr2h
 20174  002A5E  C028  FFDA         	movlw	low(043h)
 20175  002A62  0E43               	movwf	indf2
 20176  002A64  6EDF               	goto	l768
 20177  002A66  EF90  F015         	line	246
 20178                           ;fifo.c: 246:             case 226: *d = 'c'; break;
 20179                           	
 20180                           l764:
 20181  002A6A                     	
 20182                           l5229:
 20183  002A6A                     	movff	(c:decodifica@d),fsr2l
 20184  002A6A  C027  FFD9         	movff	(c:decodifica@d+1),fsr2h
 20185  002A6E  C028  FFDA         	movlw	low(063h)
 20186  002A72  0E63               	movwf	indf2
 20187  002A74  6EDF               	goto	l768
 20188  002A76  EF90  F015         	line	247
 20189                           ;fifo.c: 247:             case 227: *d = 'D'; break;
 20190                           	
 20191                           l765:
 20192  002A7A                     	
 20193                           l5231:
 20194  002A7A                     	movff	(c:decodifica@d),fsr2l
 20195  002A7A  C027  FFD9         	movff	(c:decodifica@d+1),fsr2h
 20196  002A7E  C028  FFDA         	movlw	low(044h)
 20197  002A82  0E44               	movwf	indf2
 20198  002A84  6EDF               	goto	l768
 20199  002A86  EF90  F015         	line	248
 20200                           ;fifo.c: 248:             case 228: *d = 'd'; break;
 20201                           	
 20202                           l766:
 20203  002A8A                     	
 20204                           l5233:
 20205  002A8A                     	movff	(c:decodifica@d),fsr2l
 20206  002A8A  C027  FFD9         	movff	(c:decodifica@d+1),fsr2h
 20207  002A8E  C028  FFDA         	movlw	low(064h)
 20208  002A92  0E64               	movwf	indf2
 20209  002A94  6EDF               	goto	l768
 20210  002A96  EF90  F015         	line	249
 20211                           ;fifo.c: 249:             case 254: *d = 0 ; break;
 20212                           	
 20213                           l767:
 20214  002A9A                     	
 20215                           l5235:
 20216  002A9A                     	movff	(c:decodifica@d),fsr2l
 20217  002A9A  C027  FFD9         	movff	(c:decodifica@d+1),fsr2h
 20218  002A9E  C028  FFDA         	movlw	low(0)
 20219  002AA2  0E00               	movwf	indf2
 20220  002AA4  6EDF               	goto	l768
 20221  002AA6  EF90  F015         	line	250
 20222                           	
 20223                           l5237:
 20224  002AAA                     ;fifo.c: 250:         }
 20225                           	goto	l768
 20226  002AAA  EF90  F015         	
 20227                           l757:
 20228  002AAE                     	
 20229                           l5239:
 20230  002AAE                     	movff	(c:decodifica@d),fsr2l
 20231  002AAE  C027  FFD9         	movff	(c:decodifica@d+1),fsr2h
 20232  002AB2  C028  FFDA         	movf	indf2,w
 20233  002AB6  50DF               	movwf	(??_decodifica+0+0)&0ffh,c
 20234  002AB8  6E29               	clrf	(??_decodifica+0+0+1)&0ffh,c
 20235  002ABA  6A2A               
 20236                           	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
 20237                           ; Switch size 1, requested type "space"
 20238                           ; Number of cases is 1, Range of values is 0 to 0
 20239                           ; switch strategies available:
 20240                           ; Name         Instructions Cycles
 20241                           ; simple_byte            4     3 (average)
 20242                           ;	Chosen strategy is simple_byte
 20243                           
 20244                           	movf ??_decodifica+0+1,c,w
 20245  002ABC  502A               	xorlw	0^0	; case 0
 20246  002ABE  0A00               	skipnz
 20247  002AC0  B4D8               	goto	l7975
 20248  002AC2  EF65  F015         	goto	l768
 20249  002AC6  EF90  F015         	
 20250                           l7975:
 20251  002ACA                     ; Switch size 1, requested type "space"
 20252                           ; Number of cases is 9, Range of values is 221 to 254
 20253                           ; switch strategies available:
 20254                           ; Name         Instructions Cycles
 20255                           ; simple_byte           28    15 (average)
 20256                           ;	Chosen strategy is simple_byte
 20257                           
 20258                           	movf ??_decodifica+0+0,c,w
 20259  002ACA  5029               	xorlw	221^0	; case 221
 20260  002ACC  0ADD               	skipnz
 20261  002ACE  B4D8               	goto	l5219
 20262  002AD0  EF0D  F015         	xorlw	222^221	; case 222
 20263  002AD4  0A03               	skipnz
 20264  002AD6  B4D8               	goto	l5221
 20265  002AD8  EF15  F015         	xorlw	223^222	; case 223
 20266  002ADC  0A01               	skipnz
 20267  002ADE  B4D8               	goto	l5223
 20268  002AE0  EF1D  F015         	xorlw	224^223	; case 224
 20269  002AE4  0A3F               	skipnz
 20270  002AE6  B4D8               	goto	l5225
 20271  002AE8  EF25  F015         	xorlw	225^224	; case 225
 20272  002AEC  0A01               	skipnz
 20273  002AEE  B4D8               	goto	l5227
 20274  002AF0  EF2D  F015         	xorlw	226^225	; case 226
 20275  002AF4  0A03               	skipnz
 20276  002AF6  B4D8               	goto	l5229
 20277  002AF8  EF35  F015         	xorlw	227^226	; case 227
 20278  002AFC  0A01               	skipnz
 20279  002AFE  B4D8               	goto	l5231
 20280  002B00  EF3D  F015         	xorlw	228^227	; case 228
 20281  002B04  0A07               	skipnz
 20282  002B06  B4D8               	goto	l5233
 20283  002B08  EF45  F015         	xorlw	254^228	; case 254
 20284  002B0C  0A1A               	skipnz
 20285  002B0E  B4D8               	goto	l5235
 20286  002B10  EF4D  F015         	goto	l768
 20287  002B14  EF90  F015         
 20288                           	
 20289                           l759:
 20290  002B18                     	goto	l768
 20291  002B18  EF90  F015         	line	251
 20292                           ;fifo.c: 251:     }
 20293                           	
 20294                           l756:
 20295  002B1C                     	goto	l768
 20296  002B1C  EF90  F015         	
 20297                           l754:
 20298  002B20                     	line	252
 20299                           	
 20300                           l768:
 20301  002B20                     	return	;funcret
 20302  002B20  0012               	opt stack 0
 20303                           GLOBAL	__end_of_decodifica
 20304                           	__end_of_decodifica:
 20305  002B22                     	signat	_decodifica,4217
 20306                           	global	_alt_atuador
 20307                           
 20308 ;; *************** function _alt_atuador *****************
 20309 ;; Defined at:
 20310 ;;		line 92 in file "fifo.c"
 20311 ;; Parameters:    Size  Location     Type
 20312 ;;  tecla           1    wreg     unsigned char 
 20313 ;; Auto vars:     Size  Location     Type
 20314 ;;  tecla           1    2[COMRAM] unsigned char 
 20315 ;; Return value:  Size  Location     Type
 20316 ;;                  1    wreg      void 
 20317 ;; Registers used:
 20318 ;;		wreg, status,2, status,0
 20319 ;; Tracked objects:
 20320 ;;		On entry : 0/0
 20321 ;;		On exit  : 0/0
 20322 ;;		Unchanged: 0/0
 20323 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20324 ;;      Params:         0       0       0       0       0       0       0       0       0       0
 20325 ;;      Locals:         1       0       0       0       0       0       0       0       0       0
 20326 ;;      Temps:          2       0       0       0       0       0       0       0       0       0
 20327 ;;      Totals:         3       0       0       0       0       0       0       0       0       0
 20328 ;;Total ram usage:        3 bytes
 20329 ;; Hardware stack levels used:    1
 20330 ;; Hardware stack levels required when called:    2
 20331 ;; This function calls:
 20332 ;;		Nothing
 20333 ;; This function is called by:
 20334 ;;		_main
 20335 ;;		_manipula_atuadores_init
 20336 ;;		_fifo_delete
 20337 ;; This function uses a non-reentrant model
 20338 ;;
 20339                           psect	text40,class=CODE,space=0,reloc=2,group=0
 20340                           	line	92
 20341                           global __ptext40
 20342                           __ptext40:
 20343  00361A                     psect	text40
 20344                           	file	"fifo.c"
 20345                           	line	92
 20346                           	global	__size_of_alt_atuador
 20347                           	__size_of_alt_atuador	equ	__end_of_alt_atuador-_alt_atuador
 20348  0000                     	
 20349                           _alt_atuador:
 20350  00361A                     ;incstack = 0
 20351                           	opt	stack 27
 20352                           ;alt_atuador@tecla stored from wreg
 20353                           	movwf	((c:alt_atuador@tecla)),c
 20354  00361A  6E29               	line	94
 20355                           	
 20356                           l5245:
 20357  00361C                     ;fifo.c: 92: void alt_atuador( char tecla );fifo.c: 93: {;fifo.c: 94:     switch(tecla)

 20358                           	goto	l5249
 20359  00361C  EF3E  F01B         	line	96
 20360                           ;fifo.c: 95:     {;fifo.c: 96:         case 'A': atuador.A = atuador.A ^ 1; break;
 20361                           	
 20362                           l685:
 20363  003620                     	btfss	((c:_atuador)),c,0
 20364  003620  A013               	goto	u3551
 20365  003622  EF15  F01B         	goto	u3550
 20366  003626  EF18  F01B         u3551:
 20367  00362A                     	bsf	((c:_atuador)),c,0
 20368  00362A  8013               	goto	u3565
 20369  00362C  EF19  F01B         u3550:
 20370  003630                     	bcf	((c:_atuador)),c,0
 20371  003630  9013               u3565:
 20372  003632                     	goto	l690
 20373  003632  EF5B  F01B         	line	97
 20374                           ;fifo.c: 97:         case 'B': atuador.B = atuador.B ^ 1; break;
 20375                           	
 20376                           l687:
 20377  003636                     	btfss	((c:_atuador)),c,1
 20378  003636  A213               	goto	u3571
 20379  003638  EF20  F01B         	goto	u3570
 20380  00363C  EF23  F01B         u3571:
 20381  003640                     	bsf	((c:_atuador)),c,1
 20382  003640  8213               	goto	u3585
 20383  003642  EF24  F01B         u3570:
 20384  003646                     	bcf	((c:_atuador)),c,1
 20385  003646  9213               u3585:
 20386  003648                     	goto	l690
 20387  003648  EF5B  F01B         	line	98
 20388                           ;fifo.c: 98:         case 'C': atuador.C = atuador.C ^ 1; break;
 20389                           	
 20390                           l688:
 20391  00364C                     	btfss	((c:_atuador)),c,2
 20392  00364C  A413               	goto	u3591
 20393  00364E  EF2B  F01B         	goto	u3590
 20394  003652  EF2E  F01B         u3591:
 20395  003656                     	bsf	((c:_atuador)),c,2
 20396  003656  8413               	goto	u3605
 20397  003658  EF2F  F01B         u3590:
 20398  00365C                     	bcf	((c:_atuador)),c,2
 20399  00365C  9413               u3605:
 20400  00365E                     	goto	l690
 20401  00365E  EF5B  F01B         	line	99
 20402                           ;fifo.c: 99:         case 'D': atuador.D = atuador.D ^ 1; break;
 20403                           	
 20404                           l689:
 20405  003662                     	btfss	((c:_atuador)),c,3
 20406  003662  A613               	goto	u3611
 20407  003664  EF36  F01B         	goto	u3610
 20408  003668  EF39  F01B         u3611:
 20409  00366C                     	bsf	((c:_atuador)),c,3
 20410  00366C  8613               	goto	u3625
 20411  00366E  EF3A  F01B         u3610:
 20412  003672                     	bcf	((c:_atuador)),c,3
 20413  003672  9613               u3625:
 20414  003674                     	goto	l690
 20415  003674  EF5B  F01B         	line	100
 20416                           	
 20417                           l5247:
 20418  003678                     ;fifo.c: 100:     }
 20419                           	goto	l690
 20420  003678  EF5B  F01B         	
 20421                           l684:
 20422  00367C                     	
 20423                           l5249:
 20424  00367C                     	movf	((c:alt_atuador@tecla)),c,w
 20425  00367C  5029               	movwf	(??_alt_atuador+0+0)&0ffh,c
 20426  00367E  6E27               	clrf	(??_alt_atuador+0+0+1)&0ffh,c
 20427  003680  6A28               
 20428                           	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
 20429                           ; Switch size 1, requested type "space"
 20430                           ; Number of cases is 1, Range of values is 0 to 0
 20431                           ; switch strategies available:
 20432                           ; Name         Instructions Cycles
 20433                           ; simple_byte            4     3 (average)
 20434                           ;	Chosen strategy is simple_byte
 20435                           
 20436                           	movf ??_alt_atuador+0+1,c,w
 20437  003682  5028               	xorlw	0^0	; case 0
 20438  003684  0A00               	skipnz
 20439  003686  B4D8               	goto	l7977
 20440  003688  EF48  F01B         	goto	l690
 20441  00368C  EF5B  F01B         	
 20442                           l7977:
 20443  003690                     ; Switch size 1, requested type "space"
 20444                           ; Number of cases is 4, Range of values is 65 to 68
 20445                           ; switch strategies available:
 20446                           ; Name         Instructions Cycles
 20447                           ; simple_byte           13     7 (average)
 20448                           ;	Chosen strategy is simple_byte
 20449                           
 20450                           	movf ??_alt_atuador+0+0,c,w
 20451  003690  5027               	xorlw	65^0	; case 65
 20452  003692  0A41               	skipnz
 20453  003694  B4D8               	goto	l685
 20454  003696  EF10  F01B         	xorlw	66^65	; case 66
 20455  00369A  0A03               	skipnz
 20456  00369C  B4D8               	goto	l687
 20457  00369E  EF1B  F01B         	xorlw	67^66	; case 67
 20458  0036A2  0A01               	skipnz
 20459  0036A4  B4D8               	goto	l688
 20460  0036A6  EF26  F01B         	xorlw	68^67	; case 68
 20461  0036AA  0A07               	skipnz
 20462  0036AC  B4D8               	goto	l689
 20463  0036AE  EF31  F01B         	goto	l690
 20464  0036B2  EF5B  F01B         
 20465                           	
 20466                           l686:
 20467  0036B6                     	line	101
 20468                           	
 20469                           l690:
 20470  0036B6                     	return	;funcret
 20471  0036B6  0012               	opt stack 0
 20472                           GLOBAL	__end_of_alt_atuador
 20473                           	__end_of_alt_atuador:
 20474  0036B8                     	signat	_alt_atuador,4217
 20475                           	global	_fifo_adrs
 20476                           
 20477 ;; *************** function _fifo_adrs *****************
 20478 ;; Defined at:
 20479 ;;		line 178 in file "fifo.c"
 20480 ;; Parameters:    Size  Location     Type
 20481 ;;		None
 20482 ;; Auto vars:     Size  Location     Type
 20483 ;;		None
 20484 ;; Return value:  Size  Location     Type
 20485 ;;                  2    0[COMRAM] PTR unsigned char 
 20486 ;; Registers used:
 20487 ;;		wreg, status,2, status,0
 20488 ;; Tracked objects:
 20489 ;;		On entry : 0/0
 20490 ;;		On exit  : 0/0
 20491 ;;		Unchanged: 0/0
 20492 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20493 ;;      Params:         2       0       0       0       0       0       0       0       0       0
 20494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0
 20495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0
 20496 ;;      Totals:         2       0       0       0       0       0       0       0       0       0
 20497 ;;Total ram usage:        2 bytes
 20498 ;; Hardware stack levels used:    1
 20499 ;; Hardware stack levels required when called:    2
 20500 ;; This function calls:
 20501 ;;		Nothing
 20502 ;; This function is called by:
 20503 ;;		_main
 20504 ;; This function uses a non-reentrant model
 20505 ;;
 20506                           psect	text41,class=CODE,space=0,reloc=2,group=0
 20507                           	line	178
 20508                           global __ptext41
 20509                           __ptext41:
 20510  004524                     psect	text41
 20511                           	file	"fifo.c"
 20512                           	line	178
 20513                           	global	__size_of_fifo_adrs
 20514                           	__size_of_fifo_adrs	equ	__end_of_fifo_adrs-_fifo_adrs
 20515  0000                     	
 20516                           _fifo_adrs:
 20517  004524                     ;incstack = 0
 20518                           	opt	stack 28
 20519                           	line	180
 20520                           	
 20521                           l5981:
 20522  004524                     ;fifo.c: 180:     return fila;
 20523                           		movlw	low(_fila)
 20524  004524  0E15               	movwf	((c:?_fifo_adrs)),c
 20525  004526  6E27               	movlw	high(_fila)
 20526  004528  0E00               	movwf	((c:?_fifo_adrs+1)),c
 20527  00452A  6E28               
 20528                           	goto	l725
 20529  00452C  EF98  F022         	
 20530                           l5983:
 20531  004530                     	line	181
 20532                           	
 20533                           l725:
 20534  004530                     	return	;funcret
 20535  004530  0012               	opt stack 0
 20536                           GLOBAL	__end_of_fifo_adrs
 20537                           	__end_of_fifo_adrs:
 20538  004532                     	signat	_fifo_adrs,90
 20539                           	global	_fifo_add_tempo
 20540                           
 20541 ;; *************** function _fifo_add_tempo *****************
 20542 ;; Defined at:
 20543 ;;		line 269 in file "fifo.c"
 20544 ;; Parameters:    Size  Location     Type
 20545 ;;  t               1    wreg     const unsigned char 
 20546 ;; Auto vars:     Size  Location     Type
 20547 ;;  t               1   15[COMRAM] const unsigned char 
 20548 ;; Return value:  Size  Location     Type
 20549 ;;                  1    wreg      void 
 20550 ;; Registers used:
 20551 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20552 ;; Tracked objects:
 20553 ;;		On entry : 0/0
 20554 ;;		On exit  : 0/0
 20555 ;;		Unchanged: 0/0
 20556 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20557 ;;      Params:         0       0       0       0       0       0       0       0       0       0
 20558 ;;      Locals:         1       0       0       0       0       0       0       0       0       0
 20559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0
 20560 ;;      Totals:         1       0       0       0       0       0       0       0       0       0
 20561 ;;Total ram usage:        1 bytes
 20562 ;; Hardware stack levels used:    1
 20563 ;; Hardware stack levels required when called:    5
 20564 ;; This function calls:
 20565 ;;		_codifica
 20566 ;;		_fifo_alinharPrint
 20567 ;; This function is called by:
 20568 ;;		_main
 20569 ;; This function uses a non-reentrant model
 20570 ;;
 20571                           psect	text42,class=CODE,space=0,reloc=2,group=0
 20572                           	line	269
 20573                           global __ptext42
 20574                           __ptext42:
 20575  003B0C                     psect	text42
 20576                           	file	"fifo.c"
 20577                           	line	269
 20578                           	global	__size_of_fifo_add_tempo
 20579                           	__size_of_fifo_add_tempo	equ	__end_of_fifo_add_tempo-_fifo_add_tempo
 20580  0000                     	
 20581                           _fifo_add_tempo:
 20582  003B0C                     ;incstack = 0
 20583                           	opt	stack 25
 20584                           ;fifo_add_tempo@t stored from wreg
 20585                           	movwf	((c:fifo_add_tempo@t)),c
 20586  003B0C  6E36               	line	271
 20587                           	
 20588                           l5681:
 20589  003B0E                     ;fifo.c: 269: void fifo_add_tempo(const char t);fifo.c: 270: {;fifo.c: 271:     if(ind_f
                                 ila < 18)
 20590                           		movlw	012h-0
 20591  003B0E  0E12               	cpfslt	((c:_ind_fila)),c
 20592  003B10  605D               	goto	u4151
 20593  003B12  EF8D  F01D         	goto	u4150
 20594  003B16  EF8F  F01D         
 20595                           u4151:
 20596  003B1A                     	goto	l5693
 20597  003B1A  EFB7  F01D         u4150:
 20598  003B1E                     	line	273
 20599                           	
 20600                           l5683:
 20601  003B1E                     ;fifo.c: 272:     {;fifo.c: 273:         if(t)
 20602                           	movf	((c:fifo_add_tempo@t)),c,w
 20603  003B1E  5036               	btfsc	status,2
 20604  003B20  B4D8               	goto	u4161
 20605  003B22  EF95  F01D         	goto	u4160
 20606  003B26  EF97  F01D         u4161:
 20607  003B2A                     	goto	l5693
 20608  003B2A  EFB7  F01D         u4160:
 20609  003B2E                     	line	275
 20610                           	
 20611                           l5685:
 20612  003B2E                     ;fifo.c: 274:         {;fifo.c: 275:             codifica('t', &t);
 20613                           		movlw	low(fifo_add_tempo@t)
 20614  003B2E  0E36               	movwf	((c:codifica@dado)),c
 20615  003B30  6E27               	movlw	high(fifo_add_tempo@t)
 20616  003B32  0E00               	movwf	((c:codifica@dado+1)),c
 20617  003B34  6E28               
 20618                           	movlw	(074h)&0ffh
 20619  003B36  0E74               	
 20620                           	call	_codifica
 20621  003B38  EC33  F014         	line	276
 20622                           	
 20623                           l5687:
 20624  003B3C                     ;fifo.c: 276:             fila[ind_fila] = t;
 20625                           	movf	((c:_ind_fila)),c,w
 20626  003B3C  505D               	mullw	01h
 20627  003B3E  0D01               	movlw	low(_fila)
 20628  003B40  0E15               	addwf	(prodl),c,w
 20629  003B42  24F3               	movwf	c:fsr2l
 20630  003B44  6ED9               	movlw	high(_fila)
 20631  003B46  0E00               	addwfc	prod+1,w
 20632  003B48  20F4               	movwf	1+c:fsr2l
 20633  003B4A  6EDA               	movff	(c:fifo_add_tempo@t),indf2
 20634  003B4C  C036  FFDF         
 20635                           	line	277
 20636                           	
 20637                           l5689:
 20638  003B50                     ;fifo.c: 277:             ind_fila++;
 20639                           	incf	((c:_ind_fila)),c
 20640  003B50  2A5D               	line	278
 20641                           	
 20642                           l5691:
 20643  003B52                     ;fifo.c: 278:             fila[ind_fila] = 0;
 20644                           	movf	((c:_ind_fila)),c,w
 20645  003B52  505D               	mullw	01h
 20646  003B54  0D01               	movlw	low(_fila)
 20647  003B56  0E15               	addwf	(prodl),c,w
 20648  003B58  24F3               	movwf	c:fsr2l
 20649  003B5A  6ED9               	movlw	high(_fila)
 20650  003B5C  0E00               	addwfc	prod+1,w
 20651  003B5E  20F4               	movwf	1+c:fsr2l
 20652  003B60  6EDA               	movlw	low(0)
 20653  003B62  0E00               	movwf	indf2
 20654  003B64  6EDF               	goto	l5693
 20655  003B66  EFB7  F01D         	line	279
 20656                           ;fifo.c: 279:         }
 20657                           	
 20658                           l777:
 20659  003B6A                     	goto	l5693
 20660  003B6A  EFB7  F01D         	line	280
 20661                           ;fifo.c: 280:     }
 20662                           	
 20663                           l776:
 20664  003B6E                     	line	281
 20665                           	
 20666                           l5693:
 20667  003B6E                     ;fifo.c: 281:     fifo_alinharPrint();
 20668                           	call	_fifo_alinharPrint	;wreg free
 20669  003B6E  ECC5  F016         	line	282
 20670                           	
 20671                           l778:
 20672  003B72                     	return	;funcret
 20673  003B72  0012               	opt stack 0
 20674                           GLOBAL	__end_of_fifo_add_tempo
 20675                           	__end_of_fifo_add_tempo:
 20676  003B74                     	signat	_fifo_add_tempo,4217
 20677                           	global	_fifo_add_control
 20678                           
 20679 ;; *************** function _fifo_add_control *****************
 20680 ;; Defined at:
 20681 ;;		line 284 in file "fifo.c"
 20682 ;; Parameters:    Size  Location     Type
 20683 ;;  c               1    wreg     const unsigned char 
 20684 ;; Auto vars:     Size  Location     Type
 20685 ;;  c               1   15[COMRAM] const unsigned char 
 20686 ;; Return value:  Size  Location     Type
 20687 ;;                  1    wreg      void 
 20688 ;; Registers used:
 20689 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20690 ;; Tracked objects:
 20691 ;;		On entry : 0/0
 20692 ;;		On exit  : 0/0
 20693 ;;		Unchanged: 0/0
 20694 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20695 ;;      Params:         0       0       0       0       0       0       0       0       0       0
 20696 ;;      Locals:         1       0       0       0       0       0       0       0       0       0
 20697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0
 20698 ;;      Totals:         1       0       0       0       0       0       0       0       0       0
 20699 ;;Total ram usage:        1 bytes
 20700 ;; Hardware stack levels used:    1
 20701 ;; Hardware stack levels required when called:    5
 20702 ;; This function calls:
 20703 ;;		_codifica
 20704 ;;		_fifo_alinharPrint
 20705 ;; This function is called by:
 20706 ;;		_main
 20707 ;; This function uses a non-reentrant model
 20708 ;;
 20709                           psect	text43,class=CODE,space=0,reloc=2,group=0
 20710                           	line	284
 20711                           global __ptext43
 20712                           __ptext43:
 20713  003E26                     psect	text43
 20714                           	file	"fifo.c"
 20715                           	line	284
 20716                           	global	__size_of_fifo_add_control
 20717                           	__size_of_fifo_add_control	equ	__end_of_fifo_add_control-_fifo_add_control
 20718  0000                     	
 20719                           _fifo_add_control:
 20720  003E26                     ;incstack = 0
 20721                           	opt	stack 25
 20722                           ;fifo_add_control@c stored from wreg
 20723                           	movwf	((c:fifo_add_control@c)),c
 20724  003E26  6E36               	line	286
 20725                           	
 20726                           l5669:
 20727  003E28                     ;fifo.c: 284: void fifo_add_control(const char c);fifo.c: 285: {;fifo.c: 286:     if(ind
                                 _fila < 18)
 20728                           		movlw	012h-0
 20729  003E28  0E12               	cpfslt	((c:_ind_fila)),c
 20730  003E2A  605D               	goto	u4141
 20731  003E2C  EF1A  F01F         	goto	u4140
 20732  003E30  EF1C  F01F         
 20733                           u4141:
 20734  003E34                     	goto	l5679
 20735  003E34  EF3A  F01F         u4140:
 20736  003E38                     	line	290
 20737                           	
 20738                           l5671:
 20739  003E38                     ;fifo.c: 287:     {;fifo.c: 290:             codifica('p', &c);
 20740                           		movlw	low(fifo_add_control@c)
 20741  003E38  0E36               	movwf	((c:codifica@dado)),c
 20742  003E3A  6E27               	movlw	high(fifo_add_control@c)
 20743  003E3C  0E00               	movwf	((c:codifica@dado+1)),c
 20744  003E3E  6E28               
 20745                           	movlw	(070h)&0ffh
 20746  003E40  0E70               	
 20747                           	call	_codifica
 20748  003E42  EC33  F014         	line	291
 20749                           	
 20750                           l5673:
 20751  003E46                     ;fifo.c: 291:             fila[ind_fila] = c;
 20752                           	movf	((c:_ind_fila)),c,w
 20753  003E46  505D               	mullw	01h
 20754  003E48  0D01               	movlw	low(_fila)
 20755  003E4A  0E15               	addwf	(prodl),c,w
 20756  003E4C  24F3               	movwf	c:fsr2l
 20757  003E4E  6ED9               	movlw	high(_fila)
 20758  003E50  0E00               	addwfc	prod+1,w
 20759  003E52  20F4               	movwf	1+c:fsr2l
 20760  003E54  6EDA               	movff	(c:fifo_add_control@c),indf2
 20761  003E56  C036  FFDF         
 20762                           	line	292
 20763                           	
 20764                           l5675:
 20765  003E5A                     ;fifo.c: 292:             ind_fila++;
 20766                           	incf	((c:_ind_fila)),c
 20767  003E5A  2A5D               	line	293
 20768                           	
 20769                           l5677:
 20770  003E5C                     ;fifo.c: 293:             fila[ind_fila] = 0;
 20771                           	movf	((c:_ind_fila)),c,w
 20772  003E5C  505D               	mullw	01h
 20773  003E5E  0D01               	movlw	low(_fila)
 20774  003E60  0E15               	addwf	(prodl),c,w
 20775  003E62  24F3               	movwf	c:fsr2l
 20776  003E64  6ED9               	movlw	high(_fila)
 20777  003E66  0E00               	addwfc	prod+1,w
 20778  003E68  20F4               	movwf	1+c:fsr2l
 20779  003E6A  6EDA               	movlw	low(0)
 20780  003E6C  0E00               	movwf	indf2
 20781  003E6E  6EDF               	goto	l5679
 20782  003E70  EF3A  F01F         	line	295
 20783                           ;fifo.c: 295:     }
 20784                           	
 20785                           l781:
 20786  003E74                     	line	296
 20787                           	
 20788                           l5679:
 20789  003E74                     ;fifo.c: 296:     fifo_alinharPrint();
 20790                           	call	_fifo_alinharPrint	;wreg free
 20791  003E74  ECC5  F016         	line	297
 20792                           	
 20793                           l782:
 20794  003E78                     	return	;funcret
 20795  003E78  0012               	opt stack 0
 20796                           GLOBAL	__end_of_fifo_add_control
 20797                           	__end_of_fifo_add_control:
 20798  003E7A                     	signat	_fifo_add_control,4217
 20799                           	global	_fifo_add_ciclo
 20800                           
 20801 ;; *************** function _fifo_add_ciclo *****************
 20802 ;; Defined at:
 20803 ;;		line 299 in file "fifo.c"
 20804 ;; Parameters:    Size  Location     Type
 20805 ;;  ciclos          2    0[COMRAM] unsigned int 
 20806 ;; Auto vars:     Size  Location     Type
 20807 ;;		None
 20808 ;; Return value:  Size  Location     Type
 20809 ;;                  1    wreg      void 
 20810 ;; Registers used:
 20811 ;;		wreg, status,2
 20812 ;; Tracked objects:
 20813 ;;		On entry : 0/0
 20814 ;;		On exit  : 0/0
 20815 ;;		Unchanged: 0/0
 20816 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20817 ;;      Params:         2       0       0       0       0       0       0       0       0       0
 20818 ;;      Locals:         0       0       0       0       0       0       0       0       0       0
 20819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0
 20820 ;;      Totals:         2       0       0       0       0       0       0       0       0       0
 20821 ;;Total ram usage:        2 bytes
 20822 ;; Hardware stack levels used:    1
 20823 ;; Hardware stack levels required when called:    2
 20824 ;; This function calls:
 20825 ;;		Nothing
 20826 ;; This function is called by:
 20827 ;;		_main
 20828 ;; This function uses a non-reentrant model
 20829 ;;
 20830                           psect	text44,class=CODE,space=0,reloc=2,group=0
 20831                           	line	299
 20832                           global __ptext44
 20833                           __ptext44:
 20834  00455A                     psect	text44
 20835                           	file	"fifo.c"
 20836                           	line	299
 20837                           	global	__size_of_fifo_add_ciclo
 20838                           	__size_of_fifo_add_ciclo	equ	__end_of_fifo_add_ciclo-_fifo_add_ciclo
 20839  0000                     	
 20840                           _fifo_add_ciclo:
 20841  00455A                     ;incstack = 0
 20842                           	opt	stack 28
 20843                           	line	301
 20844                           	
 20845                           l5985:
 20846  00455A                     ;fifo.c: 299: void fifo_add_ciclo(unsigned int ciclos);fifo.c: 300: {;fifo.c: 301:     f
                                 ila[0] = ciclos & 0x00ff;
 20847                           	movff	(c:fifo_add_ciclo@ciclos),(c:_fila)
 20848  00455A  C027  F015         	line	302
 20849                           	
 20850                           l5987:
 20851  00455E                     ;fifo.c: 302:     fila[1] = ciclos >> 8;
 20852                           	movf	((c:fifo_add_ciclo@ciclos+1)),c,w
 20853  00455E  5028               	movwf	(0+((c:_fila)+01h)),c
 20854  004560  6E16               	line	303
 20855                           	
 20856                           l785:
 20857  004562                     	return	;funcret
 20858  004562  0012               	opt stack 0
 20859                           GLOBAL	__end_of_fifo_add_ciclo
 20860                           	__end_of_fifo_add_ciclo:
 20861  004564                     	signat	_fifo_add_ciclo,4217
 20862                           	global	_fifo_add
 20863                           
 20864 ;; *************** function _fifo_add *****************
 20865 ;; Defined at:
 20866 ;;		line 254 in file "fifo.c"
 20867 ;; Parameters:    Size  Location     Type
 20868 ;;  passo           1    wreg     const unsigned char 
 20869 ;; Auto vars:     Size  Location     Type
 20870 ;;  passo           1   15[COMRAM] const unsigned char 
 20871 ;; Return value:  Size  Location     Type
 20872 ;;                  1    wreg      void 
 20873 ;; Registers used:
 20874 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20875 ;; Tracked objects:
 20876 ;;		On entry : 0/0
 20877 ;;		On exit  : 0/0
 20878 ;;		Unchanged: 0/0
 20879 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20880 ;;      Params:         0       0       0       0       0       0       0       0       0       0
 20881 ;;      Locals:         1       0       0       0       0       0       0       0       0       0
 20882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0
 20883 ;;      Totals:         1       0       0       0       0       0       0       0       0       0
 20884 ;;Total ram usage:        1 bytes
 20885 ;; Hardware stack levels used:    1
 20886 ;; Hardware stack levels required when called:    5
 20887 ;; This function calls:
 20888 ;;		_codifica
 20889 ;;		_fifo_alinharPrint
 20890 ;; This function is called by:
 20891 ;;		_main
 20892 ;; This function uses a non-reentrant model
 20893 ;;
 20894                           psect	text45,class=CODE,space=0,reloc=2,group=0
 20895                           	line	254
 20896                           global __ptext45
 20897                           __ptext45:
 20898  003B74                     psect	text45
 20899                           	file	"fifo.c"
 20900                           	line	254
 20901                           	global	__size_of_fifo_add
 20902                           	__size_of_fifo_add	equ	__end_of_fifo_add-_fifo_add
 20903  0000                     	
 20904                           _fifo_add:
 20905  003B74                     ;incstack = 0
 20906                           	opt	stack 25
 20907                           ;fifo_add@passo stored from wreg
 20908                           	movwf	((c:fifo_add@passo)),c
 20909  003B74  6E36               	line	256
 20910                           	
 20911                           l5695:
 20912  003B76                     ;fifo.c: 254: void fifo_add(const char passo);fifo.c: 255: {;fifo.c: 256:     if(ind_fil
                                 a < 18)
 20913                           		movlw	012h-0
 20914  003B76  0E12               	cpfslt	((c:_ind_fila)),c
 20915  003B78  605D               	goto	u4171
 20916  003B7A  EFC1  F01D         	goto	u4170
 20917  003B7E  EFC3  F01D         
 20918                           u4171:
 20919  003B82                     	goto	l5707
 20920  003B82  EFEB  F01D         u4170:
 20921  003B86                     	line	258
 20922                           	
 20923                           l5697:
 20924  003B86                     ;fifo.c: 257:     {;fifo.c: 258:         if(passo)
 20925                           	movf	((c:fifo_add@passo)),c,w
 20926  003B86  5036               	btfsc	status,2
 20927  003B88  B4D8               	goto	u4181
 20928  003B8A  EFC9  F01D         	goto	u4180
 20929  003B8E  EFCB  F01D         u4181:
 20930  003B92                     	goto	l5707
 20931  003B92  EFEB  F01D         u4180:
 20932  003B96                     	line	260
 20933                           	
 20934                           l5699:
 20935  003B96                     ;fifo.c: 259:         {;fifo.c: 260:             codifica('a', &passo);
 20936                           		movlw	low(fifo_add@passo)
 20937  003B96  0E36               	movwf	((c:codifica@dado)),c
 20938  003B98  6E27               	movlw	high(fifo_add@passo)
 20939  003B9A  0E00               	movwf	((c:codifica@dado+1)),c
 20940  003B9C  6E28               
 20941                           	movlw	(061h)&0ffh
 20942  003B9E  0E61               	
 20943                           	call	_codifica
 20944  003BA0  EC33  F014         	line	261
 20945                           	
 20946                           l5701:
 20947  003BA4                     ;fifo.c: 261:             fila[ind_fila] = passo;
 20948                           	movf	((c:_ind_fila)),c,w
 20949  003BA4  505D               	mullw	01h
 20950  003BA6  0D01               	movlw	low(_fila)
 20951  003BA8  0E15               	addwf	(prodl),c,w
 20952  003BAA  24F3               	movwf	c:fsr2l
 20953  003BAC  6ED9               	movlw	high(_fila)
 20954  003BAE  0E00               	addwfc	prod+1,w
 20955  003BB0  20F4               	movwf	1+c:fsr2l
 20956  003BB2  6EDA               	movff	(c:fifo_add@passo),indf2
 20957  003BB4  C036  FFDF         
 20958                           	line	262
 20959                           	
 20960                           l5703:
 20961  003BB8                     ;fifo.c: 262:             ind_fila++;
 20962                           	incf	((c:_ind_fila)),c
 20963  003BB8  2A5D               	line	263
 20964                           	
 20965                           l5705:
 20966  003BBA                     ;fifo.c: 263:             fila[ind_fila] = 0;
 20967                           	movf	((c:_ind_fila)),c,w
 20968  003BBA  505D               	mullw	01h
 20969  003BBC  0D01               	movlw	low(_fila)
 20970  003BBE  0E15               	addwf	(prodl),c,w
 20971  003BC0  24F3               	movwf	c:fsr2l
 20972  003BC2  6ED9               	movlw	high(_fila)
 20973  003BC4  0E00               	addwfc	prod+1,w
 20974  003BC6  20F4               	movwf	1+c:fsr2l
 20975  003BC8  6EDA               	movlw	low(0)
 20976  003BCA  0E00               	movwf	indf2
 20977  003BCC  6EDF               	goto	l5707
 20978  003BCE  EFEB  F01D         	line	264
 20979                           ;fifo.c: 264:         }
 20980                           	
 20981                           l772:
 20982  003BD2                     	goto	l5707
 20983  003BD2  EFEB  F01D         	line	265
 20984                           ;fifo.c: 265:     }
 20985                           	
 20986                           l771:
 20987  003BD6                     	line	266
 20988                           	
 20989                           l5707:
 20990  003BD6                     ;fifo.c: 266:      fifo_alinharPrint();
 20991                           	call	_fifo_alinharPrint	;wreg free
 20992  003BD6  ECC5  F016         	line	267
 20993                           	
 20994                           l773:
 20995  003BDA                     	return	;funcret
 20996  003BDA  0012               	opt stack 0
 20997                           GLOBAL	__end_of_fifo_add
 20998                           	__end_of_fifo_add:
 20999  003BDC                     	signat	_fifo_add,4217
 21000                           	global	_fifo_alinharPrint
 21001                           
 21002 ;; *************** function _fifo_alinharPrint *****************
 21003 ;; Defined at:
 21004 ;;		line 482 in file "fifo.c"
 21005 ;; Parameters:    Size  Location     Type
 21006 ;;		None
 21007 ;; Auto vars:     Size  Location     Type
 21008 ;;  aux             1   14[COMRAM] unsigned char 
 21009 ;;  i               1   13[COMRAM] unsigned char 
 21010 ;;  cont            1   12[COMRAM] unsigned char 
 21011 ;; Return value:  Size  Location     Type
 21012 ;;                  1    wreg      void 
 21013 ;; Registers used:
 21014 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21015 ;; Tracked objects:
 21016 ;;		On entry : 0/0
 21017 ;;		On exit  : 0/0
 21018 ;;		Unchanged: 0/0
 21019 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21020 ;;      Params:         0       0       0       0       0       0       0       0       0       0
 21021 ;;      Locals:         3       0       0       0       0       0       0       0       0       0
 21022 ;;      Temps:          1       0       0       0       0       0       0       0       0       0
 21023 ;;      Totals:         4       0       0       0       0       0       0       0       0       0
 21024 ;;Total ram usage:        4 bytes
 21025 ;; Hardware stack levels used:    1
 21026 ;; Hardware stack levels required when called:    4
 21027 ;; This function calls:
 21028 ;;		_dignum_tam
 21029 ;; This function is called by:
 21030 ;;		_fifo_delete
 21031 ;;		_fifo_add
 21032 ;;		_fifo_add_tempo
 21033 ;;		_fifo_add_control
 21034 ;; This function uses a non-reentrant model
 21035 ;;
 21036                           psect	text46,class=CODE,space=0,reloc=2,group=0
 21037                           	line	482
 21038                           global __ptext46
 21039                           __ptext46:
 21040  002D8A                     psect	text46
 21041                           	file	"fifo.c"
 21042                           	line	482
 21043                           	global	__size_of_fifo_alinharPrint
 21044                           	__size_of_fifo_alinharPrint	equ	__end_of_fifo_alinharPrint-_fifo_alinharPrint
 21045  0000                     	
 21046                           _fifo_alinharPrint:
 21047  002D8A                     ;incstack = 0
 21048                           	opt	stack 25
 21049                           	line	486
 21050                           	
 21051                           l5383:
 21052  002D8A                     ;fifo.c: 484:     unsigned char i;;fifo.c: 485:     unsigned char aux;;fifo.c: 486:     
                                 unsigned char cont = 0;
 21053                           	movlw	low(0)
 21054  002D8A  0E00               	movwf	((c:fifo_alinharPrint@cont)),c
 21055  002D8C  6E33               	line	488
 21056                           	
 21057                           l5385:
 21058  002D8E                     ;fifo.c: 488:     for( i=ind_fila-1; i>=2; i-- )
 21059                           	decf	((c:_ind_fila)),c,w
 21060  002D8E  045D               	movwf	((c:fifo_alinharPrint@i)),c
 21061  002D90  6E34               	
 21062                           l5387:
 21063  002D92                     		movlw	02h-0
 21064  002D92  0E02               	cpfslt	((c:fifo_alinharPrint@i)),c
 21065  002D94  6034               	goto	u3781
 21066  002D96  EFCF  F016         	goto	u3780
 21067  002D9A  EFD1  F016         
 21068                           u3781:
 21069  002D9E                     	goto	l5391
 21070  002D9E  EFD5  F016         u3780:
 21071  002DA2                     	goto	l864
 21072  002DA2  EF50  F017         	
 21073                           l5389:
 21074  002DA6                     	goto	l864
 21075  002DA6  EF50  F017         	
 21076                           l856:
 21077  002DAA                     	line	490
 21078                           	
 21079                           l5391:
 21080  002DAA                     ;fifo.c: 489:     {;fifo.c: 490:         aux = fila[i];
 21081                           	movf	((c:fifo_alinharPrint@i)),c,w
 21082  002DAA  5034               	mullw	01h
 21083  002DAC  0D01               	movlw	low(_fila)
 21084  002DAE  0E15               	addwf	(prodl),c,w
 21085  002DB0  24F3               	movwf	c:fsr2l
 21086  002DB2  6ED9               	movlw	high(_fila)
 21087  002DB4  0E00               	addwfc	prod+1,w
 21088  002DB6  20F4               	movwf	1+c:fsr2l
 21089  002DB8  6EDA               	movf	indf2,w
 21090  002DBA  50DF               	movwf	((c:fifo_alinharPrint@aux)),c
 21091  002DBC  6E35               	line	491
 21092                           	
 21093                           l5393:
 21094  002DBE                     ;fifo.c: 491:         if( aux <= 0x64 )
 21095                           		movlw	065h-0
 21096  002DBE  0E65               	cpfslt	((c:fifo_alinharPrint@aux)),c
 21097  002DC0  6035               	goto	u3791
 21098  002DC2  EFE5  F016         	goto	u3790
 21099  002DC6  EFE7  F016         
 21100                           u3791:
 21101  002DCA                     	goto	l5397
 21102  002DCA  EFF1  F016         u3790:
 21103  002DCE                     	line	492
 21104                           	
 21105                           l5395:
 21106  002DCE                     ;fifo.c: 492:             cont += dignum_tam( aux )+1;
 21107                           	movff	(c:fifo_alinharPrint@aux),(c:dignum_tam@num)
 21108  002DCE  C035  F02F         	clrf	((c:dignum_tam@num+1)),c
 21109  002DD2  6A30               	call	_dignum_tam	;wreg free
 21110  002DD4  ECDD  F01F         	movwf	(??_fifo_alinharPrint+0+0)&0ffh,c
 21111  002DD8  6E32               	incf	((??_fifo_alinharPrint+0+0)),c,w
 21112  002DDA  2832               	addwf	((c:fifo_alinharPrint@cont)),c
 21113  002DDC  2633               	goto	l5397
 21114  002DDE  EFF1  F016         	
 21115                           l858:
 21116  002DE2                     	line	494
 21117                           	
 21118                           l5397:
 21119  002DE2                     ;fifo.c: 494:         if( aux > 0x64 && aux <= 0xDC )
 21120                           		movlw	065h-1
 21121  002DE2  0E64               	cpfsgt	((c:fifo_alinharPrint@aux)),c
 21122  002DE4  6435               	goto	u3801
 21123  002DE6  EFF7  F016         	goto	u3800
 21124  002DEA  EFF9  F016         
 21125                           u3801:
 21126  002DEE                     	goto	l5403
 21127  002DEE  EF0E  F017         u3800:
 21128  002DF2                     	
 21129                           l5399:
 21130  002DF2                     		movlw	0DDh-0
 21131  002DF2  0EDD               	cpfslt	((c:fifo_alinharPrint@aux)),c
 21132  002DF4  6035               	goto	u3811
 21133  002DF6  EFFF  F016         	goto	u3810
 21134  002DFA  EF01  F017         
 21135                           u3811:
 21136  002DFE                     	goto	l5403
 21137  002DFE  EF0E  F017         u3810:
 21138  002E02                     	line	495
 21139                           	
 21140                           l5401:
 21141  002E02                     ;fifo.c: 495:             cont += dignum_tam( aux - 0x64 )+1;
 21142                           	movlw	low(-100)
 21143  002E02  0E9C               	addwf	((c:fifo_alinharPrint@aux)),c,w
 21144  002E04  2435               	movwf	((c:dignum_tam@num)),c
 21145  002E06  6E2F               	clrf	1+((c:dignum_tam@num)),c
 21146  002E08  6A30               	movlw	high(-100)
 21147  002E0A  0EFF               	addwfc	1+((c:dignum_tam@num)),c
 21148  002E0C  2230               	call	_dignum_tam	;wreg free
 21149  002E0E  ECDD  F01F         	movwf	(??_fifo_alinharPrint+0+0)&0ffh,c
 21150  002E12  6E32               	incf	((??_fifo_alinharPrint+0+0)),c,w
 21151  002E14  2832               	addwf	((c:fifo_alinharPrint@cont)),c
 21152  002E16  2633               	goto	l5403
 21153  002E18  EF0E  F017         	
 21154                           l859:
 21155  002E1C                     	line	497
 21156                           	
 21157                           l5403:
 21158  002E1C                     ;fifo.c: 497:         if( aux > 0xDC && aux < 0xFE )
 21159                           		movlw	0DDh-1
 21160  002E1C  0EDC               	cpfsgt	((c:fifo_alinharPrint@aux)),c
 21161  002E1E  6435               	goto	u3821
 21162  002E20  EF14  F017         	goto	u3820
 21163  002E24  EF16  F017         
 21164                           u3821:
 21165  002E28                     	goto	l860
 21166  002E28  EF20  F017         u3820:
 21167  002E2C                     	
 21168                           l5405:
 21169  002E2C                     		movlw	0FEh-0
 21170  002E2C  0EFE               	cpfslt	((c:fifo_alinharPrint@aux)),c
 21171  002E2E  6035               	goto	u3831
 21172  002E30  EF1C  F017         	goto	u3830
 21173  002E34  EF1E  F017         
 21174                           u3831:
 21175  002E38                     	goto	l860
 21176  002E38  EF20  F017         u3830:
 21177  002E3C                     	line	498
 21178                           	
 21179                           l5407:
 21180  002E3C                     ;fifo.c: 498:             cont += 2;
 21181                           	movlw	(02h)&0ffh
 21182  002E3C  0E02               	addwf	((c:fifo_alinharPrint@cont)),c
 21183  002E3E  2633               	
 21184                           l860:
 21185  002E40                     	line	500
 21186                           ;fifo.c: 500:         if( aux == 0xFE )
 21187                           		movlw	254
 21188  002E40  0EFE               	xorwf	((c:fifo_alinharPrint@aux)),c,w
 21189  002E42  1835               	btfss	status,2
 21190  002E44  A4D8               	goto	u3841
 21191  002E46  EF27  F017         	goto	u3840
 21192  002E4A  EF29  F017         
 21193                           u3841:
 21194  002E4E                     	goto	l5411
 21195  002E4E  EF33  F017         u3840:
 21196  002E52                     	line	501
 21197                           	
 21198                           l5409:
 21199  002E52                     ;fifo.c: 501:             cont += dignum_tam( aux )+1;
 21200                           	movff	(c:fifo_alinharPrint@aux),(c:dignum_tam@num)
 21201  002E52  C035  F02F         	clrf	((c:dignum_tam@num+1)),c
 21202  002E56  6A30               	call	_dignum_tam	;wreg free
 21203  002E58  ECDD  F01F         	movwf	(??_fifo_alinharPrint+0+0)&0ffh,c
 21204  002E5C  6E32               	incf	((??_fifo_alinharPrint+0+0)),c,w
 21205  002E5E  2832               	addwf	((c:fifo_alinharPrint@cont)),c
 21206  002E60  2633               	goto	l5411
 21207  002E62  EF33  F017         	
 21208                           l861:
 21209  002E66                     	line	503
 21210                           	
 21211                           l5411:
 21212  002E66                     ;fifo.c: 503:         if( cont > 20 )
 21213                           		movlw	015h-1
 21214  002E66  0E14               	cpfsgt	((c:fifo_alinharPrint@cont)),c
 21215  002E68  6433               	goto	u3851
 21216  002E6A  EF39  F017         	goto	u3850
 21217  002E6E  EF3B  F017         
 21218                           u3851:
 21219  002E72                     	goto	l862
 21220  002E72  EF41  F017         u3850:
 21221  002E76                     	goto	l864
 21222  002E76  EF50  F017         	line	505
 21223                           	
 21224                           l5413:
 21225  002E7A                     ;fifo.c: 504:         {;fifo.c: 505:             break;
 21226                           	goto	l864
 21227  002E7A  EF50  F017         	line	506
 21228                           	
 21229                           l5415:
 21230  002E7E                     ;fifo.c: 506:         }
 21231                           	goto	l5417
 21232  002E7E  EF45  F017         	line	507
 21233                           ;fifo.c: 507:         else
 21234                           	
 21235                           l862:
 21236  002E82                     	line	508
 21237                           ;fifo.c: 508:             ind_print = i;
 21238                           	movff	(c:fifo_alinharPrint@i),(c:_ind_print)
 21239  002E82  C034  F05C         	goto	l5417
 21240  002E86  EF45  F017         	
 21241                           l863:
 21242  002E8A                     	line	509
 21243                           	
 21244                           l5417:
 21245  002E8A                     ;fifo.c: 509:     }
 21246                           	decf	((c:fifo_alinharPrint@i)),c
 21247  002E8A  0634               	
 21248                           l5419:
 21249  002E8C                     		movlw	02h-0
 21250  002E8C  0E02               	cpfslt	((c:fifo_alinharPrint@i)),c
 21251  002E8E  6034               	goto	u3861
 21252  002E90  EF4C  F017         	goto	u3860
 21253  002E94  EF4E  F017         
 21254                           u3861:
 21255  002E98                     	goto	l5391
 21256  002E98  EFD5  F016         u3860:
 21257  002E9C                     	goto	l864
 21258  002E9C  EF50  F017         	
 21259                           l857:
 21260  002EA0                     	line	510
 21261                           	
 21262                           l864:
 21263  002EA0                     	return	;funcret
 21264  002EA0  0012               	opt stack 0
 21265                           GLOBAL	__end_of_fifo_alinharPrint
 21266                           	__end_of_fifo_alinharPrint:
 21267  002EA2                     	signat	_fifo_alinharPrint,89
 21268                           	global	_dignum_tam
 21269                           
 21270 ;; *************** function _dignum_tam *****************
 21271 ;; Defined at:
 21272 ;;		line 470 in file "fifo.c"
 21273 ;; Parameters:    Size  Location     Type
 21274 ;;  num             2    8[COMRAM] int 
 21275 ;; Auto vars:     Size  Location     Type
 21276 ;;  tam             1   10[COMRAM] unsigned char 
 21277 ;; Return value:  Size  Location     Type
 21278 ;;                  1    wreg      unsigned char 
 21279 ;; Registers used:
 21280 ;;		wreg, status,2, status,0, cstack
 21281 ;; Tracked objects:
 21282 ;;		On entry : 0/0
 21283 ;;		On exit  : 0/0
 21284 ;;		Unchanged: 0/0
 21285 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21286 ;;      Params:         2       0       0       0       0       0       0       0       0       0
 21287 ;;      Locals:         1       0       0       0       0       0       0       0       0       0
 21288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0
 21289 ;;      Totals:         3       0       0       0       0       0       0       0       0       0
 21290 ;;Total ram usage:        3 bytes
 21291 ;; Hardware stack levels used:    1
 21292 ;; Hardware stack levels required when called:    3
 21293 ;; This function calls:
 21294 ;;		___awdiv
 21295 ;; This function is called by:
 21296 ;;		_fifo_alinharPrint
 21297 ;;		_printExec
 21298 ;; This function uses a non-reentrant model
 21299 ;;
 21300                           psect	text47,class=CODE,space=0,reloc=2,group=0
 21301                           	line	470
 21302                           global __ptext47
 21303                           __ptext47:
 21304  003FBA                     psect	text47
 21305                           	file	"fifo.c"
 21306                           	line	470
 21307                           	global	__size_of_dignum_tam
 21308                           	__size_of_dignum_tam	equ	__end_of_dignum_tam-_dignum_tam
 21309  0000                     	
 21310                           _dignum_tam:
 21311  003FBA                     ;incstack = 0
 21312                           	opt	stack 26
 21313                           	line	472
 21314                           	
 21315                           l5129:
 21316  003FBA                     ;fifo.c: 470: unsigned char dignum_tam(int num);fifo.c: 471: {;fifo.c: 472:     unsigned
                                  char tam = 0;
 21317                           	movlw	low(0)
 21318  003FBA  0E00               	movwf	((c:dignum_tam@tam)),c
 21319  003FBC  6E31               	line	474
 21320                           ;fifo.c: 474:     while(num != 0)
 21321                           	goto	l5135
 21322  003FBE  EFF2  F01F         	
 21323                           l851:
 21324  003FC2                     	line	476
 21325                           	
 21326                           l5131:
 21327  003FC2                     ;fifo.c: 475:     {;fifo.c: 476:         num /= 10;
 21328                           	movff	(c:dignum_tam@num),(c:___awdiv@dividend)
 21329  003FC2  C02F  F027         	movff	(c:dignum_tam@num+1),(c:___awdiv@dividend+1)
 21330  003FC6  C030  F028         	movlw	high(0Ah)
 21331  003FCA  0E00               	movwf	((c:___awdiv@divisor+1)),c
 21332  003FCC  6E2A               	movlw	low(0Ah)
 21333  003FCE  0E0A               	movwf	((c:___awdiv@divisor)),c
 21334  003FD0  6E29               	call	___awdiv	;wreg free
 21335  003FD2  ECD3  F017         	movff	0+?___awdiv,(c:dignum_tam@num)
 21336  003FD6  C027  F02F         	movff	1+?___awdiv,(c:dignum_tam@num+1)
 21337  003FDA  C028  F030         	line	477
 21338                           	
 21339                           l5133:
 21340  003FDE                     ;fifo.c: 477:         tam++;
 21341                           	incf	((c:dignum_tam@tam)),c
 21342  003FDE  2A31               	goto	l5135
 21343  003FE0  EFF2  F01F         	line	478
 21344                           ;fifo.c: 478:     }
 21345                           	
 21346                           l850:
 21347  003FE4                     	line	474
 21348                           	
 21349                           l5135:
 21350  003FE4                     ;fifo.c: 474:     while(num != 0)
 21351                           	movf	((c:dignum_tam@num)),c,w
 21352  003FE4  502F               iorwf	((c:dignum_tam@num+1)),c,w
 21353  003FE6  1030               	btfss	status,2
 21354  003FE8  A4D8               	goto	u3381
 21355  003FEA  EFF9  F01F         	goto	u3380
 21356  003FEE  EFFB  F01F         
 21357                           u3381:
 21358  003FF2                     	goto	l5131
 21359  003FF2  EFE1  F01F         u3380:
 21360  003FF6                     	goto	l5137
 21361  003FF6  EFFD  F01F         	
 21362                           l852:
 21363  003FFA                     	line	479
 21364                           	
 21365                           l5137:
 21366  003FFA                     ;fifo.c: 479:     return ( tam );
 21367                           	movf	((c:dignum_tam@tam)),c,w
 21368  003FFA  5031               	goto	l853
 21369  003FFC  EF00  F020         	
 21370                           l5139:
 21371  004000                     	line	480
 21372                           	
 21373                           l853:
 21374  004000                     	return	;funcret
 21375  004000  0012               	opt stack 0
 21376                           GLOBAL	__end_of_dignum_tam
 21377                           	__end_of_dignum_tam:
 21378  004002                     	signat	_dignum_tam,4217
 21379                           	global	___awdiv
 21380                           
 21381 ;; *************** function ___awdiv *****************
 21382 ;; Defined at:
 21383 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awdiv.c"
 21384 ;; Parameters:    Size  Location     Type
 21385 ;;  dividend        2    0[COMRAM] int 
 21386 ;;  divisor         2    2[COMRAM] int 
 21387 ;; Auto vars:     Size  Location     Type
 21388 ;;  quotient        2    6[COMRAM] int 
 21389 ;;  sign            1    5[COMRAM] unsigned char 
 21390 ;;  counter         1    4[COMRAM] unsigned char 
 21391 ;; Return value:  Size  Location     Type
 21392 ;;                  2    0[COMRAM] int 
 21393 ;; Registers used:
 21394 ;;		wreg, status,2, status,0
 21395 ;; Tracked objects:
 21396 ;;		On entry : 0/0
 21397 ;;		On exit  : 0/0
 21398 ;;		Unchanged: 0/0
 21399 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21400 ;;      Params:         4       0       0       0       0       0       0       0       0       0
 21401 ;;      Locals:         4       0       0       0       0       0       0       0       0       0
 21402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0
 21403 ;;      Totals:         8       0       0       0       0       0       0       0       0       0
 21404 ;;Total ram usage:        8 bytes
 21405 ;; Hardware stack levels used:    1
 21406 ;; Hardware stack levels required when called:    2
 21407 ;; This function calls:
 21408 ;;		Nothing
 21409 ;; This function is called by:
 21410 ;;		_dispLCD_num
 21411 ;;		_fifo_print
 21412 ;;		_dignum_tam
 21413 ;; This function uses a non-reentrant model
 21414 ;;
 21415                           psect	text48,class=CODE,space=0,reloc=2,group=1
 21416                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awdiv.c"
 21417                           	line	7
 21418                           global __ptext48
 21419                           __ptext48:
 21420  002FA6                     psect	text48
 21421                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awdiv.c"
 21422                           	line	7
 21423                           	global	__size_of___awdiv
 21424                           	__size_of___awdiv	equ	__end_of___awdiv-___awdiv
 21425  0000                     	
 21426                           ___awdiv:
 21427  002FA6                     ;incstack = 0
 21428                           	opt	stack 26
 21429                           	line	13
 21430                           	
 21431                           l5035:
 21432  002FA6                     	movlw	low(0)
 21433  002FA6  0E00               	movwf	((c:___awdiv@sign)),c
 21434  002FA8  6E2C               	line	14
 21435                           	
 21436                           l5037:
 21437  002FAA                     	btfsc	((c:___awdiv@divisor+1)),c,7
 21438  002FAA  BE2A               	goto	u3310
 21439  002FAC  EFDC  F017         	goto	u3311
 21440  002FB0  EFDA  F017         
 21441                           u3311:
 21442  002FB4                     	goto	l5043
 21443  002FB4  EFE4  F017         u3310:
 21444  002FB8                     	line	15
 21445                           	
 21446                           l5039:
 21447  002FB8                     	negf	((c:___awdiv@divisor)),c
 21448  002FB8  6C29               	comf	((c:___awdiv@divisor+1)),c
 21449  002FBA  1E2A               	btfsc	status,0
 21450  002FBC  B0D8               	incf	((c:___awdiv@divisor+1)),c
 21451  002FBE  2A2A               	line	16
 21452                           	
 21453                           l5041:
 21454  002FC0                     	movlw	low(01h)
 21455  002FC0  0E01               	movwf	((c:___awdiv@sign)),c
 21456  002FC2  6E2C               	goto	l5043
 21457  002FC4  EFE4  F017         	line	17
 21458                           	
 21459                           l1463:
 21460  002FC8                     	line	18
 21461                           	
 21462                           l5043:
 21463  002FC8                     	btfsc	((c:___awdiv@dividend+1)),c,7
 21464  002FC8  BE28               	goto	u3320
 21465  002FCA  EFEB  F017         	goto	u3321
 21466  002FCE  EFE9  F017         
 21467                           u3321:
 21468  002FD2                     	goto	l5049
 21469  002FD2  EFF3  F017         u3320:
 21470  002FD6                     	line	19
 21471                           	
 21472                           l5045:
 21473  002FD6                     	negf	((c:___awdiv@dividend)),c
 21474  002FD6  6C27               	comf	((c:___awdiv@dividend+1)),c
 21475  002FD8  1E28               	btfsc	status,0
 21476  002FDA  B0D8               	incf	((c:___awdiv@dividend+1)),c
 21477  002FDC  2A28               	line	20
 21478                           	
 21479                           l5047:
 21480  002FDE                     	movlw	(01h)&0ffh
 21481  002FDE  0E01               	xorwf	((c:___awdiv@sign)),c
 21482  002FE0  1A2C               	goto	l5049
 21483  002FE2  EFF3  F017         	line	21
 21484                           	
 21485                           l1464:
 21486  002FE6                     	line	22
 21487                           	
 21488                           l5049:
 21489  002FE6                     	movlw	high(0)
 21490  002FE6  0E00               	movwf	((c:___awdiv@quotient+1)),c
 21491  002FE8  6E2E               	movlw	low(0)
 21492  002FEA  0E00               	movwf	((c:___awdiv@quotient)),c
 21493  002FEC  6E2D               	line	23
 21494                           	
 21495                           l5051:
 21496  002FEE                     	movf	((c:___awdiv@divisor)),c,w
 21497  002FEE  5029               iorwf	((c:___awdiv@divisor+1)),c,w
 21498  002FF0  102A               	btfsc	status,2
 21499  002FF2  B4D8               	goto	u3331
 21500  002FF4  EFFE  F017         	goto	u3330
 21501  002FF8  EF00  F018         
 21502                           u3331:
 21503  002FFC                     	goto	l5071
 21504  002FFC  EF34  F018         u3330:
 21505  003000                     	line	24
 21506                           	
 21507                           l5053:
 21508  003000                     	movlw	low(01h)
 21509  003000  0E01               	movwf	((c:___awdiv@counter)),c
 21510  003002  6E2B               	line	25
 21511                           	goto	l5057
 21512  003004  EF0A  F018         	
 21513                           l1467:
 21514  003008                     	line	26
 21515                           	
 21516                           l5055:
 21517  003008                     	bcf	status,0
 21518  003008  90D8               	rlcf	((c:___awdiv@divisor)),c
 21519  00300A  3629               	rlcf	((c:___awdiv@divisor+1)),c
 21520  00300C  362A               	line	27
 21521                           	incf	((c:___awdiv@counter)),c
 21522  00300E  2A2B               	goto	l5057
 21523  003010  EF0A  F018         	line	28
 21524                           	
 21525                           l1466:
 21526  003014                     	line	25
 21527                           	
 21528                           l5057:
 21529  003014                     	
 21530                           	btfss	((c:___awdiv@divisor+1)),c,(15)&7
 21531  003014  AE2A               	goto	u3341
 21532  003016  EF0F  F018         	goto	u3340
 21533  00301A  EF11  F018         u3341:
 21534  00301E                     	goto	l5055
 21535  00301E  EF04  F018         u3340:
 21536  003022                     	goto	l5059
 21537  003022  EF15  F018         	
 21538                           l1468:
 21539  003026                     	goto	l5059
 21540  003026  EF15  F018         	line	29
 21541                           	
 21542                           l1469:
 21543  00302A                     	line	30
 21544                           	
 21545                           l5059:
 21546  00302A                     	bcf	status,0
 21547  00302A  90D8               	rlcf	((c:___awdiv@quotient)),c
 21548  00302C  362D               	rlcf	((c:___awdiv@quotient+1)),c
 21549  00302E  362E               	line	31
 21550                           	
 21551                           l5061:
 21552  003030                     		movf	((c:___awdiv@divisor)),c,w
 21553  003030  5029               	subwf	((c:___awdiv@dividend)),c,w
 21554  003032  5C27               	movf	((c:___awdiv@divisor+1)),c,w
 21555  003034  502A               	subwfb	((c:___awdiv@dividend+1)),c,w
 21556  003036  5828               	btfss	status,0
 21557  003038  A0D8               	goto	u3351
 21558  00303A  EF21  F018         	goto	u3350
 21559  00303E  EF23  F018         
 21560                           u3351:
 21561  003042                     	goto	l5067
 21562  003042  EF2A  F018         u3350:
 21563  003046                     	line	32
 21564                           	
 21565                           l5063:
 21566  003046                     	movf	((c:___awdiv@divisor)),c,w
 21567  003046  5029               	subwf	((c:___awdiv@dividend)),c
 21568  003048  5E27               	movf	((c:___awdiv@divisor+1)),c,w
 21569  00304A  502A               	subwfb	((c:___awdiv@dividend+1)),c
 21570  00304C  5A28               
 21571                           	line	33
 21572                           	
 21573                           l5065:
 21574  00304E                     	bsf	(0+(0/8)+(c:___awdiv@quotient)),c,(0)&7
 21575  00304E  802D               	goto	l5067
 21576  003050  EF2A  F018         	line	34
 21577                           	
 21578                           l1470:
 21579  003054                     	line	35
 21580                           	
 21581                           l5067:
 21582  003054                     	bcf	status,0
 21583  003054  90D8               	rrcf	((c:___awdiv@divisor+1)),c
 21584  003056  322A               	rrcf	((c:___awdiv@divisor)),c
 21585  003058  3229               	line	36
 21586                           	
 21587                           l5069:
 21588  00305A                     	decfsz	((c:___awdiv@counter)),c
 21589  00305A  2E2B               	
 21590                           	goto	l5059
 21591  00305C  EF15  F018         	goto	l5071
 21592  003060  EF34  F018         	
 21593                           l1471:
 21594  003064                     	goto	l5071
 21595  003064  EF34  F018         	line	37
 21596                           	
 21597                           l1465:
 21598  003068                     	line	38
 21599                           	
 21600                           l5071:
 21601  003068                     	movf	((c:___awdiv@sign)),c,w
 21602  003068  502C               	btfsc	status,2
 21603  00306A  B4D8               	goto	u3361
 21604  00306C  EF3A  F018         	goto	u3360
 21605  003070  EF3C  F018         u3361:
 21606  003074                     	goto	l5075
 21607  003074  EF42  F018         u3360:
 21608  003078                     	line	39
 21609                           	
 21610                           l5073:
 21611  003078                     	negf	((c:___awdiv@quotient)),c
 21612  003078  6C2D               	comf	((c:___awdiv@quotient+1)),c
 21613  00307A  1E2E               	btfsc	status,0
 21614  00307C  B0D8               	incf	((c:___awdiv@quotient+1)),c
 21615  00307E  2A2E               	goto	l5075
 21616  003080  EF42  F018         	
 21617                           l1472:
 21618  003084                     	line	40
 21619                           	
 21620                           l5075:
 21621  003084                     	movff	(c:___awdiv@quotient),(c:?___awdiv)
 21622  003084  C02D  F027         	movff	(c:___awdiv@quotient+1),(c:?___awdiv+1)
 21623  003088  C02E  F028         	goto	l1473
 21624  00308C  EF48  F018         	
 21625                           l5077:
 21626  003090                     	line	41
 21627                           	
 21628                           l1473:
 21629  003090                     	return	;funcret
 21630  003090  0012               	opt stack 0
 21631                           GLOBAL	__end_of___awdiv
 21632                           	__end_of___awdiv:
 21633  003092                     	signat	___awdiv,8314
 21634                           	global	_codifica
 21635                           
 21636 ;; *************** function _codifica *****************
 21637 ;; Defined at:
 21638 ;;		line 200 in file "fifo.c"
 21639 ;; Parameters:    Size  Location     Type
 21640 ;;  tipo            1    wreg     unsigned char 
 21641 ;;  dado            2    0[COMRAM] PTR unsigned char 
 21642 ;;		 -> fifo_add_control@c(1), fifo_add_tempo@t(1), fifo_add@passo(1), RAM(2047), 
 21643 ;; Auto vars:     Size  Location     Type
 21644 ;;  tipo            1    4[COMRAM] unsigned char 
 21645 ;; Return value:  Size  Location     Type
 21646 ;;                  1    wreg      void 
 21647 ;; Registers used:
 21648 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 21649 ;; Tracked objects:
 21650 ;;		On entry : 0/0
 21651 ;;		On exit  : 0/0
 21652 ;;		Unchanged: 0/0
 21653 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21654 ;;      Params:         2       0       0       0       0       0       0       0       0       0
 21655 ;;      Locals:         1       0       0       0       0       0       0       0       0       0
 21656 ;;      Temps:          2       0       0       0       0       0       0       0       0       0
 21657 ;;      Totals:         5       0       0       0       0       0       0       0       0       0
 21658 ;;Total ram usage:        5 bytes
 21659 ;; Hardware stack levels used:    1
 21660 ;; Hardware stack levels required when called:    2
 21661 ;; This function calls:
 21662 ;;		Nothing
 21663 ;; This function is called by:
 21664 ;;		_fifo_delete
 21665 ;;		_fifo_add
 21666 ;;		_fifo_add_tempo
 21667 ;;		_fifo_add_control
 21668 ;; This function uses a non-reentrant model
 21669 ;;
 21670                           psect	text49,class=CODE,space=0,reloc=2,group=0
 21671                           	file	"fifo.c"
 21672                           	line	200
 21673                           global __ptext49
 21674                           __ptext49:
 21675  002866                     psect	text49
 21676                           	file	"fifo.c"
 21677                           	line	200
 21678                           	global	__size_of_codifica
 21679                           	__size_of_codifica	equ	__end_of_codifica-_codifica
 21680  0000                     	
 21681                           _codifica:
 21682  002866                     ;incstack = 0
 21683                           	opt	stack 27
 21684                           ;codifica@tipo stored from wreg
 21685                           	movwf	((c:codifica@tipo)),c
 21686  002866  6E2B               	line	202
 21687                           	
 21688                           l5343:
 21689  002868                     ;fifo.c: 200: void codifica( unsigned char tipo, unsigned char *dado );fifo.c: 201: {;fi
                                 fo.c: 202:     switch( tipo )
 21690                           	goto	l5373
 21691  002868  EFCD  F014         	line	204
 21692                           ;fifo.c: 203:     {;fifo.c: 204:         case 'p': if(*dado == 0)
 21693                           	
 21694                           l735:
 21695  00286C                     	
 21696                           l5345:
 21697  00286C                     	movff	(c:codifica@dado),fsr2l
 21698  00286C  C027  FFD9         	movff	(c:codifica@dado+1),fsr2h
 21699  002870  C028  FFDA         	movf	indf2,w
 21700  002874  50DF               	btfss	status,2
 21701  002876  A4D8               	goto	u3771
 21702  002878  EF40  F014         	goto	u3770
 21703  00287C  EF42  F014         u3771:
 21704  002880                     	goto	l750
 21705  002880  EFE6  F014         u3770:
 21706  002884                     	line	205
 21707                           	
 21708                           l5347:
 21709  002884                     ;fifo.c: 205:                        *dado = 254;
 21710                           	movff	(c:codifica@dado),fsr2l
 21711  002884  C027  FFD9         	movff	(c:codifica@dado+1),fsr2h
 21712  002888  C028  FFDA         	movlw	low(0FEh)
 21713  00288C  0EFE               	movwf	indf2
 21714  00288E  6EDF               	goto	l750
 21715  002890  EFE6  F014         	
 21716                           l736:
 21717  002894                     	line	206
 21718                           ;fifo.c: 206:                         break;
 21719                           	goto	l750
 21720  002894  EFE6  F014         	line	208
 21721                           ;fifo.c: 208:         case 't': *dado += 0x64; break;
 21722                           	
 21723                           l738:
 21724  002898                     	
 21725                           l5349:
 21726  002898                     	movff	(c:codifica@dado),fsr2l
 21727  002898  C027  FFD9         	movff	(c:codifica@dado+1),fsr2h
 21728  00289C  C028  FFDA         	movlw	064h
 21729  0028A0  0E64               	addwf	indf2
 21730  0028A2  26DF               	goto	l750
 21731  0028A4  EFE6  F014         	line	209
 21732                           ;fifo.c: 209:         case 'a':
 21733                           	
 21734                           l739:
 21735  0028A8                     	line	211
 21736                           ;fifo.c: 211:         switch( *dado )
 21737                           	goto	l5369
 21738  0028A8  EF98  F014         	line	213
 21739                           ;fifo.c: 212:         {;fifo.c: 213:             case 'A': *dado = 221; break;
 21740                           	
 21741                           l741:
 21742  0028AC                     	
 21743                           l5351:
 21744  0028AC                     	movff	(c:codifica@dado),fsr2l
 21745  0028AC  C027  FFD9         	movff	(c:codifica@dado+1),fsr2h
 21746  0028B0  C028  FFDA         	movlw	low(0DDh)
 21747  0028B4  0EDD               	movwf	indf2
 21748  0028B6  6EDF               	goto	l750
 21749  0028B8  EFE6  F014         	line	214
 21750                           ;fifo.c: 214:             case 'a': *dado = 222; break;
 21751                           	
 21752                           l743:
 21753  0028BC                     	
 21754                           l5353:
 21755  0028BC                     	movff	(c:codifica@dado),fsr2l
 21756  0028BC  C027  FFD9         	movff	(c:codifica@dado+1),fsr2h
 21757  0028C0  C028  FFDA         	movlw	low(0DEh)
 21758  0028C4  0EDE               	movwf	indf2
 21759  0028C6  6EDF               	goto	l750
 21760  0028C8  EFE6  F014         	line	215
 21761                           ;fifo.c: 215:             case 'B': *dado = 223; break;
 21762                           	
 21763                           l744:
 21764  0028CC                     	
 21765                           l5355:
 21766  0028CC                     	movff	(c:codifica@dado),fsr2l
 21767  0028CC  C027  FFD9         	movff	(c:codifica@dado+1),fsr2h
 21768  0028D0  C028  FFDA         	movlw	low(0DFh)
 21769  0028D4  0EDF               	movwf	indf2
 21770  0028D6  6EDF               	goto	l750
 21771  0028D8  EFE6  F014         	line	216
 21772                           ;fifo.c: 216:             case 'b': *dado = 224; break;
 21773                           	
 21774                           l745:
 21775  0028DC                     	
 21776                           l5357:
 21777  0028DC                     	movff	(c:codifica@dado),fsr2l
 21778  0028DC  C027  FFD9         	movff	(c:codifica@dado+1),fsr2h
 21779  0028E0  C028  FFDA         	movlw	low(0E0h)
 21780  0028E4  0EE0               	movwf	indf2
 21781  0028E6  6EDF               	goto	l750
 21782  0028E8  EFE6  F014         	line	217
 21783                           ;fifo.c: 217:             case 'C': *dado = 225; break;
 21784                           	
 21785                           l746:
 21786  0028EC                     	
 21787                           l5359:
 21788  0028EC                     	movff	(c:codifica@dado),fsr2l
 21789  0028EC  C027  FFD9         	movff	(c:codifica@dado+1),fsr2h
 21790  0028F0  C028  FFDA         	movlw	low(0E1h)
 21791  0028F4  0EE1               	movwf	indf2
 21792  0028F6  6EDF               	goto	l750
 21793  0028F8  EFE6  F014         	line	218
 21794                           ;fifo.c: 218:             case 'c': *dado = 226; break;
 21795                           	
 21796                           l747:
 21797  0028FC                     	
 21798                           l5361:
 21799  0028FC                     	movff	(c:codifica@dado),fsr2l
 21800  0028FC  C027  FFD9         	movff	(c:codifica@dado+1),fsr2h
 21801  002900  C028  FFDA         	movlw	low(0E2h)
 21802  002904  0EE2               	movwf	indf2
 21803  002906  6EDF               	goto	l750
 21804  002908  EFE6  F014         	line	219
 21805                           ;fifo.c: 219:             case 'D': *dado = 227; break;
 21806                           	
 21807                           l748:
 21808  00290C                     	
 21809                           l5363:
 21810  00290C                     	movff	(c:codifica@dado),fsr2l
 21811  00290C  C027  FFD9         	movff	(c:codifica@dado+1),fsr2h
 21812  002910  C028  FFDA         	movlw	low(0E3h)
 21813  002914  0EE3               	movwf	indf2
 21814  002916  6EDF               	goto	l750
 21815  002918  EFE6  F014         	line	220
 21816                           ;fifo.c: 220:             case 'd': *dado = 228; break;
 21817                           	
 21818                           l749:
 21819  00291C                     	
 21820                           l5365:
 21821  00291C                     	movff	(c:codifica@dado),fsr2l
 21822  00291C  C027  FFD9         	movff	(c:codifica@dado+1),fsr2h
 21823  002920  C028  FFDA         	movlw	low(0E4h)
 21824  002924  0EE4               	movwf	indf2
 21825  002926  6EDF               	goto	l750
 21826  002928  EFE6  F014         	line	221
 21827                           	
 21828                           l5367:
 21829  00292C                     ;fifo.c: 221:         }
 21830                           	goto	l750
 21831  00292C  EFE6  F014         	
 21832                           l740:
 21833  002930                     	
 21834                           l5369:
 21835  002930                     	movff	(c:codifica@dado),fsr2l
 21836  002930  C027  FFD9         	movff	(c:codifica@dado+1),fsr2h
 21837  002934  C028  FFDA         	movf	indf2,w
 21838  002938  50DF               	movwf	(??_codifica+0+0)&0ffh,c
 21839  00293A  6E29               	clrf	(??_codifica+0+0+1)&0ffh,c
 21840  00293C  6A2A               
 21841                           	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
 21842                           ; Switch size 1, requested type "space"
 21843                           ; Number of cases is 1, Range of values is 0 to 0
 21844                           ; switch strategies available:
 21845                           ; Name         Instructions Cycles
 21846                           ; simple_byte            4     3 (average)
 21847                           ;	Chosen strategy is simple_byte
 21848                           
 21849                           	movf ??_codifica+0+1,c,w
 21850  00293E  502A               	xorlw	0^0	; case 0
 21851  002940  0A00               	skipnz
 21852  002942  B4D8               	goto	l7979
 21853  002944  EFA6  F014         	goto	l750
 21854  002948  EFE6  F014         	
 21855                           l7979:
 21856  00294C                     ; Switch size 1, requested type "space"
 21857                           ; Number of cases is 8, Range of values is 65 to 100
 21858                           ; switch strategies available:
 21859                           ; Name         Instructions Cycles
 21860                           ; simple_byte           25    13 (average)
 21861                           ;	Chosen strategy is simple_byte
 21862                           
 21863                           	movf ??_codifica+0+0,c,w
 21864  00294C  5029               	xorlw	65^0	; case 65
 21865  00294E  0A41               	skipnz
 21866  002950  B4D8               	goto	l5351
 21867  002952  EF56  F014         	xorlw	66^65	; case 66
 21868  002956  0A03               	skipnz
 21869  002958  B4D8               	goto	l5355
 21870  00295A  EF66  F014         	xorlw	67^66	; case 67
 21871  00295E  0A01               	skipnz
 21872  002960  B4D8               	goto	l5359
 21873  002962  EF76  F014         	xorlw	68^67	; case 68
 21874  002966  0A07               	skipnz
 21875  002968  B4D8               	goto	l5363
 21876  00296A  EF86  F014         	xorlw	97^68	; case 97
 21877  00296E  0A25               	skipnz
 21878  002970  B4D8               	goto	l5353
 21879  002972  EF5E  F014         	xorlw	98^97	; case 98
 21880  002976  0A03               	skipnz
 21881  002978  B4D8               	goto	l5357
 21882  00297A  EF6E  F014         	xorlw	99^98	; case 99
 21883  00297E  0A01               	skipnz
 21884  002980  B4D8               	goto	l5361
 21885  002982  EF7E  F014         	xorlw	100^99	; case 100
 21886  002986  0A07               	skipnz
 21887  002988  B4D8               	goto	l5365
 21888  00298A  EF8E  F014         	goto	l750
 21889  00298E  EFE6  F014         
 21890                           	
 21891                           l742:
 21892  002992                     	line	223
 21893                           ;fifo.c: 223:         break;
 21894                           	goto	l750
 21895  002992  EFE6  F014         	line	225
 21896                           	
 21897                           l5371:
 21898  002996                     ;fifo.c: 225:     }
 21899                           	goto	l750
 21900  002996  EFE6  F014         	
 21901                           l734:
 21902  00299A                     	
 21903                           l5373:
 21904  00299A                     	movf	((c:codifica@tipo)),c,w
 21905  00299A  502B               	movwf	(??_codifica+0+0)&0ffh,c
 21906  00299C  6E29               	clrf	(??_codifica+0+0+1)&0ffh,c
 21907  00299E  6A2A               
 21908                           	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
 21909                           ; Switch size 1, requested type "space"
 21910                           ; Number of cases is 1, Range of values is 0 to 0
 21911                           ; switch strategies available:
 21912                           ; Name         Instructions Cycles
 21913                           ; simple_byte            4     3 (average)
 21914                           ;	Chosen strategy is simple_byte
 21915                           
 21916                           	movf ??_codifica+0+1,c,w
 21917  0029A0  502A               	xorlw	0^0	; case 0
 21918  0029A2  0A00               	skipnz
 21919  0029A4  B4D8               	goto	l7981
 21920  0029A6  EFD7  F014         	goto	l750
 21921  0029AA  EFE6  F014         	
 21922                           l7981:
 21923  0029AE                     ; Switch size 1, requested type "space"
 21924                           ; Number of cases is 3, Range of values is 97 to 116
 21925                           ; switch strategies available:
 21926                           ; Name         Instructions Cycles
 21927                           ; simple_byte           10     6 (average)
 21928                           ;	Chosen strategy is simple_byte
 21929                           
 21930                           	movf ??_codifica+0+0,c,w
 21931  0029AE  5029               	xorlw	97^0	; case 97
 21932  0029B0  0A61               	skipnz
 21933  0029B2  B4D8               	goto	l5369
 21934  0029B4  EF98  F014         	xorlw	112^97	; case 112
 21935  0029B8  0A11               	skipnz
 21936  0029BA  B4D8               	goto	l5345
 21937  0029BC  EF36  F014         	xorlw	116^112	; case 116
 21938  0029C0  0A04               	skipnz
 21939  0029C2  B4D8               	goto	l5349
 21940  0029C4  EF4C  F014         	goto	l750
 21941  0029C8  EFE6  F014         
 21942                           	
 21943                           l737:
 21944  0029CC                     	line	226
 21945                           	
 21946                           l750:
 21947  0029CC                     	return	;funcret
 21948  0029CC  0012               	opt stack 0
 21949                           GLOBAL	__end_of_codifica
 21950                           	__end_of_codifica:
 21951  0029CE                     	signat	_codifica,8313
 21952                           	global	_dispLCD_str
 21953                           
 21954 ;; *************** function _dispLCD_str *****************
 21955 ;; Defined at:
 21956 ;;		line 250 in file "dispLCD4vias.c"
 21957 ;; Parameters:    Size  Location     Type
 21958 ;;  str             2    7[COMRAM] PTR const unsigned char 
 21959 ;;		 -> STR_27(78), STR_26(62), STR_15(81), STR_4(83), 
 21960 ;; Auto vars:     Size  Location     Type
 21961 ;;  c               1   10[COMRAM] unsigned char 
 21962 ;;  lin             1    9[COMRAM] unsigned char 
 21963 ;; Return value:  Size  Location     Type
 21964 ;;                  1    wreg      void 
 21965 ;; Registers used:
 21966 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21967 ;; Tracked objects:
 21968 ;;		On entry : 0/0
 21969 ;;		On exit  : 0/0
 21970 ;;		Unchanged: 0/0
 21971 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21972 ;;      Params:         2       0       0       0       0       0       0       0       0       0
 21973 ;;      Locals:         2       0       0       0       0       0       0       0       0       0
 21974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0
 21975 ;;      Totals:         4       0       0       0       0       0       0       0       0       0
 21976 ;;Total ram usage:        4 bytes
 21977 ;; Hardware stack levels used:    1
 21978 ;; Hardware stack levels required when called:    4
 21979 ;; This function calls:
 21980 ;;		_dispLCD_dataReg
 21981 ;;		_dispLCD_lincol
 21982 ;; This function is called by:
 21983 ;;		_main
 21984 ;; This function uses a non-reentrant model
 21985 ;;
 21986                           psect	text50,class=CODE,space=0,reloc=2,group=0
 21987                           	file	"dispLCD4vias.c"
 21988                           	line	250
 21989                           global __ptext50
 21990                           __ptext50:
 21991  003A3A                     psect	text50
 21992                           	file	"dispLCD4vias.c"
 21993                           	line	250
 21994                           	global	__size_of_dispLCD_str
 21995                           	__size_of_dispLCD_str	equ	__end_of_dispLCD_str-_dispLCD_str
 21996  0000                     	
 21997                           _dispLCD_str:
 21998  003A3A                     ;incstack = 0
 21999                           	opt	stack 26
 22000                           	line	252
 22001                           	
 22002                           l6113:
 22003  003A3A                     ;dispLCD4vias.c: 250: void dispLCD_str( const char * str );dispLCD4vias.c: 251: {;dispLC
                                 D4vias.c: 252:     char lin = 0;
 22004                           	movlw	low(0)
 22005  003A3A  0E00               	movwf	((c:dispLCD_str@lin)),c
 22006  003A3C  6E30               	line	254
 22007                           	
 22008                           l6115:
 22009  003A3E                     ;dispLCD4vias.c: 253:     char c;;dispLCD4vias.c: 254:     dispLCD_lincol(0,0);
 22010                           	movlw	low(0)
 22011  003A3E  0E00               	movwf	((c:dispLCD_lincol@col)),c
 22012  003A40  6E29               	movlw	(0)&0ffh
 22013  003A42  0E00               	
 22014                           	call	_dispLCD_lincol
 22015  003A44  EC54  F01E         	line	256
 22016                           ;dispLCD4vias.c: 256:     while( c = *str )
 22017                           	goto	l6125
 22018  003A48  EF40  F01D         	
 22019                           l547:
 22020  003A4C                     	line	258
 22021                           	
 22022                           l6117:
 22023  003A4C                     ;dispLCD4vias.c: 257:     {;dispLCD4vias.c: 258:         if( c != '\n' )
 22024                           		movlw	10
 22025  003A4C  0E0A               	xorwf	((c:dispLCD_str@c)),c,w
 22026  003A4E  1831               	btfsc	status,2
 22027  003A50  B4D8               	goto	u4581
 22028  003A52  EF2D  F01D         	goto	u4580
 22029  003A56  EF2F  F01D         
 22030                           u4581:
 22031  003A5A                     	goto	l6121
 22032  003A5A  EF34  F01D         u4580:
 22033  003A5E                     	line	259
 22034                           	
 22035                           l6119:
 22036  003A5E                     ;dispLCD4vias.c: 259:             dispLCD_dataReg( c );
 22037                           	movf	((c:dispLCD_str@c)),c,w
 22038  003A5E  5031               	
 22039                           	call	_dispLCD_dataReg
 22040  003A60  EC8F  F01F         	goto	l6123
 22041  003A64  EF3C  F01D         	line	260
 22042                           ;dispLCD4vias.c: 260:         else
 22043                           	
 22044                           l548:
 22045  003A68                     	line	261
 22046                           	
 22047                           l6121:
 22048  003A68                     ;dispLCD4vias.c: 261:             dispLCD_lincol(++lin,0);
 22049                           	movlw	low(0)
 22050  003A68  0E00               	movwf	((c:dispLCD_lincol@col)),c
 22051  003A6A  6E29               	incf	((c:dispLCD_str@lin)),c
 22052  003A6C  2A30               	movf	((c:dispLCD_str@lin)),c,w
 22053  003A6E  5030               	
 22054                           	call	_dispLCD_lincol
 22055  003A70  EC54  F01E         	goto	l6123
 22056  003A74  EF3C  F01D         	
 22057                           l549:
 22058  003A78                     	line	262
 22059                           	
 22060                           l6123:
 22061  003A78                     ;dispLCD4vias.c: 262:         ++str;
 22062                           	infsnz	((c:dispLCD_str@str)),c
 22063  003A78  4A2E               	incf	((c:dispLCD_str@str+1)),c
 22064  003A7A  2A2F               	goto	l6125
 22065  003A7C  EF40  F01D         	line	263
 22066                           ;dispLCD4vias.c: 263:     }
 22067                           	
 22068                           l546:
 22069  003A80                     	line	256
 22070                           	
 22071                           l6125:
 22072  003A80                     ;dispLCD4vias.c: 256:     while( c = *str )
 22073                           	movff	(c:dispLCD_str@str),tblptrl
 22074  003A80  C02E  FFF6         	movff	(c:dispLCD_str@str+1),tblptrh
 22075  003A84  C02F  FFF7         	if	0	;tblptru may be non-zero
 22076  003A88                     	clrf	tblptru
 22078  003A88                     	if	0	;tblptru may be non-zero
 22079  003A88                     	global __mediumconst
 22080                           movlw	low highword(__mediumconst)
 22083  003A88                     	tblrd	*
 22084  003A88  0008               	
 22085                           	movff	tablat,(c:dispLCD_str@c)
 22086  003A8A  CFF5 F031          	movf	((c:dispLCD_str@c)),c,w
 22087  003A8E  5031               	btfss	status,2
 22088  003A90  A4D8               	goto	u4591
 22089  003A92  EF4D  F01D         	goto	u4590
 22090  003A96  EF4F  F01D         u4591:
 22091  003A9A                     	goto	l6117
 22092  003A9A  EF26  F01D         u4590:
 22093  003A9E                     	goto	l551
 22094  003A9E  EF51  F01D         	
 22095                           l550:
 22096  003AA2                     	line	264
 22097                           	
 22098                           l551:
 22099  003AA2                     	return	;funcret
 22100  003AA2  0012               	opt stack 0
 22101                           GLOBAL	__end_of_dispLCD_str
 22102                           	__end_of_dispLCD_str:
 22103  003AA4                     	signat	_dispLCD_str,4217
 22104                           	global	_dispLCD_init
 22105                           
 22106 ;; *************** function _dispLCD_init *****************
 22107 ;; Defined at:
 22108 ;;		line 165 in file "dispLCD4vias.c"
 22109 ;; Parameters:    Size  Location     Type
 22110 ;;		None
 22111 ;; Auto vars:     Size  Location     Type
 22112 ;;		None
 22113 ;; Return value:  Size  Location     Type
 22114 ;;                  1    wreg      void 
 22115 ;; Registers used:
 22116 ;;		wreg, status,2, status,0, cstack
 22117 ;; Tracked objects:
 22118 ;;		On entry : 0/0
 22119 ;;		On exit  : 0/0
 22120 ;;		Unchanged: 0/0
 22121 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22122 ;;      Params:         0       0       0       0       0       0       0       0       0       0
 22123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0
 22124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0
 22125 ;;      Totals:         0       0       0       0       0       0       0       0       0       0
 22126 ;;Total ram usage:        0 bytes
 22127 ;; Hardware stack levels used:    1
 22128 ;; Hardware stack levels required when called:    3
 22129 ;; This function calls:
 22130 ;;		_delay
 22131 ;;		_dispLCD_instReg
 22132 ;; This function is called by:
 22133 ;;		_main
 22134 ;; This function uses a non-reentrant model
 22135 ;;
 22136                           psect	text51,class=CODE,space=0,reloc=2,group=0
 22137                           	line	165
 22138                           global __ptext51
 22139                           __ptext51:
 22140  004100                     psect	text51
 22141                           	file	"dispLCD4vias.c"
 22142                           	line	165
 22143                           	global	__size_of_dispLCD_init
 22144                           	__size_of_dispLCD_init	equ	__end_of_dispLCD_init-_dispLCD_init
 22145  0000                     	
 22146                           _dispLCD_init:
 22147  004100                     ;incstack = 0
 22148                           	opt	stack 27
 22149                           	line	167
 22150                           	
 22151                           l5565:
 22152  004100                     ;dispLCD4vias.c: 167:     ADCON1 = 0xFF;
 22153                           	setf	((c:4033)),c	;volatile
 22154  004100  68C1               	line	170
 22155                           ;dispLCD4vias.c: 170:     TRISBbits.TRISB2 = 0;
 22156                           	bcf	((c:3987)),c,2	;volatile
 22157  004102  9493               	line	171
 22158                           ;dispLCD4vias.c: 171:     TRISBbits.TRISB3 = 0;
 22159                           	bcf	((c:3987)),c,3	;volatile
 22160  004104  9693               	line	172
 22161                           ;dispLCD4vias.c: 172:     TRISBbits.TRISB4 = 0;
 22162                           	bcf	((c:3987)),c,4	;volatile
 22163  004106  9893               	line	173
 22164                           ;dispLCD4vias.c: 173:     TRISBbits.TRISB5 = 0;
 22165                           	bcf	((c:3987)),c,5	;volatile
 22166  004108  9A93               	line	175
 22167                           ;dispLCD4vias.c: 175:     TRISBbits.TRISB6 = 0;
 22168                           	bcf	((c:3987)),c,6	;volatile
 22169  00410A  9C93               	line	176
 22170                           ;dispLCD4vias.c: 176:     TRISBbits.TRISB7 = 0;
 22171                           	bcf	((c:3987)),c,7	;volatile
 22172  00410C  9E93               	line	178
 22173                           ;dispLCD4vias.c: 178:     LCDbits.EN = 1;
 22174                           	bsf	((c:3978)),c,7	;volatile
 22175  00410E  8E8A               	line	179
 22176                           	
 22177                           l5567:
 22178  004110                     ;dispLCD4vias.c: 179:     delay(5);
 22179                           	movlw	high(05h)
 22180  004110  0E00               	movwf	((c:delay@t+1)),c
 22181  004112  6E28               	movlw	low(05h)
 22182  004114  0E05               	movwf	((c:delay@t)),c
 22183  004116  6E27               	call	_delay	;wreg free
 22184  004118  ECE8  F020         	line	180
 22185                           ;dispLCD4vias.c: 180:     dispLCD_instReg( 0x20|0x00|0x08);
 22186                           	movlw	(028h)&0ffh
 22187  00411C  0E28               	
 22188                           	call	_dispLCD_instReg
 22189  00411E  EC51  F017         	line	181
 22190                           ;dispLCD4vias.c: 181:     dispLCD_instReg( 0x08|0x04|0x00|0x00 );
 22191                           	movlw	(0Ch)&0ffh
 22192  004122  0E0C               	
 22193                           	call	_dispLCD_instReg
 22194  004124  EC51  F017         	line	182
 22195                           ;dispLCD4vias.c: 182:     dispLCD_instReg( 0x01 );
 22196                           	movlw	(01h)&0ffh
 22197  004128  0E01               	
 22198                           	call	_dispLCD_instReg
 22199  00412A  EC51  F017         	line	183
 22200                           ;dispLCD4vias.c: 183:     dispLCD_instReg( 0x02 );
 22201                           	movlw	(02h)&0ffh
 22202  00412E  0E02               	
 22203                           	call	_dispLCD_instReg
 22204  004130  EC51  F017         	line	184
 22205                           	
 22206                           l517:
 22207  004134                     	return	;funcret
 22208  004134  0012               	opt stack 0
 22209                           GLOBAL	__end_of_dispLCD_init
 22210                           	__end_of_dispLCD_init:
 22211  004136                     	signat	_dispLCD_init,89
 22212                           	global	_dispLCD_clr
 22213                           
 22214 ;; *************** function _dispLCD_clr *****************
 22215 ;; Defined at:
 22216 ;;		line 244 in file "dispLCD4vias.c"
 22217 ;; Parameters:    Size  Location     Type
 22218 ;;		None
 22219 ;; Auto vars:     Size  Location     Type
 22220 ;;		None
 22221 ;; Return value:  Size  Location     Type
 22222 ;;                  1    wreg      void 
 22223 ;; Registers used:
 22224 ;;		wreg, status,2, status,0, cstack
 22225 ;; Tracked objects:
 22226 ;;		On entry : 0/0
 22227 ;;		On exit  : 0/0
 22228 ;;		Unchanged: 0/0
 22229 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22230 ;;      Params:         0       0       0       0       0       0       0       0       0       0
 22231 ;;      Locals:         0       0       0       0       0       0       0       0       0       0
 22232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0
 22233 ;;      Totals:         0       0       0       0       0       0       0       0       0       0
 22234 ;;Total ram usage:        0 bytes
 22235 ;; Hardware stack levels used:    1
 22236 ;; Hardware stack levels required when called:    3
 22237 ;; This function calls:
 22238 ;;		_dispLCD_instReg
 22239 ;; This function is called by:
 22240 ;;		_main
 22241 ;; This function uses a non-reentrant model
 22242 ;;
 22243                           psect	text52,class=CODE,space=0,reloc=2,group=0
 22244                           	line	244
 22245                           global __ptext52
 22246                           __ptext52:
 22247  00457C                     psect	text52
 22248                           	file	"dispLCD4vias.c"
 22249                           	line	244
 22250                           	global	__size_of_dispLCD_clr
 22251                           	__size_of_dispLCD_clr	equ	__end_of_dispLCD_clr-_dispLCD_clr
 22252  0000                     	
 22253                           _dispLCD_clr:
 22254  00457C                     ;incstack = 0
 22255                           	opt	stack 27
 22256                           	line	246
 22257                           	
 22258                           l5841:
 22259  00457C                     ;dispLCD4vias.c: 246:     dispLCD_instReg(0x01);
 22260                           	movlw	(01h)&0ffh
 22261  00457C  0E01               	
 22262                           	call	_dispLCD_instReg
 22263  00457E  EC51  F017         	line	247
 22264                           	
 22265                           l543:
 22266  004582                     	return	;funcret
 22267  004582  0012               	opt stack 0
 22268                           GLOBAL	__end_of_dispLCD_clr
 22269                           	__end_of_dispLCD_clr:
 22270  004584                     	signat	_dispLCD_clr,89
 22271                           	global	_dispLCD
 22272                           
 22273 ;; *************** function _dispLCD *****************
 22274 ;; Defined at:
 22275 ;;		line 187 in file "dispLCD4vias.c"
 22276 ;; Parameters:    Size  Location     Type
 22277 ;;  lin             1    wreg     unsigned char 
 22278 ;;  col             1    7[COMRAM] unsigned char 
 22279 ;;  str             2    8[COMRAM] PTR const unsigned char 
 22280 ;;		 -> STR_32(21), STR_31(21), STR_30(21), STR_29(2), 
 22281 ;;		 -> STR_28(2), STR_25(21), STR_24(21), STR_23(21), 
 22282 ;;		 -> STR_22(21), STR_21(21), STR_20(8), STR_19(21), 
 22283 ;;		 -> STR_18(21), STR_17(21), STR_16(21), STR_14(21), 
 22284 ;;		 -> STR_13(21), STR_12(2), STR_11(2), STR_10(21), 
 22285 ;;		 -> STR_9(21), STR_8(21), STR_7(21), STR_6(21), 
 22286 ;;		 -> STR_5(21), STR_3(21), STR_2(2), STR_1(2), 
 22287 ;; Auto vars:     Size  Location     Type
 22288 ;;  lin             1   11[COMRAM] unsigned char 
 22289 ;;  pos             1   10[COMRAM] unsigned char 
 22290 ;; Return value:  Size  Location     Type
 22291 ;;                  1    wreg      void 
 22292 ;; Registers used:
 22293 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 22294 ;; Tracked objects:
 22295 ;;		On entry : 0/0
 22296 ;;		On exit  : 0/0
 22297 ;;		Unchanged: 0/0
 22298 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22299 ;;      Params:         3       0       0       0       0       0       0       0       0       0
 22300 ;;      Locals:         2       0       0       0       0       0       0       0       0       0
 22301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0
 22302 ;;      Totals:         5       0       0       0       0       0       0       0       0       0
 22303 ;;Total ram usage:        5 bytes
 22304 ;; Hardware stack levels used:    1
 22305 ;; Hardware stack levels required when called:    4
 22306 ;; This function calls:
 22307 ;;		_dispLCD_dataReg
 22308 ;;		_dispLCD_lincol
 22309 ;; This function is called by:
 22310 ;;		_main
 22311 ;; This function uses a non-reentrant model
 22312 ;;
 22313                           psect	text53,class=CODE,space=0,reloc=2,group=0
 22314                           	line	187
 22315                           global __ptext53
 22316                           __ptext53:
 22317  003ECE                     psect	text53
 22318                           	file	"dispLCD4vias.c"
 22319                           	line	187
 22320                           	global	__size_of_dispLCD
 22321                           	__size_of_dispLCD	equ	__end_of_dispLCD-_dispLCD
 22322  0000                     	
 22323                           _dispLCD:
 22324  003ECE                     ;incstack = 0
 22325                           	opt	stack 26
 22326                           ;dispLCD@lin stored from wreg
 22327                           	movwf	((c:dispLCD@lin)),c
 22328  003ECE  6E32               	line	189
 22329                           	
 22330                           l5843:
 22331  003ED0                     ;dispLCD4vias.c: 187: void dispLCD( unsigned char lin, unsigned char col, const char * s
                                 tr );dispLCD4vias.c: 188: {;dispLCD4vias.c: 189:     char pos = col;
 22332                           	movff	(c:dispLCD@col),(c:dispLCD@pos)
 22333  003ED0  C02E  F031         	line	190
 22334                           	
 22335                           l5845:
 22336  003ED4                     ;dispLCD4vias.c: 190:     dispLCD_lincol( lin, col );
 22337                           	movff	(c:dispLCD@col),(c:dispLCD_lincol@col)
 22338  003ED4  C02E  F029         	movf	((c:dispLCD@lin)),c,w
 22339  003ED8  5032               	
 22340                           	call	_dispLCD_lincol
 22341  003EDA  EC54  F01E         	line	192
 22342                           ;dispLCD4vias.c: 192:     while( *str )
 22343                           	goto	l5853
 22344  003EDE  EF7E  F01F         	
 22345                           l521:
 22346  003EE2                     	line	194
 22347                           	
 22348                           l5847:
 22349  003EE2                     ;dispLCD4vias.c: 193:     {;dispLCD4vias.c: 194:         dispLCD_dataReg( *str );
 22350                           	movff	(c:dispLCD@str),tblptrl
 22351  003EE2  C02F  FFF6         	movff	(c:dispLCD@str+1),tblptrh
 22352  003EE6  C030  FFF7         	if	0	;tblptru may be non-zero
 22353  003EEA                     	clrf	tblptru
 22355  003EEA                     	if	0	;tblptru may be non-zero
 22356  003EEA                     	global __mediumconst
 22357                           movlw	low highword(__mediumconst)
 22360  003EEA                     	tblrd	*
 22361  003EEA  0008               	
 22362                           	movf	tablat,w
 22363  003EEC  50F5               	
 22364                           	call	_dispLCD_dataReg
 22365  003EEE  EC8F  F01F         	line	195
 22366                           	
 22367                           l5849:
 22368  003EF2                     ;dispLCD4vias.c: 195:         ++str;
 22369                           	infsnz	((c:dispLCD@str)),c
 22370  003EF2  4A2F               	incf	((c:dispLCD@str+1)),c
 22371  003EF4  2A30               	line	196
 22372                           	
 22373                           l5851:
 22374  003EF6                     ;dispLCD4vias.c: 196:         ++pos;
 22375                           	incf	((c:dispLCD@pos)),c
 22376  003EF6  2A31               	goto	l5853
 22377  003EF8  EF7E  F01F         	line	197
 22378                           ;dispLCD4vias.c: 197:     }
 22379                           	
 22380                           l520:
 22381  003EFC                     	line	192
 22382                           	
 22383                           l5853:
 22384  003EFC                     ;dispLCD4vias.c: 192:     while( *str )
 22385                           	movff	(c:dispLCD@str),tblptrl
 22386  003EFC  C02F  FFF6         	movff	(c:dispLCD@str+1),tblptrh
 22387  003F00  C030  FFF7         	if	0	;tblptru may be non-zero
 22388  003F04                     	clrf	tblptru
 22390  003F04                     	if	0	;tblptru may be non-zero
 22391  003F04                     	global __mediumconst
 22392                           movlw	low highword(__mediumconst)
 22395  003F04                     	tblrd	*
 22396  003F04  0008               	
 22397                           	movf	tablat,w
 22398  003F06  50F5               	iorlw	0
 22399  003F08  0900               	btfss	status,2
 22400  003F0A  A4D8               	goto	u4351
 22401  003F0C  EF8A  F01F         	goto	u4350
 22402  003F10  EF8C  F01F         u4351:
 22403  003F14                     	goto	l5847
 22404  003F14  EF71  F01F         u4350:
 22405  003F18                     	goto	l523
 22406  003F18  EF8E  F01F         	
 22407                           l522:
 22408  003F1C                     	line	198
 22409                           	
 22410                           l523:
 22411  003F1C                     	return	;funcret
 22412  003F1C  0012               	opt stack 0
 22413                           GLOBAL	__end_of_dispLCD
 22414                           	__end_of_dispLCD:
 22415  003F1E                     	signat	_dispLCD,12409
 22416                           	global	_dispLCD_lincol
 22417                           
 22418 ;; *************** function _dispLCD_lincol *****************
 22419 ;; Defined at:
 22420 ;;		line 150 in file "dispLCD4vias.c"
 22421 ;; Parameters:    Size  Location     Type
 22422 ;;  lin             1    wreg     unsigned char 
 22423 ;;  col             1    2[COMRAM] unsigned char 
 22424 ;; Auto vars:     Size  Location     Type
 22425 ;;  lin             1    5[COMRAM] unsigned char 
 22426 ;;  aux             1    6[COMRAM] unsigned char 
 22427 ;; Return value:  Size  Location     Type
 22428 ;;                  1    wreg      void 
 22429 ;; Registers used:
 22430 ;;		wreg, status,2, status,0, cstack
 22431 ;; Tracked objects:
 22432 ;;		On entry : 0/0
 22433 ;;		On exit  : 0/0
 22434 ;;		Unchanged: 0/0
 22435 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22436 ;;      Params:         1       0       0       0       0       0       0       0       0       0
 22437 ;;      Locals:         2       0       0       0       0       0       0       0       0       0
 22438 ;;      Temps:          2       0       0       0       0       0       0       0       0       0
 22439 ;;      Totals:         5       0       0       0       0       0       0       0       0       0
 22440 ;;Total ram usage:        5 bytes
 22441 ;; Hardware stack levels used:    1
 22442 ;; Hardware stack levels required when called:    3
 22443 ;; This function calls:
 22444 ;;		_dispLCD_instReg
 22445 ;; This function is called by:
 22446 ;;		_main
 22447 ;;		_dispLCD
 22448 ;;		_dispLCD_num
 22449 ;;		_dispLCD_str
 22450 ;;		_fifo_print
 22451 ;;		_printExec
 22452 ;; This function uses a non-reentrant model
 22453 ;;
 22454                           psect	text54,class=CODE,space=0,reloc=2,group=0
 22455                           	line	150
 22456                           global __ptext54
 22457                           __ptext54:
 22458  003CA8                     psect	text54
 22459                           	file	"dispLCD4vias.c"
 22460                           	line	150
 22461                           	global	__size_of_dispLCD_lincol
 22462                           	__size_of_dispLCD_lincol	equ	__end_of_dispLCD_lincol-_dispLCD_lincol
 22463  0000                     	
 22464                           _dispLCD_lincol:
 22465  003CA8                     ;incstack = 0
 22466                           	opt	stack 25
 22467                           ;dispLCD_lincol@lin stored from wreg
 22468                           	movwf	((c:dispLCD_lincol@lin)),c
 22469  003CA8  6E2C               	line	152
 22470                           	
 22471                           l5085:
 22472  003CAA                     ;dispLCD4vias.c: 150: void dispLCD_lincol( unsigned char lin, unsigned char col);dispLCD
                                 4vias.c: 151: {;dispLCD4vias.c: 152:     char aux = 0x00;
 22473                           	movlw	low(0)
 22474  003CAA  0E00               	movwf	((c:dispLCD_lincol@aux)),c
 22475  003CAC  6E2D               	line	154
 22476                           ;dispLCD4vias.c: 154:     switch(lin)
 22477                           	goto	l5095
 22478  003CAE  EF67  F01E         	line	156
 22479                           ;dispLCD4vias.c: 155:     {;dispLCD4vias.c: 156:         case 1: aux = 0x40; break;
 22480                           	
 22481                           l510:
 22482  003CB2                     	
 22483                           l5087:
 22484  003CB2                     	movlw	low(040h)
 22485  003CB2  0E40               	movwf	((c:dispLCD_lincol@aux)),c
 22486  003CB4  6E2D               	goto	l5097
 22487  003CB6  EF80  F01E         	line	157
 22488                           ;dispLCD4vias.c: 157:         case 2: aux = 0x14; break;
 22489                           	
 22490                           l512:
 22491  003CBA                     	
 22492                           l5089:
 22493  003CBA                     	movlw	low(014h)
 22494  003CBA  0E14               	movwf	((c:dispLCD_lincol@aux)),c
 22495  003CBC  6E2D               	goto	l5097
 22496  003CBE  EF80  F01E         	line	158
 22497                           ;dispLCD4vias.c: 158:         case 3: aux = 0x54; break;
 22498                           	
 22499                           l513:
 22500  003CC2                     	
 22501                           l5091:
 22502  003CC2                     	movlw	low(054h)
 22503  003CC2  0E54               	movwf	((c:dispLCD_lincol@aux)),c
 22504  003CC4  6E2D               	goto	l5097
 22505  003CC6  EF80  F01E         	line	159
 22506                           	
 22507                           l5093:
 22508  003CCA                     ;dispLCD4vias.c: 159:     }
 22509                           	goto	l5097
 22510  003CCA  EF80  F01E         	
 22511                           l509:
 22512  003CCE                     	
 22513                           l5095:
 22514  003CCE                     	movf	((c:dispLCD_lincol@lin)),c,w
 22515  003CCE  502C               	movwf	(??_dispLCD_lincol+0+0)&0ffh,c
 22516  003CD0  6E2A               	clrf	(??_dispLCD_lincol+0+0+1)&0ffh,c
 22517  003CD2  6A2B               
 22518                           	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
 22519                           ; Switch size 1, requested type "space"
 22520                           ; Number of cases is 1, Range of values is 0 to 0
 22521                           ; switch strategies available:
 22522                           ; Name         Instructions Cycles
 22523                           ; simple_byte            4     3 (average)
 22524                           ;	Chosen strategy is simple_byte
 22525                           
 22526                           	movf ??_dispLCD_lincol+0+1,c,w
 22527  003CD4  502B               	xorlw	0^0	; case 0
 22528  003CD6  0A00               	skipnz
 22529  003CD8  B4D8               	goto	l7983
 22530  003CDA  EF71  F01E         	goto	l5097
 22531  003CDE  EF80  F01E         	
 22532                           l7983:
 22533  003CE2                     ; Switch size 1, requested type "space"
 22534                           ; Number of cases is 3, Range of values is 1 to 3
 22535                           ; switch strategies available:
 22536                           ; Name         Instructions Cycles
 22537                           ; simple_byte           10     6 (average)
 22538                           ;	Chosen strategy is simple_byte
 22539                           
 22540                           	movf ??_dispLCD_lincol+0+0,c,w
 22541  003CE2  502A               	xorlw	1^0	; case 1
 22542  003CE4  0A01               	skipnz
 22543  003CE6  B4D8               	goto	l5087
 22544  003CE8  EF59  F01E         	xorlw	2^1	; case 2
 22545  003CEC  0A03               	skipnz
 22546  003CEE  B4D8               	goto	l5089
 22547  003CF0  EF5D  F01E         	xorlw	3^2	; case 3
 22548  003CF4  0A01               	skipnz
 22549  003CF6  B4D8               	goto	l5091
 22550  003CF8  EF61  F01E         	goto	l5097
 22551  003CFC  EF80  F01E         
 22552                           	
 22553                           l511:
 22554  003D00                     	line	161
 22555                           	
 22556                           l5097:
 22557  003D00                     ;dispLCD4vias.c: 161:     dispLCD_instReg( (0x80+(aux + (col + 0x00) & 0x7F)) );
 22558                           	movf	((c:dispLCD_lincol@aux)),c,w
 22559  003D00  502D               	addwf	((c:dispLCD_lincol@col)),c,w
 22560  003D02  2429               	andlw	low(07Fh)
 22561  003D04  0B7F               	addlw	low(080h)
 22562  003D06  0F80               	
 22563                           	call	_dispLCD_instReg
 22564  003D08  EC51  F017         	line	162
 22565                           	
 22566                           l514:
 22567  003D0C                     	return	;funcret
 22568  003D0C  0012               	opt stack 0
 22569                           GLOBAL	__end_of_dispLCD_lincol
 22570                           	__end_of_dispLCD_lincol:
 22571  003D0E                     	signat	_dispLCD_lincol,8313
 22572                           	global	_dispLCD_instReg
 22573                           
 22574 ;; *************** function _dispLCD_instReg *****************
 22575 ;; Defined at:
 22576 ;;		line 101 in file "dispLCD4vias.c"
 22577 ;; Parameters:    Size  Location     Type
 22578 ;;  i               1    wreg     unsigned char 
 22579 ;; Auto vars:     Size  Location     Type
 22580 ;;  i               1    1[COMRAM] unsigned char 
 22581 ;; Return value:  Size  Location     Type
 22582 ;;                  1    wreg      void 
 22583 ;; Registers used:
 22584 ;;		wreg, status,2, status,0
 22585 ;; Tracked objects:
 22586 ;;		On entry : 0/0
 22587 ;;		On exit  : 0/0
 22588 ;;		Unchanged: 0/0
 22589 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22590 ;;      Params:         0       0       0       0       0       0       0       0       0       0
 22591 ;;      Locals:         1       0       0       0       0       0       0       0       0       0
 22592 ;;      Temps:          1       0       0       0       0       0       0       0       0       0
 22593 ;;      Totals:         2       0       0       0       0       0       0       0       0       0
 22594 ;;Total ram usage:        2 bytes
 22595 ;; Hardware stack levels used:    1
 22596 ;; Hardware stack levels required when called:    2
 22597 ;; This function calls:
 22598 ;;		Nothing
 22599 ;; This function is called by:
 22600 ;;		_dispLCD_lincol
 22601 ;;		_dispLCD_init
 22602 ;;		_dispLCD_clr
 22603 ;; This function uses a non-reentrant model
 22604 ;;
 22605                           psect	text55,class=CODE,space=0,reloc=2,group=0
 22606                           	line	101
 22607                           global __ptext55
 22608                           __ptext55:
 22609  002EA2                     psect	text55
 22610                           	file	"dispLCD4vias.c"
 22611                           	line	101
 22612                           	global	__size_of_dispLCD_instReg
 22613                           	__size_of_dispLCD_instReg	equ	__end_of_dispLCD_instReg-_dispLCD_instReg
 22614  0000                     	
 22615                           _dispLCD_instReg:
 22616  002EA2                     ;incstack = 0
 22617                           	opt	stack 25
 22618                           ;dispLCD_instReg@i stored from wreg
 22619                           	movwf	((c:dispLCD_instReg@i)),c
 22620  002EA2  6E28               	line	103
 22621                           	
 22622                           l4993:
 22623  002EA4                     ;dispLCD4vias.c: 101: void dispLCD_instReg( unsigned char i );dispLCD4vias.c: 102: {;dis
                                 pLCD4vias.c: 103:     LCDbits.RS = 0;
 22624                           	bcf	((c:3978)),c,6	;volatile
 22625  002EA4  9C8A               	line	104
 22626                           	
 22627                           l4995:
 22628  002EA6                     ;dispLCD4vias.c: 104:     LCDbits.BUS = (i>>4);
 22629                           	movff	(c:dispLCD_instReg@i),??_dispLCD_instReg+0+0
 22630  002EA6  C028  F027         	swapf	(??_dispLCD_instReg+0+0),c
 22631  002EAA  3A27               	movlw	(0ffh shr 4) & 0ffh
 22632  002EAC  0E0F               	andwf	(??_dispLCD_instReg+0+0),c
 22633  002EAE  1627               	rlncf	(??_dispLCD_instReg+0+0),c
 22634  002EB0  4627               	rlncf	(??_dispLCD_instReg+0+0),c
 22635  002EB2  4627               	movf	((c:3978)),c,w	;volatile
 22636  002EB4  508A               	xorwf	(??_dispLCD_instReg+0+0),c,w
 22637  002EB6  1827               	andlw	not (((1<<4)-1)<<2)
 22638  002EB8  0BC3               	xorwf	(??_dispLCD_instReg+0+0),c,w
 22639  002EBA  1827               	movwf	((c:3978)),c	;volatile
 22640  002EBC  6E8A               	line	106
 22641                           	
 22642                           l4997:
 22643  002EBE                     ;dispLCD4vias.c: 106:     LCDbits.EN = 0;
 22644                           	bcf	((c:3978)),c,7	;volatile
 22645  002EBE  9E8A               	line	107
 22646                           ;dispLCD4vias.c: 107:     if( i == 0x01 || i == 0x02 )
 22647                           		decf	((c:dispLCD_instReg@i)),c,w
 22648  002EC0  0428               	btfsc	status,2
 22649  002EC2  B4D8               	goto	u3261
 22650  002EC4  EF66  F017         	goto	u3260
 22651  002EC8  EF68  F017         
 22652                           u3261:
 22653  002ECC                     	goto	l5001
 22654  002ECC  EF73  F017         u3260:
 22655  002ED0                     	
 22656                           l4999:
 22657  002ED0                     		movlw	2
 22658  002ED0  0E02               	xorwf	((c:dispLCD_instReg@i)),c,w
 22659  002ED2  1828               	btfss	status,2
 22660  002ED4  A4D8               	goto	u3271
 22661  002ED6  EF6F  F017         	goto	u3270
 22662  002EDA  EF71  F017         
 22663                           u3271:
 22664  002EDE                     	goto	l5003
 22665  002EDE  EF7C  F017         u3270:
 22666  002EE2                     	goto	l5001
 22667  002EE2  EF73  F017         	
 22668                           l496:
 22669  002EE6                     	line	108
 22670                           	
 22671                           l5001:
 22672  002EE6                     ;dispLCD4vias.c: 108:         _delay((unsigned long)((2)*(20000000/4000.0)));
 22673                           	opt asmopt_push
 22674                           opt asmopt_off
 22675                           movlw	13
 22676  002EE6  0E0D               movwf	(??_dispLCD_instReg+0+0)&0ffh,c,f
 22677  002EE8  6E27               	movlw	252
 22678  002EEA  0EFC               u6327:
 22679  002EEC                     decfsz	wreg,f
 22680  002EEC  2EE8               	bra	u6327
 22681  002EEE  D7FE               	decfsz	(??_dispLCD_instReg+0+0)&0ffh,c,f
 22682  002EF0  2E27               	bra	u6327
 22683  002EF2  D7FC               opt asmopt_pop
 22684                           
 22685                           	goto	l5005
 22686  002EF4  EF82  F017         	line	109
 22687                           ;dispLCD4vias.c: 109:     else
 22688                           	
 22689                           l494:
 22690  002EF8                     	line	110
 22691                           	
 22692                           l5003:
 22693  002EF8                     ;dispLCD4vias.c: 110:         _delay((unsigned long)((40)*(20000000/4000000.0)));
 22694                           	opt asmopt_push
 22695                           opt asmopt_off
 22696                           	movlw	66
 22697  002EF8  0E42               u6337:
 22698  002EFA                     decfsz	wreg,f
 22699  002EFA  2EE8               	bra	u6337
 22700  002EFC  D7FE               	nop2
 22701  002EFE  D000               opt asmopt_pop
 22702                           
 22703                           	goto	l5005
 22704  002F00  EF82  F017         	
 22705                           l497:
 22706  002F04                     	line	111
 22707                           	
 22708                           l5005:
 22709  002F04                     ;dispLCD4vias.c: 111:     LCDbits.EN = 1;
 22710                           	bsf	((c:3978)),c,7	;volatile
 22711  002F04  8E8A               	line	114
 22712                           	
 22713                           l5007:
 22714  002F06                     ;dispLCD4vias.c: 114:     if( (i & 0xF0) == (0x20 | 0x00) )
 22715                           	movf	((c:dispLCD_instReg@i)),c,w
 22716  002F06  5028               	andlw	low(0F0h)
 22717  002F08  0BF0               	xorlw	020h
 22718  002F0A  0A20               	btfss	status,2
 22719  002F0C  A4D8               	goto	u3281
 22720  002F0E  EF8B  F017         	goto	u3280
 22721  002F12  EF8D  F017         u3281:
 22722  002F16                     	goto	l5019
 22723  002F16  EFA2  F017         u3280:
 22724  002F1A                     	line	116
 22725                           	
 22726                           l5009:
 22727  002F1A                     ;dispLCD4vias.c: 115:     {;dispLCD4vias.c: 116:         LCDbits.RS = 0;
 22728                           	bcf	((c:3978)),c,6	;volatile
 22729  002F1A  9C8A               	line	117
 22730                           	
 22731                           l5011:
 22732  002F1C                     ;dispLCD4vias.c: 117:         LCDbits.BUS = i>>4;
 22733                           	movff	(c:dispLCD_instReg@i),??_dispLCD_instReg+0+0
 22734  002F1C  C028  F027         	swapf	(??_dispLCD_instReg+0+0),c
 22735  002F20  3A27               	movlw	(0ffh shr 4) & 0ffh
 22736  002F22  0E0F               	andwf	(??_dispLCD_instReg+0+0),c
 22737  002F24  1627               	rlncf	(??_dispLCD_instReg+0+0),c
 22738  002F26  4627               	rlncf	(??_dispLCD_instReg+0+0),c
 22739  002F28  4627               	movf	((c:3978)),c,w	;volatile
 22740  002F2A  508A               	xorwf	(??_dispLCD_instReg+0+0),c,w
 22741  002F2C  1827               	andlw	not (((1<<4)-1)<<2)
 22742  002F2E  0BC3               	xorwf	(??_dispLCD_instReg+0+0),c,w
 22743  002F30  1827               	movwf	((c:3978)),c	;volatile
 22744  002F32  6E8A               	line	118
 22745                           	
 22746                           l5013:
 22747  002F34                     ;dispLCD4vias.c: 118:         LCDbits.EN = 0;
 22748                           	bcf	((c:3978)),c,7	;volatile
 22749  002F34  9E8A               	line	119
 22750                           	
 22751                           l5015:
 22752  002F36                     ;dispLCD4vias.c: 119:         _delay((unsigned long)((40)*(20000000/4000000.0)));
 22753                           	opt asmopt_push
 22754                           opt asmopt_off
 22755                           	movlw	66
 22756  002F36  0E42               u6347:
 22757  002F38                     decfsz	wreg,f
 22758  002F38  2EE8               	bra	u6347
 22759  002F3A  D7FE               	nop2
 22760  002F3C  D000               opt asmopt_pop
 22761                           
 22762                           	line	120
 22763                           	
 22764                           l5017:
 22765  002F3E                     ;dispLCD4vias.c: 120:         LCDbits.EN = 1;
 22766                           	bsf	((c:3978)),c,7	;volatile
 22767  002F3E  8E8A               	goto	l5019
 22768  002F40  EFA2  F017         	line	121
 22769                           ;dispLCD4vias.c: 121:     }
 22770                           	
 22771                           l498:
 22772  002F44                     	line	123
 22773                           	
 22774                           l5019:
 22775  002F44                     ;dispLCD4vias.c: 123:     LCDbits.RS = 0;
 22776                           	bcf	((c:3978)),c,6	;volatile
 22777  002F44  9C8A               	line	124
 22778                           	
 22779                           l5021:
 22780  002F46                     ;dispLCD4vias.c: 124:     LCDbits.BUS = i & 0x0F;
 22781                           	movff	(c:dispLCD_instReg@i),??_dispLCD_instReg+0+0
 22782  002F46  C028  F027         	movlw	0Fh
 22783  002F4A  0E0F               	andwf	(??_dispLCD_instReg+0+0),c
 22784  002F4C  1627               	rlncf	(??_dispLCD_instReg+0+0),c
 22785  002F4E  4627               	rlncf	(??_dispLCD_instReg+0+0),c
 22786  002F50  4627               	movf	((c:3978)),c,w	;volatile
 22787  002F52  508A               	xorwf	(??_dispLCD_instReg+0+0),c,w
 22788  002F54  1827               	andlw	not (((1<<4)-1)<<2)
 22789  002F56  0BC3               	xorwf	(??_dispLCD_instReg+0+0),c,w
 22790  002F58  1827               	movwf	((c:3978)),c	;volatile
 22791  002F5A  6E8A               	line	125
 22792                           	
 22793                           l5023:
 22794  002F5C                     ;dispLCD4vias.c: 125:     LCDbits.EN = 0;
 22795                           	bcf	((c:3978)),c,7	;volatile
 22796  002F5C  9E8A               	line	126
 22797                           	
 22798                           l5025:
 22799  002F5E                     ;dispLCD4vias.c: 126:     if( i == 0x01 || i == 0x02 )
 22800                           		decf	((c:dispLCD_instReg@i)),c,w
 22801  002F5E  0428               	btfsc	status,2
 22802  002F60  B4D8               	goto	u3291
 22803  002F62  EFB5  F017         	goto	u3290
 22804  002F66  EFB7  F017         
 22805                           u3291:
 22806  002F6A                     	goto	l5029
 22807  002F6A  EFC2  F017         u3290:
 22808  002F6E                     	
 22809                           l5027:
 22810  002F6E                     		movlw	2
 22811  002F6E  0E02               	xorwf	((c:dispLCD_instReg@i)),c,w
 22812  002F70  1828               	btfss	status,2
 22813  002F72  A4D8               	goto	u3301
 22814  002F74  EFBE  F017         	goto	u3300
 22815  002F78  EFC0  F017         
 22816                           u3301:
 22817  002F7C                     	goto	l5031
 22818  002F7C  EFCB  F017         u3300:
 22819  002F80                     	goto	l5029
 22820  002F80  EFC2  F017         	
 22821                           l501:
 22822  002F84                     	line	127
 22823                           	
 22824                           l5029:
 22825  002F84                     ;dispLCD4vias.c: 127:         _delay((unsigned long)((2)*(20000000/4000.0)));
 22826                           	opt asmopt_push
 22827                           opt asmopt_off
 22828                           movlw	13
 22829  002F84  0E0D               movwf	(??_dispLCD_instReg+0+0)&0ffh,c,f
 22830  002F86  6E27               	movlw	252
 22831  002F88  0EFC               u6357:
 22832  002F8A                     decfsz	wreg,f
 22833  002F8A  2EE8               	bra	u6357
 22834  002F8C  D7FE               	decfsz	(??_dispLCD_instReg+0+0)&0ffh,c,f
 22835  002F8E  2E27               	bra	u6357
 22836  002F90  D7FC               opt asmopt_pop
 22837                           
 22838                           	goto	l5033
 22839  002F92  EFD1  F017         	line	128
 22840                           ;dispLCD4vias.c: 128:     else
 22841                           	
 22842                           l499:
 22843  002F96                     	line	129
 22844                           	
 22845                           l5031:
 22846  002F96                     ;dispLCD4vias.c: 129:         _delay((unsigned long)((40)*(20000000/4000000.0)));
 22847                           	opt asmopt_push
 22848                           opt asmopt_off
 22849                           	movlw	66
 22850  002F96  0E42               u6367:
 22851  002F98                     decfsz	wreg,f
 22852  002F98  2EE8               	bra	u6367
 22853  002F9A  D7FE               	nop2
 22854  002F9C  D000               opt asmopt_pop
 22855                           
 22856                           	goto	l5033
 22857  002F9E  EFD1  F017         	
 22858                           l502:
 22859  002FA2                     	line	130
 22860                           	
 22861                           l5033:
 22862  002FA2                     ;dispLCD4vias.c: 130:     LCDbits.EN = 1;
 22863                           	bsf	((c:3978)),c,7	;volatile
 22864  002FA2  8E8A               	line	131
 22865                           	
 22866                           l503:
 22867  002FA4                     	return	;funcret
 22868  002FA4  0012               	opt stack 0
 22869                           GLOBAL	__end_of_dispLCD_instReg
 22870                           	__end_of_dispLCD_instReg:
 22871  002FA6                     	signat	_dispLCD_instReg,4217
 22872                           	global	_dispLCD_dataReg
 22873                           
 22874 ;; *************** function _dispLCD_dataReg *****************
 22875 ;; Defined at:
 22876 ;;		line 134 in file "dispLCD4vias.c"
 22877 ;; Parameters:    Size  Location     Type
 22878 ;;  d               1    wreg     unsigned char 
 22879 ;; Auto vars:     Size  Location     Type
 22880 ;;  d               1    1[COMRAM] unsigned char 
 22881 ;; Return value:  Size  Location     Type
 22882 ;;                  1    wreg      void 
 22883 ;; Registers used:
 22884 ;;		wreg, status,2, status,0
 22885 ;; Tracked objects:
 22886 ;;		On entry : 0/0
 22887 ;;		On exit  : 0/0
 22888 ;;		Unchanged: 0/0
 22889 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22890 ;;      Params:         0       0       0       0       0       0       0       0       0       0
 22891 ;;      Locals:         1       0       0       0       0       0       0       0       0       0
 22892 ;;      Temps:          1       0       0       0       0       0       0       0       0       0
 22893 ;;      Totals:         2       0       0       0       0       0       0       0       0       0
 22894 ;;Total ram usage:        2 bytes
 22895 ;; Hardware stack levels used:    1
 22896 ;; Hardware stack levels required when called:    2
 22897 ;; This function calls:
 22898 ;;		Nothing
 22899 ;; This function is called by:
 22900 ;;		_main
 22901 ;;		_dispLCD
 22902 ;;		_dispLCD_num
 22903 ;;		_dispLCD_str
 22904 ;;		_fifo_print
 22905 ;;		_printExec
 22906 ;; This function uses a non-reentrant model
 22907 ;;
 22908                           psect	text56,class=CODE,space=0,reloc=2,group=0
 22909                           	line	134
 22910                           global __ptext56
 22911                           __ptext56:
 22912  003F1E                     psect	text56
 22913                           	file	"dispLCD4vias.c"
 22914                           	line	134
 22915                           	global	__size_of_dispLCD_dataReg
 22916                           	__size_of_dispLCD_dataReg	equ	__end_of_dispLCD_dataReg-_dispLCD_dataReg
 22917  0000                     	
 22918                           _dispLCD_dataReg:
 22919  003F1E                     ;incstack = 0
 22920                           	opt	stack 26
 22921                           ;dispLCD_dataReg@d stored from wreg
 22922                           	movwf	((c:dispLCD_dataReg@d)),c
 22923  003F1E  6E28               	line	136
 22924                           	
 22925                           l5103:
 22926  003F20                     ;dispLCD4vias.c: 134: void dispLCD_dataReg( unsigned char d );dispLCD4vias.c: 135: {;dis
                                 pLCD4vias.c: 136:     LCDbits.RS = 1;
 22927                           	bsf	((c:3978)),c,6	;volatile
 22928  003F20  8C8A               	line	137
 22929                           	
 22930                           l5105:
 22931  003F22                     ;dispLCD4vias.c: 137:     LCDbits.BUS = d >> 4;
 22932                           	movff	(c:dispLCD_dataReg@d),??_dispLCD_dataReg+0+0
 22933  003F22  C028  F027         	swapf	(??_dispLCD_dataReg+0+0),c
 22934  003F26  3A27               	movlw	(0ffh shr 4) & 0ffh
 22935  003F28  0E0F               	andwf	(??_dispLCD_dataReg+0+0),c
 22936  003F2A  1627               	rlncf	(??_dispLCD_dataReg+0+0),c
 22937  003F2C  4627               	rlncf	(??_dispLCD_dataReg+0+0),c
 22938  003F2E  4627               	movf	((c:3978)),c,w	;volatile
 22939  003F30  508A               	xorwf	(??_dispLCD_dataReg+0+0),c,w
 22940  003F32  1827               	andlw	not (((1<<4)-1)<<2)
 22941  003F34  0BC3               	xorwf	(??_dispLCD_dataReg+0+0),c,w
 22942  003F36  1827               	movwf	((c:3978)),c	;volatile
 22943  003F38  6E8A               	line	138
 22944                           	
 22945                           l5107:
 22946  003F3A                     ;dispLCD4vias.c: 138:     LCDbits.EN = 0;
 22947                           	bcf	((c:3978)),c,7	;volatile
 22948  003F3A  9E8A               	line	139
 22949                           	
 22950                           l5109:
 22951  003F3C                     ;dispLCD4vias.c: 139:     _delay((unsigned long)((40)*(20000000/4000000.0)));
 22952                           	opt asmopt_push
 22953                           opt asmopt_off
 22954                           	movlw	66
 22955  003F3C  0E42               u6377:
 22956  003F3E                     decfsz	wreg,f
 22957  003F3E  2EE8               	bra	u6377
 22958  003F40  D7FE               	nop2
 22959  003F42  D000               opt asmopt_pop
 22960                           
 22961                           	line	140
 22962                           	
 22963                           l5111:
 22964  003F44                     ;dispLCD4vias.c: 140:     LCDbits.EN = 1;
 22965                           	bsf	((c:3978)),c,7	;volatile
 22966  003F44  8E8A               	line	142
 22967                           	
 22968                           l5113:
 22969  003F46                     ;dispLCD4vias.c: 142:     LCDbits.RS = 1;
 22970                           	bsf	((c:3978)),c,6	;volatile
 22971  003F46  8C8A               	line	143
 22972                           	
 22973                           l5115:
 22974  003F48                     ;dispLCD4vias.c: 143:     LCDbits.BUS = d & 0x0F;
 22975                           	movff	(c:dispLCD_dataReg@d),??_dispLCD_dataReg+0+0
 22976  003F48  C028  F027         	movlw	0Fh
 22977  003F4C  0E0F               	andwf	(??_dispLCD_dataReg+0+0),c
 22978  003F4E  1627               	rlncf	(??_dispLCD_dataReg+0+0),c
 22979  003F50  4627               	rlncf	(??_dispLCD_dataReg+0+0),c
 22980  003F52  4627               	movf	((c:3978)),c,w	;volatile
 22981  003F54  508A               	xorwf	(??_dispLCD_dataReg+0+0),c,w
 22982  003F56  1827               	andlw	not (((1<<4)-1)<<2)
 22983  003F58  0BC3               	xorwf	(??_dispLCD_dataReg+0+0),c,w
 22984  003F5A  1827               	movwf	((c:3978)),c	;volatile
 22985  003F5C  6E8A               	line	144
 22986                           	
 22987                           l5117:
 22988  003F5E                     ;dispLCD4vias.c: 144:     LCDbits.EN = 0;
 22989                           	bcf	((c:3978)),c,7	;volatile
 22990  003F5E  9E8A               	line	145
 22991                           ;dispLCD4vias.c: 145:     _delay((unsigned long)((40)*(20000000/4000000.0)));
 22992                           	opt asmopt_push
 22993                           opt asmopt_off
 22994                           	movlw	66
 22995  003F60  0E42               u6387:
 22996  003F62                     decfsz	wreg,f
 22997  003F62  2EE8               	bra	u6387
 22998  003F64  D7FE               	nop2
 22999  003F66  D000               opt asmopt_pop
 23000                           
 23001                           	line	146
 23002                           	
 23003                           l5119:
 23004  003F68                     ;dispLCD4vias.c: 146:     LCDbits.EN = 1;
 23005                           	bsf	((c:3978)),c,7	;volatile
 23006  003F68  8E8A               	line	147
 23007                           	
 23008                           l506:
 23009  003F6A                     	return	;funcret
 23010  003F6A  0012               	opt stack 0
 23011                           GLOBAL	__end_of_dispLCD_dataReg
 23012                           	__end_of_dispLCD_dataReg:
 23013  003F6C                     	signat	_dispLCD_dataReg,4217
 23014                           	global	_dignum_conc
 23015                           
 23016 ;; *************** function _dignum_conc *****************
 23017 ;; Defined at:
 23018 ;;		line 460 in file "fifo.c"
 23019 ;; Parameters:    Size  Location     Type
 23020 ;;  dig             1    wreg     unsigned char 
 23021 ;;  ptrNum          2    6[COMRAM] PTR unsigned int 
 23022 ;;		 -> main@ciclos(2), main@num(2), 
 23023 ;; Auto vars:     Size  Location     Type
 23024 ;;  dig             1   12[COMRAM] unsigned char 
 23025 ;; Return value:  Size  Location     Type
 23026 ;;                  1    wreg      void 
 23027 ;; Registers used:
 23028 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23029 ;; Tracked objects:
 23030 ;;		On entry : 0/0
 23031 ;;		On exit  : 0/0
 23032 ;;		Unchanged: 0/0
 23033 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23034 ;;      Params:         2       0       0       0       0       0       0       0       0       0
 23035 ;;      Locals:         1       0       0       0       0       0       0       0       0       0
 23036 ;;      Temps:          4       0       0       0       0       0       0       0       0       0
 23037 ;;      Totals:         7       0       0       0       0       0       0       0       0       0
 23038 ;;Total ram usage:        7 bytes
 23039 ;; Hardware stack levels used:    1
 23040 ;; Hardware stack levels required when called:    3
 23041 ;; This function calls:
 23042 ;;		___wmul
 23043 ;; This function is called by:
 23044 ;;		_main
 23045 ;; This function uses a non-reentrant model
 23046 ;;
 23047                           psect	text57,class=CODE,space=0,reloc=2,group=0
 23048                           	file	"fifo.c"
 23049                           	line	460
 23050                           global __ptext57
 23051                           __ptext57:
 23052  003F6C                     psect	text57
 23053                           	file	"fifo.c"
 23054                           	line	460
 23055                           	global	__size_of_dignum_conc
 23056                           	__size_of_dignum_conc	equ	__end_of_dignum_conc-_dignum_conc
 23057  0000                     	
 23058                           _dignum_conc:
 23059  003F6C                     ;incstack = 0
 23060                           	opt	stack 27
 23061                           ;dignum_conc@dig stored from wreg
 23062                           	movwf	((c:dignum_conc@dig)),c
 23063  003F6C  6E33               	line	462
 23064                           	
 23065                           l5975:
 23066  003F6E                     ;fifo.c: 460: void dignum_conc(char dig, unsigned int * ptrNum );fifo.c: 461: {;fifo.c: 
                                 462:     *ptrNum = (*ptrNum * 10) + (dig - '0');
 23067                           	movlw	low(0FFD0h)
 23068  003F6E  0ED0               	movwf	(??_dignum_conc+0+0)&0ffh,c
 23069  003F70  6E2F               	movlw	high(0FFD0h)
 23070  003F72  0EFF               	movwf	1+(??_dignum_conc+0+0)&0ffh,c
 23071  003F74  6E30               	movff	(c:dignum_conc@ptrNum),fsr2l
 23072  003F76  C02D  FFD9         	movff	(c:dignum_conc@ptrNum+1),fsr2h
 23073  003F7A  C02E  FFDA         	movff	postinc2,(c:___wmul@multiplier)
 23074  003F7E  CFDE F027          	movff	postdec2,(c:___wmul@multiplier+1)
 23075  003F82  CFDD F028          	movlw	high(0Ah)
 23076  003F86  0E00               	movwf	((c:___wmul@multiplicand+1)),c
 23077  003F88  6E2A               	movlw	low(0Ah)
 23078  003F8A  0E0A               	movwf	((c:___wmul@multiplicand)),c
 23079  003F8C  6E29               	call	___wmul	;wreg free
 23080  003F8E  EC5F  F021         	movf	((c:dignum_conc@dig)),c,w
 23081  003F92  5033               	movwf	(??_dignum_conc+2+0)&0ffh,c
 23082  003F94  6E31               	clrf	(??_dignum_conc+2+0+1)&0ffh,c
 23083  003F96  6A32               
 23084                           	movf	(0+?___wmul),c,w
 23085  003F98  5027               	addwf	(??_dignum_conc+2+0),c
 23086  003F9A  2631               	movf	(1+?___wmul),c,w
 23087  003F9C  5028               	addwfc	(??_dignum_conc+2+1),c
 23088  003F9E  2232               	movf	(??_dignum_conc+0+0),c,w
 23089  003FA0  502F               	addwf	(??_dignum_conc+2+0),c
 23090  003FA2  2631               	movf	(??_dignum_conc+0+1),c,w
 23091  003FA4  5030               	addwfc	(??_dignum_conc+2+1),c
 23092  003FA6  2232               	movff	(c:dignum_conc@ptrNum),fsr2l
 23093  003FA8  C02D  FFD9         	movff	(c:dignum_conc@ptrNum+1),fsr2h
 23094  003FAC  C02E  FFDA         	movff	??_dignum_conc+2+0,postinc2
 23095  003FB0  C031  FFDE         	movff	??_dignum_conc+2+1,postdec2
 23096  003FB4  C032  FFDD         
 23097                           	line	463
 23098                           	
 23099                           l844:
 23100  003FB8                     	return	;funcret
 23101  003FB8  0012               	opt stack 0
 23102                           GLOBAL	__end_of_dignum_conc
 23103                           	__end_of_dignum_conc:
 23104  003FBA                     	signat	_dignum_conc,8313
 23105                           	global	___wmul
 23106                           
 23107 ;; *************** function ___wmul *****************
 23108 ;; Defined at:
 23109 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul16.c"
 23110 ;; Parameters:    Size  Location     Type
 23111 ;;  multiplier      2    0[COMRAM] unsigned int 
 23112 ;;  multiplicand    2    2[COMRAM] unsigned int 
 23113 ;; Auto vars:     Size  Location     Type
 23114 ;;  product         2    4[COMRAM] unsigned int 
 23115 ;; Return value:  Size  Location     Type
 23116 ;;                  2    0[COMRAM] unsigned int 
 23117 ;; Registers used:
 23118 ;;		wreg, status,2, status,0, prodl, prodh
 23119 ;; Tracked objects:
 23120 ;;		On entry : 0/0
 23121 ;;		On exit  : 0/0
 23122 ;;		Unchanged: 0/0
 23123 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23124 ;;      Params:         4       0       0       0       0       0       0       0       0       0
 23125 ;;      Locals:         2       0       0       0       0       0       0       0       0       0
 23126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0
 23127 ;;      Totals:         6       0       0       0       0       0       0       0       0       0
 23128 ;;Total ram usage:        6 bytes
 23129 ;; Hardware stack levels used:    1
 23130 ;; Hardware stack levels required when called:    2
 23131 ;; This function calls:
 23132 ;;		Nothing
 23133 ;; This function is called by:
 23134 ;;		_main
 23135 ;;		_dignum_conc
 23136 ;; This function uses a non-reentrant model
 23137 ;;
 23138                           psect	text58,class=CODE,space=0,reloc=2,group=1
 23139                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul16.c"
 23140                           	line	15
 23141                           global __ptext58
 23142                           __ptext58:
 23143  0042BE                     psect	text58
 23144                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul16.c"
 23145                           	line	15
 23146                           	global	__size_of___wmul
 23147                           	__size_of___wmul	equ	__end_of___wmul-___wmul
 23148  0000                     	
 23149                           ___wmul:
 23150  0042BE                     ;incstack = 0
 23151                           	opt	stack 27
 23152                           	line	37
 23153                           	
 23154                           l5537:
 23155  0042BE                     	movf	((c:___wmul@multiplier)),c,w
 23156  0042BE  5027               	mulwf	((c:___wmul@multiplicand)),c
 23157  0042C0  0229               	movff	prodl,(c:___wmul@product)
 23158  0042C2  CFF3 F02B          	movff	prodh,(c:___wmul@product+1)
 23159  0042C6  CFF4 F02C          	line	38
 23160                           	movf	((c:___wmul@multiplier)),c,w
 23161  0042CA  5027               	mulwf	(0+((c:___wmul@multiplicand)+01h)),c
 23162  0042CC  022A               	movf	(prodl),c,w
 23163  0042CE  50F3               	addwf	((c:___wmul@product+1)),c
 23164  0042D0  262C               
 23165                           	line	39
 23166                           	movf	(0+((c:___wmul@multiplier)+01h)),c,w
 23167  0042D2  5028               	mulwf	((c:___wmul@multiplicand)),c
 23168  0042D4  0229               	movf	(prodl),c,w
 23169  0042D6  50F3               	addwf	((c:___wmul@product+1)),c
 23170  0042D8  262C               
 23171                           	line	52
 23172                           	
 23173                           l5539:
 23174  0042DA                     	movff	(c:___wmul@product),(c:?___wmul)
 23175  0042DA  C02B  F027         	movff	(c:___wmul@product+1),(c:?___wmul+1)
 23176  0042DE  C02C  F028         	goto	l1242
 23177  0042E2  EF73  F021         	
 23178                           l5541:
 23179  0042E6                     	line	53
 23180                           	
 23181                           l1242:
 23182  0042E6                     	return	;funcret
 23183  0042E6  0012               	opt stack 0
 23184                           GLOBAL	__end_of___wmul
 23185                           	__end_of___wmul:
 23186  0042E8                     	signat	___wmul,8314
 23187                           	global	_dignum_apagar
 23188                           
 23189 ;; *************** function _dignum_apagar *****************
 23190 ;; Defined at:
 23191 ;;		line 465 in file "fifo.c"
 23192 ;; Parameters:    Size  Location     Type
 23193 ;;  ptrNum          2    7[COMRAM] PTR unsigned int 
 23194 ;;		 -> main@ciclos(2), main@num(2), 
 23195 ;; Auto vars:     Size  Location     Type
 23196 ;;		None
 23197 ;; Return value:  Size  Location     Type
 23198 ;;                  1    wreg      void 
 23199 ;; Registers used:
 23200 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23201 ;; Tracked objects:
 23202 ;;		On entry : 0/0
 23203 ;;		On exit  : 0/0
 23204 ;;		Unchanged: 0/0
 23205 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23206 ;;      Params:         2       0       0       0       0       0       0       0       0       0
 23207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0
 23208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0
 23209 ;;      Totals:         2       0       0       0       0       0       0       0       0       0
 23210 ;;Total ram usage:        2 bytes
 23211 ;; Hardware stack levels used:    1
 23212 ;; Hardware stack levels required when called:    3
 23213 ;; This function calls:
 23214 ;;		___lwdiv
 23215 ;; This function is called by:
 23216 ;;		_main
 23217 ;; This function uses a non-reentrant model
 23218 ;;
 23219                           psect	text59,class=CODE,space=0,reloc=2,group=0
 23220                           	file	"fifo.c"
 23221                           	line	465
 23222                           global __ptext59
 23223                           __ptext59:
 23224  004290                     psect	text59
 23225                           	file	"fifo.c"
 23226                           	line	465
 23227                           	global	__size_of_dignum_apagar
 23228                           	__size_of_dignum_apagar	equ	__end_of_dignum_apagar-_dignum_apagar
 23229  0000                     	
 23230                           _dignum_apagar:
 23231  004290                     ;incstack = 0
 23232                           	opt	stack 27
 23233                           	line	467
 23234                           	
 23235                           l5977:
 23236  004290                     ;fifo.c: 465: void dignum_apagar(unsigned int * ptrNum );fifo.c: 466: {;fifo.c: 467:    
                                  *ptrNum /= 10;
 23237                           	movff	(c:dignum_apagar@ptrNum),fsr2l
 23238  004290  C02E  FFD9         	movff	(c:dignum_apagar@ptrNum+1),fsr2h
 23239  004294  C02F  FFDA         	movff	postinc2,(c:___lwdiv@dividend)
 23240  004298  CFDE F027          	movff	postdec2,(c:___lwdiv@dividend+1)
 23241  00429C  CFDD F028          	movlw	high(0Ah)
 23242  0042A0  0E00               	movwf	((c:___lwdiv@divisor+1)),c
 23243  0042A2  6E2A               	movlw	low(0Ah)
 23244  0042A4  0E0A               	movwf	((c:___lwdiv@divisor)),c
 23245  0042A6  6E29               	call	___lwdiv	;wreg free
 23246  0042A8  EC31  F01C         	movff	(c:dignum_apagar@ptrNum),fsr2l
 23247  0042AC  C02E  FFD9         	movff	(c:dignum_apagar@ptrNum+1),fsr2h
 23248  0042B0  C02F  FFDA         	movff	0+?___lwdiv,postinc2
 23249  0042B4  C027  FFDE         	movff	1+?___lwdiv,postdec2
 23250  0042B8  C028  FFDD         
 23251                           	line	468
 23252                           	
 23253                           l847:
 23254  0042BC                     	return	;funcret
 23255  0042BC  0012               	opt stack 0
 23256                           GLOBAL	__end_of_dignum_apagar
 23257                           	__end_of_dignum_apagar:
 23258  0042BE                     	signat	_dignum_apagar,4217
 23259                           	global	___lwdiv
 23260                           
 23261 ;; *************** function ___lwdiv *****************
 23262 ;; Defined at:
 23263 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\lwdiv.c"
 23264 ;; Parameters:    Size  Location     Type
 23265 ;;  dividend        2    0[COMRAM] unsigned int 
 23266 ;;  divisor         2    2[COMRAM] unsigned int 
 23267 ;; Auto vars:     Size  Location     Type
 23268 ;;  quotient        2    4[COMRAM] unsigned int 
 23269 ;;  counter         1    6[COMRAM] unsigned char 
 23270 ;; Return value:  Size  Location     Type
 23271 ;;                  2    0[COMRAM] unsigned int 
 23272 ;; Registers used:
 23273 ;;		wreg, status,2, status,0
 23274 ;; Tracked objects:
 23275 ;;		On entry : 0/0
 23276 ;;		On exit  : 0/0
 23277 ;;		Unchanged: 0/0
 23278 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23279 ;;      Params:         4       0       0       0       0       0       0       0       0       0
 23280 ;;      Locals:         3       0       0       0       0       0       0       0       0       0
 23281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0
 23282 ;;      Totals:         7       0       0       0       0       0       0       0       0       0
 23283 ;;Total ram usage:        7 bytes
 23284 ;; Hardware stack levels used:    1
 23285 ;; Hardware stack levels required when called:    2
 23286 ;; This function calls:
 23287 ;;		Nothing
 23288 ;; This function is called by:
 23289 ;;		_dignum_apagar
 23290 ;; This function uses a non-reentrant model
 23291 ;;
 23292                           psect	text60,class=CODE,space=0,reloc=2,group=1
 23293                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\lwdiv.c"
 23294                           	line	7
 23295                           global __ptext60
 23296                           __ptext60:
 23297  003862                     psect	text60
 23298                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\lwdiv.c"
 23299                           	line	7
 23300                           	global	__size_of___lwdiv
 23301                           	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
 23302  0000                     	
 23303                           ___lwdiv:
 23304  003862                     ;incstack = 0
 23305                           	opt	stack 27
 23306                           	line	13
 23307                           	
 23308                           l5543:
 23309  003862                     	movlw	high(0)
 23310  003862  0E00               	movwf	((c:___lwdiv@quotient+1)),c
 23311  003864  6E2C               	movlw	low(0)
 23312  003866  0E00               	movwf	((c:___lwdiv@quotient)),c
 23313  003868  6E2B               	line	14
 23314                           	
 23315                           l5545:
 23316  00386A                     	movf	((c:___lwdiv@divisor)),c,w
 23317  00386A  5029               iorwf	((c:___lwdiv@divisor+1)),c,w
 23318  00386C  102A               	btfsc	status,2
 23319  00386E  B4D8               	goto	u4061
 23320  003870  EF3C  F01C         	goto	u4060
 23321  003874  EF3E  F01C         
 23322                           u4061:
 23323  003878                     	goto	l1733
 23324  003878  EF70  F01C         u4060:
 23325  00387C                     	line	15
 23326                           	
 23327                           l5547:
 23328  00387C                     	movlw	low(01h)
 23329  00387C  0E01               	movwf	((c:___lwdiv@counter)),c
 23330  00387E  6E2D               	line	16
 23331                           	goto	l5551
 23332  003880  EF48  F01C         	
 23333                           l1735:
 23334  003884                     	line	17
 23335                           	
 23336                           l5549:
 23337  003884                     	bcf	status,0
 23338  003884  90D8               	rlcf	((c:___lwdiv@divisor)),c
 23339  003886  3629               	rlcf	((c:___lwdiv@divisor+1)),c
 23340  003888  362A               	line	18
 23341                           	incf	((c:___lwdiv@counter)),c
 23342  00388A  2A2D               	goto	l5551
 23343  00388C  EF48  F01C         	line	19
 23344                           	
 23345                           l1734:
 23346  003890                     	line	16
 23347                           	
 23348                           l5551:
 23349  003890                     	
 23350                           	btfss	((c:___lwdiv@divisor+1)),c,(15)&7
 23351  003890  AE2A               	goto	u4071
 23352  003892  EF4D  F01C         	goto	u4070
 23353  003896  EF4F  F01C         u4071:
 23354  00389A                     	goto	l5549
 23355  00389A  EF42  F01C         u4070:
 23356  00389E                     	goto	l5553
 23357  00389E  EF53  F01C         	
 23358                           l1736:
 23359  0038A2                     	goto	l5553
 23360  0038A2  EF53  F01C         	line	20
 23361                           	
 23362                           l1737:
 23363  0038A6                     	line	21
 23364                           	
 23365                           l5553:
 23366  0038A6                     	bcf	status,0
 23367  0038A6  90D8               	rlcf	((c:___lwdiv@quotient)),c
 23368  0038A8  362B               	rlcf	((c:___lwdiv@quotient+1)),c
 23369  0038AA  362C               	line	22
 23370                           	
 23371                           l5555:
 23372  0038AC                     		movf	((c:___lwdiv@divisor)),c,w
 23373  0038AC  5029               	subwf	((c:___lwdiv@dividend)),c,w
 23374  0038AE  5C27               	movf	((c:___lwdiv@divisor+1)),c,w
 23375  0038B0  502A               	subwfb	((c:___lwdiv@dividend+1)),c,w
 23376  0038B2  5828               	btfss	status,0
 23377  0038B4  A0D8               	goto	u4081
 23378  0038B6  EF5F  F01C         	goto	u4080
 23379  0038BA  EF61  F01C         
 23380                           u4081:
 23381  0038BE                     	goto	l5561
 23382  0038BE  EF68  F01C         u4080:
 23383  0038C2                     	line	23
 23384                           	
 23385                           l5557:
 23386  0038C2                     	movf	((c:___lwdiv@divisor)),c,w
 23387  0038C2  5029               	subwf	((c:___lwdiv@dividend)),c
 23388  0038C4  5E27               	movf	((c:___lwdiv@divisor+1)),c,w
 23389  0038C6  502A               	subwfb	((c:___lwdiv@dividend+1)),c
 23390  0038C8  5A28               
 23391                           	line	24
 23392                           	
 23393                           l5559:
 23394  0038CA                     	bsf	(0+(0/8)+(c:___lwdiv@quotient)),c,(0)&7
 23395  0038CA  802B               	goto	l5561
 23396  0038CC  EF68  F01C         	line	25
 23397                           	
 23398                           l1738:
 23399  0038D0                     	line	26
 23400                           	
 23401                           l5561:
 23402  0038D0                     	bcf	status,0
 23403  0038D0  90D8               	rrcf	((c:___lwdiv@divisor+1)),c
 23404  0038D2  322A               	rrcf	((c:___lwdiv@divisor)),c
 23405  0038D4  3229               	line	27
 23406                           	
 23407                           l5563:
 23408  0038D6                     	decfsz	((c:___lwdiv@counter)),c
 23409  0038D6  2E2D               	
 23410                           	goto	l5553
 23411  0038D8  EF53  F01C         	goto	l1733
 23412  0038DC  EF70  F01C         	
 23413                           l1739:
 23414  0038E0                     	line	28
 23415                           	
 23416                           l1733:
 23417  0038E0                     	line	29
 23418                           	movff	(c:___lwdiv@quotient),(c:?___lwdiv)
 23419  0038E0  C02B  F027         	movff	(c:___lwdiv@quotient+1),(c:?___lwdiv+1)
 23420  0038E4  C02C  F028         	line	30
 23421                           	
 23422                           l1740:
 23423  0038E8                     	return	;funcret
 23424  0038E8  0012               	opt stack 0
 23425                           GLOBAL	__end_of___lwdiv
 23426                           	__end_of___lwdiv:
 23427  0038EA                     	signat	___lwdiv,8314
 23428                           	global	_deletar_receita
 23429                           
 23430 ;; *************** function _deletar_receita *****************
 23431 ;; Defined at:
 23432 ;;		line 77 in file "eeprom.c"
 23433 ;; Parameters:    Size  Location     Type
 23434 ;;  receita         1    wreg     unsigned char 
 23435 ;; Auto vars:     Size  Location     Type
 23436 ;;  receita         1    6[COMRAM] unsigned char 
 23437 ;;  i               1    7[COMRAM] unsigned char 
 23438 ;;  aux             2    4[COMRAM] int 
 23439 ;; Return value:  Size  Location     Type
 23440 ;;                  1    wreg      void 
 23441 ;; Registers used:
 23442 ;;		wreg, status,2, status,0, cstack
 23443 ;; Tracked objects:
 23444 ;;		On entry : 0/0
 23445 ;;		On exit  : 0/0
 23446 ;;		Unchanged: 0/0
 23447 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23448 ;;      Params:         0       0       0       0       0       0       0       0       0       0
 23449 ;;      Locals:         4       0       0       0       0       0       0       0       0       0
 23450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0
 23451 ;;      Totals:         4       0       0       0       0       0       0       0       0       0
 23452 ;;Total ram usage:        4 bytes
 23453 ;; Hardware stack levels used:    1
 23454 ;; Hardware stack levels required when called:    3
 23455 ;; This function calls:
 23456 ;;		_EEPROM_write
 23457 ;;		_end_receita
 23458 ;; This function is called by:
 23459 ;;		_main
 23460 ;; This function uses a non-reentrant model
 23461 ;;
 23462                           psect	text61,class=CODE,space=0,reloc=2,group=0
 23463                           	file	"eeprom.c"
 23464                           	line	77
 23465                           global __ptext61
 23466                           __ptext61:
 23467  003E7A                     psect	text61
 23468                           	file	"eeprom.c"
 23469                           	line	77
 23470                           	global	__size_of_deletar_receita
 23471                           	__size_of_deletar_receita	equ	__end_of_deletar_receita-_deletar_receita
 23472  0000                     	
 23473                           _deletar_receita:
 23474  003E7A                     ;incstack = 0
 23475                           	opt	stack 27
 23476                           ;deletar_receita@receita stored from wreg
 23477                           	movwf	((c:deletar_receita@receita)),c
 23478  003E7A  6E2D               	line	80
 23479                           	
 23480                           l6155:
 23481  003E7C                     ;eeprom.c: 77: void deletar_receita (char receita);eeprom.c: 78: {;eeprom.c: 79:    int 
                                 aux;;eeprom.c: 80:    aux = end_receita(receita);
 23482                           	movff	(c:deletar_receita@receita),(c:end_receita@x)
 23483  003E7C  C02D  F027         	clrf	((c:end_receita@x+1)),c
 23484  003E80  6A28               	call	_end_receita	;wreg free
 23485  003E82  EC88  F021         	movff	0+?_end_receita,(c:deletar_receita@aux)
 23486  003E86  C027  F02B         	movff	1+?_end_receita,(c:deletar_receita@aux+1)
 23487  003E8A  C028  F02C         	line	81
 23488                           	
 23489                           l6157:
 23490  003E8E                     ;eeprom.c: 81:    for( char i=0 ; i<16; i++)
 23491                           	movlw	low(0)
 23492  003E8E  0E00               	movwf	((c:deletar_receita@i)),c
 23493  003E90  6E2E               	
 23494                           l6159:
 23495  003E92                     		movlw	010h-1
 23496  003E92  0E0F               	cpfsgt	((c:deletar_receita@i)),c
 23497  003E94  642E               	goto	u4641
 23498  003E96  EF4F  F01F         	goto	u4640
 23499  003E9A  EF51  F01F         
 23500                           u4641:
 23501  003E9E                     	goto	l6163
 23502  003E9E  EF55  F01F         u4640:
 23503  003EA2                     	goto	l606
 23504  003EA2  EF66  F01F         	
 23505                           l6161:
 23506  003EA6                     	goto	l606
 23507  003EA6  EF66  F01F         	
 23508                           l604:
 23509  003EAA                     	line	82
 23510                           	
 23511                           l6163:
 23512  003EAA                     ;eeprom.c: 82:         EEPROM_write((aux+i),0);
 23513                           	movlw	low(0)
 23514  003EAA  0E00               	movwf	((c:EEPROM_write@data)),c
 23515  003EAC  6E27               	movf	((c:deletar_receita@i)),c,w
 23516  003EAE  502E               	addwf	((c:deletar_receita@aux)),c,w
 23517  003EB0  242B               	
 23518                           	call	_EEPROM_write
 23519  003EB2  ECCF  F020         	
 23520                           l6165:
 23521  003EB6                     	incf	((c:deletar_receita@i)),c
 23522  003EB6  2A2E               	
 23523                           l6167:
 23524  003EB8                     		movlw	010h-1
 23525  003EB8  0E0F               	cpfsgt	((c:deletar_receita@i)),c
 23526  003EBA  642E               	goto	u4651
 23527  003EBC  EF62  F01F         	goto	u4650
 23528  003EC0  EF64  F01F         
 23529                           u4651:
 23530  003EC4                     	goto	l6163
 23531  003EC4  EF55  F01F         u4650:
 23532  003EC8                     	goto	l606
 23533  003EC8  EF66  F01F         	
 23534                           l605:
 23535  003ECC                     	line	83
 23536                           	
 23537                           l606:
 23538  003ECC                     	return	;funcret
 23539  003ECC  0012               	opt stack 0
 23540                           GLOBAL	__end_of_deletar_receita
 23541                           	__end_of_deletar_receita:
 23542  003ECE                     	signat	_deletar_receita,4217
 23543                           	global	_EEPROM_write
 23544                           
 23545 ;; *************** function _EEPROM_write *****************
 23546 ;; Defined at:
 23547 ;;		line 24 in file "eeprom.c"
 23548 ;; Parameters:    Size  Location     Type
 23549 ;;  addr            1    wreg     unsigned char 
 23550 ;;  data            1    0[COMRAM] unsigned char 
 23551 ;; Auto vars:     Size  Location     Type
 23552 ;;  addr            1    1[COMRAM] unsigned char 
 23553 ;; Return value:  Size  Location     Type
 23554 ;;                  1    wreg      void 
 23555 ;; Registers used:
 23556 ;;		wreg, status,2
 23557 ;; Tracked objects:
 23558 ;;		On entry : 0/0
 23559 ;;		On exit  : 0/0
 23560 ;;		Unchanged: 0/0
 23561 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23562 ;;      Params:         1       0       0       0       0       0       0       0       0       0
 23563 ;;      Locals:         1       0       0       0       0       0       0       0       0       0
 23564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0
 23565 ;;      Totals:         2       0       0       0       0       0       0       0       0       0
 23566 ;;Total ram usage:        2 bytes
 23567 ;; Hardware stack levels used:    1
 23568 ;; Hardware stack levels required when called:    2
 23569 ;; This function calls:
 23570 ;;		Nothing
 23571 ;; This function is called by:
 23572 ;;		_salvar_receita
 23573 ;;		_salvar_dado
 23574 ;;		_deletar_receita
 23575 ;;		_formatar_receitas
 23576 ;; This function uses a non-reentrant model
 23577 ;;
 23578                           psect	text62,class=CODE,space=0,reloc=2,group=0
 23579                           	line	24
 23580                           global __ptext62
 23581                           __ptext62:
 23582  00419E                     psect	text62
 23583                           	file	"eeprom.c"
 23584                           	line	24
 23585                           	global	__size_of_EEPROM_write
 23586                           	__size_of_EEPROM_write	equ	__end_of_EEPROM_write-_EEPROM_write
 23587  0000                     	
 23588                           _EEPROM_write:
 23589  00419E                     ;incstack = 0
 23590                           	opt	stack 27
 23591                           ;EEPROM_write@addr stored from wreg
 23592                           	movwf	((c:EEPROM_write@addr)),c
 23593  00419E  6E28               	line	26
 23594                           	
 23595                           l5323:
 23596  0041A0                     ;eeprom.c: 24: void EEPROM_write( unsigned char addr, unsigned char data );eeprom.c: 25:
                                  {;eeprom.c: 26:     INTCONbits.GIE = 0;
 23597                           	bcf	((c:4082)),c,7	;volatile
 23598  0041A0  9EF2               	line	27
 23599                           	
 23600                           l5325:
 23601  0041A2                     ;eeprom.c: 27:     EEADR = addr;
 23602                           	movff	(c:EEPROM_write@addr),(c:4009)	;volatile
 23603  0041A2  C028  FFA9         	line	28
 23604                           	
 23605                           l5327:
 23606  0041A6                     ;eeprom.c: 28:     EEDATA = data;
 23607                           	movff	(c:EEPROM_write@data),(c:4008)	;volatile
 23608  0041A6  C027  FFA8         	line	29
 23609                           	
 23610                           l5329:
 23611  0041AA                     ;eeprom.c: 29:     EECON1bits.EEPGD = 0;
 23612                           	bcf	((c:4006)),c,7	;volsfr
 23613  0041AA  9EA6               	line	30
 23614                           	
 23615                           l5331:
 23616  0041AC                     ;eeprom.c: 30:     EECON1bits.WREN = 1;
 23617                           	bsf	((c:4006)),c,2	;volsfr
 23618  0041AC  84A6               	line	31
 23619                           	
 23620                           l5333:
 23621  0041AE                     ;eeprom.c: 31:     EECON2 = 0x55;
 23622                           	movlw	low(055h)
 23623  0041AE  0E55               	movwf	((c:4007)),c	;volsfr
 23624  0041B0  6EA7               	line	32
 23625                           	
 23626                           l5335:
 23627  0041B2                     ;eeprom.c: 32:     EECON2 = 0xAA;
 23628                           	movlw	low(0AAh)
 23629  0041B2  0EAA               	movwf	((c:4007)),c	;volsfr
 23630  0041B4  6EA7               	line	33
 23631                           	
 23632                           l5337:
 23633  0041B6                     ;eeprom.c: 33:     EECON1bits.WR = 1;
 23634                           	bsf	((c:4006)),c,1	;volsfr
 23635  0041B6  82A6               	line	35
 23636                           ;eeprom.c: 35:     while( EECON1bits.WR );
 23637                           	goto	l579
 23638  0041B8  EFDE  F020         	
 23639                           l580:
 23640  0041BC                     	
 23641                           l579:
 23642  0041BC                     	btfsc	((c:4006)),c,1	;volsfr
 23643  0041BC  B2A6               	goto	u3761
 23644  0041BE  EFE3  F020         	goto	u3760
 23645  0041C2  EFE5  F020         u3761:
 23646  0041C6                     	goto	l579
 23647  0041C6  EFDE  F020         u3760:
 23648  0041CA                     	
 23649                           l581:
 23650  0041CA                     	line	37
 23651                           ;eeprom.c: 37:     EECON1bits.WREN = 0;
 23652                           	bcf	((c:4006)),c,2	;volsfr
 23653  0041CA  94A6               	line	38
 23654                           ;eeprom.c: 38:     INTCONbits.GIE = 1;
 23655                           	bsf	((c:4082)),c,7	;volatile
 23656  0041CC  8EF2               	line	39
 23657                           	
 23658                           l582:
 23659  0041CE                     	return	;funcret
 23660  0041CE  0012               	opt stack 0
 23661                           GLOBAL	__end_of_EEPROM_write
 23662                           	__end_of_EEPROM_write:
 23663  0041D0                     	signat	_EEPROM_write,8313
 23664                           	global	_buscar_receita
 23665                           
 23666 ;; *************** function _buscar_receita *****************
 23667 ;; Defined at:
 23668 ;;		line 55 in file "eeprom.c"
 23669 ;; Parameters:    Size  Location     Type
 23670 ;;  adrs            1    wreg     unsigned char 
 23671 ;;  data            2    6[COMRAM] PTR unsigned char 
 23672 ;;		 -> main@vetor_aux(16), 
 23673 ;; Auto vars:     Size  Location     Type
 23674 ;;  adrs            1   10[COMRAM] unsigned char 
 23675 ;;  i               1   11[COMRAM] unsigned char 
 23676 ;;  aux             2    8[COMRAM] int 
 23677 ;; Return value:  Size  Location     Type
 23678 ;;                  1    wreg      void 
 23679 ;; Registers used:
 23680 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23681 ;; Tracked objects:
 23682 ;;		On entry : 0/0
 23683 ;;		On exit  : 0/0
 23684 ;;		Unchanged: 0/0
 23685 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23686 ;;      Params:         2       0       0       0       0       0       0       0       0       0
 23687 ;;      Locals:         4       0       0       0       0       0       0       0       0       0
 23688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0
 23689 ;;      Totals:         6       0       0       0       0       0       0       0       0       0
 23690 ;;Total ram usage:        6 bytes
 23691 ;; Hardware stack levels used:    1
 23692 ;; Hardware stack levels required when called:    3
 23693 ;; This function calls:
 23694 ;;		_EEPROM_read
 23695 ;;		_end_receita
 23696 ;; This function is called by:
 23697 ;;		_main
 23698 ;; This function uses a non-reentrant model
 23699 ;;
 23700                           psect	text63,class=CODE,space=0,reloc=2,group=0
 23701                           	line	55
 23702                           global __ptext63
 23703                           __ptext63:
 23704  003D6E                     psect	text63
 23705                           	file	"eeprom.c"
 23706                           	line	55
 23707                           	global	__size_of_buscar_receita
 23708                           	__size_of_buscar_receita	equ	__end_of_buscar_receita-_buscar_receita
 23709  0000                     	
 23710                           _buscar_receita:
 23711  003D6E                     ;incstack = 0
 23712                           	opt	stack 27
 23713                           ;buscar_receita@adrs stored from wreg
 23714                           	movwf	((c:buscar_receita@adrs)),c
 23715  003D6E  6E31               	line	58
 23716                           	
 23717                           l6141:
 23718  003D70                     ;eeprom.c: 55: void buscar_receita (char adrs, unsigned char * data );eeprom.c: 56: {;ee
                                 prom.c: 57:     int aux;;eeprom.c: 58:     aux = end_receita(adrs);
 23719                           	movff	(c:buscar_receita@adrs),(c:end_receita@x)
 23720  003D70  C031  F027         	clrf	((c:end_receita@x+1)),c
 23721  003D74  6A28               	call	_end_receita	;wreg free
 23722  003D76  EC88  F021         	movff	0+?_end_receita,(c:buscar_receita@aux)
 23723  003D7A  C027  F02F         	movff	1+?_end_receita,(c:buscar_receita@aux+1)
 23724  003D7E  C028  F030         	line	59
 23725                           	
 23726                           l6143:
 23727  003D82                     ;eeprom.c: 59:     for( char i=0; i<16; i++ )
 23728                           	movlw	low(0)
 23729  003D82  0E00               	movwf	((c:buscar_receita@i)),c
 23730  003D84  6E32               	
 23731                           l6145:
 23732  003D86                     		movlw	010h-1
 23733  003D86  0E0F               	cpfsgt	((c:buscar_receita@i)),c
 23734  003D88  6432               	goto	u4621
 23735  003D8A  EFC9  F01E         	goto	u4620
 23736  003D8E  EFCB  F01E         
 23737                           u4621:
 23738  003D92                     	goto	l6149
 23739  003D92  EFCF  F01E         u4620:
 23740  003D96                     	goto	l595
 23741  003D96  EFE5  F01E         	
 23742                           l6147:
 23743  003D9A                     	goto	l595
 23744  003D9A  EFE5  F01E         	
 23745                           l593:
 23746  003D9E                     	line	60
 23747                           	
 23748                           l6149:
 23749  003D9E                     ;eeprom.c: 60:        *(data+i) = EEPROM_read(aux+i);
 23750                           	movf	((c:buscar_receita@i)),c,w
 23751  003D9E  5032               	addwf	((c:buscar_receita@data)),c,w
 23752  003DA0  242D               	movwf	c:fsr2l
 23753  003DA2  6ED9               	movlw	0
 23754  003DA4  0E00               	addwfc	((c:buscar_receita@data+1)),c,w
 23755  003DA6  202E               	movwf	1+c:fsr2l
 23756  003DA8  6EDA               	movf	((c:buscar_receita@i)),c,w
 23757  003DAA  5032               	addwf	((c:buscar_receita@aux)),c,w
 23758  003DAC  242F               	
 23759                           	call	_EEPROM_read
 23760  003DAE  EC89  F022         	movwf	indf2,c
 23761  003DB2  6EDF               
 23762                           	
 23763                           l6151:
 23764  003DB4                     	incf	((c:buscar_receita@i)),c
 23765  003DB4  2A32               	
 23766                           l6153:
 23767  003DB6                     		movlw	010h-1
 23768  003DB6  0E0F               	cpfsgt	((c:buscar_receita@i)),c
 23769  003DB8  6432               	goto	u4631
 23770  003DBA  EFE1  F01E         	goto	u4630
 23771  003DBE  EFE3  F01E         
 23772                           u4631:
 23773  003DC2                     	goto	l6149
 23774  003DC2  EFCF  F01E         u4630:
 23775  003DC6                     	goto	l595
 23776  003DC6  EFE5  F01E         	
 23777                           l594:
 23778  003DCA                     	line	61
 23779                           	
 23780                           l595:
 23781  003DCA                     	return	;funcret
 23782  003DCA  0012               	opt stack 0
 23783                           GLOBAL	__end_of_buscar_receita
 23784                           	__end_of_buscar_receita:
 23785  003DCC                     	signat	_buscar_receita,8313
 23786                           	global	_buscar_dado
 23787                           
 23788 ;; *************** function _buscar_dado *****************
 23789 ;; Defined at:
 23790 ;;		line 70 in file "eeprom.c"
 23791 ;; Parameters:    Size  Location     Type
 23792 ;;  adrs            1    wreg     unsigned char 
 23793 ;;  col             1    6[COMRAM] unsigned char 
 23794 ;;  data            2    7[COMRAM] PTR unsigned char 
 23795 ;;		 -> main@init_cond(1), 
 23796 ;; Auto vars:     Size  Location     Type
 23797 ;;  adrs            1   11[COMRAM] unsigned char 
 23798 ;;  aux             2    9[COMRAM] int 
 23799 ;; Return value:  Size  Location     Type
 23800 ;;                  1    wreg      void 
 23801 ;; Registers used:
 23802 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23803 ;; Tracked objects:
 23804 ;;		On entry : 0/0
 23805 ;;		On exit  : 0/0
 23806 ;;		Unchanged: 0/0
 23807 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23808 ;;      Params:         3       0       0       0       0       0       0       0       0       0
 23809 ;;      Locals:         3       0       0       0       0       0       0       0       0       0
 23810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0
 23811 ;;      Totals:         6       0       0       0       0       0       0       0       0       0
 23812 ;;Total ram usage:        6 bytes
 23813 ;; Hardware stack levels used:    1
 23814 ;; Hardware stack levels required when called:    3
 23815 ;; This function calls:
 23816 ;;		_EEPROM_read
 23817 ;;		_end_receita
 23818 ;; This function is called by:
 23819 ;;		_main
 23820 ;; This function uses a non-reentrant model
 23821 ;;
 23822                           psect	text64,class=CODE,space=0,reloc=2,group=0
 23823                           	line	70
 23824                           global __ptext64
 23825                           __ptext64:
 23826  0042E8                     psect	text64
 23827                           	file	"eeprom.c"
 23828                           	line	70
 23829                           	global	__size_of_buscar_dado
 23830                           	__size_of_buscar_dado	equ	__end_of_buscar_dado-_buscar_dado
 23831  0000                     	
 23832                           _buscar_dado:
 23833  0042E8                     ;incstack = 0
 23834                           	opt	stack 27
 23835                           ;buscar_dado@adrs stored from wreg
 23836                           	movwf	((c:buscar_dado@adrs)),c
 23837  0042E8  6E32               	line	73
 23838                           	
 23839                           l5649:
 23840  0042EA                     ;eeprom.c: 70: void buscar_dado (char adrs, char col, unsigned char *data);eeprom.c: 71:
                                  {;eeprom.c: 72:     int aux;;eeprom.c: 73:     aux = end_receita(adrs);
 23841                           	movff	(c:buscar_dado@adrs),(c:end_receita@x)
 23842  0042EA  C032  F027         	clrf	((c:end_receita@x+1)),c
 23843  0042EE  6A28               	call	_end_receita	;wreg free
 23844  0042F0  EC88  F021         	movff	0+?_end_receita,(c:buscar_dado@aux)
 23845  0042F4  C027  F030         	movff	1+?_end_receita,(c:buscar_dado@aux+1)
 23846  0042F8  C028  F031         	line	74
 23847                           	
 23848                           l5651:
 23849  0042FC                     ;eeprom.c: 74:     *data = EEPROM_read((aux+col));
 23850                           	movf	((c:buscar_dado@col)),c,w
 23851  0042FC  502D               	addwf	((c:buscar_dado@aux)),c,w
 23852  0042FE  2430               	
 23853                           	call	_EEPROM_read
 23854  004300  EC89  F022         	movff	(c:buscar_dado@data),fsr2l
 23855  004304  C02E  FFD9         	movff	(c:buscar_dado@data+1),fsr2h
 23856  004308  C02F  FFDA         	movwf	indf2,c
 23857  00430C  6EDF               
 23858                           	line	75
 23859                           	
 23860                           l601:
 23861  00430E                     	return	;funcret
 23862  00430E  0012               	opt stack 0
 23863                           GLOBAL	__end_of_buscar_dado
 23864                           	__end_of_buscar_dado:
 23865  004310                     	signat	_buscar_dado,12409
 23866                           	global	_end_receita
 23867                           
 23868 ;; *************** function _end_receita *****************
 23869 ;; Defined at:
 23870 ;;		line 41 in file "eeprom.c"
 23871 ;; Parameters:    Size  Location     Type
 23872 ;;  x               2    0[COMRAM] int 
 23873 ;; Auto vars:     Size  Location     Type
 23874 ;;		None
 23875 ;; Return value:  Size  Location     Type
 23876 ;;                  2    0[COMRAM] int 
 23877 ;; Registers used:
 23878 ;;		wreg, status,2, status,0
 23879 ;; Tracked objects:
 23880 ;;		On entry : 0/0
 23881 ;;		On exit  : 0/0
 23882 ;;		Unchanged: 0/0
 23883 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23884 ;;      Params:         2       0       0       0       0       0       0       0       0       0
 23885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0
 23886 ;;      Temps:          2       0       0       0       0       0       0       0       0       0
 23887 ;;      Totals:         4       0       0       0       0       0       0       0       0       0
 23888 ;;Total ram usage:        4 bytes
 23889 ;; Hardware stack levels used:    1
 23890 ;; Hardware stack levels required when called:    2
 23891 ;; This function calls:
 23892 ;;		Nothing
 23893 ;; This function is called by:
 23894 ;;		_salvar_receita
 23895 ;;		_buscar_receita
 23896 ;;		_salvar_dado
 23897 ;;		_buscar_dado
 23898 ;;		_deletar_receita
 23899 ;;		_receita_livre
 23900 ;; This function uses a non-reentrant model
 23901 ;;
 23902                           psect	text65,class=CODE,space=0,reloc=2,group=0
 23903                           	line	41
 23904                           global __ptext65
 23905                           __ptext65:
 23906  004310                     psect	text65
 23907                           	file	"eeprom.c"
 23908                           	line	41
 23909                           	global	__size_of_end_receita
 23910                           	__size_of_end_receita	equ	__end_of_end_receita-_end_receita
 23911  0000                     	
 23912                           _end_receita:
 23913  004310                     ;incstack = 0
 23914                           	opt	stack 27
 23915                           	line	43
 23916                           	
 23917                           l5339:
 23918  004310                     ;eeprom.c: 41: int end_receita (int x);eeprom.c: 42: {;eeprom.c: 43:     return(x*16);
 23919                           	movff	(c:end_receita@x),??_end_receita+0+0
 23920  004310  C027  F029         	movff	(c:end_receita@x+1),??_end_receita+0+0+1
 23921  004314  C028  F02A         	swapf	(??_end_receita+0+0),c
 23922  004318  3A29               	swapf	(??_end_receita+0+1),c
 23923  00431A  3A2A               	movlw	0f0h
 23924  00431C  0EF0               	andwf	(??_end_receita+0+1),c
 23925  00431E  162A               	movf	(??_end_receita+0+0),c,w
 23926  004320  5029               	andlw	0fh
 23927  004322  0B0F               	iorwf	(??_end_receita+0+1),c
 23928  004324  122A               	movlw	0f0h
 23929  004326  0EF0               	andwf	(??_end_receita+0+0),c
 23930  004328  1629               	movff	??_end_receita+0+0,(c:?_end_receita)
 23931  00432A  C029  F027         	movff	??_end_receita+0+1,(c:?_end_receita+1)
 23932  00432E  C02A  F028         	goto	l585
 23933  004332  EF9B  F021         	
 23934                           l5341:
 23935  004336                     	line	44
 23936                           	
 23937                           l585:
 23938  004336                     	return	;funcret
 23939  004336  0012               	opt stack 0
 23940                           GLOBAL	__end_of_end_receita
 23941                           	__end_of_end_receita:
 23942  004338                     	signat	_end_receita,4218
 23943                           	global	_EEPROM_read
 23944                           
 23945 ;; *************** function _EEPROM_read *****************
 23946 ;; Defined at:
 23947 ;;		line 14 in file "eeprom.c"
 23948 ;; Parameters:    Size  Location     Type
 23949 ;;  addr            1    wreg     unsigned char 
 23950 ;; Auto vars:     Size  Location     Type
 23951 ;;  addr            1    0[COMRAM] unsigned char 
 23952 ;; Return value:  Size  Location     Type
 23953 ;;                  1    wreg      unsigned char 
 23954 ;; Registers used:
 23955 ;;		wreg, status,2
 23956 ;; Tracked objects:
 23957 ;;		On entry : 0/0
 23958 ;;		On exit  : 0/0
 23959 ;;		Unchanged: 0/0
 23960 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23961 ;;      Params:         0       0       0       0       0       0       0       0       0       0
 23962 ;;      Locals:         1       0       0       0       0       0       0       0       0       0
 23963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0
 23964 ;;      Totals:         1       0       0       0       0       0       0       0       0       0
 23965 ;;Total ram usage:        1 bytes
 23966 ;; Hardware stack levels used:    1
 23967 ;; Hardware stack levels required when called:    2
 23968 ;; This function calls:
 23969 ;;		Nothing
 23970 ;; This function is called by:
 23971 ;;		_buscar_receita
 23972 ;;		_buscar_dado
 23973 ;;		_receita_livre
 23974 ;; This function uses a non-reentrant model
 23975 ;;
 23976                           psect	text66,class=CODE,space=0,reloc=2,group=0
 23977                           	line	14
 23978                           global __ptext66
 23979                           __ptext66:
 23980  004512                     psect	text66
 23981                           	file	"eeprom.c"
 23982                           	line	14
 23983                           	global	__size_of_EEPROM_read
 23984                           	__size_of_EEPROM_read	equ	__end_of_EEPROM_read-_EEPROM_read
 23985  0000                     	
 23986                           _EEPROM_read:
 23987  004512                     ;incstack = 0
 23988                           	opt	stack 27
 23989                           ;EEPROM_read@addr stored from wreg
 23990                           	movwf	((c:EEPROM_read@addr)),c
 23991  004512  6E27               	line	17
 23992                           	
 23993                           l5313:
 23994  004514                     ;eeprom.c: 14: char EEPROM_read( unsigned char addr );eeprom.c: 15: {;eeprom.c: 17:     
                                 EEADR = addr;
 23995                           	movff	(c:EEPROM_read@addr),(c:4009)	;volatile
 23996  004514  C027  FFA9         	line	18
 23997                           	
 23998                           l5315:
 23999  004518                     ;eeprom.c: 18:     EECON1bits.EEPGD = 0;
 24000                           	bcf	((c:4006)),c,7	;volsfr
 24001  004518  9EA6               	line	19
 24002                           	
 24003                           l5317:
 24004  00451A                     ;eeprom.c: 19:     EECON1bits.RD = 1;
 24005                           	bsf	((c:4006)),c,0	;volsfr
 24006  00451A  80A6               	line	20
 24007                           	
 24008                           l5319:
 24009  00451C                     ;eeprom.c: 20:     return( EEDATA );
 24010                           	movf	((c:4008)),c,w	;volatile
 24011  00451C  50A8               	goto	l576
 24012  00451E  EF91  F022         	
 24013                           l5321:
 24014  004522                     	line	22
 24015                           	
 24016                           l576:
 24017  004522                     	return	;funcret
 24018  004522  0012               	opt stack 0
 24019                           GLOBAL	__end_of_EEPROM_read
 24020                           	__end_of_EEPROM_read:
 24021  004524                     	signat	_EEPROM_read,4217
 24022                           	global	_addIndicePassos
 24023                           
 24024 ;; *************** function _addIndicePassos *****************
 24025 ;; Defined at:
 24026 ;;		line 19 in file "fifo.c"
 24027 ;; Parameters:    Size  Location     Type
 24028 ;;		None
 24029 ;; Auto vars:     Size  Location     Type
 24030 ;;		None
 24031 ;; Return value:  Size  Location     Type
 24032 ;;                  1    wreg      void 
 24033 ;; Registers used:
 24034 ;;		wreg, status,2, status,0
 24035 ;; Tracked objects:
 24036 ;;		On entry : 0/0
 24037 ;;		On exit  : 0/0
 24038 ;;		Unchanged: 0/0
 24039 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24040 ;;      Params:         0       0       0       0       0       0       0       0       0       0
 24041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0
 24042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0
 24043 ;;      Totals:         0       0       0       0       0       0       0       0       0       0
 24044 ;;Total ram usage:        0 bytes
 24045 ;; Hardware stack levels used:    1
 24046 ;; Hardware stack levels required when called:    2
 24047 ;; This function calls:
 24048 ;;		Nothing
 24049 ;; This function is called by:
 24050 ;;		_main
 24051 ;; This function uses a non-reentrant model
 24052 ;;
 24053                           psect	text67,class=CODE,space=0,reloc=2,group=0
 24054                           	file	"fifo.c"
 24055                           	line	19
 24056                           global __ptext67
 24057                           __ptext67:
 24058  004442                     psect	text67
 24059                           	file	"fifo.c"
 24060                           	line	19
 24061                           	global	__size_of_addIndicePassos
 24062                           	__size_of_addIndicePassos	equ	__end_of_addIndicePassos-_addIndicePassos
 24063  0000                     	
 24064                           _addIndicePassos:
 24065  004442                     ;incstack = 0
 24066                           	opt	stack 28
 24067                           	line	21
 24068                           	
 24069                           l6097:
 24070  004442                     ;fifo.c: 21:     if(indice_passos < ind_fila)
 24071                           		movf	((c:_ind_fila)),c,w
 24072  004442  505D               	subwf	((c:_indice_passos)),c,w
 24073  004444  5C5B               	btfsc	status,0
 24074  004446  B0D8               	goto	u4571
 24075  004448  EF28  F022         	goto	u4570
 24076  00444C  EF2A  F022         
 24077                           u4571:
 24078  004450                     	goto	l647
 24079  004450  EF2D  F022         u4570:
 24080  004454                     	line	22
 24081                           	
 24082                           l6099:
 24083  004454                     ;fifo.c: 22:         indice_passos++;
 24084                           	incf	((c:_indice_passos)),c
 24085  004454  2A5B               	goto	l647
 24086  004456  EF2D  F022         	
 24087                           l646:
 24088  00445A                     	line	23
 24089                           	
 24090                           l647:
 24091  00445A                     	return	;funcret
 24092  00445A  0012               	opt stack 0
 24093                           GLOBAL	__end_of_addIndicePassos
 24094                           	__end_of_addIndicePassos:
 24095  00445C                     	signat	_addIndicePassos,89
 24096                           	global	_addContCiclos
 24097                           
 24098 ;; *************** function _addContCiclos *****************
 24099 ;; Defined at:
 24100 ;;		line 59 in file "fifo.c"
 24101 ;; Parameters:    Size  Location     Type
 24102 ;;		None
 24103 ;; Auto vars:     Size  Location     Type
 24104 ;;		None
 24105 ;; Return value:  Size  Location     Type
 24106 ;;                  1    wreg      void 
 24107 ;; Registers used:
 24108 ;;		status,2, status,0
 24109 ;; Tracked objects:
 24110 ;;		On entry : 0/0
 24111 ;;		On exit  : 0/0
 24112 ;;		Unchanged: 0/0
 24113 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24114 ;;      Params:         0       0       0       0       0       0       0       0       0       0
 24115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0
 24116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0
 24117 ;;      Totals:         0       0       0       0       0       0       0       0       0       0
 24118 ;;Total ram usage:        0 bytes
 24119 ;; Hardware stack levels used:    1
 24120 ;; Hardware stack levels required when called:    2
 24121 ;; This function calls:
 24122 ;;		Nothing
 24123 ;; This function is called by:
 24124 ;;		_main
 24125 ;; This function uses a non-reentrant model
 24126 ;;
 24127                           psect	text68,class=CODE,space=0,reloc=2,group=0
 24128                           	line	59
 24129                           global __ptext68
 24130                           __ptext68:
 24131  004598                     psect	text68
 24132                           	file	"fifo.c"
 24133                           	line	59
 24134                           	global	__size_of_addContCiclos
 24135                           	__size_of_addContCiclos	equ	__end_of_addContCiclos-_addContCiclos
 24136  0000                     	
 24137                           _addContCiclos:
 24138  004598                     ;incstack = 0
 24139                           	opt	stack 28
 24140                           	line	61
 24141                           	
 24142                           l6101:
 24143  004598                     ;fifo.c: 61:     cont_ciclos++;
 24144                           	infsnz	((c:_cont_ciclos)),c
 24145  004598  4A0D               	incf	((c:_cont_ciclos+1)),c
 24146  00459A  2A0E               	line	62
 24147                           	
 24148                           l669:
 24149  00459C                     	return	;funcret
 24150  00459C  0012               	opt stack 0
 24151                           GLOBAL	__end_of_addContCiclos
 24152                           	__end_of_addContCiclos:
 24153  00459E                     	signat	_addContCiclos,89
 24154                           	global	___lmul
 24155                           
 24156 ;; *************** function ___lmul *****************
 24157 ;; Defined at:
 24158 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul32.c"
 24159 ;; Parameters:    Size  Location     Type
 24160 ;;  multiplier      4    0[COMRAM] unsigned long 
 24161 ;;  multiplicand    4    4[COMRAM] unsigned long 
 24162 ;; Auto vars:     Size  Location     Type
 24163 ;;  product         4    8[COMRAM] unsigned long 
 24164 ;; Return value:  Size  Location     Type
 24165 ;;                  4    0[COMRAM] unsigned long 
 24166 ;; Registers used:
 24167 ;;		wreg, status,2, status,0
 24168 ;; Tracked objects:
 24169 ;;		On entry : 0/0
 24170 ;;		On exit  : 0/0
 24171 ;;		Unchanged: 0/0
 24172 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24173 ;;      Params:         8       0       0       0       0       0       0       0       0       0
 24174 ;;      Locals:         4       0       0       0       0       0       0       0       0       0
 24175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0
 24176 ;;      Totals:        12       0       0       0       0       0       0       0       0       0
 24177 ;;Total ram usage:       12 bytes
 24178 ;; Hardware stack levels used:    1
 24179 ;; Hardware stack levels required when called:    2
 24180 ;; This function calls:
 24181 ;;		Nothing
 24182 ;; This function is called by:
 24183 ;;		_main
 24184 ;; This function uses a non-reentrant model
 24185 ;;
 24186                           psect	text69,class=CODE,space=0,reloc=2,group=1
 24187                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul32.c"
 24188                           	line	15
 24189                           global __ptext69
 24190                           __ptext69:
 24191  00395C                     psect	text69
 24192                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul32.c"
 24193                           	line	15
 24194                           	global	__size_of___lmul
 24195                           	__size_of___lmul	equ	__end_of___lmul-___lmul
 24196  0000                     	
 24197                           ___lmul:
 24198  00395C                     ;incstack = 0
 24199                           	opt	stack 28
 24200                           	line	119
 24201                           	
 24202                           l6201:
 24203  00395C                     	movlw	low(0)
 24204  00395C  0E00               	movwf	((c:___lmul@product)),c
 24205  00395E  6E2F               	movlw	high(0)
 24206  003960  0E00               	movwf	((c:___lmul@product+1)),c
 24207  003962  6E30               	movlw	low highword(0)
 24208  003964  0E00               	movwf	((c:___lmul@product+2)),c
 24209  003966  6E31               	movlw	high highword(0)
 24210  003968  0E00               	movwf	((c:___lmul@product+3)),c
 24211  00396A  6E32               	goto	l6203
 24212  00396C  EFB8  F01C         	line	120
 24213                           	
 24214                           l1251:
 24215  003970                     	line	121
 24216                           	
 24217                           l6203:
 24218  003970                     	
 24219                           	btfss	((c:___lmul@multiplier)),c,(0)&7
 24220  003970  A027               	goto	u4711
 24221  003972  EFBD  F01C         	goto	u4710
 24222  003976  EFBF  F01C         u4711:
 24223  00397A                     	goto	l6207
 24224  00397A  EFC9  F01C         u4710:
 24225  00397E                     	line	122
 24226                           	
 24227                           l6205:
 24228  00397E                     	movf	((c:___lmul@multiplicand)),c,w
 24229  00397E  502B               	addwf	((c:___lmul@product)),c
 24230  003980  262F               	movf	((c:___lmul@multiplicand+1)),c,w
 24231  003982  502C               	addwfc	((c:___lmul@product+1)),c
 24232  003984  2230               	movf	((c:___lmul@multiplicand+2)),c,w
 24233  003986  502D               	addwfc	((c:___lmul@product+2)),c
 24234  003988  2231               	movf	((c:___lmul@multiplicand+3)),c,w
 24235  00398A  502E               	addwfc	((c:___lmul@product+3)),c
 24236  00398C  2232               	goto	l6207
 24237  00398E  EFC9  F01C         	
 24238                           l1252:
 24239  003992                     	line	123
 24240                           	
 24241                           l6207:
 24242  003992                     	bcf	status,0
 24243  003992  90D8               	rlcf	((c:___lmul@multiplicand)),c
 24244  003994  362B               	rlcf	((c:___lmul@multiplicand+1)),c
 24245  003996  362C               	rlcf	((c:___lmul@multiplicand+2)),c
 24246  003998  362D               	rlcf	((c:___lmul@multiplicand+3)),c
 24247  00399A  362E               	line	124
 24248                           	
 24249                           l6209:
 24250  00399C                     	bcf	status,0
 24251  00399C  90D8               	rrcf	((c:___lmul@multiplier+3)),c
 24252  00399E  322A               	rrcf	((c:___lmul@multiplier+2)),c
 24253  0039A0  3229               	rrcf	((c:___lmul@multiplier+1)),c
 24254  0039A2  3228               	rrcf	((c:___lmul@multiplier)),c
 24255  0039A4  3227               	line	125
 24256                           	movf	((c:___lmul@multiplier)),c,w
 24257  0039A6  5027               iorwf	((c:___lmul@multiplier+1)),c,w
 24258  0039A8  1028               iorwf	((c:___lmul@multiplier+2)),c,w
 24259  0039AA  1029               iorwf	((c:___lmul@multiplier+3)),c,w
 24260  0039AC  102A               	btfss	status,2
 24261  0039AE  A4D8               	goto	u4721
 24262  0039B0  EFDC  F01C         	goto	u4720
 24263  0039B4  EFDE  F01C         
 24264                           u4721:
 24265  0039B8                     	goto	l6203
 24266  0039B8  EFB8  F01C         u4720:
 24267  0039BC                     	
 24268                           l1253:
 24269  0039BC                     	line	128
 24270                           	movff	(c:___lmul@product),(c:?___lmul)
 24271  0039BC  C02F  F027         	movff	(c:___lmul@product+1),(c:?___lmul+1)
 24272  0039C0  C030  F028         	movff	(c:___lmul@product+2),(c:?___lmul+2)
 24273  0039C4  C031  F029         	movff	(c:___lmul@product+3),(c:?___lmul+3)
 24274  0039C8  C032  F02A         	line	129
 24275                           	
 24276                           l1254:
 24277  0039CC                     	return	;funcret
 24278  0039CC  0012               	opt stack 0
 24279                           GLOBAL	__end_of___lmul
 24280                           	__end_of___lmul:
 24281  0039CE                     	signat	___lmul,8316
 24282                           	global	___aldiv
 24283                           
 24284 ;; *************** function ___aldiv *****************
 24285 ;; Defined at:
 24286 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\aldiv.c"
 24287 ;; Parameters:    Size  Location     Type
 24288 ;;  dividend        4   12[COMRAM] long 
 24289 ;;  divisor         4   16[COMRAM] long 
 24290 ;; Auto vars:     Size  Location     Type
 24291 ;;  quotient        4   22[COMRAM] long 
 24292 ;;  sign            1   21[COMRAM] unsigned char 
 24293 ;;  counter         1   20[COMRAM] unsigned char 
 24294 ;; Return value:  Size  Location     Type
 24295 ;;                  4   12[COMRAM] long 
 24296 ;; Registers used:
 24297 ;;		wreg, status,2, status,0
 24298 ;; Tracked objects:
 24299 ;;		On entry : 0/0
 24300 ;;		On exit  : 0/0
 24301 ;;		Unchanged: 0/0
 24302 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24303 ;;      Params:         8       0       0       0       0       0       0       0       0       0
 24304 ;;      Locals:         6       0       0       0       0       0       0       0       0       0
 24305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0
 24306 ;;      Totals:        14       0       0       0       0       0       0       0       0       0
 24307 ;;Total ram usage:       14 bytes
 24308 ;; Hardware stack levels used:    1
 24309 ;; Hardware stack levels required when called:    2
 24310 ;; This function calls:
 24311 ;;		Nothing
 24312 ;; This function is called by:
 24313 ;;		_main
 24314 ;; This function uses a non-reentrant model
 24315 ;;
 24316                           psect	text70,class=CODE,space=0,reloc=2,group=1
 24317                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\aldiv.c"
 24318                           	line	7
 24319                           global __ptext70
 24320                           __ptext70:
 24321  002C56                     psect	text70
 24322                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\aldiv.c"
 24323                           	line	7
 24324                           	global	__size_of___aldiv
 24325                           	__size_of___aldiv	equ	__end_of___aldiv-___aldiv
 24326  0000                     	
 24327                           ___aldiv:
 24328  002C56                     ;incstack = 0
 24329                           	opt	stack 28
 24330                           	line	13
 24331                           	
 24332                           l6211:
 24333  002C56                     	movlw	low(0)
 24334  002C56  0E00               	movwf	((c:___aldiv@sign)),c
 24335  002C58  6E3C               	line	14
 24336                           	
 24337                           l6213:
 24338  002C5A                     	btfsc	((c:___aldiv@divisor+3)),c,7
 24339  002C5A  BE3A               	goto	u4730
 24340  002C5C  EF34  F016         	goto	u4731
 24341  002C60  EF32  F016         
 24342                           u4731:
 24343  002C64                     	goto	l6219
 24344  002C64  EF40  F016         u4730:
 24345  002C68                     	line	15
 24346                           	
 24347                           l6215:
 24348  002C68                     	comf	((c:___aldiv@divisor+3)),c
 24349  002C68  1E3A               	comf	((c:___aldiv@divisor+2)),c
 24350  002C6A  1E39               	comf	((c:___aldiv@divisor+1)),c
 24351  002C6C  1E38               	negf	((c:___aldiv@divisor)),c
 24352  002C6E  6C37               	movlw	0
 24353  002C70  0E00               	addwfc	((c:___aldiv@divisor+1)),c
 24354  002C72  2238               	addwfc	((c:___aldiv@divisor+2)),c
 24355  002C74  2239               	addwfc	((c:___aldiv@divisor+3)),c
 24356  002C76  223A               	line	16
 24357                           	
 24358                           l6217:
 24359  002C78                     	movlw	low(01h)
 24360  002C78  0E01               	movwf	((c:___aldiv@sign)),c
 24361  002C7A  6E3C               	goto	l6219
 24362  002C7C  EF40  F016         	line	17
 24363                           	
 24364                           l1311:
 24365  002C80                     	line	18
 24366                           	
 24367                           l6219:
 24368  002C80                     	btfsc	((c:___aldiv@dividend+3)),c,7
 24369  002C80  BE36               	goto	u4740
 24370  002C82  EF47  F016         	goto	u4741
 24371  002C86  EF45  F016         
 24372                           u4741:
 24373  002C8A                     	goto	l6225
 24374  002C8A  EF53  F016         u4740:
 24375  002C8E                     	line	19
 24376                           	
 24377                           l6221:
 24378  002C8E                     	comf	((c:___aldiv@dividend+3)),c
 24379  002C8E  1E36               	comf	((c:___aldiv@dividend+2)),c
 24380  002C90  1E35               	comf	((c:___aldiv@dividend+1)),c
 24381  002C92  1E34               	negf	((c:___aldiv@dividend)),c
 24382  002C94  6C33               	movlw	0
 24383  002C96  0E00               	addwfc	((c:___aldiv@dividend+1)),c
 24384  002C98  2234               	addwfc	((c:___aldiv@dividend+2)),c
 24385  002C9A  2235               	addwfc	((c:___aldiv@dividend+3)),c
 24386  002C9C  2236               	line	20
 24387                           	
 24388                           l6223:
 24389  002C9E                     	movlw	(01h)&0ffh
 24390  002C9E  0E01               	xorwf	((c:___aldiv@sign)),c
 24391  002CA0  1A3C               	goto	l6225
 24392  002CA2  EF53  F016         	line	21
 24393                           	
 24394                           l1312:
 24395  002CA6                     	line	22
 24396                           	
 24397                           l6225:
 24398  002CA6                     	movlw	low(0)
 24399  002CA6  0E00               	movwf	((c:___aldiv@quotient)),c
 24400  002CA8  6E3D               	movlw	high(0)
 24401  002CAA  0E00               	movwf	((c:___aldiv@quotient+1)),c
 24402  002CAC  6E3E               	movlw	low highword(0)
 24403  002CAE  0E00               	movwf	((c:___aldiv@quotient+2)),c
 24404  002CB0  6E3F               	movlw	high highword(0)
 24405  002CB2  0E00               	movwf	((c:___aldiv@quotient+3)),c
 24406  002CB4  6E40               	line	23
 24407                           	
 24408                           l6227:
 24409  002CB6                     	movf	((c:___aldiv@divisor)),c,w
 24410  002CB6  5037               iorwf	((c:___aldiv@divisor+1)),c,w
 24411  002CB8  1038               iorwf	((c:___aldiv@divisor+2)),c,w
 24412  002CBA  1039               iorwf	((c:___aldiv@divisor+3)),c,w
 24413  002CBC  103A               	btfsc	status,2
 24414  002CBE  B4D8               	goto	u4751
 24415  002CC0  EF64  F016         	goto	u4750
 24416  002CC4  EF66  F016         
 24417                           u4751:
 24418  002CC8                     	goto	l6247
 24419  002CC8  EFA8  F016         u4750:
 24420  002CCC                     	line	24
 24421                           	
 24422                           l6229:
 24423  002CCC                     	movlw	low(01h)
 24424  002CCC  0E01               	movwf	((c:___aldiv@counter)),c
 24425  002CCE  6E3B               	line	25
 24426                           	goto	l6233
 24427  002CD0  EF72  F016         	
 24428                           l1315:
 24429  002CD4                     	line	26
 24430                           	
 24431                           l6231:
 24432  002CD4                     	bcf	status,0
 24433  002CD4  90D8               	rlcf	((c:___aldiv@divisor)),c
 24434  002CD6  3637               	rlcf	((c:___aldiv@divisor+1)),c
 24435  002CD8  3638               	rlcf	((c:___aldiv@divisor+2)),c
 24436  002CDA  3639               	rlcf	((c:___aldiv@divisor+3)),c
 24437  002CDC  363A               	line	27
 24438                           	incf	((c:___aldiv@counter)),c
 24439  002CDE  2A3B               	goto	l6233
 24440  002CE0  EF72  F016         	line	28
 24441                           	
 24442                           l1314:
 24443  002CE4                     	line	25
 24444                           	
 24445                           l6233:
 24446  002CE4                     	
 24447                           	btfss	((c:___aldiv@divisor+3)),c,(31)&7
 24448  002CE4  AE3A               	goto	u4761
 24449  002CE6  EF77  F016         	goto	u4760
 24450  002CEA  EF79  F016         u4761:
 24451  002CEE                     	goto	l6231
 24452  002CEE  EF6A  F016         u4760:
 24453  002CF2                     	goto	l6235
 24454  002CF2  EF7D  F016         	
 24455                           l1316:
 24456  002CF6                     	goto	l6235
 24457  002CF6  EF7D  F016         	line	29
 24458                           	
 24459                           l1317:
 24460  002CFA                     	line	30
 24461                           	
 24462                           l6235:
 24463  002CFA                     	bcf	status,0
 24464  002CFA  90D8               	rlcf	((c:___aldiv@quotient)),c
 24465  002CFC  363D               	rlcf	((c:___aldiv@quotient+1)),c
 24466  002CFE  363E               	rlcf	((c:___aldiv@quotient+2)),c
 24467  002D00  363F               	rlcf	((c:___aldiv@quotient+3)),c
 24468  002D02  3640               	line	31
 24469                           	
 24470                           l6237:
 24471  002D04                     		movf	((c:___aldiv@divisor)),c,w
 24472  002D04  5037               	subwf	((c:___aldiv@dividend)),c,w
 24473  002D06  5C33               	movf	((c:___aldiv@divisor+1)),c,w
 24474  002D08  5038               	subwfb	((c:___aldiv@dividend+1)),c,w
 24475  002D0A  5834               	movf	((c:___aldiv@divisor+2)),c,w
 24476  002D0C  5039               	subwfb	((c:___aldiv@dividend+2)),c,w
 24477  002D0E  5835               	movf	((c:___aldiv@divisor+3)),c,w
 24478  002D10  503A               	subwfb	((c:___aldiv@dividend+3)),c,w
 24479  002D12  5836               	btfss	status,0
 24480  002D14  A0D8               	goto	u4771
 24481  002D16  EF8F  F016         	goto	u4770
 24482  002D1A  EF91  F016         
 24483                           u4771:
 24484  002D1E                     	goto	l6243
 24485  002D1E  EF9C  F016         u4770:
 24486  002D22                     	line	32
 24487                           	
 24488                           l6239:
 24489  002D22                     	movf	((c:___aldiv@divisor)),c,w
 24490  002D22  5037               	subwf	((c:___aldiv@dividend)),c
 24491  002D24  5E33               	movf	((c:___aldiv@divisor+1)),c,w
 24492  002D26  5038               	subwfb	((c:___aldiv@dividend+1)),c
 24493  002D28  5A34               	movf	((c:___aldiv@divisor+2)),c,w
 24494  002D2A  5039               	subwfb	((c:___aldiv@dividend+2)),c
 24495  002D2C  5A35               	movf	((c:___aldiv@divisor+3)),c,w
 24496  002D2E  503A               	subwfb	((c:___aldiv@dividend+3)),c
 24497  002D30  5A36               	line	33
 24498                           	
 24499                           l6241:
 24500  002D32                     	bsf	(0+(0/8)+(c:___aldiv@quotient)),c,(0)&7
 24501  002D32  803D               	goto	l6243
 24502  002D34  EF9C  F016         	line	34
 24503                           	
 24504                           l1318:
 24505  002D38                     	line	35
 24506                           	
 24507                           l6243:
 24508  002D38                     	bcf	status,0
 24509  002D38  90D8               	rrcf	((c:___aldiv@divisor+3)),c
 24510  002D3A  323A               	rrcf	((c:___aldiv@divisor+2)),c
 24511  002D3C  3239               	rrcf	((c:___aldiv@divisor+1)),c
 24512  002D3E  3238               	rrcf	((c:___aldiv@divisor)),c
 24513  002D40  3237               	line	36
 24514                           	
 24515                           l6245:
 24516  002D42                     	decfsz	((c:___aldiv@counter)),c
 24517  002D42  2E3B               	
 24518                           	goto	l6235
 24519  002D44  EF7D  F016         	goto	l6247
 24520  002D48  EFA8  F016         	
 24521                           l1319:
 24522  002D4C                     	goto	l6247
 24523  002D4C  EFA8  F016         	line	37
 24524                           	
 24525                           l1313:
 24526  002D50                     	line	38
 24527                           	
 24528                           l6247:
 24529  002D50                     	movf	((c:___aldiv@sign)),c,w
 24530  002D50  503C               	btfsc	status,2
 24531  002D52  B4D8               	goto	u4781
 24532  002D54  EFAE  F016         	goto	u4780
 24533  002D58  EFB0  F016         u4781:
 24534  002D5C                     	goto	l6251
 24535  002D5C  EFBA  F016         u4780:
 24536  002D60                     	line	39
 24537                           	
 24538                           l6249:
 24539  002D60                     	comf	((c:___aldiv@quotient+3)),c
 24540  002D60  1E40               	comf	((c:___aldiv@quotient+2)),c
 24541  002D62  1E3F               	comf	((c:___aldiv@quotient+1)),c
 24542  002D64  1E3E               	negf	((c:___aldiv@quotient)),c
 24543  002D66  6C3D               	movlw	0
 24544  002D68  0E00               	addwfc	((c:___aldiv@quotient+1)),c
 24545  002D6A  223E               	addwfc	((c:___aldiv@quotient+2)),c
 24546  002D6C  223F               	addwfc	((c:___aldiv@quotient+3)),c
 24547  002D6E  2240               	goto	l6251
 24548  002D70  EFBA  F016         	
 24549                           l1320:
 24550  002D74                     	line	40
 24551                           	
 24552                           l6251:
 24553  002D74                     	movff	(c:___aldiv@quotient),(c:?___aldiv)
 24554  002D74  C03D  F033         	movff	(c:___aldiv@quotient+1),(c:?___aldiv+1)
 24555  002D78  C03E  F034         	movff	(c:___aldiv@quotient+2),(c:?___aldiv+2)
 24556  002D7C  C03F  F035         	movff	(c:___aldiv@quotient+3),(c:?___aldiv+3)
 24557  002D80  C040  F036         	goto	l1321
 24558  002D84  EFC4  F016         	
 24559                           l6253:
 24560  002D88                     	line	41
 24561                           	
 24562                           l1321:
 24563  002D88                     	return	;funcret
 24564  002D88  0012               	opt stack 0
 24565                           GLOBAL	__end_of___aldiv
 24566                           	__end_of___aldiv:
 24567  002D8A                     	signat	___aldiv,8316
 24568                           	global	_Wifi_mode
 24569                           
 24570 ;; *************** function _Wifi_mode *****************
 24571 ;; Defined at:
 24572 ;;		line 46 in file "wifi.c"
 24573 ;; Parameters:    Size  Location     Type
 24574 ;;  d               1    wreg     unsigned char 
 24575 ;; Auto vars:     Size  Location     Type
 24576 ;;  d               1    3[COMRAM] unsigned char 
 24577 ;; Return value:  Size  Location     Type
 24578 ;;                  1    wreg      void 
 24579 ;; Registers used:
 24580 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, cstack
 24581 ;; Tracked objects:
 24582 ;;		On entry : 0/0
 24583 ;;		On exit  : 0/0
 24584 ;;		Unchanged: 0/0
 24585 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24586 ;;      Params:         0       0       0       0       0       0       0       0       0       0
 24587 ;;      Locals:         1       0       0       0       0       0       0       0       0       0
 24588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0
 24589 ;;      Totals:         1       0       0       0       0       0       0       0       0       0
 24590 ;;Total ram usage:        1 bytes
 24591 ;; Hardware stack levels used:    1
 24592 ;; Hardware stack levels required when called:    4
 24593 ;; This function calls:
 24594 ;;		_wifi_send
 24595 ;; This function is called by:
 24596 ;;		_main
 24597 ;; This function uses a non-reentrant model
 24598 ;;
 24599                           psect	text71,class=CODE,space=0,reloc=2,group=0
 24600                           	file	"wifi.c"
 24601                           	line	46
 24602                           global __ptext71
 24603                           __ptext71:
 24604  0036B8                     psect	text71
 24605                           	file	"wifi.c"
 24606                           	line	46
 24607                           	global	__size_of_Wifi_mode
 24608                           	__size_of_Wifi_mode	equ	__end_of_Wifi_mode-_Wifi_mode
 24609  0000                     	
 24610                           _Wifi_mode:
 24611  0036B8                     ;incstack = 0
 24612                           	opt	stack 26
 24613                           ;Wifi_mode@d stored from wreg
 24614                           	movwf	((c:Wifi_mode@d)),c
 24615  0036B8  6E2A               	line	48
 24616                           	
 24617                           l6187:
 24618  0036BA                     ;wifi.c: 46: void Wifi_mode(unsigned char d );wifi.c: 47: {;wifi.c: 48:     if(d == 1)
 24619                           		decf	((c:Wifi_mode@d)),c,w
 24620  0036BA  042A               	btfss	status,2
 24621  0036BC  A4D8               	goto	u4681
 24622  0036BE  EF63  F01B         	goto	u4680
 24623  0036C2  EF65  F01B         
 24624                           u4681:
 24625  0036C6                     	goto	l6191
 24626  0036C6  EF6D  F01B         u4680:
 24627  0036CA                     	line	50
 24628                           	
 24629                           l6189:
 24630  0036CA                     ;wifi.c: 49:     {;wifi.c: 50:         wifi_send("AT+CWMODE=1\r\n");
 24631                           		movlw	low(STR_33)
 24632  0036CA  0E98               	movwf	((c:wifi_send@msg)),c
 24633  0036CC  6E28               	movlw	high(STR_33)
 24634  0036CE  0E7F               	movwf	((c:wifi_send@msg+1)),c
 24635  0036D0  6E29               
 24636                           	call	_wifi_send	;wreg free
 24637  0036D2  ECF8  F019         	goto	l6191
 24638  0036D6  EF6D  F01B         	line	51
 24639                           ;wifi.c: 51:     }
 24640                           	
 24641                           l1199:
 24642  0036DA                     	line	53
 24643                           	
 24644                           l6191:
 24645  0036DA                     ;wifi.c: 53:     if(d == 2)
 24646                           		movlw	2
 24647  0036DA  0E02               	xorwf	((c:Wifi_mode@d)),c,w
 24648  0036DC  182A               	btfss	status,2
 24649  0036DE  A4D8               	goto	u4691
 24650  0036E0  EF74  F01B         	goto	u4690
 24651  0036E4  EF76  F01B         
 24652                           u4691:
 24653  0036E8                     	goto	l6195
 24654  0036E8  EF84  F01B         u4690:
 24655  0036EC                     	line	55
 24656                           	
 24657                           l6193:
 24658  0036EC                     ;wifi.c: 54:     {;wifi.c: 55:         wifi_send("AT+CWMODE=2\r\n");
 24659                           		movlw	low(STR_34)
 24660  0036EC  0EB4               	movwf	((c:wifi_send@msg)),c
 24661  0036EE  6E28               	movlw	high(STR_34)
 24662  0036F0  0E7F               	movwf	((c:wifi_send@msg+1)),c
 24663  0036F2  6E29               
 24664                           	call	_wifi_send	;wreg free
 24665  0036F4  ECF8  F019         	line	56
 24666                           ;wifi.c: 56:         wifi_send("AT+CWSAP=\"Wireless\",\"********\",1,2,4,0\r\n");
 24667                           		movlw	low(STR_35)
 24668  0036F8  0E5F               	movwf	((c:wifi_send@msg)),c
 24669  0036FA  6E28               	movlw	high(STR_35)
 24670  0036FC  0E7D               	movwf	((c:wifi_send@msg+1)),c
 24671  0036FE  6E29               
 24672                           	call	_wifi_send	;wreg free
 24673  003700  ECF8  F019         	goto	l6195
 24674  003704  EF84  F01B         	line	57
 24675                           ;wifi.c: 57:     }
 24676                           	
 24677                           l1200:
 24678  003708                     	line	58
 24679                           	
 24680                           l6195:
 24681  003708                     ;wifi.c: 58:     if(d == 3)
 24682                           		movlw	3
 24683  003708  0E03               	xorwf	((c:Wifi_mode@d)),c,w
 24684  00370A  182A               	btfss	status,2
 24685  00370C  A4D8               	goto	u4701
 24686  00370E  EF8B  F01B         	goto	u4700
 24687  003712  EF8D  F01B         
 24688                           u4701:
 24689  003716                     	goto	l6199
 24690  003716  EF9B  F01B         u4700:
 24691  00371A                     	line	60
 24692                           	
 24693                           l6197:
 24694  00371A                     ;wifi.c: 59:     {;wifi.c: 60:         wifi_send("AT+CWMODE=3\r\n");
 24695                           		movlw	low(STR_36)
 24696  00371A  0EC2               	movwf	((c:wifi_send@msg)),c
 24697  00371C  6E28               	movlw	high(STR_36)
 24698  00371E  0E7F               	movwf	((c:wifi_send@msg+1)),c
 24699  003720  6E29               
 24700                           	call	_wifi_send	;wreg free
 24701  003722  ECF8  F019         	line	61
 24702                           ;wifi.c: 61:         wifi_send("AT+CWSAP=\"Wireless\",\"********\",1,2,4,0\r\n");
 24703                           		movlw	low(STR_37)
 24704  003726  0E5F               	movwf	((c:wifi_send@msg)),c
 24705  003728  6E28               	movlw	high(STR_37)
 24706  00372A  0E7D               	movwf	((c:wifi_send@msg+1)),c
 24707  00372C  6E29               
 24708                           	call	_wifi_send	;wreg free
 24709  00372E  ECF8  F019         	line	62
 24710                           ;wifi.c: 62:     }
 24711                           	goto	l1203
 24712  003732  EFA3  F01B         	line	63
 24713                           ;wifi.c: 63:     else
 24714                           	
 24715                           l1201:
 24716  003736                     	line	64
 24717                           	
 24718                           l6199:
 24719  003736                     ;wifi.c: 64:         wifi_send("AT+CWMODE=0\r\n");
 24720                           		movlw	low(STR_38)
 24721  003736  0E8A               	movwf	((c:wifi_send@msg)),c
 24722  003738  6E28               	movlw	high(STR_38)
 24723  00373A  0E7F               	movwf	((c:wifi_send@msg+1)),c
 24724  00373C  6E29               
 24725                           	call	_wifi_send	;wreg free
 24726  00373E  ECF8  F019         	goto	l1203
 24727  003742  EFA3  F01B         	
 24728                           l1202:
 24729  003746                     	line	65
 24730                           	
 24731                           l1203:
 24732  003746                     	return	;funcret
 24733  003746  0012               	opt stack 0
 24734                           GLOBAL	__end_of_Wifi_mode
 24735                           	__end_of_Wifi_mode:
 24736  003748                     	signat	_Wifi_mode,4217
 24737                           	global	_wifi_send
 24738                           
 24739 ;; *************** function _wifi_send *****************
 24740 ;; Defined at:
 24741 ;;		line 17 in file "wifi.c"
 24742 ;; Parameters:    Size  Location     Type
 24743 ;;  msg             2    1[COMRAM] PTR const unsigned char 
 24744 ;;		 -> STR_46(14), STR_45(40), Wifi_cipsend@vtr(30), Wifi_cipsend@str(30), 
 24745 ;;		 -> STR_44(21), STR_43(14), STR_42(15), STR_41(18), 
 24746 ;;		 -> STR_40(11), STR_39(11), Wifi_connect@str(40), STR_38(14), 
 24747 ;;		 -> STR_37(41), STR_36(14), STR_35(41), STR_34(14), 
 24748 ;;		 -> STR_33(14), 
 24749 ;; Auto vars:     Size  Location     Type
 24750 ;;		None
 24751 ;; Return value:  Size  Location     Type
 24752 ;;                  1    wreg      void 
 24753 ;; Registers used:
 24754 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, cstack
 24755 ;; Tracked objects:
 24756 ;;		On entry : 0/0
 24757 ;;		On exit  : 0/0
 24758 ;;		Unchanged: 0/0
 24759 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24760 ;;      Params:         2       0       0       0       0       0       0       0       0       0
 24761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0
 24762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0
 24763 ;;      Totals:         2       0       0       0       0       0       0       0       0       0
 24764 ;;Total ram usage:        2 bytes
 24765 ;; Hardware stack levels used:    1
 24766 ;; Hardware stack levels required when called:    3
 24767 ;; This function calls:
 24768 ;;		_txEUSART
 24769 ;;		_txStatusEUSART
 24770 ;; This function is called by:
 24771 ;;		_Wifi_mode
 24772 ;;		_Wifi_connect
 24773 ;;		_Wifi_scan
 24774 ;;		_Wifi_ip
 24775 ;;		_Wifi_autoconnect
 24776 ;;		_Wifi_config_servidor
 24777 ;;		_Wifi_cipsend
 24778 ;; This function uses a non-reentrant model
 24779 ;;
 24780                           psect	text72,class=CODE,space=0,reloc=2,group=0
 24781                           	line	17
 24782                           global __ptext72
 24783                           __ptext72:
 24784  0033F0                     psect	text72
 24785                           	file	"wifi.c"
 24786                           	line	17
 24787                           	global	__size_of_wifi_send
 24788                           	__size_of_wifi_send	equ	__end_of_wifi_send-_wifi_send
 24789  0000                     	
 24790                           _wifi_send:
 24791  0033F0                     ;incstack = 0
 24792                           	opt	stack 26
 24793                           	line	19
 24794                           	
 24795                           l5527:
 24796  0033F0                     ;wifi.c: 17: void wifi_send( const char * msg );wifi.c: 18: {;wifi.c: 19:     while( *ms
                                 g )
 24797                           	goto	l5535
 24798  0033F0  EF3A  F01A         	
 24799                           l1179:
 24800  0033F4                     	line	21
 24801                           ;wifi.c: 20:     {;wifi.c: 21:         while( eusart.txSTATUS() );
 24802                           	goto	l5529
 24803  0033F4  EFFE  F019         	
 24804                           l1181:
 24805  0033F8                     	goto	l5529
 24806  0033F8  EFFE  F019         	
 24807                           l1180:
 24808  0033FC                     	
 24809                           l5529:
 24810  0033FC                     	lfsr	2,(_eusart)+0Ah
 24811  0033FC  EE20  F0DB         	call	u4008
 24812  003400  D802               	goto	u4009
 24813  003402  EF0D  F01A         u4008:
 24814  003406                     	push
 24815  003406  0005               	movwf	pclath
 24816  003408  6EFA               	movf	postinc2,w
 24817  00340A  50DE               	movwf	tosl
 24818  00340C  6EFD               	movf	postinc2,w
 24819  00340E  50DE               	movwf	tosl+1
 24820  003410  6EFE               	movf	tblptru,w
 24821  003412  50F8               	movwf	tosl+2
 24822  003414  6EFF               	movf	pclath,w
 24823  003416  50FA               	
 24824                           	return	;indir
 24825  003418  0012               	u4009:
 24826  00341A                     	iorlw	0
 24827  00341A  0900               	btfss	status,2
 24828  00341C  A4D8               	goto	u4011
 24829  00341E  EF13  F01A         	goto	u4010
 24830  003422  EF15  F01A         u4011:
 24831  003426                     	goto	l5529
 24832  003426  EFFE  F019         u4010:
 24833  00342A                     	goto	l5531
 24834  00342A  EF17  F01A         	
 24835                           l1182:
 24836  00342E                     	line	22
 24837                           	
 24838                           l5531:
 24839  00342E                     ;wifi.c: 22:         eusart.tx( *msg );
 24840                           	lfsr	2,(_eusart)+08h
 24841  00342E  EE20  F0D9         	call	u4028
 24842  003432  D802               	goto	u4029
 24843  003434  EF36  F01A         u4028:
 24844  003438                     	push
 24845  003438  0005               	movwf	pclath
 24846  00343A  6EFA               	movf	postinc2,w
 24847  00343C  50DE               	movwf	tosl
 24848  00343E  6EFD               	movf	postinc2,w
 24849  003440  50DE               	movwf	tosl+1
 24850  003442  6EFE               	movf	tblptru,w
 24851  003444  50F8               	movwf	tosl+2
 24852  003446  6EFF               	movf	pclath,w
 24853  003448  50FA               	
 24854                           	movff	(c:wifi_send@msg),tblptrl
 24855  00344A  C028  FFF6         	movff	(c:wifi_send@msg+1),tblptrh
 24856  00344E  C029  FFF7         	clrf	tblptru
 24857  003452  6AF8               	
 24858                           	movlw	high __ramtop-1
 24859  003454  0E07               	cpfsgt	tblptrh
 24860  003456  64F7               	bra	u4037
 24861  003458  D003               	tblrd	*
 24862  00345A  0008               	
 24863                           	movf	tablat,w
 24864  00345C  50F5               	bra	u4030
 24865  00345E  D005               u4037:
 24866  003460                     	movff	tblptrl,fsr1l
 24867  003460  CFF6 FFE1          	movff	tblptrh,fsr1h
 24868  003464  CFF7 FFE2          	movf	indf1,w
 24869  003468  50E7               u4030:
 24870  00346A                     	
 24871                           	return	;indir
 24872  00346A  0012               	u4029:
 24873  00346C                     	line	23
 24874                           	
 24875                           l5533:
 24876  00346C                     ;wifi.c: 23:         ++msg;
 24877                           	infsnz	((c:wifi_send@msg)),c
 24878  00346C  4A28               	incf	((c:wifi_send@msg+1)),c
 24879  00346E  2A29               	goto	l5535
 24880  003470  EF3A  F01A         	line	24
 24881                           ;wifi.c: 24:     }
 24882                           	
 24883                           l1178:
 24884  003474                     	line	19
 24885                           	
 24886                           l5535:
 24887  003474                     ;wifi.c: 19:     while( *msg )
 24888                           	movff	(c:wifi_send@msg),tblptrl
 24889  003474  C028  FFF6         	movff	(c:wifi_send@msg+1),tblptrh
 24890  003478  C029  FFF7         	clrf	tblptru
 24891  00347C  6AF8               	
 24892                           	movlw	high __ramtop-1
 24893  00347E  0E07               	cpfsgt	tblptrh
 24894  003480  64F7               	bra	u4047
 24895  003482  D003               	tblrd	*
 24896  003484  0008               	
 24897                           	movf	tablat,w
 24898  003486  50F5               	bra	u4040
 24899  003488  D005               u4047:
 24900  00348A                     	movff	tblptrl,fsr1l
 24901  00348A  CFF6 FFE1          	movff	tblptrh,fsr1h
 24902  00348E  CFF7 FFE2          	movf	indf1,w
 24903  003492  50E7               u4040:
 24904  003494                     	iorlw	0
 24905  003494  0900               	btfss	status,2
 24906  003496  A4D8               	goto	u4051
 24907  003498  EF50  F01A         	goto	u4050
 24908  00349C  EF52  F01A         u4051:
 24909  0034A0                     	goto	l5529
 24910  0034A0  EFFE  F019         u4050:
 24911  0034A4                     	goto	l1184
 24912  0034A4  EF54  F01A         	
 24913                           l1183:
 24914  0034A8                     	line	25
 24915                           	
 24916                           l1184:
 24917  0034A8                     	return	;funcret
 24918  0034A8  0012               	opt stack 0
 24919                           GLOBAL	__end_of_wifi_send
 24920                           	__end_of_wifi_send:
 24921  0034AA                     	signat	_wifi_send,4217
 24922                           	global	_txStatusEUSART
 24923                           
 24924 ;; *************** function _txStatusEUSART *****************
 24925 ;; Defined at:
 24926 ;;		line 126 in file "eusart.c"
 24927 ;; Parameters:    Size  Location     Type
 24928 ;;		None
 24929 ;; Auto vars:     Size  Location     Type
 24930 ;;		None
 24931 ;; Return value:  Size  Location     Type
 24932 ;;                  1    wreg      unsigned char 
 24933 ;; Registers used:
 24934 ;;		wreg
 24935 ;; Tracked objects:
 24936 ;;		On entry : 0/0
 24937 ;;		On exit  : 0/0
 24938 ;;		Unchanged: 0/0
 24939 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24940 ;;      Params:         0       0       0       0       0       0       0       0       0       0
 24941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0
 24942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0
 24943 ;;      Totals:         0       0       0       0       0       0       0       0       0       0
 24944 ;;Total ram usage:        0 bytes
 24945 ;; Hardware stack levels used:    1
 24946 ;; Hardware stack levels required when called:    2
 24947 ;; This function calls:
 24948 ;;		Nothing
 24949 ;; This function is called by:
 24950 ;;		_wifi_send
 24951 ;; This function uses a non-reentrant model
 24952 ;;
 24953                           psect	text73,class=CODE,space=0,reloc=2,group=0
 24954                           	file	"eusart.c"
 24955                           	line	126
 24956                           global __ptext73
 24957                           __ptext73:
 24958  004474                     psect	text73
 24959                           	file	"eusart.c"
 24960                           	line	126
 24961                           	global	__size_of_txStatusEUSART
 24962                           	__size_of_txStatusEUSART	equ	__end_of_txStatusEUSART-_txStatusEUSART
 24963  0000                     	
 24964                           _txStatusEUSART:
 24965  004474                     ;incstack = 0
 24966                           	opt	stack 26
 24967                           	line	128
 24968                           	
 24969                           l5149:
 24970  004474                     ;eusart.c: 128:     return( !TXSTAbits.TRMT );
 24971                           	btfss	((c:4012)),c,1	;volatile
 24972  004474  A2AC               	goto	u3421
 24973  004476  EF3F  F022         	goto	u3420
 24974  00447A  EF42  F022         u3421:
 24975  00447E                     	movlw	1
 24976  00447E  0E01               	goto	u3430
 24977  004480  EF43  F022         u3420:
 24978  004484                     	movlw	0
 24979  004484  0E00               u3430:
 24980  004486                     	goto	l1134
 24981  004486  EF45  F022         	
 24982                           l5151:
 24983  00448A                     	line	129
 24984                           	
 24985                           l1134:
 24986  00448A                     	return	;funcret
 24987  00448A  0012               	opt stack 0
 24988                           GLOBAL	__end_of_txStatusEUSART
 24989                           	__end_of_txStatusEUSART:
 24990  00448C                     	signat	_txStatusEUSART,89
 24991                           	global	_txEUSART
 24992                           
 24993 ;; *************** function _txEUSART *****************
 24994 ;; Defined at:
 24995 ;;		line 115 in file "eusart.c"
 24996 ;; Parameters:    Size  Location     Type
 24997 ;;  d               1    wreg     unsigned char 
 24998 ;; Auto vars:     Size  Location     Type
 24999 ;;  d               1    0[COMRAM] unsigned char 
 25000 ;; Return value:  Size  Location     Type
 25001 ;;                  1    wreg      void 
 25002 ;; Registers used:
 25003 ;;		wreg
 25004 ;; Tracked objects:
 25005 ;;		On entry : 0/0
 25006 ;;		On exit  : 0/0
 25007 ;;		Unchanged: 0/0
 25008 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25009 ;;      Params:         0       0       0       0       0       0       0       0       0       0
 25010 ;;      Locals:         1       0       0       0       0       0       0       0       0       0
 25011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0
 25012 ;;      Totals:         1       0       0       0       0       0       0       0       0       0
 25013 ;;Total ram usage:        1 bytes
 25014 ;; Hardware stack levels used:    1
 25015 ;; Hardware stack levels required when called:    2
 25016 ;; This function calls:
 25017 ;;		Nothing
 25018 ;; This function is called by:
 25019 ;;		_wifi_send
 25020 ;; This function uses a non-reentrant model
 25021 ;;
 25022                           psect	text74,class=CODE,space=0,reloc=2,group=0
 25023                           	line	115
 25024                           global __ptext74
 25025                           __ptext74:
 25026  004584                     psect	text74
 25027                           	file	"eusart.c"
 25028                           	line	115
 25029                           	global	__size_of_txEUSART
 25030                           	__size_of_txEUSART	equ	__end_of_txEUSART-_txEUSART
 25031  0000                     	
 25032                           _txEUSART:
 25033  004584                     ;incstack = 0
 25034                           	opt	stack 26
 25035                           ;txEUSART@d stored from wreg
 25036                           	movwf	((c:txEUSART@d)),c
 25037  004584  6E27               	line	117
 25038                           	
 25039                           l5147:
 25040  004586                     ;eusart.c: 115: void txEUSART( unsigned char d );eusart.c: 116: {;eusart.c: 117:     TXR
                                 EG = d;
 25041                           	movff	(c:txEUSART@d),(c:4013)	;volatile
 25042  004586  C027  FFAD         	line	118
 25043                           	
 25044                           l1131:
 25045  00458A                     	return	;funcret
 25046  00458A  0012               	opt stack 0
 25047                           GLOBAL	__end_of_txEUSART
 25048                           	__end_of_txEUSART:
 25049  00458C                     	signat	_txEUSART,4217
 25050                           	global	_MCP4725
 25051                           
 25052 ;; *************** function _MCP4725 *****************
 25053 ;; Defined at:
 25054 ;;		line 35 in file "MCP4725.c"
 25055 ;; Parameters:    Size  Location     Type
 25056 ;;  Vout            2   26[COMRAM] unsigned int 
 25057 ;; Auto vars:     Size  Location     Type
 25058 ;;		None
 25059 ;; Return value:  Size  Location     Type
 25060 ;;                  1    wreg      void 
 25061 ;; Registers used:
 25062 ;;		wreg, status,2, status,0, cstack
 25063 ;; Tracked objects:
 25064 ;;		On entry : 0/0
 25065 ;;		On exit  : 0/0
 25066 ;;		Unchanged: 0/0
 25067 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25068 ;;      Params:         2       0       0       0       0       0       0       0       0       0
 25069 ;;      Locals:         0       0       0       0       0       0       0       0       0       0
 25070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0
 25071 ;;      Totals:         2       0       0       0       0       0       0       0       0       0
 25072 ;;Total ram usage:        2 bytes
 25073 ;; Hardware stack levels used:    1
 25074 ;; Hardware stack levels required when called:    4
 25075 ;; This function calls:
 25076 ;;		_I2C_stop
 25077 ;;		_dac_init
 25078 ;;		_dac_write
 25079 ;;		_delay
 25080 ;; This function is called by:
 25081 ;;		_main
 25082 ;; This function uses a non-reentrant model
 25083 ;;
 25084                           psect	text75,class=CODE,space=0,reloc=2,group=0
 25085                           	file	"MCP4725.c"
 25086                           	line	35
 25087                           global __ptext75
 25088                           __ptext75:
 25089  00437C                     psect	text75
 25090                           	file	"MCP4725.c"
 25091                           	line	35
 25092                           	global	__size_of_MCP4725
 25093                           	__size_of_MCP4725	equ	__end_of_MCP4725-_MCP4725
 25094  0000                     	
 25095                           _MCP4725:
 25096  00437C                     ;incstack = 0
 25097                           	opt	stack 26
 25098                           	line	37
 25099                           	
 25100                           l5595:
 25101  00437C                     ;MCP4725.c: 35: void MCP4725 (unsigned int Vout);MCP4725.c: 36: {;MCP4725.c: 37:     dac
                                 _init();
 25102                           	call	_dac_init
 25103  00437C  EC44  F020         	line	38
 25104                           ;MCP4725.c: 38:     dac_write(Vout);
 25105                           	movff	(c:MCP4725@Vout),(c:dac_write@code)
 25106  004380  C041  F02A         	movff	(c:MCP4725@Vout+1),(c:dac_write@code+1)
 25107  004384  C042  F02B         	call	_dac_write	;wreg free
 25108  004388  EC01  F020         	line	39
 25109                           	
 25110                           l5597:
 25111  00438C                     ;MCP4725.c: 39:     I2C_stop();
 25112                           	call	_I2C_stop	;wreg free
 25113  00438C  EC5E  F022         	line	40
 25114                           	
 25115                           l5599:
 25116  004390                     ;MCP4725.c: 40:     delay(1);
 25117                           	movlw	high(01h)
 25118  004390  0E00               	movwf	((c:delay@t+1)),c
 25119  004392  6E28               	movlw	low(01h)
 25120  004394  0E01               	movwf	((c:delay@t)),c
 25121  004396  6E27               	call	_delay	;wreg free
 25122  004398  ECE8  F020         	line	41
 25123                           	
 25124                           l902:
 25125  00439C                     	return	;funcret
 25126  00439C  0012               	opt stack 0
 25127                           GLOBAL	__end_of_MCP4725
 25128                           	__end_of_MCP4725:
 25129  00439E                     	signat	_MCP4725,4217
 25130                           	global	_dac_write
 25131                           
 25132 ;; *************** function _dac_write *****************
 25133 ;; Defined at:
 25134 ;;		line 25 in file "MCP4725.c"
 25135 ;; Parameters:    Size  Location     Type
 25136 ;;  code            2    3[COMRAM] unsigned int 
 25137 ;; Auto vars:     Size  Location     Type
 25138 ;;		None
 25139 ;; Return value:  Size  Location     Type
 25140 ;;                  1    wreg      void 
 25141 ;; Registers used:
 25142 ;;		wreg, status,2, status,0, cstack
 25143 ;; Tracked objects:
 25144 ;;		On entry : 0/0
 25145 ;;		On exit  : 0/0
 25146 ;;		Unchanged: 0/0
 25147 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25148 ;;      Params:         2       0       0       0       0       0       0       0       0       0
 25149 ;;      Locals:         0       0       0       0       0       0       0       0       0       0
 25150 ;;      Temps:          3       0       0       0       0       0       0       0       0       0
 25151 ;;      Totals:         5       0       0       0       0       0       0       0       0       0
 25152 ;;Total ram usage:        5 bytes
 25153 ;; Hardware stack levels used:    1
 25154 ;; Hardware stack levels required when called:    3
 25155 ;; This function calls:
 25156 ;;		_I2C_ack_receive
 25157 ;;		_I2C_tx
 25158 ;;		_delay
 25159 ;; This function is called by:
 25160 ;;		_MCP4725
 25161 ;;		_MCP4725X
 25162 ;; This function uses a non-reentrant model
 25163 ;;
 25164                           psect	text76,class=CODE,space=0,reloc=2,group=0
 25165                           	line	25
 25166                           global __ptext76
 25167                           __ptext76:
 25168  004002                     psect	text76
 25169                           	file	"MCP4725.c"
 25170                           	line	25
 25171                           	global	__size_of_dac_write
 25172                           	__size_of_dac_write	equ	__end_of_dac_write-_dac_write
 25173  0000                     	
 25174                           _dac_write:
 25175  004002                     ;incstack = 0
 25176                           	opt	stack 26
 25177                           	line	27
 25178                           	
 25179                           l5443:
 25180  004002                     ;MCP4725.c: 25: void dac_write ( unsigned int code );MCP4725.c: 26: {;MCP4725.c: 27:    
                                  I2C_tx( code >> 4 );
 25181                           	movff	(c:dac_write@code),??_dac_write+0+0
 25182  004002  C02A  F02C         	movff	(c:dac_write@code+1),??_dac_write+0+0+1
 25183  004006  C02B  F02D         	movlw	04h
 25184  00400A  0E04               	movwf	(??_dac_write+2+0)&0ffh,c
 25185  00400C  6E2E               u3875:
 25186  00400E                     	bcf	status,0
 25187  00400E  90D8               	rrcf	(??_dac_write+0+1),c
 25188  004010  322D               	rrcf	(??_dac_write+0+0),c
 25189  004012  322C               	decfsz	(??_dac_write+2+0)&0ffh,c
 25190  004014  2E2E               	goto	u3875
 25191  004016  EF07  F020         	movf	(??_dac_write+0+0),c,w
 25192  00401A  502C               	
 25193                           	call	_I2C_tx
 25194  00401C  ECDE  F021         	line	28
 25195                           	
 25196                           l5445:
 25197  004020                     ;MCP4725.c: 28:     I2C_ack_receive();
 25198                           	call	_I2C_ack_receive	;wreg free
 25199  004020  EC52  F022         	line	29
 25200                           	
 25201                           l5447:
 25202  004024                     ;MCP4725.c: 29:     delay(1);
 25203                           	movlw	high(01h)
 25204  004024  0E00               	movwf	((c:delay@t+1)),c
 25205  004026  6E28               	movlw	low(01h)
 25206  004028  0E01               	movwf	((c:delay@t)),c
 25207  00402A  6E27               	call	_delay	;wreg free
 25208  00402C  ECE8  F020         	line	30
 25209                           	
 25210                           l5449:
 25211  004030                     ;MCP4725.c: 30:     I2C_tx( code << 4);
 25212                           	swapf	((c:dac_write@code)),c,w
 25213  004030  382A               	andlw	(0ffh shl 4) & 0ffh
 25214  004032  0BF0               	
 25215                           	call	_I2C_tx
 25216  004034  ECDE  F021         	line	31
 25217                           	
 25218                           l5451:
 25219  004038                     ;MCP4725.c: 31:     I2C_ack_receive();
 25220                           	call	_I2C_ack_receive	;wreg free
 25221  004038  EC52  F022         	line	32
 25222                           ;MCP4725.c: 32:     delay(1);
 25223                           	movlw	high(01h)
 25224  00403C  0E00               	movwf	((c:delay@t+1)),c
 25225  00403E  6E28               	movlw	low(01h)
 25226  004040  0E01               	movwf	((c:delay@t)),c
 25227  004042  6E27               	call	_delay	;wreg free
 25228  004044  ECE8  F020         	line	33
 25229                           	
 25230                           l899:
 25231  004048                     	return	;funcret
 25232  004048  0012               	opt stack 0
 25233                           GLOBAL	__end_of_dac_write
 25234                           	__end_of_dac_write:
 25235  00404A                     	signat	_dac_write,4217
 25236                           	global	_dac_init
 25237                           
 25238 ;; *************** function _dac_init *****************
 25239 ;; Defined at:
 25240 ;;		line 13 in file "MCP4725.c"
 25241 ;; Parameters:    Size  Location     Type
 25242 ;;		None
 25243 ;; Auto vars:     Size  Location     Type
 25244 ;;		None
 25245 ;; Return value:  Size  Location     Type
 25246 ;;                  1    wreg      void 
 25247 ;; Registers used:
 25248 ;;		wreg, status,2, status,0, cstack
 25249 ;; Tracked objects:
 25250 ;;		On entry : 0/0
 25251 ;;		On exit  : 0/0
 25252 ;;		Unchanged: 0/0
 25253 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25254 ;;      Params:         0       0       0       0       0       0       0       0       0       0
 25255 ;;      Locals:         0       0       0       0       0       0       0       0       0       0
 25256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0
 25257 ;;      Totals:         0       0       0       0       0       0       0       0       0       0
 25258 ;;Total ram usage:        0 bytes
 25259 ;; Hardware stack levels used:    1
 25260 ;; Hardware stack levels required when called:    3
 25261 ;; This function calls:
 25262 ;;		_I2C_ack_receive
 25263 ;;		_I2C_start
 25264 ;;		_I2C_tx
 25265 ;;		_delay
 25266 ;; This function is called by:
 25267 ;;		_MCP4725
 25268 ;;		_MCP4725X
 25269 ;; This function uses a non-reentrant model
 25270 ;;
 25271                           psect	text77,class=CODE,space=0,reloc=2,group=0
 25272                           	line	13
 25273                           global __ptext77
 25274                           __ptext77:
 25275  004088                     psect	text77
 25276                           	file	"MCP4725.c"
 25277                           	line	13
 25278                           	global	__size_of_dac_init
 25279                           	__size_of_dac_init	equ	__end_of_dac_init-_dac_init
 25280  0000                     	
 25281                           _dac_init:
 25282  004088                     ;incstack = 0
 25283                           	opt	stack 26
 25284                           	line	15
 25285                           	
 25286                           l5429:
 25287  004088                     ;MCP4725.c: 15:     I2C_start();
 25288                           	call	_I2C_start	;wreg free
 25289  004088  EC46  F022         	line	16
 25290                           	
 25291                           l5431:
 25292  00408C                     ;MCP4725.c: 16:     delay(1);
 25293                           	movlw	high(01h)
 25294  00408C  0E00               	movwf	((c:delay@t+1)),c
 25295  00408E  6E28               	movlw	low(01h)
 25296  004090  0E01               	movwf	((c:delay@t)),c
 25297  004092  6E27               	call	_delay	;wreg free
 25298  004094  ECE8  F020         	line	17
 25299                           	
 25300                           l5433:
 25301  004098                     ;MCP4725.c: 17:     I2C_tx( 0b11000000 );
 25302                           	movlw	(0C0h)&0ffh
 25303  004098  0EC0               	
 25304                           	call	_I2C_tx
 25305  00409A  ECDE  F021         	line	18
 25306                           	
 25307                           l5435:
 25308  00409E                     ;MCP4725.c: 18:     I2C_ack_receive();
 25309                           	call	_I2C_ack_receive	;wreg free
 25310  00409E  EC52  F022         	line	19
 25311                           	
 25312                           l5437:
 25313  0040A2                     ;MCP4725.c: 19:     delay(1);
 25314                           	movlw	high(01h)
 25315  0040A2  0E00               	movwf	((c:delay@t+1)),c
 25316  0040A4  6E28               	movlw	low(01h)
 25317  0040A6  0E01               	movwf	((c:delay@t)),c
 25318  0040A8  6E27               	call	_delay	;wreg free
 25319  0040AA  ECE8  F020         	line	20
 25320                           ;MCP4725.c: 20:     I2C_tx( 0b01100000 );
 25321                           	movlw	(060h)&0ffh
 25322  0040AE  0E60               	
 25323                           	call	_I2C_tx
 25324  0040B0  ECDE  F021         	line	21
 25325                           	
 25326                           l5439:
 25327  0040B4                     ;MCP4725.c: 21:     I2C_ack_receive();
 25328                           	call	_I2C_ack_receive	;wreg free
 25329  0040B4  EC52  F022         	line	22
 25330                           	
 25331                           l5441:
 25332  0040B8                     ;MCP4725.c: 22:     delay(1);
 25333                           	movlw	high(01h)
 25334  0040B8  0E00               	movwf	((c:delay@t+1)),c
 25335  0040BA  6E28               	movlw	low(01h)
 25336  0040BC  0E01               	movwf	((c:delay@t)),c
 25337  0040BE  6E27               	call	_delay	;wreg free
 25338  0040C0  ECE8  F020         	line	23
 25339                           	
 25340                           l896:
 25341  0040C4                     	return	;funcret
 25342  0040C4  0012               	opt stack 0
 25343                           GLOBAL	__end_of_dac_init
 25344                           	__end_of_dac_init:
 25345  0040C6                     	signat	_dac_init,89
 25346                           	global	_delay
 25347                           
 25348 ;; *************** function _delay *****************
 25349 ;; Defined at:
 25350 ;;		line 10 in file "delay.c"
 25351 ;; Parameters:    Size  Location     Type
 25352 ;;  t               2    0[COMRAM] unsigned int 
 25353 ;; Auto vars:     Size  Location     Type
 25354 ;;		None
 25355 ;; Return value:  Size  Location     Type
 25356 ;;                  1    wreg      void 
 25357 ;; Registers used:
 25358 ;;		wreg, status,2, status,0
 25359 ;; Tracked objects:
 25360 ;;		On entry : 0/0
 25361 ;;		On exit  : 0/0
 25362 ;;		Unchanged: 0/0
 25363 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25364 ;;      Params:         2       0       0       0       0       0       0       0       0       0
 25365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0
 25366 ;;      Temps:          1       0       0       0       0       0       0       0       0       0
 25367 ;;      Totals:         3       0       0       0       0       0       0       0       0       0
 25368 ;;Total ram usage:        3 bytes
 25369 ;; Hardware stack levels used:    1
 25370 ;; Hardware stack levels required when called:    2
 25371 ;; This function calls:
 25372 ;;		Nothing
 25373 ;; This function is called by:
 25374 ;;		_main
 25375 ;;		_dispLCD_init
 25376 ;;		_dac_init
 25377 ;;		_dac_write
 25378 ;;		_MCP4725
 25379 ;;		_MCP4725X
 25380 ;; This function uses a non-reentrant model
 25381 ;;
 25382                           psect	text78,class=CODE,space=0,reloc=2,group=0
 25383                           	file	"delay.c"
 25384                           	line	10
 25385                           global __ptext78
 25386                           __ptext78:
 25387  0041D0                     psect	text78
 25388                           	file	"delay.c"
 25389                           	line	10
 25390                           	global	__size_of_delay
 25391                           	__size_of_delay	equ	__end_of_delay-_delay
 25392  0000                     	
 25393                           _delay:
 25394  0041D0                     ;incstack = 0
 25395                           	opt	stack 27
 25396                           	line	12
 25397                           	
 25398                           l5079:
 25399  0041D0                     ;delay.c: 10: void delay( unsigned int t );delay.c: 11: {;delay.c: 12:     while( t )
 25400                           	goto	l478
 25401  0041D0  EFF5  F020         	
 25402                           l479:
 25403  0041D4                     	line	14
 25404                           	
 25405                           l5081:
 25406  0041D4                     ;delay.c: 13:     {;delay.c: 14:         _delay((unsigned long)((1)*(20000000/4000.0)));
                                 
 25407                           	opt asmopt_push
 25408                           opt asmopt_off
 25409                           movlw	7
 25410  0041D4  0E07               movwf	(??_delay+0+0)&0ffh,c,f
 25411  0041D6  6E29               	movlw	125
 25412  0041D8  0E7D               u6397:
 25413  0041DA                     decfsz	wreg,f
 25414  0041DA  2EE8               	bra	u6397
 25415  0041DC  D7FE               	decfsz	(??_delay+0+0)&0ffh,c,f
 25416  0041DE  2E29               	bra	u6397
 25417  0041E0  D7FC               	nop
 25418  0041E2  F000               opt asmopt_pop
 25419                           
 25420                           	line	15
 25421                           	
 25422                           l5083:
 25423  0041E4                     ;delay.c: 15:         --t;
 25424                           	decf	((c:delay@t)),c
 25425  0041E4  0627               	btfss	status,0
 25426  0041E6  A0D8               	decf	((c:delay@t+1)),c
 25427  0041E8  0628               	line	16
 25428                           ;delay.c: 16:     }
 25429                           	
 25430                           l478:
 25431  0041EA                     	line	12
 25432                           ;delay.c: 12:     while( t )
 25433                           	movf	((c:delay@t)),c,w
 25434  0041EA  5027               iorwf	((c:delay@t+1)),c,w
 25435  0041EC  1028               	btfss	status,2
 25436  0041EE  A4D8               	goto	u3371
 25437  0041F0  EFFC  F020         	goto	u3370
 25438  0041F4  EFFE  F020         
 25439                           u3371:
 25440  0041F8                     	goto	l5081
 25441  0041F8  EFEA  F020         u3370:
 25442  0041FC                     	goto	l481
 25443  0041FC  EF00  F021         	
 25444                           l480:
 25445  004200                     	line	17
 25446                           	
 25447                           l481:
 25448  004200                     	return	;funcret
 25449  004200  0012               	opt stack 0
 25450                           GLOBAL	__end_of_delay
 25451                           	__end_of_delay:
 25452  004202                     	signat	_delay,4217
 25453                           	global	_I2C_tx
 25454                           
 25455 ;; *************** function _I2C_tx *****************
 25456 ;; Defined at:
 25457 ;;		line 36 in file "spi_i2c.c"
 25458 ;; Parameters:    Size  Location     Type
 25459 ;;  b               1    wreg     unsigned char 
 25460 ;; Auto vars:     Size  Location     Type
 25461 ;;  b               1    0[COMRAM] unsigned char 
 25462 ;; Return value:  Size  Location     Type
 25463 ;;                  1    wreg      void 
 25464 ;; Registers used:
 25465 ;;		wreg
 25466 ;; Tracked objects:
 25467 ;;		On entry : 0/0
 25468 ;;		On exit  : 0/0
 25469 ;;		Unchanged: 0/0
 25470 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25471 ;;      Params:         0       0       0       0       0       0       0       0       0       0
 25472 ;;      Locals:         1       0       0       0       0       0       0       0       0       0
 25473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0
 25474 ;;      Totals:         1       0       0       0       0       0       0       0       0       0
 25475 ;;Total ram usage:        1 bytes
 25476 ;; Hardware stack levels used:    1
 25477 ;; Hardware stack levels required when called:    2
 25478 ;; This function calls:
 25479 ;;		Nothing
 25480 ;; This function is called by:
 25481 ;;		_dac_init
 25482 ;;		_dac_write
 25483 ;; This function uses a non-reentrant model
 25484 ;;
 25485                           psect	text79,class=CODE,space=0,reloc=2,group=0
 25486                           	file	"spi_i2c.c"
 25487                           	line	36
 25488                           global __ptext79
 25489                           __ptext79:
 25490  0043BC                     psect	text79
 25491                           	file	"spi_i2c.c"
 25492                           	line	36
 25493                           	global	__size_of_I2C_tx
 25494                           	__size_of_I2C_tx	equ	__end_of_I2C_tx-_I2C_tx
 25495  0000                     	
 25496                           _I2C_tx:
 25497  0043BC                     ;incstack = 0
 25498                           	opt	stack 26
 25499                           ;I2C_tx@b stored from wreg
 25500                           	movwf	((c:I2C_tx@b)),c
 25501  0043BC  6E27               	line	38
 25502                           	
 25503                           l5143:
 25504  0043BE                     ;spi_i2c.c: 36: void I2C_tx( unsigned char b );spi_i2c.c: 37: {;spi_i2c.c: 38:     SSPBU
                                 F = b;
 25505                           	movff	(c:I2C_tx@b),(c:4041)	;volatile
 25506  0043BE  C027  FFC9         	line	39
 25507                           ;spi_i2c.c: 39:     while( SSPSTATbits.BF );
 25508                           	goto	l975
 25509  0043C2  EFE3  F021         	
 25510                           l976:
 25511  0043C6                     	
 25512                           l975:
 25513  0043C6                     	btfsc	((c:4039)),c,0	;volatile
 25514  0043C6  B0C7               	goto	u3401
 25515  0043C8  EFE8  F021         	goto	u3400
 25516  0043CC  EFEA  F021         u3401:
 25517  0043D0                     	goto	l975
 25518  0043D0  EFE3  F021         u3400:
 25519  0043D4                     	goto	l978
 25520  0043D4  EFEC  F021         	
 25521                           l977:
 25522  0043D8                     	line	40
 25523                           	
 25524                           l978:
 25525  0043D8                     	return	;funcret
 25526  0043D8  0012               	opt stack 0
 25527                           GLOBAL	__end_of_I2C_tx
 25528                           	__end_of_I2C_tx:
 25529  0043DA                     	signat	_I2C_tx,4217
 25530                           	global	_I2C_start
 25531                           
 25532 ;; *************** function _I2C_start *****************
 25533 ;; Defined at:
 25534 ;;		line 22 in file "spi_i2c.c"
 25535 ;; Parameters:    Size  Location     Type
 25536 ;;		None
 25537 ;; Auto vars:     Size  Location     Type
 25538 ;;		None
 25539 ;; Return value:  Size  Location     Type
 25540 ;;                  1    wreg      void 
 25541 ;; Registers used:
 25542 ;;		None
 25543 ;; Tracked objects:
 25544 ;;		On entry : 0/0
 25545 ;;		On exit  : 0/0
 25546 ;;		Unchanged: 0/0
 25547 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25548 ;;      Params:         0       0       0       0       0       0       0       0       0       0
 25549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0
 25550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0
 25551 ;;      Totals:         0       0       0       0       0       0       0       0       0       0
 25552 ;;Total ram usage:        0 bytes
 25553 ;; Hardware stack levels used:    1
 25554 ;; Hardware stack levels required when called:    2
 25555 ;; This function calls:
 25556 ;;		Nothing
 25557 ;; This function is called by:
 25558 ;;		_dac_init
 25559 ;; This function uses a non-reentrant model
 25560 ;;
 25561                           psect	text80,class=CODE,space=0,reloc=2,group=0
 25562                           	line	22
 25563                           global __ptext80
 25564                           __ptext80:
 25565  00448C                     psect	text80
 25566                           	file	"spi_i2c.c"
 25567                           	line	22
 25568                           	global	__size_of_I2C_start
 25569                           	__size_of_I2C_start	equ	__end_of_I2C_start-_I2C_start
 25570  0000                     	
 25571                           _I2C_start:
 25572  00448C                     ;incstack = 0
 25573                           	opt	stack 26
 25574                           	line	24
 25575                           	
 25576                           l5141:
 25577  00448C                     ;spi_i2c.c: 24:     SSPCON2bits.SEN = 1;
 25578                           	bsf	((c:4037)),c,0	;volatile
 25579  00448C  80C5               	line	25
 25580                           ;spi_i2c.c: 25:     while( !PIR1bits.SSPIF );
 25581                           	goto	l960
 25582  00448E  EF49  F022         	
 25583                           l961:
 25584  004492                     	
 25585                           l960:
 25586  004492                     	btfss	((c:3998)),c,3	;volatile
 25587  004492  A69E               	goto	u3391
 25588  004494  EF4E  F022         	goto	u3390
 25589  004498  EF50  F022         u3391:
 25590  00449C                     	goto	l960
 25591  00449C  EF49  F022         u3390:
 25592  0044A0                     	
 25593                           l962:
 25594  0044A0                     	line	26
 25595                           ;spi_i2c.c: 26:     PIR1bits.SSPIF = 0;
 25596                           	bcf	((c:3998)),c,3	;volatile
 25597  0044A0  969E               	line	27
 25598                           	
 25599                           l963:
 25600  0044A2                     	return	;funcret
 25601  0044A2  0012               	opt stack 0
 25602                           GLOBAL	__end_of_I2C_start
 25603                           	__end_of_I2C_start:
 25604  0044A4                     	signat	_I2C_start,89
 25605                           	global	_I2C_ack_receive
 25606                           
 25607 ;; *************** function _I2C_ack_receive *****************
 25608 ;; Defined at:
 25609 ;;		line 56 in file "spi_i2c.c"
 25610 ;; Parameters:    Size  Location     Type
 25611 ;;		None
 25612 ;; Auto vars:     Size  Location     Type
 25613 ;;		None
 25614 ;; Return value:  Size  Location     Type
 25615 ;;                  1    wreg      void 
 25616 ;; Registers used:
 25617 ;;		None
 25618 ;; Tracked objects:
 25619 ;;		On entry : 0/0
 25620 ;;		On exit  : 0/0
 25621 ;;		Unchanged: 0/0
 25622 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25623 ;;      Params:         0       0       0       0       0       0       0       0       0       0
 25624 ;;      Locals:         0       0       0       0       0       0       0       0       0       0
 25625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0
 25626 ;;      Totals:         0       0       0       0       0       0       0       0       0       0
 25627 ;;Total ram usage:        0 bytes
 25628 ;; Hardware stack levels used:    1
 25629 ;; Hardware stack levels required when called:    2
 25630 ;; This function calls:
 25631 ;;		Nothing
 25632 ;; This function is called by:
 25633 ;;		_dac_init
 25634 ;;		_dac_write
 25635 ;; This function uses a non-reentrant model
 25636 ;;
 25637                           psect	text81,class=CODE,space=0,reloc=2,group=0
 25638                           	line	56
 25639                           global __ptext81
 25640                           __ptext81:
 25641  0044A4                     psect	text81
 25642                           	file	"spi_i2c.c"
 25643                           	line	56
 25644                           	global	__size_of_I2C_ack_receive
 25645                           	__size_of_I2C_ack_receive	equ	__end_of_I2C_ack_receive-_I2C_ack_receive
 25646  0000                     	
 25647                           _I2C_ack_receive:
 25648  0044A4                     ;incstack = 0
 25649                           	opt	stack 26
 25650                           	line	58
 25651                           	
 25652                           l5145:
 25653  0044A4                     ;spi_i2c.c: 58:     while( SSPCON2bits.ACKSTAT );
 25654                           	goto	l996
 25655  0044A4  EF54  F022         	
 25656                           l997:
 25657  0044A8                     	
 25658                           l996:
 25659  0044A8                     	btfsc	((c:4037)),c,6	;volatile
 25660  0044A8  BCC5               	goto	u3411
 25661  0044AA  EF59  F022         	goto	u3410
 25662  0044AE  EF5B  F022         u3411:
 25663  0044B2                     	goto	l996
 25664  0044B2  EF54  F022         u3410:
 25665  0044B6                     	goto	l999
 25666  0044B6  EF5D  F022         	
 25667                           l998:
 25668  0044BA                     	line	60
 25669                           	
 25670                           l999:
 25671  0044BA                     	return	;funcret
 25672  0044BA  0012               	opt stack 0
 25673                           GLOBAL	__end_of_I2C_ack_receive
 25674                           	__end_of_I2C_ack_receive:
 25675  0044BC                     	signat	_I2C_ack_receive,89
 25676                           	global	_I2C_stop
 25677                           
 25678 ;; *************** function _I2C_stop *****************
 25679 ;; Defined at:
 25680 ;;		line 41 in file "spi_i2c.c"
 25681 ;; Parameters:    Size  Location     Type
 25682 ;;		None
 25683 ;; Auto vars:     Size  Location     Type
 25684 ;;		None
 25685 ;; Return value:  Size  Location     Type
 25686 ;;                  1    wreg      void 
 25687 ;; Registers used:
 25688 ;;		None
 25689 ;; Tracked objects:
 25690 ;;		On entry : 0/0
 25691 ;;		On exit  : 0/0
 25692 ;;		Unchanged: 0/0
 25693 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25694 ;;      Params:         0       0       0       0       0       0       0       0       0       0
 25695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0
 25696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0
 25697 ;;      Totals:         0       0       0       0       0       0       0       0       0       0
 25698 ;;Total ram usage:        0 bytes
 25699 ;; Hardware stack levels used:    1
 25700 ;; Hardware stack levels required when called:    2
 25701 ;; This function calls:
 25702 ;;		Nothing
 25703 ;; This function is called by:
 25704 ;;		_MCP4725
 25705 ;;		_MCP4725X
 25706 ;; This function uses a non-reentrant model
 25707 ;;
 25708                           psect	text82,class=CODE,space=0,reloc=2,group=0
 25709                           	line	41
 25710                           global __ptext82
 25711                           __ptext82:
 25712  0044BC                     psect	text82
 25713                           	file	"spi_i2c.c"
 25714                           	line	41
 25715                           	global	__size_of_I2C_stop
 25716                           	__size_of_I2C_stop	equ	__end_of_I2C_stop-_I2C_stop
 25717  0000                     	
 25718                           _I2C_stop:
 25719  0044BC                     ;incstack = 0
 25720                           	opt	stack 27
 25721                           	line	43
 25722                           	
 25723                           l5453:
 25724  0044BC                     ;spi_i2c.c: 43:     SSPCON2bits.PEN = 1;
 25725                           	bsf	((c:4037)),c,2	;volatile
 25726  0044BC  84C5               	line	44
 25727                           ;spi_i2c.c: 44:     while( !PIR1bits.SSPIF );
 25728                           	goto	l981
 25729  0044BE  EF61  F022         	
 25730                           l982:
 25731  0044C2                     	
 25732                           l981:
 25733  0044C2                     	btfss	((c:3998)),c,3	;volatile
 25734  0044C2  A69E               	goto	u3881
 25735  0044C4  EF66  F022         	goto	u3880
 25736  0044C8  EF68  F022         u3881:
 25737  0044CC                     	goto	l981
 25738  0044CC  EF61  F022         u3880:
 25739  0044D0                     	
 25740                           l983:
 25741  0044D0                     	line	45
 25742                           ;spi_i2c.c: 45:     PIR1bits.SSPIF = 0;
 25743                           	bcf	((c:3998)),c,3	;volatile
 25744  0044D0  969E               	line	46
 25745                           	
 25746                           l984:
 25747  0044D2                     	return	;funcret
 25748  0044D2  0012               	opt stack 0
 25749                           GLOBAL	__end_of_I2C_stop
 25750                           	__end_of_I2C_stop:
 25751  0044D4                     	signat	_I2C_stop,89
 25752                           	global	_I2C_init
 25753                           
 25754 ;; *************** function _I2C_init *****************
 25755 ;; Defined at:
 25756 ;;		line 12 in file "spi_i2c.c"
 25757 ;; Parameters:    Size  Location     Type
 25758 ;;  freq            4   13[COMRAM] unsigned long 
 25759 ;; Auto vars:     Size  Location     Type
 25760 ;;		None
 25761 ;; Return value:  Size  Location     Type
 25762 ;;                  1    wreg      void 
 25763 ;; Registers used:
 25764 ;;		wreg, status,2, status,0, cstack
 25765 ;; Tracked objects:
 25766 ;;		On entry : 0/0
 25767 ;;		On exit  : 0/0
 25768 ;;		Unchanged: 0/0
 25769 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25770 ;;      Params:         4       0       0       0       0       0       0       0       0       0
 25771 ;;      Locals:         0       0       0       0       0       0       0       0       0       0
 25772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0
 25773 ;;      Totals:         4       0       0       0       0       0       0       0       0       0
 25774 ;;Total ram usage:        4 bytes
 25775 ;; Hardware stack levels used:    1
 25776 ;; Hardware stack levels required when called:    3
 25777 ;; This function calls:
 25778 ;;		___lldiv
 25779 ;; This function is called by:
 25780 ;;		_main
 25781 ;; This function uses a non-reentrant model
 25782 ;;
 25783                           psect	text83,class=CODE,space=0,reloc=2,group=0
 25784                           	line	12
 25785                           global __ptext83
 25786                           __ptext83:
 25787  0040C6                     psect	text83
 25788                           	file	"spi_i2c.c"
 25789                           	line	12
 25790                           	global	__size_of_I2C_init
 25791                           	__size_of_I2C_init	equ	__end_of_I2C_init-_I2C_init
 25792  0000                     	
 25793                           _I2C_init:
 25794  0040C6                     ;incstack = 0
 25795                           	opt	stack 27
 25796                           	line	14
 25797                           	
 25798                           l5585:
 25799  0040C6                     ;spi_i2c.c: 12: void I2C_init( unsigned long freq );spi_i2c.c: 13: {;spi_i2c.c: 14:     
                                 TRISBbits.TRISB0 = 1;
 25800                           	bsf	((c:3987)),c,0	;volatile
 25801  0040C6  8093               	line	15
 25802                           ;spi_i2c.c: 15:     TRISBbits.TRISB1 = 1;
 25803                           	bsf	((c:3987)),c,1	;volatile
 25804  0040C8  8293               	line	16
 25805                           	
 25806                           l5587:
 25807  0040CA                     ;spi_i2c.c: 16:     SSPCON1bits.SSPM = 0x8;
 25808                           	movf	((c:4038)),c,w	;volatile
 25809  0040CA  50C6               	andlw	not (((1<<4)-1)<<0)
 25810  0040CC  0BF0               	iorlw	(08h & ((1<<4)-1))<<0
 25811  0040CE  0908               	movwf	((c:4038)),c	;volatile
 25812  0040D0  6EC6               	line	17
 25813                           	
 25814                           l5589:
 25815  0040D2                     ;spi_i2c.c: 17:     SSPADD = ((20000000>>2) / (freq))-1;
 25816                           	movlw	low(04C4B40h)
 25817  0040D2  0E40               	movwf	((c:___lldiv@dividend)),c
 25818  0040D4  6E27               	movlw	high(04C4B40h)
 25819  0040D6  0E4B               	movwf	((c:___lldiv@dividend+1)),c
 25820  0040D8  6E28               	movlw	low highword(04C4B40h)
 25821  0040DA  0E4C               	movwf	((c:___lldiv@dividend+2)),c
 25822  0040DC  6E29               	movlw	high highword(04C4B40h)
 25823  0040DE  0E00               	movwf	((c:___lldiv@dividend+3)),c
 25824  0040E0  6E2A               	movff	(c:I2C_init@freq),(c:___lldiv@divisor)
 25825  0040E2  C034  F02B         	movff	(c:I2C_init@freq+1),(c:___lldiv@divisor+1)
 25826  0040E6  C035  F02C         	movff	(c:I2C_init@freq+2),(c:___lldiv@divisor+2)
 25827  0040EA  C036  F02D         	movff	(c:I2C_init@freq+3),(c:___lldiv@divisor+3)
 25828  0040EE  C037  F02E         	call	___lldiv	;wreg free
 25829  0040F2  ECB1  F01A         	decf	(0+?___lldiv),c,w
 25830  0040F6  0427               	movwf	((c:4040)),c	;volatile
 25831  0040F8  6EC8               	line	18
 25832                           	
 25833                           l5591:
 25834  0040FA                     ;spi_i2c.c: 18:     SSPSTATbits.SMP = 1;
 25835                           	bsf	((c:4039)),c,7	;volatile
 25836  0040FA  8EC7               	line	19
 25837                           	
 25838                           l5593:
 25839  0040FC                     ;spi_i2c.c: 19:     SSPCON1bits.SSPEN = 1;
 25840                           	bsf	((c:4038)),c,5	;volatile
 25841  0040FC  8AC6               	line	20
 25842                           	
 25843                           l957:
 25844  0040FE                     	return	;funcret
 25845  0040FE  0012               	opt stack 0
 25846                           GLOBAL	__end_of_I2C_init
 25847                           	__end_of_I2C_init:
 25848  004100                     	signat	_I2C_init,4217
 25849                           	global	___lldiv
 25850                           
 25851 ;; *************** function ___lldiv *****************
 25852 ;; Defined at:
 25853 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\__lldiv.c"
 25854 ;; Parameters:    Size  Location     Type
 25855 ;;  dividend        4    0[COMRAM] unsigned long 
 25856 ;;  divisor         4    4[COMRAM] unsigned long 
 25857 ;; Auto vars:     Size  Location     Type
 25858 ;;  quotient        4    8[COMRAM] unsigned long 
 25859 ;;  counter         1   12[COMRAM] unsigned char 
 25860 ;; Return value:  Size  Location     Type
 25861 ;;                  4    0[COMRAM] unsigned long 
 25862 ;; Registers used:
 25863 ;;		wreg, status,2, status,0
 25864 ;; Tracked objects:
 25865 ;;		On entry : 0/0
 25866 ;;		On exit  : 0/0
 25867 ;;		Unchanged: 0/0
 25868 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25869 ;;      Params:         8       0       0       0       0       0       0       0       0       0
 25870 ;;      Locals:         5       0       0       0       0       0       0       0       0       0
 25871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0
 25872 ;;      Totals:        13       0       0       0       0       0       0       0       0       0
 25873 ;;Total ram usage:       13 bytes
 25874 ;; Hardware stack levels used:    1
 25875 ;; Hardware stack levels required when called:    2
 25876 ;; This function calls:
 25877 ;;		Nothing
 25878 ;; This function is called by:
 25879 ;;		_I2C_init
 25880 ;;		_initEUSART
 25881 ;; This function uses a non-reentrant model
 25882 ;;
 25883                           psect	text84,class=CODE,space=0,reloc=2,group=1
 25884                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\__lldiv.c"
 25885                           	line	7
 25886                           global __ptext84
 25887                           __ptext84:
 25888  003562                     psect	text84
 25889                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\__lldiv.c"
 25890                           	line	7
 25891                           	global	__size_of___lldiv
 25892                           	__size_of___lldiv	equ	__end_of___lldiv-___lldiv
 25893  0000                     	
 25894                           ___lldiv:
 25895  003562                     ;incstack = 0
 25896                           	opt	stack 26
 25897                           	line	13
 25898                           	
 25899                           l5153:
 25900  003562                     	movlw	low(0)
 25901  003562  0E00               	movwf	((c:___lldiv@quotient)),c
 25902  003564  6E2F               	movlw	high(0)
 25903  003566  0E00               	movwf	((c:___lldiv@quotient+1)),c
 25904  003568  6E30               	movlw	low highword(0)
 25905  00356A  0E00               	movwf	((c:___lldiv@quotient+2)),c
 25906  00356C  6E31               	movlw	high highword(0)
 25907  00356E  0E00               	movwf	((c:___lldiv@quotient+3)),c
 25908  003570  6E32               	line	14
 25909                           	
 25910                           l5155:
 25911  003572                     	movf	((c:___lldiv@divisor)),c,w
 25912  003572  502B               iorwf	((c:___lldiv@divisor+1)),c,w
 25913  003574  102C               iorwf	((c:___lldiv@divisor+2)),c,w
 25914  003576  102D               iorwf	((c:___lldiv@divisor+3)),c,w
 25915  003578  102E               	btfsc	status,2
 25916  00357A  B4D8               	goto	u3441
 25917  00357C  EFC2  F01A         	goto	u3440
 25918  003580  EFC4  F01A         
 25919                           u3441:
 25920  003584                     	goto	l1269
 25921  003584  EF04  F01B         u3440:
 25922  003588                     	line	15
 25923                           	
 25924                           l5157:
 25925  003588                     	movlw	low(01h)
 25926  003588  0E01               	movwf	((c:___lldiv@counter)),c
 25927  00358A  6E33               	line	16
 25928                           	goto	l5161
 25929  00358C  EFD0  F01A         	
 25930                           l1271:
 25931  003590                     	line	17
 25932                           	
 25933                           l5159:
 25934  003590                     	bcf	status,0
 25935  003590  90D8               	rlcf	((c:___lldiv@divisor)),c
 25936  003592  362B               	rlcf	((c:___lldiv@divisor+1)),c
 25937  003594  362C               	rlcf	((c:___lldiv@divisor+2)),c
 25938  003596  362D               	rlcf	((c:___lldiv@divisor+3)),c
 25939  003598  362E               	line	18
 25940                           	incf	((c:___lldiv@counter)),c
 25941  00359A  2A33               	goto	l5161
 25942  00359C  EFD0  F01A         	line	19
 25943                           	
 25944                           l1270:
 25945  0035A0                     	line	16
 25946                           	
 25947                           l5161:
 25948  0035A0                     	
 25949                           	btfss	((c:___lldiv@divisor+3)),c,(31)&7
 25950  0035A0  AE2E               	goto	u3451
 25951  0035A2  EFD5  F01A         	goto	u3450
 25952  0035A6  EFD7  F01A         u3451:
 25953  0035AA                     	goto	l5159
 25954  0035AA  EFC8  F01A         u3450:
 25955  0035AE                     	goto	l5163
 25956  0035AE  EFDB  F01A         	
 25957                           l1272:
 25958  0035B2                     	goto	l5163
 25959  0035B2  EFDB  F01A         	line	20
 25960                           	
 25961                           l1273:
 25962  0035B6                     	line	21
 25963                           	
 25964                           l5163:
 25965  0035B6                     	bcf	status,0
 25966  0035B6  90D8               	rlcf	((c:___lldiv@quotient)),c
 25967  0035B8  362F               	rlcf	((c:___lldiv@quotient+1)),c
 25968  0035BA  3630               	rlcf	((c:___lldiv@quotient+2)),c
 25969  0035BC  3631               	rlcf	((c:___lldiv@quotient+3)),c
 25970  0035BE  3632               	line	22
 25971                           	
 25972                           l5165:
 25973  0035C0                     		movf	((c:___lldiv@divisor)),c,w
 25974  0035C0  502B               	subwf	((c:___lldiv@dividend)),c,w
 25975  0035C2  5C27               	movf	((c:___lldiv@divisor+1)),c,w
 25976  0035C4  502C               	subwfb	((c:___lldiv@dividend+1)),c,w
 25977  0035C6  5828               	movf	((c:___lldiv@divisor+2)),c,w
 25978  0035C8  502D               	subwfb	((c:___lldiv@dividend+2)),c,w
 25979  0035CA  5829               	movf	((c:___lldiv@divisor+3)),c,w
 25980  0035CC  502E               	subwfb	((c:___lldiv@dividend+3)),c,w
 25981  0035CE  582A               	btfss	status,0
 25982  0035D0  A0D8               	goto	u3461
 25983  0035D2  EFED  F01A         	goto	u3460
 25984  0035D6  EFEF  F01A         
 25985                           u3461:
 25986  0035DA                     	goto	l5171
 25987  0035DA  EFFA  F01A         u3460:
 25988  0035DE                     	line	23
 25989                           	
 25990                           l5167:
 25991  0035DE                     	movf	((c:___lldiv@divisor)),c,w
 25992  0035DE  502B               	subwf	((c:___lldiv@dividend)),c
 25993  0035E0  5E27               	movf	((c:___lldiv@divisor+1)),c,w
 25994  0035E2  502C               	subwfb	((c:___lldiv@dividend+1)),c
 25995  0035E4  5A28               	movf	((c:___lldiv@divisor+2)),c,w
 25996  0035E6  502D               	subwfb	((c:___lldiv@dividend+2)),c
 25997  0035E8  5A29               	movf	((c:___lldiv@divisor+3)),c,w
 25998  0035EA  502E               	subwfb	((c:___lldiv@dividend+3)),c
 25999  0035EC  5A2A               	line	24
 26000                           	
 26001                           l5169:
 26002  0035EE                     	bsf	(0+(0/8)+(c:___lldiv@quotient)),c,(0)&7
 26003  0035EE  802F               	goto	l5171
 26004  0035F0  EFFA  F01A         	line	25
 26005                           	
 26006                           l1274:
 26007  0035F4                     	line	26
 26008                           	
 26009                           l5171:
 26010  0035F4                     	bcf	status,0
 26011  0035F4  90D8               	rrcf	((c:___lldiv@divisor+3)),c
 26012  0035F6  322E               	rrcf	((c:___lldiv@divisor+2)),c
 26013  0035F8  322D               	rrcf	((c:___lldiv@divisor+1)),c
 26014  0035FA  322C               	rrcf	((c:___lldiv@divisor)),c
 26015  0035FC  322B               	line	27
 26016                           	
 26017                           l5173:
 26018  0035FE                     	decfsz	((c:___lldiv@counter)),c
 26019  0035FE  2E33               	
 26020                           	goto	l5163
 26021  003600  EFDB  F01A         	goto	l1269
 26022  003604  EF04  F01B         	
 26023                           l1275:
 26024  003608                     	line	28
 26025                           	
 26026                           l1269:
 26027  003608                     	line	29
 26028                           	movff	(c:___lldiv@quotient),(c:?___lldiv)
 26029  003608  C02F  F027         	movff	(c:___lldiv@quotient+1),(c:?___lldiv+1)
 26030  00360C  C030  F028         	movff	(c:___lldiv@quotient+2),(c:?___lldiv+2)
 26031  003610  C031  F029         	movff	(c:___lldiv@quotient+3),(c:?___lldiv+3)
 26032  003614  C032  F02A         	line	30
 26033                           	
 26034                           l1276:
 26035  003618                     	return	;funcret
 26036  003618  0012               	opt stack 0
 26037                           GLOBAL	__end_of___lldiv
 26038                           	__end_of___lldiv:
 26039  00361A                     	signat	___lldiv,8316
 26040                           	global	_irq
 26041                           
 26042 ;; *************** function _irq *****************
 26043 ;; Defined at:
 26044 ;;		line 58 in file "main.c"
 26045 ;; Parameters:    Size  Location     Type
 26046 ;;		None
 26047 ;; Auto vars:     Size  Location     Type
 26048 ;;		None
 26049 ;; Return value:  Size  Location     Type
 26050 ;;                  1    wreg      void 
 26051 ;; Registers used:
 26052 ;;		wreg, status,2, status,0, cstack
 26053 ;; Tracked objects:
 26054 ;;		On entry : 0/0
 26055 ;;		On exit  : 0/0
 26056 ;;		Unchanged: 0/0
 26057 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26058 ;;      Params:         0       0       0       0       0       0       0       0       0       0
 26059 ;;      Locals:         0       0       0       0       0       0       0       0       0       0
 26060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0
 26061 ;;      Totals:         0       0       0       0       0       0       0       0       0       0
 26062 ;;Total ram usage:        0 bytes
 26063 ;; Hardware stack levels used:    1
 26064 ;; Hardware stack levels required when called:    1
 26065 ;; This function calls:
 26066 ;;		_intt1_1ms
 26067 ;; This function is called by:
 26068 ;;		Interrupt level 2
 26069 ;; This function uses a non-reentrant model
 26070 ;;
 26071                           psect	intcode,class=CODE,space=0,reloc=2
 26072                           global __pintcode
 26073                           __pintcode:
 26074  000008                     psect	intcode
 26075                           	file	"main.c"
 26076                           	line	58
 26077                           	global	__size_of_irq
 26078                           	__size_of_irq	equ	__end_of_irq-_irq
 26079  0000                     	
 26080                           _irq:
 26081  000008                     ;incstack = 0
 26082                           	opt	stack 25
 26083                           	bsf int$flags,1,c ;set compiler interrupt flag (level 2)
 26084  000008  825E               	global	int_func
 26085                           	call	int_func,f	;refresh shadow registers
 26086  00000A  ED19  F021         psect	intcode_body,class=CODE,space=0,reloc=2
 26087                           global __pintcode_body
 26088                           __pintcode_body:
 26089  004232                     int_func:
 26090  004232                     
 26091                           	pop	; remove dummy address from shadow register refresh
 26092  004232  0006               	line	60
 26093                           	
 26094                           i2l3183:
 26095  004234                     ;main.c: 60:     INTCONbits.GIE = 0;
 26096                           	bcf	((c:4082)),c,7	;volatile
 26097  004234  9EF2               	line	61
 26098                           ;main.c: 61:     if(PIR1bits.TMR1IF && PIE1bits.TMR1IE)
 26099                           	btfss	((c:3998)),c,0	;volatile
 26100  004236  A09E               	goto	i2u155_41
 26101  004238  EF20  F021         	goto	i2u155_40
 26102  00423C  EF22  F021         i2u155_41:
 26103  004240                     	goto	i2l3191
 26104  004240  EF2E  F021         i2u155_40:
 26105  004244                     	
 26106                           i2l3185:
 26107  004244                     	btfss	((c:3997)),c,0	;volatile
 26108  004244  A09D               	goto	i2u156_41
 26109  004246  EF27  F021         	goto	i2u156_40
 26110  00424A  EF29  F021         i2u156_41:
 26111  00424E                     	goto	i2l3191
 26112  00424E  EF2E  F021         i2u156_40:
 26113  004252                     	line	63
 26114                           	
 26115                           i2l3187:
 26116  004252                     ;main.c: 62:     {;main.c: 63:         PIR1bits.TMR1IF = 0;
 26117                           	bcf	((c:3998)),c,0	;volatile
 26118  004252  909E               	line	65
 26119                           	
 26120                           i2l3189:
 26121  004254                     ;main.c: 65:         intt1_1ms();
 26122                           	call	_intt1_1ms	;wreg free
 26123  004254  ECB5  F020         	goto	i2l3191
 26124  004258  EF2E  F021         	line	66
 26125                           ;main.c: 66:     }
 26126                           	
 26127                           i2l151:
 26128  00425C                     	line	67
 26129                           	
 26130                           i2l3191:
 26131  00425C                     ;main.c: 67:     INTCONbits.GIE = 1;
 26132                           	bsf	((c:4082)),c,7	;volatile
 26133  00425C  8EF2               	line	68
 26134                           	
 26135                           i2l152:
 26136  00425E                     	bcf int$flags,1,c ;clear compiler interrupt flag (level 2)
 26137  00425E  925E               	retfie f
 26138  004260  0011               	opt stack 0
 26139                           GLOBAL	__end_of_irq
 26140                           	__end_of_irq:
 26141  004262                     	signat	_irq,89
 26142                           	global	_intt1_1ms
 26143                           
 26144 ;; *************** function _intt1_1ms *****************
 26145 ;; Defined at:
 26146 ;;		line 5 in file "timer1.c"
 26147 ;; Parameters:    Size  Location     Type
 26148 ;;		None
 26149 ;; Auto vars:     Size  Location     Type
 26150 ;;		None
 26151 ;; Return value:  Size  Location     Type
 26152 ;;                  1    wreg      void 
 26153 ;; Registers used:
 26154 ;;		wreg, status,2, status,0
 26155 ;; Tracked objects:
 26156 ;;		On entry : 0/0
 26157 ;;		On exit  : 0/0
 26158 ;;		Unchanged: 0/0
 26159 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26160 ;;      Params:         0       0       0       0       0       0       0       0       0       0
 26161 ;;      Locals:         0       0       0       0       0       0       0       0       0       0
 26162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0
 26163 ;;      Totals:         0       0       0       0       0       0       0       0       0       0
 26164 ;;Total ram usage:        0 bytes
 26165 ;; Hardware stack levels used:    1
 26166 ;; This function calls:
 26167 ;;		Nothing
 26168 ;; This function is called by:
 26169 ;;		_irq
 26170 ;; This function uses a non-reentrant model
 26171 ;;
 26172                           psect	text86,class=CODE,space=0,reloc=2,group=0
 26173                           	file	"timer1.c"
 26174                           	line	5
 26175                           global __ptext86
 26176                           __ptext86:
 26177  00416A                     psect	text86
 26178                           	file	"timer1.c"
 26179                           	line	5
 26180                           	global	__size_of_intt1_1ms
 26181                           	__size_of_intt1_1ms	equ	__end_of_intt1_1ms-_intt1_1ms
 26182  0000                     	
 26183                           _intt1_1ms:
 26184  00416A                     ;incstack = 0
 26185                           	opt	stack 25
 26186                           	line	7
 26187                           	
 26188                           i2l2487:
 26189  00416A                     ;timer1.c: 7:     TMR1H = ((65536-625)>>8) & 0x00FF;
 26190                           	movlw	low(0FDh)
 26191  00416A  0EFD               	movwf	((c:4047)),c	;volatile
 26192  00416C  6ECF               	line	8
 26193                           ;timer1.c: 8:     TMR1L = (65536-625) & 0x00FF;
 26194                           	movlw	low(08Fh)
 26195  00416E  0E8F               	movwf	((c:4046)),c	;volatile
 26196  004170  6ECE               	line	10
 26197                           	
 26198                           i2l2489:
 26199  004172                     ;timer1.c: 10:     if(t1cont)
 26200                           	movf	((c:_t1cont)),c,w
 26201  004172  5001               iorwf	((c:_t1cont+1)),c,w
 26202  004174  1002               iorwf	((c:_t1cont+2)),c,w
 26203  004176  1003               iorwf	((c:_t1cont+3)),c,w
 26204  004178  1004               	btfsc	status,2
 26205  00417A  B4D8               	goto	i2u84_41
 26206  00417C  EFC2  F020         	goto	i2u84_40
 26207  004180  EFC4  F020         
 26208                           i2u84_41:
 26209  004184                     	goto	i2l1061
 26210  004184  EFCB  F020         i2u84_40:
 26211  004188                     	line	11
 26212                           	
 26213                           i2l2491:
 26214  004188                     ;timer1.c: 11:         --t1cont;
 26215                           	decf	((c:_t1cont)),c
 26216  004188  0601               	movlw	0
 26217  00418A  0E00               	subwfb	((c:_t1cont+1)),c
 26218  00418C  5A02               	subwfb	((c:_t1cont+2)),c
 26219  00418E  5A03               	subwfb	((c:_t1cont+3)),c
 26220  004190  5A04               	goto	i2l1063
 26221  004192  EFCE  F020         	line	12
 26222                           ;timer1.c: 12:     else
 26223                           	
 26224                           i2l1061:
 26225  004196                     	line	13
 26226                           ;timer1.c: 13:         T1CONbits.TMR1ON = 0;
 26227                           	bcf	((c:4045)),c,0	;volatile
 26228  004196  90CD               	goto	i2l1063
 26229  004198  EFCE  F020         	
 26230                           i2l1062:
 26231  00419C                     	line	14
 26232                           	
 26233                           i2l1063:
 26234  00419C                     	return	;funcret
 26235  00419C  0012               	opt stack 0
 26236                           GLOBAL	__end_of_intt1_1ms
 26237                           	__end_of_intt1_1ms:
 26238  00419E                     	signat	_intt1_1ms,89
 26239                           psect	mediumconst
 26240                           	db 0	; dummy byte at the end
 26241  007FFE  00                 	global	__mediumconst
 26242                           	GLOBAL	__activetblptr
 26243                           __activetblptr	EQU	2
 26244  0000                     	psect	intsave_regs,class=BIGRAM,space=1,noexec
 26245                           	file ""
 26246                           	line	0
 26247                           psect	text87,class=CODE,space=0,reloc=2,group=0
 26248                           global __ptext87
 26249                           __ptext87:
 26250  000000                     fp__wifi_init:
 26251  000000                     	file ""
 26252                           	line	0
 26253                           psect	text87
 26254                           fp__initEUSART:
 26255  000000                     	file ""
 26256                           	line	0
 26257                           psect	text87
 26258                           fp__salvar_receita:
 26259  000000                     	file ""
 26260                           	line	0
 26261                           psect	text87
 26262                           fp__dispLCD_num:
 26263  000000                     	file ""
 26264                           	line	0
 26265                           psect	text87
 26266                           fp__formatar_receitas:
 26267  000000                     	file ""
 26268                           	line	0
 26269                           psect	text87
 26270                           fp__dispLCD_str:
 26271  000000                     	file ""
 26272                           	line	0
 26273                           psect	text87
 26274                           fp__dispLCD_init:
 26275  000000                     	file ""
 26276                           	line	0
 26277                           psect	text87
 26278                           fp__dispLCD_clr:
 26279  000000                     	file ""
 26280                           	line	0
 26281                           psect	text87
 26282                           fp__dispLCD:
 26283  000000                     	file ""
 26284                           	line	0
 26285                           psect	text87
 26286                           fp__deletar_receita:
 26287  000000                     	file ""
 26288                           	line	0
 26289                           psect	text87
 26290                           fp__buscar_receita:
 26291  000000                     	file ""
 26292                           	line	0
 26293                           psect	text87
 26294                           fp__Wifi_mode:
 26295  000000                     	file ""
 26296                           	line	0
 26297                           psect	text87
 26298                           fp__wifi_send:
 26299  000000                     	file ""
 26300                           	line	0
 26301                           psect	text87
 26302                           fp__txStatusEUSART:
 26303  000000                     	file ""
 26304                           	line	0
 26305                           psect	text87
 26306                           fp__txEUSART:
 26307  000000                     	PSECT	rparam,class=COMRAM,space=1,noexec
 26308                           	GLOBAL	__Lrparam
 26309                           	FNCONF	rparam,??,?
 26310                           	GLOBAL	___rparam_used
 26311                           	___rparam_used EQU 1
 26312  0000                     	GLOBAL	___param_bank
 26313                           	___param_bank EQU 0
 26314  0000                     GLOBAL	__Lparam, __Hparam
 26315                           GLOBAL	__Lrparam, __Hrparam
 26316                           __Lparam	EQU	__Lrparam
 26317  0000                     __Hparam	EQU	__Hrparam
 26318  0000                            psect   temp,common,ovrld,class=COMRAM,space=1
 26319                           	global	btemp
 26320                           btemp:
 26321  00005E                     	ds	1
 26322  00005E                     	global	int$flags
 26323                           	int$flags	set btemp
 26324  0000                     	global	wtemp8
 26325                           	wtemp8 set btemp+1
 26326  0000                     	global	ttemp5
 26327                           	ttemp5 set btemp+1
 26328  0000                     	global	ttemp6
 26329                           	ttemp6 set btemp+4
 26330  0000                     	global	ttemp7
 26331                           	ttemp7 set btemp+8
 26332  0000                     	end


Data Sizes:
    Strings     975
    Constant    0
    Data        165
    BSS         70
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     32      93
    BANK0h          101     93      95
    BANK0l           57      0      52
    BANK1           256      0     120
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    S85$3$0	PTR unsigned char  size(2) Largest target is 0

    S145$1$0	PTR const unsigned char  size(2) Largest target is 41
		 -> STR_46(CODE[14]), STR_45(CODE[40]), Wifi_cipsend@vtr(COMRAM[30]), Wifi_cipsend@str(COMRAM[30]), 
		 -> STR_44(CODE[21]), STR_43(CODE[14]), STR_42(CODE[15]), STR_41(CODE[18]), 
		 -> STR_40(CODE[11]), STR_39(CODE[11]), Wifi_connect@str(COMRAM[40]), STR_38(CODE[14]), 
		 -> STR_37(CODE[41]), STR_36(CODE[14]), STR_35(CODE[41]), STR_34(CODE[14]), 
		 -> STR_33(CODE[14]), 

    S145$2$0	PTR unsigned char  size(2) Largest target is 0

    S145$4$1	PTR const unsigned char  size(2) Largest target is 0

    S145$4$0	PTR const unsigned char  size(2) Largest target is 0

    S145$9$1	PTR unsigned char  size(2) Largest target is 0

    S145$9$0	PTR unsigned char  size(2) Largest target is 0

    S1655$7$1	PTR const unsigned char  size(2) Largest target is 0

    S1655$7$0	PTR const unsigned char  size(2) Largest target is 0

    S85$0$1	PTR unsigned char  size(2) Largest target is 18
		 -> fila(COMRAM[18]), 

    S85$1$1	PTR unsigned char  size(2) Largest target is 16
		 -> main@vetor_aux(BANK0h[16]), 

    S29$1$0	PTR const unsigned char  size(2) Largest target is 83
		 -> STR_27(CODE[78]), STR_26(CODE[62]), STR_15(CODE[81]), STR_4(CODE[83]), 

    S29$2$2	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_32(CODE[21]), STR_31(CODE[21]), STR_30(CODE[21]), STR_29(CODE[2]), 
		 -> STR_28(CODE[2]), STR_25(CODE[21]), STR_24(CODE[21]), STR_23(CODE[21]), 
		 -> STR_22(CODE[21]), STR_21(CODE[21]), STR_20(CODE[8]), STR_19(CODE[21]), 
		 -> STR_18(CODE[21]), STR_17(CODE[21]), STR_16(CODE[21]), STR_14(CODE[21]), 
		 -> STR_13(CODE[21]), STR_12(CODE[2]), STR_11(CODE[2]), STR_10(CODE[21]), 
		 -> STR_9(CODE[21]), STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), 
		 -> STR_5(CODE[21]), STR_3(CODE[21]), STR_2(CODE[2]), STR_1(CODE[2]), 

    wifi_send@msg	PTR const unsigned char  size(2) Largest target is 41
		 -> STR_46(CODE[14]), STR_45(CODE[40]), Wifi_cipsend@vtr(COMRAM[30]), Wifi_cipsend@str(COMRAM[30]), 
		 -> STR_44(CODE[21]), STR_43(CODE[14]), STR_42(CODE[15]), STR_41(CODE[18]), 
		 -> STR_40(CODE[11]), STR_39(CODE[11]), Wifi_connect@str(COMRAM[40]), STR_38(CODE[14]), 
		 -> STR_37(CODE[41]), STR_36(CODE[14]), STR_35(CODE[41]), STR_34(CODE[14]), 
		 -> STR_33(CODE[14]), 

    S1655eusartT$search_string	PTR FTN(PTR const unsigned char ,PTR const unsigned char ,)int  size(2) Largest target is 2
		 -> search(), 

    eusart.search_string	PTR FTN(PTR const unsigned char ,PTR const unsigned char ,)int  size(2) Largest target is 2
		 -> search(), 

    S1655eusartT$init	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> initEUSART(), 

    eusart.init	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> initEUSART(), 

    S1655eusartT$txSTATUS	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> txStatusEUSART(), 

    eusart.txSTATUS	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> txStatusEUSART(), 

    S1655eusartT$tx	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> txEUSART(), 

    eusart.tx	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> txEUSART(), 

    S1655eusartT$rxResetERROR	PTR FTN()void  size(2) Largest target is 1
		 -> rxResetErrorEUSART(), 

    eusart.rxResetERROR	PTR FTN()void  size(2) Largest target is 1
		 -> rxResetErrorEUSART(), 

    S1655eusartT$rxERROR	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> rxErrorEUSART(), 

    eusart.rxERROR	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> rxErrorEUSART(), 

    S1655eusartT$rxSTATUS	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> rxStatusEUSART(), 

    eusart.rxSTATUS	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> rxStatusEUSART(), 

    S1655eusartT$rx	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> rxEUSART(), 

    eusart.rx	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> rxEUSART(), 

    initSerialIO@ptrOut	PTR unsigned char  size(2) Largest target is 1
		 -> main@vetorOut(BANK0h[1]), 

    initSerialIO@ptrIn	PTR unsigned char  size(2) Largest target is 1
		 -> main@vetorIn(BANK0h[1]), 

    ptrSerialOut	PTR unsigned char  size(2) Largest target is 1
		 -> NULL(NULL[0]), main@vetorOut(BANK0h[1]), 

    ptrSerialIn	PTR unsigned char  size(2) Largest target is 1
		 -> NULL(NULL[0]), main@vetorIn(BANK0h[1]), 

    dignum_apagar@ptrNum	PTR unsigned int  size(2) Largest target is 2
		 -> main@ciclos(BANK0h[2]), main@num(BANK0h[2]), 

    dignum_conc@ptrNum	PTR unsigned int  size(2) Largest target is 2
		 -> main@ciclos(BANK0h[2]), main@num(BANK0h[2]), 

    decodifica@d	PTR unsigned char  size(2) Largest target is 18
		 -> printExec@passo(COMRAM[1]), fifo_print@comando(COMRAM[1]), fila(COMRAM[18]), main@vetor_aux(BANK0h[16]), 
		 -> main@auxPasso(BANK0h[1]), 

    codifica@dado	PTR unsigned char  size(2) Largest target is 2047
		 -> fifo_add_control@c(COMRAM[1]), fifo_add_tempo@t(COMRAM[1]), fifo_add@passo(COMRAM[1]), RAM(DATA[2047]), 

    salva_atuadores_init@pt	PTR unsigned char  size(2) Largest target is 4
		 -> salva_atuadores_init@condi_init(COMRAM[4]), 

    buscar_dado@data	PTR unsigned char  size(2) Largest target is 1
		 -> main@init_cond(BANK0h[1]), 

    buscar_receita@data	PTR unsigned char  size(2) Largest target is 16
		 -> main@vetor_aux(BANK0h[16]), 

    salvar_receita@data	PTR unsigned char  size(2) Largest target is 18
		 -> fila(COMRAM[18]), 

    dispLCD_str@str	PTR const unsigned char  size(2) Largest target is 83
		 -> STR_27(CODE[78]), STR_26(CODE[62]), STR_15(CODE[81]), STR_4(CODE[83]), 

    dispLCD@str	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_32(CODE[21]), STR_31(CODE[21]), STR_30(CODE[21]), STR_29(CODE[2]), 
		 -> STR_28(CODE[2]), STR_25(CODE[21]), STR_24(CODE[21]), STR_23(CODE[21]), 
		 -> STR_22(CODE[21]), STR_21(CODE[21]), STR_20(CODE[8]), STR_19(CODE[21]), 
		 -> STR_18(CODE[21]), STR_17(CODE[21]), STR_16(CODE[21]), STR_14(CODE[21]), 
		 -> STR_13(CODE[21]), STR_12(CODE[2]), STR_11(CODE[2]), STR_10(CODE[21]), 
		 -> STR_9(CODE[21]), STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), 
		 -> STR_5(CODE[21]), STR_3(CODE[21]), STR_2(CODE[2]), STR_1(CODE[2]), 

    ler_sensor@ptr	PTR unsigned char  size(2) Largest target is 1
		 -> main@vetorIn(BANK0h[1]), 

    set_passo@ptr	PTR unsigned char  size(2) Largest target is 1
		 -> main@vetorOut(BANK0h[1]), 

    sp__fifo_adrs	PTR unsigned char  size(2) Largest target is 18
		 -> fila(COMRAM[18]), 

    main@ptr_671	PTR unsigned char  size(2) Largest target is 16
		 -> main@vetor_aux(BANK0h[16]), 

    main@ptr_652	PTR unsigned char  size(2) Largest target is 16
		 -> main@vetor_aux(BANK0h[16]), 

    main@pt	PTR unsigned char  size(2) Largest target is 16
		 -> main@vetor_aux(BANK0h[16]), 

    main@ptr	PTR unsigned char  size(2) Largest target is 20
		 -> main@lema(BANK0h[20]), 

    S145$cipsend	PTR FTN(PTR unsigned char ,PTR unsigned char ,)void  size(2) Largest target is 1
		 -> Wifi_cipsend(), 

    wifi.cipsend	PTR FTN(PTR unsigned char ,PTR unsigned char ,)void  size(2) Largest target is 1
		 -> Wifi_cipsend(), 

    S145$config_servidor	PTR FTN()void  size(2) Largest target is 1
		 -> Wifi_config_servidor(), 

    wifi.config_servidor	PTR FTN()void  size(2) Largest target is 1
		 -> Wifi_config_servidor(), 

    S145$scan	PTR FTN()void  size(2) Largest target is 1
		 -> Wifi_scan(), 

    wifi.scan	PTR FTN()void  size(2) Largest target is 1
		 -> Wifi_scan(), 

    S145$autoconnect	PTR FTN()void  size(2) Largest target is 1
		 -> Wifi_autoconnect(), 

    wifi.autoconnect	PTR FTN()void  size(2) Largest target is 1
		 -> Wifi_autoconnect(), 

    S145$ip	PTR FTN()void  size(2) Largest target is 1
		 -> Wifi_ip(), 

    wifi.ip	PTR FTN()void  size(2) Largest target is 1
		 -> Wifi_ip(), 

    S145$connect	PTR FTN(PTR const unsigned char ,PTR const unsigned char ,)void  size(2) Largest target is 1
		 -> Wifi_connect(), 

    wifi.connect	PTR FTN(PTR const unsigned char ,PTR const unsigned char ,)void  size(2) Largest target is 1
		 -> Wifi_connect(), 

    S145$mode	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Wifi_mode(), 

    wifi.mode	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Wifi_mode(), 

    S145$receive	PTR FTN(PTR unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> wifi_receive(), 

    wifi.receive	PTR FTN(PTR unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> wifi_receive(), 

    S145$send	PTR FTN(PTR const unsigned char ,)void  size(2) Largest target is 1
		 -> wifi_send(), 

    wifi.send	PTR FTN(PTR const unsigned char ,)void  size(2) Largest target is 1
		 -> wifi_send(), 

    S145$init	PTR FTN(long ,)void  size(2) Largest target is 1
		 -> wifi_init(), 

    wifi.init	PTR FTN(long ,)void  size(2) Largest target is 1
		 -> wifi_init(), 

    S85$formatar	PTR FTN()void  size(2) Largest target is 1
		 -> formatar_receitas(), 

    EEPROM.formatar	PTR FTN()void  size(2) Largest target is 1
		 -> formatar_receitas(), 

    S85$livre	PTR FTN(PTR unsigned char ,)void  size(2) Largest target is 1
		 -> receita_livre(), 

    EEPROM.livre	PTR FTN(PTR unsigned char ,)void  size(2) Largest target is 1
		 -> receita_livre(), 

    S85$deletar	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> deletar_receita(), 

    EEPROM.deletar	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> deletar_receita(), 

    S85$buscar	PTR FTN(unsigned char ,PTR unsigned char ,)void  size(2) Largest target is 1
		 -> buscar_receita(), 

    EEPROM.buscar	PTR FTN(unsigned char ,PTR unsigned char ,)void  size(2) Largest target is 1
		 -> buscar_receita(), 

    S85$salvar	PTR FTN(unsigned char ,PTR unsigned char ,)void  size(2) Largest target is 1
		 -> salvar_receita(), 

    EEPROM.salvar	PTR FTN(unsigned char ,PTR unsigned char ,)void  size(2) Largest target is 1
		 -> salvar_receita(), 

    S29$clr	PTR FTN()void  size(2) Largest target is 1
		 -> dispLCD_clr(), 

    IHM.clr	PTR FTN()void  size(2) Largest target is 1
		 -> dispLCD_clr(), 

    S29$printv	PTR FTN(unsigned char ,unsigned char ,int ,unsigned char ,)void  size(2) Largest target is 1
		 -> dispLCD_num(), 

    IHM.printv	PTR FTN(unsigned char ,unsigned char ,int ,unsigned char ,)void  size(2) Largest target is 1
		 -> dispLCD_num(), 

    S29$printpos	PTR FTN(unsigned char ,unsigned char ,PTR const unsigned char ,)void  size(2) Largest target is 1
		 -> dispLCD(), 

    IHM.printpos	PTR FTN(unsigned char ,unsigned char ,PTR const unsigned char ,)void  size(2) Largest target is 1
		 -> dispLCD(), 

    S29$print	PTR FTN(PTR const unsigned char ,)void  size(2) Largest target is 1
		 -> dispLCD_str(), 

    IHM.print	PTR FTN(PTR const unsigned char ,)void  size(2) Largest target is 1
		 -> dispLCD_str(), 

    S29$init	PTR FTN()void  size(2) Largest target is 1
		 -> dispLCD_init(), 

    IHM.init	PTR FTN()void  size(2) Largest target is 1
		 -> dispLCD_init(), 


Critical Paths under _main in COMRAM

    _main->_printExec
    _wifi_init->_initEUSART
    _initEUSART->___lldiv
    _teclado_borda->_teclado_scan
    _setT1->___wmul
    _serialIOscan->_serialIObyteShift
    _salvar_receita->___awmod
    _salvar_dado->___awmod
    _salva_atuadores_init->_ler_atuador
    _printExec->_dispLCD_num
    _posAtual->_fifo_lerPos
    _dispLCD_num->_dignum_tam
    _manipula_atuadores_init->_alt_atuador
    _formatar_receitas->_EEPROM_write
    _fifo_print->___awdiv
    _fifo_delete->_fifo_alinharPrint
    _fifo_add_tempo->_fifo_alinharPrint
    _fifo_add_control->_fifo_alinharPrint
    _fifo_add->_fifo_alinharPrint
    _fifo_alinharPrint->_dignum_tam
    _dignum_tam->___awdiv
    _dispLCD_str->_dispLCD_lincol
    _dispLCD_init->_delay
    _dispLCD_clr->_dispLCD_instReg
    _dispLCD->_dispLCD_lincol
    _dispLCD_lincol->_dispLCD_instReg
    _dignum_conc->___wmul
    _dignum_apagar->___lwdiv
    _deletar_receita->_end_receita
    _buscar_receita->___awmod
    _buscar_dado->___awmod
    ___aldiv->___lmul
    _Wifi_mode->_wifi_send
    _wifi_send->_txEUSART
    _MCP4725->___aldiv
    _dac_write->_delay
    _dac_init->_delay
    _I2C_init->___lldiv

Critical Paths under _irq in COMRAM

    None.

Critical Paths under _main in BANK0h

    None.

Critical Paths under _irq in BANK0h

    None.

Critical Paths under _main in BANK0l

    None.

Critical Paths under _irq in BANK0l

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _irq in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _irq in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _irq in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _irq in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _irq in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _irq in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _irq in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                96    96      0   76167
                                             30 COMRAM     2     2      0
                                              0 BANK0h    93    93      0
                           _I2C_init
                            _MCP4725
                          _Wifi_mode *
                            ___aldiv
                            ___awmod
                             ___lmul
                             ___wmul
                      _addContCiclos
                    _addIndicePassos
                        _alt_atuador
                        _buscar_dado
                     _buscar_receita *
                         _decodifica
                              _delay
                    _deletar_receita *
                      _dignum_apagar
                        _dignum_conc
                            _dispLCD *
                        _dispLCD_clr *
                    _dispLCD_dataReg
                       _dispLCD_init
                     _dispLCD_lincol
                        _dispLCD_num *
                        _dispLCD_str *
                           _fifo_add
                     _fifo_add_ciclo
                   _fifo_add_control
                     _fifo_add_tempo
                          _fifo_adrs
                        _fifo_delete
                    _fifo_disponivel
                        _fifo_indice
               _fifo_indicePrint_dec
               _fifo_indicePrint_inc
                        _fifo_lerPos
                         _fifo_print
                           _fifo_tam
                  _formatar_receitas *
                          _getCiclos
                      _getContCiclos
                    _getIndicePassos
                       _initSerialIO
                     _init_atuadores
                        _ler_atuador
                         _ler_sensor
            _manipula_atuadores_init
                          _printExec
                    _resetContCiclos
                  _resetIndicePassos
               _salva_atuadores_init
                        _salvar_dado
                     _salvar_receita *
                       _serialIOscan
                              _setT1
                          _set_passo
                           _statusT1
                      _teclado_borda
                       _teclado_init
                        _timer1_init
                          _wifi_init *
 ---------------------------------------------------------------------------------
 (1) _wifi_init                                            4     0      4     616
                                             21 COMRAM     4     0      4
                         _initEUSART *
 ---------------------------------------------------------------------------------
 (2) _initEUSART                                           8     4      4     541
                                             13 COMRAM     8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (1) _timer1_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _teclado_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _teclado_borda                                        2     2      0     296
                                              5 COMRAM     2     2      0
                       _teclado_scan
 ---------------------------------------------------------------------------------
 (2) _teclado_scan                                         5     5      0     204
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (1) _statusT1                                             4     0      4       0
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _set_passo                                            5     3      2     274
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _setT1                                                4     0      4     478
                                              6 COMRAM     4     0      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _serialIOscan                                         6     6      0     205
                                              3 COMRAM     6     6      0
                  _serialIObyteShift
                       _serialIOload
 ---------------------------------------------------------------------------------
 (2) _serialIOload                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _serialIObyteShift                                    3     3      0     114
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _salvar_receita                                       6     4      2    1089
                                              6 COMRAM     6     4      2
                       _EEPROM_write
                            ___awmod (ARG)
                        _end_receita
                          _fifo_adrs (ARG)
 ---------------------------------------------------------------------------------
 (1) _salvar_dado                                          5     3      2    1219
                                              6 COMRAM     5     3      2
                       _EEPROM_write
                            ___awmod (ARG)
                        _end_receita
 ---------------------------------------------------------------------------------
 (1) _salva_atuadores_init                                 8     8      0     235
                                              3 COMRAM     8     8      0
                        _ler_atuador
 ---------------------------------------------------------------------------------
 (2) _ler_atuador                                          3     3      0      22
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _resetIndicePassos                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _resetContCiclos                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _printExec                                            5     4      1   12960
                                             25 COMRAM     5     4      1
                         _decodifica
                         _dignum_tam
                    _dispLCD_dataReg
                     _dispLCD_lincol
                        _dispLCD_num
                           _posAtual
 ---------------------------------------------------------------------------------
 (2) _posAtual                                             2     2      0      68
                                              1 COMRAM     2     2      0
                        _fifo_lerPos
                    _getIndicePassos
 ---------------------------------------------------------------------------------
 (3) _getIndicePassos                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _fifo_lerPos                                          1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _dispLCD_num                                         14    10      4    7167
                                             11 COMRAM    14    10      4
                            ___awdiv
                            ___awmod
                         _dignum_tam (ARG)
                    _dispLCD_dataReg
                     _dispLCD_lincol
                        _fifo_indice (ARG)
                           _fifo_tam (ARG)
                      _getContCiclos (ARG)
                    _getIndicePassos (ARG)
 ---------------------------------------------------------------------------------
 (1) _manipula_atuadores_init                              3     3      0     136
                                              3 COMRAM     3     3      0
                        _alt_atuador
 ---------------------------------------------------------------------------------
 (1) _ler_sensor                                           5     3      2     274
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _init_atuadores                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initSerialIO                                         5     0      5     294
                                              0 COMRAM     5     0      5
 ---------------------------------------------------------------------------------
 (1) _getContCiclos                                        2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _getCiclos                                            4     2      2      25
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _formatar_receitas                                    1     1      0     372
                                              2 COMRAM     1     1      0
                       _EEPROM_write
 ---------------------------------------------------------------------------------
 (1) _fifo_tam                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _fifo_print                                           9     9      0    7013
                                              8 COMRAM     9     9      0
                            ___awdiv
                            ___awmod
                         _decodifica
                    _dispLCD_dataReg
                     _dispLCD_lincol
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    1968
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _fifo_indicePrint_inc                                 7     7      0       0
                                              0 COMRAM     7     7      0
 ---------------------------------------------------------------------------------
 (1) _fifo_indicePrint_dec                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _fifo_indice                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _fifo_disponivel                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _fifo_delete                                          2     2      0    4395
                                             15 COMRAM     2     2      0
                        _alt_atuador
                           _codifica
                         _decodifica
                  _fifo_alinharPrint
 ---------------------------------------------------------------------------------
 (2) _decodifica                                           4     2      2    1426
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _alt_atuador                                          3     3      0      22
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _fifo_adrs                                            2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _fifo_add_tempo                                       1     1      0    3035
                                             15 COMRAM     1     1      0
                           _codifica
                  _fifo_alinharPrint
 ---------------------------------------------------------------------------------
 (1) _fifo_add_control                                     1     1      0    3013
                                             15 COMRAM     1     1      0
                           _codifica
                  _fifo_alinharPrint
 ---------------------------------------------------------------------------------
 (1) _fifo_add_ciclo                                       2     0      2     120
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _fifo_add                                             1     1      0    3035
                                             15 COMRAM     1     1      0
                           _codifica
                  _fifo_alinharPrint
 ---------------------------------------------------------------------------------
 (2) _fifo_alinharPrint                                    4     4      0    2357
                                             11 COMRAM     4     4      0
                         _dignum_tam
 ---------------------------------------------------------------------------------
 (2) _dignum_tam                                           3     1      2    2041
                                              8 COMRAM     3     1      2
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1364
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _codifica                                             5     3      2     590
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _dispLCD_str                                          4     2      2    1733
                                              7 COMRAM     4     2      2
                    _dispLCD_dataReg
                     _dispLCD_lincol
 ---------------------------------------------------------------------------------
 (1) _dispLCD_init                                         0     0      0    1415
                              _delay
                    _dispLCD_instReg
 ---------------------------------------------------------------------------------
 (1) _dispLCD_clr                                          0     0      0     176
                    _dispLCD_instReg
 ---------------------------------------------------------------------------------
 (1) _dispLCD                                              5     2      3    4971
                                              7 COMRAM     5     2      3
                    _dispLCD_dataReg
                     _dispLCD_lincol
 ---------------------------------------------------------------------------------
 (3) _dispLCD_lincol                                       5     4      1    1386
                                              2 COMRAM     5     4      1
                    _dispLCD_instReg
 ---------------------------------------------------------------------------------
 (4) _dispLCD_instReg                                      2     2      0     176
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _dispLCD_dataReg                                      2     2      0      44
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _dignum_conc                                          7     5      2     757
                                              6 COMRAM     7     5      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     463
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _dignum_apagar                                        2     0      2     540
                                              7 COMRAM     2     0      2
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     268
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _deletar_receita                                      4     4      0     939
                                              4 COMRAM     4     4      0
                       _EEPROM_write
                        _end_receita
 ---------------------------------------------------------------------------------
 (2) _EEPROM_write                                         2     1      1     348
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _buscar_receita                                       6     4      2     763
                                              6 COMRAM     6     4      2
                        _EEPROM_read
                            ___awmod (ARG)
                        _end_receita
 ---------------------------------------------------------------------------------
 (1) _buscar_dado                                          6     3      3     893
                                              6 COMRAM     6     3      3
                        _EEPROM_read
                            ___awmod (ARG)
                        _end_receita
 ---------------------------------------------------------------------------------
 (2) _end_receita                                          4     2      2     478
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _EEPROM_read                                          1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _addIndicePassos                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _addContCiclos                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              12     4      8     370
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) ___aldiv                                             14     6      8     452
                                             12 COMRAM    14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Wifi_mode                                            1     1      0    1425
                                              3 COMRAM     1     1      0
                          _wifi_send
 ---------------------------------------------------------------------------------
 (2) _wifi_send                                            2     0      2    1359
                                              1 COMRAM     2     0      2
                           _txEUSART *
                     _txStatusEUSART *
 ---------------------------------------------------------------------------------
 (3) _txStatusEUSART                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _txEUSART                                             1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _MCP4725                                              2     0      2    4207
                                             26 COMRAM     2     0      2
                           _I2C_stop
                            ___aldiv (ARG)
                             ___lmul (ARG)
                           _dac_init
                          _dac_write
                              _delay
 ---------------------------------------------------------------------------------
 (2) _dac_write                                            5     3      2    1533
                                              3 COMRAM     5     3      2
                    _I2C_ack_receive
                             _I2C_tx
                              _delay
 ---------------------------------------------------------------------------------
 (2) _dac_init                                             0     0      0    1261
                    _I2C_ack_receive
                          _I2C_start
                             _I2C_tx
                              _delay
 ---------------------------------------------------------------------------------
 (2) _delay                                                3     1      2    1239
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _I2C_tx                                               1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _I2C_start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_ack_receive                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_init                                             4     0      4     564
                                             13 COMRAM     4     0      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     466
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _irq                                                  0     0      0       0
                          _intt1_1ms
 ---------------------------------------------------------------------------------
 (6) _intt1_1ms                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_init
     ___lldiv
   _MCP4725
     _I2C_stop
     ___aldiv (ARG)
       ___lmul (ARG)
     ___lmul (ARG)
     _dac_init (ARG)
       _I2C_ack_receive
       _I2C_start
       _I2C_tx
       _delay
     _dac_write (ARG)
       _I2C_ack_receive
       _I2C_tx
       _delay
     _delay (ARG)
   _Wifi_mode *
     _wifi_send
       _txEUSART *
       _txStatusEUSART *
   ___aldiv *
     ___lmul (ARG)
   ___awmod *
   ___lmul *
   ___wmul *
   _addContCiclos *
   _addIndicePassos *
   _alt_atuador *
   _buscar_dado *
     _EEPROM_read
     ___awmod (ARG)
     _end_receita (ARG)
   _buscar_receita *
     _EEPROM_read
     ___awmod (ARG)
     _end_receita (ARG)
   _decodifica *
   _delay *
   _deletar_receita *
     _EEPROM_write
     _end_receita
   _dignum_apagar *
     ___lwdiv
   _dignum_conc *
     ___wmul
   _dispLCD *
     _dispLCD_dataReg
     _dispLCD_lincol
       _dispLCD_instReg
   _dispLCD_clr *
     _dispLCD_instReg
   _dispLCD_dataReg *
   _dispLCD_init *
     _delay
     _dispLCD_instReg
   _dispLCD_lincol *
     _dispLCD_instReg
   _dispLCD_num *
     ___awdiv
     ___awmod
     _dignum_tam (ARG)
       ___awdiv
     _dispLCD_dataReg (ARG)
     _dispLCD_lincol (ARG)
       _dispLCD_instReg
     _fifo_indice (ARG)
     _fifo_tam (ARG)
     _getContCiclos (ARG)
     _getIndicePassos (ARG)
   _dispLCD_str *
     _dispLCD_dataReg
     _dispLCD_lincol
       _dispLCD_instReg
   _fifo_add *
     _codifica
     _fifo_alinharPrint
       _dignum_tam
         ___awdiv
   _fifo_add_ciclo *
   _fifo_add_control *
     _codifica
     _fifo_alinharPrint
       _dignum_tam
         ___awdiv
   _fifo_add_tempo *
     _codifica
     _fifo_alinharPrint
       _dignum_tam
         ___awdiv
   _fifo_adrs *
   _fifo_delete *
     _alt_atuador
     _codifica
     _decodifica
     _fifo_alinharPrint
       _dignum_tam
         ___awdiv
   _fifo_disponivel *
   _fifo_indice *
   _fifo_indicePrint_dec *
   _fifo_indicePrint_inc *
   _fifo_lerPos *
   _fifo_print *
     ___awdiv
     ___awmod
     _decodifica
     _dispLCD_dataReg
     _dispLCD_lincol
       _dispLCD_instReg
   _fifo_tam *
   _formatar_receitas *
     _EEPROM_write
   _getCiclos *
   _getContCiclos *
   _getIndicePassos *
   _initSerialIO *
   _init_atuadores *
   _ler_atuador *
   _ler_sensor *
   _manipula_atuadores_init *
     _alt_atuador
   _printExec *
     _decodifica
     _dignum_tam
       ___awdiv
     _dispLCD_dataReg
     _dispLCD_lincol
       _dispLCD_instReg
     _dispLCD_num
       ___awdiv
       ___awmod
       _dignum_tam (ARG)
         ___awdiv
       _dispLCD_dataReg (ARG)
       _dispLCD_lincol (ARG)
         _dispLCD_instReg
       _fifo_indice (ARG)
       _fifo_tam (ARG)
       _getContCiclos (ARG)
       _getIndicePassos (ARG)
     _posAtual
       _fifo_lerPos
       _getIndicePassos
   _resetContCiclos *
   _resetIndicePassos *
   _salva_atuadores_init *
     _ler_atuador
   _salvar_dado *
     _EEPROM_write
     ___awmod (ARG)
     _end_receita (ARG)
   _salvar_receita *
     _EEPROM_write
     ___awmod (ARG)
     _end_receita (ARG)
     _fifo_adrs (ARG)
   _serialIOscan *
     _serialIObyteShift
     _serialIOload
   _setT1 *
     ___wmul (ARG)
   _set_passo *
   _statusT1 *
   _teclado_borda *
     _teclado_scan
   _teclado_init *
   _timer1_init *
   _wifi_init *
     _initEUSART *
       ___lldiv

 _irq (ROOT)
   _intt1_1ms

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMh            765      0       0      23        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      21        0.0%
BANK7              100      0       0      22        0.0%
BITBANK6           100      0       0      19        0.0%
BANK6              100      0       0      20        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      17        0.0%
BITBANK4           100      0       0      14        0.0%
BANK4              100      0       0      15        0.0%
BITBANK3           100      0       0      12        0.0%
BANK3              100      0       0      13        0.0%
BITBANK2           100      0       0      10        0.0%
BANK2              100      0       0      11        0.0%
BITBANK1           100      0       0       8        0.0%
BANK1              100      0      78       9       46.9%
BIGRAMl             98      0       0      24        0.0%
BANK0h              65     5D      5F       6       94.1%
BITBANK0h           65      0       0       4        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     20      5D       1       98.9%
BITBANK0l           39      0       0       5        0.0%
BANK0l              39      0      34       7       91.2%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     168      18        0.0%
DATA                 0      0     168       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Wed Nov 17 16:40:21 2021

              ??_fifo_add_control 0036                     dac_write@code 002A  
                ??_fifo_add_tempo 0036     __size_of_fifo_indicePrint_dec 0018  
   __size_of_fifo_indicePrint_inc 0066                                 _d 0014  
                     fp__txEUSART 0000                       _SSPSTATbits 000FC7  
                    ___awdiv@sign 002C           __end_of_dispLCD_dataReg 3F6C  
             ___wmul@multiplicand 0029                       __CFG_BORV$3 000000  
                    printExec@col 0043                      printExec@ind 0040  
                  salvar_dado@col 002D                      __CFG_CP0$OFF 000000  
                  salvar_dado@aux 002F                      __CFG_CP1$OFF 000000  
              __size_of_I2C_start 0018                      __CFG_CP2$OFF 000000  
                    __CFG_CP3$OFF 000000                               l200 0646  
                             l201 0578                               l210 05DA  
                             l202 0548                               l203 054C  
                             l300 0F06                               l220 0718  
                             l212 0624                               l204 0550  
                             l221 06FC                               l205 0554  
                             l310 0F96                               l302 0F3A  
                             l230 07EA                               l222 074A  
                             l214 063C                               l206 0558  
                             l311 0FA0                               l231 082A  
                             l223 0704                               l215 0674  
                             l207 055C                               l400 1AD6  
                             l320 1032                               l304 0F48  
                             l240 097C                               l232 0892  
                             l224 070C                               l216 0682  
                             l208 0560                               l401 1B08  
                             l305 109C                               l321 103C  
                             l313 0FD6                               l241 0980  
                             l233 0846                               l225 074E  
                             l217 06C8                               l209 0564  
                             l161 00E0                               l162 1D7E  
                             l410 1CE4                               l402 1B8A  
                             l330 117A                               l322 1046  
                             l306 0F52                               l250 09F2  
                             l242 09CE                               l234 087C  
                             l226 07BC                               l218 06EC  
                             l170 01BA                               l411 1D14  
                             l403 1B24                               l323 10A0  
                             l315 0FE4                               l243 0CC6  
                             l251 09F6                               l235 08AE  
                             l227 07A2                               l219 06F0  
                             l171 020A                               l163 00E4  
                             l420 1F32                               l172 1ECA  
                             l412 1D2E                               l404 1B74  
                             l340 11C6                               l332 115E  
                             l324 10FC                               l316 0FEE  
                             l308 0F88                               l260 0C82  
                             l252 09FA                               l244 09DA  
                             l236 0916                               l228 07E6  
                             l180 0308                               l164 0100  
                             l501 2F84                               l413 1D32  
                             l405 1C00                               l325 11E6  
                             l341 11CA                               l261 0B70  
                             l253 09FE                               l245 09DE  
                             l237 08CA                               l229 07AA  
                             l181 030C                               l173 0228  
                             l165 0182                               l502 2FA2  
                             l510 3CB2                               l430 2046  
                             l422 1F2A                               l414 1D60  
                             l406 1C24                               l350 14E0  
                             l342 11D2                               l334 116A  
                             l326 1108                               l318 1024  
                             l262 0C7E                               l270 0B98  
                             l254 0AC2                               l246 09E2  
                             l238 0900                               l190 03A0  
                             l182 0354                               l166 011C  
                             l503 2FA4                               l511 3D00  
                             l415 2162                               l431 206A  
                             l423 1F36                               l407 1C28  
                             l351 14A6                               l335 1250  
                             l343 11DA                               l327 110C  
                             l255 0C90                               l263 0BB0  
                             l271 0B9C                               l247 09E6  
                             l239 0958                               l191 03EA  
                             l183 0378                               l167 016C  
                             l512 3CBA                               l520 3EFC  
                             l440 2150                               l432 206E  
                             l424 1FC2                               l416 1ED2  
                             l408 1C8E                               l360 15A4  
                             l352 151A                               l344 1254  
                             l336 117E                               l328 1110  
                             l280 0D3C                               l272 0C12  
                             l264 0B80                               l256 0ACE  
                             l248 09EA                               l192 048A  
                             l184 037C                               l176 02AA  
                             l168 019E                               l601 430E  
                             l513 3CC2                               l521 3EE2  
                             l417 21C6                               l433 2096  
                             l409 1CEC                               l361 15BE  
                             l353 14AE                               l345 1262  
                             l337 118C                               l329 1114  
                             l281 0DBC                               l265 0B84  
                             l257 0B22                               l249 09EE  
                             l193 0658                               l185 03AC  
                             l177 0278                               l169 0220  
                             l506 3F6A                               l514 3D0C  
                             l522 3F1C                               l530 2740  
                             l450 3098                               l442 2142  
                             l434 209A                               l426 1F5C  
                             l418 1ED6                               l370 16C0  
                             l362 15C2                               l354 14B6  
                             l346 130C                               l338 119A  
                             l274 0C5C                               l266 0B88  
                             l194 0496                               l186 0388  
                             l178 02C6                               l523 3F1C  
                             l531 277E                               l451 3176  
                             l443 215A                               l435 20B0  
                             l427 2042                               l419 1EE8  
                             l371 16C4                               l363 1628  
                             l355 14BE                               l347 1318  
                             l339 11B8                               l291 0E9A  
                             l283 0E16                               l267 0B8C  
                             l259 0B04                               l195 04EA  
                             l187 03E6                               l179 02E4  
                             l604 3EAA                               l540 2864  
                             l532 278E                               l700 37AE  
                             l452 30A8                               l444 21CA  
                             l436 20B8                               l428 2018  
                             l380 1866                               l372 173E  
                             l364 1656                               l356 14D8  
                             l348 1462                               l276 0C74  
                             l268 0B90                               l188 0390  
                             l605 3ECC                               l509 3CCE  
                             l517 4134                               l533 2782  
                             l701 37CE                               l453 30B8  
                             l445 21CE                               l437 20E0  
                             l429 203E                               l381 18A6  
                             l373 16D2                               l365 16B4  
                             l357 151E                               l349 149A  
                             l293 0EA8                               l285 0E24  
                             l277 0CAC                               l269 0B94  
                             l197 04CC                               l189 0398  
                             l606 3ECC                               l550 3AA2  
                             l462 2BFA                               l470 2BA0  
                             l710 3B06                               l526 26F6  
                             l702 37D4                               l454 30C8  
                             l446 21CE                               l438 20EE  
                             l390 1918                               l382 18F4  
                             l374 16DA                               l366 16AC  
                             l358 157C                               l278 0D38  
                             l198 064A                               l543 4582  
                             l551 3AA2                               l471 2BB8  
                             l463 2B28                               l711 3B0A  
                             l535 27D4                               l527 2760  
                             l455 30D8                               l439 20F2  
                             l383 19B8                               l391 191C  
                             l375 1742                               l367 16F4  
                             l359 1574                               l295 0EDC  
                             l287 0E58                               l279 0CBA  
                             l199 0538                               l480 4200  
                             l800 3CA6                               l472 2BD0  
                             l464 2C54                               l536 27D8  
                             l528 2710                               l456 30E8  
                             l392 1920                               l384 1900  
                             l376 17F2                               l368 16B8  
                             l481 4200                               l801 3CA6  
                             l617 43AA                               l465 2C54  
                             l473 2BE8                               l705 3AC6  
                             l537 27F2                               l529 273C  
                             l449 311C                               l457 30F8  
                             l393 1924                               l385 1904  
                             l377 1878                               l369 16BC  
                             l297 0EEA                               l289 0E66  
                             l546 3A80                               l730 3544  
                             l810 250C                               l618 43BA  
                             l466 2B40                               l706 3B0A  
                             l538 27F2                               l458 3108  
                             l394 1A2A                               l386 1908  
                             l378 185E                               l298 0EFA  
                             l547 3A4C                               l731 3560  
                             l811 223E                               l619 43BA  
                             l467 2B58                               l707 3AF2  
                             l539 2864                               l459 3176  
                             l395 198C                               l387 190C  
                             l379 18A2                               l299 1052  
                             l580 41BC                               l548 3A68  
                             l740 2930                               l804 4472  
                             l812 2508                               l820 2376  
                             l660 437A                               l468 2B70  
                             l708 3ACA                               l396 1A2E  
                             l388 1910                               l581 41CA  
                             l549 3A78                               l741 28AC  
                             l725 4530                               l805 4472  
                             l821 23C0                               l813 22FC  
                             l469 2B88                               l709 3AE8  
                             l397 1A6A                               l389 1914  
                             l478 41EA                               l902 439C  
                             l646 445A                               l582 41CE  
                             l494 2EF8                               l734 299A  
                             l742 2992                               l750 29CC  
                             l822 2500                               l830 241A  
                             l814 22A0                               l654 456A  
                             l590 3D6C                               l398 1AEC  
                             l479 41D4                               l647 445A  
                             l743 28BC                               l735 286C  
                             l823 24C0                               l831 241E  
                             l815 229C                               l663 4558  
                             l719 4426                               l399 1A86  
                             l576 4522                               l496 2EE6  
                             l744 28CC                               l736 2894  
                             l760 2A2A                               l728 355C  
                             l840 2520                               l824 2462  
                             l832 2422                               l816 22E6  
                             l808 21F4                               l680 3388  
                             l585 4336                               l593 3D9E  
                             l497 2F04                               l737 29CC  
                             l745 28DC                               l761 2A3A  
                             l753 29EE                               l729 34D0  
                             l841 2520                               l817 2504  
                             l825 2406                               l809 2210  
                             l657 4596                               l681 33A2  
                             l594 3DCA                               l498 2F44  
                             l746 28EC                               l738 2898  
                             l850 3FE4                               l690 36B6  
                             l754 2B20                               l762 2A4A  
                             l834 2446                               l826 240A  
                             l818 23D6                               l666 4544  
                             l674 33B4                               l930 3C38  
                             l922 4590                               l595 3DCA  
                             l579 41BC                               l499 2F96  
                             l747 28FC                               l739 28A8  
                             l851 3FC2                               l771 3BD6  
                             l763 2A5A                               l755 2A16  
                             l827 240E                               l819 237A  
                             l675 333A                               l931 3C40  
                             l844 3FB8                               l748 290C  
                             l852 3FFA                               l860 2E40  
                             l772 3BD2                               l684 367C  
                             l756 2B1C                               l764 2A6A  
                             l836 2452                               l828 2412  
                             l940 428E                               l676 33EE  
                             l588 3D3E                               l669 459C  
                             l749 291C                               l853 4000  
                             l861 2E66                               l773 3BDA  
                             l781 3E74                               l685 3620  
                             l757 2AAE                               l765 2A7A  
                             l837 24BC                               l829 2416  
                             l693 454E                               l677 33EE  
                             l589 3D6C                               l925 3C28  
                             l862 2E82                               l782 3E78  
                             l686 36B6                               l766 2A8A  
                             l758 2A1A                               l838 24FC  
                             l870 2592                               l678 3354  
                             l598 4358                               l926 3BEA  
                             l934 3940                               l847 42BC  
                             l863 2E8A                               l687 3636  
                             l759 2B18                               l767 2A9A  
                             l791 4440                               l839 24F8  
                             l871 256C                               l679 336E  
                             l927 3C06                               l935 38FA  
                             l960 4492                               l856 2DAA  
                             l864 2EA0                               l776 3B6E  
                             l688 364C                               l768 2B20  
                             l872 26C2                               l880 2668  
                             l928 3C08                               l936 3956  
                             l961 4492                               l857 2EA0  
                             l785 4562                               l777 3B6A  
                             l689 3662                               l881 26BA  
                             l873 2604                               l929 3C1E  
                             l937 395A                               l962 44A0  
                             l858 2DE2                               l778 3B72  
                             l794 4572                               l882 26B6  
                             l874 25DE                               l698 37BA  
                             l963 44A2                               l859 2E1C  
                             l867 440C                               l875 26BE  
                             l883 26C2                               l699 378C  
                             l788 457A                               l876 2672  
                             l957 40FE                               l981 44C2  
                             l797 3C9E                               l982 44C2  
                             l798 3C92                               l878 265C  
                             l983 44D0                               l975 43C6  
                             l799 3C9A                               l984 44D2  
                             l976 43C6                               l896 40C4  
                             l977 43D8                               l978 43D8  
                             l899 4048                               l996 44A8  
                             l997 44A8                               l998 44BA  
                             l999 44BA                      __CFG_CPB$OFF 000000  
                             _IHM 0051                      __CFG_CPD$OFF 000000  
                    __CFG_BOR$OFF 000000                deletar_receita@aux 002B  
                             _irq 0008           __size_of_buscar_receita 005E  
               fp__buscar_receita 0000           __end_of_dispLCD_instReg 2FA6  
                    ___awmod@sign 002C                               prod 000FF3  
                             tosl 000FFD                               wreg 000FE8  
                    __CFG_FOSC$HS 000000                   __end_of_MCP4725 439E  
                 salvar_dado@data 002E                   salvar_dado@adrs 0031  
                alt_atuador@tecla 0029                      __CFG_LVP$OFF 000000  
                    ?_buscar_dado 002D                      __CFG_WDT$OFF 000000  
                            l1020 3254                              l1021 31D0  
                            l1022 323E                              l1030 4086  
                            l1014 453A                              l1023 3228  
                            l1200 3708                              l1024 325A  
                            l1201 3736                              l1202 3746  
                            l1131 458A                              l1203 3746  
                            l1019 3198                              l1029 407C  
                            l1134 448A                              l1311 2C80  
                            l1320 2D74                              l1312 2CA6  
                            l1072 4510                              l1321 2D88  
                            l1313 2D50                              l1137 3A38  
                            l1314 2CE4                              l1242 42E6  
                            l1066 43F2                              l1315 2CD4  
                            l1251 3970                              l1180 33FC  
                            l1316 2CF6                              l1252 3992  
                            l1181 33F8                              l1317 2CFA  
                            l1253 39BC                              l1069 44FE  
                            l1270 35A0                              l1182 342E  
                            l1318 2D38                              l1254 39CC  
                            l1271 3590                              l1183 34A8  
                            l1319 2D4C                              l1175 4230  
                            l1272 35B2                              l1184 34A8  
                            l1273 35B6                              l1274 35F4  
                            l1178 3474                              l1275 3608  
                            l1179 33F4                              l1276 3618  
                            l1269 3608                              l1470 3054  
                            l1199 36DA                              l1471 3064  
                            l1463 2FC8                              l1472 3084  
                            l1464 2FE6                              l1480 32B2  
                            l5001 2EE6                              l1473 3090  
                            l1465 3068                              l1481 32D0  
                            l1466 3014                              l1482 32D4  
                            l5011 2F1C                              l5003 2EF8  
                            l1467 3008                              l1483 32F6  
                            l1740 38E8                              l1468 3026  
                            l1484 3306                              l1476 327E  
                            l1733 38E0                              l5021 2F46  
                            l5013 2F34                              l5005 2F04  
                            l1469 302A                              l1485 3326  
                            l1477 3298                              l1734 3890  
                            l1486 3332                              l1478 330A  
                            l1735 3884                              l5111 3F44  
                            l5103 3F20                              l5031 2F96  
                            l5023 2F5C                              l5015 2F36  
                            l5007 2F06                              l1479 32BE  
                            l1736 38A2                              l1737 38A6  
                            l5113 3F46                              l5105 3F22  
                            l5033 2FA2                              l5025 2F5E  
                            l5017 2F3E                              l5009 2F1A  
                            l5041 2FC0                              l5201 32FC  
                            l5121 4564                              l6001 3956  
                            l1738 38D0                              l1739 38E0  
                            l5115 3F48                              l5107 3F3A  
                            l5027 2F6E                              l5019 2F44  
                            l5051 2FEE                              l5043 2FC8  
                            l5035 2FA6                              l5131 3FC2  
                            l5211 29CE                              l5203 330A  
                            l5123 456A                              l6003 4592  
                            l6011 30A8                              l5141 448C  
                            l6101 4598                              l5117 3F5E  
                            l5109 3F3C                              l5029 2F84  
                            l5061 3030                              l5053 3000  
                            l5045 2FD6                              l5037 2FAA  
                            l5133 3FDE                              l5221 2A2A  
                            l5213 29EA                              l5205 331A  
                            l5301 2788                              l5125 4410  
                            l6005 453C                              l6021 30F8  
                            l6013 30B8                              l5143 43BE  
                            l5151 448A                              l5119 3F68  
                            l5063 3046                              l5055 3008  
                            l5071 3068                              l5047 2FDE  
                            l5039 2FB8                              l5135 3FE4  
                            l5231 2A7A                              l5223 2A3A  
                            l5215 29EE                              l5207 3326  
                            l6111 437A                              l6103 435A  
                            l5311 2846                              l5303 278E  
                            l5127 4426                              l6023 3108  
                            l6015 30C8                              l6007 3094  
                            l5161 35A0                              l5153 3562  
                            l5145 44A4                              l5081 41D4  
                            l6201 395C                              l5321 4522  
                            l5313 4514                              l6121 3A68  
                            l6113 3A3A                              l5073 3078  
                            l5065 304E                              l5057 3014  
                            l5049 2FE6                              l5137 3FFA  
                            l5129 3FBA                              l5401 2E02  
                            l5233 2A8A                              l5225 2A4A  
                            l5217 2A06                              l5209 3332  
                            l6105 4360                              l6041 2B40  
                            l6033 2B24                              l5305 27C0  
                            l6025 3118                              l6017 30D8  
                            l6009 3098                              l7001 1CA6  
                            l5171 35F4                              l5163 35B6  
                            l5155 3572                              l5083 41E4  
                            l5147 4586                              l6211 2C56  
                            l6203 3970                              l5315 4518  
                            l5331 41AC                              l5323 41A0  
                            l5091 3CC2                              l6123 3A78  
                            l6115 3A3E                              l5075 3084  
                            l5067 3054                              l5059 302A  
                            l5139 4000                              l5411 2E66  
                            l5403 2E1C                              l5235 2A9A  
                            l5227 2A5A                              l5219 2A1A  
                            l6107 4366                              l6051 2B6C  
                            l6043 2B50                              l6035 2B28  
                            l5307 27D8                              l6131 3D26  
                            l6019 30E8                              l6027 311C  
                            l7011 1CFE                              l7003 1CB6  
                            l5173 35FE                              l5165 35C0  
                            l5157 3588                              l5149 4474  
                            l6221 2C8E                              l6213 2C5A  
                            l6205 397E                              l5317 451A  
                            l5341 4336                              l6141 3D70  
                            l5333 41AE                              l5325 41A2  
                            l5093 3CCA                              l5085 3CAA  
                            l6117 3A4C                              l6125 3A80  
                            l5077 3090                              l5069 305A  
                            l5413 2E7A                              l5405 2E2C  
                            l5245 361C                              l5237 2AAA  
                            l5229 2A6A                              l5181 3276  
                            l6109 436E                              l6061 2B98  
                            l6053 2B70                              l6045 2B54  
                            l6037 2B38                              l5309 27E8  
                            l5421 43F6                              l5261 3384  
                            l6133 3D3A                              l5501 325A  
                            l7101 2142                              l7021 1D38  
                            l7013 1D0A                              l7005 1CC4  
                            l6301 0118                              l5167 35DE  
                            l5159 3590                              l5079 41D0  
                            l5431 408C                              l6231 2CD4  
                            l6223 2C9E                              l6215 2C68  
                            l6207 3992                              l5319 451C  
                            l6151 3DB4                              l6143 3D82  
                            l5335 41B2                              l5327 41A6  
                            l5087 3CB2                              l5095 3CCE  
                            l6119 3A5E                              l5351 28AC  
                            l5343 2868                              l5415 2E7E  
                            l5407 2E3C                              l5247 3678  
                            l5239 2AAE                              l5191 32B2  
                            l5183 327E                              l5175 325C  
                            l6071 2BB8                              l6063 2B9C  
                            l6055 2B80                              l6047 2B58  
                            l6039 2B3C                              l5423 43FA  
                            l5271 33B0                              l5263 339E  
                            l5255 3336                              l6135 3D3E  
                            l6127 3D10                              l5511 3A28  
                            l5503 39CE                              l7103 2146  
                            l7031 1D7A                              l7023 1D56  
                            l7015 1D14                              l7007 1CDC  
                            l6311 016C                              l6303 011C  
                            l5169 35EE                              l5441 40B8  
                            l5433 4098                              l6241 2D32  
                            l6233 2CE4                              l6225 2CA6  
                            l6217 2C78                              l6209 399C  
                            l6153 3DB6                              l6145 3D86  
                            l5337 41B6                              l5329 41AA  
                            l6161 3EA6                              l5089 3CBA  
                            l5097 3D00                              l5361 28FC  
                            l5353 28BC                              l5345 286C  
                            l5417 2E8A                              l5409 2E52  
                            l5249 367C                              l5193 32BE  
                            l5185 328C                              l5177 3260  
                            l5601 4262                              l6081 2BE4  
                            l6073 2BC8                              l6065 2BA0  
                            l6057 2B84                              l6049 2B68  
                            l5281 26DA                              l5425 4406  
                            l5265 33A2                              l5257 3350  
                            l5273 33B4                              l6137 3D56  
                            l6129 3D22                              l5521 3A32  
                            l5513 3A2A                              l5505 39D0  
                            l7105 2150                              l7041 1EE8  
                            l7025 1D60                              l7017 1D26  
                            l7009 1CEC                              l6401 042C  
                            l6321 019E                              l6313 016E  
                            l6305 0148                              l7033 1D7E  
                            l5435 409E                              l5451 4038  
                            l5443 4002                              l5531 342E  
                            l6251 2D74                              l6243 2D38  
                            l6235 2CFA                              l6227 2CB6  
                            l6219 2C80                              l5339 4310  
                            l6147 3D9A                              l6163 3EAA  
                            l6155 3E7C                              l5371 2996  
                            l5363 290C                              l5355 28CC  
                            l5347 2884                              l5419 2E8C  
                            l5195 32D4                              l5187 3298  
                            l5179 326E                              l6171 43A6  
                            l5611 427C                              l5603 4264  
                            l6083 2BE8                              l6075 2BCC  
                            l6067 2BB0                              l6059 2B88  
                            l6091 2BFA                              l5291 2710  
                            l5283 26EA                              l5427 440C  
                            l5267 33A8                              l5259 336A  
                            l6139 3D58                              l5523 3A34  
                            l5515 3A2C                              l5507 3A24  
                            l7107 215E                              l7051 1F36  
                            l7043 1EF4                              l7027 1D6C  
                            l7019 1D32                              l6411 0496  
                            l6403 0436                              l7035 1ECA  
                            l6331 01F2                              l6323 01A2  
                            l6307 0154                              l6315 0182  
                            l5453 44BC                              l5437 40A2  
                            l5429 4088                              l5445 4020  
                            l5533 346C                              l6253 2D88  
                            l6245 2D42                              l6237 2D04  
                            l6229 2CCC                              l6149 3D9E  
                            l6165 3EB6                              l6157 3E8E  
                            l5541 42E6                              l5365 291C  
                            l5357 28DC                              l5349 2898  
                            l5373 299A                              l5701 3BA4  
                            l5197 32EA                              l5189 32AA  
                            l6173 43AA                              l5621 4286  
                            l5613 427E                              l5605 4274  
                            l6085 2BEE                              l6077 2BD0  
                            l6069 2BB4                              l5293 2736  
                            l5285 26F6                              l5269 33AC  
                            l5461 3C00                              l5525 3A36  
                            l5517 3A2E                              l5509 3A26  
                            l7061 1FC2                              l7053 1F46  
                            l7045 1F04                              l7037 1ED6  
                            l7109 2162                              l7029 1D72  
                            l6501 0826                              l6421 0502  
                            l6413 04AE                              l6405 044E  
                            l6341 0228                              l6333 01F6  
                            l6325 01B6                              l6317 0186  
                            l6309 0158                              l6261 003E  
                            l5439 40B4                              l5447 4024  
                            l5535 3474                              l5527 33F0  
                            l6191 36DA                              l6239 2D22  
                            l6247 2D50                              l6167 3EB8  
                            l6159 3E92                              l5551 3890  
                            l5543 3862                              l5367 292C  
                            l5359 28EC                              l5391 2DAA  
                            l5383 2D8A                              l5703 3BB8  
                            l5199 32F6                              l5711 21E2  
                            l6175 43B4                              l5623 4288  
                            l5615 4280                              l5607 4278  
                            l6087 2BF2                              l6079 2BE0  
                            l5295 2740                              l5287 2700  
                            l5279 26C6                              l5471 3C40  
                            l5463 3C16                              l5455 458C  
                            l5631 4500                              l5519 3A30  
                            l7063 1FD2                              l7071 2018  
                            l7055 1F5C                              l7047 1F16  
                            l7039 1EDE                              l6511 0858  
                            l6503 082A                              l6431 0574  
                            l6423 051A                              l6415 04CC  
                            l6407 0480                              l6351 0282  
                            l6343 0254                              l6335 020A  
                            l6327 01BA                              l6319 019A  
                            l6271 0098                              l6263 006A  
                            l6255 0012                              l5449 4030  
                            l5529 33FC                              l6193 36EC  
                            l6249 2D60                              l6097 4442  
                            l5561 38D0                              l5553 38A6  
                            l5545 386A                              l5537 42BE  
                            l5369 2930                              l5393 2DBE  
                            l5385 2D8E                              l5705 3BBA  
                            l5801 23F6                              l5721 2210  
                            l5713 21E6                              l6169 439E  
                            l5625 428A                              l5617 4282  
                            l5609 427A                              l5633 4546  
                            l6089 2BF6                              l5297 2760  
                            l5289 2708                              l5465 3C1E  
                            l5457 3BDE                              l5481 31B4  
                            l5473 3178                              l5641 4068  
                            l6185 4202                              l7081 208C  
                            l7073 2034                              l7065 1FE2  
                            l7057 1F68                              l7049 1F2A  
                            l6601 0BB0                              l6513 0864  
                            l6505 082E                              l6521 0892  
                            l6441 063C                              l6433 0578  
                            l6425 0526                              l6417 04D8  
                            l6409 048A                              l6361 02C6  
                            l6353 0290                              l6345 0266  
                            l6337 020C                              l6329 01E6  
                            l6281 00C0                              l6273 009C  
                            l6265 008A                              l6257 0016  
                            l6195 3708                              l6187 36BA  
                            l6099 4454                              l5651 42FC  
                            l5563 38D6                              l5555 38AC  
                            l5547 387C                              l5539 42DA  
                            l5395 2DCE                              l5387 2D92  
                            l5707 3BD6                              l5811 2446  
                            l5803 2422                              l5731 224E  
                            l5723 2224                              l5715 21F4  
                            l5627 428C                              l5619 4284  
                            l5299 2782                              l5459 3BEC  
                            l5467 3C28                              l5491 3228  
                            l5483 31B8                              l5475 3180  
                            l5643 4078                              l5635 404A  
                            l5571 43DA                              l7091 20E0  
                            l7083 209A                              l7075 2046  
                            l7067 1FE6                              l7059 1FB8  
                            l6603 0C12                              l6611 0C82  
                            l6531 08C6                              l6523 0896  
                            l6515 0868                              l6507 0842  
                            l6451 0678                              l6435 05DA  
                            l6427 0538                              l6443 064A  
                            l6419 04EA                              l6371 0310  
                            l6363 02DA                              l6355 0294  
                            l6347 026C                              l6339 0220  
                            l6291 00E4                              l6283 00C4  
                            l6275 00A0                              l6267 0090  
                            l6259 001A                              l6197 371A  
                            l6189 36CA                              l5557 38C2  
                            l5549 3884                              l5565 4100  
                            l5397 2DE2                              l5389 2DA6  
                            l5901 34AA                              l5813 2452  
                            l5805 242A                              l5821 24C0  
                            l5741 2280                              l5733 2252  
                            l5725 2226                              l5717 2204  
                            l5709 21D2                              l5661 3ADE  
                            l5653 3AA6                              l5469 3C3A  
                            l5629 44EC                              l5493 322A  
                            l5485 31CC                              l5477 3194  
                            l5645 4080                              l5637 4052  
                            l5581 43EE                              l5573 43DC  
                            l7093 20E4                              l7085 20AC  
                            l7077 2060                              l7069 200E  
                            l6701 0FD6                              l6621 0CBA  
                            l6613 0C86                              l6605 0C3E  
                            l6541 0900                              l6533 08CA  
                            l6525 08AA                              l6517 087C  
                            l6509 0846                              l6461 06BE  
                            l6453 0682                              l6445 064E  
                            l6437 0606                              l6429 0564  
                            l6381 037C                              l6373 0336  
                            l6365 02E4                              l6357 02A0  
                            l6349 0278                              l6293 00E8  
                            l6285 00C8                              l6277 00A4  
                            l6269 0094                              l5591 40FA  
                            l6199 3736                              l5559 38CA  
                            l5567 4110                              l5399 2DF2  
                            l5671 3E38                              l5911 3544  
                            l5903 34BA                              l5831 24EC  
                            l5823 24D2                              l5815 2458  
                            l5807 242C                              l5751 22CA  
                            l5743 2290                              l5735 2262  
                            l5727 2236                              l5719 220A  
                            l5663 3AE8                              l5655 3AAE  
                            l5495 323E                              l5487 31D0  
                            l5479 3198                              l5647 4086  
                            l5639 4058                              l5583 43F0  
                            l5575 43E0                              l7095 20F2  
                            l7087 20B8                              l7079 206E  
                            l6711 1032                              l6703 0FE4  
                            l6631 0D86                              l6623 0CC2  
                            l6607 0C5C                              l6615 0C90  
                            l6551 0958                              l6543 0902  
                            l6535 08DC                              l6527 08AE  
                            l6519 087E                              l6471 0704  
                            l6463 06C8                              l6455 0686  
                            l6439 0624                              l6447 0658  
                            l6391 03A8                              l6383 0388  
                            l6375 034A                              l6367 02FE  
                            l6359 02AA                              l6295 00FC  
                            l6287 00D0                              l6279 00BC  
                            l5593 40FC                              l5585 40C6  
                            l5649 42EA                              l5841 457C  
                            l5673 3E46                              l5681 3B0E  
                            l5905 34CA                              l5913 355C  
                            l5833 24F2                              l5825 24DE  
                            l5817 245E                              l5809 243A  
                            l5753 22CC                              l5745 2296  
                            l5737 2268                              l5761 22FC  
                            l5729 223E                              l5665 3AEA  
                            l5657 3AC2                              l5921 252C  
                            l5497 3240                              l5489 31FC  
                            l5569 4532                              l5577 43EA  
                            l7097 2102                              l7089 20D6  
                            l6801 1462                              l6721 10A0  
                            l6713 103C                              l6705 0FEE  
                            l6641 0E08                              l6633 0DB2  
                            l6617 0CAC                              l6609 0C74  
                            l6625 0CC6                              l6561 09CE  
                            l6553 0972                              l6537 08E8  
                            l6529 08B2                              l6545 0916  
                            l6481 0796                              l6473 070C  
                            l6465 06E2                              l6457 0698  
                            l6449 0674                              l6385 0390  
                            l6393 03AC                              l6377 0354  
                            l6369 030C                              l6297 0100  
                            l6289 00D8                              ?_irq 0027  
                            l5587 40CA                              l5595 437C  
                            l5851 3EF6                              l5843 3ED0  
                            l5675 3E5A                              l5691 3B52  
                            l5683 3B1E                              l5907 34D0  
                            l5827 24E2                              l5819 2462  
                            l5771 233C                              l5763 230C  
                            l5755 22E6                              l5739 226A  
                            l5747 22A0                              l5835 250C  
                            l5915 456C                              l5659 3ACA  
                            l5667 3AF2                              l5931 2588  
                            l5923 253C                              l5499 3254  
                            l5579 43EC                              l7099 2128  
                            l6811 14AE                              l6803 1474  
                            l6731 1114                              l6723 10A8  
                            l6715 1046                              l6707 1016  
                            l6651 0E4A                              l6643 0E16  
                            l6635 0DBC                              l6627 0D3C  
                            l6619 0CB0                              l6571 0A6E  
                            l6563 09FE                              l6555 0980  
                            l6547 093A                              l6539 08EC  
                            l6483 07A2                              l6491 07BC  
                            l6475 0714                              l6467 06F0  
                            l6459 06AA                              l6395 03EA  
                            l6387 0398                              l6379 036E  
                            l6299 0104                              l5589 40D2  
                            l5597 438C                              l5853 3EFC  
                            l5845 3ED4                              l5677 3E5C  
                            l5669 3E28                              l5685 3B2E  
                            l5693 3B6E                              l5909 34F0  
                            l5829 24EA                              l5781 2370  
                            l5773 2342                              l5765 231C  
                            l5757 22EE                              l5749 22B0  
                            l5917 4572                              l5941 25D8  
                            l5925 254C                              l5933 2592  
                            l5861 3780                              l6901 1866  
                            l6813 14B6                              l6821 14E0  
                            l6805 1478                              l6741 117E  
                            l6733 1128                              l6725 10C6  
                            l6717 104E                              l6709 1024  
                            l6661 0E8C                              l6653 0E58  
                            l6645 0E24                              l6637 0DE8  
                            l6629 0D5A                              l6581 0AE6  
                            l6573 0A86                              l6565 0A22  
                            l6557 099E                              l6549 094E  
                            l6493 07EA                              l6485 07AA  
                            l6469 06FC                              l6477 0718  
                            l6397 03FC                              l6389 03A0  
                            l5599 4390                              l5847 3EE2  
                            l5695 3B76                              l5679 3E74  
                            l5687 3B3C                              l5791 23C0  
                            l5775 2344                              l5783 237A  
                            l5767 2328                              l5759 22F6  
                            l5951 2624                              l5943 25DE  
                            l5935 25A2                              l5927 2566  
                            l5919 2524                              l5871 37B2  
                            l5863 3784                              l5855 3748  
                            l6911 18C4                              l6903 186A  
                            l6831 1554                              l6823 151E  
                            l6815 14BE                              l6807 149A  
                            l6751 11AE                              l6743 1182  
                            l6735 1148                              l6727 10F2  
                            l6719 1052                              l6671 0ECE  
                            l6663 0E9A                              l6655 0E66  
                            l6647 0E2A                              l6639 0DF2  
                            l6591 0B52                              l6583 0B04  
                            l6575 0AB8                              l6567 0A2A  
                            l6559 09C4                              l6495 0808  
                            l6487 07AE                              l6479 074E  
                            l6399 0404                              l4993 2EA4  
                            l5849 3EF2                              l5697 3B86  
                            l5689 3B50                              l5881 4440  
                            l5793 23C8                              l5785 238A  
                            l5777 235A                              l5769 232C  
                            l5961 265C                              l5953 2630  
                            l5945 25FA                              l5937 25B2  
                            l5929 256C                              l5865 378C  
                            l5873 37BA                              l5857 3758  
                            l6921 1982                              l6913 18EA  
                            l6905 1874                              l6841 15A4  
                            l6833 156C                              l6825 1526  
                            l6817 14D0                              l6809 14A6  
                            l6761 11DA                              l6753 11B8  
                            l6745 118C                              l6737 116A  
                            l6729 10FC                              l6681 0F06  
                            l6673 0EDC                              l6665 0EA8  
                            l6657 0E6C                              l6649 0E34  
                            l6593 0B5E                              l6585 0B10  
                            l6577 0AC2                              l6569 0A64  
                            l6497 080C                              l6489 07B8  
                            l4995 2EA6                              l5699 3B96  
                            l5891 3C9E                              l5883 3C42  
                            l5795 23D0                              l5787 23A4  
                            l5779 236A                              l5971 26AC  
                            l5963 2668                              l5955 263A  
                            l5939 25BE                              l5947 2604  
                            l5875 37CE                              l5867 37A4  
                            l5859 3778                              l6931 1A2E  
                            l6923 198C                              l6915 18F4  
                            l6907 1878                              l6851 1628  
                            l6843 15B6                              l6827 1536  
                            l6835 157C                              l6819 14DC  
                            l6771 1262                              l6763 11E2  
                            l6755 11BC                              l6747 1190  
                            l6739 1170                              l6691 0F7A  
                            l6683 0F2C                              l6675 0EEA  
                            l6667 0EAE                              l6659 0E76  
                            l6595 0B70                              l6587 0B22  
                            l6579 0ACE                              l6499 0812  
                            l4997 2EBE                              l5981 4524  
                            l5893 445C                              l5885 3C52  
                            l5789 23A6                              l5797 23D6  
                            l5973 4550                              l5957 2642  
                            l5949 2614                              l5965 2672  
                            l5877 37D4                              l5869 37AE  
                            l6941 1A6E                              l6933 1A4C  
                            l6925 19AA                              l6917 1924  
                            l6909 18A6                              l6861 166E  
                            l6853 162E                              l6845 15C2  
                            l6837 158E                              l6829 1546  
                            l6781 1318                              l6773 128E  
                            l6757 11CA                              l6749 119A  
                            l6765 11E6                              l6693 0F88  
                            l6685 0F3A                              l6677 0EF0  
                            l6669 0EB8                              l6597 0B9C  
                            l6589 0B3A                              l5975 3F6E  
                            l4999 2ED0                              l5983 4530  
                            l5879 4428                              l5895 446C  
                            l5887 3C8C                              l5799 23E6  
                            l5967 2684                              l5959 2650  
                            l5991 38EE                              l6951 1AC2  
                            l6943 1A82                              l6935 1A52  
                            l6927 19B4                              l6919 1944  
                            l6871 16C8                              l6863 167E  
                            l6855 164C                              l6847 15EE  
                            l6839 159A                              l6791 137C  
                            l6783 132A                              l6775 12C8  
                            l6767 1254                              l6759 11D2  
                            l6695 0F96                              l6687 0F48  
                            l6679 0EFA                              l6599 0BAC  
                            l5977 4290                              l5985 455A  
                            l5897 4574                              l5889 3C92  
                            l5969 2690                              l5993 38F2  
                            l6961 1B04                              l6953 1AD6  
                            l6945 1A86                              l6937 1A66  
                            l6929 19B8                              l6873 16D2  
                            l6865 168C                              l6881 16F4  
                            l6857 1656                              l6849 161E  
                            l6793 1386                              l6785 133C  
                            l6777 1302                              l6769 1258  
                            l6697 0FA0                              l6689 0F52  
                            l5987 455E                              l5899 457A  
                            l5979 433A                              l5995 38FA  
                            l6971 1B50                              l6963 1B08  
                            l6955 1AD8                              l6947 1AB2  
                            l6939 1A6A                              l6891 17F2  
                            l6883 1742                              l6875 16DA  
                            l6867 16A4                              l6859 165E  
                            l6795 13B2                              l6787 1368  
                            l6779 130C                              l6699 0FC8  
                            l5997 393A                              l5989 38EA  
                            l6973 1B5C                              l6965 1B0C  
                            l6981 1B8A                              l6949 1ABE  
                            l6957 1AEC                              l6893 1800  
                            l6885 1760                              l6877 16E6  
                            l6869 16C4                              l6797 13EC  
                            l6789 1372                              l7941 0594  
                            l5999 3940                              l6991 1C28  
                            l6983 1BE2                              l6975 1B60  
                            l6967 1B20                              l6959 1AF0  
                            l6895 182C                              l6887 178C  
                            l6879 16F0                              l6799 1426  
                            l7951 1066                              l7943 072C  
                            l6993 1C54                              l6985 1BF6  
                            l6977 1B74                              l6969 1B24  
                            l7961 19CC                              l6897 1852  
                            l6889 17E8                              l7953 11FA  
                            l7945 07D0                              l7971 2C0E  
                            l7963 1D94                              l6995 1C84  
                            l6987 1C00                              l6979 1B76  
                            l6899 185E                              l7955 14F4  
                            l7947 0BCC                              l7939 03C0  
                            l7981 29AE                              l7973 2476  
                            l7965 2178                              l6997 1C8E  
                            l6989 1C1A                              l7957 1708  
                            l7949 0CDA                              l7983 3CE2  
                            l7975 2ACA                              l7967 3130  
                            l6999 1C96                              l7959 188C  
         __end_of_getIndicePassos 456C                              l7977 3690  
                            l7969 33C8                              l7979 294C  
                            STR_1 7FFC                              STR_2 7DD8  
                            STR_3 7E04                              STR_4 7C2F  
                            STR_5 7F3F                              STR_6 7EC1  
                            STR_7 7F15                              STR_8 7EAC  
                            STR_9 7E58                              u4010 342A  
                            u4011 3426                              u3300 2F80  
                            u4100 4078                              u3301 2F7C  
                            u4101 4074                              u4030 346A  
                            u3310 2FB8                              u4110 3ABE  
                            u3311 2FB4                              u4111 3ABA  
                            u3400 43D4                              u4040 3494  
                            u4008 3406                              u3320 2FD6  
                            u4200 2236                              u4120 3ADE  
                            u5000 04AE                              u3401 43D0  
                            u4009 341A                              u3321 2FD2  
                            u4201 2232                              u4121 3ADA  
                            u5001 04AA                              u3410 44B6  
                            u4050 34A4                              u3330 3000  
                            u4210 224E                              u4130 3B02  
                            u5010 04C8                              u3411 44B2  
                            u4051 34A0                              u3331 2FFC  
                            u4211 224A                              u4131 3AFE  
                            u5011 04C4                              u3420 4484  
                            u4028 3438                              u4060 387C  
                            u3260 2ED0                              u3340 3022  
                            u4140 3E38                              u3500 32CC  
                            u4300 23E6                              u4220 2262  
                            u5100 0878                              u5020 0502  
                            u3421 447E                              u4037 3460  
                            u4029 346C                              u4061 3878  
                            u3261 2ECC                              u3341 301E  
                            u4141 3E34                              u3501 32C8  
                            u4301 23E2                              u4221 225E  
                            u5101 0874                              u5021 04FE  
                            u3430 4486                              u4070 389E  
                            u3270 2EE2                              u3350 3046  
                            u4150 3B1E                              u3510 32EA  
                            u4310 23F6                              u4230 2290  
                            u5110 088E                              u5030 051A  
                            u4047 348A                              u4071 389A  
                            u3271 2EDE                              u3351 3042  
                            u4151 3B1A                              u3511 32E6  
                            u4311 23F2                              u4231 228C  
                            u5111 088A                              u5031 0516  
                            u3440 3588                              u4080 38C2  
                            u3280 2F1A                              u3360 3078  
                            u4160 3B2E                              u4400 3C52  
                            u3520 331A                              u4320 243A  
                            u4240 22B0                              u5200 0A86  
                            u5120 08A6                              u5040 0606  
                            u3441 3584                              u4081 38BE  
                            u3281 2F16                              u3361 3074  
                            u4161 3B2A                              u4401 3C4E  
                            u3521 3316                              u4321 2436  
                            u4241 22AC                              u5201 0A82  
                            u5121 08A2                              u5041 0602  
                            u3450 35AE                              u3370 41FC  
                            u3290 2F6E                              u4170 3B86  
                            u3610 3672                              u3530 29E6  
                            u4410 3C8C                              u4330 24D2  
                            u4250 230C                              u4090 4068  
                            u6010 1F04                              u5130 08C2  
                            u5050 0670                              u3451 35AA  
                            u3371 41F8                              u3291 2F6A  
                            u4171 3B82                              u3611 366C  
                            u3531 29E2                              u4411 3C88  
                            u4331 24CE                              u4251 2308  
                            u4091 4064                              u6011 1F00  
                            u5131 08BE                              u5051 066C  
                            u3460 35DE                              u3380 3FF6  
                            u4180 3B96                              u3540 2A06  
                            u4420 446C                              u4340 251C  
                            u4260 231C                              u3700 2736  
                            u4500 25B2                              u6100 20AC  
                            u6020 1F16                              u5220 0AE6  
                            u5140 08FC                              u5060 06E2  
                            u3461 35DA                              u3381 3FF2  
                            u4181 3B92                              u3605 365E  
                            u3541 2A02                              u4421 4468  
                            u4341 2518                              u4261 2318  
                            u3701 2732                              u4501 25AE  
                            u6101 20A8                              u6021 1F12  
                            u5221 0AE2                              u5141 08F8  
                            u5061 06DE                              u3390 44A0  
                            u4350 3F18                              u3550 3630  
                            u4430 34BA                              u3470 326E  
                            u4270 233C                              u4190 2204  
                            u3710 277A                              u4510 25D8  
                            u3630 334A                              u6110 20D6  
                            u6030 1F26                              u5230 0B00  
                            u5150 0912                              u3391 449C  
                            u4351 3F14                              u3551 362A  
                            u4431 34B6                              u3471 326A  
                            u4271 2338                              u4191 2200  
                            u3711 2776                              u4511 25D4  
                            u3631 3344                              u6111 20D2  
                            u6031 1F22                              u5231 0AFC  
                            u5151 090E                              u3800 2DF2  
                            u4440 34CA                              u3480 328C  
                            u4280 236A                              u3720 27C0  
                            u4520 2614                              u3640 3364  
                            u4360 37A4                              u4600 3D36  
                            u6120 2102                              u6040 1F46  
                            u6008 1D42                              u5320 0E08  
                            u5240 0B3A                              u5160 0972  
                            u5080 0822                              u3801 2DEE  
                            u3625 3674                              u4441 34C6  
                            u3481 3288                              u4281 2366  
                            u3721 27BC                              u4521 2610  
                            u3641 335E                              u4361 37A0  
                            u4601 3D32                              u6121 20FE  
                            u6041 1F42                              u6009 1D56  
                            u5321 0E04                              u5241 0B36  
                            u5161 096E                              u5081 081E  
                            u3810 2E02                              u3570 3646  
                            u4450 34F0                              u3490 32AA  
                            u4290 238A                              u3730 27D0  
                            u4530 2624                              u3650 337E  
                            u4370 37CA                              u4610 3D68  
                            u6130 2128                              u6050 1F58  
                            u5330 0E4A                              u5250 0B52  
                            u5218 0A90                              u5090 083E  
                            u3811 2DFE                              u3571 3640  
                            u4451 34EC                              u3491 32A6  
                            u4291 2386                              u3731 27CC  
                            u4531 2620                              u3651 3378  
                            u4371 37C6                              u4611 3D64  
                            u6131 2124                              u6051 1F54  
                            u5331 0E46                              u5251 0B4E  
                            u5219 0AB8                              u5091 083A  
                            u4700 371A                              u4620 3D96  
                            u3820 2E2C                              u4380 443A  
                            u3740 27E8                              u4540 2650  
                            u4460 253C                              u3660 3398  
                            u3636 334C                              u3900 3C16  
                            u6140 213E                              u6060 1FD2  
                            u5420 1128                              u5340 0E8C  
                            u5308 0D90                              u5260 0C3E  
                            u4701 3716                              u4621 3D92  
                            u3821 2E28                              u3565 3632  
                            u4381 4434                              u3741 27E4  
                            u4541 264C                              u4461 2538  
                            u3661 3392                              u3901 3C12  
                            u6141 213A                              u6061 1FCE  
                            u5421 1124                              u5341 0E88  
                            u5309 0DB2                              u5261 0C3A  
                            u4710 397E                              u4630 3DC6  
                            u3830 2E3C                              u3590 365C  
                            u4390 443C                              u3750 2860  
                            u3670 26D6                              u4550 2684  
                            u4470 254C                              u3646 3366  
                            u3910 3C38                              u6070 1FE2  
                            u5430 1148                              u5350 0ECE  
                            u5318 0DC6                              u5270 0CA8  
                            u5078 07F4                              u4711 397A  
                            u4631 3DC2                              u3831 2E38  
                            u3591 3656                              u3751 285C  
                            u3671 26D0                              u4551 2680  
                            u4471 2548                              u3911 3C34  
                            u6071 1FDE                              u5431 1144  
                            u5351 0ECA                              u5319 0DE8  
                            u5271 0CA4                              u5079 0808  
                            u4720 39BC                              u3760 41CA  
                            u4640 3EA2                              u3840 2E52  
                            u3680 26D8                              u4480 2566  
                            u3656 3380                              u4560 3952  
                            u3920 3190                              u6080 2060  
                            u5600 156C                              u5440 11AE  
                            u5408 10B2                              u5360 0F2C  
                            u4721 39B8                              u3761 41C6  
                            u4641 3E9E                              u3841 2E4E  
                            u3585 3648                              u4481 2562  
                            u4561 394E                              u3921 318C  
                            u6081 205C                              u5601 1568  
                            u5441 11AA                              u5409 10C6  
                            u5361 0F28                              u4730 2C68  
                            u4570 4454                              u4650 3EC8  
                            u3770 2884                              u3850 2E76  
                            u3690 26EA                              u4490 25A2  
                            u3666 339A                              u6090 208C  
                            u5610 158E                              u5418 10D0  
                            u5370 0F7A                              u5178 098A  
                            u4810 00F8                              u4731 2C64  
                            u4571 4450                              u4651 3EC4  
                            u3771 2880                              u3851 2E72  
                            u3691 26E6                              u4491 259E  
                            u6091 2088                              u5611 158A  
                            u5419 10F2                              u5371 0F76  
                            u5179 099E                              u4811 00F4  
                            u4740 2C8E                              u4580 3A5E  
                            u3860 2E9C                              u3780 2DA2  
                            u3940 31C8                              u5620 15B6  
                            u5508 1346                              u5380 0FC8  
                            u5188 09B0                              u4900 021C  
                            u4820 0114                              u4741 2C8A  
                            u4581 3A5A                              u3861 2E98  
                            u3781 2D9E                              u3941 31C4  
                            u5621 15B2                              u5509 1368  
                            u5381 0FC4                              u5189 09C4  
                            u4901 0218                              u4821 0110  
                            u4750 2CCC                              u4590 3A9E  
                            u3790 2DCE                              u3934 31AA  
                            u5550 1474                              u5518 1390  
                            u5390 1016                              u5198 0A34  
                            u4751 2CC8                              u6327 2EEC  
                            u4591 3A9A                              u3791 2DCA  
                            u3935 31A6                              u5551 1470  
                            u5519 13B2                              u5391 1012  
                            u5199 0A64                              u3880 44D0  
                            u4680 36CA                              u4760 2CF2  
                            u3960 31FC                              u5800 1A62  
                            u5528 13BC                              u5480 132A  
                            u5288 0D46                              u4840 0168  
                            u4808 0074                              u3881 44CC  
                            u4681 36C6                              u4761 2CEE  
                            u6337 2EFA                              u3961 31F8  
                            u5801 1A5E                              u5529 13EC  
                            u5481 1326                              u5289 0D5A  
                            u4921 025E                              u4841 0164  
                            u4809 008A                              u4690 36EC  
                            u4770 2D22                              u3890 3C00  
                            u3970 323A                              u3954 31E2  
                            u5810 1A7E                              u5570 14D0  
                            u5538 13F6                              u5490 133C  
                            u5458 126C                              u5298 0D64  
                            u4930 02C2                              u4850 017E  
                            u3875 400E                              u4691 36E8  
                            u4771 2D1E                              u6347 2F38  
                            u3891 3BFC                              u3971 3236  
                            u3955 31DE                              u5811 1A7A  
                            u5571 14CC                              u5539 1426  
                            u5491 1338                              u5459 128E  
                            u5299 0D86                              u4931 02BE  
                            u4851 017A                              u4780 2D60  
                            u3980 3250                              u5708 176A  
                            u5660 166E                              u5580 1536  
                            u5548 1430                              u5468 1298  
                            u4940 02FE                              u4860 0196  
                            u4781 2D5C                              u6357 2F8A  
                            u3981 324C                              u5709 178C  
                            u5661 166A                              u5581 1532  
                            u5549 145E                              u5469 12C8  
                            u4941 02FA                              u4861 0192  
                            u4678 421C                              u5830 1AD2  
                            u5718 1796                              u5670 167E  
                            u5638 15CC                              u5590 1546  
                            u5478 12D2                              u4918 0232  
                            u4870 01B2                              u4838 0126  
                            u6367 2F98                              u4679 4230  
                            u5831 1ACE                              u5719 17BC  
                            u5671 167A                              u5639 15EE  
                            u5591 1542                              u5479 1302  
                            u4919 0254                              u4871 01AE  
                            u4839 0148                              u5920 1C1A  
                            u5840 1AE8                              u5728 17C6  
                            u5680 16A4                              u5648 15F8  
                            u5568 1482                              u4960 036E  
                            u6377 3F3E                              u5921 1C16  
                            u5841 1AE4                              u5729 17E8  
                            u5681 16A0                              u5649 161E  
                            u5569 1496                              u4961 036A  
                            u5850 1B00                              u5738 1806  
                            u5658 1638                              u4890 0206  
                            u6387 3F62                              u3995 39F2  
                            u5851 1AFC                              u5739 182C  
                            u5659 164C                              u4891 0202  
                            u5908 1B94                              u5860 1B1C  
                            u5828 1A90                              u5748 183E  
                            u4980 044E                              u6397 41DA  
                            u5909 1BB6                              u5861 1B18  
                            u5829 1AB2                              u5749 1852  
                            u4981 044A                              u5950 1CA6  
                            u5918 1BC0                              u5758 18B0  
                            u4958 0322                              u4798 0054  
                            u5951 1CA2                              u5919 1BE2  
                            u5759 18C4                              u4959 0336  
                            u4799 006A                              u5960 1CB6  
                            u5880 1B70                              u5768 18D6  
                            u4888 01C4                              u5961 1CB2  
                            u5881 1B6C                              u5769 18EA  
                            u4889 01E6                              u5970 1CDC  
                            u5938 1C32                              u5890 1B86  
                            u5778 194A                              u5698 174C  
                            u4978 040E                              u5971 1CD8  
                            u5939 1C54                              u5891 1B82  
                            u5779 1982                              u5699 1760  
                            u4979 042C                              u5980 1CFE  
                            u5948 1C5E                              u5788 1996  
                            u5981 1CFA                              u5949 1C84  
                            u5789 19AA                              u5990 1D26  
                            u5878 1B2E                              u5798 1A38  
                            u4998 0458                              u5991 1D22  
                            u5879 1B50                              u5799 1A4C  
                            u4999 0480                      __CFG_PWRT$ON 000000  
                     main@ptr_652 00B6                       main@ptr_671 00B8  
                            _fila 0015                              _main 0012  
                    fp__wifi_init 0000                      fp__wifi_send 0000  
                            _wifi 00BD                              fsr1h 000FE2  
                            fsr2h 000FDA                              indf1 000FE7  
                            indf2 000FDF                              fsr1l 000FE1  
                            fsr2l 000FD9                              btemp 005E  
                  ?_addContCiclos 0027                  __end_of_I2C_init 4100  
                            prodh 000FF4                              prodl 000FF3  
                     main@vetorIn 00AD                              start 000E  
         __size_of_salvar_receita 0060                 fp__salvar_receita 0000  
                __end_of_I2C_stop 44D4                     __CFG_IESO$OFF 000000  
               _formatar_receitas 439E                      ___param_bank 000000  
                    ?_ler_atuador 0027                    printExec@passo 0044  
              ?_formatar_receitas 0027      __end_of_salva_atuadores_init 37D6  
                           ??_irq 0027                     __CFG_PLLDIV$5 000000  
                 _addIndicePassos 4442                    __CFG_CCP2MX$ON 000000  
            __end_of_EEPROM_write 41D0                      main@auxPasso 00BA  
                 __end_of___aldiv 2D8A                             ?_main 0027  
                 __end_of___awdiv 3092                             _EEADR 000FA9  
                    wifi_send@msg 0028                             STR_10 7D4A  
                           STR_11 7FFC                             STR_12 7DD8  
                           STR_20 7FF4                             STR_13 7E2E  
                           STR_21 7E19                             STR_30 7E6D  
                           STR_14 7E43                             STR_22 7DDA  
                           STR_23 7F54                             STR_31 7DEF  
                           STR_15 7C82                             STR_40 7FE9  
                           STR_32 7F2A                             STR_16 7ED6  
                           STR_24 7DC5                             STR_33 7F98  
                           STR_41 7F69                             STR_25 7F00  
                           STR_17 7E82                             STR_34 7FB4  
                           STR_42 7F7B                             STR_18 7E97  
                           STR_26 7D21                             STR_43 7FA6  
                           STR_19 7EEB                             STR_35 7D5F  
                           STR_27 7CD3                             STR_28 7FFC  
                           STR_36 7FC2                             STR_44 7DB0  
                 __end_of___awmod 3334                             STR_37 7D5F  
                           STR_29 7DD8                             STR_45 7D88  
                           STR_46 7FD0                             STR_38 7F8A  
                           STR_39 7FDE                   __end_of___lldiv 361A  
                 ___awdiv@divisor 0029               ??_formatar_receitas 0029  
                 __end_of___lwdiv 38EA                             i2l151 425C  
                           i2l152 425E                   ___awdiv@counter 002B  
                           _RCREG 000FAE                             _TMR1H 000FCF  
                           _TMR1L 000FCE                             _PORTD 000F83  
                   __CFG_USBDIV$1 000000                             _TRISD 000F95  
                           _TXREG 000FAD  __size_of_manipula_atuadores_init 0068  
                   __CFG_WRT0$OFF 000000                     __CFG_WRT1$OFF 000000  
                   __CFG_WRT2$OFF 000000               ___lmul@multiplicand 002B  
                   __CFG_WRT3$OFF 000000                   __end_of_dispLCD 3F1E  
                  _txStatusEUSART 4474                    __CFG_EBTR0$OFF 000000  
                  __CFG_FCMEN$OFF 000000                    __CFG_EBTR1$OFF 000000  
                  __CFG_EBTR2$OFF 000000                    __CFG_EBTR3$OFF 000000  
                   __CFG_WRTB$OFF 000000                     __CFG_WRTC$OFF 000000  
                   __CFG_WRTD$OFF 000000                 ??_fifo_disponivel 0027  
           __end_of_teclado_borda 4088                    __CFG_EBTRB$OFF 000000  
                           _delay 41D0                             _setT1 44EC  
                 salvar_receita@i 0032                             main@i 00A1  
                           main@j 00A2                             pclath 000FFA  
                           tablat 000FF5                   _I2C_ack_receive 44A4  
                           plusw1 000FE3                             plusw2 000FDB  
                    main@vetorOut 00AE                             ttemp5 005F  
                           ttemp6 0062                             ttemp7 0066  
                           status 000FD8                 __end_of_I2C_start 44A4  
                           wtemp8 005F                    __CFG_ICPRT$OFF 000000  
       __end_of_formatar_receitas 43BC                   EEPROM_read@addr 0027  
                   _indice_passos 005B              __end_of_dispLCD_init 4136  
                  __CFG_MCLRE$OFF 000000              __size_of_EEPROM_read 0012  
                 __initialization 37D6                      __end_of_main 21D2  
                ?_dispLCD_dataReg 0027                            ??_main 0045  
                       ??_MCP4725 0043                     __activetblptr 000002  
                   ?_initSerialIO 0027              __size_of_dispLCD_clr 0008  
          __end_of_txStatusEUSART 448C              __size_of_dispLCD_num 01A2  
            __size_of_dispLCD_str 006A              __size_of_alt_atuador 009E  
                ?_dispLCD_instReg 0027                            ?_delay 0027  
                    ?_salvar_dado 002D                            _ADCON1 000FC1  
                          ?_setT1 002D                            _EEDATA 000FA8  
                          _EECON2 000FA7                  ___awdiv@dividend 0027  
                          _I2C_tx 43BC              __size_of_dignum_conc 004E  
                          _EEPROM 0047                  ?_getIndicePassos 0027  
                          i2l1061 4196                            i2l1062 419C  
                          i2l1063 419C                            i2l3191 425C  
                          i2l3183 4234                            i2l3185 4244  
                          i2l2491 4188                            i2l3187 4252  
                          i2l3189 4254                            i2l2487 416A  
                          i2l2489 4172              __size_of_fifo_delete 00B8  
                __end_of_dac_init 40C6                   ??_addContCiclos 0027  
            __size_of_end_receita 0028              __size_of_fifo_indice 0008  
            __size_of_fifo_lerPos 001A                            _SSPADD 000FC8  
                          _SSPBUF 000FC9                     main@init_cond 00B2  
                 ler_sensor@passo 002B                  __end_of_codifica 29CE  
                  __CFG_XINST$OFF 000000                  __end_of_fifo_add 3BDC  
                __end_of_fifo_tam 4574           __end_of_addIndicePassos 445C  
                _Wifi_autoconnect 000000                            _t1cont 0001  
                          ___lmul 395C                         ??___aldiv 003B  
                          ___wmul 42BE                         ??___awdiv 002B  
                       ??___awmod 002B                            _ciclos 000F  
                       ??___lldiv 002F                 _fifo_alinharPrint 2D8A  
                    ?_timer1_init 0027                         ??___lwdiv 002B  
                          _eusart 00D1                            delay@t 0027  
                          clear_0 383C                            clear_1 384E  
                __end_of_txEUSART 458C                            _search 000000  
                ___awdiv@quotient 002D                            _teclas 00E1  
                 ___awmod@divisor 0029                ?_fifo_alinharPrint 0027  
                       ??_dispLCD 0031                   ___awmod@counter 002B  
                  ??_initSerialIO 002C                            main@pt 009D  
                    __pdataBANK0l 00BD                    _buscar_receita 3D6E  
                __end_of_posAtual 440E                   ?_txStatusEUSART 0027  
                          setT1@c 002D                      __pdataCOMRAM 0047  
                      Wifi_mode@d 002A                __size_of_Wifi_mode 0090  
                    __mediumconst 7C2E                         ?_I2C_init 0034  
                          tblptrh 000FF7                            tblptrl 000FF6  
             ??_fifo_alinharPrint 0032                            tblptru 000FF8  
                       ?_I2C_stop 0027           __end_of_I2C_ack_receive 44BC  
           __end_of_getContCiclos 455A              _Wifi_config_servidor 000000  
                   main@vetor_aux 0076                  __end_of_statusT1 4512  
          salva_atuadores_init@pt 002E              _salva_atuadores_init 3748  
                      __accesstop 0060           __end_of__initialization 3854  
            __size_of_buscar_dado 0028                   __CFG_PBADEN$OFF 000000  
        __size_of_deletar_receita 0054                fp__deletar_receita 0000  
               _serialIObyteShift 3BDC                    _salvar_receita 3D0E  
      __size_of_formatar_receitas 001E           __size_of_dispLCD_lincol 0066  
                   ___rparam_used 000001                    __pcstackBANK0h 0060  
              ?_serialIObyteShift 0027                __size_of_dac_write 0048  
       __end_of_fifo_alinharPrint 2EA2                    __pcstackCOMRAM 0027  
           __size_of_EEPROM_write 0032          __size_of_resetContCiclos 000A  
                    __pidataBANK1 3DCC                     __end_of_delay 4202  
                   __end_of_setT1 4500                 fifo_add_control@c 0036  
            __size_of_ler_atuador 00BC               ??_serialIObyteShift 0027  
          __end_of_buscar_receita 3DCC                __size_of_getCiclos 0022  
         _manipula_atuadores_init 3AA4         __size_of_fifo_add_control 0054  
               initSerialIO@ptrIn 0027                __size_of_fifo_adrs 000E  
                         I2C_tx@b 0027                        ??_I2C_init 0038  
    __end_of_fifo_indicePrint_dec 4474                        ??_I2C_stop 0027  
    __end_of_fifo_indicePrint_inc 3CA8                           ??_delay 0029  
                         ??_setT1 0031                teclado_borda@tecla 002D  
                         ?_I2C_tx 0027             ?_salva_atuadores_init 0027  
                      __pbssBANK1 015A             __size_of_dispLCD_init 0036  
       __end_of_serialIObyteShift 3C42            __end_of_salvar_receita 3D6E  
                      _decodifica 29CE                     ?_teclado_init 0027  
                   ?_teclado_scan 0027                __size_of_intt1_1ms 0034  
                    _EEPROM_write 419E                  teclado_borda@aux 002C  
           __end_of_dignum_apagar 42BE                 __end_of_Wifi_mode 3748  
                ?_addIndicePassos 0027                    main@contPassos 0074  
                         ?___lmul 0027                           ?___wmul 0027  
                 _fifo_disponivel 4428                    ___lmul@product 002F  
         serialIObyteShift@dataIn 0027                   ?_buscar_receita 002D  
                      _dignum_tam 3FBA                __size_of_set_passo 00E6  
                         _MCP4725 437C                         ?_dac_init 0027  
                      _fifo_print 21D2                __size_of_printExec 01A2  
                         _LCDbits 000F8A                      _dispLCD_init 4100  
              __size_of_wifi_init 0030                __size_of_wifi_send 00BA  
                ?_I2C_ack_receive 0027                 __end_of_dac_write 404A  
                         i2u84_40 4188                           i2u84_41 4184  
                       ?_codifica 0027                         ?_fifo_add 0027  
                       ?_fifo_tam 0027                   __size_of_I2C_tx 001E  
            __size_of_salvar_dado 0022                    ??_teclado_init 0027  
                  ??_teclado_scan 0027                   __CFG_VREGEN$OFF 000000  
                 ?_salvar_receita 002D                     ?_serialIOload 0027  
                   ?_serialIOscan 0027                        _initEUSART 39CE  
               __end_of_getCiclos 437C                         ?_txEUSART 0027  
            __end_of_initSerialIO 4290                       posAtual@ind 0028  
                EEPROM_write@addr 0028                  EEPROM_write@data 0027  
                         __Hparam 0000                 __end_of_fifo_adrs 4532  
                       ?_posAtual 0027                           __Lparam 0000  
                       _I2C_start 448C        __size_of_fifo_alinharPrint 0118  
                         _Wifi_ip 000000                 ??_deletar_receita 002B  
                         ___aldiv 2C56                           ___awdiv 2FA6  
                 __size_of___lmul 0072                           ___awmod 325C  
                      _ler_sensor 2B22                           ___lldiv 3562  
                 __size_of___wmul 002A           __size_of_init_atuadores 000A  
                         ___lwdiv 3862                         ?_statusT1 0027  
          deletar_receita@receita 002D         ??_manipula_atuadores_init 002A  
                 __CFG_STVREN$OFF 000000                           __pcinit 37D6  
                         __ramtop 0800                           _dispLCD 3ECE  
            __size_of_timer1_init 001A                           __ptext0 0012  
                         __ptext1 4202                           __ptext2 39CE  
                         __ptext3 43DA                           __ptext4 4532  
                         __ptext5 404A                           __ptext6 3178  
                         __ptext7 4500                           __ptext8 3092  
                         __ptext9 44EC                     teclado_scan@c 002B  
                   teclado_scan@l 002A                        ??_dac_init 002A  
               __end_of_intt1_1ms 419E                 ??_resetContCiclos 0027  
                         _atuador 0013           __size_of_fifo_add_ciclo 000A  
                       _T1CONbits 000FCD                      __size_of_irq 425A  
         __size_of_fifo_add_tempo 0068                  ___awmod@dividend 0027  
               salvar_receita@aux 002F                  ___aldiv@dividend 0033  
                 _fifo_print$1053 0031                     _receita_livre 000000  
                      ??_codifica 0029            ??_salva_atuadores_init 002A  
                      ??_fifo_add 0036                        ??_fifo_tam 0027  
                         main@aux 0075                           main@num 00B4  
                         main@ptr 009F                    __pintcode_body 4232  
            end_of_initialization 3854                    ??_serialIOload 0027  
                  ??_serialIOscan 002A        __size_of_serialIObyteShift 0066  
                     ?_decodifica 0027                     __Lmediumconst 7C2E  
                         int_func 4232                    dispLCD_num@col 0032  
                  dispLCD_num@div 003E                    dispLCD_num@lin 003B  
                  dispLCD_num@tam 0035                        ??_txEUSART 0027  
                  dispLCD_num@num 0033                    _dispLCD_lincol 3CA8  
                   ??_EEPROM_read 0027                 __end_of_set_passo 3178  
                  dispLCD_str@lin 0030                    dispLCD_str@str 002E  
                      dispLCD@col 002E                   ___lldiv@divisor 002B  
                      dispLCD@lin 0032                        dispLCD@pos 0031  
                      dispLCD@str 002F           __end_of_fifo_disponivel 4442  
               __end_of_printExec 26C4                   ___lldiv@counter 0033  
                      ??_posAtual 0028                        ?_I2C_start 0027  
               __end_of_wifi_init 4232                 __end_of_wifi_send 34AA  
                    I2C_init@freq 0034                         _RCSTAbits 000FAB  
            _fifo_indicePrint_dec 445C                  ___aldiv@quotient 003D  
            _fifo_indicePrint_inc 3C42                           postdec1 000FE5  
                         postdec2 000FDD                           postinc0 000FEE  
                         postinc2 000FDE            __size_of_teclado_borda 003E  
                ??_txStatusEUSART 0027                fifo_alinharPrint@i 0034  
                      ??_statusT1 002B                     ??_dispLCD_clr 0029  
                   ??_dispLCD_num 0036                     ??_dispLCD_str 0030  
                   ??_alt_atuador 0027                       ?_dignum_tam 002F  
                       _PORTAbits 000F80                  _fifo_add_control 3E26  
            fp__formatar_receitas 0000                       ?_fifo_print 0027  
                      fp__dispLCD 0000                     ??_dignum_conc 002F  
                       _TRISAbits 000F92                         _TRISBbits 000F93  
        __size_of_dispLCD_dataReg 004E                     ??_fifo_delete 0036  
                   ??_end_receita 0029                     ??_fifo_indice 0027  
                   ??_fifo_lerPos 0027                 __size_of_I2C_init 003A  
               __size_of_I2C_stop 0018                     _teclaAnterior 0011  
 __end_of_manipula_atuadores_init 3B0C            __end_of_dispLCD_lincol 3D0E  
                  __end_of_I2C_tx 43DA    manipula_atuadores_init@atuador 002A  
        __size_of_dispLCD_instReg 0104                        main@ciclos 00B0  
                     ?_initEUSART 0034                         _TXSTAbits 000FAC  
             dignum_apagar@ptrNum 002E                        main@estado 00BB  
           __end_of_addContCiclos 459E          __size_of_getIndicePassos 0008  
           ?_fifo_indicePrint_dec 0027             ?_fifo_indicePrint_inc 0027  
                     wifi_init@br 003C               __end_of_EEPROM_read 4524  
                     ?_ler_sensor 0027                     __pidataBANK0l 4136  
                  __end_of___lmul 39CE                    __end_of___wmul 42E8  
                   __pidataCOMRAM 44D4                       _BAUDCTLbits 000FB8  
                  set_passo@passo 002B              __end_of_teclado_init 453C  
            __end_of_teclado_scan 325C               __size_of_decodifica 0154  
             start_initialization 37D6               __end_of_dispLCD_clr 4584  
                   posAtual@passo 0029               __end_of_dispLCD_num 2866  
             __end_of_dispLCD_str 3AA4               __end_of_alt_atuador 36B8  
                     __end_of_irq 4262                     _teclado_borda 404A  
                   ??_buscar_dado 0030                          ??_I2C_tx 0027  
           __size_of_initSerialIO 002E                   fifo_add_tempo@t 0036  
                 ?_dispLCD_lincol 0029               __end_of_dignum_conc 3FBA  
              initSerialIO@length 002B               __size_of_dignum_tam 0048  
             __end_of_fifo_delete 3562                initSerialIO@ptrOut 0029  
             __end_of_end_receita 4338               __end_of_fifo_indice 457C  
             __end_of_fifo_lerPos 4428               __size_of_fifo_print 0350  
                ?_fifo_disponivel 0027                 dispLCD_lincol@col 0029  
               dispLCD_lincol@aux 002D                 dispLCD_lincol@lin 002C  
                     ??_I2C_start 0027                   main@meAtuadores 00AF  
                   ??_ler_atuador 0027                  ??_buscar_receita 002F  
                        ??___lmul 002F                          ??___wmul 002B  
                  _init_atuadores 4546            __size_of_getContCiclos 000A  
                     __pdataBANK1 0100                         _Wifi_mode 36B8  
                       _Wifi_scan 000000                  __CFG_LPT1OSC$OFF 000000  
            __end_of_serialIOload 4592              __end_of_serialIOscan 395C  
                        ?_MCP4725 0041                    _fifo_add_ciclo 455A  
                ler_atuador@tecla 0029                       __pbssBANK0h 00F1  
                    _initSerialIO 4262               __size_of_initEUSART 006C  
                  _fifo_add_tempo 3B0C                       __pbssCOMRAM 0001  
               __size_of_dac_init 003E                  ??_salvar_receita 002F  
                  ?_teclado_borda 0027               __size_of_ler_sensor 0134  
               __size_of_codifica 0168                 __size_of_fifo_add 0068  
                       _dac_write 4002                 __size_of_fifo_tam 0008  
                 _deletar_receita 3E7A                 ??_dispLCD_dataReg 0027  
                     _EEPROM_read 4512               __end_of_buscar_dado 4310  
          ??_fifo_indicePrint_dec 0027            ??_fifo_indicePrint_inc 0027  
               __size_of_txEUSART 0008                  ___lwdiv@dividend 0027  
          __end_of_init_atuadores 4550                   _resetContCiclos 453C  
                       _getCiclos 435A                 ??_dispLCD_instReg 0027  
                       __pintcode 0008                     __pmediumconst 7C2E  
                        ?___aldiv 0033                          ?___awdiv 0027  
               __size_of_posAtual 001A                          ?___awmod 0027  
                        ?___lldiv 0027                          ?___lwdiv 0027  
                       _fifo_adrs 4524                     serialIOscan@i 002F  
                   serialIOscan@j 002E                        ?_Wifi_mode 0027  
          __end_of_fifo_add_ciclo 4564                       _dispLCD_clr 457C  
                     _dispLCD_num 26C4                       _dispLCD_str 3A3A  
               ??_getIndicePassos 0027            __end_of_fifo_add_tempo 3B74  
                        ?_dispLCD 002E                       _alt_atuador 361A  
             __end_of_ler_atuador 33F0                 __size_of_statusT1 0012  
        __size_of_addIndicePassos 001A                         _ind_print 005C  
                   _rxErrorEUSART 000000                          _I2C_init 40C6  
        serialIObyteShift@dataBit 0029                          _I2C_stop 44BC  
          __size_of_dignum_apagar 002E                       _dignum_conc 3F6C  
        serialIObyteShift@dataOut 0028                         _intt1_1ms 416A  
                   ??_salvar_dado 002F                  ___lwdiv@quotient 002B  
                   _getContCiclos 4550                    __size_of_delay 0032  
                     _fifo_delete 34AA                    __size_of_setT1 0014  
                     _end_receita 4310                       _fifo_indice 4574  
                     _fifo_lerPos 440E                        ?_dac_write 002A  
                    ??_decodifica 0029                 teclado_scan@tecla 0029  
                 ___aldiv@divisor 0037                   ___aldiv@counter 003B  
                  ___wmul@product 002B          __size_of_I2C_ack_receive 0018  
        __end_of_fifo_add_control 3E7A                          _PIE1bits 000F9D  
                        i2u155_40 4244                          i2u155_41 4240  
                        i2u156_40 4252                          i2u156_41 424E  
                        _PIR1bits 000F9E                   ?_init_atuadores 0027  
                        _SERIALIO 000F80                        ?_getCiclos 0027  
                       _set_passo 3092                  __CFG_WDTPS$32768 000000  
           __size_of_teclado_init 000A             __size_of_teclado_scan 00E4  
                       main@F3508 0146                         main@F3482 00F2  
                       main@F3484 00F1                    dignum_conc@dig 0033  
                   ??_timer1_init 0027                        ?_fifo_adrs 0027  
                       _printExec 2522                    _printExec$1075 0041  
                dispLCD_dataReg@d 0028                          _SPBRbits 000099  
                 ?_fifo_add_ciclo 0027                         _wifi_init 4202  
                       _wifi_send 33F0                      ??_dignum_tam 0031  
                     _cont_ciclos 000D                   ?_fifo_add_tempo 0027  
                       main@i_643 00A3                         main@i_661 00A5  
                       main@i_664 00A7                         main@i_649 009C  
                       main@i_694 00A9                         main@i_697 00AB  
               ___wmul@multiplier 0027                         main@j_644 00A4  
                       main@j_662 00A6                         main@j_665 00A8  
                       main@j_695 00AA                initEUSART@baudRate 0034  
                       main@j_698 00AC               fifo_print@completar 0033  
                deletar_receita@i 002E                      ??_fifo_print 002F  
              __end_of_decodifica 2B22                  __size_of_MCP4725 0022  
                       main@botao 00B3                       _lenSerialIO 0012  
                 ??_teclado_borda 002C                         main@tecla 00BC  
         __end_of_deletar_receita 3ECE                        ?_intt1_1ms 0027  
                  ?_getContCiclos 0027                 _resetIndicePassos 4592  
               Wifi_cipsend@F3292 0128                 Wifi_cipsend@F3295 015A  
               ___lmul@multiplier 0027                         copy_data0 37EA  
                       copy_data1 380A                         copy_data2 382A  
                     _buscar_dado 42E8     __size_of_salva_atuadores_init 008E  
              ?_resetIndicePassos 0027           __end_of_resetContCiclos 4546  
                    ??_initEUSART 0038                      _teclado_init 4532  
             __end_of_salvar_dado 435A                      _teclado_scan 3178  
                      _EECON1bits 000FA6                __end_of_dignum_tam 4002  
             ??_resetIndicePassos 0027                          __Hrparam 0000  
                   _dignum_apagar 4290                     ler_sensor@ptr 0027  
              __end_of_fifo_print 2522                          __Lrparam 0000  
        ?_manipula_atuadores_init 0027                        ?_set_passo 0027  
           __size_of_serialIOload 0006             __size_of_serialIOscan 0072  
                    getCiclos@aux 0029                  dispLCD_instReg@i 0028  
                     _ler_atuador 3334                      ??_ler_sensor 0029  
                       txEUSART@d 0027                        ?_printExec 0040  
                __size_of___aldiv 0134                       ??_Wifi_mode 002A  
                __size_of___awdiv 00EC                  __size_of___awmod 00D8  
                __size_of___lldiv 00B8                        ?_wifi_init 003C  
                      ?_wifi_send 0028                  __size_of___lwdiv 0088  
                 fp__dispLCD_init 0000                buscar_receita@data 002D  
              buscar_receita@adrs 0031                  dispLCD_num@sinal 003D  
           fifo_alinharPrint@cont 0033       manipula_atuadores_init@mask 002C  
                        _dac_init 4088                  __size_of_dispLCD 0050  
             __end_of_timer1_init 43F4                    _rxStatusEUSART 000000  
              __end_of_initEUSART 3A3A         __end_of_resetIndicePassos 4598  
                     decodifica@d 0027                          _main$653 0086  
                        _main$680 0092                          _main$672 0088  
                        _main$681 0094                          _main$682 0096  
                        _main$683 0098                          _main$676 008A  
                        _main$685 009A                          _main$677 008C  
                        _main$678 008E                          _main$679 0090  
                ??_dispLCD_lincol 002A                   ___lwdiv@divisor 0029  
                 ___lwdiv@counter 002D                          _codifica 2866  
                        __ptext10 38EA                          __ptext11 458C  
                        __ptext20 43F4                          __ptext12 3BDC  
                        __ptext21 4564                          __ptext13 3D0E  
                        __ptext30 439E                          __ptext22 440E  
                        __ptext14 4338                          __ptext31 456C  
                        __ptext23 26C4                          __ptext15 3748  
                        __ptext40 361A                          __ptext32 21D2  
                        __ptext24 3AA4                          __ptext16 3334  
                        __ptext41 4524                          __ptext33 325C  
                        __ptext25 2B22                          __ptext17 4592  
                        __ptext50 3A3A                          __ptext42 3B0C  
                        __ptext34 3C42                          __ptext26 4546  
                        __ptext18 453C                          __ptext51 4100  
                        __ptext43 3E26                          __ptext35 445C  
                        __ptext27 4262                          __ptext19 2522  
                        __ptext60 3862                          __ptext52 457C  
                        __ptext44 455A                          __ptext36 4574  
                        __ptext28 4550                          __ptext61 3E7A  
                        __ptext53 3ECE                          __ptext45 3B74  
                        __ptext37 4428                          __ptext29 435A  
                        __ptext70 2C56                          __ptext62 419E  
                        __ptext54 3CA8                          __ptext46 2D8A  
                        __ptext38 34AA                          __ptext71 36B8  
                        __ptext63 3D6E                          __ptext55 2EA2  
                        __ptext47 3FBA                          __ptext39 29CE  
                        __ptext80 448C                          __ptext72 33F0  
                        __ptext64 42E8                          __ptext56 3F1E  
                        __ptext48 2FA6                          __ptext81 44A4  
                        __ptext73 4474                          __ptext65 4310  
                        __ptext57 3F6C                          __ptext49 2866  
                        __ptext82 44BC                          __ptext74 4584  
                        __ptext66 4512                          __ptext58 42BE  
                        __ptext83 40C6                          __ptext75 437C  
                        __ptext67 4442                          __ptext59 4290  
                        __ptext84 3562                          __ptext76 4002  
                        __ptext68 4598                          __ptext77 4088  
                        __ptext69 395C                          __ptext86 416A  
                        __ptext78 41D0                          __ptext87 0000  
                        __ptext79 43BC                          _fifo_add 3B74  
               ??_addIndicePassos 0027                          _fifo_tam 456C  
                        _ind_fila 005D                       ??_dac_write 002C  
              __end_of_ler_sensor 2C56                          _rxEUSART 000000  
                   ?_EEPROM_write 0027                      _serialIOload 458C  
                    _serialIOscan 38EA                _rxResetErrorEUSART 000000  
                   __size_of_main 21C0                          _txEUSART 4584  
              salvar_receita@data 002D                salvar_receita@adrs 0031  
                  ?_dignum_apagar 002E                          _posAtual 43F4  
                    dispLCD_str@c 0031                       ??_getCiclos 0029  
               ??_I2C_ack_receive 0027                          int$flags 005E  
                     ??_fifo_adrs 0029                fifo_print@indPrint 0034  
                   fifo_add@passo 0036                          _statusT1 4500  
                     MCP4725@Vout 0041                     dignum_tam@tam 0031  
                   dignum_tam@num 002F                          main@lema 0060  
                    _Wifi_cipsend 000000                      _Wifi_connect 000000  
           __CFG_CPUDIV$OSC1_PLL2 000000                      set_passo@ptr 0027  
  salva_atuadores_init@condi_init 002A                   ??_getContCiclos 0029  
                      _INTCONbits 000FF2                 Wifi_connect@F3282 0100  
                   ?_dispLCD_init 0027            __size_of_addContCiclos 0006  
                    codifica@dado 0027                   _dispLCD_dataReg 3F1E  
                    codifica@tipo 002B                       ??_intt1_1ms 0027  
                ?_deletar_receita 0027           __size_of_txStatusEUSART 0018  
               fp__txStatusEUSART 0000                formatar_receitas@i 0029  
                 buscar_dado@data 002E                   buscar_dado@adrs 0032  
                     _salvar_dado 4338                    fp__dispLCD_clr 0000  
                  fp__dispLCD_num 0000                    fp__dispLCD_str 0000  
               buscar_receita@aux 002F                   dispLCD_num@size 003C  
            fifo_alinharPrint@aux 0035        manipula_atuadores_init@aux 002B  
                 _dispLCD_instReg 2EA2                          intlevel2 0000  
                  ??_EEPROM_write 0028                      fp__Wifi_mode 0000  
                ?_resetContCiclos 0027                  ___lldiv@dividend 0027  
                    ?_EEPROM_read 0027                   _getIndicePassos 4564  
               dignum_conc@ptrNum 002D                       ??_set_passo 0029  
               fifo_print@comando 0037                       ??_printExec 0041  
        salva_atuadores_init@F108 0005                       _timer1_init 43DA  
                     ??_wifi_init 0040                      _ptrSerialOut 0009  
                     ??_wifi_send 002A                      ?_dispLCD_clr 0027  
                    ?_dispLCD_num 0032                      ?_dispLCD_str 002E  
        __size_of_fifo_disponivel 001A                      ?_alt_atuador 0027  
        salva_atuadores_init@dado 0030                    buscar_dado@col 002D  
                  buscar_dado@aux 0030              fifo_add_ciclo@ciclos 0027  
        salva_atuadores_init@mask 0031                    ??_dispLCD_init 002A  
                ___lldiv@quotient 002F        __size_of_resetIndicePassos 0006  
                    ___aldiv@sign 003C                      ?_dignum_conc 002D  
                     _SSPCON1bits 000FC6                      end_receita@x 0027  
                     _SSPCON2bits 000FC5                  fifo_print@atraso 0036  
                    ?_fifo_delete 0027                       _ptrSerialIn 000B  
                    fifo_lerPos@i 0027                      ?_end_receita 0027  
                    _wifi_receive 000000                      ?_fifo_indice 0027  
                    ?_fifo_lerPos 0027                   buscar_receita@i 0032  
                ??_init_atuadores 0027                   ??_dignum_apagar 0030  
               ?_fifo_add_control 0027                     _addContCiclos 4598  
                ??_fifo_add_ciclo 0029                       fifo_print@i 0035  
                   fp__initEUSART 0000  
