

Microchip Technology PIC18 LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Tue Nov 16 16:01:43 2021

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC18F4550 Definitions
    37                           ; 
    38  0000                     fsr0 equ 0FE9h
    39  0000                     fsr0h equ 0FEAh
    40  0000                     fsr0l equ 0FE9h
    41  0000                     fsr1 equ 0FE1h
    42  0000                     fsr1h equ 0FE2h
    43  0000                     fsr1l equ 0FE1h
    44  0000                     fsr2 equ 0FD9h
    45  0000                     fsr2h equ 0FDAh
    46  0000                     fsr2l equ 0FD9h
    47  0000                     indf0 equ 0FEFh
    48  0000                     indf1 equ 0FE7h
    49  0000                     indf2 equ 0FDFh
    50  0000                     intcon equ 0FF2h
    51  0000                     nvmcon equ 00h
    52  0000                     pcl equ 0FF9h
    53  0000                     pclath equ 0FFAh
    54  0000                     pclatu equ 0FFBh
    55  0000                     plusw0 equ 0FEBh
    56  0000                     plusw1 equ 0FE3h
    57  0000                     plusw2 equ 0FDBh
    58  0000                     postdec0 equ 0FEDh
    59  0000                     postdec1 equ 0FE5h
    60  0000                     postdec2 equ 0FDDh
    61  0000                     postinc0 equ 0FEEh
    62  0000                     postinc1 equ 0FE6h
    63  0000                     postinc2 equ 0FDEh
    64  0000                     preinc0 equ 0FECh
    65  0000                     preinc1 equ 0FE4h
    66  0000                     preinc2 equ 0FDCh
    67  0000                     prod equ 0FF3h
    68  0000                     prodh equ 0FF4h
    69  0000                     prodl equ 0FF3h
    70  0000                     status equ 0FD8h
    71  0000                     tablat equ 0FF5h
    72  0000                     tblptr equ 0FF6h
    73  0000                     tblptrh equ 0FF7h
    74  0000                     tblptrl equ 0FF6h
    75  0000                     tblptru equ 0FF8h
    76  0000                     tosl equ 0FFDh
    77  0000                     wreg equ 0FE8h
    78  0000                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc   macro
    64                           	bcf	status,0
    65                           endm
    66  0000                     setc   macro
    67                           	bsf	status,0
    68                           endm
    69  0000                     clrz   macro
    70                           	bcf	status,2
    71                           endm
    72  0000                     setz   macro
    73                           	bsf	status,2
    74                           endm
    75  0000                     skipnz macro
    76                           	btfsc	status,2
    77                           endm
    78  0000                     skipz  macro
    79                           	btfss	status,2
    80                           endm
    81  0000                     skipnc macro
    82                           	btfsc	status,0
    83                           endm
    84  0000                     skipc  macro
    85                           	btfss	status,0
    86                           endm
    87  0000                     pushw macro
    88                           	movwf postinc1
    89                           endm
    90  0000                     pushf macro arg1
    91                           	movff arg1, postinc1
    92                           endm
    93  0000                     popw macro
    94                           	movf postdec1,f
    95                           	movf indf1,w
    96                           endm
    97  0000                     popf macro arg1
    98                           	movf postdec1,f
    99                           	movff indf1,arg1
   100                           endm
   101  0000                     popfc macro arg1
   102                           	movff plusw1,arg1
   103                           	decfsz fsr1,f
   104                           endm
   105  0000                     	global	__ramtop
   106                           	global	__accesstop
   107                           # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   108                           SPPDATA equ 0F62h ;# 
   109  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   110                           SPPCFG equ 0F63h ;# 
   111  0000                     # 151 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   112                           SPPEPS equ 0F64h ;# 
   113  0000                     # 225 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   114                           SPPCON equ 0F65h ;# 
   115  0000                     # 251 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   116                           UFRM equ 0F66h ;# 
   117  0000                     # 258 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   118                           UFRML equ 0F66h ;# 
   119  0000                     # 336 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   120                           UFRMH equ 0F67h ;# 
   121  0000                     # 376 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   122                           UIR equ 0F68h ;# 
   123  0000                     # 432 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   124                           UIE equ 0F69h ;# 
   125  0000                     # 488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   126                           UEIR equ 0F6Ah ;# 
   127  0000                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   128                           UEIE equ 0F6Bh ;# 
   129  0000                     # 590 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   130                           USTAT equ 0F6Ch ;# 
   131  0000                     # 650 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   132                           UCON equ 0F6Dh ;# 
   133  0000                     # 701 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   134                           UADDR equ 0F6Eh ;# 
   135  0000                     # 765 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   136                           UCFG equ 0F6Fh ;# 
   137  0000                     # 844 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   138                           UEP0 equ 0F70h ;# 
   139  0000                     # 952 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   140                           UEP1 equ 0F71h ;# 
   141  0000                     # 1060 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   142                           UEP2 equ 0F72h ;# 
   143  0000                     # 1168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   144                           UEP3 equ 0F73h ;# 
   145  0000                     # 1276 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   146                           UEP4 equ 0F74h ;# 
   147  0000                     # 1384 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   148                           UEP5 equ 0F75h ;# 
   149  0000                     # 1492 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   150                           UEP6 equ 0F76h ;# 
   151  0000                     # 1600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   152                           UEP7 equ 0F77h ;# 
   153  0000                     # 1708 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   154                           UEP8 equ 0F78h ;# 
   155  0000                     # 1784 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   156                           UEP9 equ 0F79h ;# 
   157  0000                     # 1860 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   158                           UEP10 equ 0F7Ah ;# 
   159  0000                     # 1936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   160                           UEP11 equ 0F7Bh ;# 
   161  0000                     # 2012 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   162                           UEP12 equ 0F7Ch ;# 
   163  0000                     # 2088 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   164                           UEP13 equ 0F7Dh ;# 
   165  0000                     # 2164 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   166                           UEP14 equ 0F7Eh ;# 
   167  0000                     # 2240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   168                           UEP15 equ 0F7Fh ;# 
   169  0000                     # 2316 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   170                           PORTA equ 0F80h ;# 
   171  0000                     # 2455 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   172                           PORTB equ 0F81h ;# 
   173  0000                     # 2565 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   174                           PORTC equ 0F82h ;# 
   175  0000                     # 2707 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   176                           PORTD equ 0F83h ;# 
   177  0000                     # 2828 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   178                           PORTE equ 0F84h ;# 
   179  0000                     # 2975 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   180                           LATA equ 0F89h ;# 
   181  0000                     # 3075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   182                           LATB equ 0F8Ah ;# 
   183  0000                     # 3187 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   184                           LATC equ 0F8Bh ;# 
   185  0000                     # 3265 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   186                           LATD equ 0F8Ch ;# 
   187  0000                     # 3377 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   188                           LATE equ 0F8Dh ;# 
   189  0000                     # 3429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   190                           TRISA equ 0F92h ;# 
   191  0000                     # 3434 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   192                           DDRA equ 0F92h ;# 
   193  0000                     # 3627 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   194                           TRISB equ 0F93h ;# 
   195  0000                     # 3632 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   196                           DDRB equ 0F93h ;# 
   197  0000                     # 3849 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   198                           TRISC equ 0F94h ;# 
   199  0000                     # 3854 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   200                           DDRC equ 0F94h ;# 
   201  0000                     # 4003 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   202                           TRISD equ 0F95h ;# 
   203  0000                     # 4008 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   204                           DDRD equ 0F95h ;# 
   205  0000                     # 4225 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   206                           TRISE equ 0F96h ;# 
   207  0000                     # 4230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   208                           DDRE equ 0F96h ;# 
   209  0000                     # 4327 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   210                           OSCTUNE equ 0F9Bh ;# 
   211  0000                     # 4386 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   212                           PIE1 equ 0F9Dh ;# 
   213  0000                     # 4470 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   214                           PIR1 equ 0F9Eh ;# 
   215  0000                     # 4554 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   216                           IPR1 equ 0F9Fh ;# 
   217  0000                     # 4638 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   218                           PIE2 equ 0FA0h ;# 
   219  0000                     # 4709 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   220                           PIR2 equ 0FA1h ;# 
   221  0000                     # 4780 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   222                           IPR2 equ 0FA2h ;# 
   223  0000                     # 4851 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   224                           EECON1 equ 0FA6h ;# 
   225  0000                     # 4917 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   226                           EECON2 equ 0FA7h ;# 
   227  0000                     # 4924 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   228                           EEDATA equ 0FA8h ;# 
   229  0000                     # 4931 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   230                           EEADR equ 0FA9h ;# 
   231  0000                     # 4938 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   232                           RCSTA equ 0FABh ;# 
   233  0000                     # 4943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   234                           RCSTA1 equ 0FABh ;# 
   235  0000                     # 5148 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   236                           TXSTA equ 0FACh ;# 
   237  0000                     # 5153 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   238                           TXSTA1 equ 0FACh ;# 
   239  0000                     # 5404 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   240                           TXREG equ 0FADh ;# 
   241  0000                     # 5409 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   242                           TXREG1 equ 0FADh ;# 
   243  0000                     # 5416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   244                           RCREG equ 0FAEh ;# 
   245  0000                     # 5421 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   246                           RCREG1 equ 0FAEh ;# 
   247  0000                     # 5428 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   248                           SPBRG equ 0FAFh ;# 
   249  0000                     # 5433 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   250                           SPBRG1 equ 0FAFh ;# 
   251  0000                     # 5440 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   252                           SPBRGH equ 0FB0h ;# 
   253  0000                     # 5447 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   254                           T3CON equ 0FB1h ;# 
   255  0000                     # 5568 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   256                           TMR3 equ 0FB2h ;# 
   257  0000                     # 5575 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   258                           TMR3L equ 0FB2h ;# 
   259  0000                     # 5582 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   260                           TMR3H equ 0FB3h ;# 
   261  0000                     # 5589 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   262                           CMCON equ 0FB4h ;# 
   263  0000                     # 5679 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   264                           CVRCON equ 0FB5h ;# 
   265  0000                     # 5764 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   266                           ECCP1AS equ 0FB6h ;# 
   267  0000                     # 5769 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   268                           CCP1AS equ 0FB6h ;# 
   269  0000                     # 5926 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   270                           ECCP1DEL equ 0FB7h ;# 
   271  0000                     # 5931 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   272                           CCP1DEL equ 0FB7h ;# 
   273  0000                     # 6064 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   274                           BAUDCON equ 0FB8h ;# 
   275  0000                     # 6069 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   276                           BAUDCTL equ 0FB8h ;# 
   277  0000                     # 6244 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   278                           CCP2CON equ 0FBAh ;# 
   279  0000                     # 6308 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   280                           CCPR2 equ 0FBBh ;# 
   281  0000                     # 6315 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   282                           CCPR2L equ 0FBBh ;# 
   283  0000                     # 6322 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   284                           CCPR2H equ 0FBCh ;# 
   285  0000                     # 6329 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   286                           CCP1CON equ 0FBDh ;# 
   287  0000                     # 6334 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   288                           ECCP1CON equ 0FBDh ;# 
   289  0000                     # 6491 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   290                           CCPR1 equ 0FBEh ;# 
   291  0000                     # 6498 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   292                           CCPR1L equ 0FBEh ;# 
   293  0000                     # 6505 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   294                           CCPR1H equ 0FBFh ;# 
   295  0000                     # 6512 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   296                           ADCON2 equ 0FC0h ;# 
   297  0000                     # 6583 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   298                           ADCON1 equ 0FC1h ;# 
   299  0000                     # 6668 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   300                           ADCON0 equ 0FC2h ;# 
   301  0000                     # 6787 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   302                           ADRES equ 0FC3h ;# 
   303  0000                     # 6794 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   304                           ADRESL equ 0FC3h ;# 
   305  0000                     # 6801 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   306                           ADRESH equ 0FC4h ;# 
   307  0000                     # 6808 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   308                           SSPCON2 equ 0FC5h ;# 
   309  0000                     # 6870 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   310                           SSPCON1 equ 0FC6h ;# 
   311  0000                     # 6940 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   312                           SSPSTAT equ 0FC7h ;# 
   313  0000                     # 7188 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   314                           SSPADD equ 0FC8h ;# 
   315  0000                     # 7195 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   316                           SSPBUF equ 0FC9h ;# 
   317  0000                     # 7202 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   318                           T2CON equ 0FCAh ;# 
   319  0000                     # 7300 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   320                           PR2 equ 0FCBh ;# 
   321  0000                     # 7305 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   322                           MEMCON equ 0FCBh ;# 
   323  0000                     # 7410 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   324                           TMR2 equ 0FCCh ;# 
   325  0000                     # 7417 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   326                           T1CON equ 0FCDh ;# 
   327  0000                     # 7520 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   328                           TMR1 equ 0FCEh ;# 
   329  0000                     # 7527 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   330                           TMR1L equ 0FCEh ;# 
   331  0000                     # 7534 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   332                           TMR1H equ 0FCFh ;# 
   333  0000                     # 7541 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   334                           RCON equ 0FD0h ;# 
   335  0000                     # 7690 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   336                           WDTCON equ 0FD1h ;# 
   337  0000                     # 7718 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   338                           HLVDCON equ 0FD2h ;# 
   339  0000                     # 7723 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   340                           LVDCON equ 0FD2h ;# 
   341  0000                     # 7988 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   342                           OSCCON equ 0FD3h ;# 
   343  0000                     # 8071 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   344                           T0CON equ 0FD5h ;# 
   345  0000                     # 8141 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   346                           TMR0 equ 0FD6h ;# 
   347  0000                     # 8148 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   348                           TMR0L equ 0FD6h ;# 
   349  0000                     # 8155 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   350                           TMR0H equ 0FD7h ;# 
   351  0000                     # 8162 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   352                           STATUS equ 0FD8h ;# 
   353  0000                     # 8233 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   354                           FSR2 equ 0FD9h ;# 
   355  0000                     # 8240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   356                           FSR2L equ 0FD9h ;# 
   357  0000                     # 8247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   358                           FSR2H equ 0FDAh ;# 
   359  0000                     # 8254 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   360                           PLUSW2 equ 0FDBh ;# 
   361  0000                     # 8261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   362                           PREINC2 equ 0FDCh ;# 
   363  0000                     # 8268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   364                           POSTDEC2 equ 0FDDh ;# 
   365  0000                     # 8275 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   366                           POSTINC2 equ 0FDEh ;# 
   367  0000                     # 8282 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   368                           INDF2 equ 0FDFh ;# 
   369  0000                     # 8289 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   370                           BSR equ 0FE0h ;# 
   371  0000                     # 8296 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   372                           FSR1 equ 0FE1h ;# 
   373  0000                     # 8303 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   374                           FSR1L equ 0FE1h ;# 
   375  0000                     # 8310 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   376                           FSR1H equ 0FE2h ;# 
   377  0000                     # 8317 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   378                           PLUSW1 equ 0FE3h ;# 
   379  0000                     # 8324 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   380                           PREINC1 equ 0FE4h ;# 
   381  0000                     # 8331 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   382                           POSTDEC1 equ 0FE5h ;# 
   383  0000                     # 8338 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   384                           POSTINC1 equ 0FE6h ;# 
   385  0000                     # 8345 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   386                           INDF1 equ 0FE7h ;# 
   387  0000                     # 8352 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   388                           WREG equ 0FE8h ;# 
   389  0000                     # 8359 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   390                           FSR0 equ 0FE9h ;# 
   391  0000                     # 8366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   392                           FSR0L equ 0FE9h ;# 
   393  0000                     # 8373 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   394                           FSR0H equ 0FEAh ;# 
   395  0000                     # 8380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   396                           PLUSW0 equ 0FEBh ;# 
   397  0000                     # 8387 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   398                           PREINC0 equ 0FECh ;# 
   399  0000                     # 8394 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   400                           POSTDEC0 equ 0FEDh ;# 
   401  0000                     # 8401 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   402                           POSTINC0 equ 0FEEh ;# 
   403  0000                     # 8408 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   404                           INDF0 equ 0FEFh ;# 
   405  0000                     # 8415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   406                           INTCON3 equ 0FF0h ;# 
   407  0000                     # 8507 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   408                           INTCON2 equ 0FF1h ;# 
   409  0000                     # 8584 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   410                           INTCON equ 0FF2h ;# 
   411  0000                     # 8701 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   412                           PROD equ 0FF3h ;# 
   413  0000                     # 8708 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   414                           PRODL equ 0FF3h ;# 
   415  0000                     # 8715 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   416                           PRODH equ 0FF4h ;# 
   417  0000                     # 8722 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   418                           TABLAT equ 0FF5h ;# 
   419  0000                     # 8731 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   420                           TBLPTR equ 0FF6h ;# 
   421  0000                     # 8738 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   422                           TBLPTRL equ 0FF6h ;# 
   423  0000                     # 8745 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   424                           TBLPTRH equ 0FF7h ;# 
   425  0000                     # 8752 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   426                           TBLPTRU equ 0FF8h ;# 
   427  0000                     # 8761 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   428                           PCLAT equ 0FF9h ;# 
   429  0000                     # 8768 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   430                           PC equ 0FF9h ;# 
   431  0000                     # 8775 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   432                           PCL equ 0FF9h ;# 
   433  0000                     # 8782 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   434                           PCLATH equ 0FFAh ;# 
   435  0000                     # 8789 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   436                           PCLATU equ 0FFBh ;# 
   437  0000                     # 8796 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   438                           STKPTR equ 0FFCh ;# 
   439  0000                     # 8872 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   440                           TOS equ 0FFDh ;# 
   441  0000                     # 8879 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   442                           TOSL equ 0FFDh ;# 
   443  0000                     # 8886 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   444                           TOSH equ 0FFEh ;# 
   445  0000                     # 8893 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   446                           TOSU equ 0FFFh ;# 
   447  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   448                           SPPDATA equ 0F62h ;# 
   449  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   450                           SPPCFG equ 0F63h ;# 
   451  0000                     # 151 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   452                           SPPEPS equ 0F64h ;# 
   453  0000                     # 225 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   454                           SPPCON equ 0F65h ;# 
   455  0000                     # 251 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   456                           UFRM equ 0F66h ;# 
   457  0000                     # 258 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   458                           UFRML equ 0F66h ;# 
   459  0000                     # 336 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   460                           UFRMH equ 0F67h ;# 
   461  0000                     # 376 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   462                           UIR equ 0F68h ;# 
   463  0000                     # 432 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   464                           UIE equ 0F69h ;# 
   465  0000                     # 488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   466                           UEIR equ 0F6Ah ;# 
   467  0000                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   468                           UEIE equ 0F6Bh ;# 
   469  0000                     # 590 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   470                           USTAT equ 0F6Ch ;# 
   471  0000                     # 650 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   472                           UCON equ 0F6Dh ;# 
   473  0000                     # 701 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   474                           UADDR equ 0F6Eh ;# 
   475  0000                     # 765 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   476                           UCFG equ 0F6Fh ;# 
   477  0000                     # 844 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   478                           UEP0 equ 0F70h ;# 
   479  0000                     # 952 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   480                           UEP1 equ 0F71h ;# 
   481  0000                     # 1060 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   482                           UEP2 equ 0F72h ;# 
   483  0000                     # 1168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   484                           UEP3 equ 0F73h ;# 
   485  0000                     # 1276 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   486                           UEP4 equ 0F74h ;# 
   487  0000                     # 1384 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   488                           UEP5 equ 0F75h ;# 
   489  0000                     # 1492 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   490                           UEP6 equ 0F76h ;# 
   491  0000                     # 1600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   492                           UEP7 equ 0F77h ;# 
   493  0000                     # 1708 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   494                           UEP8 equ 0F78h ;# 
   495  0000                     # 1784 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   496                           UEP9 equ 0F79h ;# 
   497  0000                     # 1860 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   498                           UEP10 equ 0F7Ah ;# 
   499  0000                     # 1936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   500                           UEP11 equ 0F7Bh ;# 
   501  0000                     # 2012 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   502                           UEP12 equ 0F7Ch ;# 
   503  0000                     # 2088 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   504                           UEP13 equ 0F7Dh ;# 
   505  0000                     # 2164 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   506                           UEP14 equ 0F7Eh ;# 
   507  0000                     # 2240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   508                           UEP15 equ 0F7Fh ;# 
   509  0000                     # 2316 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   510                           PORTA equ 0F80h ;# 
   511  0000                     # 2455 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   512                           PORTB equ 0F81h ;# 
   513  0000                     # 2565 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   514                           PORTC equ 0F82h ;# 
   515  0000                     # 2707 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   516                           PORTD equ 0F83h ;# 
   517  0000                     # 2828 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   518                           PORTE equ 0F84h ;# 
   519  0000                     # 2975 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   520                           LATA equ 0F89h ;# 
   521  0000                     # 3075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   522                           LATB equ 0F8Ah ;# 
   523  0000                     # 3187 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   524                           LATC equ 0F8Bh ;# 
   525  0000                     # 3265 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   526                           LATD equ 0F8Ch ;# 
   527  0000                     # 3377 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   528                           LATE equ 0F8Dh ;# 
   529  0000                     # 3429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   530                           TRISA equ 0F92h ;# 
   531  0000                     # 3434 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   532                           DDRA equ 0F92h ;# 
   533  0000                     # 3627 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   534                           TRISB equ 0F93h ;# 
   535  0000                     # 3632 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   536                           DDRB equ 0F93h ;# 
   537  0000                     # 3849 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   538                           TRISC equ 0F94h ;# 
   539  0000                     # 3854 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   540                           DDRC equ 0F94h ;# 
   541  0000                     # 4003 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   542                           TRISD equ 0F95h ;# 
   543  0000                     # 4008 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   544                           DDRD equ 0F95h ;# 
   545  0000                     # 4225 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   546                           TRISE equ 0F96h ;# 
   547  0000                     # 4230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   548                           DDRE equ 0F96h ;# 
   549  0000                     # 4327 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   550                           OSCTUNE equ 0F9Bh ;# 
   551  0000                     # 4386 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   552                           PIE1 equ 0F9Dh ;# 
   553  0000                     # 4470 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   554                           PIR1 equ 0F9Eh ;# 
   555  0000                     # 4554 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   556                           IPR1 equ 0F9Fh ;# 
   557  0000                     # 4638 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   558                           PIE2 equ 0FA0h ;# 
   559  0000                     # 4709 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   560                           PIR2 equ 0FA1h ;# 
   561  0000                     # 4780 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   562                           IPR2 equ 0FA2h ;# 
   563  0000                     # 4851 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   564                           EECON1 equ 0FA6h ;# 
   565  0000                     # 4917 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   566                           EECON2 equ 0FA7h ;# 
   567  0000                     # 4924 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   568                           EEDATA equ 0FA8h ;# 
   569  0000                     # 4931 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   570                           EEADR equ 0FA9h ;# 
   571  0000                     # 4938 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   572                           RCSTA equ 0FABh ;# 
   573  0000                     # 4943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   574                           RCSTA1 equ 0FABh ;# 
   575  0000                     # 5148 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   576                           TXSTA equ 0FACh ;# 
   577  0000                     # 5153 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   578                           TXSTA1 equ 0FACh ;# 
   579  0000                     # 5404 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   580                           TXREG equ 0FADh ;# 
   581  0000                     # 5409 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   582                           TXREG1 equ 0FADh ;# 
   583  0000                     # 5416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   584                           RCREG equ 0FAEh ;# 
   585  0000                     # 5421 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   586                           RCREG1 equ 0FAEh ;# 
   587  0000                     # 5428 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   588                           SPBRG equ 0FAFh ;# 
   589  0000                     # 5433 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   590                           SPBRG1 equ 0FAFh ;# 
   591  0000                     # 5440 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   592                           SPBRGH equ 0FB0h ;# 
   593  0000                     # 5447 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   594                           T3CON equ 0FB1h ;# 
   595  0000                     # 5568 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   596                           TMR3 equ 0FB2h ;# 
   597  0000                     # 5575 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   598                           TMR3L equ 0FB2h ;# 
   599  0000                     # 5582 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   600                           TMR3H equ 0FB3h ;# 
   601  0000                     # 5589 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   602                           CMCON equ 0FB4h ;# 
   603  0000                     # 5679 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   604                           CVRCON equ 0FB5h ;# 
   605  0000                     # 5764 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   606                           ECCP1AS equ 0FB6h ;# 
   607  0000                     # 5769 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   608                           CCP1AS equ 0FB6h ;# 
   609  0000                     # 5926 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   610                           ECCP1DEL equ 0FB7h ;# 
   611  0000                     # 5931 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   612                           CCP1DEL equ 0FB7h ;# 
   613  0000                     # 6064 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   614                           BAUDCON equ 0FB8h ;# 
   615  0000                     # 6069 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   616                           BAUDCTL equ 0FB8h ;# 
   617  0000                     # 6244 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   618                           CCP2CON equ 0FBAh ;# 
   619  0000                     # 6308 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   620                           CCPR2 equ 0FBBh ;# 
   621  0000                     # 6315 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   622                           CCPR2L equ 0FBBh ;# 
   623  0000                     # 6322 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   624                           CCPR2H equ 0FBCh ;# 
   625  0000                     # 6329 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   626                           CCP1CON equ 0FBDh ;# 
   627  0000                     # 6334 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   628                           ECCP1CON equ 0FBDh ;# 
   629  0000                     # 6491 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   630                           CCPR1 equ 0FBEh ;# 
   631  0000                     # 6498 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   632                           CCPR1L equ 0FBEh ;# 
   633  0000                     # 6505 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   634                           CCPR1H equ 0FBFh ;# 
   635  0000                     # 6512 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   636                           ADCON2 equ 0FC0h ;# 
   637  0000                     # 6583 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   638                           ADCON1 equ 0FC1h ;# 
   639  0000                     # 6668 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   640                           ADCON0 equ 0FC2h ;# 
   641  0000                     # 6787 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   642                           ADRES equ 0FC3h ;# 
   643  0000                     # 6794 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   644                           ADRESL equ 0FC3h ;# 
   645  0000                     # 6801 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   646                           ADRESH equ 0FC4h ;# 
   647  0000                     # 6808 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   648                           SSPCON2 equ 0FC5h ;# 
   649  0000                     # 6870 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   650                           SSPCON1 equ 0FC6h ;# 
   651  0000                     # 6940 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   652                           SSPSTAT equ 0FC7h ;# 
   653  0000                     # 7188 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   654                           SSPADD equ 0FC8h ;# 
   655  0000                     # 7195 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   656                           SSPBUF equ 0FC9h ;# 
   657  0000                     # 7202 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   658                           T2CON equ 0FCAh ;# 
   659  0000                     # 7300 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   660                           PR2 equ 0FCBh ;# 
   661  0000                     # 7305 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   662                           MEMCON equ 0FCBh ;# 
   663  0000                     # 7410 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   664                           TMR2 equ 0FCCh ;# 
   665  0000                     # 7417 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   666                           T1CON equ 0FCDh ;# 
   667  0000                     # 7520 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   668                           TMR1 equ 0FCEh ;# 
   669  0000                     # 7527 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   670                           TMR1L equ 0FCEh ;# 
   671  0000                     # 7534 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   672                           TMR1H equ 0FCFh ;# 
   673  0000                     # 7541 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   674                           RCON equ 0FD0h ;# 
   675  0000                     # 7690 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   676                           WDTCON equ 0FD1h ;# 
   677  0000                     # 7718 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   678                           HLVDCON equ 0FD2h ;# 
   679  0000                     # 7723 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   680                           LVDCON equ 0FD2h ;# 
   681  0000                     # 7988 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   682                           OSCCON equ 0FD3h ;# 
   683  0000                     # 8071 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   684                           T0CON equ 0FD5h ;# 
   685  0000                     # 8141 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   686                           TMR0 equ 0FD6h ;# 
   687  0000                     # 8148 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   688                           TMR0L equ 0FD6h ;# 
   689  0000                     # 8155 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   690                           TMR0H equ 0FD7h ;# 
   691  0000                     # 8162 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   692                           STATUS equ 0FD8h ;# 
   693  0000                     # 8233 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   694                           FSR2 equ 0FD9h ;# 
   695  0000                     # 8240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   696                           FSR2L equ 0FD9h ;# 
   697  0000                     # 8247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   698                           FSR2H equ 0FDAh ;# 
   699  0000                     # 8254 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   700                           PLUSW2 equ 0FDBh ;# 
   701  0000                     # 8261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   702                           PREINC2 equ 0FDCh ;# 
   703  0000                     # 8268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   704                           POSTDEC2 equ 0FDDh ;# 
   705  0000                     # 8275 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   706                           POSTINC2 equ 0FDEh ;# 
   707  0000                     # 8282 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   708                           INDF2 equ 0FDFh ;# 
   709  0000                     # 8289 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   710                           BSR equ 0FE0h ;# 
   711  0000                     # 8296 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   712                           FSR1 equ 0FE1h ;# 
   713  0000                     # 8303 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   714                           FSR1L equ 0FE1h ;# 
   715  0000                     # 8310 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   716                           FSR1H equ 0FE2h ;# 
   717  0000                     # 8317 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   718                           PLUSW1 equ 0FE3h ;# 
   719  0000                     # 8324 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   720                           PREINC1 equ 0FE4h ;# 
   721  0000                     # 8331 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   722                           POSTDEC1 equ 0FE5h ;# 
   723  0000                     # 8338 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   724                           POSTINC1 equ 0FE6h ;# 
   725  0000                     # 8345 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   726                           INDF1 equ 0FE7h ;# 
   727  0000                     # 8352 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   728                           WREG equ 0FE8h ;# 
   729  0000                     # 8359 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   730                           FSR0 equ 0FE9h ;# 
   731  0000                     # 8366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   732                           FSR0L equ 0FE9h ;# 
   733  0000                     # 8373 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   734                           FSR0H equ 0FEAh ;# 
   735  0000                     # 8380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   736                           PLUSW0 equ 0FEBh ;# 
   737  0000                     # 8387 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   738                           PREINC0 equ 0FECh ;# 
   739  0000                     # 8394 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   740                           POSTDEC0 equ 0FEDh ;# 
   741  0000                     # 8401 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   742                           POSTINC0 equ 0FEEh ;# 
   743  0000                     # 8408 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   744                           INDF0 equ 0FEFh ;# 
   745  0000                     # 8415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   746                           INTCON3 equ 0FF0h ;# 
   747  0000                     # 8507 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   748                           INTCON2 equ 0FF1h ;# 
   749  0000                     # 8584 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   750                           INTCON equ 0FF2h ;# 
   751  0000                     # 8701 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   752                           PROD equ 0FF3h ;# 
   753  0000                     # 8708 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   754                           PRODL equ 0FF3h ;# 
   755  0000                     # 8715 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   756                           PRODH equ 0FF4h ;# 
   757  0000                     # 8722 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   758                           TABLAT equ 0FF5h ;# 
   759  0000                     # 8731 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   760                           TBLPTR equ 0FF6h ;# 
   761  0000                     # 8738 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   762                           TBLPTRL equ 0FF6h ;# 
   763  0000                     # 8745 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   764                           TBLPTRH equ 0FF7h ;# 
   765  0000                     # 8752 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   766                           TBLPTRU equ 0FF8h ;# 
   767  0000                     # 8761 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   768                           PCLAT equ 0FF9h ;# 
   769  0000                     # 8768 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   770                           PC equ 0FF9h ;# 
   771  0000                     # 8775 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   772                           PCL equ 0FF9h ;# 
   773  0000                     # 8782 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   774                           PCLATH equ 0FFAh ;# 
   775  0000                     # 8789 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   776                           PCLATU equ 0FFBh ;# 
   777  0000                     # 8796 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   778                           STKPTR equ 0FFCh ;# 
   779  0000                     # 8872 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   780                           TOS equ 0FFDh ;# 
   781  0000                     # 8879 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   782                           TOSL equ 0FFDh ;# 
   783  0000                     # 8886 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   784                           TOSH equ 0FFEh ;# 
   785  0000                     # 8893 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   786                           TOSU equ 0FFFh ;# 
   787  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   788                           SPPDATA equ 0F62h ;# 
   789  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   790                           SPPCFG equ 0F63h ;# 
   791  0000                     # 151 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   792                           SPPEPS equ 0F64h ;# 
   793  0000                     # 225 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   794                           SPPCON equ 0F65h ;# 
   795  0000                     # 251 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   796                           UFRM equ 0F66h ;# 
   797  0000                     # 258 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   798                           UFRML equ 0F66h ;# 
   799  0000                     # 336 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   800                           UFRMH equ 0F67h ;# 
   801  0000                     # 376 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   802                           UIR equ 0F68h ;# 
   803  0000                     # 432 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   804                           UIE equ 0F69h ;# 
   805  0000                     # 488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   806                           UEIR equ 0F6Ah ;# 
   807  0000                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   808                           UEIE equ 0F6Bh ;# 
   809  0000                     # 590 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   810                           USTAT equ 0F6Ch ;# 
   811  0000                     # 650 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   812                           UCON equ 0F6Dh ;# 
   813  0000                     # 701 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   814                           UADDR equ 0F6Eh ;# 
   815  0000                     # 765 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   816                           UCFG equ 0F6Fh ;# 
   817  0000                     # 844 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   818                           UEP0 equ 0F70h ;# 
   819  0000                     # 952 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   820                           UEP1 equ 0F71h ;# 
   821  0000                     # 1060 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   822                           UEP2 equ 0F72h ;# 
   823  0000                     # 1168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   824                           UEP3 equ 0F73h ;# 
   825  0000                     # 1276 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   826                           UEP4 equ 0F74h ;# 
   827  0000                     # 1384 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   828                           UEP5 equ 0F75h ;# 
   829  0000                     # 1492 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   830                           UEP6 equ 0F76h ;# 
   831  0000                     # 1600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   832                           UEP7 equ 0F77h ;# 
   833  0000                     # 1708 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   834                           UEP8 equ 0F78h ;# 
   835  0000                     # 1784 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   836                           UEP9 equ 0F79h ;# 
   837  0000                     # 1860 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   838                           UEP10 equ 0F7Ah ;# 
   839  0000                     # 1936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   840                           UEP11 equ 0F7Bh ;# 
   841  0000                     # 2012 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   842                           UEP12 equ 0F7Ch ;# 
   843  0000                     # 2088 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   844                           UEP13 equ 0F7Dh ;# 
   845  0000                     # 2164 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   846                           UEP14 equ 0F7Eh ;# 
   847  0000                     # 2240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   848                           UEP15 equ 0F7Fh ;# 
   849  0000                     # 2316 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   850                           PORTA equ 0F80h ;# 
   851  0000                     # 2455 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   852                           PORTB equ 0F81h ;# 
   853  0000                     # 2565 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   854                           PORTC equ 0F82h ;# 
   855  0000                     # 2707 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   856                           PORTD equ 0F83h ;# 
   857  0000                     # 2828 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   858                           PORTE equ 0F84h ;# 
   859  0000                     # 2975 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   860                           LATA equ 0F89h ;# 
   861  0000                     # 3075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   862                           LATB equ 0F8Ah ;# 
   863  0000                     # 3187 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   864                           LATC equ 0F8Bh ;# 
   865  0000                     # 3265 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   866                           LATD equ 0F8Ch ;# 
   867  0000                     # 3377 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   868                           LATE equ 0F8Dh ;# 
   869  0000                     # 3429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   870                           TRISA equ 0F92h ;# 
   871  0000                     # 3434 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   872                           DDRA equ 0F92h ;# 
   873  0000                     # 3627 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   874                           TRISB equ 0F93h ;# 
   875  0000                     # 3632 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   876                           DDRB equ 0F93h ;# 
   877  0000                     # 3849 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   878                           TRISC equ 0F94h ;# 
   879  0000                     # 3854 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   880                           DDRC equ 0F94h ;# 
   881  0000                     # 4003 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   882                           TRISD equ 0F95h ;# 
   883  0000                     # 4008 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   884                           DDRD equ 0F95h ;# 
   885  0000                     # 4225 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   886                           TRISE equ 0F96h ;# 
   887  0000                     # 4230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   888                           DDRE equ 0F96h ;# 
   889  0000                     # 4327 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   890                           OSCTUNE equ 0F9Bh ;# 
   891  0000                     # 4386 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   892                           PIE1 equ 0F9Dh ;# 
   893  0000                     # 4470 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   894                           PIR1 equ 0F9Eh ;# 
   895  0000                     # 4554 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   896                           IPR1 equ 0F9Fh ;# 
   897  0000                     # 4638 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   898                           PIE2 equ 0FA0h ;# 
   899  0000                     # 4709 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   900                           PIR2 equ 0FA1h ;# 
   901  0000                     # 4780 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   902                           IPR2 equ 0FA2h ;# 
   903  0000                     # 4851 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   904                           EECON1 equ 0FA6h ;# 
   905  0000                     # 4917 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   906                           EECON2 equ 0FA7h ;# 
   907  0000                     # 4924 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   908                           EEDATA equ 0FA8h ;# 
   909  0000                     # 4931 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   910                           EEADR equ 0FA9h ;# 
   911  0000                     # 4938 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   912                           RCSTA equ 0FABh ;# 
   913  0000                     # 4943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   914                           RCSTA1 equ 0FABh ;# 
   915  0000                     # 5148 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   916                           TXSTA equ 0FACh ;# 
   917  0000                     # 5153 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   918                           TXSTA1 equ 0FACh ;# 
   919  0000                     # 5404 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   920                           TXREG equ 0FADh ;# 
   921  0000                     # 5409 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   922                           TXREG1 equ 0FADh ;# 
   923  0000                     # 5416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   924                           RCREG equ 0FAEh ;# 
   925  0000                     # 5421 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   926                           RCREG1 equ 0FAEh ;# 
   927  0000                     # 5428 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   928                           SPBRG equ 0FAFh ;# 
   929  0000                     # 5433 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   930                           SPBRG1 equ 0FAFh ;# 
   931  0000                     # 5440 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   932                           SPBRGH equ 0FB0h ;# 
   933  0000                     # 5447 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   934                           T3CON equ 0FB1h ;# 
   935  0000                     # 5568 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   936                           TMR3 equ 0FB2h ;# 
   937  0000                     # 5575 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   938                           TMR3L equ 0FB2h ;# 
   939  0000                     # 5582 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   940                           TMR3H equ 0FB3h ;# 
   941  0000                     # 5589 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   942                           CMCON equ 0FB4h ;# 
   943  0000                     # 5679 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   944                           CVRCON equ 0FB5h ;# 
   945  0000                     # 5764 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   946                           ECCP1AS equ 0FB6h ;# 
   947  0000                     # 5769 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   948                           CCP1AS equ 0FB6h ;# 
   949  0000                     # 5926 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   950                           ECCP1DEL equ 0FB7h ;# 
   951  0000                     # 5931 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   952                           CCP1DEL equ 0FB7h ;# 
   953  0000                     # 6064 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   954                           BAUDCON equ 0FB8h ;# 
   955  0000                     # 6069 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   956                           BAUDCTL equ 0FB8h ;# 
   957  0000                     # 6244 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   958                           CCP2CON equ 0FBAh ;# 
   959  0000                     # 6308 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   960                           CCPR2 equ 0FBBh ;# 
   961  0000                     # 6315 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   962                           CCPR2L equ 0FBBh ;# 
   963  0000                     # 6322 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   964                           CCPR2H equ 0FBCh ;# 
   965  0000                     # 6329 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   966                           CCP1CON equ 0FBDh ;# 
   967  0000                     # 6334 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   968                           ECCP1CON equ 0FBDh ;# 
   969  0000                     # 6491 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   970                           CCPR1 equ 0FBEh ;# 
   971  0000                     # 6498 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   972                           CCPR1L equ 0FBEh ;# 
   973  0000                     # 6505 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   974                           CCPR1H equ 0FBFh ;# 
   975  0000                     # 6512 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   976                           ADCON2 equ 0FC0h ;# 
   977  0000                     # 6583 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   978                           ADCON1 equ 0FC1h ;# 
   979  0000                     # 6668 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   980                           ADCON0 equ 0FC2h ;# 
   981  0000                     # 6787 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   982                           ADRES equ 0FC3h ;# 
   983  0000                     # 6794 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   984                           ADRESL equ 0FC3h ;# 
   985  0000                     # 6801 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   986                           ADRESH equ 0FC4h ;# 
   987  0000                     # 6808 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   988                           SSPCON2 equ 0FC5h ;# 
   989  0000                     # 6870 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   990                           SSPCON1 equ 0FC6h ;# 
   991  0000                     # 6940 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   992                           SSPSTAT equ 0FC7h ;# 
   993  0000                     # 7188 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   994                           SSPADD equ 0FC8h ;# 
   995  0000                     # 7195 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   996                           SSPBUF equ 0FC9h ;# 
   997  0000                     # 7202 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   998                           T2CON equ 0FCAh ;# 
   999  0000                     # 7300 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1000                           PR2 equ 0FCBh ;# 
  1001  0000                     # 7305 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1002                           MEMCON equ 0FCBh ;# 
  1003  0000                     # 7410 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1004                           TMR2 equ 0FCCh ;# 
  1005  0000                     # 7417 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1006                           T1CON equ 0FCDh ;# 
  1007  0000                     # 7520 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1008                           TMR1 equ 0FCEh ;# 
  1009  0000                     # 7527 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1010                           TMR1L equ 0FCEh ;# 
  1011  0000                     # 7534 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1012                           TMR1H equ 0FCFh ;# 
  1013  0000                     # 7541 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1014                           RCON equ 0FD0h ;# 
  1015  0000                     # 7690 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1016                           WDTCON equ 0FD1h ;# 
  1017  0000                     # 7718 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1018                           HLVDCON equ 0FD2h ;# 
  1019  0000                     # 7723 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1020                           LVDCON equ 0FD2h ;# 
  1021  0000                     # 7988 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1022                           OSCCON equ 0FD3h ;# 
  1023  0000                     # 8071 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1024                           T0CON equ 0FD5h ;# 
  1025  0000                     # 8141 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1026                           TMR0 equ 0FD6h ;# 
  1027  0000                     # 8148 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1028                           TMR0L equ 0FD6h ;# 
  1029  0000                     # 8155 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1030                           TMR0H equ 0FD7h ;# 
  1031  0000                     # 8162 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1032                           STATUS equ 0FD8h ;# 
  1033  0000                     # 8233 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1034                           FSR2 equ 0FD9h ;# 
  1035  0000                     # 8240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1036                           FSR2L equ 0FD9h ;# 
  1037  0000                     # 8247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1038                           FSR2H equ 0FDAh ;# 
  1039  0000                     # 8254 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1040                           PLUSW2 equ 0FDBh ;# 
  1041  0000                     # 8261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1042                           PREINC2 equ 0FDCh ;# 
  1043  0000                     # 8268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1044                           POSTDEC2 equ 0FDDh ;# 
  1045  0000                     # 8275 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1046                           POSTINC2 equ 0FDEh ;# 
  1047  0000                     # 8282 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1048                           INDF2 equ 0FDFh ;# 
  1049  0000                     # 8289 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1050                           BSR equ 0FE0h ;# 
  1051  0000                     # 8296 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1052                           FSR1 equ 0FE1h ;# 
  1053  0000                     # 8303 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1054                           FSR1L equ 0FE1h ;# 
  1055  0000                     # 8310 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1056                           FSR1H equ 0FE2h ;# 
  1057  0000                     # 8317 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1058                           PLUSW1 equ 0FE3h ;# 
  1059  0000                     # 8324 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1060                           PREINC1 equ 0FE4h ;# 
  1061  0000                     # 8331 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1062                           POSTDEC1 equ 0FE5h ;# 
  1063  0000                     # 8338 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1064                           POSTINC1 equ 0FE6h ;# 
  1065  0000                     # 8345 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1066                           INDF1 equ 0FE7h ;# 
  1067  0000                     # 8352 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1068                           WREG equ 0FE8h ;# 
  1069  0000                     # 8359 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1070                           FSR0 equ 0FE9h ;# 
  1071  0000                     # 8366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1072                           FSR0L equ 0FE9h ;# 
  1073  0000                     # 8373 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1074                           FSR0H equ 0FEAh ;# 
  1075  0000                     # 8380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1076                           PLUSW0 equ 0FEBh ;# 
  1077  0000                     # 8387 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1078                           PREINC0 equ 0FECh ;# 
  1079  0000                     # 8394 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1080                           POSTDEC0 equ 0FEDh ;# 
  1081  0000                     # 8401 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1082                           POSTINC0 equ 0FEEh ;# 
  1083  0000                     # 8408 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1084                           INDF0 equ 0FEFh ;# 
  1085  0000                     # 8415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1086                           INTCON3 equ 0FF0h ;# 
  1087  0000                     # 8507 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1088                           INTCON2 equ 0FF1h ;# 
  1089  0000                     # 8584 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1090                           INTCON equ 0FF2h ;# 
  1091  0000                     # 8701 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1092                           PROD equ 0FF3h ;# 
  1093  0000                     # 8708 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1094                           PRODL equ 0FF3h ;# 
  1095  0000                     # 8715 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1096                           PRODH equ 0FF4h ;# 
  1097  0000                     # 8722 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1098                           TABLAT equ 0FF5h ;# 
  1099  0000                     # 8731 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1100                           TBLPTR equ 0FF6h ;# 
  1101  0000                     # 8738 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1102                           TBLPTRL equ 0FF6h ;# 
  1103  0000                     # 8745 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1104                           TBLPTRH equ 0FF7h ;# 
  1105  0000                     # 8752 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1106                           TBLPTRU equ 0FF8h ;# 
  1107  0000                     # 8761 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1108                           PCLAT equ 0FF9h ;# 
  1109  0000                     # 8768 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1110                           PC equ 0FF9h ;# 
  1111  0000                     # 8775 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1112                           PCL equ 0FF9h ;# 
  1113  0000                     # 8782 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1114                           PCLATH equ 0FFAh ;# 
  1115  0000                     # 8789 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1116                           PCLATU equ 0FFBh ;# 
  1117  0000                     # 8796 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1118                           STKPTR equ 0FFCh ;# 
  1119  0000                     # 8872 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1120                           TOS equ 0FFDh ;# 
  1121  0000                     # 8879 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1122                           TOSL equ 0FFDh ;# 
  1123  0000                     # 8886 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1124                           TOSH equ 0FFEh ;# 
  1125  0000                     # 8893 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1126                           TOSU equ 0FFFh ;# 
  1127  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1128                           SPPDATA equ 0F62h ;# 
  1129  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1130                           SPPCFG equ 0F63h ;# 
  1131  0000                     # 151 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1132                           SPPEPS equ 0F64h ;# 
  1133  0000                     # 225 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1134                           SPPCON equ 0F65h ;# 
  1135  0000                     # 251 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1136                           UFRM equ 0F66h ;# 
  1137  0000                     # 258 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1138                           UFRML equ 0F66h ;# 
  1139  0000                     # 336 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1140                           UFRMH equ 0F67h ;# 
  1141  0000                     # 376 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1142                           UIR equ 0F68h ;# 
  1143  0000                     # 432 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1144                           UIE equ 0F69h ;# 
  1145  0000                     # 488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1146                           UEIR equ 0F6Ah ;# 
  1147  0000                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1148                           UEIE equ 0F6Bh ;# 
  1149  0000                     # 590 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1150                           USTAT equ 0F6Ch ;# 
  1151  0000                     # 650 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1152                           UCON equ 0F6Dh ;# 
  1153  0000                     # 701 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1154                           UADDR equ 0F6Eh ;# 
  1155  0000                     # 765 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1156                           UCFG equ 0F6Fh ;# 
  1157  0000                     # 844 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1158                           UEP0 equ 0F70h ;# 
  1159  0000                     # 952 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1160                           UEP1 equ 0F71h ;# 
  1161  0000                     # 1060 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1162                           UEP2 equ 0F72h ;# 
  1163  0000                     # 1168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1164                           UEP3 equ 0F73h ;# 
  1165  0000                     # 1276 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1166                           UEP4 equ 0F74h ;# 
  1167  0000                     # 1384 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1168                           UEP5 equ 0F75h ;# 
  1169  0000                     # 1492 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1170                           UEP6 equ 0F76h ;# 
  1171  0000                     # 1600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1172                           UEP7 equ 0F77h ;# 
  1173  0000                     # 1708 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1174                           UEP8 equ 0F78h ;# 
  1175  0000                     # 1784 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1176                           UEP9 equ 0F79h ;# 
  1177  0000                     # 1860 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1178                           UEP10 equ 0F7Ah ;# 
  1179  0000                     # 1936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1180                           UEP11 equ 0F7Bh ;# 
  1181  0000                     # 2012 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1182                           UEP12 equ 0F7Ch ;# 
  1183  0000                     # 2088 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1184                           UEP13 equ 0F7Dh ;# 
  1185  0000                     # 2164 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1186                           UEP14 equ 0F7Eh ;# 
  1187  0000                     # 2240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1188                           UEP15 equ 0F7Fh ;# 
  1189  0000                     # 2316 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1190                           PORTA equ 0F80h ;# 
  1191  0000                     # 2455 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1192                           PORTB equ 0F81h ;# 
  1193  0000                     # 2565 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1194                           PORTC equ 0F82h ;# 
  1195  0000                     # 2707 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1196                           PORTD equ 0F83h ;# 
  1197  0000                     # 2828 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1198                           PORTE equ 0F84h ;# 
  1199  0000                     # 2975 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1200                           LATA equ 0F89h ;# 
  1201  0000                     # 3075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1202                           LATB equ 0F8Ah ;# 
  1203  0000                     # 3187 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1204                           LATC equ 0F8Bh ;# 
  1205  0000                     # 3265 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1206                           LATD equ 0F8Ch ;# 
  1207  0000                     # 3377 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1208                           LATE equ 0F8Dh ;# 
  1209  0000                     # 3429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1210                           TRISA equ 0F92h ;# 
  1211  0000                     # 3434 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1212                           DDRA equ 0F92h ;# 
  1213  0000                     # 3627 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1214                           TRISB equ 0F93h ;# 
  1215  0000                     # 3632 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1216                           DDRB equ 0F93h ;# 
  1217  0000                     # 3849 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1218                           TRISC equ 0F94h ;# 
  1219  0000                     # 3854 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1220                           DDRC equ 0F94h ;# 
  1221  0000                     # 4003 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1222                           TRISD equ 0F95h ;# 
  1223  0000                     # 4008 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1224                           DDRD equ 0F95h ;# 
  1225  0000                     # 4225 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1226                           TRISE equ 0F96h ;# 
  1227  0000                     # 4230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1228                           DDRE equ 0F96h ;# 
  1229  0000                     # 4327 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1230                           OSCTUNE equ 0F9Bh ;# 
  1231  0000                     # 4386 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1232                           PIE1 equ 0F9Dh ;# 
  1233  0000                     # 4470 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1234                           PIR1 equ 0F9Eh ;# 
  1235  0000                     # 4554 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1236                           IPR1 equ 0F9Fh ;# 
  1237  0000                     # 4638 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1238                           PIE2 equ 0FA0h ;# 
  1239  0000                     # 4709 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1240                           PIR2 equ 0FA1h ;# 
  1241  0000                     # 4780 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1242                           IPR2 equ 0FA2h ;# 
  1243  0000                     # 4851 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1244                           EECON1 equ 0FA6h ;# 
  1245  0000                     # 4917 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1246                           EECON2 equ 0FA7h ;# 
  1247  0000                     # 4924 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1248                           EEDATA equ 0FA8h ;# 
  1249  0000                     # 4931 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1250                           EEADR equ 0FA9h ;# 
  1251  0000                     # 4938 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1252                           RCSTA equ 0FABh ;# 
  1253  0000                     # 4943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1254                           RCSTA1 equ 0FABh ;# 
  1255  0000                     # 5148 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1256                           TXSTA equ 0FACh ;# 
  1257  0000                     # 5153 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1258                           TXSTA1 equ 0FACh ;# 
  1259  0000                     # 5404 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1260                           TXREG equ 0FADh ;# 
  1261  0000                     # 5409 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1262                           TXREG1 equ 0FADh ;# 
  1263  0000                     # 5416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1264                           RCREG equ 0FAEh ;# 
  1265  0000                     # 5421 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1266                           RCREG1 equ 0FAEh ;# 
  1267  0000                     # 5428 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1268                           SPBRG equ 0FAFh ;# 
  1269  0000                     # 5433 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1270                           SPBRG1 equ 0FAFh ;# 
  1271  0000                     # 5440 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1272                           SPBRGH equ 0FB0h ;# 
  1273  0000                     # 5447 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1274                           T3CON equ 0FB1h ;# 
  1275  0000                     # 5568 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1276                           TMR3 equ 0FB2h ;# 
  1277  0000                     # 5575 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1278                           TMR3L equ 0FB2h ;# 
  1279  0000                     # 5582 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1280                           TMR3H equ 0FB3h ;# 
  1281  0000                     # 5589 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1282                           CMCON equ 0FB4h ;# 
  1283  0000                     # 5679 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1284                           CVRCON equ 0FB5h ;# 
  1285  0000                     # 5764 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1286                           ECCP1AS equ 0FB6h ;# 
  1287  0000                     # 5769 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1288                           CCP1AS equ 0FB6h ;# 
  1289  0000                     # 5926 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1290                           ECCP1DEL equ 0FB7h ;# 
  1291  0000                     # 5931 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1292                           CCP1DEL equ 0FB7h ;# 
  1293  0000                     # 6064 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1294                           BAUDCON equ 0FB8h ;# 
  1295  0000                     # 6069 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1296                           BAUDCTL equ 0FB8h ;# 
  1297  0000                     # 6244 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1298                           CCP2CON equ 0FBAh ;# 
  1299  0000                     # 6308 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1300                           CCPR2 equ 0FBBh ;# 
  1301  0000                     # 6315 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1302                           CCPR2L equ 0FBBh ;# 
  1303  0000                     # 6322 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1304                           CCPR2H equ 0FBCh ;# 
  1305  0000                     # 6329 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1306                           CCP1CON equ 0FBDh ;# 
  1307  0000                     # 6334 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1308                           ECCP1CON equ 0FBDh ;# 
  1309  0000                     # 6491 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1310                           CCPR1 equ 0FBEh ;# 
  1311  0000                     # 6498 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1312                           CCPR1L equ 0FBEh ;# 
  1313  0000                     # 6505 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1314                           CCPR1H equ 0FBFh ;# 
  1315  0000                     # 6512 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1316                           ADCON2 equ 0FC0h ;# 
  1317  0000                     # 6583 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1318                           ADCON1 equ 0FC1h ;# 
  1319  0000                     # 6668 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1320                           ADCON0 equ 0FC2h ;# 
  1321  0000                     # 6787 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1322                           ADRES equ 0FC3h ;# 
  1323  0000                     # 6794 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1324                           ADRESL equ 0FC3h ;# 
  1325  0000                     # 6801 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1326                           ADRESH equ 0FC4h ;# 
  1327  0000                     # 6808 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1328                           SSPCON2 equ 0FC5h ;# 
  1329  0000                     # 6870 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1330                           SSPCON1 equ 0FC6h ;# 
  1331  0000                     # 6940 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1332                           SSPSTAT equ 0FC7h ;# 
  1333  0000                     # 7188 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1334                           SSPADD equ 0FC8h ;# 
  1335  0000                     # 7195 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1336                           SSPBUF equ 0FC9h ;# 
  1337  0000                     # 7202 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1338                           T2CON equ 0FCAh ;# 
  1339  0000                     # 7300 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1340                           PR2 equ 0FCBh ;# 
  1341  0000                     # 7305 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1342                           MEMCON equ 0FCBh ;# 
  1343  0000                     # 7410 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1344                           TMR2 equ 0FCCh ;# 
  1345  0000                     # 7417 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1346                           T1CON equ 0FCDh ;# 
  1347  0000                     # 7520 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1348                           TMR1 equ 0FCEh ;# 
  1349  0000                     # 7527 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1350                           TMR1L equ 0FCEh ;# 
  1351  0000                     # 7534 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1352                           TMR1H equ 0FCFh ;# 
  1353  0000                     # 7541 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1354                           RCON equ 0FD0h ;# 
  1355  0000                     # 7690 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1356                           WDTCON equ 0FD1h ;# 
  1357  0000                     # 7718 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1358                           HLVDCON equ 0FD2h ;# 
  1359  0000                     # 7723 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1360                           LVDCON equ 0FD2h ;# 
  1361  0000                     # 7988 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1362                           OSCCON equ 0FD3h ;# 
  1363  0000                     # 8071 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1364                           T0CON equ 0FD5h ;# 
  1365  0000                     # 8141 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1366                           TMR0 equ 0FD6h ;# 
  1367  0000                     # 8148 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1368                           TMR0L equ 0FD6h ;# 
  1369  0000                     # 8155 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1370                           TMR0H equ 0FD7h ;# 
  1371  0000                     # 8162 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1372                           STATUS equ 0FD8h ;# 
  1373  0000                     # 8233 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1374                           FSR2 equ 0FD9h ;# 
  1375  0000                     # 8240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1376                           FSR2L equ 0FD9h ;# 
  1377  0000                     # 8247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1378                           FSR2H equ 0FDAh ;# 
  1379  0000                     # 8254 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1380                           PLUSW2 equ 0FDBh ;# 
  1381  0000                     # 8261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1382                           PREINC2 equ 0FDCh ;# 
  1383  0000                     # 8268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1384                           POSTDEC2 equ 0FDDh ;# 
  1385  0000                     # 8275 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1386                           POSTINC2 equ 0FDEh ;# 
  1387  0000                     # 8282 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1388                           INDF2 equ 0FDFh ;# 
  1389  0000                     # 8289 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1390                           BSR equ 0FE0h ;# 
  1391  0000                     # 8296 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1392                           FSR1 equ 0FE1h ;# 
  1393  0000                     # 8303 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1394                           FSR1L equ 0FE1h ;# 
  1395  0000                     # 8310 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1396                           FSR1H equ 0FE2h ;# 
  1397  0000                     # 8317 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1398                           PLUSW1 equ 0FE3h ;# 
  1399  0000                     # 8324 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1400                           PREINC1 equ 0FE4h ;# 
  1401  0000                     # 8331 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1402                           POSTDEC1 equ 0FE5h ;# 
  1403  0000                     # 8338 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1404                           POSTINC1 equ 0FE6h ;# 
  1405  0000                     # 8345 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1406                           INDF1 equ 0FE7h ;# 
  1407  0000                     # 8352 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1408                           WREG equ 0FE8h ;# 
  1409  0000                     # 8359 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1410                           FSR0 equ 0FE9h ;# 
  1411  0000                     # 8366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1412                           FSR0L equ 0FE9h ;# 
  1413  0000                     # 8373 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1414                           FSR0H equ 0FEAh ;# 
  1415  0000                     # 8380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1416                           PLUSW0 equ 0FEBh ;# 
  1417  0000                     # 8387 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1418                           PREINC0 equ 0FECh ;# 
  1419  0000                     # 8394 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1420                           POSTDEC0 equ 0FEDh ;# 
  1421  0000                     # 8401 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1422                           POSTINC0 equ 0FEEh ;# 
  1423  0000                     # 8408 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1424                           INDF0 equ 0FEFh ;# 
  1425  0000                     # 8415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1426                           INTCON3 equ 0FF0h ;# 
  1427  0000                     # 8507 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1428                           INTCON2 equ 0FF1h ;# 
  1429  0000                     # 8584 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1430                           INTCON equ 0FF2h ;# 
  1431  0000                     # 8701 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1432                           PROD equ 0FF3h ;# 
  1433  0000                     # 8708 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1434                           PRODL equ 0FF3h ;# 
  1435  0000                     # 8715 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1436                           PRODH equ 0FF4h ;# 
  1437  0000                     # 8722 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1438                           TABLAT equ 0FF5h ;# 
  1439  0000                     # 8731 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1440                           TBLPTR equ 0FF6h ;# 
  1441  0000                     # 8738 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1442                           TBLPTRL equ 0FF6h ;# 
  1443  0000                     # 8745 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1444                           TBLPTRH equ 0FF7h ;# 
  1445  0000                     # 8752 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1446                           TBLPTRU equ 0FF8h ;# 
  1447  0000                     # 8761 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1448                           PCLAT equ 0FF9h ;# 
  1449  0000                     # 8768 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1450                           PC equ 0FF9h ;# 
  1451  0000                     # 8775 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1452                           PCL equ 0FF9h ;# 
  1453  0000                     # 8782 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1454                           PCLATH equ 0FFAh ;# 
  1455  0000                     # 8789 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1456                           PCLATU equ 0FFBh ;# 
  1457  0000                     # 8796 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1458                           STKPTR equ 0FFCh ;# 
  1459  0000                     # 8872 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1460                           TOS equ 0FFDh ;# 
  1461  0000                     # 8879 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1462                           TOSL equ 0FFDh ;# 
  1463  0000                     # 8886 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1464                           TOSH equ 0FFEh ;# 
  1465  0000                     # 8893 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1466                           TOSU equ 0FFFh ;# 
  1467  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1468                           SPPDATA equ 0F62h ;# 
  1469  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1470                           SPPCFG equ 0F63h ;# 
  1471  0000                     # 151 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1472                           SPPEPS equ 0F64h ;# 
  1473  0000                     # 225 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1474                           SPPCON equ 0F65h ;# 
  1475  0000                     # 251 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1476                           UFRM equ 0F66h ;# 
  1477  0000                     # 258 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1478                           UFRML equ 0F66h ;# 
  1479  0000                     # 336 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1480                           UFRMH equ 0F67h ;# 
  1481  0000                     # 376 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1482                           UIR equ 0F68h ;# 
  1483  0000                     # 432 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1484                           UIE equ 0F69h ;# 
  1485  0000                     # 488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1486                           UEIR equ 0F6Ah ;# 
  1487  0000                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1488                           UEIE equ 0F6Bh ;# 
  1489  0000                     # 590 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1490                           USTAT equ 0F6Ch ;# 
  1491  0000                     # 650 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1492                           UCON equ 0F6Dh ;# 
  1493  0000                     # 701 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1494                           UADDR equ 0F6Eh ;# 
  1495  0000                     # 765 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1496                           UCFG equ 0F6Fh ;# 
  1497  0000                     # 844 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1498                           UEP0 equ 0F70h ;# 
  1499  0000                     # 952 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1500                           UEP1 equ 0F71h ;# 
  1501  0000                     # 1060 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1502                           UEP2 equ 0F72h ;# 
  1503  0000                     # 1168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1504                           UEP3 equ 0F73h ;# 
  1505  0000                     # 1276 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1506                           UEP4 equ 0F74h ;# 
  1507  0000                     # 1384 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1508                           UEP5 equ 0F75h ;# 
  1509  0000                     # 1492 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1510                           UEP6 equ 0F76h ;# 
  1511  0000                     # 1600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1512                           UEP7 equ 0F77h ;# 
  1513  0000                     # 1708 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1514                           UEP8 equ 0F78h ;# 
  1515  0000                     # 1784 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1516                           UEP9 equ 0F79h ;# 
  1517  0000                     # 1860 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1518                           UEP10 equ 0F7Ah ;# 
  1519  0000                     # 1936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1520                           UEP11 equ 0F7Bh ;# 
  1521  0000                     # 2012 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1522                           UEP12 equ 0F7Ch ;# 
  1523  0000                     # 2088 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1524                           UEP13 equ 0F7Dh ;# 
  1525  0000                     # 2164 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1526                           UEP14 equ 0F7Eh ;# 
  1527  0000                     # 2240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1528                           UEP15 equ 0F7Fh ;# 
  1529  0000                     # 2316 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1530                           PORTA equ 0F80h ;# 
  1531  0000                     # 2455 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1532                           PORTB equ 0F81h ;# 
  1533  0000                     # 2565 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1534                           PORTC equ 0F82h ;# 
  1535  0000                     # 2707 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1536                           PORTD equ 0F83h ;# 
  1537  0000                     # 2828 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1538                           PORTE equ 0F84h ;# 
  1539  0000                     # 2975 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1540                           LATA equ 0F89h ;# 
  1541  0000                     # 3075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1542                           LATB equ 0F8Ah ;# 
  1543  0000                     # 3187 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1544                           LATC equ 0F8Bh ;# 
  1545  0000                     # 3265 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1546                           LATD equ 0F8Ch ;# 
  1547  0000                     # 3377 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1548                           LATE equ 0F8Dh ;# 
  1549  0000                     # 3429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1550                           TRISA equ 0F92h ;# 
  1551  0000                     # 3434 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1552                           DDRA equ 0F92h ;# 
  1553  0000                     # 3627 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1554                           TRISB equ 0F93h ;# 
  1555  0000                     # 3632 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1556                           DDRB equ 0F93h ;# 
  1557  0000                     # 3849 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1558                           TRISC equ 0F94h ;# 
  1559  0000                     # 3854 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1560                           DDRC equ 0F94h ;# 
  1561  0000                     # 4003 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1562                           TRISD equ 0F95h ;# 
  1563  0000                     # 4008 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1564                           DDRD equ 0F95h ;# 
  1565  0000                     # 4225 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1566                           TRISE equ 0F96h ;# 
  1567  0000                     # 4230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1568                           DDRE equ 0F96h ;# 
  1569  0000                     # 4327 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1570                           OSCTUNE equ 0F9Bh ;# 
  1571  0000                     # 4386 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1572                           PIE1 equ 0F9Dh ;# 
  1573  0000                     # 4470 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1574                           PIR1 equ 0F9Eh ;# 
  1575  0000                     # 4554 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1576                           IPR1 equ 0F9Fh ;# 
  1577  0000                     # 4638 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1578                           PIE2 equ 0FA0h ;# 
  1579  0000                     # 4709 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1580                           PIR2 equ 0FA1h ;# 
  1581  0000                     # 4780 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1582                           IPR2 equ 0FA2h ;# 
  1583  0000                     # 4851 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1584                           EECON1 equ 0FA6h ;# 
  1585  0000                     # 4917 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1586                           EECON2 equ 0FA7h ;# 
  1587  0000                     # 4924 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1588                           EEDATA equ 0FA8h ;# 
  1589  0000                     # 4931 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1590                           EEADR equ 0FA9h ;# 
  1591  0000                     # 4938 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1592                           RCSTA equ 0FABh ;# 
  1593  0000                     # 4943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1594                           RCSTA1 equ 0FABh ;# 
  1595  0000                     # 5148 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1596                           TXSTA equ 0FACh ;# 
  1597  0000                     # 5153 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1598                           TXSTA1 equ 0FACh ;# 
  1599  0000                     # 5404 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1600                           TXREG equ 0FADh ;# 
  1601  0000                     # 5409 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1602                           TXREG1 equ 0FADh ;# 
  1603  0000                     # 5416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1604                           RCREG equ 0FAEh ;# 
  1605  0000                     # 5421 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1606                           RCREG1 equ 0FAEh ;# 
  1607  0000                     # 5428 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1608                           SPBRG equ 0FAFh ;# 
  1609  0000                     # 5433 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1610                           SPBRG1 equ 0FAFh ;# 
  1611  0000                     # 5440 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1612                           SPBRGH equ 0FB0h ;# 
  1613  0000                     # 5447 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1614                           T3CON equ 0FB1h ;# 
  1615  0000                     # 5568 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1616                           TMR3 equ 0FB2h ;# 
  1617  0000                     # 5575 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1618                           TMR3L equ 0FB2h ;# 
  1619  0000                     # 5582 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1620                           TMR3H equ 0FB3h ;# 
  1621  0000                     # 5589 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1622                           CMCON equ 0FB4h ;# 
  1623  0000                     # 5679 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1624                           CVRCON equ 0FB5h ;# 
  1625  0000                     # 5764 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1626                           ECCP1AS equ 0FB6h ;# 
  1627  0000                     # 5769 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1628                           CCP1AS equ 0FB6h ;# 
  1629  0000                     # 5926 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1630                           ECCP1DEL equ 0FB7h ;# 
  1631  0000                     # 5931 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1632                           CCP1DEL equ 0FB7h ;# 
  1633  0000                     # 6064 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1634                           BAUDCON equ 0FB8h ;# 
  1635  0000                     # 6069 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1636                           BAUDCTL equ 0FB8h ;# 
  1637  0000                     # 6244 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1638                           CCP2CON equ 0FBAh ;# 
  1639  0000                     # 6308 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1640                           CCPR2 equ 0FBBh ;# 
  1641  0000                     # 6315 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1642                           CCPR2L equ 0FBBh ;# 
  1643  0000                     # 6322 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1644                           CCPR2H equ 0FBCh ;# 
  1645  0000                     # 6329 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1646                           CCP1CON equ 0FBDh ;# 
  1647  0000                     # 6334 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1648                           ECCP1CON equ 0FBDh ;# 
  1649  0000                     # 6491 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1650                           CCPR1 equ 0FBEh ;# 
  1651  0000                     # 6498 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1652                           CCPR1L equ 0FBEh ;# 
  1653  0000                     # 6505 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1654                           CCPR1H equ 0FBFh ;# 
  1655  0000                     # 6512 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1656                           ADCON2 equ 0FC0h ;# 
  1657  0000                     # 6583 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1658                           ADCON1 equ 0FC1h ;# 
  1659  0000                     # 6668 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1660                           ADCON0 equ 0FC2h ;# 
  1661  0000                     # 6787 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1662                           ADRES equ 0FC3h ;# 
  1663  0000                     # 6794 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1664                           ADRESL equ 0FC3h ;# 
  1665  0000                     # 6801 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1666                           ADRESH equ 0FC4h ;# 
  1667  0000                     # 6808 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1668                           SSPCON2 equ 0FC5h ;# 
  1669  0000                     # 6870 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1670                           SSPCON1 equ 0FC6h ;# 
  1671  0000                     # 6940 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1672                           SSPSTAT equ 0FC7h ;# 
  1673  0000                     # 7188 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1674                           SSPADD equ 0FC8h ;# 
  1675  0000                     # 7195 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1676                           SSPBUF equ 0FC9h ;# 
  1677  0000                     # 7202 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1678                           T2CON equ 0FCAh ;# 
  1679  0000                     # 7300 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1680                           PR2 equ 0FCBh ;# 
  1681  0000                     # 7305 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1682                           MEMCON equ 0FCBh ;# 
  1683  0000                     # 7410 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1684                           TMR2 equ 0FCCh ;# 
  1685  0000                     # 7417 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1686                           T1CON equ 0FCDh ;# 
  1687  0000                     # 7520 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1688                           TMR1 equ 0FCEh ;# 
  1689  0000                     # 7527 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1690                           TMR1L equ 0FCEh ;# 
  1691  0000                     # 7534 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1692                           TMR1H equ 0FCFh ;# 
  1693  0000                     # 7541 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1694                           RCON equ 0FD0h ;# 
  1695  0000                     # 7690 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1696                           WDTCON equ 0FD1h ;# 
  1697  0000                     # 7718 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1698                           HLVDCON equ 0FD2h ;# 
  1699  0000                     # 7723 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1700                           LVDCON equ 0FD2h ;# 
  1701  0000                     # 7988 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1702                           OSCCON equ 0FD3h ;# 
  1703  0000                     # 8071 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1704                           T0CON equ 0FD5h ;# 
  1705  0000                     # 8141 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1706                           TMR0 equ 0FD6h ;# 
  1707  0000                     # 8148 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1708                           TMR0L equ 0FD6h ;# 
  1709  0000                     # 8155 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1710                           TMR0H equ 0FD7h ;# 
  1711  0000                     # 8162 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1712                           STATUS equ 0FD8h ;# 
  1713  0000                     # 8233 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1714                           FSR2 equ 0FD9h ;# 
  1715  0000                     # 8240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1716                           FSR2L equ 0FD9h ;# 
  1717  0000                     # 8247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1718                           FSR2H equ 0FDAh ;# 
  1719  0000                     # 8254 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1720                           PLUSW2 equ 0FDBh ;# 
  1721  0000                     # 8261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1722                           PREINC2 equ 0FDCh ;# 
  1723  0000                     # 8268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1724                           POSTDEC2 equ 0FDDh ;# 
  1725  0000                     # 8275 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1726                           POSTINC2 equ 0FDEh ;# 
  1727  0000                     # 8282 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1728                           INDF2 equ 0FDFh ;# 
  1729  0000                     # 8289 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1730                           BSR equ 0FE0h ;# 
  1731  0000                     # 8296 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1732                           FSR1 equ 0FE1h ;# 
  1733  0000                     # 8303 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1734                           FSR1L equ 0FE1h ;# 
  1735  0000                     # 8310 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1736                           FSR1H equ 0FE2h ;# 
  1737  0000                     # 8317 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1738                           PLUSW1 equ 0FE3h ;# 
  1739  0000                     # 8324 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1740                           PREINC1 equ 0FE4h ;# 
  1741  0000                     # 8331 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1742                           POSTDEC1 equ 0FE5h ;# 
  1743  0000                     # 8338 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1744                           POSTINC1 equ 0FE6h ;# 
  1745  0000                     # 8345 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1746                           INDF1 equ 0FE7h ;# 
  1747  0000                     # 8352 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1748                           WREG equ 0FE8h ;# 
  1749  0000                     # 8359 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1750                           FSR0 equ 0FE9h ;# 
  1751  0000                     # 8366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1752                           FSR0L equ 0FE9h ;# 
  1753  0000                     # 8373 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1754                           FSR0H equ 0FEAh ;# 
  1755  0000                     # 8380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1756                           PLUSW0 equ 0FEBh ;# 
  1757  0000                     # 8387 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1758                           PREINC0 equ 0FECh ;# 
  1759  0000                     # 8394 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1760                           POSTDEC0 equ 0FEDh ;# 
  1761  0000                     # 8401 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1762                           POSTINC0 equ 0FEEh ;# 
  1763  0000                     # 8408 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1764                           INDF0 equ 0FEFh ;# 
  1765  0000                     # 8415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1766                           INTCON3 equ 0FF0h ;# 
  1767  0000                     # 8507 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1768                           INTCON2 equ 0FF1h ;# 
  1769  0000                     # 8584 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1770                           INTCON equ 0FF2h ;# 
  1771  0000                     # 8701 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1772                           PROD equ 0FF3h ;# 
  1773  0000                     # 8708 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1774                           PRODL equ 0FF3h ;# 
  1775  0000                     # 8715 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1776                           PRODH equ 0FF4h ;# 
  1777  0000                     # 8722 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1778                           TABLAT equ 0FF5h ;# 
  1779  0000                     # 8731 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1780                           TBLPTR equ 0FF6h ;# 
  1781  0000                     # 8738 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1782                           TBLPTRL equ 0FF6h ;# 
  1783  0000                     # 8745 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1784                           TBLPTRH equ 0FF7h ;# 
  1785  0000                     # 8752 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1786                           TBLPTRU equ 0FF8h ;# 
  1787  0000                     # 8761 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1788                           PCLAT equ 0FF9h ;# 
  1789  0000                     # 8768 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1790                           PC equ 0FF9h ;# 
  1791  0000                     # 8775 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1792                           PCL equ 0FF9h ;# 
  1793  0000                     # 8782 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1794                           PCLATH equ 0FFAh ;# 
  1795  0000                     # 8789 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1796                           PCLATU equ 0FFBh ;# 
  1797  0000                     # 8796 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1798                           STKPTR equ 0FFCh ;# 
  1799  0000                     # 8872 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1800                           TOS equ 0FFDh ;# 
  1801  0000                     # 8879 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1802                           TOSL equ 0FFDh ;# 
  1803  0000                     # 8886 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1804                           TOSH equ 0FFEh ;# 
  1805  0000                     # 8893 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1806                           TOSU equ 0FFFh ;# 
  1807  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1808                           SPPDATA equ 0F62h ;# 
  1809  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1810                           SPPCFG equ 0F63h ;# 
  1811  0000                     # 151 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1812                           SPPEPS equ 0F64h ;# 
  1813  0000                     # 225 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1814                           SPPCON equ 0F65h ;# 
  1815  0000                     # 251 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1816                           UFRM equ 0F66h ;# 
  1817  0000                     # 258 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1818                           UFRML equ 0F66h ;# 
  1819  0000                     # 336 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1820                           UFRMH equ 0F67h ;# 
  1821  0000                     # 376 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1822                           UIR equ 0F68h ;# 
  1823  0000                     # 432 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1824                           UIE equ 0F69h ;# 
  1825  0000                     # 488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1826                           UEIR equ 0F6Ah ;# 
  1827  0000                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1828                           UEIE equ 0F6Bh ;# 
  1829  0000                     # 590 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1830                           USTAT equ 0F6Ch ;# 
  1831  0000                     # 650 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1832                           UCON equ 0F6Dh ;# 
  1833  0000                     # 701 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1834                           UADDR equ 0F6Eh ;# 
  1835  0000                     # 765 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1836                           UCFG equ 0F6Fh ;# 
  1837  0000                     # 844 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1838                           UEP0 equ 0F70h ;# 
  1839  0000                     # 952 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1840                           UEP1 equ 0F71h ;# 
  1841  0000                     # 1060 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1842                           UEP2 equ 0F72h ;# 
  1843  0000                     # 1168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1844                           UEP3 equ 0F73h ;# 
  1845  0000                     # 1276 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1846                           UEP4 equ 0F74h ;# 
  1847  0000                     # 1384 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1848                           UEP5 equ 0F75h ;# 
  1849  0000                     # 1492 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1850                           UEP6 equ 0F76h ;# 
  1851  0000                     # 1600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1852                           UEP7 equ 0F77h ;# 
  1853  0000                     # 1708 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1854                           UEP8 equ 0F78h ;# 
  1855  0000                     # 1784 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1856                           UEP9 equ 0F79h ;# 
  1857  0000                     # 1860 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1858                           UEP10 equ 0F7Ah ;# 
  1859  0000                     # 1936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1860                           UEP11 equ 0F7Bh ;# 
  1861  0000                     # 2012 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1862                           UEP12 equ 0F7Ch ;# 
  1863  0000                     # 2088 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1864                           UEP13 equ 0F7Dh ;# 
  1865  0000                     # 2164 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1866                           UEP14 equ 0F7Eh ;# 
  1867  0000                     # 2240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1868                           UEP15 equ 0F7Fh ;# 
  1869  0000                     # 2316 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1870                           PORTA equ 0F80h ;# 
  1871  0000                     # 2455 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1872                           PORTB equ 0F81h ;# 
  1873  0000                     # 2565 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1874                           PORTC equ 0F82h ;# 
  1875  0000                     # 2707 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1876                           PORTD equ 0F83h ;# 
  1877  0000                     # 2828 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1878                           PORTE equ 0F84h ;# 
  1879  0000                     # 2975 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1880                           LATA equ 0F89h ;# 
  1881  0000                     # 3075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1882                           LATB equ 0F8Ah ;# 
  1883  0000                     # 3187 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1884                           LATC equ 0F8Bh ;# 
  1885  0000                     # 3265 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1886                           LATD equ 0F8Ch ;# 
  1887  0000                     # 3377 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1888                           LATE equ 0F8Dh ;# 
  1889  0000                     # 3429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1890                           TRISA equ 0F92h ;# 
  1891  0000                     # 3434 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1892                           DDRA equ 0F92h ;# 
  1893  0000                     # 3627 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1894                           TRISB equ 0F93h ;# 
  1895  0000                     # 3632 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1896                           DDRB equ 0F93h ;# 
  1897  0000                     # 3849 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1898                           TRISC equ 0F94h ;# 
  1899  0000                     # 3854 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1900                           DDRC equ 0F94h ;# 
  1901  0000                     # 4003 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1902                           TRISD equ 0F95h ;# 
  1903  0000                     # 4008 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1904                           DDRD equ 0F95h ;# 
  1905  0000                     # 4225 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1906                           TRISE equ 0F96h ;# 
  1907  0000                     # 4230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1908                           DDRE equ 0F96h ;# 
  1909  0000                     # 4327 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1910                           OSCTUNE equ 0F9Bh ;# 
  1911  0000                     # 4386 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1912                           PIE1 equ 0F9Dh ;# 
  1913  0000                     # 4470 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1914                           PIR1 equ 0F9Eh ;# 
  1915  0000                     # 4554 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1916                           IPR1 equ 0F9Fh ;# 
  1917  0000                     # 4638 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1918                           PIE2 equ 0FA0h ;# 
  1919  0000                     # 4709 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1920                           PIR2 equ 0FA1h ;# 
  1921  0000                     # 4780 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1922                           IPR2 equ 0FA2h ;# 
  1923  0000                     # 4851 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1924                           EECON1 equ 0FA6h ;# 
  1925  0000                     # 4917 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1926                           EECON2 equ 0FA7h ;# 
  1927  0000                     # 4924 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1928                           EEDATA equ 0FA8h ;# 
  1929  0000                     # 4931 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1930                           EEADR equ 0FA9h ;# 
  1931  0000                     # 4938 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1932                           RCSTA equ 0FABh ;# 
  1933  0000                     # 4943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1934                           RCSTA1 equ 0FABh ;# 
  1935  0000                     # 5148 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1936                           TXSTA equ 0FACh ;# 
  1937  0000                     # 5153 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1938                           TXSTA1 equ 0FACh ;# 
  1939  0000                     # 5404 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1940                           TXREG equ 0FADh ;# 
  1941  0000                     # 5409 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1942                           TXREG1 equ 0FADh ;# 
  1943  0000                     # 5416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1944                           RCREG equ 0FAEh ;# 
  1945  0000                     # 5421 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1946                           RCREG1 equ 0FAEh ;# 
  1947  0000                     # 5428 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1948                           SPBRG equ 0FAFh ;# 
  1949  0000                     # 5433 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1950                           SPBRG1 equ 0FAFh ;# 
  1951  0000                     # 5440 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1952                           SPBRGH equ 0FB0h ;# 
  1953  0000                     # 5447 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1954                           T3CON equ 0FB1h ;# 
  1955  0000                     # 5568 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1956                           TMR3 equ 0FB2h ;# 
  1957  0000                     # 5575 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1958                           TMR3L equ 0FB2h ;# 
  1959  0000                     # 5582 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1960                           TMR3H equ 0FB3h ;# 
  1961  0000                     # 5589 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1962                           CMCON equ 0FB4h ;# 
  1963  0000                     # 5679 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1964                           CVRCON equ 0FB5h ;# 
  1965  0000                     # 5764 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1966                           ECCP1AS equ 0FB6h ;# 
  1967  0000                     # 5769 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1968                           CCP1AS equ 0FB6h ;# 
  1969  0000                     # 5926 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1970                           ECCP1DEL equ 0FB7h ;# 
  1971  0000                     # 5931 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1972                           CCP1DEL equ 0FB7h ;# 
  1973  0000                     # 6064 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1974                           BAUDCON equ 0FB8h ;# 
  1975  0000                     # 6069 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1976                           BAUDCTL equ 0FB8h ;# 
  1977  0000                     # 6244 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1978                           CCP2CON equ 0FBAh ;# 
  1979  0000                     # 6308 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1980                           CCPR2 equ 0FBBh ;# 
  1981  0000                     # 6315 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1982                           CCPR2L equ 0FBBh ;# 
  1983  0000                     # 6322 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1984                           CCPR2H equ 0FBCh ;# 
  1985  0000                     # 6329 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1986                           CCP1CON equ 0FBDh ;# 
  1987  0000                     # 6334 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1988                           ECCP1CON equ 0FBDh ;# 
  1989  0000                     # 6491 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1990                           CCPR1 equ 0FBEh ;# 
  1991  0000                     # 6498 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1992                           CCPR1L equ 0FBEh ;# 
  1993  0000                     # 6505 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1994                           CCPR1H equ 0FBFh ;# 
  1995  0000                     # 6512 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1996                           ADCON2 equ 0FC0h ;# 
  1997  0000                     # 6583 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1998                           ADCON1 equ 0FC1h ;# 
  1999  0000                     # 6668 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2000                           ADCON0 equ 0FC2h ;# 
  2001  0000                     # 6787 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2002                           ADRES equ 0FC3h ;# 
  2003  0000                     # 6794 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2004                           ADRESL equ 0FC3h ;# 
  2005  0000                     # 6801 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2006                           ADRESH equ 0FC4h ;# 
  2007  0000                     # 6808 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2008                           SSPCON2 equ 0FC5h ;# 
  2009  0000                     # 6870 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2010                           SSPCON1 equ 0FC6h ;# 
  2011  0000                     # 6940 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2012                           SSPSTAT equ 0FC7h ;# 
  2013  0000                     # 7188 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2014                           SSPADD equ 0FC8h ;# 
  2015  0000                     # 7195 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2016                           SSPBUF equ 0FC9h ;# 
  2017  0000                     # 7202 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2018                           T2CON equ 0FCAh ;# 
  2019  0000                     # 7300 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2020                           PR2 equ 0FCBh ;# 
  2021  0000                     # 7305 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2022                           MEMCON equ 0FCBh ;# 
  2023  0000                     # 7410 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2024                           TMR2 equ 0FCCh ;# 
  2025  0000                     # 7417 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2026                           T1CON equ 0FCDh ;# 
  2027  0000                     # 7520 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2028                           TMR1 equ 0FCEh ;# 
  2029  0000                     # 7527 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2030                           TMR1L equ 0FCEh ;# 
  2031  0000                     # 7534 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2032                           TMR1H equ 0FCFh ;# 
  2033  0000                     # 7541 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2034                           RCON equ 0FD0h ;# 
  2035  0000                     # 7690 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2036                           WDTCON equ 0FD1h ;# 
  2037  0000                     # 7718 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2038                           HLVDCON equ 0FD2h ;# 
  2039  0000                     # 7723 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2040                           LVDCON equ 0FD2h ;# 
  2041  0000                     # 7988 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2042                           OSCCON equ 0FD3h ;# 
  2043  0000                     # 8071 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2044                           T0CON equ 0FD5h ;# 
  2045  0000                     # 8141 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2046                           TMR0 equ 0FD6h ;# 
  2047  0000                     # 8148 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2048                           TMR0L equ 0FD6h ;# 
  2049  0000                     # 8155 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2050                           TMR0H equ 0FD7h ;# 
  2051  0000                     # 8162 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2052                           STATUS equ 0FD8h ;# 
  2053  0000                     # 8233 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2054                           FSR2 equ 0FD9h ;# 
  2055  0000                     # 8240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2056                           FSR2L equ 0FD9h ;# 
  2057  0000                     # 8247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2058                           FSR2H equ 0FDAh ;# 
  2059  0000                     # 8254 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2060                           PLUSW2 equ 0FDBh ;# 
  2061  0000                     # 8261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2062                           PREINC2 equ 0FDCh ;# 
  2063  0000                     # 8268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2064                           POSTDEC2 equ 0FDDh ;# 
  2065  0000                     # 8275 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2066                           POSTINC2 equ 0FDEh ;# 
  2067  0000                     # 8282 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2068                           INDF2 equ 0FDFh ;# 
  2069  0000                     # 8289 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2070                           BSR equ 0FE0h ;# 
  2071  0000                     # 8296 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2072                           FSR1 equ 0FE1h ;# 
  2073  0000                     # 8303 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2074                           FSR1L equ 0FE1h ;# 
  2075  0000                     # 8310 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2076                           FSR1H equ 0FE2h ;# 
  2077  0000                     # 8317 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2078                           PLUSW1 equ 0FE3h ;# 
  2079  0000                     # 8324 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2080                           PREINC1 equ 0FE4h ;# 
  2081  0000                     # 8331 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2082                           POSTDEC1 equ 0FE5h ;# 
  2083  0000                     # 8338 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2084                           POSTINC1 equ 0FE6h ;# 
  2085  0000                     # 8345 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2086                           INDF1 equ 0FE7h ;# 
  2087  0000                     # 8352 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2088                           WREG equ 0FE8h ;# 
  2089  0000                     # 8359 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2090                           FSR0 equ 0FE9h ;# 
  2091  0000                     # 8366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2092                           FSR0L equ 0FE9h ;# 
  2093  0000                     # 8373 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2094                           FSR0H equ 0FEAh ;# 
  2095  0000                     # 8380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2096                           PLUSW0 equ 0FEBh ;# 
  2097  0000                     # 8387 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2098                           PREINC0 equ 0FECh ;# 
  2099  0000                     # 8394 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2100                           POSTDEC0 equ 0FEDh ;# 
  2101  0000                     # 8401 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2102                           POSTINC0 equ 0FEEh ;# 
  2103  0000                     # 8408 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2104                           INDF0 equ 0FEFh ;# 
  2105  0000                     # 8415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2106                           INTCON3 equ 0FF0h ;# 
  2107  0000                     # 8507 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2108                           INTCON2 equ 0FF1h ;# 
  2109  0000                     # 8584 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2110                           INTCON equ 0FF2h ;# 
  2111  0000                     # 8701 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2112                           PROD equ 0FF3h ;# 
  2113  0000                     # 8708 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2114                           PRODL equ 0FF3h ;# 
  2115  0000                     # 8715 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2116                           PRODH equ 0FF4h ;# 
  2117  0000                     # 8722 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2118                           TABLAT equ 0FF5h ;# 
  2119  0000                     # 8731 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2120                           TBLPTR equ 0FF6h ;# 
  2121  0000                     # 8738 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2122                           TBLPTRL equ 0FF6h ;# 
  2123  0000                     # 8745 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2124                           TBLPTRH equ 0FF7h ;# 
  2125  0000                     # 8752 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2126                           TBLPTRU equ 0FF8h ;# 
  2127  0000                     # 8761 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2128                           PCLAT equ 0FF9h ;# 
  2129  0000                     # 8768 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2130                           PC equ 0FF9h ;# 
  2131  0000                     # 8775 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2132                           PCL equ 0FF9h ;# 
  2133  0000                     # 8782 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2134                           PCLATH equ 0FFAh ;# 
  2135  0000                     # 8789 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2136                           PCLATU equ 0FFBh ;# 
  2137  0000                     # 8796 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2138                           STKPTR equ 0FFCh ;# 
  2139  0000                     # 8872 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2140                           TOS equ 0FFDh ;# 
  2141  0000                     # 8879 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2142                           TOSL equ 0FFDh ;# 
  2143  0000                     # 8886 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2144                           TOSH equ 0FFEh ;# 
  2145  0000                     # 8893 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2146                           TOSU equ 0FFFh ;# 
  2147  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2148                           SPPDATA equ 0F62h ;# 
  2149  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2150                           SPPCFG equ 0F63h ;# 
  2151  0000                     # 151 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2152                           SPPEPS equ 0F64h ;# 
  2153  0000                     # 225 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2154                           SPPCON equ 0F65h ;# 
  2155  0000                     # 251 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2156                           UFRM equ 0F66h ;# 
  2157  0000                     # 258 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2158                           UFRML equ 0F66h ;# 
  2159  0000                     # 336 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2160                           UFRMH equ 0F67h ;# 
  2161  0000                     # 376 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2162                           UIR equ 0F68h ;# 
  2163  0000                     # 432 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2164                           UIE equ 0F69h ;# 
  2165  0000                     # 488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2166                           UEIR equ 0F6Ah ;# 
  2167  0000                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2168                           UEIE equ 0F6Bh ;# 
  2169  0000                     # 590 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2170                           USTAT equ 0F6Ch ;# 
  2171  0000                     # 650 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2172                           UCON equ 0F6Dh ;# 
  2173  0000                     # 701 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2174                           UADDR equ 0F6Eh ;# 
  2175  0000                     # 765 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2176                           UCFG equ 0F6Fh ;# 
  2177  0000                     # 844 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2178                           UEP0 equ 0F70h ;# 
  2179  0000                     # 952 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2180                           UEP1 equ 0F71h ;# 
  2181  0000                     # 1060 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2182                           UEP2 equ 0F72h ;# 
  2183  0000                     # 1168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2184                           UEP3 equ 0F73h ;# 
  2185  0000                     # 1276 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2186                           UEP4 equ 0F74h ;# 
  2187  0000                     # 1384 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2188                           UEP5 equ 0F75h ;# 
  2189  0000                     # 1492 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2190                           UEP6 equ 0F76h ;# 
  2191  0000                     # 1600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2192                           UEP7 equ 0F77h ;# 
  2193  0000                     # 1708 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2194                           UEP8 equ 0F78h ;# 
  2195  0000                     # 1784 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2196                           UEP9 equ 0F79h ;# 
  2197  0000                     # 1860 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2198                           UEP10 equ 0F7Ah ;# 
  2199  0000                     # 1936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2200                           UEP11 equ 0F7Bh ;# 
  2201  0000                     # 2012 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2202                           UEP12 equ 0F7Ch ;# 
  2203  0000                     # 2088 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2204                           UEP13 equ 0F7Dh ;# 
  2205  0000                     # 2164 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2206                           UEP14 equ 0F7Eh ;# 
  2207  0000                     # 2240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2208                           UEP15 equ 0F7Fh ;# 
  2209  0000                     # 2316 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2210                           PORTA equ 0F80h ;# 
  2211  0000                     # 2455 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2212                           PORTB equ 0F81h ;# 
  2213  0000                     # 2565 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2214                           PORTC equ 0F82h ;# 
  2215  0000                     # 2707 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2216                           PORTD equ 0F83h ;# 
  2217  0000                     # 2828 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2218                           PORTE equ 0F84h ;# 
  2219  0000                     # 2975 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2220                           LATA equ 0F89h ;# 
  2221  0000                     # 3075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2222                           LATB equ 0F8Ah ;# 
  2223  0000                     # 3187 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2224                           LATC equ 0F8Bh ;# 
  2225  0000                     # 3265 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2226                           LATD equ 0F8Ch ;# 
  2227  0000                     # 3377 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2228                           LATE equ 0F8Dh ;# 
  2229  0000                     # 3429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2230                           TRISA equ 0F92h ;# 
  2231  0000                     # 3434 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2232                           DDRA equ 0F92h ;# 
  2233  0000                     # 3627 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2234                           TRISB equ 0F93h ;# 
  2235  0000                     # 3632 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2236                           DDRB equ 0F93h ;# 
  2237  0000                     # 3849 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2238                           TRISC equ 0F94h ;# 
  2239  0000                     # 3854 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2240                           DDRC equ 0F94h ;# 
  2241  0000                     # 4003 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2242                           TRISD equ 0F95h ;# 
  2243  0000                     # 4008 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2244                           DDRD equ 0F95h ;# 
  2245  0000                     # 4225 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2246                           TRISE equ 0F96h ;# 
  2247  0000                     # 4230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2248                           DDRE equ 0F96h ;# 
  2249  0000                     # 4327 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2250                           OSCTUNE equ 0F9Bh ;# 
  2251  0000                     # 4386 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2252                           PIE1 equ 0F9Dh ;# 
  2253  0000                     # 4470 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2254                           PIR1 equ 0F9Eh ;# 
  2255  0000                     # 4554 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2256                           IPR1 equ 0F9Fh ;# 
  2257  0000                     # 4638 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2258                           PIE2 equ 0FA0h ;# 
  2259  0000                     # 4709 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2260                           PIR2 equ 0FA1h ;# 
  2261  0000                     # 4780 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2262                           IPR2 equ 0FA2h ;# 
  2263  0000                     # 4851 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2264                           EECON1 equ 0FA6h ;# 
  2265  0000                     # 4917 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2266                           EECON2 equ 0FA7h ;# 
  2267  0000                     # 4924 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2268                           EEDATA equ 0FA8h ;# 
  2269  0000                     # 4931 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2270                           EEADR equ 0FA9h ;# 
  2271  0000                     # 4938 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2272                           RCSTA equ 0FABh ;# 
  2273  0000                     # 4943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2274                           RCSTA1 equ 0FABh ;# 
  2275  0000                     # 5148 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2276                           TXSTA equ 0FACh ;# 
  2277  0000                     # 5153 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2278                           TXSTA1 equ 0FACh ;# 
  2279  0000                     # 5404 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2280                           TXREG equ 0FADh ;# 
  2281  0000                     # 5409 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2282                           TXREG1 equ 0FADh ;# 
  2283  0000                     # 5416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2284                           RCREG equ 0FAEh ;# 
  2285  0000                     # 5421 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2286                           RCREG1 equ 0FAEh ;# 
  2287  0000                     # 5428 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2288                           SPBRG equ 0FAFh ;# 
  2289  0000                     # 5433 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2290                           SPBRG1 equ 0FAFh ;# 
  2291  0000                     # 5440 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2292                           SPBRGH equ 0FB0h ;# 
  2293  0000                     # 5447 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2294                           T3CON equ 0FB1h ;# 
  2295  0000                     # 5568 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2296                           TMR3 equ 0FB2h ;# 
  2297  0000                     # 5575 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2298                           TMR3L equ 0FB2h ;# 
  2299  0000                     # 5582 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2300                           TMR3H equ 0FB3h ;# 
  2301  0000                     # 5589 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2302                           CMCON equ 0FB4h ;# 
  2303  0000                     # 5679 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2304                           CVRCON equ 0FB5h ;# 
  2305  0000                     # 5764 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2306                           ECCP1AS equ 0FB6h ;# 
  2307  0000                     # 5769 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2308                           CCP1AS equ 0FB6h ;# 
  2309  0000                     # 5926 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2310                           ECCP1DEL equ 0FB7h ;# 
  2311  0000                     # 5931 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2312                           CCP1DEL equ 0FB7h ;# 
  2313  0000                     # 6064 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2314                           BAUDCON equ 0FB8h ;# 
  2315  0000                     # 6069 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2316                           BAUDCTL equ 0FB8h ;# 
  2317  0000                     # 6244 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2318                           CCP2CON equ 0FBAh ;# 
  2319  0000                     # 6308 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2320                           CCPR2 equ 0FBBh ;# 
  2321  0000                     # 6315 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2322                           CCPR2L equ 0FBBh ;# 
  2323  0000                     # 6322 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2324                           CCPR2H equ 0FBCh ;# 
  2325  0000                     # 6329 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2326                           CCP1CON equ 0FBDh ;# 
  2327  0000                     # 6334 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2328                           ECCP1CON equ 0FBDh ;# 
  2329  0000                     # 6491 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2330                           CCPR1 equ 0FBEh ;# 
  2331  0000                     # 6498 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2332                           CCPR1L equ 0FBEh ;# 
  2333  0000                     # 6505 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2334                           CCPR1H equ 0FBFh ;# 
  2335  0000                     # 6512 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2336                           ADCON2 equ 0FC0h ;# 
  2337  0000                     # 6583 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2338                           ADCON1 equ 0FC1h ;# 
  2339  0000                     # 6668 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2340                           ADCON0 equ 0FC2h ;# 
  2341  0000                     # 6787 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2342                           ADRES equ 0FC3h ;# 
  2343  0000                     # 6794 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2344                           ADRESL equ 0FC3h ;# 
  2345  0000                     # 6801 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2346                           ADRESH equ 0FC4h ;# 
  2347  0000                     # 6808 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2348                           SSPCON2 equ 0FC5h ;# 
  2349  0000                     # 6870 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2350                           SSPCON1 equ 0FC6h ;# 
  2351  0000                     # 6940 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2352                           SSPSTAT equ 0FC7h ;# 
  2353  0000                     # 7188 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2354                           SSPADD equ 0FC8h ;# 
  2355  0000                     # 7195 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2356                           SSPBUF equ 0FC9h ;# 
  2357  0000                     # 7202 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2358                           T2CON equ 0FCAh ;# 
  2359  0000                     # 7300 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2360                           PR2 equ 0FCBh ;# 
  2361  0000                     # 7305 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2362                           MEMCON equ 0FCBh ;# 
  2363  0000                     # 7410 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2364                           TMR2 equ 0FCCh ;# 
  2365  0000                     # 7417 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2366                           T1CON equ 0FCDh ;# 
  2367  0000                     # 7520 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2368                           TMR1 equ 0FCEh ;# 
  2369  0000                     # 7527 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2370                           TMR1L equ 0FCEh ;# 
  2371  0000                     # 7534 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2372                           TMR1H equ 0FCFh ;# 
  2373  0000                     # 7541 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2374                           RCON equ 0FD0h ;# 
  2375  0000                     # 7690 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2376                           WDTCON equ 0FD1h ;# 
  2377  0000                     # 7718 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2378                           HLVDCON equ 0FD2h ;# 
  2379  0000                     # 7723 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2380                           LVDCON equ 0FD2h ;# 
  2381  0000                     # 7988 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2382                           OSCCON equ 0FD3h ;# 
  2383  0000                     # 8071 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2384                           T0CON equ 0FD5h ;# 
  2385  0000                     # 8141 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2386                           TMR0 equ 0FD6h ;# 
  2387  0000                     # 8148 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2388                           TMR0L equ 0FD6h ;# 
  2389  0000                     # 8155 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2390                           TMR0H equ 0FD7h ;# 
  2391  0000                     # 8162 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2392                           STATUS equ 0FD8h ;# 
  2393  0000                     # 8233 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2394                           FSR2 equ 0FD9h ;# 
  2395  0000                     # 8240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2396                           FSR2L equ 0FD9h ;# 
  2397  0000                     # 8247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2398                           FSR2H equ 0FDAh ;# 
  2399  0000                     # 8254 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2400                           PLUSW2 equ 0FDBh ;# 
  2401  0000                     # 8261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2402                           PREINC2 equ 0FDCh ;# 
  2403  0000                     # 8268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2404                           POSTDEC2 equ 0FDDh ;# 
  2405  0000                     # 8275 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2406                           POSTINC2 equ 0FDEh ;# 
  2407  0000                     # 8282 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2408                           INDF2 equ 0FDFh ;# 
  2409  0000                     # 8289 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2410                           BSR equ 0FE0h ;# 
  2411  0000                     # 8296 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2412                           FSR1 equ 0FE1h ;# 
  2413  0000                     # 8303 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2414                           FSR1L equ 0FE1h ;# 
  2415  0000                     # 8310 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2416                           FSR1H equ 0FE2h ;# 
  2417  0000                     # 8317 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2418                           PLUSW1 equ 0FE3h ;# 
  2419  0000                     # 8324 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2420                           PREINC1 equ 0FE4h ;# 
  2421  0000                     # 8331 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2422                           POSTDEC1 equ 0FE5h ;# 
  2423  0000                     # 8338 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2424                           POSTINC1 equ 0FE6h ;# 
  2425  0000                     # 8345 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2426                           INDF1 equ 0FE7h ;# 
  2427  0000                     # 8352 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2428                           WREG equ 0FE8h ;# 
  2429  0000                     # 8359 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2430                           FSR0 equ 0FE9h ;# 
  2431  0000                     # 8366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2432                           FSR0L equ 0FE9h ;# 
  2433  0000                     # 8373 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2434                           FSR0H equ 0FEAh ;# 
  2435  0000                     # 8380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2436                           PLUSW0 equ 0FEBh ;# 
  2437  0000                     # 8387 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2438                           PREINC0 equ 0FECh ;# 
  2439  0000                     # 8394 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2440                           POSTDEC0 equ 0FEDh ;# 
  2441  0000                     # 8401 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2442                           POSTINC0 equ 0FEEh ;# 
  2443  0000                     # 8408 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2444                           INDF0 equ 0FEFh ;# 
  2445  0000                     # 8415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2446                           INTCON3 equ 0FF0h ;# 
  2447  0000                     # 8507 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2448                           INTCON2 equ 0FF1h ;# 
  2449  0000                     # 8584 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2450                           INTCON equ 0FF2h ;# 
  2451  0000                     # 8701 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2452                           PROD equ 0FF3h ;# 
  2453  0000                     # 8708 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2454                           PRODL equ 0FF3h ;# 
  2455  0000                     # 8715 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2456                           PRODH equ 0FF4h ;# 
  2457  0000                     # 8722 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2458                           TABLAT equ 0FF5h ;# 
  2459  0000                     # 8731 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2460                           TBLPTR equ 0FF6h ;# 
  2461  0000                     # 8738 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2462                           TBLPTRL equ 0FF6h ;# 
  2463  0000                     # 8745 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2464                           TBLPTRH equ 0FF7h ;# 
  2465  0000                     # 8752 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2466                           TBLPTRU equ 0FF8h ;# 
  2467  0000                     # 8761 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2468                           PCLAT equ 0FF9h ;# 
  2469  0000                     # 8768 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2470                           PC equ 0FF9h ;# 
  2471  0000                     # 8775 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2472                           PCL equ 0FF9h ;# 
  2473  0000                     # 8782 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2474                           PCLATH equ 0FFAh ;# 
  2475  0000                     # 8789 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2476                           PCLATU equ 0FFBh ;# 
  2477  0000                     # 8796 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2478                           STKPTR equ 0FFCh ;# 
  2479  0000                     # 8872 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2480                           TOS equ 0FFDh ;# 
  2481  0000                     # 8879 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2482                           TOSL equ 0FFDh ;# 
  2483  0000                     # 8886 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2484                           TOSH equ 0FFEh ;# 
  2485  0000                     # 8893 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2486                           TOSU equ 0FFFh ;# 
  2487  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2488                           SPPDATA equ 0F62h ;# 
  2489  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2490                           SPPCFG equ 0F63h ;# 
  2491  0000                     # 151 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2492                           SPPEPS equ 0F64h ;# 
  2493  0000                     # 225 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2494                           SPPCON equ 0F65h ;# 
  2495  0000                     # 251 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2496                           UFRM equ 0F66h ;# 
  2497  0000                     # 258 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2498                           UFRML equ 0F66h ;# 
  2499  0000                     # 336 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2500                           UFRMH equ 0F67h ;# 
  2501  0000                     # 376 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2502                           UIR equ 0F68h ;# 
  2503  0000                     # 432 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2504                           UIE equ 0F69h ;# 
  2505  0000                     # 488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2506                           UEIR equ 0F6Ah ;# 
  2507  0000                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2508                           UEIE equ 0F6Bh ;# 
  2509  0000                     # 590 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2510                           USTAT equ 0F6Ch ;# 
  2511  0000                     # 650 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2512                           UCON equ 0F6Dh ;# 
  2513  0000                     # 701 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2514                           UADDR equ 0F6Eh ;# 
  2515  0000                     # 765 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2516                           UCFG equ 0F6Fh ;# 
  2517  0000                     # 844 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2518                           UEP0 equ 0F70h ;# 
  2519  0000                     # 952 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2520                           UEP1 equ 0F71h ;# 
  2521  0000                     # 1060 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2522                           UEP2 equ 0F72h ;# 
  2523  0000                     # 1168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2524                           UEP3 equ 0F73h ;# 
  2525  0000                     # 1276 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2526                           UEP4 equ 0F74h ;# 
  2527  0000                     # 1384 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2528                           UEP5 equ 0F75h ;# 
  2529  0000                     # 1492 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2530                           UEP6 equ 0F76h ;# 
  2531  0000                     # 1600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2532                           UEP7 equ 0F77h ;# 
  2533  0000                     # 1708 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2534                           UEP8 equ 0F78h ;# 
  2535  0000                     # 1784 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2536                           UEP9 equ 0F79h ;# 
  2537  0000                     # 1860 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2538                           UEP10 equ 0F7Ah ;# 
  2539  0000                     # 1936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2540                           UEP11 equ 0F7Bh ;# 
  2541  0000                     # 2012 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2542                           UEP12 equ 0F7Ch ;# 
  2543  0000                     # 2088 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2544                           UEP13 equ 0F7Dh ;# 
  2545  0000                     # 2164 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2546                           UEP14 equ 0F7Eh ;# 
  2547  0000                     # 2240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2548                           UEP15 equ 0F7Fh ;# 
  2549  0000                     # 2316 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2550                           PORTA equ 0F80h ;# 
  2551  0000                     # 2455 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2552                           PORTB equ 0F81h ;# 
  2553  0000                     # 2565 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2554                           PORTC equ 0F82h ;# 
  2555  0000                     # 2707 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2556                           PORTD equ 0F83h ;# 
  2557  0000                     # 2828 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2558                           PORTE equ 0F84h ;# 
  2559  0000                     # 2975 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2560                           LATA equ 0F89h ;# 
  2561  0000                     # 3075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2562                           LATB equ 0F8Ah ;# 
  2563  0000                     # 3187 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2564                           LATC equ 0F8Bh ;# 
  2565  0000                     # 3265 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2566                           LATD equ 0F8Ch ;# 
  2567  0000                     # 3377 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2568                           LATE equ 0F8Dh ;# 
  2569  0000                     # 3429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2570                           TRISA equ 0F92h ;# 
  2571  0000                     # 3434 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2572                           DDRA equ 0F92h ;# 
  2573  0000                     # 3627 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2574                           TRISB equ 0F93h ;# 
  2575  0000                     # 3632 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2576                           DDRB equ 0F93h ;# 
  2577  0000                     # 3849 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2578                           TRISC equ 0F94h ;# 
  2579  0000                     # 3854 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2580                           DDRC equ 0F94h ;# 
  2581  0000                     # 4003 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2582                           TRISD equ 0F95h ;# 
  2583  0000                     # 4008 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2584                           DDRD equ 0F95h ;# 
  2585  0000                     # 4225 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2586                           TRISE equ 0F96h ;# 
  2587  0000                     # 4230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2588                           DDRE equ 0F96h ;# 
  2589  0000                     # 4327 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2590                           OSCTUNE equ 0F9Bh ;# 
  2591  0000                     # 4386 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2592                           PIE1 equ 0F9Dh ;# 
  2593  0000                     # 4470 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2594                           PIR1 equ 0F9Eh ;# 
  2595  0000                     # 4554 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2596                           IPR1 equ 0F9Fh ;# 
  2597  0000                     # 4638 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2598                           PIE2 equ 0FA0h ;# 
  2599  0000                     # 4709 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2600                           PIR2 equ 0FA1h ;# 
  2601  0000                     # 4780 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2602                           IPR2 equ 0FA2h ;# 
  2603  0000                     # 4851 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2604                           EECON1 equ 0FA6h ;# 
  2605  0000                     # 4917 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2606                           EECON2 equ 0FA7h ;# 
  2607  0000                     # 4924 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2608                           EEDATA equ 0FA8h ;# 
  2609  0000                     # 4931 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2610                           EEADR equ 0FA9h ;# 
  2611  0000                     # 4938 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2612                           RCSTA equ 0FABh ;# 
  2613  0000                     # 4943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2614                           RCSTA1 equ 0FABh ;# 
  2615  0000                     # 5148 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2616                           TXSTA equ 0FACh ;# 
  2617  0000                     # 5153 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2618                           TXSTA1 equ 0FACh ;# 
  2619  0000                     # 5404 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2620                           TXREG equ 0FADh ;# 
  2621  0000                     # 5409 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2622                           TXREG1 equ 0FADh ;# 
  2623  0000                     # 5416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2624                           RCREG equ 0FAEh ;# 
  2625  0000                     # 5421 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2626                           RCREG1 equ 0FAEh ;# 
  2627  0000                     # 5428 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2628                           SPBRG equ 0FAFh ;# 
  2629  0000                     # 5433 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2630                           SPBRG1 equ 0FAFh ;# 
  2631  0000                     # 5440 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2632                           SPBRGH equ 0FB0h ;# 
  2633  0000                     # 5447 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2634                           T3CON equ 0FB1h ;# 
  2635  0000                     # 5568 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2636                           TMR3 equ 0FB2h ;# 
  2637  0000                     # 5575 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2638                           TMR3L equ 0FB2h ;# 
  2639  0000                     # 5582 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2640                           TMR3H equ 0FB3h ;# 
  2641  0000                     # 5589 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2642                           CMCON equ 0FB4h ;# 
  2643  0000                     # 5679 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2644                           CVRCON equ 0FB5h ;# 
  2645  0000                     # 5764 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2646                           ECCP1AS equ 0FB6h ;# 
  2647  0000                     # 5769 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2648                           CCP1AS equ 0FB6h ;# 
  2649  0000                     # 5926 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2650                           ECCP1DEL equ 0FB7h ;# 
  2651  0000                     # 5931 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2652                           CCP1DEL equ 0FB7h ;# 
  2653  0000                     # 6064 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2654                           BAUDCON equ 0FB8h ;# 
  2655  0000                     # 6069 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2656                           BAUDCTL equ 0FB8h ;# 
  2657  0000                     # 6244 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2658                           CCP2CON equ 0FBAh ;# 
  2659  0000                     # 6308 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2660                           CCPR2 equ 0FBBh ;# 
  2661  0000                     # 6315 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2662                           CCPR2L equ 0FBBh ;# 
  2663  0000                     # 6322 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2664                           CCPR2H equ 0FBCh ;# 
  2665  0000                     # 6329 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2666                           CCP1CON equ 0FBDh ;# 
  2667  0000                     # 6334 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2668                           ECCP1CON equ 0FBDh ;# 
  2669  0000                     # 6491 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2670                           CCPR1 equ 0FBEh ;# 
  2671  0000                     # 6498 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2672                           CCPR1L equ 0FBEh ;# 
  2673  0000                     # 6505 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2674                           CCPR1H equ 0FBFh ;# 
  2675  0000                     # 6512 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2676                           ADCON2 equ 0FC0h ;# 
  2677  0000                     # 6583 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2678                           ADCON1 equ 0FC1h ;# 
  2679  0000                     # 6668 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2680                           ADCON0 equ 0FC2h ;# 
  2681  0000                     # 6787 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2682                           ADRES equ 0FC3h ;# 
  2683  0000                     # 6794 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2684                           ADRESL equ 0FC3h ;# 
  2685  0000                     # 6801 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2686                           ADRESH equ 0FC4h ;# 
  2687  0000                     # 6808 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2688                           SSPCON2 equ 0FC5h ;# 
  2689  0000                     # 6870 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2690                           SSPCON1 equ 0FC6h ;# 
  2691  0000                     # 6940 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2692                           SSPSTAT equ 0FC7h ;# 
  2693  0000                     # 7188 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2694                           SSPADD equ 0FC8h ;# 
  2695  0000                     # 7195 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2696                           SSPBUF equ 0FC9h ;# 
  2697  0000                     # 7202 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2698                           T2CON equ 0FCAh ;# 
  2699  0000                     # 7300 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2700                           PR2 equ 0FCBh ;# 
  2701  0000                     # 7305 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2702                           MEMCON equ 0FCBh ;# 
  2703  0000                     # 7410 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2704                           TMR2 equ 0FCCh ;# 
  2705  0000                     # 7417 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2706                           T1CON equ 0FCDh ;# 
  2707  0000                     # 7520 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2708                           TMR1 equ 0FCEh ;# 
  2709  0000                     # 7527 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2710                           TMR1L equ 0FCEh ;# 
  2711  0000                     # 7534 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2712                           TMR1H equ 0FCFh ;# 
  2713  0000                     # 7541 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2714                           RCON equ 0FD0h ;# 
  2715  0000                     # 7690 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2716                           WDTCON equ 0FD1h ;# 
  2717  0000                     # 7718 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2718                           HLVDCON equ 0FD2h ;# 
  2719  0000                     # 7723 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2720                           LVDCON equ 0FD2h ;# 
  2721  0000                     # 7988 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2722                           OSCCON equ 0FD3h ;# 
  2723  0000                     # 8071 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2724                           T0CON equ 0FD5h ;# 
  2725  0000                     # 8141 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2726                           TMR0 equ 0FD6h ;# 
  2727  0000                     # 8148 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2728                           TMR0L equ 0FD6h ;# 
  2729  0000                     # 8155 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2730                           TMR0H equ 0FD7h ;# 
  2731  0000                     # 8162 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2732                           STATUS equ 0FD8h ;# 
  2733  0000                     # 8233 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2734                           FSR2 equ 0FD9h ;# 
  2735  0000                     # 8240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2736                           FSR2L equ 0FD9h ;# 
  2737  0000                     # 8247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2738                           FSR2H equ 0FDAh ;# 
  2739  0000                     # 8254 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2740                           PLUSW2 equ 0FDBh ;# 
  2741  0000                     # 8261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2742                           PREINC2 equ 0FDCh ;# 
  2743  0000                     # 8268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2744                           POSTDEC2 equ 0FDDh ;# 
  2745  0000                     # 8275 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2746                           POSTINC2 equ 0FDEh ;# 
  2747  0000                     # 8282 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2748                           INDF2 equ 0FDFh ;# 
  2749  0000                     # 8289 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2750                           BSR equ 0FE0h ;# 
  2751  0000                     # 8296 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2752                           FSR1 equ 0FE1h ;# 
  2753  0000                     # 8303 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2754                           FSR1L equ 0FE1h ;# 
  2755  0000                     # 8310 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2756                           FSR1H equ 0FE2h ;# 
  2757  0000                     # 8317 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2758                           PLUSW1 equ 0FE3h ;# 
  2759  0000                     # 8324 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2760                           PREINC1 equ 0FE4h ;# 
  2761  0000                     # 8331 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2762                           POSTDEC1 equ 0FE5h ;# 
  2763  0000                     # 8338 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2764                           POSTINC1 equ 0FE6h ;# 
  2765  0000                     # 8345 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2766                           INDF1 equ 0FE7h ;# 
  2767  0000                     # 8352 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2768                           WREG equ 0FE8h ;# 
  2769  0000                     # 8359 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2770                           FSR0 equ 0FE9h ;# 
  2771  0000                     # 8366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2772                           FSR0L equ 0FE9h ;# 
  2773  0000                     # 8373 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2774                           FSR0H equ 0FEAh ;# 
  2775  0000                     # 8380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2776                           PLUSW0 equ 0FEBh ;# 
  2777  0000                     # 8387 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2778                           PREINC0 equ 0FECh ;# 
  2779  0000                     # 8394 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2780                           POSTDEC0 equ 0FEDh ;# 
  2781  0000                     # 8401 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2782                           POSTINC0 equ 0FEEh ;# 
  2783  0000                     # 8408 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2784                           INDF0 equ 0FEFh ;# 
  2785  0000                     # 8415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2786                           INTCON3 equ 0FF0h ;# 
  2787  0000                     # 8507 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2788                           INTCON2 equ 0FF1h ;# 
  2789  0000                     # 8584 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2790                           INTCON equ 0FF2h ;# 
  2791  0000                     # 8701 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2792                           PROD equ 0FF3h ;# 
  2793  0000                     # 8708 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2794                           PRODL equ 0FF3h ;# 
  2795  0000                     # 8715 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2796                           PRODH equ 0FF4h ;# 
  2797  0000                     # 8722 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2798                           TABLAT equ 0FF5h ;# 
  2799  0000                     # 8731 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2800                           TBLPTR equ 0FF6h ;# 
  2801  0000                     # 8738 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2802                           TBLPTRL equ 0FF6h ;# 
  2803  0000                     # 8745 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2804                           TBLPTRH equ 0FF7h ;# 
  2805  0000                     # 8752 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2806                           TBLPTRU equ 0FF8h ;# 
  2807  0000                     # 8761 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2808                           PCLAT equ 0FF9h ;# 
  2809  0000                     # 8768 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2810                           PC equ 0FF9h ;# 
  2811  0000                     # 8775 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2812                           PCL equ 0FF9h ;# 
  2813  0000                     # 8782 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2814                           PCLATH equ 0FFAh ;# 
  2815  0000                     # 8789 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2816                           PCLATU equ 0FFBh ;# 
  2817  0000                     # 8796 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2818                           STKPTR equ 0FFCh ;# 
  2819  0000                     # 8872 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2820                           TOS equ 0FFDh ;# 
  2821  0000                     # 8879 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2822                           TOSL equ 0FFDh ;# 
  2823  0000                     # 8886 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2824                           TOSH equ 0FFEh ;# 
  2825  0000                     # 8893 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2826                           TOSU equ 0FFFh ;# 
  2827  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2828                           SPPDATA equ 0F62h ;# 
  2829  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2830                           SPPCFG equ 0F63h ;# 
  2831  0000                     # 151 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2832                           SPPEPS equ 0F64h ;# 
  2833  0000                     # 225 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2834                           SPPCON equ 0F65h ;# 
  2835  0000                     # 251 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2836                           UFRM equ 0F66h ;# 
  2837  0000                     # 258 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2838                           UFRML equ 0F66h ;# 
  2839  0000                     # 336 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2840                           UFRMH equ 0F67h ;# 
  2841  0000                     # 376 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2842                           UIR equ 0F68h ;# 
  2843  0000                     # 432 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2844                           UIE equ 0F69h ;# 
  2845  0000                     # 488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2846                           UEIR equ 0F6Ah ;# 
  2847  0000                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2848                           UEIE equ 0F6Bh ;# 
  2849  0000                     # 590 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2850                           USTAT equ 0F6Ch ;# 
  2851  0000                     # 650 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2852                           UCON equ 0F6Dh ;# 
  2853  0000                     # 701 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2854                           UADDR equ 0F6Eh ;# 
  2855  0000                     # 765 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2856                           UCFG equ 0F6Fh ;# 
  2857  0000                     # 844 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2858                           UEP0 equ 0F70h ;# 
  2859  0000                     # 952 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2860                           UEP1 equ 0F71h ;# 
  2861  0000                     # 1060 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2862                           UEP2 equ 0F72h ;# 
  2863  0000                     # 1168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2864                           UEP3 equ 0F73h ;# 
  2865  0000                     # 1276 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2866                           UEP4 equ 0F74h ;# 
  2867  0000                     # 1384 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2868                           UEP5 equ 0F75h ;# 
  2869  0000                     # 1492 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2870                           UEP6 equ 0F76h ;# 
  2871  0000                     # 1600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2872                           UEP7 equ 0F77h ;# 
  2873  0000                     # 1708 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2874                           UEP8 equ 0F78h ;# 
  2875  0000                     # 1784 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2876                           UEP9 equ 0F79h ;# 
  2877  0000                     # 1860 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2878                           UEP10 equ 0F7Ah ;# 
  2879  0000                     # 1936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2880                           UEP11 equ 0F7Bh ;# 
  2881  0000                     # 2012 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2882                           UEP12 equ 0F7Ch ;# 
  2883  0000                     # 2088 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2884                           UEP13 equ 0F7Dh ;# 
  2885  0000                     # 2164 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2886                           UEP14 equ 0F7Eh ;# 
  2887  0000                     # 2240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2888                           UEP15 equ 0F7Fh ;# 
  2889  0000                     # 2316 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2890                           PORTA equ 0F80h ;# 
  2891  0000                     # 2455 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2892                           PORTB equ 0F81h ;# 
  2893  0000                     # 2565 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2894                           PORTC equ 0F82h ;# 
  2895  0000                     # 2707 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2896                           PORTD equ 0F83h ;# 
  2897  0000                     # 2828 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2898                           PORTE equ 0F84h ;# 
  2899  0000                     # 2975 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2900                           LATA equ 0F89h ;# 
  2901  0000                     # 3075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2902                           LATB equ 0F8Ah ;# 
  2903  0000                     # 3187 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2904                           LATC equ 0F8Bh ;# 
  2905  0000                     # 3265 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2906                           LATD equ 0F8Ch ;# 
  2907  0000                     # 3377 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2908                           LATE equ 0F8Dh ;# 
  2909  0000                     # 3429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2910                           TRISA equ 0F92h ;# 
  2911  0000                     # 3434 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2912                           DDRA equ 0F92h ;# 
  2913  0000                     # 3627 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2914                           TRISB equ 0F93h ;# 
  2915  0000                     # 3632 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2916                           DDRB equ 0F93h ;# 
  2917  0000                     # 3849 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2918                           TRISC equ 0F94h ;# 
  2919  0000                     # 3854 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2920                           DDRC equ 0F94h ;# 
  2921  0000                     # 4003 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2922                           TRISD equ 0F95h ;# 
  2923  0000                     # 4008 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2924                           DDRD equ 0F95h ;# 
  2925  0000                     # 4225 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2926                           TRISE equ 0F96h ;# 
  2927  0000                     # 4230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2928                           DDRE equ 0F96h ;# 
  2929  0000                     # 4327 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2930                           OSCTUNE equ 0F9Bh ;# 
  2931  0000                     # 4386 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2932                           PIE1 equ 0F9Dh ;# 
  2933  0000                     # 4470 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2934                           PIR1 equ 0F9Eh ;# 
  2935  0000                     # 4554 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2936                           IPR1 equ 0F9Fh ;# 
  2937  0000                     # 4638 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2938                           PIE2 equ 0FA0h ;# 
  2939  0000                     # 4709 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2940                           PIR2 equ 0FA1h ;# 
  2941  0000                     # 4780 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2942                           IPR2 equ 0FA2h ;# 
  2943  0000                     # 4851 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2944                           EECON1 equ 0FA6h ;# 
  2945  0000                     # 4917 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2946                           EECON2 equ 0FA7h ;# 
  2947  0000                     # 4924 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2948                           EEDATA equ 0FA8h ;# 
  2949  0000                     # 4931 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2950                           EEADR equ 0FA9h ;# 
  2951  0000                     # 4938 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2952                           RCSTA equ 0FABh ;# 
  2953  0000                     # 4943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2954                           RCSTA1 equ 0FABh ;# 
  2955  0000                     # 5148 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2956                           TXSTA equ 0FACh ;# 
  2957  0000                     # 5153 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2958                           TXSTA1 equ 0FACh ;# 
  2959  0000                     # 5404 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2960                           TXREG equ 0FADh ;# 
  2961  0000                     # 5409 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2962                           TXREG1 equ 0FADh ;# 
  2963  0000                     # 5416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2964                           RCREG equ 0FAEh ;# 
  2965  0000                     # 5421 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2966                           RCREG1 equ 0FAEh ;# 
  2967  0000                     # 5428 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2968                           SPBRG equ 0FAFh ;# 
  2969  0000                     # 5433 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2970                           SPBRG1 equ 0FAFh ;# 
  2971  0000                     # 5440 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2972                           SPBRGH equ 0FB0h ;# 
  2973  0000                     # 5447 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2974                           T3CON equ 0FB1h ;# 
  2975  0000                     # 5568 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2976                           TMR3 equ 0FB2h ;# 
  2977  0000                     # 5575 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2978                           TMR3L equ 0FB2h ;# 
  2979  0000                     # 5582 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2980                           TMR3H equ 0FB3h ;# 
  2981  0000                     # 5589 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2982                           CMCON equ 0FB4h ;# 
  2983  0000                     # 5679 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2984                           CVRCON equ 0FB5h ;# 
  2985  0000                     # 5764 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2986                           ECCP1AS equ 0FB6h ;# 
  2987  0000                     # 5769 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2988                           CCP1AS equ 0FB6h ;# 
  2989  0000                     # 5926 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2990                           ECCP1DEL equ 0FB7h ;# 
  2991  0000                     # 5931 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2992                           CCP1DEL equ 0FB7h ;# 
  2993  0000                     # 6064 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2994                           BAUDCON equ 0FB8h ;# 
  2995  0000                     # 6069 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2996                           BAUDCTL equ 0FB8h ;# 
  2997  0000                     # 6244 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2998                           CCP2CON equ 0FBAh ;# 
  2999  0000                     # 6308 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3000                           CCPR2 equ 0FBBh ;# 
  3001  0000                     # 6315 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3002                           CCPR2L equ 0FBBh ;# 
  3003  0000                     # 6322 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3004                           CCPR2H equ 0FBCh ;# 
  3005  0000                     # 6329 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3006                           CCP1CON equ 0FBDh ;# 
  3007  0000                     # 6334 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3008                           ECCP1CON equ 0FBDh ;# 
  3009  0000                     # 6491 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3010                           CCPR1 equ 0FBEh ;# 
  3011  0000                     # 6498 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3012                           CCPR1L equ 0FBEh ;# 
  3013  0000                     # 6505 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3014                           CCPR1H equ 0FBFh ;# 
  3015  0000                     # 6512 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3016                           ADCON2 equ 0FC0h ;# 
  3017  0000                     # 6583 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3018                           ADCON1 equ 0FC1h ;# 
  3019  0000                     # 6668 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3020                           ADCON0 equ 0FC2h ;# 
  3021  0000                     # 6787 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3022                           ADRES equ 0FC3h ;# 
  3023  0000                     # 6794 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3024                           ADRESL equ 0FC3h ;# 
  3025  0000                     # 6801 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3026                           ADRESH equ 0FC4h ;# 
  3027  0000                     # 6808 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3028                           SSPCON2 equ 0FC5h ;# 
  3029  0000                     # 6870 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3030                           SSPCON1 equ 0FC6h ;# 
  3031  0000                     # 6940 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3032                           SSPSTAT equ 0FC7h ;# 
  3033  0000                     # 7188 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3034                           SSPADD equ 0FC8h ;# 
  3035  0000                     # 7195 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3036                           SSPBUF equ 0FC9h ;# 
  3037  0000                     # 7202 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3038                           T2CON equ 0FCAh ;# 
  3039  0000                     # 7300 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3040                           PR2 equ 0FCBh ;# 
  3041  0000                     # 7305 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3042                           MEMCON equ 0FCBh ;# 
  3043  0000                     # 7410 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3044                           TMR2 equ 0FCCh ;# 
  3045  0000                     # 7417 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3046                           T1CON equ 0FCDh ;# 
  3047  0000                     # 7520 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3048                           TMR1 equ 0FCEh ;# 
  3049  0000                     # 7527 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3050                           TMR1L equ 0FCEh ;# 
  3051  0000                     # 7534 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3052                           TMR1H equ 0FCFh ;# 
  3053  0000                     # 7541 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3054                           RCON equ 0FD0h ;# 
  3055  0000                     # 7690 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3056                           WDTCON equ 0FD1h ;# 
  3057  0000                     # 7718 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3058                           HLVDCON equ 0FD2h ;# 
  3059  0000                     # 7723 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3060                           LVDCON equ 0FD2h ;# 
  3061  0000                     # 7988 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3062                           OSCCON equ 0FD3h ;# 
  3063  0000                     # 8071 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3064                           T0CON equ 0FD5h ;# 
  3065  0000                     # 8141 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3066                           TMR0 equ 0FD6h ;# 
  3067  0000                     # 8148 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3068                           TMR0L equ 0FD6h ;# 
  3069  0000                     # 8155 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3070                           TMR0H equ 0FD7h ;# 
  3071  0000                     # 8162 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3072                           STATUS equ 0FD8h ;# 
  3073  0000                     # 8233 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3074                           FSR2 equ 0FD9h ;# 
  3075  0000                     # 8240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3076                           FSR2L equ 0FD9h ;# 
  3077  0000                     # 8247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3078                           FSR2H equ 0FDAh ;# 
  3079  0000                     # 8254 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3080                           PLUSW2 equ 0FDBh ;# 
  3081  0000                     # 8261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3082                           PREINC2 equ 0FDCh ;# 
  3083  0000                     # 8268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3084                           POSTDEC2 equ 0FDDh ;# 
  3085  0000                     # 8275 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3086                           POSTINC2 equ 0FDEh ;# 
  3087  0000                     # 8282 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3088                           INDF2 equ 0FDFh ;# 
  3089  0000                     # 8289 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3090                           BSR equ 0FE0h ;# 
  3091  0000                     # 8296 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3092                           FSR1 equ 0FE1h ;# 
  3093  0000                     # 8303 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3094                           FSR1L equ 0FE1h ;# 
  3095  0000                     # 8310 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3096                           FSR1H equ 0FE2h ;# 
  3097  0000                     # 8317 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3098                           PLUSW1 equ 0FE3h ;# 
  3099  0000                     # 8324 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3100                           PREINC1 equ 0FE4h ;# 
  3101  0000                     # 8331 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3102                           POSTDEC1 equ 0FE5h ;# 
  3103  0000                     # 8338 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3104                           POSTINC1 equ 0FE6h ;# 
  3105  0000                     # 8345 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3106                           INDF1 equ 0FE7h ;# 
  3107  0000                     # 8352 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3108                           WREG equ 0FE8h ;# 
  3109  0000                     # 8359 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3110                           FSR0 equ 0FE9h ;# 
  3111  0000                     # 8366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3112                           FSR0L equ 0FE9h ;# 
  3113  0000                     # 8373 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3114                           FSR0H equ 0FEAh ;# 
  3115  0000                     # 8380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3116                           PLUSW0 equ 0FEBh ;# 
  3117  0000                     # 8387 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3118                           PREINC0 equ 0FECh ;# 
  3119  0000                     # 8394 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3120                           POSTDEC0 equ 0FEDh ;# 
  3121  0000                     # 8401 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3122                           POSTINC0 equ 0FEEh ;# 
  3123  0000                     # 8408 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3124                           INDF0 equ 0FEFh ;# 
  3125  0000                     # 8415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3126                           INTCON3 equ 0FF0h ;# 
  3127  0000                     # 8507 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3128                           INTCON2 equ 0FF1h ;# 
  3129  0000                     # 8584 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3130                           INTCON equ 0FF2h ;# 
  3131  0000                     # 8701 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3132                           PROD equ 0FF3h ;# 
  3133  0000                     # 8708 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3134                           PRODL equ 0FF3h ;# 
  3135  0000                     # 8715 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3136                           PRODH equ 0FF4h ;# 
  3137  0000                     # 8722 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3138                           TABLAT equ 0FF5h ;# 
  3139  0000                     # 8731 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3140                           TBLPTR equ 0FF6h ;# 
  3141  0000                     # 8738 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3142                           TBLPTRL equ 0FF6h ;# 
  3143  0000                     # 8745 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3144                           TBLPTRH equ 0FF7h ;# 
  3145  0000                     # 8752 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3146                           TBLPTRU equ 0FF8h ;# 
  3147  0000                     # 8761 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3148                           PCLAT equ 0FF9h ;# 
  3149  0000                     # 8768 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3150                           PC equ 0FF9h ;# 
  3151  0000                     # 8775 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3152                           PCL equ 0FF9h ;# 
  3153  0000                     # 8782 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3154                           PCLATH equ 0FFAh ;# 
  3155  0000                     # 8789 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3156                           PCLATU equ 0FFBh ;# 
  3157  0000                     # 8796 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3158                           STKPTR equ 0FFCh ;# 
  3159  0000                     # 8872 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3160                           TOS equ 0FFDh ;# 
  3161  0000                     # 8879 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3162                           TOSL equ 0FFDh ;# 
  3163  0000                     # 8886 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3164                           TOSH equ 0FFEh ;# 
  3165  0000                     # 8893 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3166                           TOSU equ 0FFFh ;# 
  3167  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3168                           SPPDATA equ 0F62h ;# 
  3169  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3170                           SPPCFG equ 0F63h ;# 
  3171  0000                     # 151 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3172                           SPPEPS equ 0F64h ;# 
  3173  0000                     # 225 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3174                           SPPCON equ 0F65h ;# 
  3175  0000                     # 251 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3176                           UFRM equ 0F66h ;# 
  3177  0000                     # 258 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3178                           UFRML equ 0F66h ;# 
  3179  0000                     # 336 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3180                           UFRMH equ 0F67h ;# 
  3181  0000                     # 376 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3182                           UIR equ 0F68h ;# 
  3183  0000                     # 432 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3184                           UIE equ 0F69h ;# 
  3185  0000                     # 488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3186                           UEIR equ 0F6Ah ;# 
  3187  0000                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3188                           UEIE equ 0F6Bh ;# 
  3189  0000                     # 590 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3190                           USTAT equ 0F6Ch ;# 
  3191  0000                     # 650 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3192                           UCON equ 0F6Dh ;# 
  3193  0000                     # 701 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3194                           UADDR equ 0F6Eh ;# 
  3195  0000                     # 765 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3196                           UCFG equ 0F6Fh ;# 
  3197  0000                     # 844 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3198                           UEP0 equ 0F70h ;# 
  3199  0000                     # 952 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3200                           UEP1 equ 0F71h ;# 
  3201  0000                     # 1060 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3202                           UEP2 equ 0F72h ;# 
  3203  0000                     # 1168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3204                           UEP3 equ 0F73h ;# 
  3205  0000                     # 1276 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3206                           UEP4 equ 0F74h ;# 
  3207  0000                     # 1384 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3208                           UEP5 equ 0F75h ;# 
  3209  0000                     # 1492 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3210                           UEP6 equ 0F76h ;# 
  3211  0000                     # 1600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3212                           UEP7 equ 0F77h ;# 
  3213  0000                     # 1708 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3214                           UEP8 equ 0F78h ;# 
  3215  0000                     # 1784 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3216                           UEP9 equ 0F79h ;# 
  3217  0000                     # 1860 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3218                           UEP10 equ 0F7Ah ;# 
  3219  0000                     # 1936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3220                           UEP11 equ 0F7Bh ;# 
  3221  0000                     # 2012 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3222                           UEP12 equ 0F7Ch ;# 
  3223  0000                     # 2088 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3224                           UEP13 equ 0F7Dh ;# 
  3225  0000                     # 2164 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3226                           UEP14 equ 0F7Eh ;# 
  3227  0000                     # 2240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3228                           UEP15 equ 0F7Fh ;# 
  3229  0000                     # 2316 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3230                           PORTA equ 0F80h ;# 
  3231  0000                     # 2455 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3232                           PORTB equ 0F81h ;# 
  3233  0000                     # 2565 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3234                           PORTC equ 0F82h ;# 
  3235  0000                     # 2707 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3236                           PORTD equ 0F83h ;# 
  3237  0000                     # 2828 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3238                           PORTE equ 0F84h ;# 
  3239  0000                     # 2975 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3240                           LATA equ 0F89h ;# 
  3241  0000                     # 3075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3242                           LATB equ 0F8Ah ;# 
  3243  0000                     # 3187 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3244                           LATC equ 0F8Bh ;# 
  3245  0000                     # 3265 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3246                           LATD equ 0F8Ch ;# 
  3247  0000                     # 3377 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3248                           LATE equ 0F8Dh ;# 
  3249  0000                     # 3429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3250                           TRISA equ 0F92h ;# 
  3251  0000                     # 3434 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3252                           DDRA equ 0F92h ;# 
  3253  0000                     # 3627 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3254                           TRISB equ 0F93h ;# 
  3255  0000                     # 3632 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3256                           DDRB equ 0F93h ;# 
  3257  0000                     # 3849 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3258                           TRISC equ 0F94h ;# 
  3259  0000                     # 3854 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3260                           DDRC equ 0F94h ;# 
  3261  0000                     # 4003 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3262                           TRISD equ 0F95h ;# 
  3263  0000                     # 4008 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3264                           DDRD equ 0F95h ;# 
  3265  0000                     # 4225 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3266                           TRISE equ 0F96h ;# 
  3267  0000                     # 4230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3268                           DDRE equ 0F96h ;# 
  3269  0000                     # 4327 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3270                           OSCTUNE equ 0F9Bh ;# 
  3271  0000                     # 4386 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3272                           PIE1 equ 0F9Dh ;# 
  3273  0000                     # 4470 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3274                           PIR1 equ 0F9Eh ;# 
  3275  0000                     # 4554 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3276                           IPR1 equ 0F9Fh ;# 
  3277  0000                     # 4638 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3278                           PIE2 equ 0FA0h ;# 
  3279  0000                     # 4709 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3280                           PIR2 equ 0FA1h ;# 
  3281  0000                     # 4780 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3282                           IPR2 equ 0FA2h ;# 
  3283  0000                     # 4851 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3284                           EECON1 equ 0FA6h ;# 
  3285  0000                     # 4917 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3286                           EECON2 equ 0FA7h ;# 
  3287  0000                     # 4924 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3288                           EEDATA equ 0FA8h ;# 
  3289  0000                     # 4931 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3290                           EEADR equ 0FA9h ;# 
  3291  0000                     # 4938 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3292                           RCSTA equ 0FABh ;# 
  3293  0000                     # 4943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3294                           RCSTA1 equ 0FABh ;# 
  3295  0000                     # 5148 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3296                           TXSTA equ 0FACh ;# 
  3297  0000                     # 5153 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3298                           TXSTA1 equ 0FACh ;# 
  3299  0000                     # 5404 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3300                           TXREG equ 0FADh ;# 
  3301  0000                     # 5409 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3302                           TXREG1 equ 0FADh ;# 
  3303  0000                     # 5416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3304                           RCREG equ 0FAEh ;# 
  3305  0000                     # 5421 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3306                           RCREG1 equ 0FAEh ;# 
  3307  0000                     # 5428 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3308                           SPBRG equ 0FAFh ;# 
  3309  0000                     # 5433 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3310                           SPBRG1 equ 0FAFh ;# 
  3311  0000                     # 5440 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3312                           SPBRGH equ 0FB0h ;# 
  3313  0000                     # 5447 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3314                           T3CON equ 0FB1h ;# 
  3315  0000                     # 5568 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3316                           TMR3 equ 0FB2h ;# 
  3317  0000                     # 5575 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3318                           TMR3L equ 0FB2h ;# 
  3319  0000                     # 5582 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3320                           TMR3H equ 0FB3h ;# 
  3321  0000                     # 5589 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3322                           CMCON equ 0FB4h ;# 
  3323  0000                     # 5679 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3324                           CVRCON equ 0FB5h ;# 
  3325  0000                     # 5764 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3326                           ECCP1AS equ 0FB6h ;# 
  3327  0000                     # 5769 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3328                           CCP1AS equ 0FB6h ;# 
  3329  0000                     # 5926 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3330                           ECCP1DEL equ 0FB7h ;# 
  3331  0000                     # 5931 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3332                           CCP1DEL equ 0FB7h ;# 
  3333  0000                     # 6064 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3334                           BAUDCON equ 0FB8h ;# 
  3335  0000                     # 6069 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3336                           BAUDCTL equ 0FB8h ;# 
  3337  0000                     # 6244 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3338                           CCP2CON equ 0FBAh ;# 
  3339  0000                     # 6308 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3340                           CCPR2 equ 0FBBh ;# 
  3341  0000                     # 6315 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3342                           CCPR2L equ 0FBBh ;# 
  3343  0000                     # 6322 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3344                           CCPR2H equ 0FBCh ;# 
  3345  0000                     # 6329 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3346                           CCP1CON equ 0FBDh ;# 
  3347  0000                     # 6334 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3348                           ECCP1CON equ 0FBDh ;# 
  3349  0000                     # 6491 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3350                           CCPR1 equ 0FBEh ;# 
  3351  0000                     # 6498 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3352                           CCPR1L equ 0FBEh ;# 
  3353  0000                     # 6505 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3354                           CCPR1H equ 0FBFh ;# 
  3355  0000                     # 6512 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3356                           ADCON2 equ 0FC0h ;# 
  3357  0000                     # 6583 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3358                           ADCON1 equ 0FC1h ;# 
  3359  0000                     # 6668 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3360                           ADCON0 equ 0FC2h ;# 
  3361  0000                     # 6787 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3362                           ADRES equ 0FC3h ;# 
  3363  0000                     # 6794 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3364                           ADRESL equ 0FC3h ;# 
  3365  0000                     # 6801 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3366                           ADRESH equ 0FC4h ;# 
  3367  0000                     # 6808 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3368                           SSPCON2 equ 0FC5h ;# 
  3369  0000                     # 6870 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3370                           SSPCON1 equ 0FC6h ;# 
  3371  0000                     # 6940 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3372                           SSPSTAT equ 0FC7h ;# 
  3373  0000                     # 7188 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3374                           SSPADD equ 0FC8h ;# 
  3375  0000                     # 7195 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3376                           SSPBUF equ 0FC9h ;# 
  3377  0000                     # 7202 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3378                           T2CON equ 0FCAh ;# 
  3379  0000                     # 7300 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3380                           PR2 equ 0FCBh ;# 
  3381  0000                     # 7305 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3382                           MEMCON equ 0FCBh ;# 
  3383  0000                     # 7410 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3384                           TMR2 equ 0FCCh ;# 
  3385  0000                     # 7417 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3386                           T1CON equ 0FCDh ;# 
  3387  0000                     # 7520 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3388                           TMR1 equ 0FCEh ;# 
  3389  0000                     # 7527 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3390                           TMR1L equ 0FCEh ;# 
  3391  0000                     # 7534 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3392                           TMR1H equ 0FCFh ;# 
  3393  0000                     # 7541 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3394                           RCON equ 0FD0h ;# 
  3395  0000                     # 7690 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3396                           WDTCON equ 0FD1h ;# 
  3397  0000                     # 7718 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3398                           HLVDCON equ 0FD2h ;# 
  3399  0000                     # 7723 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3400                           LVDCON equ 0FD2h ;# 
  3401  0000                     # 7988 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3402                           OSCCON equ 0FD3h ;# 
  3403  0000                     # 8071 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3404                           T0CON equ 0FD5h ;# 
  3405  0000                     # 8141 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3406                           TMR0 equ 0FD6h ;# 
  3407  0000                     # 8148 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3408                           TMR0L equ 0FD6h ;# 
  3409  0000                     # 8155 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3410                           TMR0H equ 0FD7h ;# 
  3411  0000                     # 8162 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3412                           STATUS equ 0FD8h ;# 
  3413  0000                     # 8233 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3414                           FSR2 equ 0FD9h ;# 
  3415  0000                     # 8240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3416                           FSR2L equ 0FD9h ;# 
  3417  0000                     # 8247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3418                           FSR2H equ 0FDAh ;# 
  3419  0000                     # 8254 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3420                           PLUSW2 equ 0FDBh ;# 
  3421  0000                     # 8261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3422                           PREINC2 equ 0FDCh ;# 
  3423  0000                     # 8268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3424                           POSTDEC2 equ 0FDDh ;# 
  3425  0000                     # 8275 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3426                           POSTINC2 equ 0FDEh ;# 
  3427  0000                     # 8282 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3428                           INDF2 equ 0FDFh ;# 
  3429  0000                     # 8289 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3430                           BSR equ 0FE0h ;# 
  3431  0000                     # 8296 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3432                           FSR1 equ 0FE1h ;# 
  3433  0000                     # 8303 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3434                           FSR1L equ 0FE1h ;# 
  3435  0000                     # 8310 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3436                           FSR1H equ 0FE2h ;# 
  3437  0000                     # 8317 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3438                           PLUSW1 equ 0FE3h ;# 
  3439  0000                     # 8324 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3440                           PREINC1 equ 0FE4h ;# 
  3441  0000                     # 8331 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3442                           POSTDEC1 equ 0FE5h ;# 
  3443  0000                     # 8338 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3444                           POSTINC1 equ 0FE6h ;# 
  3445  0000                     # 8345 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3446                           INDF1 equ 0FE7h ;# 
  3447  0000                     # 8352 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3448                           WREG equ 0FE8h ;# 
  3449  0000                     # 8359 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3450                           FSR0 equ 0FE9h ;# 
  3451  0000                     # 8366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3452                           FSR0L equ 0FE9h ;# 
  3453  0000                     # 8373 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3454                           FSR0H equ 0FEAh ;# 
  3455  0000                     # 8380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3456                           PLUSW0 equ 0FEBh ;# 
  3457  0000                     # 8387 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3458                           PREINC0 equ 0FECh ;# 
  3459  0000                     # 8394 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3460                           POSTDEC0 equ 0FEDh ;# 
  3461  0000                     # 8401 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3462                           POSTINC0 equ 0FEEh ;# 
  3463  0000                     # 8408 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3464                           INDF0 equ 0FEFh ;# 
  3465  0000                     # 8415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3466                           INTCON3 equ 0FF0h ;# 
  3467  0000                     # 8507 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3468                           INTCON2 equ 0FF1h ;# 
  3469  0000                     # 8584 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3470                           INTCON equ 0FF2h ;# 
  3471  0000                     # 8701 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3472                           PROD equ 0FF3h ;# 
  3473  0000                     # 8708 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3474                           PRODL equ 0FF3h ;# 
  3475  0000                     # 8715 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3476                           PRODH equ 0FF4h ;# 
  3477  0000                     # 8722 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3478                           TABLAT equ 0FF5h ;# 
  3479  0000                     # 8731 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3480                           TBLPTR equ 0FF6h ;# 
  3481  0000                     # 8738 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3482                           TBLPTRL equ 0FF6h ;# 
  3483  0000                     # 8745 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3484                           TBLPTRH equ 0FF7h ;# 
  3485  0000                     # 8752 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3486                           TBLPTRU equ 0FF8h ;# 
  3487  0000                     # 8761 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3488                           PCLAT equ 0FF9h ;# 
  3489  0000                     # 8768 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3490                           PC equ 0FF9h ;# 
  3491  0000                     # 8775 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3492                           PCL equ 0FF9h ;# 
  3493  0000                     # 8782 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3494                           PCLATH equ 0FFAh ;# 
  3495  0000                     # 8789 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3496                           PCLATU equ 0FFBh ;# 
  3497  0000                     # 8796 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3498                           STKPTR equ 0FFCh ;# 
  3499  0000                     # 8872 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3500                           TOS equ 0FFDh ;# 
  3501  0000                     # 8879 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3502                           TOSL equ 0FFDh ;# 
  3503  0000                     # 8886 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3504                           TOSH equ 0FFEh ;# 
  3505  0000                     # 8893 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3506                           TOSU equ 0FFFh ;# 
  3507  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3508                           SPPDATA equ 0F62h ;# 
  3509  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3510                           SPPCFG equ 0F63h ;# 
  3511  0000                     # 151 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3512                           SPPEPS equ 0F64h ;# 
  3513  0000                     # 225 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3514                           SPPCON equ 0F65h ;# 
  3515  0000                     # 251 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3516                           UFRM equ 0F66h ;# 
  3517  0000                     # 258 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3518                           UFRML equ 0F66h ;# 
  3519  0000                     # 336 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3520                           UFRMH equ 0F67h ;# 
  3521  0000                     # 376 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3522                           UIR equ 0F68h ;# 
  3523  0000                     # 432 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3524                           UIE equ 0F69h ;# 
  3525  0000                     # 488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3526                           UEIR equ 0F6Ah ;# 
  3527  0000                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3528                           UEIE equ 0F6Bh ;# 
  3529  0000                     # 590 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3530                           USTAT equ 0F6Ch ;# 
  3531  0000                     # 650 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3532                           UCON equ 0F6Dh ;# 
  3533  0000                     # 701 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3534                           UADDR equ 0F6Eh ;# 
  3535  0000                     # 765 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3536                           UCFG equ 0F6Fh ;# 
  3537  0000                     # 844 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3538                           UEP0 equ 0F70h ;# 
  3539  0000                     # 952 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3540                           UEP1 equ 0F71h ;# 
  3541  0000                     # 1060 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3542                           UEP2 equ 0F72h ;# 
  3543  0000                     # 1168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3544                           UEP3 equ 0F73h ;# 
  3545  0000                     # 1276 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3546                           UEP4 equ 0F74h ;# 
  3547  0000                     # 1384 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3548                           UEP5 equ 0F75h ;# 
  3549  0000                     # 1492 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3550                           UEP6 equ 0F76h ;# 
  3551  0000                     # 1600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3552                           UEP7 equ 0F77h ;# 
  3553  0000                     # 1708 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3554                           UEP8 equ 0F78h ;# 
  3555  0000                     # 1784 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3556                           UEP9 equ 0F79h ;# 
  3557  0000                     # 1860 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3558                           UEP10 equ 0F7Ah ;# 
  3559  0000                     # 1936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3560                           UEP11 equ 0F7Bh ;# 
  3561  0000                     # 2012 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3562                           UEP12 equ 0F7Ch ;# 
  3563  0000                     # 2088 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3564                           UEP13 equ 0F7Dh ;# 
  3565  0000                     # 2164 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3566                           UEP14 equ 0F7Eh ;# 
  3567  0000                     # 2240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3568                           UEP15 equ 0F7Fh ;# 
  3569  0000                     # 2316 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3570                           PORTA equ 0F80h ;# 
  3571  0000                     # 2455 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3572                           PORTB equ 0F81h ;# 
  3573  0000                     # 2565 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3574                           PORTC equ 0F82h ;# 
  3575  0000                     # 2707 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3576                           PORTD equ 0F83h ;# 
  3577  0000                     # 2828 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3578                           PORTE equ 0F84h ;# 
  3579  0000                     # 2975 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3580                           LATA equ 0F89h ;# 
  3581  0000                     # 3075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3582                           LATB equ 0F8Ah ;# 
  3583  0000                     # 3187 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3584                           LATC equ 0F8Bh ;# 
  3585  0000                     # 3265 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3586                           LATD equ 0F8Ch ;# 
  3587  0000                     # 3377 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3588                           LATE equ 0F8Dh ;# 
  3589  0000                     # 3429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3590                           TRISA equ 0F92h ;# 
  3591  0000                     # 3434 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3592                           DDRA equ 0F92h ;# 
  3593  0000                     # 3627 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3594                           TRISB equ 0F93h ;# 
  3595  0000                     # 3632 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3596                           DDRB equ 0F93h ;# 
  3597  0000                     # 3849 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3598                           TRISC equ 0F94h ;# 
  3599  0000                     # 3854 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3600                           DDRC equ 0F94h ;# 
  3601  0000                     # 4003 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3602                           TRISD equ 0F95h ;# 
  3603  0000                     # 4008 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3604                           DDRD equ 0F95h ;# 
  3605  0000                     # 4225 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3606                           TRISE equ 0F96h ;# 
  3607  0000                     # 4230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3608                           DDRE equ 0F96h ;# 
  3609  0000                     # 4327 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3610                           OSCTUNE equ 0F9Bh ;# 
  3611  0000                     # 4386 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3612                           PIE1 equ 0F9Dh ;# 
  3613  0000                     # 4470 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3614                           PIR1 equ 0F9Eh ;# 
  3615  0000                     # 4554 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3616                           IPR1 equ 0F9Fh ;# 
  3617  0000                     # 4638 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3618                           PIE2 equ 0FA0h ;# 
  3619  0000                     # 4709 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3620                           PIR2 equ 0FA1h ;# 
  3621  0000                     # 4780 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3622                           IPR2 equ 0FA2h ;# 
  3623  0000                     # 4851 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3624                           EECON1 equ 0FA6h ;# 
  3625  0000                     # 4917 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3626                           EECON2 equ 0FA7h ;# 
  3627  0000                     # 4924 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3628                           EEDATA equ 0FA8h ;# 
  3629  0000                     # 4931 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3630                           EEADR equ 0FA9h ;# 
  3631  0000                     # 4938 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3632                           RCSTA equ 0FABh ;# 
  3633  0000                     # 4943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3634                           RCSTA1 equ 0FABh ;# 
  3635  0000                     # 5148 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3636                           TXSTA equ 0FACh ;# 
  3637  0000                     # 5153 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3638                           TXSTA1 equ 0FACh ;# 
  3639  0000                     # 5404 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3640                           TXREG equ 0FADh ;# 
  3641  0000                     # 5409 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3642                           TXREG1 equ 0FADh ;# 
  3643  0000                     # 5416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3644                           RCREG equ 0FAEh ;# 
  3645  0000                     # 5421 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3646                           RCREG1 equ 0FAEh ;# 
  3647  0000                     # 5428 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3648                           SPBRG equ 0FAFh ;# 
  3649  0000                     # 5433 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3650                           SPBRG1 equ 0FAFh ;# 
  3651  0000                     # 5440 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3652                           SPBRGH equ 0FB0h ;# 
  3653  0000                     # 5447 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3654                           T3CON equ 0FB1h ;# 
  3655  0000                     # 5568 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3656                           TMR3 equ 0FB2h ;# 
  3657  0000                     # 5575 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3658                           TMR3L equ 0FB2h ;# 
  3659  0000                     # 5582 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3660                           TMR3H equ 0FB3h ;# 
  3661  0000                     # 5589 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3662                           CMCON equ 0FB4h ;# 
  3663  0000                     # 5679 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3664                           CVRCON equ 0FB5h ;# 
  3665  0000                     # 5764 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3666                           ECCP1AS equ 0FB6h ;# 
  3667  0000                     # 5769 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3668                           CCP1AS equ 0FB6h ;# 
  3669  0000                     # 5926 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3670                           ECCP1DEL equ 0FB7h ;# 
  3671  0000                     # 5931 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3672                           CCP1DEL equ 0FB7h ;# 
  3673  0000                     # 6064 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3674                           BAUDCON equ 0FB8h ;# 
  3675  0000                     # 6069 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3676                           BAUDCTL equ 0FB8h ;# 
  3677  0000                     # 6244 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3678                           CCP2CON equ 0FBAh ;# 
  3679  0000                     # 6308 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3680                           CCPR2 equ 0FBBh ;# 
  3681  0000                     # 6315 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3682                           CCPR2L equ 0FBBh ;# 
  3683  0000                     # 6322 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3684                           CCPR2H equ 0FBCh ;# 
  3685  0000                     # 6329 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3686                           CCP1CON equ 0FBDh ;# 
  3687  0000                     # 6334 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3688                           ECCP1CON equ 0FBDh ;# 
  3689  0000                     # 6491 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3690                           CCPR1 equ 0FBEh ;# 
  3691  0000                     # 6498 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3692                           CCPR1L equ 0FBEh ;# 
  3693  0000                     # 6505 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3694                           CCPR1H equ 0FBFh ;# 
  3695  0000                     # 6512 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3696                           ADCON2 equ 0FC0h ;# 
  3697  0000                     # 6583 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3698                           ADCON1 equ 0FC1h ;# 
  3699  0000                     # 6668 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3700                           ADCON0 equ 0FC2h ;# 
  3701  0000                     # 6787 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3702                           ADRES equ 0FC3h ;# 
  3703  0000                     # 6794 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3704                           ADRESL equ 0FC3h ;# 
  3705  0000                     # 6801 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3706                           ADRESH equ 0FC4h ;# 
  3707  0000                     # 6808 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3708                           SSPCON2 equ 0FC5h ;# 
  3709  0000                     # 6870 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3710                           SSPCON1 equ 0FC6h ;# 
  3711  0000                     # 6940 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3712                           SSPSTAT equ 0FC7h ;# 
  3713  0000                     # 7188 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3714                           SSPADD equ 0FC8h ;# 
  3715  0000                     # 7195 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3716                           SSPBUF equ 0FC9h ;# 
  3717  0000                     # 7202 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3718                           T2CON equ 0FCAh ;# 
  3719  0000                     # 7300 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3720                           PR2 equ 0FCBh ;# 
  3721  0000                     # 7305 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3722                           MEMCON equ 0FCBh ;# 
  3723  0000                     # 7410 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3724                           TMR2 equ 0FCCh ;# 
  3725  0000                     # 7417 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3726                           T1CON equ 0FCDh ;# 
  3727  0000                     # 7520 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3728                           TMR1 equ 0FCEh ;# 
  3729  0000                     # 7527 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3730                           TMR1L equ 0FCEh ;# 
  3731  0000                     # 7534 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3732                           TMR1H equ 0FCFh ;# 
  3733  0000                     # 7541 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3734                           RCON equ 0FD0h ;# 
  3735  0000                     # 7690 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3736                           WDTCON equ 0FD1h ;# 
  3737  0000                     # 7718 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3738                           HLVDCON equ 0FD2h ;# 
  3739  0000                     # 7723 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3740                           LVDCON equ 0FD2h ;# 
  3741  0000                     # 7988 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3742                           OSCCON equ 0FD3h ;# 
  3743  0000                     # 8071 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3744                           T0CON equ 0FD5h ;# 
  3745  0000                     # 8141 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3746                           TMR0 equ 0FD6h ;# 
  3747  0000                     # 8148 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3748                           TMR0L equ 0FD6h ;# 
  3749  0000                     # 8155 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3750                           TMR0H equ 0FD7h ;# 
  3751  0000                     # 8162 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3752                           STATUS equ 0FD8h ;# 
  3753  0000                     # 8233 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3754                           FSR2 equ 0FD9h ;# 
  3755  0000                     # 8240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3756                           FSR2L equ 0FD9h ;# 
  3757  0000                     # 8247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3758                           FSR2H equ 0FDAh ;# 
  3759  0000                     # 8254 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3760                           PLUSW2 equ 0FDBh ;# 
  3761  0000                     # 8261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3762                           PREINC2 equ 0FDCh ;# 
  3763  0000                     # 8268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3764                           POSTDEC2 equ 0FDDh ;# 
  3765  0000                     # 8275 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3766                           POSTINC2 equ 0FDEh ;# 
  3767  0000                     # 8282 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3768                           INDF2 equ 0FDFh ;# 
  3769  0000                     # 8289 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3770                           BSR equ 0FE0h ;# 
  3771  0000                     # 8296 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3772                           FSR1 equ 0FE1h ;# 
  3773  0000                     # 8303 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3774                           FSR1L equ 0FE1h ;# 
  3775  0000                     # 8310 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3776                           FSR1H equ 0FE2h ;# 
  3777  0000                     # 8317 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3778                           PLUSW1 equ 0FE3h ;# 
  3779  0000                     # 8324 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3780                           PREINC1 equ 0FE4h ;# 
  3781  0000                     # 8331 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3782                           POSTDEC1 equ 0FE5h ;# 
  3783  0000                     # 8338 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3784                           POSTINC1 equ 0FE6h ;# 
  3785  0000                     # 8345 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3786                           INDF1 equ 0FE7h ;# 
  3787  0000                     # 8352 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3788                           WREG equ 0FE8h ;# 
  3789  0000                     # 8359 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3790                           FSR0 equ 0FE9h ;# 
  3791  0000                     # 8366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3792                           FSR0L equ 0FE9h ;# 
  3793  0000                     # 8373 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3794                           FSR0H equ 0FEAh ;# 
  3795  0000                     # 8380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3796                           PLUSW0 equ 0FEBh ;# 
  3797  0000                     # 8387 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3798                           PREINC0 equ 0FECh ;# 
  3799  0000                     # 8394 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3800                           POSTDEC0 equ 0FEDh ;# 
  3801  0000                     # 8401 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3802                           POSTINC0 equ 0FEEh ;# 
  3803  0000                     # 8408 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3804                           INDF0 equ 0FEFh ;# 
  3805  0000                     # 8415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3806                           INTCON3 equ 0FF0h ;# 
  3807  0000                     # 8507 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3808                           INTCON2 equ 0FF1h ;# 
  3809  0000                     # 8584 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3810                           INTCON equ 0FF2h ;# 
  3811  0000                     # 8701 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3812                           PROD equ 0FF3h ;# 
  3813  0000                     # 8708 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3814                           PRODL equ 0FF3h ;# 
  3815  0000                     # 8715 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3816                           PRODH equ 0FF4h ;# 
  3817  0000                     # 8722 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3818                           TABLAT equ 0FF5h ;# 
  3819  0000                     # 8731 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3820                           TBLPTR equ 0FF6h ;# 
  3821  0000                     # 8738 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3822                           TBLPTRL equ 0FF6h ;# 
  3823  0000                     # 8745 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3824                           TBLPTRH equ 0FF7h ;# 
  3825  0000                     # 8752 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3826                           TBLPTRU equ 0FF8h ;# 
  3827  0000                     # 8761 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3828                           PCLAT equ 0FF9h ;# 
  3829  0000                     # 8768 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3830                           PC equ 0FF9h ;# 
  3831  0000                     # 8775 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3832                           PCL equ 0FF9h ;# 
  3833  0000                     # 8782 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3834                           PCLATH equ 0FFAh ;# 
  3835  0000                     # 8789 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3836                           PCLATU equ 0FFBh ;# 
  3837  0000                     # 8796 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3838                           STKPTR equ 0FFCh ;# 
  3839  0000                     # 8872 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3840                           TOS equ 0FFDh ;# 
  3841  0000                     # 8879 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3842                           TOSL equ 0FFDh ;# 
  3843  0000                     # 8886 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3844                           TOSH equ 0FFEh ;# 
  3845  0000                     # 8893 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3846                           TOSU equ 0FFFh ;# 
  3847  0000  ;; Function _receita_livre is unused but had its address taken
  3848                           global _receita_livre
  3849                           _receita_livre equ 0
  3850  0000  ;; Function _rxEUSART is unused but had its address taken
  3851                           global _rxEUSART
  3852                           _rxEUSART equ 0
  3853  0000  ;; Function _rxStatusEUSART is unused but had its address taken
  3854                           global _rxStatusEUSART
  3855                           _rxStatusEUSART equ 0
  3856  0000  ;; Function _rxErrorEUSART is unused but had its address taken
  3857                           global _rxErrorEUSART
  3858                           _rxErrorEUSART equ 0
  3859  0000  ;; Function _rxResetErrorEUSART is unused but had its address taken
  3860                           global _rxResetErrorEUSART
  3861                           _rxResetErrorEUSART equ 0
  3862  0000  ;; Function _txEUSART is unused but had its address taken
  3863                           global _txEUSART
  3864                           _txEUSART equ 0
  3865  0000  ;; Function _txStatusEUSART is unused but had its address taken
  3866                           global _txStatusEUSART
  3867                           _txStatusEUSART equ 0
  3868  0000  ;; Function _search is unused but had its address taken
  3869                           global _search
  3870                           _search equ 0
  3871  0000  ;; Function _wifi_send is unused but had its address taken
  3872                           global _wifi_send
  3873                           _wifi_send equ 0
  3874  0000  ;; Function _wifi_receive is unused but had its address taken
  3875                           global _wifi_receive
  3876                           _wifi_receive equ 0
  3877  0000  ;; Function _Wifi_mode is unused but had its address taken
  3878                           global _Wifi_mode
  3879                           _Wifi_mode equ 0
  3880  0000  ;; Function _Wifi_connect is unused but had its address taken
  3881                           global _Wifi_connect
  3882                           _Wifi_connect equ 0
  3883  0000  ;; Function _Wifi_scan is unused but had its address taken
  3884                           global _Wifi_scan
  3885                           _Wifi_scan equ 0
  3886  0000  ;; Function _Wifi_ip is unused but had its address taken
  3887                           global _Wifi_ip
  3888                           _Wifi_ip equ 0
  3889  0000  ;; Function _Wifi_autoconnect is unused but had its address taken
  3890                           global _Wifi_autoconnect
  3891                           _Wifi_autoconnect equ 0
  3892  0000  ;; Function _Wifi_config_servidor is unused but had its address taken
  3893                           global _Wifi_config_servidor
  3894                           _Wifi_config_servidor equ 0
  3895  0000  ;; Function _Wifi_cipsend is unused but had its address taken
  3896                           global _Wifi_cipsend
  3897                           _Wifi_cipsend equ 0
  3898  0000                     	FNCALL	_main,_I2C_init
  3899                           	FNCALL	_main,_MCP4725
  3900                           	FNCALL	_main,___aldiv
  3901                           	FNCALL	_main,___awmod
  3902                           	FNCALL	_main,___lmul
  3903                           	FNCALL	_main,___wmul
  3904                           	FNCALL	_main,_addContCiclos
  3905                           	FNCALL	_main,_addIndicePassos
  3906                           	FNCALL	_main,_alt_atuador
  3907                           	FNCALL	_main,_buscar_dado
  3908                           	FNCALL	_main,_buscar_receita
  3909                           	FNCALL	_main,_decodifica
  3910                           	FNCALL	_main,_delay
  3911                           	FNCALL	_main,_deletar_receita
  3912                           	FNCALL	_main,_dignum_apagar
  3913                           	FNCALL	_main,_dignum_conc
  3914                           	FNCALL	_main,_dispLCD
  3915                           	FNCALL	_main,_dispLCD_clr
  3916                           	FNCALL	_main,_dispLCD_dataReg
  3917                           	FNCALL	_main,_dispLCD_init
  3918                           	FNCALL	_main,_dispLCD_lincol
  3919                           	FNCALL	_main,_dispLCD_num
  3920                           	FNCALL	_main,_dispLCD_str
  3921                           	FNCALL	_main,_fifo_add
  3922                           	FNCALL	_main,_fifo_add_ciclo
  3923                           	FNCALL	_main,_fifo_add_control
  3924                           	FNCALL	_main,_fifo_add_tempo
  3925                           	FNCALL	_main,_fifo_adrs
  3926                           	FNCALL	_main,_fifo_delete
  3927                           	FNCALL	_main,_fifo_disponivel
  3928                           	FNCALL	_main,_fifo_indice
  3929                           	FNCALL	_main,_fifo_indicePrint_dec
  3930                           	FNCALL	_main,_fifo_indicePrint_inc
  3931                           	FNCALL	_main,_fifo_lerPos
  3932                           	FNCALL	_main,_fifo_print
  3933                           	FNCALL	_main,_fifo_tam
  3934                           	FNCALL	_main,_formatar_receitas
  3935                           	FNCALL	_main,_getCiclos
  3936                           	FNCALL	_main,_getContCiclos
  3937                           	FNCALL	_main,_getIndicePassos
  3938                           	FNCALL	_main,_initSerialIO
  3939                           	FNCALL	_main,_init_atuadores
  3940                           	FNCALL	_main,_ler_atuador
  3941                           	FNCALL	_main,_ler_sensor
  3942                           	FNCALL	_main,_manipula_atuadores_init
  3943                           	FNCALL	_main,_printExec
  3944                           	FNCALL	_main,_resetContCiclos
  3945                           	FNCALL	_main,_resetIndicePassos
  3946                           	FNCALL	_main,_salva_atuadores_init
  3947                           	FNCALL	_main,_salvar_dado
  3948                           	FNCALL	_main,_salvar_receita
  3949                           	FNCALL	_main,_serialIOscan
  3950                           	FNCALL	_main,_setT1
  3951                           	FNCALL	_main,_set_passo
  3952                           	FNCALL	_main,_statusT1
  3953                           	FNCALL	_main,_teclado_borda
  3954                           	FNCALL	_main,_teclado_init
  3955                           	FNCALL	_main,_timer1_init
  3956                           	FNCALL	_main,_wifi_init
  3957                           	FNCALL	_wifi_init,_initEUSART
  3958                           	FNCALL	_initEUSART,___lldiv
  3959                           	FNCALL	_teclado_borda,_teclado_scan
  3960                           	FNCALL	_serialIOscan,_serialIObyteShift
  3961                           	FNCALL	_serialIOscan,_serialIOload
  3962                           	FNCALL	_salvar_receita,_EEPROM_write
  3963                           	FNCALL	_salvar_receita,_end_receita
  3964                           	FNCALL	_salvar_dado,_EEPROM_write
  3965                           	FNCALL	_salvar_dado,_end_receita
  3966                           	FNCALL	_salva_atuadores_init,_ler_atuador
  3967                           	FNCALL	_printExec,_decodifica
  3968                           	FNCALL	_printExec,_dignum_tam
  3969                           	FNCALL	_printExec,_dispLCD_dataReg
  3970                           	FNCALL	_printExec,_dispLCD_lincol
  3971                           	FNCALL	_printExec,_dispLCD_num
  3972                           	FNCALL	_printExec,_posAtual
  3973                           	FNCALL	_posAtual,_fifo_lerPos
  3974                           	FNCALL	_posAtual,_getIndicePassos
  3975                           	FNCALL	_dispLCD_num,___awdiv
  3976                           	FNCALL	_dispLCD_num,___awmod
  3977                           	FNCALL	_dispLCD_num,_dispLCD_dataReg
  3978                           	FNCALL	_dispLCD_num,_dispLCD_lincol
  3979                           	FNCALL	_manipula_atuadores_init,_alt_atuador
  3980                           	FNCALL	_formatar_receitas,_EEPROM_write
  3981                           	FNCALL	_fifo_print,___awdiv
  3982                           	FNCALL	_fifo_print,___awmod
  3983                           	FNCALL	_fifo_print,_decodifica
  3984                           	FNCALL	_fifo_print,_dispLCD_dataReg
  3985                           	FNCALL	_fifo_print,_dispLCD_lincol
  3986                           	FNCALL	_fifo_delete,_alt_atuador
  3987                           	FNCALL	_fifo_delete,_codifica
  3988                           	FNCALL	_fifo_delete,_decodifica
  3989                           	FNCALL	_fifo_delete,_fifo_alinharPrint
  3990                           	FNCALL	_fifo_add_tempo,_codifica
  3991                           	FNCALL	_fifo_add_tempo,_fifo_alinharPrint
  3992                           	FNCALL	_fifo_add_control,_codifica
  3993                           	FNCALL	_fifo_add_control,_fifo_alinharPrint
  3994                           	FNCALL	_fifo_add,_codifica
  3995                           	FNCALL	_fifo_add,_fifo_alinharPrint
  3996                           	FNCALL	_fifo_alinharPrint,_dignum_tam
  3997                           	FNCALL	_dignum_tam,___awdiv
  3998                           	FNCALL	_dispLCD_str,_dispLCD_dataReg
  3999                           	FNCALL	_dispLCD_str,_dispLCD_lincol
  4000                           	FNCALL	_dispLCD_init,_delay
  4001                           	FNCALL	_dispLCD_init,_dispLCD_instReg
  4002                           	FNCALL	_dispLCD_clr,_dispLCD_instReg
  4003                           	FNCALL	_dispLCD,_dispLCD_dataReg
  4004                           	FNCALL	_dispLCD,_dispLCD_lincol
  4005                           	FNCALL	_dispLCD_lincol,_dispLCD_instReg
  4006                           	FNCALL	_dignum_conc,___wmul
  4007                           	FNCALL	_dignum_apagar,___lwdiv
  4008                           	FNCALL	_deletar_receita,_EEPROM_write
  4009                           	FNCALL	_deletar_receita,_end_receita
  4010                           	FNCALL	_buscar_receita,_EEPROM_read
  4011                           	FNCALL	_buscar_receita,_end_receita
  4012                           	FNCALL	_buscar_dado,_EEPROM_read
  4013                           	FNCALL	_buscar_dado,_end_receita
  4014                           	FNCALL	_MCP4725,_I2C_stop
  4015                           	FNCALL	_MCP4725,_dac_init
  4016                           	FNCALL	_MCP4725,_dac_write
  4017                           	FNCALL	_MCP4725,_delay
  4018                           	FNCALL	_dac_write,_I2C_ack_receive
  4019                           	FNCALL	_dac_write,_I2C_tx
  4020                           	FNCALL	_dac_write,_delay
  4021                           	FNCALL	_dac_init,_I2C_ack_receive
  4022                           	FNCALL	_dac_init,_I2C_start
  4023                           	FNCALL	_dac_init,_I2C_tx
  4024                           	FNCALL	_dac_init,_delay
  4025                           	FNCALL	_I2C_init,___lldiv
  4026                           	FNROOT	_main
  4027                           	FNCALL	_irq,_intt1_1ms
  4028                           	FNCALL	intlevel2,_irq
  4029                           	global	intlevel2
  4030                           	FNROOT	intlevel2
  4031                           	global	_EEPROM
  4032                           	global	_IHM
  4033                           	global	_indice_passos
  4034                           	global	_ind_print
  4035                           	global	_ind_fila
  4036                           	global	main@F3498
  4037                           	global	_eusart
  4038                           	global	_teclas
  4039                           	global	Wifi_connect@F3276
  4040                           psect	idataCOMRAM,class=CODE,space=0,delta=1,noexec
  4041                           global __pidataCOMRAM
  4042                           __pidataCOMRAM:
  4043  004310                     	file	"./eeprom.h"
  4044                           	line	28
  4045                           
  4046                           ;initializer for _EEPROM
  4047                           		db	low(_salvar_receita)
  4048  004310  80                 	db	high(_salvar_receita)
  4049  004311  3B                 
  4050                           		db	low(_buscar_receita)
  4051  004312  E0                 	db	high(_buscar_receita)
  4052  004313  3B                 
  4053                           		db	low(_deletar_receita)
  4054  004314  92                 	db	high(_deletar_receita)
  4055  004315  3C                 
  4056                           		db	low(0)
  4057  004316  00                 	db	high(0)
  4058  004317  00                 
  4059                           		db	low(_formatar_receitas)
  4060  004318  F2                 	db	high(_formatar_receitas)
  4061  004319  41                 
  4062                           	file	"./ihm.h"
  4063                           	line	14
  4064                           
  4065                           ;initializer for _IHM
  4066                           		db	low(_dispLCD_init)
  4067  00431A  54                 	db	high(_dispLCD_init)
  4068  00431B  3F                 
  4069                           		db	low(_dispLCD_str)
  4070  00431C  AC                 	db	high(_dispLCD_str)
  4071  00431D  38                 
  4072                           		db	low(_dispLCD)
  4073  00431E  E6                 	db	high(_dispLCD)
  4074  00431F  3C                 
  4075                           		db	low(_dispLCD_num)
  4076  004320  8C                 	db	high(_dispLCD_num)
  4077  004321  26                 
  4078                           		db	low(_dispLCD_clr)
  4079  004322  B8                 	db	high(_dispLCD_clr)
  4080  004323  43                 
  4081                           	file	"fifo.c"
  4082                           	line	16
  4083                           
  4084                           ;initializer for _indice_passos
  4085                           	db	low(02h)
  4086  004324  02                 	line	12
  4087                           
  4088                           ;initializer for _ind_print
  4089                           	db	low(02h)
  4090  004325  02                 	line	11
  4091                           
  4092                           ;initializer for _ind_fila
  4093                           	db	low(02h)
  4094  004326  02                 psect	idataBANK0l,class=CODE,space=0,delta=1,noexec
  4095                           global __pidataBANK0l
  4096                           __pidataBANK0l:
  4097  003F8A                     	file	"main.c"
  4098                           	line	136
  4099                           
  4100                           ;initializer for main@F3498
  4101                           	db	low(04Dh)
  4102  003F8A  4D                 	db	low(075h)
  4103  003F8B  75                 	db	low(06Eh)
  4104  003F8C  6E                 	db	low(064h)
  4105  003F8D  64                 	db	low(06Fh)
  4106  003F8E  6F                 	db	low(020h)
  4107  003F8F  20                 	db	low(061h)
  4108  003F90  61                 	db	low(06Fh)
  4109  003F91  6F                 	db	low(020h)
  4110  003F92  20                 	db	low(073h)
  4111  003F93  73                 	db	low(065h)
  4112  003F94  65                 	db	low(075h)
  4113  003F95  75                 	db	low(020h)
  4114  003F96  20                 	db	low(063h)
  4115  003F97  63                 	db	low(06Fh)
  4116  003F98  6F                 	db	low(06Dh)
  4117  003F99  6D                 	db	low(061h)
  4118  003F9A  61                 	db	low(06Eh)
  4119  003F9B  6E                 	db	low(064h)
  4120  003F9C  64                 	db	low(06Fh)
  4121  003F9D  6F                 	file	"eusart.c"
  4122                           	line	26
  4123                           
  4124                           ;initializer for _eusart
  4125                           		db	low(0)
  4126  003F9E  00                 	db	high(0)
  4127  003F9F  00                 
  4128                           		db	low(0)
  4129  003FA0  00                 	db	high(0)
  4130  003FA1  00                 
  4131                           		db	low(0)
  4132  003FA2  00                 	db	high(0)
  4133  003FA3  00                 
  4134                           		db	low(0)
  4135  003FA4  00                 	db	high(0)
  4136  003FA5  00                 
  4137                           		db	low(0)
  4138  003FA6  00                 	db	high(0)
  4139  003FA7  00                 
  4140                           		db	low(0)
  4141  003FA8  00                 	db	high(0)
  4142  003FA9  00                 
  4143                           		db	low(_initEUSART)
  4144  003FAA  40                 	db	high(_initEUSART)
  4145  003FAB  38                 
  4146                           		db	low(0)
  4147  003FAC  00                 	db	high(0)
  4148  003FAD  00                 
  4149                           	file	"teclado.c"
  4150                           	line	50
  4151                           
  4152                           ;initializer for _teclas
  4153                           	db	low(031h)
  4154  003FAE  31                 	db	low(032h)
  4155  003FAF  32                 	db	low(033h)
  4156  003FB0  33                 	db	low(041h)
  4157  003FB1  41                 	db	low(034h)
  4158  003FB2  34                 	db	low(035h)
  4159  003FB3  35                 	db	low(036h)
  4160  003FB4  36                 	db	low(042h)
  4161  003FB5  42                 	db	low(037h)
  4162  003FB6  37                 	db	low(038h)
  4163  003FB7  38                 	db	low(039h)
  4164  003FB8  39                 	db	low(043h)
  4165  003FB9  43                 	db	low(02Ah)
  4166  003FBA  2A                 	db	low(030h)
  4167  003FBB  30                 	db	low(023h)
  4168  003FBC  23                 	db	low(044h)
  4169  003FBD  44                 psect	idataBANK1,class=CODE,space=0,delta=1,noexec
  4170                           global __pidataBANK1
  4171                           __pidataBANK1:
  4172  003EDE                     	file	"wifi.c"
  4173                           	line	74
  4174                           
  4175                           ;initializer for Wifi_connect@F3276
  4176                           	db	low(041h)
  4177  003EDE  41                 	db	low(054h)
  4178  003EDF  54                 	db	low(02Bh)
  4179  003EE0  2B                 	db	low(043h)
  4180  003EE1  43                 	db	low(057h)
  4181  003EE2  57                 	db	low(04Ah)
  4182  003EE3  4A                 	db	low(041h)
  4183  003EE4  41                 	db	low(050h)
  4184  003EE5  50                 	db	low(03Dh)
  4185  003EE6  3D                 	db	low(022h)
  4186  003EE7  22                 	db	low(0)
  4187  003EE8  00                 	db   0
  4188  003EE9  00                 	db   0
  4189  003EEA  00                 	db   0
  4190  003EEB  00                 	db   0
  4191  003EEC  00                 	db   0
  4192  003EED  00                 	db   0
  4193  003EEE  00                 	db   0
  4194  003EEF  00                 	db   0
  4195  003EF0  00                 	db   0
  4196  003EF1  00                 	db   0
  4197  003EF2  00                 	db   0
  4198  003EF3  00                 	db   0
  4199  003EF4  00                 	db   0
  4200  003EF5  00                 	db   0
  4201  003EF6  00                 	db   0
  4202  003EF7  00                 	db   0
  4203  003EF8  00                 	db   0
  4204  003EF9  00                 	db   0
  4205  003EFA  00                 	db   0
  4206  003EFB  00                 	db   0
  4207  003EFC  00                 	db   0
  4208  003EFD  00                 	db   0
  4209  003EFE  00                 	db   0
  4210  003EFF  00                 	db   0
  4211  003F00  00                 	db   0
  4212  003F01  00                 	db   0
  4213  003F02  00                 	db   0
  4214  003F03  00                 	db   0
  4215  003F04  00                 	db   0
  4216  003F05  00                 	file	"./wifi.h"
  4217                           	line	38
  4218                           
  4219                           ;initializer for _wifi
  4220                           		db	low(_wifi_init)
  4221  003F06  56                 	db	high(_wifi_init)
  4222  003F07  40                 
  4223                           		db	low(0)
  4224  003F08  00                 	db	high(0)
  4225  003F09  00                 
  4226                           		db	low(0)
  4227  003F0A  00                 	db	high(0)
  4228  003F0B  00                 
  4229                           		db	low(0)
  4230  003F0C  00                 	db	high(0)
  4231  003F0D  00                 
  4232                           		db	low(0)
  4233  003F0E  00                 	db	high(0)
  4234  003F0F  00                 
  4235                           		db	low(0)
  4236  003F10  00                 	db	high(0)
  4237  003F11  00                 
  4238                           		db	low(0)
  4239  003F12  00                 	db	high(0)
  4240  003F13  00                 
  4241                           		db	low(0)
  4242  003F14  00                 	db	high(0)
  4243  003F15  00                 
  4244                           		db	low(0)
  4245  003F16  00                 	db	high(0)
  4246  003F17  00                 
  4247                           		db	low(0)
  4248  003F18  00                 	db	high(0)
  4249  003F19  00                 
  4250                           	global	_t1cont
  4251                           	global	salva_atuadores_init@F108
  4252                           	global	_ptrSerialOut
  4253                           	global	_ptrSerialIn
  4254                           	global	_cont_ciclos
  4255                           	global	_teclaAnterior
  4256                           	global	_lenSerialIO
  4257                           	global	_atuador
  4258                           	global	_fila
  4259                           	global	main@F3474
  4260                           	global	main@F3472
  4261                           	global	_SPBRbits
  4262                           _SPBRbits	set	0x99
  4263  0000                     	global	_BAUDCTLbits
  4264                           _BAUDCTLbits	set	0xFB8
  4265  0000                     	global	_TXSTAbits
  4266                           _TXSTAbits	set	0xFAC
  4267  0000                     	global	_TXREG
  4268                           _TXREG	set	0xFAD
  4269  0000                     	global	_RCSTAbits
  4270                           _RCSTAbits	set	0xFAB
  4271  0000                     	global	_RCREG
  4272                           _RCREG	set	0xFAE
  4273  0000                     	global	_T1CONbits
  4274                           _T1CONbits	set	0xFCD
  4275  0000                     	global	_TMR1L
  4276                           _TMR1L	set	0xFCE
  4277  0000                     	global	_TMR1H
  4278                           _TMR1H	set	0xFCF
  4279  0000                     	global	_TRISD
  4280                           _TRISD	set	0xF95
  4281  0000                     	global	_PORTD
  4282                           _PORTD	set	0xF83
  4283  0000                     	global	_SSPBUF
  4284                           _SSPBUF	set	0xFC9
  4285  0000                     	global	_SSPCON2bits
  4286                           _SSPCON2bits	set	0xFC5
  4287  0000                     	global	_SSPSTATbits
  4288                           _SSPSTATbits	set	0xFC7
  4289  0000                     	global	_SSPADD
  4290                           _SSPADD	set	0xFC8
  4291  0000                     	global	_SSPCON1bits
  4292                           _SSPCON1bits	set	0xFC6
  4293  0000                     	global	_SERIALIO
  4294                           	global	_SERIALIO
  4295                           _SERIALIO  equ     3968
  4296  0000                     	global	_TRISAbits
  4297                           _TRISAbits	set	0xF92
  4298  0000                     	global	_PORTAbits
  4299                           _PORTAbits	set	0xF80
  4300  0000                     	global	_EECON2
  4301                           _EECON2	set	0xFA7
  4302  0000                     	global	_EEDATA
  4303                           _EEDATA	set	0xFA8
  4304  0000                     	global	_EECON1bits
  4305                           _EECON1bits	set	0xFA6
  4306  0000                     	global	_EEADR
  4307                           _EEADR	set	0xFA9
  4308  0000                     	global	_LCDbits
  4309                           	global	_LCDbits
  4310                           _LCDbits  equ     3978
  4311  0000                     	global	_TRISBbits
  4312                           _TRISBbits	set	0xF93
  4313  0000                     	global	_ADCON1
  4314                           _ADCON1	set	0xFC1
  4315  0000                     	global	_PIE1bits
  4316                           _PIE1bits	set	0xF9D
  4317  0000                     	global	_PIR1bits
  4318                           _PIR1bits	set	0xF9E
  4319  0000                     	global	_INTCONbits
  4320                           _INTCONbits	set	0xFF2
  4321  0000                     psect	mediumconst,class=MEDIUMCONST,space=0,reloc=2,noexec
  4322                           global __pmediumconst
  4323                           __pmediumconst:
  4324  007C40                     	db	0
  4325  007C40  00                 	
  4326                           STR_4:
  4327  007C41                     	db	49	;'1'
  4328  007C41  31                 	db	58	;':'
  4329  007C42  3A                 	db	32
  4330  007C43  20                 	db	73	;'I'
  4331  007C44  49                 	db	78	;'N'
  4332  007C45  4E                 	db	83	;'S'
  4333  007C46  53                 	db	69	;'E'
  4334  007C47  45                 	db	82	;'R'
  4335  007C48  52                 	db	73	;'I'
  4336  007C49  49                 	db	82	;'R'
  4337  007C4A  52                 	db	32
  4338  007C4B  20                 	db	83	;'S'
  4339  007C4C  53                 	db	69	;'E'
  4340  007C4D  45                 	db	81	;'Q'
  4341  007C4E  51                 	db	85	;'U'
  4342  007C4F  55                 	db	69	;'E'
  4343  007C50  45                 	db	78	;'N'
  4344  007C51  4E                 	db	67	;'C'
  4345  007C52  43                 	db	73	;'I'
  4346  007C53  49                 	db	65	;'A'
  4347  007C54  41                 	db	10
  4348  007C55  0A                 	db	50	;'2'
  4349  007C56  32                 	db	58	;':'
  4350  007C57  3A                 	db	32
  4351  007C58  20                 	db	66	;'B'
  4352  007C59  42                 	db	85	;'U'
  4353  007C5A  55                 	db	83	;'S'
  4354  007C5B  53                 	db	67	;'C'
  4355  007C5C  43                 	db	65	;'A'
  4356  007C5D  41                 	db	82	;'R'
  4357  007C5E  52                 	db	32
  4358  007C5F  20                 	db	83	;'S'
  4359  007C60  53                 	db	69	;'E'
  4360  007C61  45                 	db	81	;'Q'
  4361  007C62  51                 	db	85	;'U'
  4362  007C63  55                 	db	69	;'E'
  4363  007C64  45                 	db	78	;'N'
  4364  007C65  4E                 	db	67	;'C'
  4365  007C66  43                 	db	73	;'I'
  4366  007C67  49                 	db	65	;'A'
  4367  007C68  41                 	db	10
  4368  007C69  0A                 	db	51	;'3'
  4369  007C6A  33                 	db	58	;':'
  4370  007C6B  3A                 	db	32
  4371  007C6C  20                 	db	82	;'R'
  4372  007C6D  52                 	db	69	;'E'
  4373  007C6E  45                 	db	80	;'P'
  4374  007C6F  50                 	db	69	;'E'
  4375  007C70  45                 	db	84	;'T'
  4376  007C71  54                 	db	73	;'I'
  4377  007C72  49                 	db	82	;'R'
  4378  007C73  52                 	db	32
  4379  007C74  20                 	db	85	;'U'
  4380  007C75  55                 	db	76	;'L'
  4381  007C76  4C                 	db	84	;'T'
  4382  007C77  54                 	db	46
  4383  007C78  2E                 	db	32
  4384  007C79  20                 	db	83	;'S'
  4385  007C7A  53                 	db	69	;'E'
  4386  007C7B  45                 	db	81	;'Q'
  4387  007C7C  51                 	db	85	;'U'
  4388  007C7D  55                 	db	10
  4389  007C7E  0A                 	db	52	;'4'
  4390  007C7F  34                 	db	58	;':'
  4391  007C80  3A                 	db	32
  4392  007C81  20                 	db	67	;'C'
  4393  007C82  43                 	db	79	;'O'
  4394  007C83  4F                 	db	78	;'N'
  4395  007C84  4E                 	db	70	;'F'
  4396  007C85  46                 	db	73	;'I'
  4397  007C86  49                 	db	71	;'G'
  4398  007C87  47                 	db	85	;'U'
  4399  007C88  55                 	db	82	;'R'
  4400  007C89  52                 	db	65	;'A'
  4401  007C8A  41                 	db	67	;'C'
  4402  007C8B  43                 	db	79	;'O'
  4403  007C8C  4F                 	db	69	;'E'
  4404  007C8D  45                 	db	83	;'S'
  4405  007C8E  53                 	db	32
  4406  007C8F  20                 	db	32
  4407  007C90  20                 	db	32
  4408  007C91  20                 	db	32
  4409  007C92  20                 	db	0
  4410  007C93  00                 	
  4411                           STR_15:
  4412  007C94                     	db	32
  4413  007C94  20                 	db	69	;'E'
  4414  007C95  45                 	db	83	;'S'
  4415  007C96  53                 	db	67	;'C'
  4416  007C97  43                 	db	79	;'O'
  4417  007C98  4F                 	db	76	;'L'
  4418  007C99  4C                 	db	72	;'H'
  4419  007C9A  48                 	db	65	;'A'
  4420  007C9B  41                 	db	32
  4421  007C9C  20                 	db	65	;'A'
  4422  007C9D  41                 	db	32
  4423  007C9E  20                 	db	77	;'M'
  4424  007C9F  4D                 	db	69	;'E'
  4425  007CA0  45                 	db	77	;'M'
  4426  007CA1  4D                 	db	79	;'O'
  4427  007CA2  4F                 	db	82	;'R'
  4428  007CA3  52                 	db	73	;'I'
  4429  007CA4  49                 	db	65	;'A'
  4430  007CA5  41                 	db	32
  4431  007CA6  20                 	db	10
  4432  007CA7  0A                 	db	81	;'Q'
  4433  007CA8  51                 	db	85	;'U'
  4434  007CA9  55                 	db	69	;'E'
  4435  007CAA  45                 	db	32
  4436  007CAB  20                 	db	68	;'D'
  4437  007CAC  44                 	db	69	;'E'
  4438  007CAD  45                 	db	83	;'S'
  4439  007CAE  53                 	db	69	;'E'
  4440  007CAF  45                 	db	74	;'J'
  4441  007CB0  4A                 	db	65	;'A'
  4442  007CB1  41                 	db	32
  4443  007CB2  20                 	db	69	;'E'
  4444  007CB3  45                 	db	88	;'X'
  4445  007CB4  58                 	db	69	;'E'
  4446  007CB5  45                 	db	67	;'C'
  4447  007CB6  43                 	db	85	;'U'
  4448  007CB7  55                 	db	84	;'T'
  4449  007CB8  54                 	db	65	;'A'
  4450  007CB9  41                 	db	82	;'R'
  4451  007CBA  52                 	db	10
  4452  007CBB  0A                 	db	32
  4453  007CBC  20                 	db	48	;'0'
  4454  007CBD  30                 	db	32
  4455  007CBE  20                 	db	32
  4456  007CBF  20                 	db	32
  4457  007CC0  20                 	db	49	;'1'
  4458  007CC1  31                 	db	32
  4459  007CC2  20                 	db	32
  4460  007CC3  20                 	db	32
  4461  007CC4  20                 	db	50	;'2'
  4462  007CC5  32                 	db	32
  4463  007CC6  20                 	db	32
  4464  007CC7  20                 	db	32
  4465  007CC8  20                 	db	51	;'3'
  4466  007CC9  33                 	db	32
  4467  007CCA  20                 	db	32
  4468  007CCB  20                 	db	32
  4469  007CCC  20                 	db	52	;'4'
  4470  007CCD  34                 	db	32
  4471  007CCE  20                 	db	10
  4472  007CCF  0A                 	db	32
  4473  007CD0  20                 	db	53	;'5'
  4474  007CD1  35                 	db	32
  4475  007CD2  20                 	db	32
  4476  007CD3  20                 	db	32
  4477  007CD4  20                 	db	54	;'6'
  4478  007CD5  36                 	db	32
  4479  007CD6  20                 	db	32
  4480  007CD7  20                 	db	32
  4481  007CD8  20                 	db	55	;'7'
  4482  007CD9  37                 	db	32
  4483  007CDA  20                 	db	32
  4484  007CDB  20                 	db	32
  4485  007CDC  20                 	db	56	;'8'
  4486  007CDD  38                 	db	32
  4487  007CDE  20                 	db	32
  4488  007CDF  20                 	db	32
  4489  007CE0  20                 	db	57	;'9'
  4490  007CE1  39                 	db	32
  4491  007CE2  20                 	db	10
  4492  007CE3  0A                 	db	0
  4493  007CE4  00                 	
  4494                           STR_27:
  4495  007CE5                     	db	32
  4496  007CE5  20                 	db	69	;'E'
  4497  007CE6  45                 	db	83	;'S'
  4498  007CE7  53                 	db	67	;'C'
  4499  007CE8  43                 	db	79	;'O'
  4500  007CE9  4F                 	db	76	;'L'
  4501  007CEA  4C                 	db	72	;'H'
  4502  007CEB  48                 	db	65	;'A'
  4503  007CEC  41                 	db	32
  4504  007CED  20                 	db	65	;'A'
  4505  007CEE  41                 	db	32
  4506  007CEF  20                 	db	77	;'M'
  4507  007CF0  4D                 	db	69	;'E'
  4508  007CF1  45                 	db	77	;'M'
  4509  007CF2  4D                 	db	79	;'O'
  4510  007CF3  4F                 	db	82	;'R'
  4511  007CF4  52                 	db	73	;'I'
  4512  007CF5  49                 	db	65	;'A'
  4513  007CF6  41                 	db	10
  4514  007CF7  0A                 	db	32
  4515  007CF8  20                 	db	81	;'Q'
  4516  007CF9  51                 	db	85	;'U'
  4517  007CFA  55                 	db	69	;'E'
  4518  007CFB  45                 	db	32
  4519  007CFC  20                 	db	68	;'D'
  4520  007CFD  44                 	db	69	;'E'
  4521  007CFE  45                 	db	83	;'S'
  4522  007CFF  53                 	db	69	;'E'
  4523  007D00  45                 	db	74	;'J'
  4524  007D01  4A                 	db	65	;'A'
  4525  007D02  41                 	db	32
  4526  007D03  20                 	db	83	;'S'
  4527  007D04  53                 	db	65	;'A'
  4528  007D05  41                 	db	76	;'L'
  4529  007D06  4C                 	db	86	;'V'
  4530  007D07  56                 	db	65	;'A'
  4531  007D08  41                 	db	82	;'R'
  4532  007D09  52                 	db	10
  4533  007D0A  0A                 	db	32
  4534  007D0B  20                 	db	48	;'0'
  4535  007D0C  30                 	db	32
  4536  007D0D  20                 	db	32
  4537  007D0E  20                 	db	32
  4538  007D0F  20                 	db	49	;'1'
  4539  007D10  31                 	db	32
  4540  007D11  20                 	db	32
  4541  007D12  20                 	db	32
  4542  007D13  20                 	db	50	;'2'
  4543  007D14  32                 	db	32
  4544  007D15  20                 	db	32
  4545  007D16  20                 	db	32
  4546  007D17  20                 	db	51	;'3'
  4547  007D18  33                 	db	32
  4548  007D19  20                 	db	32
  4549  007D1A  20                 	db	32
  4550  007D1B  20                 	db	52	;'4'
  4551  007D1C  34                 	db	10
  4552  007D1D  0A                 	db	32
  4553  007D1E  20                 	db	53	;'5'
  4554  007D1F  35                 	db	32
  4555  007D20  20                 	db	32
  4556  007D21  20                 	db	32
  4557  007D22  20                 	db	54	;'6'
  4558  007D23  36                 	db	32
  4559  007D24  20                 	db	32
  4560  007D25  20                 	db	32
  4561  007D26  20                 	db	55	;'7'
  4562  007D27  37                 	db	32
  4563  007D28  20                 	db	32
  4564  007D29  20                 	db	32
  4565  007D2A  20                 	db	56	;'8'
  4566  007D2B  38                 	db	32
  4567  007D2C  20                 	db	32
  4568  007D2D  20                 	db	32
  4569  007D2E  20                 	db	57	;'9'
  4570  007D2F  39                 	db	32
  4571  007D30  20                 	db	32
  4572  007D31  20                 	db	0
  4573  007D32  00                 	
  4574                           STR_26:
  4575  007D33                     	db	32
  4576  007D33  20                 	db	32
  4577  007D34  20                 	db	32
  4578  007D35  20                 	db	32
  4579  007D36  20                 	db	68	;'D'
  4580  007D37  44                 	db	69	;'E'
  4581  007D38  45                 	db	83	;'S'
  4582  007D39  53                 	db	69	;'E'
  4583  007D3A  45                 	db	74	;'J'
  4584  007D3B  4A                 	db	65	;'A'
  4585  007D3C  41                 	db	32
  4586  007D3D  20                 	db	83	;'S'
  4587  007D3E  53                 	db	65	;'A'
  4588  007D3F  41                 	db	76	;'L'
  4589  007D40  4C                 	db	86	;'V'
  4590  007D41  56                 	db	65	;'A'
  4591  007D42  41                 	db	82	;'R'
  4592  007D43  52                 	db	32
  4593  007D44  20                 	db	32
  4594  007D45  20                 	db	32
  4595  007D46  20                 	db	10
  4596  007D47  0A                 	db	32
  4597  007D48  20                 	db	32
  4598  007D49  20                 	db	32
  4599  007D4A  20                 	db	32
  4600  007D4B  20                 	db	32
  4601  007D4C  20                 	db	83	;'S'
  4602  007D4D  53                 	db	69	;'E'
  4603  007D4E  45                 	db	81	;'Q'
  4604  007D4F  51                 	db	85	;'U'
  4605  007D50  55                 	db	69	;'E'
  4606  007D51  45                 	db	78	;'N'
  4607  007D52  4E                 	db	67	;'C'
  4608  007D53  43                 	db	73	;'I'
  4609  007D54  49                 	db	65	;'A'
  4610  007D55  41                 	db	32
  4611  007D56  20                 	db	63	;'?'
  4612  007D57  3F                 	db	32
  4613  007D58  20                 	db	32
  4614  007D59  20                 	db	10
  4615  007D5A  0A                 	db	10
  4616  007D5B  0A                 	db	35
  4617  007D5C  23                 	db	32
  4618  007D5D  20                 	db	45
  4619  007D5E  2D                 	db	32
  4620  007D5F  20                 	db	83	;'S'
  4621  007D60  53                 	db	73	;'I'
  4622  007D61  49                 	db	77	;'M'
  4623  007D62  4D                 	db	32
  4624  007D63  20                 	db	32
  4625  007D64  20                 	db	32
  4626  007D65  20                 	db	32
  4627  007D66  20                 	db	32
  4628  007D67  20                 	db	32
  4629  007D68  20                 	db	42
  4630  007D69  2A                 	db	32
  4631  007D6A  20                 	db	45
  4632  007D6B  2D                 	db	32
  4633  007D6C  20                 	db	78	;'N'
  4634  007D6D  4E                 	db	65	;'A'
  4635  007D6E  41                 	db	79	;'O'
  4636  007D6F  4F                 	db	0
  4637  007D70  00                 	
  4638                           STR_43:
  4639  007D71                     	db	65	;'A'
  4640  007D71  41                 	db	84	;'T'
  4641  007D72  54                 	db	43
  4642  007D73  2B                 	db	67	;'C'
  4643  007D74  43                 	db	73	;'I'
  4644  007D75  49                 	db	80	;'P'
  4645  007D76  50                 	db	83	;'S'
  4646  007D77  53                 	db	84	;'T'
  4647  007D78  54                 	db	65	;'A'
  4648  007D79  41                 	db	82	;'R'
  4649  007D7A  52                 	db	84	;'T'
  4650  007D7B  54                 	db	61	;'='
  4651  007D7C  3D                 	db	34
  4652  007D7D  22                 	db	84	;'T'
  4653  007D7E  54                 	db	67	;'C'
  4654  007D7F  43                 	db	80	;'P'
  4655  007D80  50                 	db	34
  4656  007D81  22                 	db	44
  4657  007D82  2C                 	db	34
  4658  007D83  22                 	db	49	;'1'
  4659  007D84  31                 	db	57	;'9'
  4660  007D85  39                 	db	50	;'2'
  4661  007D86  32                 	db	46
  4662  007D87  2E                 	db	49	;'1'
  4663  007D88  31                 	db	54	;'6'
  4664  007D89  36                 	db	56	;'8'
  4665  007D8A  38                 	db	46
  4666  007D8B  2E                 	db	52	;'4'
  4667  007D8C  34                 	db	46
  4668  007D8D  2E                 	db	49	;'1'
  4669  007D8E  31                 	db	34
  4670  007D8F  22                 	db	44
  4671  007D90  2C                 	db	34
  4672  007D91  22                 	db	51	;'3'
  4673  007D92  33                 	db	51	;'3'
  4674  007D93  33                 	db	51	;'3'
  4675  007D94  33                 	db	34
  4676  007D95  22                 	db	13
  4677  007D96  0D                 	db	10
  4678  007D97  0A                 	db	0
  4679  007D98  00                 	
  4680                           STR_42:
  4681  007D99                     	db	65	;'A'
  4682  007D99  41                 	db	84	;'T'
  4683  007D9A  54                 	db	43
  4684  007D9B  2B                 	db	67	;'C'
  4685  007D9C  43                 	db	73	;'I'
  4686  007D9D  49                 	db	80	;'P'
  4687  007D9E  50                 	db	83	;'S'
  4688  007D9F  53                 	db	69	;'E'
  4689  007DA0  45                 	db	82	;'R'
  4690  007DA1  52                 	db	86	;'V'
  4691  007DA2  56                 	db	69	;'E'
  4692  007DA3  45                 	db	82	;'R'
  4693  007DA4  52                 	db	61	;'='
  4694  007DA5  3D                 	db	49	;'1'
  4695  007DA6  31                 	db	44
  4696  007DA7  2C                 	db	51	;'3'
  4697  007DA8  33                 	db	51	;'3'
  4698  007DA9  33                 	db	51	;'3'
  4699  007DAA  33                 	db	13
  4700  007DAB  0D                 	db	10
  4701  007DAC  0A                 	db	0
  4702  007DAD  00                 	
  4703                           STR_24:
  4704  007DAE                     	db	67	;'C'
  4705  007DAE  43                 	db	105	;'i'
  4706  007DAF  69                 	db	99	;'c'
  4707  007DB0  63                 	db	108	;'l'
  4708  007DB1  6C                 	db	111	;'o'
  4709  007DB2  6F                 	db	115	;'s'
  4710  007DB3  73                 	db	58	;':'
  4711  007DB4  3A                 	db	32
  4712  007DB5  20                 	db	32
  4713  007DB6  20                 	db	32
  4714  007DB7  20                 	db	32
  4715  007DB8  20                 	db	32
  4716  007DB9  20                 	db	32
  4717  007DBA  20                 	db	32
  4718  007DBB  20                 	db	32
  4719  007DBC  20                 	db	32
  4720  007DBD  20                 	db	32
  4721  007DBE  20                 	db	32
  4722  007DBF  20                 	db	32
  4723  007DC0  20                 	db	32
  4724  007DC1  20                 	db	0
  4725  007DC2  00                 	
  4726                           STR_22:
  4727  007DC3                     	db	60	;'<'
  4728  007DC3  3C                 	db	32
  4729  007DC4  20                 	db	32
  4730  007DC5  20                 	db	47
  4731  007DC6  2F                 	db	32
  4732  007DC7  20                 	db	32
  4733  007DC8  20                 	db	62	;'>'
  4734  007DC9  3E                 	db	32
  4735  007DCA  20                 	db	99	;'c'
  4736  007DCB  63                 	db	58	;':'
  4737  007DCC  3A                 	db	32
  4738  007DCD  20                 	db	32
  4739  007DCE  20                 	db	32
  4740  007DCF  20                 	db	32
  4741  007DD0  20                 	db	32
  4742  007DD1  20                 	db	32
  4743  007DD2  20                 	db	32
  4744  007DD3  20                 	db	32
  4745  007DD4  20                 	db	32
  4746  007DD5  20                 	db	32
  4747  007DD6  20                 	db	0
  4748  007DD7  00                 	
  4749                           STR_31:
  4750  007DD8                     	db	32
  4751  007DD8  20                 	db	32
  4752  007DD9  20                 	db	32
  4753  007DDA  20                 	db	32
  4754  007DDB  20                 	db	32
  4755  007DDC  20                 	db	32
  4756  007DDD  20                 	db	32
  4757  007DDE  20                 	db	32
  4758  007DDF  20                 	db	83	;'S'
  4759  007DE0  53                 	db	65	;'A'
  4760  007DE1  41                 	db	76	;'L'
  4761  007DE2  4C                 	db	86	;'V'
  4762  007DE3  56                 	db	65	;'A'
  4763  007DE4  41                 	db	32
  4764  007DE5  20                 	db	32
  4765  007DE6  20                 	db	32
  4766  007DE7  20                 	db	32
  4767  007DE8  20                 	db	32
  4768  007DE9  20                 	db	32
  4769  007DEA  20                 	db	32
  4770  007DEB  20                 	db	0
  4771  007DEC  00                 	
  4772                           STR_3:
  4773  007DED                     	db	32
  4774  007DED  20                 	db	32
  4775  007DEE  20                 	db	32
  4776  007DEF  20                 	db	32
  4777  007DF0  20                 	db	32
  4778  007DF1  20                 	db	32
  4779  007DF2  20                 	db	83	;'S'
  4780  007DF3  53                 	db	69	;'E'
  4781  007DF4  45                 	db	71	;'G'
  4782  007DF5  47                 	db	71	;'G'
  4783  007DF6  47                 	db	85	;'U'
  4784  007DF7  55                 	db	73	;'I'
  4785  007DF8  49                 	db	84	;'T'
  4786  007DF9  54                 	db	32
  4787  007DFA  20                 	db	32
  4788  007DFB  20                 	db	32
  4789  007DFC  20                 	db	32
  4790  007DFD  20                 	db	32
  4791  007DFE  20                 	db	32
  4792  007DFF  20                 	db	32
  4793  007E00  20                 	db	0
  4794  007E01  00                 	
  4795                           STR_21:
  4796  007E02                     	db	32
  4797  007E02  20                 	db	32
  4798  007E03  20                 	db	32
  4799  007E04  20                 	db	32
  4800  007E05  20                 	db	32
  4801  007E06  20                 	db	32
  4802  007E07  20                 	db	32
  4803  007E08  20                 	db	91	;'['
  4804  007E09  5B                 	db	32
  4805  007E0A  20                 	db	32
  4806  007E0B  20                 	db	32
  4807  007E0C  20                 	db	32
  4808  007E0D  20                 	db	93	;']'
  4809  007E0E  5D                 	db	32
  4810  007E0F  20                 	db	32
  4811  007E10  20                 	db	32
  4812  007E11  20                 	db	32
  4813  007E12  20                 	db	32
  4814  007E13  20                 	db	32
  4815  007E14  20                 	db	32
  4816  007E15  20                 	db	0
  4817  007E16  00                 	
  4818                           STR_13:
  4819  007E17                     	db	32
  4820  007E17  20                 	db	32
  4821  007E18  20                 	db	32
  4822  007E19  20                 	db	32
  4823  007E1A  20                 	db	32
  4824  007E1B  20                 	db	32
  4825  007E1C  20                 	db	32
  4826  007E1D  20                 	db	68	;'D'
  4827  007E1E  44                 	db	69	;'E'
  4828  007E1F  45                 	db	76	;'L'
  4829  007E20  4C                 	db	69	;'E'
  4830  007E21  45                 	db	84	;'T'
  4831  007E22  54                 	db	69	;'E'
  4832  007E23  45                 	db	68	;'D'
  4833  007E24  44                 	db	32
  4834  007E25  20                 	db	32
  4835  007E26  20                 	db	32
  4836  007E27  20                 	db	32
  4837  007E28  20                 	db	32
  4838  007E29  20                 	db	32
  4839  007E2A  20                 	db	0
  4840  007E2B  00                 	
  4841                           STR_14:
  4842  007E2C                     	db	32
  4843  007E2C  20                 	db	32
  4844  007E2D  20                 	db	32
  4845  007E2E  20                 	db	32
  4846  007E2F  20                 	db	32
  4847  007E30  20                 	db	32
  4848  007E31  20                 	db	32
  4849  007E32  20                 	db	32
  4850  007E33  20                 	db	77	;'M'
  4851  007E34  4D                 	db	69	;'E'
  4852  007E35  45                 	db	77	;'M'
  4853  007E36  4D                 	db	79	;'O'
  4854  007E37  4F                 	db	82	;'R'
  4855  007E38  52                 	db	89	;'Y'
  4856  007E39  59                 	db	32
  4857  007E3A  20                 	db	32
  4858  007E3B  20                 	db	32
  4859  007E3C  20                 	db	32
  4860  007E3D  20                 	db	32
  4861  007E3E  20                 	db	32
  4862  007E3F  20                 	db	0
  4863  007E40  00                 	
  4864                           STR_9:
  4865  007E41                     	db	32
  4866  007E41  20                 	db	32
  4867  007E42  20                 	db	32
  4868  007E43  20                 	db	32
  4869  007E44  20                 	db	32
  4870  007E45  20                 	db	32
  4871  007E46  20                 	db	77	;'M'
  4872  007E47  4D                 	db	69	;'E'
  4873  007E48  45                 	db	77	;'M'
  4874  007E49  4D                 	db	79	;'O'
  4875  007E4A  4F                 	db	82	;'R'
  4876  007E4B  52                 	db	73	;'I'
  4877  007E4C  49                 	db	65	;'A'
  4878  007E4D  41                 	db	32
  4879  007E4E  20                 	db	63	;'?'
  4880  007E4F  3F                 	db	32
  4881  007E50  20                 	db	32
  4882  007E51  20                 	db	32
  4883  007E52  20                 	db	32
  4884  007E53  20                 	db	32
  4885  007E54  20                 	db	0
  4886  007E55  00                 	
  4887                           STR_30:
  4888  007E56                     	db	32
  4889  007E56  20                 	db	32
  4890  007E57  20                 	db	32
  4891  007E58  20                 	db	32
  4892  007E59  20                 	db	32
  4893  007E5A  20                 	db	32
  4894  007E5B  20                 	db	83	;'S'
  4895  007E5C  53                 	db	69	;'E'
  4896  007E5D  45                 	db	81	;'Q'
  4897  007E5E  51                 	db	85	;'U'
  4898  007E5F  55                 	db	69	;'E'
  4899  007E60  45                 	db	78	;'N'
  4900  007E61  4E                 	db	67	;'C'
  4901  007E62  43                 	db	73	;'I'
  4902  007E63  49                 	db	65	;'A'
  4903  007E64  41                 	db	32
  4904  007E65  20                 	db	32
  4905  007E66  20                 	db	32
  4906  007E67  20                 	db	32
  4907  007E68  20                 	db	32
  4908  007E69  20                 	db	0
  4909  007E6A  00                 	
  4910                           STR_17:
  4911  007E6B                     	db	32
  4912  007E6B  20                 	db	32
  4913  007E6C  20                 	db	32
  4914  007E6D  20                 	db	32
  4915  007E6E  20                 	db	32
  4916  007E6F  20                 	db	68	;'D'
  4917  007E70  44                 	db	79	;'O'
  4918  007E71  4F                 	db	32
  4919  007E72  20                 	db	83	;'S'
  4920  007E73  53                 	db	73	;'I'
  4921  007E74  49                 	db	83	;'S'
  4922  007E75  53                 	db	84	;'T'
  4923  007E76  54                 	db	69	;'E'
  4924  007E77  45                 	db	77	;'M'
  4925  007E78  4D                 	db	65	;'A'
  4926  007E79  41                 	db	32
  4927  007E7A  20                 	db	32
  4928  007E7B  20                 	db	32
  4929  007E7C  20                 	db	32
  4930  007E7D  20                 	db	32
  4931  007E7E  20                 	db	0
  4932  007E7F  00                 	
  4933                           STR_18:
  4934  007E80                     	db	32
  4935  007E80  20                 	db	32
  4936  007E81  20                 	db	32
  4937  007E82  20                 	db	65	;'A'
  4938  007E83  41                 	db	32
  4939  007E84  20                 	db	32
  4940  007E85  20                 	db	32
  4941  007E86  20                 	db	66	;'B'
  4942  007E87  42                 	db	32
  4943  007E88  20                 	db	32
  4944  007E89  20                 	db	32
  4945  007E8A  20                 	db	67	;'C'
  4946  007E8B  43                 	db	32
  4947  007E8C  20                 	db	32
  4948  007E8D  20                 	db	32
  4949  007E8E  20                 	db	68	;'D'
  4950  007E8F  44                 	db	32
  4951  007E90  20                 	db	32
  4952  007E91  20                 	db	32
  4953  007E92  20                 	db	32
  4954  007E93  20                 	db	0
  4955  007E94  00                 	
  4956                           STR_8:
  4957  007E95                     	db	32
  4958  007E95  20                 	db	32
  4959  007E96  20                 	db	32
  4960  007E97  20                 	db	68	;'D'
  4961  007E98  44                 	db	69	;'E'
  4962  007E99  45                 	db	76	;'L'
  4963  007E9A  4C                 	db	69	;'E'
  4964  007E9B  45                 	db	84	;'T'
  4965  007E9C  54                 	db	65	;'A'
  4966  007E9D  41                 	db	82	;'R'
  4967  007E9E  52                 	db	32
  4968  007E9F  20                 	db	84	;'T'
  4969  007EA0  54                 	db	79	;'O'
  4970  007EA1  4F                 	db	68	;'D'
  4971  007EA2  44                 	db	65	;'A'
  4972  007EA3  41                 	db	32
  4973  007EA4  20                 	db	65	;'A'
  4974  007EA5  41                 	db	32
  4975  007EA6  20                 	db	32
  4976  007EA7  20                 	db	32
  4977  007EA8  20                 	db	0
  4978  007EA9  00                 	
  4979                           STR_6:
  4980  007EAA                     	db	50	;'2'
  4981  007EAA  32                 	db	58	;':'
  4982  007EAB  3A                 	db	32
  4983  007EAC  20                 	db	76	;'L'
  4984  007EAD  4C                 	db	73	;'I'
  4985  007EAE  49                 	db	77	;'M'
  4986  007EAF  4D                 	db	80	;'P'
  4987  007EB0  50                 	db	65	;'A'
  4988  007EB1  41                 	db	82	;'R'
  4989  007EB2  52                 	db	32
  4990  007EB3  20                 	db	77	;'M'
  4991  007EB4  4D                 	db	69	;'E'
  4992  007EB5  45                 	db	77	;'M'
  4993  007EB6  4D                 	db	79	;'O'
  4994  007EB7  4F                 	db	82	;'R'
  4995  007EB8  52                 	db	73	;'I'
  4996  007EB9  49                 	db	65	;'A'
  4997  007EBA  41                 	db	32
  4998  007EBB  20                 	db	32
  4999  007EBC  20                 	db	32
  5000  007EBD  20                 	db	0
  5001  007EBE  00                 	
  5002                           STR_16:
  5003  007EBF                     	db	32
  5004  007EBF  20                 	db	32
  5005  007EC0  20                 	db	32
  5006  007EC1  20                 	db	65	;'A'
  5007  007EC2  41                 	db	74	;'J'
  5008  007EC3  4A                 	db	85	;'U'
  5009  007EC4  55                 	db	83	;'S'
  5010  007EC5  53                 	db	84	;'T'
  5011  007EC6  54                 	db	69	;'E'
  5012  007EC7  45                 	db	32
  5013  007EC8  20                 	db	79	;'O'
  5014  007EC9  4F                 	db	32
  5015  007ECA  20                 	db	73	;'I'
  5016  007ECB  49                 	db	78	;'N'
  5017  007ECC  4E                 	db	73	;'I'
  5018  007ECD  49                 	db	67	;'C'
  5019  007ECE  43                 	db	73	;'I'
  5020  007ECF  49                 	db	79	;'O'
  5021  007ED0  4F                 	db	32
  5022  007ED1  20                 	db	32
  5023  007ED2  20                 	db	0
  5024  007ED3  00                 	
  5025                           STR_19:
  5026  007ED4                     	db	32
  5027  007ED4  20                 	db	32
  5028  007ED5  20                 	db	73	;'I'
  5029  007ED6  49                 	db	78	;'N'
  5030  007ED7  4E                 	db	83	;'S'
  5031  007ED8  53                 	db	73	;'I'
  5032  007ED9  49                 	db	82	;'R'
  5033  007EDA  52                 	db	65	;'A'
  5034  007EDB  41                 	db	32
  5035  007EDC  20                 	db	79	;'O'
  5036  007EDD  4F                 	db	83	;'S'
  5037  007EDE  53                 	db	32
  5038  007EDF  20                 	db	80	;'P'
  5039  007EE0  50                 	db	65	;'A'
  5040  007EE1  41                 	db	83	;'S'
  5041  007EE2  53                 	db	83	;'S'
  5042  007EE3  53                 	db	79	;'O'
  5043  007EE4  4F                 	db	83	;'S'
  5044  007EE5  53                 	db	32
  5045  007EE6  20                 	db	32
  5046  007EE7  20                 	db	0
  5047  007EE8  00                 	
  5048                           STR_25:
  5049  007EE9                     	db	48	;'0'
  5050  007EE9  30                 	db	32
  5051  007EEA  20                 	db	45
  5052  007EEB  2D                 	db	32
  5053  007EEC  20                 	db	67	;'C'
  5054  007EED  43                 	db	105	;'i'
  5055  007EEE  69                 	db	99	;'c'
  5056  007EEF  63                 	db	108	;'l'
  5057  007EF0  6C                 	db	111	;'o'
  5058  007EF1  6F                 	db	32
  5059  007EF2  20                 	db	99	;'c'
  5060  007EF3  63                 	db	111	;'o'
  5061  007EF4  6F                 	db	110	;'n'
  5062  007EF5  6E                 	db	116	;'t'
  5063  007EF6  74                 	db	105	;'i'
  5064  007EF7  69                 	db	110	;'n'
  5065  007EF8  6E                 	db	117	;'u'
  5066  007EF9  75                 	db	111	;'o'
  5067  007EFA  6F                 	db	32
  5068  007EFB  20                 	db	32
  5069  007EFC  20                 	db	0
  5070  007EFD  00                 	
  5071                           STR_7:
  5072  007EFE                     	db	32
  5073  007EFE  20                 	db	67	;'C'
  5074  007EFF  43                 	db	69	;'E'
  5075  007F00  45                 	db	82	;'R'
  5076  007F01  52                 	db	84	;'T'
  5077  007F02  54                 	db	69	;'E'
  5078  007F03  45                 	db	90	;'Z'
  5079  007F04  5A                 	db	65	;'A'
  5080  007F05  41                 	db	32
  5081  007F06  20                 	db	81	;'Q'
  5082  007F07  51                 	db	85	;'U'
  5083  007F08  55                 	db	69	;'E'
  5084  007F09  45                 	db	32
  5085  007F0A  20                 	db	68	;'D'
  5086  007F0B  44                 	db	69	;'E'
  5087  007F0C  45                 	db	83	;'S'
  5088  007F0D  53                 	db	69	;'E'
  5089  007F0E  45                 	db	74	;'J'
  5090  007F0F  4A                 	db	65	;'A'
  5091  007F10  41                 	db	32
  5092  007F11  20                 	db	0
  5093  007F12  00                 	
  5094                           STR_32:
  5095  007F13                     	db	99	;'c'
  5096  007F13  63                 	db	111	;'o'
  5097  007F14  6F                 	db	110	;'n'
  5098  007F15  6E                 	db	102	;'f'
  5099  007F16  66                 	db	105	;'i'
  5100  007F17  69                 	db	103	;'g'
  5101  007F18  67                 	db	32
  5102  007F19  20                 	db	99	;'c'
  5103  007F1A  63                 	db	111	;'o'
  5104  007F1B  6F                 	db	110	;'n'
  5105  007F1C  6E                 	db	116	;'t'
  5106  007F1D  74                 	db	114	;'r'
  5107  007F1E  72                 	db	108	;'l'
  5108  007F1F  6C                 	db	58	;':'
  5109  007F20  3A                 	db	32
  5110  007F21  20                 	db	32
  5111  007F22  20                 	db	32
  5112  007F23  20                 	db	32
  5113  007F24  20                 	db	32
  5114  007F25  20                 	db	37
  5115  007F26  25                 	db	0
  5116  007F27  00                 	
  5117                           STR_5:
  5118  007F28                     	db	49	;'1'
  5119  007F28  31                 	db	58	;':'
  5120  007F29  3A                 	db	32
  5121  007F2A  20                 	db	86	;'V'
  5122  007F2B  56                 	db	69	;'E'
  5123  007F2C  45                 	db	82	;'R'
  5124  007F2D  52                 	db	73	;'I'
  5125  007F2E  49                 	db	70	;'F'
  5126  007F2F  46                 	db	73	;'I'
  5127  007F30  49                 	db	67	;'C'
  5128  007F31  43                 	db	65	;'A'
  5129  007F32  41                 	db	82	;'R'
  5130  007F33  52                 	db	32
  5131  007F34  20                 	db	77	;'M'
  5132  007F35  4D                 	db	69	;'E'
  5133  007F36  45                 	db	77	;'M'
  5134  007F37  4D                 	db	79	;'O'
  5135  007F38  4F                 	db	82	;'R'
  5136  007F39  52                 	db	73	;'I'
  5137  007F3A  49                 	db	65	;'A'
  5138  007F3B  41                 	db	0
  5139  007F3C  00                 	
  5140                           STR_23:
  5141  007F3D                     	db	99	;'c'
  5142  007F3D  63                 	db	111	;'o'
  5143  007F3E  6F                 	db	110	;'n'
  5144  007F3F  6E                 	db	102	;'f'
  5145  007F40  66                 	db	105	;'i'
  5146  007F41  69                 	db	103	;'g'
  5147  007F42  67                 	db	32
  5148  007F43  20                 	db	116	;'t'
  5149  007F44  74                 	db	101	;'e'
  5150  007F45  65                 	db	109	;'m'
  5151  007F46  6D                 	db	112	;'p'
  5152  007F47  70                 	db	111	;'o'
  5153  007F48  6F                 	db	58	;':'
  5154  007F49  3A                 	db	32
  5155  007F4A  20                 	db	32
  5156  007F4B  20                 	db	32
  5157  007F4C  20                 	db	32
  5158  007F4D  20                 	db	32
  5159  007F4E  20                 	db	32
  5160  007F4F  20                 	db	115	;'s'
  5161  007F50  73                 	db	0
  5162  007F51  00                 	
  5163                           STR_39:
  5164  007F52                     	db	65	;'A'
  5165  007F52  41                 	db	84	;'T'
  5166  007F53  54                 	db	43
  5167  007F54  2B                 	db	67	;'C'
  5168  007F55  43                 	db	87	;'W'
  5169  007F56  57                 	db	65	;'A'
  5170  007F57  41                 	db	85	;'U'
  5171  007F58  55                 	db	84	;'T'
  5172  007F59  54                 	db	79	;'O'
  5173  007F5A  4F                 	db	67	;'C'
  5174  007F5B  43                 	db	79	;'O'
  5175  007F5C  4F                 	db	78	;'N'
  5176  007F5D  4E                 	db	78	;'N'
  5177  007F5E  4E                 	db	61	;'='
  5178  007F5F  3D                 	db	48	;'0'
  5179  007F60  30                 	db	13
  5180  007F61  0D                 	db	10
  5181  007F62  0A                 	db	0
  5182  007F63  00                 	
  5183                           STR_40:
  5184  007F64                     	db	65	;'A'
  5185  007F64  41                 	db	84	;'T'
  5186  007F65  54                 	db	43
  5187  007F66  2B                 	db	67	;'C'
  5188  007F67  43                 	db	73	;'I'
  5189  007F68  49                 	db	80	;'P'
  5190  007F69  50                 	db	77	;'M'
  5191  007F6A  4D                 	db	79	;'O'
  5192  007F6B  4F                 	db	68	;'D'
  5193  007F6C  44                 	db	69	;'E'
  5194  007F6D  45                 	db	61	;'='
  5195  007F6E  3D                 	db	49	;'1'
  5196  007F6F  31                 	db	13
  5197  007F70  0D                 	db	10
  5198  007F71  0A                 	db	0
  5199  007F72  00                 	
  5200                           STR_44:
  5201  007F73                     	db	65	;'A'
  5202  007F73  41                 	db	84	;'T'
  5203  007F74  54                 	db	43
  5204  007F75  2B                 	db	67	;'C'
  5205  007F76  43                 	db	73	;'I'
  5206  007F77  49                 	db	80	;'P'
  5207  007F78  50                 	db	83	;'S'
  5208  007F79  53                 	db	69	;'E'
  5209  007F7A  45                 	db	78	;'N'
  5210  007F7B  4E                 	db	68	;'D'
  5211  007F7C  44                 	db	61	;'='
  5212  007F7D  3D                 	db	56	;'8'
  5213  007F7E  38                 	db	13
  5214  007F7F  0D                 	db	10
  5215  007F80  0A                 	db	0
  5216  007F81  00                 	
  5217                           STR_36:
  5218  007F82                     	db	65	;'A'
  5219  007F82  41                 	db	84	;'T'
  5220  007F83  54                 	db	43
  5221  007F84  2B                 	db	67	;'C'
  5222  007F85  43                 	db	87	;'W'
  5223  007F86  57                 	db	77	;'M'
  5224  007F87  4D                 	db	79	;'O'
  5225  007F88  4F                 	db	68	;'D'
  5226  007F89  44                 	db	69	;'E'
  5227  007F8A  45                 	db	61	;'='
  5228  007F8B  3D                 	db	48	;'0'
  5229  007F8C  30                 	db	13
  5230  007F8D  0D                 	db	10
  5231  007F8E  0A                 	db	0
  5232  007F8F  00                 	
  5233                           STR_33:
  5234  007F90                     	db	65	;'A'
  5235  007F90  41                 	db	84	;'T'
  5236  007F91  54                 	db	43
  5237  007F92  2B                 	db	67	;'C'
  5238  007F93  43                 	db	87	;'W'
  5239  007F94  57                 	db	77	;'M'
  5240  007F95  4D                 	db	79	;'O'
  5241  007F96  4F                 	db	68	;'D'
  5242  007F97  44                 	db	69	;'E'
  5243  007F98  45                 	db	61	;'='
  5244  007F99  3D                 	db	49	;'1'
  5245  007F9A  31                 	db	13
  5246  007F9B  0D                 	db	10
  5247  007F9C  0A                 	db	0
  5248  007F9D  00                 	
  5249                           STR_41:
  5250  007F9E                     	db	65	;'A'
  5251  007F9E  41                 	db	84	;'T'
  5252  007F9F  54                 	db	43
  5253  007FA0  2B                 	db	67	;'C'
  5254  007FA1  43                 	db	73	;'I'
  5255  007FA2  49                 	db	80	;'P'
  5256  007FA3  50                 	db	77	;'M'
  5257  007FA4  4D                 	db	85	;'U'
  5258  007FA5  55                 	db	88	;'X'
  5259  007FA6  58                 	db	61	;'='
  5260  007FA7  3D                 	db	49	;'1'
  5261  007FA8  31                 	db	13
  5262  007FA9  0D                 	db	10
  5263  007FAA  0A                 	db	0
  5264  007FAB  00                 	
  5265                           STR_34:
  5266  007FAC                     	db	65	;'A'
  5267  007FAC  41                 	db	84	;'T'
  5268  007FAD  54                 	db	43
  5269  007FAE  2B                 	db	67	;'C'
  5270  007FAF  43                 	db	87	;'W'
  5271  007FB0  57                 	db	77	;'M'
  5272  007FB1  4D                 	db	79	;'O'
  5273  007FB2  4F                 	db	68	;'D'
  5274  007FB3  44                 	db	69	;'E'
  5275  007FB4  45                 	db	61	;'='
  5276  007FB5  3D                 	db	50	;'2'
  5277  007FB6  32                 	db	13
  5278  007FB7  0D                 	db	10
  5279  007FB8  0A                 	db	0
  5280  007FB9  00                 	
  5281                           STR_35:
  5282  007FBA                     	db	65	;'A'
  5283  007FBA  41                 	db	84	;'T'
  5284  007FBB  54                 	db	43
  5285  007FBC  2B                 	db	67	;'C'
  5286  007FBD  43                 	db	87	;'W'
  5287  007FBE  57                 	db	77	;'M'
  5288  007FBF  4D                 	db	79	;'O'
  5289  007FC0  4F                 	db	68	;'D'
  5290  007FC1  44                 	db	69	;'E'
  5291  007FC2  45                 	db	61	;'='
  5292  007FC3  3D                 	db	51	;'3'
  5293  007FC4  33                 	db	13
  5294  007FC5  0D                 	db	10
  5295  007FC6  0A                 	db	0
  5296  007FC7  00                 	
  5297                           STR_46:
  5298  007FC8                     	db	65	;'A'
  5299  007FC8  41                 	db	84	;'T'
  5300  007FC9  54                 	db	43
  5301  007FCA  2B                 	db	67	;'C'
  5302  007FCB  43                 	db	73	;'I'
  5303  007FCC  49                 	db	80	;'P'
  5304  007FCD  50                 	db	67	;'C'
  5305  007FCE  43                 	db	76	;'L'
  5306  007FCF  4C                 	db	79	;'O'
  5307  007FD0  4F                 	db	83	;'S'
  5308  007FD1  53                 	db	69	;'E'
  5309  007FD2  45                 	db	13
  5310  007FD3  0D                 	db	10
  5311  007FD4  0A                 	db	0
  5312  007FD5  00                 	
  5313                           STR_37:
  5314  007FD6                     	db	65	;'A'
  5315  007FD6  41                 	db	84	;'T'
  5316  007FD7  54                 	db	43
  5317  007FD8  2B                 	db	67	;'C'
  5318  007FD9  43                 	db	87	;'W'
  5319  007FDA  57                 	db	76	;'L'
  5320  007FDB  4C                 	db	65	;'A'
  5321  007FDC  41                 	db	80	;'P'
  5322  007FDD  50                 	db	13
  5323  007FDE  0D                 	db	10
  5324  007FDF  0A                 	db	0
  5325  007FE0  00                 	
  5326                           STR_38:
  5327  007FE1                     	db	65	;'A'
  5328  007FE1  41                 	db	84	;'T'
  5329  007FE2  54                 	db	43
  5330  007FE3  2B                 	db	67	;'C'
  5331  007FE4  43                 	db	73	;'I'
  5332  007FE5  49                 	db	70	;'F'
  5333  007FE6  46                 	db	83	;'S'
  5334  007FE7  53                 	db	82	;'R'
  5335  007FE8  52                 	db	13
  5336  007FE9  0D                 	db	10
  5337  007FEA  0A                 	db	0
  5338  007FEB  00                 	
  5339                           STR_45:
  5340  007FEC                     	db	65	;'A'
  5341  007FEC  41                 	db	66	;'B'
  5342  007FED  42                 	db	67	;'C'
  5343  007FEE  43                 	db	68	;'D'
  5344  007FEF  44                 	db	69	;'E'
  5345  007FF0  45                 	db	70	;'F'
  5346  007FF1  46                 	db	71	;'G'
  5347  007FF2  47                 	db	72	;'H'
  5348  007FF3  48                 	db	0
  5349  007FF4  00                 	
  5350                           STR_20:
  5351  007FF5                     	db	60	;'<'
  5352  007FF5  3C                 	db	32
  5353  007FF6  20                 	db	32
  5354  007FF7  20                 	db	47
  5355  007FF8  2F                 	db	32
  5356  007FF9  20                 	db	32
  5357  007FFA  20                 	db	62	;'>'
  5358  007FFB  3E                 	db	0
  5359  007FFC  00                 	
  5360                           STR_1:
  5361  007FFD                     	db	-1
  5362  007FFD  FF                 	db	0
  5363  007FFE  00                 STR_10	equ	STR_26+41
  5364  0000                     STR_2	equ	STR_24+19
  5365  0000                     STR_12	equ	STR_24+19
  5366  0000                     STR_29	equ	STR_24+19
  5367  0000                     STR_11	equ	STR_1+0
  5368  0000                     STR_28	equ	STR_1+0
  5369  0000                     ; #config settings
  5370                           global __CFG_PLLDIV$5
  5371                           __CFG_PLLDIV$5 equ 0x0
  5372  0000                     global __CFG_CPUDIV$OSC1_PLL2
  5373                           __CFG_CPUDIV$OSC1_PLL2 equ 0x0
  5374  0000                     global __CFG_USBDIV$1
  5375                           __CFG_USBDIV$1 equ 0x0
  5376  0000                     global __CFG_FOSC$HS
  5377                           __CFG_FOSC$HS equ 0x0
  5378  0000                     global __CFG_FCMEN$OFF
  5379                           __CFG_FCMEN$OFF equ 0x0
  5380  0000                     global __CFG_IESO$OFF
  5381                           __CFG_IESO$OFF equ 0x0
  5382  0000                     global __CFG_PWRT$ON
  5383                           __CFG_PWRT$ON equ 0x0
  5384  0000                     global __CFG_BOR$OFF
  5385                           __CFG_BOR$OFF equ 0x0
  5386  0000                     global __CFG_BORV$3
  5387                           __CFG_BORV$3 equ 0x0
  5388  0000                     global __CFG_VREGEN$OFF
  5389                           __CFG_VREGEN$OFF equ 0x0
  5390  0000                     global __CFG_WDT$OFF
  5391                           __CFG_WDT$OFF equ 0x0
  5392  0000                     global __CFG_WDTPS$32768
  5393                           __CFG_WDTPS$32768 equ 0x0
  5394  0000                     global __CFG_CCP2MX$ON
  5395                           __CFG_CCP2MX$ON equ 0x0
  5396  0000                     global __CFG_PBADEN$OFF
  5397                           __CFG_PBADEN$OFF equ 0x0
  5398  0000                     global __CFG_LPT1OSC$OFF
  5399                           __CFG_LPT1OSC$OFF equ 0x0
  5400  0000                     global __CFG_MCLRE$OFF
  5401                           __CFG_MCLRE$OFF equ 0x0
  5402  0000                     global __CFG_STVREN$OFF
  5403                           __CFG_STVREN$OFF equ 0x0
  5404  0000                     global __CFG_LVP$OFF
  5405                           __CFG_LVP$OFF equ 0x0
  5406  0000                     global __CFG_ICPRT$OFF
  5407                           __CFG_ICPRT$OFF equ 0x0
  5408  0000                     global __CFG_XINST$OFF
  5409                           __CFG_XINST$OFF equ 0x0
  5410  0000                     global __CFG_CP0$OFF
  5411                           __CFG_CP0$OFF equ 0x0
  5412  0000                     global __CFG_CP1$OFF
  5413                           __CFG_CP1$OFF equ 0x0
  5414  0000                     global __CFG_CP2$OFF
  5415                           __CFG_CP2$OFF equ 0x0
  5416  0000                     global __CFG_CP3$OFF
  5417                           __CFG_CP3$OFF equ 0x0
  5418  0000                     global __CFG_CPB$OFF
  5419                           __CFG_CPB$OFF equ 0x0
  5420  0000                     global __CFG_CPD$OFF
  5421                           __CFG_CPD$OFF equ 0x0
  5422  0000                     global __CFG_WRT0$OFF
  5423                           __CFG_WRT0$OFF equ 0x0
  5424  0000                     global __CFG_WRT1$OFF
  5425                           __CFG_WRT1$OFF equ 0x0
  5426  0000                     global __CFG_WRT2$OFF
  5427                           __CFG_WRT2$OFF equ 0x0
  5428  0000                     global __CFG_WRT3$OFF
  5429                           __CFG_WRT3$OFF equ 0x0
  5430  0000                     global __CFG_WRTC$OFF
  5431                           __CFG_WRTC$OFF equ 0x0
  5432  0000                     global __CFG_WRTB$OFF
  5433                           __CFG_WRTB$OFF equ 0x0
  5434  0000                     global __CFG_WRTD$OFF
  5435                           __CFG_WRTD$OFF equ 0x0
  5436  0000                     global __CFG_EBTR0$OFF
  5437                           __CFG_EBTR0$OFF equ 0x0
  5438  0000                     global __CFG_EBTR1$OFF
  5439                           __CFG_EBTR1$OFF equ 0x0
  5440  0000                     global __CFG_EBTR2$OFF
  5441                           __CFG_EBTR2$OFF equ 0x0
  5442  0000                     global __CFG_EBTR3$OFF
  5443                           __CFG_EBTR3$OFF equ 0x0
  5444  0000                     global __CFG_EBTRB$OFF
  5445                           __CFG_EBTRB$OFF equ 0x0
  5446  0000                     	file	"C:\Users\20185189\AppData\Local\Temp\sf18."
  5447                           	line	#
  5448                           psect	cinit,class=CODE,delta=1,reloc=2
  5449                           global __pcinit
  5450                           __pcinit:
  5451  0036DC                     global start_initialization
  5452                           start_initialization:
  5453  0036DC                     
  5454                           global __initialization
  5455                           __initialization:
  5456  0036DC                     psect	bssCOMRAM,class=COMRAM,space=1,noexec
  5457                           global __pbssCOMRAM
  5458                           __pbssCOMRAM:
  5459  000001                     	global	_t1cont
  5460                           _t1cont:
  5461  000001                            ds      4
  5462  000001                     salva_atuadores_init@F108:
  5463  000005                            ds      4
  5464  000005                     	global	_ptrSerialOut
  5465                           _ptrSerialOut:
  5466  000009                            ds      2
  5467  000009                     	global	_ptrSerialIn
  5468                           _ptrSerialIn:
  5469  00000B                            ds      2
  5470  00000B                     	global	_cont_ciclos
  5471                           _cont_ciclos:
  5472  00000D                            ds      2
  5473  00000D                     	global	_ciclos
  5474                           	global	_ciclos
  5475                           _ciclos:
  5476  00000F                            ds      2
  5477  00000F                     	global	_teclaAnterior
  5478                           _teclaAnterior:
  5479  000011                            ds      1
  5480  000011                     	global	_lenSerialIO
  5481                           _lenSerialIO:
  5482  000012                            ds      1
  5483  000012                     	global	_atuador
  5484                           _atuador:
  5485  000013                            ds      1
  5486  000013                     	global	_d
  5487                           	global	_d
  5488                           _d:
  5489  000014                            ds      1
  5490  000014                     	global	_fila
  5491                           _fila:
  5492  000015                            ds      18
  5493  000015                     psect	dataCOMRAM,class=COMRAM,space=1,noexec
  5494                           global __pdataCOMRAM
  5495                           __pdataCOMRAM:
  5496  000047                     	file	"./eeprom.h"
  5497                           	line	28
  5498                           	global	_EEPROM
  5499                           _EEPROM:
  5500  000047                            ds      10
  5501  000047                     psect	dataCOMRAM
  5502                           	file	"./ihm.h"
  5503                           	line	14
  5504                           	global	_IHM
  5505                           _IHM:
  5506  000051                            ds      10
  5507  000051                     psect	dataCOMRAM
  5508                           	file	"fifo.c"
  5509                           	line	16
  5510                           	global	_indice_passos
  5511                           _indice_passos:
  5512  00005B                            ds      1
  5513  00005B                     psect	dataCOMRAM
  5514                           	file	"fifo.c"
  5515                           	line	12
  5516                           	global	_ind_print
  5517                           _ind_print:
  5518  00005C                            ds      1
  5519  00005C                     psect	dataCOMRAM
  5520                           	file	"fifo.c"
  5521                           	line	11
  5522                           	global	_ind_fila
  5523                           _ind_fila:
  5524  00005D                            ds      1
  5525  00005D                     psect	bssBANK0h,class=BANK0,space=1,noexec,lowdata
  5526                           global __pbssBANK0h
  5527                           __pbssBANK0h:
  5528  0000F1                     main@F3474:
  5529  0000F1                            ds      1
  5530  0000F1                     main@F3472:
  5531  0000F2                            ds      1
  5532  0000F2                     psect	dataBANK0l,class=BANK0,space=1,noexec,lowdata
  5533                           global __pdataBANK0l
  5534                           __pdataBANK0l:
  5535  0000BD                     	file	"main.c"
  5536                           	line	136
  5537                           main@F3498:
  5538  0000BD                            ds      20
  5539  0000BD                     psect	dataBANK0l
  5540                           	file	"eusart.c"
  5541                           	line	26
  5542                           	global	_eusart
  5543                           _eusart:
  5544  0000D1                            ds      16
  5545  0000D1                     psect	dataBANK0l
  5546                           	file	"teclado.c"
  5547                           	line	50
  5548                           	global	_teclas
  5549                           _teclas:
  5550  0000E1                            ds      16
  5551  0000E1                     psect	dataBANK1,class=BANK1,space=1,noexec,lowdata
  5552                           global __pdataBANK1
  5553                           __pdataBANK1:
  5554  000100                     	file	"wifi.c"
  5555                           	line	74
  5556                           Wifi_connect@F3276:
  5557  000100                            ds      40
  5558  000100                     psect	dataBANK1
  5559                           	file	"./wifi.h"
  5560                           	line	38
  5561                           	global	_wifi
  5562                           	global	_wifi
  5563                           _wifi:
  5564  000128                            ds      20
  5565  000128                     	file	"C:\Users\20185189\AppData\Local\Temp\sf18."
  5566                           	line	#
  5567                           psect	cinit
  5568                           ; Initialize objects allocated to BANK1 (60 bytes)
  5569                           	global __pidataBANK1
  5570                           	; load TBLPTR registers with __pidataBANK1
  5571                           	movlw	low (__pidataBANK1)
  5572  0036DC  0EDE               	movwf	tblptrl
  5573  0036DE  6EF6               	movlw	high(__pidataBANK1)
  5574  0036E0  0E3E               	movwf	tblptrh
  5575  0036E2  6EF7               	movlw	low highword(__pidataBANK1)
  5576  0036E4  0E00               	movwf	tblptru
  5577  0036E6  6EF8               	lfsr	0,__pdataBANK1
  5578  0036E8  EE01  F000         	lfsr	1,60
  5579  0036EC  EE10 F03C          	copy_data0:
  5580  0036F0                     	tblrd	*+
  5581  0036F0  0009               	movff	tablat, postinc0
  5582  0036F2  CFF5 FFEE          	movf	postdec1,w
  5583  0036F6  50E5               	movf	fsr1l,w
  5584  0036F8  50E1               	bnz	copy_data0
  5585  0036FA  E1FA               ; Initialize objects allocated to COMRAM (23 bytes)
  5586                           	global __pidataCOMRAM
  5587                           	; load TBLPTR registers with __pidataCOMRAM
  5588                           	movlw	low (__pidataCOMRAM)
  5589  0036FC  0E10               	movwf	tblptrl
  5590  0036FE  6EF6               	movlw	high(__pidataCOMRAM)
  5591  003700  0E43               	movwf	tblptrh
  5592  003702  6EF7               	movlw	low highword(__pidataCOMRAM)
  5593  003704  0E00               	movwf	tblptru
  5594  003706  6EF8               	lfsr	0,__pdataCOMRAM
  5595  003708  EE00  F047         	lfsr	1,23
  5596  00370C  EE10 F017          	copy_data1:
  5597  003710                     	tblrd	*+
  5598  003710  0009               	movff	tablat, postinc0
  5599  003712  CFF5 FFEE          	movf	postdec1,w
  5600  003716  50E5               	movf	fsr1l,w
  5601  003718  50E1               	bnz	copy_data1
  5602  00371A  E1FA               ; Initialize objects allocated to BANK0l (52 bytes)
  5603                           	global __pidataBANK0l
  5604                           	; load TBLPTR registers with __pidataBANK0l
  5605                           	movlw	low (__pidataBANK0l)
  5606  00371C  0E8A               	movwf	tblptrl
  5607  00371E  6EF6               	movlw	high(__pidataBANK0l)
  5608  003720  0E3F               	movwf	tblptrh
  5609  003722  6EF7               	movlw	low highword(__pidataBANK0l)
  5610  003724  0E00               	movwf	tblptru
  5611  003726  6EF8               	lfsr	0,__pdataBANK0l
  5612  003728  EE00  F0BD         	lfsr	1,52
  5613  00372C  EE10 F034          	copy_data2:
  5614  003730                     	tblrd	*+
  5615  003730  0009               	movff	tablat, postinc0
  5616  003732  CFF5 FFEE          	movf	postdec1,w
  5617  003736  50E5               	movf	fsr1l,w
  5618  003738  50E1               	bnz	copy_data2
  5619  00373A  E1FA               	line	#
  5620                           ; Clear objects allocated to BANK0h (2 bytes)
  5621                           	global __pbssBANK0h
  5622                           movlb	0
  5623  00373C  0100               clrf	(__pbssBANK0h+1)&0xffh,b
  5624  00373E  6BF2               clrf	(__pbssBANK0h+0)&0xffh,b
  5625  003740  6BF1               ; Clear objects allocated to COMRAM (38 bytes)
  5626                           	global __pbssCOMRAM
  5627                           lfsr	0,__pbssCOMRAM
  5628  003742  EE00  F001         movlw	38
  5629  003746  0E26               clear_0:
  5630  003748                     clrf	postinc0,c
  5631  003748  6AEE               decf	wreg
  5632  00374A  06E8               bnz	clear_0
  5633  00374C  E1FD               psect cinit,class=CODE,delta=1
  5634                           global end_of_initialization,__end_of__initialization
  5635                           
  5636                           ;End of C runtime variable initialization code
  5637                           
  5638                           end_of_initialization:
  5639  00374E                     __end_of__initialization:
  5640  00374E                     	bcf int$flags,0,c ;clear compiler interrupt flag (level 1)
  5641  00374E  905E               	bcf int$flags,1,c ;clear compiler interrupt flag (level 2)
  5642  003750  925E               	GLOBAL	__Lmediumconst
  5643                           	movlw	low highword(__Lmediumconst)
  5644  003752  0E00               	movwf	tblptru
  5645  003754  6EF8               movlb 0
  5646  003756  0100               goto _main	;jump to C main() function
  5647  003758  EF09  F000         psect	cstackBANK0h,class=BANK0,space=1,noexec
  5648                           global __pcstackBANK0h
  5649                           __pcstackBANK0h:
  5650  000060                     	global	main@lema
  5651                           main@lema:	; 20 bytes @ 0x0
  5652  000060                     	ds   20
  5653  000060                     	global	main@contPassos
  5654                           main@contPassos:	; 1 bytes @ 0x14
  5655  000074                     	ds   1
  5656  000074                     	global	main@aux
  5657                           main@aux:	; 1 bytes @ 0x15
  5658  000075                     	ds   1
  5659  000075                     	global	main@vetor_aux
  5660                           main@vetor_aux:	; 16 bytes @ 0x16
  5661  000076                     	ds   16
  5662  000076                     	global	_main$646
  5663                           _main$646:	; 2 bytes @ 0x26
  5664  000086                     	ds   2
  5665  000086                     	global	_main$665
  5666                           _main$665:	; 2 bytes @ 0x28
  5667  000088                     	ds   2
  5668  000088                     	global	_main$669
  5669                           _main$669:	; 2 bytes @ 0x2A
  5670  00008A                     	ds   2
  5671  00008A                     	global	_main$670
  5672                           _main$670:	; 2 bytes @ 0x2C
  5673  00008C                     	ds   2
  5674  00008C                     	global	_main$671
  5675                           _main$671:	; 2 bytes @ 0x2E
  5676  00008E                     	ds   2
  5677  00008E                     	global	_main$672
  5678                           _main$672:	; 2 bytes @ 0x30
  5679  000090                     	ds   2
  5680  000090                     	global	_main$673
  5681                           _main$673:	; 2 bytes @ 0x32
  5682  000092                     	ds   2
  5683  000092                     	global	_main$674
  5684                           _main$674:	; 2 bytes @ 0x34
  5685  000094                     	ds   2
  5686  000094                     	global	_main$675
  5687                           _main$675:	; 2 bytes @ 0x36
  5688  000096                     	ds   2
  5689  000096                     	global	_main$676
  5690                           _main$676:	; 2 bytes @ 0x38
  5691  000098                     	ds   2
  5692  000098                     	global	_main$678
  5693                           _main$678:	; 2 bytes @ 0x3A
  5694  00009A                     	ds   2
  5695  00009A                     	global	main@i_642
  5696                           main@i_642:	; 1 bytes @ 0x3C
  5697  00009C                     	ds   1
  5698  00009C                     	global	main@pt
  5699                           main@pt:	; 2 bytes @ 0x3D
  5700  00009D                     	ds   2
  5701  00009D                     	global	main@ptr
  5702                           main@ptr:	; 2 bytes @ 0x3F
  5703  00009F                     	ds   2
  5704  00009F                     	global	main@i
  5705                           main@i:	; 1 bytes @ 0x41
  5706  0000A1                     	ds   1
  5707  0000A1                     	global	main@j
  5708                           main@j:	; 1 bytes @ 0x42
  5709  0000A2                     	ds   1
  5710  0000A2                     	global	main@i_636
  5711                           main@i_636:	; 1 bytes @ 0x43
  5712  0000A3                     	ds   1
  5713  0000A3                     	global	main@j_637
  5714                           main@j_637:	; 1 bytes @ 0x44
  5715  0000A4                     	ds   1
  5716  0000A4                     	global	main@i_654
  5717                           main@i_654:	; 1 bytes @ 0x45
  5718  0000A5                     	ds   1
  5719  0000A5                     	global	main@j_655
  5720                           main@j_655:	; 1 bytes @ 0x46
  5721  0000A6                     	ds   1
  5722  0000A6                     	global	main@i_657
  5723                           main@i_657:	; 1 bytes @ 0x47
  5724  0000A7                     	ds   1
  5725  0000A7                     	global	main@j_658
  5726                           main@j_658:	; 1 bytes @ 0x48
  5727  0000A8                     	ds   1
  5728  0000A8                     	global	main@i_687
  5729                           main@i_687:	; 1 bytes @ 0x49
  5730  0000A9                     	ds   1
  5731  0000A9                     	global	main@j_688
  5732                           main@j_688:	; 1 bytes @ 0x4A
  5733  0000AA                     	ds   1
  5734  0000AA                     	global	main@i_690
  5735                           main@i_690:	; 1 bytes @ 0x4B
  5736  0000AB                     	ds   1
  5737  0000AB                     	global	main@j_691
  5738                           main@j_691:	; 1 bytes @ 0x4C
  5739  0000AC                     	ds   1
  5740  0000AC                     	global	main@vetorIn
  5741                           main@vetorIn:	; 1 bytes @ 0x4D
  5742  0000AD                     	ds   1
  5743  0000AD                     	global	main@vetorOut
  5744                           main@vetorOut:	; 1 bytes @ 0x4E
  5745  0000AE                     	ds   1
  5746  0000AE                     	global	main@meAtuadores
  5747                           main@meAtuadores:	; 1 bytes @ 0x4F
  5748  0000AF                     	ds   1
  5749  0000AF                     	global	main@ciclos
  5750                           main@ciclos:	; 2 bytes @ 0x50
  5751  0000B0                     	ds   2
  5752  0000B0                     	global	main@init_cond
  5753                           main@init_cond:	; 1 bytes @ 0x52
  5754  0000B2                     	ds   1
  5755  0000B2                     	global	main@botao
  5756                           main@botao:	; 1 bytes @ 0x53
  5757  0000B3                     	ds   1
  5758  0000B3                     	global	main@num
  5759                           main@num:	; 2 bytes @ 0x54
  5760  0000B4                     	ds   2
  5761  0000B4                     	global	main@ptr_645
  5762                           main@ptr_645:	; 2 bytes @ 0x56
  5763  0000B6                     	ds   2
  5764  0000B6                     	global	main@ptr_664
  5765                           main@ptr_664:	; 2 bytes @ 0x58
  5766  0000B8                     	ds   2
  5767  0000B8                     	global	main@auxPasso
  5768                           main@auxPasso:	; 1 bytes @ 0x5A
  5769  0000BA                     	ds   1
  5770  0000BA                     	global	main@estado
  5771                           main@estado:	; 1 bytes @ 0x5B
  5772  0000BB                     	ds   1
  5773  0000BB                     	global	main@tecla
  5774                           main@tecla:	; 1 bytes @ 0x5C
  5775  0000BC                     	ds   1
  5776  0000BC                     psect	cstackCOMRAM,class=COMRAM,space=1,noexec
  5777                           global __pcstackCOMRAM
  5778                           __pcstackCOMRAM:
  5779  000027                     ?_dispLCD_init:	; 1 bytes @ 0x0
  5780  000027                     ?_dispLCD_clr:	; 1 bytes @ 0x0
  5781  000027                     ?_deletar_receita:	; 1 bytes @ 0x0
  5782  000027                     ?_formatar_receitas:	; 1 bytes @ 0x0
  5783  000027                     ?_intt1_1ms:	; 1 bytes @ 0x0
  5784  000027                     ??_intt1_1ms:	; 1 bytes @ 0x0
  5785  000027                     ?_teclado_init:	; 1 bytes @ 0x0
  5786  000027                     ??_teclado_init:	; 1 bytes @ 0x0
  5787  000027                     ?_timer1_init:	; 1 bytes @ 0x0
  5788  000027                     ??_timer1_init:	; 1 bytes @ 0x0
  5789  000027                     ?_initSerialIO:	; 1 bytes @ 0x0
  5790  000027                     ?_delay:	; 1 bytes @ 0x0
  5791  000027                     ?_dispLCD_dataReg:	; 1 bytes @ 0x0
  5792  000027                     ??_dispLCD_dataReg:	; 1 bytes @ 0x0
  5793  000027                     ?_init_atuadores:	; 1 bytes @ 0x0
  5794  000027                     ??_init_atuadores:	; 1 bytes @ 0x0
  5795  000027                     ?_teclado_borda:	; 1 bytes @ 0x0
  5796  000027                     ?_manipula_atuadores_init:	; 1 bytes @ 0x0
  5797  000027                     ?_decodifica:	; 1 bytes @ 0x0
  5798  000027                     ?_fifo_add_control:	; 1 bytes @ 0x0
  5799  000027                     ?_fifo_add_tempo:	; 1 bytes @ 0x0
  5800  000027                     ?_alt_atuador:	; 1 bytes @ 0x0
  5801  000027                     ??_alt_atuador:	; 1 bytes @ 0x0
  5802  000027                     ?_fifo_add:	; 1 bytes @ 0x0
  5803  000027                     ?_ler_atuador:	; 1 bytes @ 0x0
  5804  000027                     ??_ler_atuador:	; 1 bytes @ 0x0
  5805  000027                     ?_fifo_print:	; 1 bytes @ 0x0
  5806  000027                     ?_salva_atuadores_init:	; 1 bytes @ 0x0
  5807  000027                     ?_fifo_disponivel:	; 1 bytes @ 0x0
  5808  000027                     ??_fifo_disponivel:	; 1 bytes @ 0x0
  5809  000027                     ?_fifo_indicePrint_inc:	; 1 bytes @ 0x0
  5810  000027                     ??_fifo_indicePrint_inc:	; 1 bytes @ 0x0
  5811  000027                     ?_fifo_indicePrint_dec:	; 1 bytes @ 0x0
  5812  000027                     ??_fifo_indicePrint_dec:	; 1 bytes @ 0x0
  5813  000027                     ?_fifo_indice:	; 1 bytes @ 0x0
  5814  000027                     ??_fifo_indice:	; 1 bytes @ 0x0
  5815  000027                     ?_fifo_delete:	; 1 bytes @ 0x0
  5816  000027                     ?_fifo_tam:	; 1 bytes @ 0x0
  5817  000027                     ??_fifo_tam:	; 1 bytes @ 0x0
  5818  000027                     ?_getIndicePassos:	; 1 bytes @ 0x0
  5819  000027                     ??_getIndicePassos:	; 1 bytes @ 0x0
  5820  000027                     ?_fifo_add_ciclo:	; 1 bytes @ 0x0
  5821  000027                     ?_serialIOscan:	; 1 bytes @ 0x0
  5822  000027                     ?_resetIndicePassos:	; 1 bytes @ 0x0
  5823  000027                     ??_resetIndicePassos:	; 1 bytes @ 0x0
  5824  000027                     ?_resetContCiclos:	; 1 bytes @ 0x0
  5825  000027                     ??_resetContCiclos:	; 1 bytes @ 0x0
  5826  000027                     ?_fifo_lerPos:	; 1 bytes @ 0x0
  5827  000027                     ??_fifo_lerPos:	; 1 bytes @ 0x0
  5828  000027                     ?_set_passo:	; 1 bytes @ 0x0
  5829  000027                     ?_ler_sensor:	; 1 bytes @ 0x0
  5830  000027                     ?_addIndicePassos:	; 1 bytes @ 0x0
  5831  000027                     ??_addIndicePassos:	; 1 bytes @ 0x0
  5832  000027                     ?_addContCiclos:	; 1 bytes @ 0x0
  5833  000027                     ??_addContCiclos:	; 1 bytes @ 0x0
  5834  000027                     ?_codifica:	; 1 bytes @ 0x0
  5835  000027                     ?_fifo_alinharPrint:	; 1 bytes @ 0x0
  5836  000027                     ?_I2C_start:	; 1 bytes @ 0x0
  5837  000027                     ??_I2C_start:	; 1 bytes @ 0x0
  5838  000027                     ?_I2C_tx:	; 1 bytes @ 0x0
  5839  000027                     ??_I2C_tx:	; 1 bytes @ 0x0
  5840  000027                     ?_I2C_ack_receive:	; 1 bytes @ 0x0
  5841  000027                     ??_I2C_ack_receive:	; 1 bytes @ 0x0
  5842  000027                     ?_I2C_stop:	; 1 bytes @ 0x0
  5843  000027                     ??_I2C_stop:	; 1 bytes @ 0x0
  5844  000027                     ?_irq:	; 1 bytes @ 0x0
  5845  000027                     ??_irq:	; 1 bytes @ 0x0
  5846  000027                     ?_main:	; 1 bytes @ 0x0
  5847  000027                     ?_dispLCD_instReg:	; 1 bytes @ 0x0
  5848  000027                     ??_dispLCD_instReg:	; 1 bytes @ 0x0
  5849  000027                     ?_EEPROM_read:	; 1 bytes @ 0x0
  5850  000027                     ??_EEPROM_read:	; 1 bytes @ 0x0
  5851  000027                     ?_EEPROM_write:	; 1 bytes @ 0x0
  5852  000027                     ?_posAtual:	; 1 bytes @ 0x0
  5853  000027                     ?_dac_init:	; 1 bytes @ 0x0
  5854  000027                     ?_serialIOload:	; 1 bytes @ 0x0
  5855  000027                     ??_serialIOload:	; 1 bytes @ 0x0
  5856  000027                     ?_serialIObyteShift:	; 1 bytes @ 0x0
  5857  000027                     ??_serialIObyteShift:	; 1 bytes @ 0x0
  5858  000027                     ?_teclado_scan:	; 1 bytes @ 0x0
  5859  000027                     ??_teclado_scan:	; 1 bytes @ 0x0
  5860  000027                     	global	?_getContCiclos
  5861                           ?_getContCiclos:	; 2 bytes @ 0x0
  5862  000027                     	global	?_fifo_adrs
  5863                           ?_fifo_adrs:	; 2 bytes @ 0x0
  5864  000027                     	global	?_getCiclos
  5865                           ?_getCiclos:	; 2 bytes @ 0x0
  5866  000027                     	global	?_end_receita
  5867                           ?_end_receita:	; 2 bytes @ 0x0
  5868  000027                     	global	?___wmul
  5869                           ?___wmul:	; 2 bytes @ 0x0
  5870  000027                     	global	?___awdiv
  5871                           ?___awdiv:	; 2 bytes @ 0x0
  5872  000027                     	global	?___awmod
  5873                           ?___awmod:	; 2 bytes @ 0x0
  5874  000027                     	global	?___lwdiv
  5875                           ?___lwdiv:	; 2 bytes @ 0x0
  5876  000027                     	global	?_statusT1
  5877                           ?_statusT1:	; 4 bytes @ 0x0
  5878  000027                     	global	?___lmul
  5879                           ?___lmul:	; 4 bytes @ 0x0
  5880  000027                     	global	?___lldiv
  5881                           ?___lldiv:	; 4 bytes @ 0x0
  5882  000027                     	global	EEPROM_read@addr
  5883                           EEPROM_read@addr:	; 1 bytes @ 0x0
  5884  000027                     	global	EEPROM_write@data
  5885                           EEPROM_write@data:	; 1 bytes @ 0x0
  5886  000027                     	global	fifo_lerPos@i
  5887                           fifo_lerPos@i:	; 1 bytes @ 0x0
  5888  000027                     	global	serialIObyteShift@dataIn
  5889                           serialIObyteShift@dataIn:	; 1 bytes @ 0x0
  5890  000027                     	global	I2C_tx@b
  5891                           I2C_tx@b:	; 1 bytes @ 0x0
  5892  000027                     	global	set_passo@ptr
  5893                           set_passo@ptr:	; 2 bytes @ 0x0
  5894  000027                     	global	ler_sensor@ptr
  5895                           ler_sensor@ptr:	; 2 bytes @ 0x0
  5896  000027                     	global	delay@t
  5897                           delay@t:	; 2 bytes @ 0x0
  5898  000027                     	global	end_receita@x
  5899                           end_receita@x:	; 2 bytes @ 0x0
  5900  000027                     	global	codifica@dado
  5901                           codifica@dado:	; 2 bytes @ 0x0
  5902  000027                     	global	decodifica@d
  5903                           decodifica@d:	; 2 bytes @ 0x0
  5904  000027                     	global	fifo_add_ciclo@ciclos
  5905                           fifo_add_ciclo@ciclos:	; 2 bytes @ 0x0
  5906  000027                     	global	initSerialIO@ptrIn
  5907                           initSerialIO@ptrIn:	; 2 bytes @ 0x0
  5908  000027                     	global	___wmul@multiplier
  5909                           ___wmul@multiplier:	; 2 bytes @ 0x0
  5910  000027                     	global	___awdiv@dividend
  5911                           ___awdiv@dividend:	; 2 bytes @ 0x0
  5912  000027                     	global	___awmod@dividend
  5913                           ___awmod@dividend:	; 2 bytes @ 0x0
  5914  000027                     	global	___lwdiv@dividend
  5915                           ___lwdiv@dividend:	; 2 bytes @ 0x0
  5916  000027                     	global	___lmul@multiplier
  5917                           ___lmul@multiplier:	; 4 bytes @ 0x0
  5918  000027                     	global	___lldiv@dividend
  5919                           ___lldiv@dividend:	; 4 bytes @ 0x0
  5920  000027                     	ds   1
  5921  000027                     ??_EEPROM_write:	; 1 bytes @ 0x1
  5922  000028                     ??_posAtual:	; 1 bytes @ 0x1
  5923  000028                     	global	dispLCD_instReg@i
  5924                           dispLCD_instReg@i:	; 1 bytes @ 0x1
  5925  000028                     	global	dispLCD_dataReg@d
  5926                           dispLCD_dataReg@d:	; 1 bytes @ 0x1
  5927  000028                     	global	EEPROM_write@addr
  5928                           EEPROM_write@addr:	; 1 bytes @ 0x1
  5929  000028                     	global	posAtual@ind
  5930                           posAtual@ind:	; 1 bytes @ 0x1
  5931  000028                     	global	serialIObyteShift@dataOut
  5932                           serialIObyteShift@dataOut:	; 1 bytes @ 0x1
  5933  000028                     	ds   1
  5934  000028                     ??_dispLCD_clr:	; 1 bytes @ 0x2
  5935  000029                     ??_formatar_receitas:	; 1 bytes @ 0x2
  5936  000029                     ??_delay:	; 1 bytes @ 0x2
  5937  000029                     ?_dispLCD_lincol:	; 1 bytes @ 0x2
  5938  000029                     ??_decodifica:	; 1 bytes @ 0x2
  5939  000029                     ??_getContCiclos:	; 1 bytes @ 0x2
  5940  000029                     ??_fifo_adrs:	; 1 bytes @ 0x2
  5941  000029                     ??_fifo_add_ciclo:	; 1 bytes @ 0x2
  5942  000029                     ??_set_passo:	; 1 bytes @ 0x2
  5943  000029                     ??_ler_sensor:	; 1 bytes @ 0x2
  5944  000029                     ??_getCiclos:	; 1 bytes @ 0x2
  5945  000029                     ??_codifica:	; 1 bytes @ 0x2
  5946  000029                     ??_end_receita:	; 1 bytes @ 0x2
  5947  000029                     	global	dispLCD_lincol@col
  5948                           dispLCD_lincol@col:	; 1 bytes @ 0x2
  5949  000029                     	global	formatar_receitas@i
  5950                           formatar_receitas@i:	; 1 bytes @ 0x2
  5951  000029                     	global	ler_atuador@tecla
  5952                           ler_atuador@tecla:	; 1 bytes @ 0x2
  5953  000029                     	global	alt_atuador@tecla
  5954                           alt_atuador@tecla:	; 1 bytes @ 0x2
  5955  000029                     	global	posAtual@passo
  5956                           posAtual@passo:	; 1 bytes @ 0x2
  5957  000029                     	global	serialIObyteShift@dataBit
  5958                           serialIObyteShift@dataBit:	; 1 bytes @ 0x2
  5959  000029                     	global	teclado_scan@tecla
  5960                           teclado_scan@tecla:	; 1 bytes @ 0x2
  5961  000029                     	global	getCiclos@aux
  5962                           getCiclos@aux:	; 2 bytes @ 0x2
  5963  000029                     	global	initSerialIO@ptrOut
  5964                           initSerialIO@ptrOut:	; 2 bytes @ 0x2
  5965  000029                     	global	___wmul@multiplicand
  5966                           ___wmul@multiplicand:	; 2 bytes @ 0x2
  5967  000029                     	global	___awdiv@divisor
  5968                           ___awdiv@divisor:	; 2 bytes @ 0x2
  5969  000029                     	global	___awmod@divisor
  5970                           ___awmod@divisor:	; 2 bytes @ 0x2
  5971  000029                     	global	___lwdiv@divisor
  5972                           ___lwdiv@divisor:	; 2 bytes @ 0x2
  5973  000029                     	ds   1
  5974  000029                     ??_dispLCD_init:	; 1 bytes @ 0x3
  5975  00002A                     ??_dispLCD_lincol:	; 1 bytes @ 0x3
  5976  00002A                     ??_manipula_atuadores_init:	; 1 bytes @ 0x3
  5977  00002A                     ??_salva_atuadores_init:	; 1 bytes @ 0x3
  5978  00002A                     ??_serialIOscan:	; 1 bytes @ 0x3
  5979  00002A                     ??_dac_init:	; 1 bytes @ 0x3
  5980  00002A                     ?_dac_write:	; 1 bytes @ 0x3
  5981  00002A                     	global	manipula_atuadores_init@atuador
  5982                           manipula_atuadores_init@atuador:	; 1 bytes @ 0x3
  5983  00002A                     	global	teclado_scan@l
  5984                           teclado_scan@l:	; 1 bytes @ 0x3
  5985  00002A                     	global	dac_write@code
  5986                           dac_write@code:	; 2 bytes @ 0x3
  5987  00002A                     	global	salva_atuadores_init@condi_init
  5988                           salva_atuadores_init@condi_init:	; 4 bytes @ 0x3
  5989  00002A                     	ds   1
  5990  00002A                     ??_deletar_receita:	; 1 bytes @ 0x4
  5991  00002B                     ??_statusT1:	; 1 bytes @ 0x4
  5992  00002B                     ??___wmul:	; 1 bytes @ 0x4
  5993  00002B                     ??___awdiv:	; 1 bytes @ 0x4
  5994  00002B                     ??___awmod:	; 1 bytes @ 0x4
  5995  00002B                     ??___lwdiv:	; 1 bytes @ 0x4
  5996  00002B                     	global	set_passo@passo
  5997                           set_passo@passo:	; 1 bytes @ 0x4
  5998  00002B                     	global	ler_sensor@passo
  5999                           ler_sensor@passo:	; 1 bytes @ 0x4
  6000  00002B                     	global	manipula_atuadores_init@aux
  6001                           manipula_atuadores_init@aux:	; 1 bytes @ 0x4
  6002  00002B                     	global	codifica@tipo
  6003                           codifica@tipo:	; 1 bytes @ 0x4
  6004  00002B                     	global	initSerialIO@length
  6005                           initSerialIO@length:	; 1 bytes @ 0x4
  6006  00002B                     	global	teclado_scan@c
  6007                           teclado_scan@c:	; 1 bytes @ 0x4
  6008  00002B                     	global	___awdiv@counter
  6009                           ___awdiv@counter:	; 1 bytes @ 0x4
  6010  00002B                     	global	___awmod@counter
  6011                           ___awmod@counter:	; 1 bytes @ 0x4
  6012  00002B                     	global	deletar_receita@aux
  6013                           deletar_receita@aux:	; 2 bytes @ 0x4
  6014  00002B                     	global	___wmul@product
  6015                           ___wmul@product:	; 2 bytes @ 0x4
  6016  00002B                     	global	___lwdiv@quotient
  6017                           ___lwdiv@quotient:	; 2 bytes @ 0x4
  6018  00002B                     	global	___lmul@multiplicand
  6019                           ___lmul@multiplicand:	; 4 bytes @ 0x4
  6020  00002B                     	global	___lldiv@divisor
  6021                           ___lldiv@divisor:	; 4 bytes @ 0x4
  6022  00002B                     	ds   1
  6023  00002B                     ??_initSerialIO:	; 1 bytes @ 0x5
  6024  00002C                     ??_teclado_borda:	; 1 bytes @ 0x5
  6025  00002C                     ??_dac_write:	; 1 bytes @ 0x5
  6026  00002C                     	global	dispLCD_lincol@lin
  6027                           dispLCD_lincol@lin:	; 1 bytes @ 0x5
  6028  00002C                     	global	manipula_atuadores_init@mask
  6029                           manipula_atuadores_init@mask:	; 1 bytes @ 0x5
  6030  00002C                     	global	teclado_borda@aux
  6031                           teclado_borda@aux:	; 1 bytes @ 0x5
  6032  00002C                     	global	___awdiv@sign
  6033                           ___awdiv@sign:	; 1 bytes @ 0x5
  6034  00002C                     	global	___awmod@sign
  6035                           ___awmod@sign:	; 1 bytes @ 0x5
  6036  00002C                     	ds   1
  6037  00002C                     ?_salvar_receita:	; 1 bytes @ 0x6
  6038  00002D                     ?_buscar_receita:	; 1 bytes @ 0x6
  6039  00002D                     ?_setT1:	; 1 bytes @ 0x6
  6040  00002D                     ?_buscar_dado:	; 1 bytes @ 0x6
  6041  00002D                     ?_dignum_conc:	; 1 bytes @ 0x6
  6042  00002D                     ?_salvar_dado:	; 1 bytes @ 0x6
  6043  00002D                     	global	dispLCD_lincol@aux
  6044                           dispLCD_lincol@aux:	; 1 bytes @ 0x6
  6045  00002D                     	global	salvar_dado@col
  6046                           salvar_dado@col:	; 1 bytes @ 0x6
  6047  00002D                     	global	buscar_dado@col
  6048                           buscar_dado@col:	; 1 bytes @ 0x6
  6049  00002D                     	global	deletar_receita@receita
  6050                           deletar_receita@receita:	; 1 bytes @ 0x6
  6051  00002D                     	global	teclado_borda@tecla
  6052                           teclado_borda@tecla:	; 1 bytes @ 0x6
  6053  00002D                     	global	___lwdiv@counter
  6054                           ___lwdiv@counter:	; 1 bytes @ 0x6
  6055  00002D                     	global	salvar_receita@data
  6056                           salvar_receita@data:	; 2 bytes @ 0x6
  6057  00002D                     	global	buscar_receita@data
  6058                           buscar_receita@data:	; 2 bytes @ 0x6
  6059  00002D                     	global	dignum_conc@ptrNum
  6060                           dignum_conc@ptrNum:	; 2 bytes @ 0x6
  6061  00002D                     	global	___awdiv@quotient
  6062                           ___awdiv@quotient:	; 2 bytes @ 0x6
  6063  00002D                     	global	setT1@c
  6064                           setT1@c:	; 4 bytes @ 0x6
  6065  00002D                     	ds   1
  6066  00002D                     ?_dispLCD_str:	; 1 bytes @ 0x7
  6067  00002E                     ?_dispLCD:	; 1 bytes @ 0x7
  6068  00002E                     ?_dignum_apagar:	; 1 bytes @ 0x7
  6069  00002E                     	global	dispLCD@col
  6070                           dispLCD@col:	; 1 bytes @ 0x7
  6071  00002E                     	global	salvar_dado@data
  6072                           salvar_dado@data:	; 1 bytes @ 0x7
  6073  00002E                     	global	deletar_receita@i
  6074                           deletar_receita@i:	; 1 bytes @ 0x7
  6075  00002E                     	global	serialIOscan@j
  6076                           serialIOscan@j:	; 1 bytes @ 0x7
  6077  00002E                     	global	dispLCD_str@str
  6078                           dispLCD_str@str:	; 2 bytes @ 0x7
  6079  00002E                     	global	buscar_dado@data
  6080                           buscar_dado@data:	; 2 bytes @ 0x7
  6081  00002E                     	global	salva_atuadores_init@pt
  6082                           salva_atuadores_init@pt:	; 2 bytes @ 0x7
  6083  00002E                     	global	dignum_apagar@ptrNum
  6084                           dignum_apagar@ptrNum:	; 2 bytes @ 0x7
  6085  00002E                     	ds   1
  6086  00002E                     ??_salvar_receita:	; 1 bytes @ 0x8
  6087  00002F                     ??_buscar_receita:	; 1 bytes @ 0x8
  6088  00002F                     ??_fifo_print:	; 1 bytes @ 0x8
  6089  00002F                     ??_dignum_conc:	; 1 bytes @ 0x8
  6090  00002F                     ??_salvar_dado:	; 1 bytes @ 0x8
  6091  00002F                     ?_dignum_tam:	; 1 bytes @ 0x8
  6092  00002F                     ??___lmul:	; 1 bytes @ 0x8
  6093  00002F                     ??___lldiv:	; 1 bytes @ 0x8
  6094  00002F                     	global	serialIOscan@i
  6095                           serialIOscan@i:	; 1 bytes @ 0x8
  6096  00002F                     	global	dispLCD@str
  6097                           dispLCD@str:	; 2 bytes @ 0x8
  6098  00002F                     	global	salvar_receita@aux
  6099                           salvar_receita@aux:	; 2 bytes @ 0x8
  6100  00002F                     	global	buscar_receita@aux
  6101                           buscar_receita@aux:	; 2 bytes @ 0x8
  6102  00002F                     	global	salvar_dado@aux
  6103                           salvar_dado@aux:	; 2 bytes @ 0x8
  6104  00002F                     	global	dignum_tam@num
  6105                           dignum_tam@num:	; 2 bytes @ 0x8
  6106  00002F                     	global	___lmul@product
  6107                           ___lmul@product:	; 4 bytes @ 0x8
  6108  00002F                     	global	___lldiv@quotient
  6109                           ___lldiv@quotient:	; 4 bytes @ 0x8
  6110  00002F                     	ds   1
  6111  00002F                     ??_dispLCD_str:	; 1 bytes @ 0x9
  6112  000030                     ??_buscar_dado:	; 1 bytes @ 0x9
  6113  000030                     ??_dignum_apagar:	; 1 bytes @ 0x9
  6114  000030                     	global	dispLCD_str@lin
  6115                           dispLCD_str@lin:	; 1 bytes @ 0x9
  6116  000030                     	global	salva_atuadores_init@dado
  6117                           salva_atuadores_init@dado:	; 1 bytes @ 0x9
  6118  000030                     	global	buscar_dado@aux
  6119                           buscar_dado@aux:	; 2 bytes @ 0x9
  6120  000030                     	ds   1
  6121  000030                     ??_dispLCD:	; 1 bytes @ 0xA
  6122  000031                     ??_setT1:	; 1 bytes @ 0xA
  6123  000031                     ??_dignum_tam:	; 1 bytes @ 0xA
  6124  000031                     	global	dispLCD@pos
  6125                           dispLCD@pos:	; 1 bytes @ 0xA
  6126  000031                     	global	dispLCD_str@c
  6127                           dispLCD_str@c:	; 1 bytes @ 0xA
  6128  000031                     	global	salvar_receita@adrs
  6129                           salvar_receita@adrs:	; 1 bytes @ 0xA
  6130  000031                     	global	buscar_receita@adrs
  6131                           buscar_receita@adrs:	; 1 bytes @ 0xA
  6132  000031                     	global	salvar_dado@adrs
  6133                           salvar_dado@adrs:	; 1 bytes @ 0xA
  6134  000031                     	global	salva_atuadores_init@mask
  6135                           salva_atuadores_init@mask:	; 1 bytes @ 0xA
  6136  000031                     	global	dignum_tam@tam
  6137                           dignum_tam@tam:	; 1 bytes @ 0xA
  6138  000031                     	global	_fifo_print$1046
  6139                           _fifo_print$1046:	; 2 bytes @ 0xA
  6140  000031                     	ds   1
  6141  000031                     ?_dispLCD_num:	; 1 bytes @ 0xB
  6142  000032                     ??_fifo_alinharPrint:	; 1 bytes @ 0xB
  6143  000032                     	global	dispLCD@lin
  6144                           dispLCD@lin:	; 1 bytes @ 0xB
  6145  000032                     	global	dispLCD_num@col
  6146                           dispLCD_num@col:	; 1 bytes @ 0xB
  6147  000032                     	global	salvar_receita@i
  6148                           salvar_receita@i:	; 1 bytes @ 0xB
  6149  000032                     	global	buscar_receita@i
  6150                           buscar_receita@i:	; 1 bytes @ 0xB
  6151  000032                     	global	buscar_dado@adrs
  6152                           buscar_dado@adrs:	; 1 bytes @ 0xB
  6153  000032                     	ds   1
  6154  000032                     	global	?___aldiv
  6155                           ?___aldiv:	; 4 bytes @ 0xC
  6156  000033                     	global	fifo_print@completar
  6157                           fifo_print@completar:	; 1 bytes @ 0xC
  6158  000033                     	global	dignum_conc@dig
  6159                           dignum_conc@dig:	; 1 bytes @ 0xC
  6160  000033                     	global	fifo_alinharPrint@cont
  6161                           fifo_alinharPrint@cont:	; 1 bytes @ 0xC
  6162  000033                     	global	___lldiv@counter
  6163                           ___lldiv@counter:	; 1 bytes @ 0xC
  6164  000033                     	global	dispLCD_num@num
  6165                           dispLCD_num@num:	; 2 bytes @ 0xC
  6166  000033                     	global	___aldiv@dividend
  6167                           ___aldiv@dividend:	; 4 bytes @ 0xC
  6168  000033                     	ds   1
  6169  000033                     ?_I2C_init:	; 1 bytes @ 0xD
  6170  000034                     ?_initEUSART:	; 1 bytes @ 0xD
  6171  000034                     	global	fifo_print@indPrint
  6172                           fifo_print@indPrint:	; 1 bytes @ 0xD
  6173  000034                     	global	fifo_alinharPrint@i
  6174                           fifo_alinharPrint@i:	; 1 bytes @ 0xD
  6175  000034                     	global	I2C_init@freq
  6176                           I2C_init@freq:	; 4 bytes @ 0xD
  6177  000034                     	global	initEUSART@baudRate
  6178                           initEUSART@baudRate:	; 4 bytes @ 0xD
  6179  000034                     	ds   1
  6180  000034                     	global	dispLCD_num@tam
  6181                           dispLCD_num@tam:	; 1 bytes @ 0xE
  6182  000035                     	global	fifo_print@i
  6183                           fifo_print@i:	; 1 bytes @ 0xE
  6184  000035                     	global	fifo_alinharPrint@aux
  6185                           fifo_alinharPrint@aux:	; 1 bytes @ 0xE
  6186  000035                     	ds   1
  6187  000035                     ??_dispLCD_num:	; 1 bytes @ 0xF
  6188  000036                     ??_fifo_add_control:	; 1 bytes @ 0xF
  6189  000036                     ??_fifo_add_tempo:	; 1 bytes @ 0xF
  6190  000036                     ??_fifo_add:	; 1 bytes @ 0xF
  6191  000036                     ??_fifo_delete:	; 1 bytes @ 0xF
  6192  000036                     	global	fifo_add@passo
  6193                           fifo_add@passo:	; 1 bytes @ 0xF
  6194  000036                     	global	fifo_add_tempo@t
  6195                           fifo_add_tempo@t:	; 1 bytes @ 0xF
  6196  000036                     	global	fifo_add_control@c
  6197                           fifo_add_control@c:	; 1 bytes @ 0xF
  6198  000036                     	global	fifo_print@atraso
  6199                           fifo_print@atraso:	; 1 bytes @ 0xF
  6200  000036                     	ds   1
  6201  000036                     	global	fifo_print@comando
  6202                           fifo_print@comando:	; 1 bytes @ 0x10
  6203  000037                     	global	___aldiv@divisor
  6204                           ___aldiv@divisor:	; 4 bytes @ 0x10
  6205  000037                     	ds   1
  6206  000037                     ??_I2C_init:	; 1 bytes @ 0x11
  6207  000038                     ??_initEUSART:	; 1 bytes @ 0x11
  6208  000038                     	ds   3
  6209  000038                     ??___aldiv:	; 1 bytes @ 0x14
  6210  00003B                     	global	dispLCD_num@lin
  6211                           dispLCD_num@lin:	; 1 bytes @ 0x14
  6212  00003B                     	global	___aldiv@counter
  6213                           ___aldiv@counter:	; 1 bytes @ 0x14
  6214  00003B                     	ds   1
  6215  00003B                     ?_wifi_init:	; 1 bytes @ 0x15
  6216  00003C                     	global	dispLCD_num@size
  6217                           dispLCD_num@size:	; 1 bytes @ 0x15
  6218  00003C                     	global	___aldiv@sign
  6219                           ___aldiv@sign:	; 1 bytes @ 0x15
  6220  00003C                     	global	wifi_init@br
  6221                           wifi_init@br:	; 4 bytes @ 0x15
  6222  00003C                     	ds   1
  6223  00003C                     	global	dispLCD_num@sinal
  6224                           dispLCD_num@sinal:	; 1 bytes @ 0x16
  6225  00003D                     	global	___aldiv@quotient
  6226                           ___aldiv@quotient:	; 4 bytes @ 0x16
  6227  00003D                     	ds   1
  6228  00003D                     	global	dispLCD_num@div
  6229                           dispLCD_num@div:	; 2 bytes @ 0x17
  6230  00003E                     	ds   2
  6231  00003E                     ??_wifi_init:	; 1 bytes @ 0x19
  6232  000040                     ?_printExec:	; 1 bytes @ 0x19
  6233  000040                     	global	printExec@ind
  6234                           printExec@ind:	; 1 bytes @ 0x19
  6235  000040                     	ds   1
  6236  000040                     ?_MCP4725:	; 1 bytes @ 0x1A
  6237  000041                     ??_printExec:	; 1 bytes @ 0x1A
  6238  000041                     	global	_printExec$1068
  6239                           _printExec$1068:	; 2 bytes @ 0x1A
  6240  000041                     	global	MCP4725@Vout
  6241                           MCP4725@Vout:	; 2 bytes @ 0x1A
  6242  000041                     	ds   2
  6243  000041                     ??_MCP4725:	; 1 bytes @ 0x1C
  6244  000043                     	global	printExec@col
  6245                           printExec@col:	; 1 bytes @ 0x1C
  6246  000043                     	ds   1
  6247  000043                     	global	printExec@passo
  6248                           printExec@passo:	; 1 bytes @ 0x1D
  6249  000044                     	ds   1
  6250  000044                     ??_main:	; 1 bytes @ 0x1E
  6251  000045                     	ds   2
  6252  000045                     ;!
  6253                           ;!Data Sizes:
  6254                           ;!    Strings     958
  6255                           ;!    Constant    0
  6256                           ;!    Data        135
  6257                           ;!    BSS         40
  6258                           ;!    Persistent  0
  6259                           ;!    Stack       0
  6260                           ;!
  6261                           ;!Auto Spaces:
  6262                           ;!    Space          Size  Autos    Used
  6263                           ;!    COMRAM           94     32      93
  6264                           ;!    BANK0h          101     93      95
  6265                           ;!    BANK0l           57      0      52
  6266                           ;!    BANK1           256      0      60
  6267                           ;!    BANK2           256      0       0
  6268                           ;!    BANK3           256      0       0
  6269                           ;!    BANK4           256      0       0
  6270                           ;!    BANK5           256      0       0
  6271                           ;!    BANK6           256      0       0
  6272                           ;!    BANK7           256      0       0
  6273                           
  6274                           ;!
  6275                           ;!Pointer List with Targets:
  6276                           ;!
  6277                           ;!    S85$3$0	PTR unsigned char  size(2) Largest target is 0
  6278                           ;!
  6279                           ;!    S145$1$0	PTR const unsigned char  size(2) Largest target is 40
  6280                           ;!		 -> STR_46(CODE[14]), STR_45(CODE[9]), STR_44(CODE[15]), STR_43(CODE[40]), 
  6281                           ;!		 -> STR_42(CODE[21]), STR_41(CODE[14]), STR_40(CODE[15]), STR_39(CODE[18]), 
  6282                           ;!		 -> STR_38(CODE[11]), STR_37(CODE[11]), Wifi_connect@str(COMRAM[40]), STR_36(CODE[14
                                 ]), 
  6283                           ;!		 -> STR_35(CODE[14]), STR_34(CODE[14]), STR_33(CODE[14]), 
  6284                           ;!
  6285                           ;!    S145$2$0	PTR unsigned char  size(2) Largest target is 0
  6286                           ;!
  6287                           ;!    S145$4$1	PTR const unsigned char  size(2) Largest target is 0
  6288                           ;!
  6289                           ;!    S145$4$0	PTR const unsigned char  size(2) Largest target is 0
  6290                           ;!
  6291                           ;!    S1648$7$1	PTR const unsigned char  size(2) Largest target is 0
  6292                           ;!
  6293                           ;!    S1648$7$0	PTR const unsigned char  size(2) Largest target is 0
  6294                           ;!
  6295                           ;!    S85$0$1	PTR unsigned char  size(2) Largest target is 18
  6296                           ;!		 -> fila(COMRAM[18]), 
  6297                           ;!
  6298                           ;!    S85$1$1	PTR unsigned char  size(2) Largest target is 16
  6299                           ;!		 -> main@vetor_aux(BANK0h[16]), 
  6300                           ;!
  6301                           ;!    S29$1$0	PTR const unsigned char  size(2) Largest target is 83
  6302                           ;!		 -> STR_27(CODE[78]), STR_26(CODE[62]), STR_15(CODE[81]), STR_4(CODE[83]), 
  6303                           ;!
  6304                           ;!    S29$2$2	PTR const unsigned char  size(2) Largest target is 21
  6305                           ;!		 -> STR_32(CODE[21]), STR_31(CODE[21]), STR_30(CODE[21]), STR_29(CODE[2]), 
  6306                           ;!		 -> STR_28(CODE[2]), STR_25(CODE[21]), STR_24(CODE[21]), STR_23(CODE[21]), 
  6307                           ;!		 -> STR_22(CODE[21]), STR_21(CODE[21]), STR_20(CODE[8]), STR_19(CODE[21]), 
  6308                           ;!		 -> STR_18(CODE[21]), STR_17(CODE[21]), STR_16(CODE[21]), STR_14(CODE[21]), 
  6309                           ;!		 -> STR_13(CODE[21]), STR_12(CODE[2]), STR_11(CODE[2]), STR_10(CODE[21]), 
  6310                           ;!		 -> STR_9(CODE[21]), STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), 
  6311                           ;!		 -> STR_5(CODE[21]), STR_3(CODE[21]), STR_2(CODE[2]), STR_1(CODE[2]), 
  6312                           ;!
  6313                           ;!    S1648eusartT$search_string	PTR FTN(PTR const unsigned char ,PTR const unsigned cha
                                 r ,)int  size(2) Largest target is 2
  6314                           ;!		 -> search(), 
  6315                           ;!
  6316                           ;!    eusart.search_string	PTR FTN(PTR const unsigned char ,PTR const unsigned char ,)in
                                 t  size(2) Largest target is 2
  6317                           ;!		 -> search(), 
  6318                           ;!
  6319                           ;!    S1648eusartT$init	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
  6320                           ;!		 -> initEUSART(), 
  6321                           ;!
  6322                           ;!    eusart.init	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
  6323                           ;!		 -> initEUSART(), 
  6324                           ;!
  6325                           ;!    S1648eusartT$txSTATUS	PTR FTN()unsigned char  size(2) Largest target is 1
  6326                           ;!		 -> txStatusEUSART(), 
  6327                           ;!
  6328                           ;!    eusart.txSTATUS	PTR FTN()unsigned char  size(2) Largest target is 1
  6329                           ;!		 -> txStatusEUSART(), 
  6330                           ;!
  6331                           ;!    S1648eusartT$tx	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
  6332                           ;!		 -> txEUSART(), 
  6333                           ;!
  6334                           ;!    eusart.tx	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
  6335                           ;!		 -> txEUSART(), 
  6336                           ;!
  6337                           ;!    S1648eusartT$rxResetERROR	PTR FTN()void  size(2) Largest target is 1
  6338                           ;!		 -> rxResetErrorEUSART(), 
  6339                           ;!
  6340                           ;!    eusart.rxResetERROR	PTR FTN()void  size(2) Largest target is 1
  6341                           ;!		 -> rxResetErrorEUSART(), 
  6342                           ;!
  6343                           ;!    S1648eusartT$rxERROR	PTR FTN()unsigned char  size(2) Largest target is 1
  6344                           ;!		 -> rxErrorEUSART(), 
  6345                           ;!
  6346                           ;!    eusart.rxERROR	PTR FTN()unsigned char  size(2) Largest target is 1
  6347                           ;!		 -> rxErrorEUSART(), 
  6348                           ;!
  6349                           ;!    S1648eusartT$rxSTATUS	PTR FTN()unsigned char  size(2) Largest target is 1
  6350                           ;!		 -> rxStatusEUSART(), 
  6351                           ;!
  6352                           ;!    eusart.rxSTATUS	PTR FTN()unsigned char  size(2) Largest target is 1
  6353                           ;!		 -> rxStatusEUSART(), 
  6354                           ;!
  6355                           ;!    S1648eusartT$rx	PTR FTN()unsigned char  size(2) Largest target is 1
  6356                           ;!		 -> rxEUSART(), 
  6357                           ;!
  6358                           ;!    eusart.rx	PTR FTN()unsigned char  size(2) Largest target is 1
  6359                           ;!		 -> rxEUSART(), 
  6360                           ;!
  6361                           ;!    initSerialIO@ptrOut	PTR unsigned char  size(2) Largest target is 1
  6362                           ;!		 -> main@vetorOut(BANK0h[1]), 
  6363                           ;!
  6364                           ;!    initSerialIO@ptrIn	PTR unsigned char  size(2) Largest target is 1
  6365                           ;!		 -> main@vetorIn(BANK0h[1]), 
  6366                           ;!
  6367                           ;!    ptrSerialOut	PTR unsigned char  size(2) Largest target is 1
  6368                           ;!		 -> NULL(NULL[0]), main@vetorOut(BANK0h[1]), 
  6369                           ;!
  6370                           ;!    ptrSerialIn	PTR unsigned char  size(2) Largest target is 1
  6371                           ;!		 -> NULL(NULL[0]), main@vetorIn(BANK0h[1]), 
  6372                           ;!
  6373                           ;!    dignum_apagar@ptrNum	PTR unsigned int  size(2) Largest target is 2
  6374                           ;!		 -> main@ciclos(BANK0h[2]), main@num(BANK0h[2]), 
  6375                           ;!
  6376                           ;!    dignum_conc@ptrNum	PTR unsigned int  size(2) Largest target is 2
  6377                           ;!		 -> main@ciclos(BANK0h[2]), main@num(BANK0h[2]), 
  6378                           ;!
  6379                           ;!    decodifica@d	PTR unsigned char  size(2) Largest target is 18
  6380                           ;!		 -> printExec@passo(COMRAM[1]), fifo_print@comando(COMRAM[1]), fila(COMRAM[18]), mai
                                 n@vetor_aux(BANK0h[16]), 
  6381                           ;!		 -> main@auxPasso(BANK0h[1]), 
  6382                           ;!
  6383                           ;!    codifica@dado	PTR unsigned char  size(2) Largest target is 2047
  6384                           ;!		 -> fifo_add_control@c(COMRAM[1]), fifo_add_tempo@t(COMRAM[1]), fifo_add@passo(COMRA
                                 M[1]), RAM(DATA[2047]), 
  6385                           ;!
  6386                           ;!    salva_atuadores_init@pt	PTR unsigned char  size(2) Largest target is 4
  6387                           ;!		 -> salva_atuadores_init@condi_init(COMRAM[4]), 
  6388                           ;!
  6389                           ;!    buscar_dado@data	PTR unsigned char  size(2) Largest target is 1
  6390                           ;!		 -> main@init_cond(BANK0h[1]), 
  6391                           ;!
  6392                           ;!    buscar_receita@data	PTR unsigned char  size(2) Largest target is 16
  6393                           ;!		 -> main@vetor_aux(BANK0h[16]), 
  6394                           ;!
  6395                           ;!    salvar_receita@data	PTR unsigned char  size(2) Largest target is 18
  6396                           ;!		 -> fila(COMRAM[18]), 
  6397                           ;!
  6398                           ;!    dispLCD_str@str	PTR const unsigned char  size(2) Largest target is 83
  6399                           ;!		 -> STR_27(CODE[78]), STR_26(CODE[62]), STR_15(CODE[81]), STR_4(CODE[83]), 
  6400                           ;!
  6401                           ;!    dispLCD@str	PTR const unsigned char  size(2) Largest target is 21
  6402                           ;!		 -> STR_32(CODE[21]), STR_31(CODE[21]), STR_30(CODE[21]), STR_29(CODE[2]), 
  6403                           ;!		 -> STR_28(CODE[2]), STR_25(CODE[21]), STR_24(CODE[21]), STR_23(CODE[21]), 
  6404                           ;!		 -> STR_22(CODE[21]), STR_21(CODE[21]), STR_20(CODE[8]), STR_19(CODE[21]), 
  6405                           ;!		 -> STR_18(CODE[21]), STR_17(CODE[21]), STR_16(CODE[21]), STR_14(CODE[21]), 
  6406                           ;!		 -> STR_13(CODE[21]), STR_12(CODE[2]), STR_11(CODE[2]), STR_10(CODE[21]), 
  6407                           ;!		 -> STR_9(CODE[21]), STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), 
  6408                           ;!		 -> STR_5(CODE[21]), STR_3(CODE[21]), STR_2(CODE[2]), STR_1(CODE[2]), 
  6409                           ;!
  6410                           ;!    ler_sensor@ptr	PTR unsigned char  size(2) Largest target is 1
  6411                           ;!		 -> main@vetorIn(BANK0h[1]), 
  6412                           ;!
  6413                           ;!    set_passo@ptr	PTR unsigned char  size(2) Largest target is 1
  6414                           ;!		 -> main@vetorOut(BANK0h[1]), 
  6415                           ;!
  6416                           ;!    sp__fifo_adrs	PTR unsigned char  size(2) Largest target is 18
  6417                           ;!		 -> fila(COMRAM[18]), 
  6418                           ;!
  6419                           ;!    main@ptr_664	PTR unsigned char  size(2) Largest target is 16
  6420                           ;!		 -> main@vetor_aux(BANK0h[16]), 
  6421                           ;!
  6422                           ;!    main@ptr_645	PTR unsigned char  size(2) Largest target is 16
  6423                           ;!		 -> main@vetor_aux(BANK0h[16]), 
  6424                           ;!
  6425                           ;!    main@pt	PTR unsigned char  size(2) Largest target is 16
  6426                           ;!		 -> main@vetor_aux(BANK0h[16]), 
  6427                           ;!
  6428                           ;!    main@ptr	PTR unsigned char  size(2) Largest target is 20
  6429                           ;!		 -> main@lema(BANK0h[20]), 
  6430                           ;!
  6431                           ;!    S145$cipsend	PTR FTN()void  size(2) Largest target is 1
  6432                           ;!		 -> Wifi_cipsend(), 
  6433                           ;!
  6434                           ;!    wifi.cipsend	PTR FTN()void  size(2) Largest target is 1
  6435                           ;!		 -> Wifi_cipsend(), 
  6436                           ;!
  6437                           ;!    S145$config_servidor	PTR FTN()void  size(2) Largest target is 1
  6438                           ;!		 -> Wifi_config_servidor(), 
  6439                           ;!
  6440                           ;!    wifi.config_servidor	PTR FTN()void  size(2) Largest target is 1
  6441                           ;!		 -> Wifi_config_servidor(), 
  6442                           ;!
  6443                           ;!    S145$scan	PTR FTN()void  size(2) Largest target is 1
  6444                           ;!		 -> Wifi_scan(), 
  6445                           ;!
  6446                           ;!    wifi.scan	PTR FTN()void  size(2) Largest target is 1
  6447                           ;!		 -> Wifi_scan(), 
  6448                           ;!
  6449                           ;!    S145$autoconnect	PTR FTN()void  size(2) Largest target is 1
  6450                           ;!		 -> Wifi_autoconnect(), 
  6451                           ;!
  6452                           ;!    wifi.autoconnect	PTR FTN()void  size(2) Largest target is 1
  6453                           ;!		 -> Wifi_autoconnect(), 
  6454                           ;!
  6455                           ;!    S145$ip	PTR FTN()void  size(2) Largest target is 1
  6456                           ;!		 -> Wifi_ip(), 
  6457                           ;!
  6458                           ;!    wifi.ip	PTR FTN()void  size(2) Largest target is 1
  6459                           ;!		 -> Wifi_ip(), 
  6460                           ;!
  6461                           ;!    S145$connect	PTR FTN(PTR const unsigned char ,PTR const unsigned char ,)void  size
                                 (2) Largest target is 1
  6462                           ;!		 -> Wifi_connect(), 
  6463                           ;!
  6464                           ;!    wifi.connect	PTR FTN(PTR const unsigned char ,PTR const unsigned char ,)void  size
                                 (2) Largest target is 1
  6465                           ;!		 -> Wifi_connect(), 
  6466                           ;!
  6467                           ;!    S145$mode	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
  6468                           ;!		 -> Wifi_mode(), 
  6469                           ;!
  6470                           ;!    wifi.mode	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
  6471                           ;!		 -> Wifi_mode(), 
  6472                           ;!
  6473                           ;!    S145$receive	PTR FTN(PTR unsigned char ,)unsigned char  size(2) Largest target is 
                                 1
  6474                           ;!		 -> wifi_receive(), 
  6475                           ;!
  6476                           ;!    wifi.receive	PTR FTN(PTR unsigned char ,)unsigned char  size(2) Largest target is 
                                 1
  6477                           ;!		 -> wifi_receive(), 
  6478                           ;!
  6479                           ;!    S145$send	PTR FTN(PTR const unsigned char ,)void  size(2) Largest target is 1
  6480                           ;!		 -> wifi_send(), 
  6481                           ;!
  6482                           ;!    wifi.send	PTR FTN(PTR const unsigned char ,)void  size(2) Largest target is 1
  6483                           ;!		 -> wifi_send(), 
  6484                           ;!
  6485                           ;!    S145$init	PTR FTN(long ,)void  size(2) Largest target is 1
  6486                           ;!		 -> wifi_init(), 
  6487                           ;!
  6488                           ;!    wifi.init	PTR FTN(long ,)void  size(2) Largest target is 1
  6489                           ;!		 -> wifi_init(), 
  6490                           ;!
  6491                           ;!    S85$formatar	PTR FTN()void  size(2) Largest target is 1
  6492                           ;!		 -> formatar_receitas(), 
  6493                           ;!
  6494                           ;!    EEPROM.formatar	PTR FTN()void  size(2) Largest target is 1
  6495                           ;!		 -> formatar_receitas(), 
  6496                           ;!
  6497                           ;!    S85$livre	PTR FTN(PTR unsigned char ,)void  size(2) Largest target is 1
  6498                           ;!		 -> receita_livre(), 
  6499                           ;!
  6500                           ;!    EEPROM.livre	PTR FTN(PTR unsigned char ,)void  size(2) Largest target is 1
  6501                           ;!		 -> receita_livre(), 
  6502                           ;!
  6503                           ;!    S85$deletar	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
  6504                           ;!		 -> deletar_receita(), 
  6505                           ;!
  6506                           ;!    EEPROM.deletar	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
  6507                           ;!		 -> deletar_receita(), 
  6508                           ;!
  6509                           ;!    S85$buscar	PTR FTN(unsigned char ,PTR unsigned char ,)void  size(2) Largest target
                                  is 1
  6510                           ;!		 -> buscar_receita(), 
  6511                           ;!
  6512                           ;!    EEPROM.buscar	PTR FTN(unsigned char ,PTR unsigned char ,)void  size(2) Largest tar
                                 get is 1
  6513                           ;!		 -> buscar_receita(), 
  6514                           ;!
  6515                           ;!    S85$salvar	PTR FTN(unsigned char ,PTR unsigned char ,)void  size(2) Largest target
                                  is 1
  6516                           ;!		 -> salvar_receita(), 
  6517                           ;!
  6518                           ;!    EEPROM.salvar	PTR FTN(unsigned char ,PTR unsigned char ,)void  size(2) Largest tar
                                 get is 1
  6519                           ;!		 -> salvar_receita(), 
  6520                           ;!
  6521                           ;!    S29$clr	PTR FTN()void  size(2) Largest target is 1
  6522                           ;!		 -> dispLCD_clr(), 
  6523                           ;!
  6524                           ;!    IHM.clr	PTR FTN()void  size(2) Largest target is 1
  6525                           ;!		 -> dispLCD_clr(), 
  6526                           ;!
  6527                           ;!    S29$printv	PTR FTN(unsigned char ,unsigned char ,int ,unsigned char ,)void  size(2
                                 ) Largest target is 1
  6528                           ;!		 -> dispLCD_num(), 
  6529                           ;!
  6530                           ;!    IHM.printv	PTR FTN(unsigned char ,unsigned char ,int ,unsigned char ,)void  size(2
                                 ) Largest target is 1
  6531                           ;!		 -> dispLCD_num(), 
  6532                           ;!
  6533                           ;!    S29$printpos	PTR FTN(unsigned char ,unsigned char ,PTR const unsigned char ,)void 
                                  size(2) Largest target is 1
  6534                           ;!		 -> dispLCD(), 
  6535                           ;!
  6536                           ;!    IHM.printpos	PTR FTN(unsigned char ,unsigned char ,PTR const unsigned char ,)void 
                                  size(2) Largest target is 1
  6537                           ;!		 -> dispLCD(), 
  6538                           ;!
  6539                           ;!    S29$print	PTR FTN(PTR const unsigned char ,)void  size(2) Largest target is 1
  6540                           ;!		 -> dispLCD_str(), 
  6541                           ;!
  6542                           ;!    IHM.print	PTR FTN(PTR const unsigned char ,)void  size(2) Largest target is 1
  6543                           ;!		 -> dispLCD_str(), 
  6544                           ;!
  6545                           ;!    S29$init	PTR FTN()void  size(2) Largest target is 1
  6546                           ;!		 -> dispLCD_init(), 
  6547                           ;!
  6548                           ;!    IHM.init	PTR FTN()void  size(2) Largest target is 1
  6549                           ;!		 -> dispLCD_init(), 
  6550                           ;!
  6551                           
  6552                           
  6553                           ;!
  6554                           ;!Critical Paths under _main in COMRAM
  6555                           ;!
  6556                           ;!    _main->_printExec
  6557                           ;!    _wifi_init->_initEUSART
  6558                           ;!    _initEUSART->___lldiv
  6559                           ;!    _teclado_borda->_teclado_scan
  6560                           ;!    _setT1->___wmul
  6561                           ;!    _serialIOscan->_serialIObyteShift
  6562                           ;!    _salvar_receita->___awmod
  6563                           ;!    _salvar_dado->___awmod
  6564                           ;!    _salva_atuadores_init->_ler_atuador
  6565                           ;!    _printExec->_dispLCD_num
  6566                           ;!    _posAtual->_fifo_lerPos
  6567                           ;!    _dispLCD_num->_dignum_tam
  6568                           ;!    _manipula_atuadores_init->_alt_atuador
  6569                           ;!    _formatar_receitas->_EEPROM_write
  6570                           ;!    _fifo_print->___awdiv
  6571                           ;!    _fifo_delete->_fifo_alinharPrint
  6572                           ;!    _fifo_add_tempo->_fifo_alinharPrint
  6573                           ;!    _fifo_add_control->_fifo_alinharPrint
  6574                           ;!    _fifo_add->_fifo_alinharPrint
  6575                           ;!    _fifo_alinharPrint->_dignum_tam
  6576                           ;!    _dignum_tam->___awdiv
  6577                           ;!    _dispLCD_str->_dispLCD_lincol
  6578                           ;!    _dispLCD_init->_delay
  6579                           ;!    _dispLCD_clr->_dispLCD_instReg
  6580                           ;!    _dispLCD->_dispLCD_lincol
  6581                           ;!    _dispLCD_lincol->_dispLCD_instReg
  6582                           ;!    _dignum_conc->___wmul
  6583                           ;!    _dignum_apagar->___lwdiv
  6584                           ;!    _deletar_receita->_end_receita
  6585                           ;!    _buscar_receita->___awmod
  6586                           ;!    _buscar_dado->___awmod
  6587                           ;!    ___aldiv->___lmul
  6588                           ;!    _MCP4725->___aldiv
  6589                           ;!    _dac_write->_delay
  6590                           ;!    _dac_init->_delay
  6591                           ;!    _I2C_init->___lldiv
  6592                           ;!
  6593                           ;!Critical Paths under _irq in COMRAM
  6594                           ;!
  6595                           ;!    None.
  6596                           ;!
  6597                           ;!Critical Paths under _main in BANK0h
  6598                           ;!
  6599                           ;!    None.
  6600                           ;!
  6601                           ;!Critical Paths under _irq in BANK0h
  6602                           ;!
  6603                           ;!    None.
  6604                           ;!
  6605                           ;!Critical Paths under _main in BANK0l
  6606                           ;!
  6607                           ;!    None.
  6608                           ;!
  6609                           ;!Critical Paths under _irq in BANK0l
  6610                           ;!
  6611                           ;!    None.
  6612                           ;!
  6613                           ;!Critical Paths under _main in BANK1
  6614                           ;!
  6615                           ;!    None.
  6616                           ;!
  6617                           ;!Critical Paths under _irq in BANK1
  6618                           ;!
  6619                           ;!    None.
  6620                           ;!
  6621                           ;!Critical Paths under _main in BANK2
  6622                           ;!
  6623                           ;!    None.
  6624                           ;!
  6625                           ;!Critical Paths under _irq in BANK2
  6626                           ;!
  6627                           ;!    None.
  6628                           ;!
  6629                           ;!Critical Paths under _main in BANK3
  6630                           ;!
  6631                           ;!    None.
  6632                           ;!
  6633                           ;!Critical Paths under _irq in BANK3
  6634                           ;!
  6635                           ;!    None.
  6636                           ;!
  6637                           ;!Critical Paths under _main in BANK4
  6638                           ;!
  6639                           ;!    None.
  6640                           ;!
  6641                           ;!Critical Paths under _irq in BANK4
  6642                           ;!
  6643                           ;!    None.
  6644                           ;!
  6645                           ;!Critical Paths under _main in BANK5
  6646                           ;!
  6647                           ;!    None.
  6648                           ;!
  6649                           ;!Critical Paths under _irq in BANK5
  6650                           ;!
  6651                           ;!    None.
  6652                           ;!
  6653                           ;!Critical Paths under _main in BANK6
  6654                           ;!
  6655                           ;!    None.
  6656                           ;!
  6657                           ;!Critical Paths under _irq in BANK6
  6658                           ;!
  6659                           ;!    None.
  6660                           ;!
  6661                           ;!Critical Paths under _main in BANK7
  6662                           ;!
  6663                           ;!    None.
  6664                           ;!
  6665                           ;!Critical Paths under _irq in BANK7
  6666                           ;!
  6667                           ;!    None.
  6668                           
  6669 ;;
  6670 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  6671 ;;
  6672                           
  6673                           ;!
  6674                           ;!Call Graph Tables:
  6675                           ;!
  6676                           ;! ---------------------------------------------------------------------------------
  6677                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  6678                           ;! ---------------------------------------------------------------------------------
  6679                           ;! (0) _main                                                96    96      0   74765
  6680                           ;!                                             30 COMRAM     2     2      0
  6681                           ;!                                              0 BANK0h    93    93      0
  6682                           ;!                           _I2C_init
  6683                           ;!                            _MCP4725
  6684                           ;!                            ___aldiv
  6685                           ;!                            ___awmod
  6686                           ;!                             ___lmul
  6687                           ;!                             ___wmul
  6688                           ;!                      _addContCiclos
  6689                           ;!                    _addIndicePassos
  6690                           ;!                        _alt_atuador
  6691                           ;!                        _buscar_dado
  6692                           ;!                     _buscar_receita *
  6693                           ;!                         _decodifica
  6694                           ;!                              _delay
  6695                           ;!                    _deletar_receita *
  6696                           ;!                      _dignum_apagar
  6697                           ;!                        _dignum_conc
  6698                           ;!                            _dispLCD *
  6699                           ;!                        _dispLCD_clr *
  6700                           ;!                    _dispLCD_dataReg
  6701                           ;!                       _dispLCD_init
  6702                           ;!                     _dispLCD_lincol
  6703                           ;!                        _dispLCD_num *
  6704                           ;!                        _dispLCD_str *
  6705                           ;!                           _fifo_add
  6706                           ;!                     _fifo_add_ciclo
  6707                           ;!                   _fifo_add_control
  6708                           ;!                     _fifo_add_tempo
  6709                           ;!                          _fifo_adrs
  6710                           ;!                        _fifo_delete
  6711                           ;!                    _fifo_disponivel
  6712                           ;!                        _fifo_indice
  6713                           ;!               _fifo_indicePrint_dec
  6714                           ;!               _fifo_indicePrint_inc
  6715                           ;!                        _fifo_lerPos
  6716                           ;!                         _fifo_print
  6717                           ;!                           _fifo_tam
  6718                           ;!                  _formatar_receitas *
  6719                           ;!                          _getCiclos
  6720                           ;!                      _getContCiclos
  6721                           ;!                    _getIndicePassos
  6722                           ;!                       _initSerialIO
  6723                           ;!                     _init_atuadores
  6724                           ;!                        _ler_atuador
  6725                           ;!                         _ler_sensor
  6726                           ;!            _manipula_atuadores_init
  6727                           ;!                          _printExec
  6728                           ;!                    _resetContCiclos
  6729                           ;!                  _resetIndicePassos
  6730                           ;!               _salva_atuadores_init
  6731                           ;!                        _salvar_dado
  6732                           ;!                     _salvar_receita *
  6733                           ;!                       _serialIOscan
  6734                           ;!                              _setT1
  6735                           ;!                          _set_passo
  6736                           ;!                           _statusT1
  6737                           ;!                      _teclado_borda
  6738                           ;!                       _teclado_init
  6739                           ;!                        _timer1_init
  6740                           ;!                          _wifi_init
  6741                           ;! ---------------------------------------------------------------------------------
  6742                           ;! (1) _wifi_init                                            4     0      4     639
  6743                           ;!                                             21 COMRAM     4     0      4
  6744                           ;!                         _initEUSART *
  6745                           ;! ---------------------------------------------------------------------------------
  6746                           ;! (2) _initEUSART                                           8     4      4     541
  6747                           ;!                                             13 COMRAM     8     4      4
  6748                           ;!                            ___lldiv
  6749                           ;! ---------------------------------------------------------------------------------
  6750                           ;! (1) _timer1_init                                          0     0      0       0
  6751                           ;! ---------------------------------------------------------------------------------
  6752                           ;! (1) _teclado_init                                         0     0      0       0
  6753                           ;! ---------------------------------------------------------------------------------
  6754                           ;! (1) _teclado_borda                                        2     2      0     296
  6755                           ;!                                              5 COMRAM     2     2      0
  6756                           ;!                       _teclado_scan
  6757                           ;! ---------------------------------------------------------------------------------
  6758                           ;! (2) _teclado_scan                                         5     5      0     204
  6759                           ;!                                              0 COMRAM     5     5      0
  6760                           ;! ---------------------------------------------------------------------------------
  6761                           ;! (1) _statusT1                                             4     0      4       0
  6762                           ;!                                              0 COMRAM     4     0      4
  6763                           ;! ---------------------------------------------------------------------------------
  6764                           ;! (1) _set_passo                                            5     3      2     274
  6765                           ;!                                              0 COMRAM     5     3      2
  6766                           ;! ---------------------------------------------------------------------------------
  6767                           ;! (1) _setT1                                                4     0      4     478
  6768                           ;!                                              6 COMRAM     4     0      4
  6769                           ;!                             ___wmul (ARG)
  6770                           ;! ---------------------------------------------------------------------------------
  6771                           ;! (1) _serialIOscan                                         6     6      0     205
  6772                           ;!                                              3 COMRAM     6     6      0
  6773                           ;!                  _serialIObyteShift
  6774                           ;!                       _serialIOload
  6775                           ;! ---------------------------------------------------------------------------------
  6776                           ;! (2) _serialIOload                                         0     0      0       0
  6777                           ;! ---------------------------------------------------------------------------------
  6778                           ;! (2) _serialIObyteShift                                    3     3      0     114
  6779                           ;!                                              0 COMRAM     3     3      0
  6780                           ;! ---------------------------------------------------------------------------------
  6781                           ;! (1) _salvar_receita                                       6     4      2    1089
  6782                           ;!                                              6 COMRAM     6     4      2
  6783                           ;!                       _EEPROM_write
  6784                           ;!                            ___awmod (ARG)
  6785                           ;!                        _end_receita
  6786                           ;!                          _fifo_adrs (ARG)
  6787                           ;! ---------------------------------------------------------------------------------
  6788                           ;! (1) _salvar_dado                                          5     3      2    1219
  6789                           ;!                                              6 COMRAM     5     3      2
  6790                           ;!                       _EEPROM_write
  6791                           ;!                            ___awmod (ARG)
  6792                           ;!                        _end_receita
  6793                           ;! ---------------------------------------------------------------------------------
  6794                           ;! (1) _salva_atuadores_init                                 8     8      0     235
  6795                           ;!                                              3 COMRAM     8     8      0
  6796                           ;!                        _ler_atuador
  6797                           ;! ---------------------------------------------------------------------------------
  6798                           ;! (2) _ler_atuador                                          3     3      0      22
  6799                           ;!                                              0 COMRAM     3     3      0
  6800                           ;! ---------------------------------------------------------------------------------
  6801                           ;! (1) _resetIndicePassos                                    0     0      0       0
  6802                           ;! ---------------------------------------------------------------------------------
  6803                           ;! (1) _resetContCiclos                                      0     0      0       0
  6804                           ;! ---------------------------------------------------------------------------------
  6805                           ;! (1) _printExec                                            5     4      1   12960
  6806                           ;!                                             25 COMRAM     5     4      1
  6807                           ;!                         _decodifica
  6808                           ;!                         _dignum_tam
  6809                           ;!                    _dispLCD_dataReg
  6810                           ;!                     _dispLCD_lincol
  6811                           ;!                        _dispLCD_num
  6812                           ;!                           _posAtual
  6813                           ;! ---------------------------------------------------------------------------------
  6814                           ;! (2) _posAtual                                             2     2      0      68
  6815                           ;!                                              1 COMRAM     2     2      0
  6816                           ;!                        _fifo_lerPos
  6817                           ;!                    _getIndicePassos
  6818                           ;! ---------------------------------------------------------------------------------
  6819                           ;! (3) _getIndicePassos                                      0     0      0       0
  6820                           ;! ---------------------------------------------------------------------------------
  6821                           ;! (3) _fifo_lerPos                                          1     1      0      22
  6822                           ;!                                              0 COMRAM     1     1      0
  6823                           ;! ---------------------------------------------------------------------------------
  6824                           ;! (2) _dispLCD_num                                         14    10      4    7167
  6825                           ;!                                             11 COMRAM    14    10      4
  6826                           ;!                            ___awdiv
  6827                           ;!                            ___awmod
  6828                           ;!                         _dignum_tam (ARG)
  6829                           ;!                    _dispLCD_dataReg
  6830                           ;!                     _dispLCD_lincol
  6831                           ;!                        _fifo_indice (ARG)
  6832                           ;!                           _fifo_tam (ARG)
  6833                           ;!                      _getContCiclos (ARG)
  6834                           ;!                    _getIndicePassos (ARG)
  6835                           ;! ---------------------------------------------------------------------------------
  6836                           ;! (1) _manipula_atuadores_init                              3     3      0     136
  6837                           ;!                                              3 COMRAM     3     3      0
  6838                           ;!                        _alt_atuador
  6839                           ;! ---------------------------------------------------------------------------------
  6840                           ;! (1) _ler_sensor                                           5     3      2     274
  6841                           ;!                                              0 COMRAM     5     3      2
  6842                           ;! ---------------------------------------------------------------------------------
  6843                           ;! (1) _init_atuadores                                       0     0      0       0
  6844                           ;! ---------------------------------------------------------------------------------
  6845                           ;! (1) _initSerialIO                                         5     0      5     294
  6846                           ;!                                              0 COMRAM     5     0      5
  6847                           ;! ---------------------------------------------------------------------------------
  6848                           ;! (1) _getContCiclos                                        2     0      2       0
  6849                           ;!                                              0 COMRAM     2     0      2
  6850                           ;! ---------------------------------------------------------------------------------
  6851                           ;! (1) _getCiclos                                            4     2      2      25
  6852                           ;!                                              0 COMRAM     4     2      2
  6853                           ;! ---------------------------------------------------------------------------------
  6854                           ;! (1) _formatar_receitas                                    1     1      0     372
  6855                           ;!                                              2 COMRAM     1     1      0
  6856                           ;!                       _EEPROM_write
  6857                           ;! ---------------------------------------------------------------------------------
  6858                           ;! (1) _fifo_tam                                             0     0      0       0
  6859                           ;! ---------------------------------------------------------------------------------
  6860                           ;! (1) _fifo_print                                           9     9      0    7013
  6861                           ;!                                              8 COMRAM     9     9      0
  6862                           ;!                            ___awdiv
  6863                           ;!                            ___awmod
  6864                           ;!                         _decodifica
  6865                           ;!                    _dispLCD_dataReg
  6866                           ;!                     _dispLCD_lincol
  6867                           ;! ---------------------------------------------------------------------------------
  6868                           ;! (3) ___awmod                                              6     2      4    1968
  6869                           ;!                                              0 COMRAM     6     2      4
  6870                           ;! ---------------------------------------------------------------------------------
  6871                           ;! (1) _fifo_indicePrint_inc                                 7     7      0       0
  6872                           ;!                                              0 COMRAM     7     7      0
  6873                           ;! ---------------------------------------------------------------------------------
  6874                           ;! (1) _fifo_indicePrint_dec                                 0     0      0       0
  6875                           ;! ---------------------------------------------------------------------------------
  6876                           ;! (1) _fifo_indice                                          0     0      0       0
  6877                           ;! ---------------------------------------------------------------------------------
  6878                           ;! (1) _fifo_disponivel                                      0     0      0       0
  6879                           ;! ---------------------------------------------------------------------------------
  6880                           ;! (1) _fifo_delete                                          2     2      0    4395
  6881                           ;!                                             15 COMRAM     2     2      0
  6882                           ;!                        _alt_atuador
  6883                           ;!                           _codifica
  6884                           ;!                         _decodifica
  6885                           ;!                  _fifo_alinharPrint
  6886                           ;! ---------------------------------------------------------------------------------
  6887                           ;! (2) _decodifica                                           4     2      2    1426
  6888                           ;!                                              0 COMRAM     4     2      2
  6889                           ;! ---------------------------------------------------------------------------------
  6890                           ;! (2) _alt_atuador                                          3     3      0      22
  6891                           ;!                                              0 COMRAM     3     3      0
  6892                           ;! ---------------------------------------------------------------------------------
  6893                           ;! (1) _fifo_adrs                                            2     0      2       0
  6894                           ;!                                              0 COMRAM     2     0      2
  6895                           ;! ---------------------------------------------------------------------------------
  6896                           ;! (1) _fifo_add_tempo                                       1     1      0    3035
  6897                           ;!                                             15 COMRAM     1     1      0
  6898                           ;!                           _codifica
  6899                           ;!                  _fifo_alinharPrint
  6900                           ;! ---------------------------------------------------------------------------------
  6901                           ;! (1) _fifo_add_control                                     1     1      0    3013
  6902                           ;!                                             15 COMRAM     1     1      0
  6903                           ;!                           _codifica
  6904                           ;!                  _fifo_alinharPrint
  6905                           ;! ---------------------------------------------------------------------------------
  6906                           ;! (1) _fifo_add_ciclo                                       2     0      2     120
  6907                           ;!                                              0 COMRAM     2     0      2
  6908                           ;! ---------------------------------------------------------------------------------
  6909                           ;! (1) _fifo_add                                             1     1      0    3035
  6910                           ;!                                             15 COMRAM     1     1      0
  6911                           ;!                           _codifica
  6912                           ;!                  _fifo_alinharPrint
  6913                           ;! ---------------------------------------------------------------------------------
  6914                           ;! (2) _fifo_alinharPrint                                    4     4      0    2357
  6915                           ;!                                             11 COMRAM     4     4      0
  6916                           ;!                         _dignum_tam
  6917                           ;! ---------------------------------------------------------------------------------
  6918                           ;! (2) _dignum_tam                                           3     1      2    2041
  6919                           ;!                                              8 COMRAM     3     1      2
  6920                           ;!                            ___awdiv
  6921                           ;! ---------------------------------------------------------------------------------
  6922                           ;! (3) ___awdiv                                              8     4      4    1364
  6923                           ;!                                              0 COMRAM     8     4      4
  6924                           ;! ---------------------------------------------------------------------------------
  6925                           ;! (2) _codifica                                             5     3      2     590
  6926                           ;!                                              0 COMRAM     5     3      2
  6927                           ;! ---------------------------------------------------------------------------------
  6928                           ;! (1) _dispLCD_str                                          4     2      2    1733
  6929                           ;!                                              7 COMRAM     4     2      2
  6930                           ;!                    _dispLCD_dataReg
  6931                           ;!                     _dispLCD_lincol
  6932                           ;! ---------------------------------------------------------------------------------
  6933                           ;! (1) _dispLCD_init                                         0     0      0    1415
  6934                           ;!                              _delay
  6935                           ;!                    _dispLCD_instReg
  6936                           ;! ---------------------------------------------------------------------------------
  6937                           ;! (1) _dispLCD_clr                                          0     0      0     176
  6938                           ;!                    _dispLCD_instReg
  6939                           ;! ---------------------------------------------------------------------------------
  6940                           ;! (1) _dispLCD                                              5     2      3    4971
  6941                           ;!                                              7 COMRAM     5     2      3
  6942                           ;!                    _dispLCD_dataReg
  6943                           ;!                     _dispLCD_lincol
  6944                           ;! ---------------------------------------------------------------------------------
  6945                           ;! (3) _dispLCD_lincol                                       5     4      1    1386
  6946                           ;!                                              2 COMRAM     5     4      1
  6947                           ;!                    _dispLCD_instReg
  6948                           ;! ---------------------------------------------------------------------------------
  6949                           ;! (4) _dispLCD_instReg                                      2     2      0     176
  6950                           ;!                                              0 COMRAM     2     2      0
  6951                           ;! ---------------------------------------------------------------------------------
  6952                           ;! (3) _dispLCD_dataReg                                      2     2      0      44
  6953                           ;!                                              0 COMRAM     2     2      0
  6954                           ;! ---------------------------------------------------------------------------------
  6955                           ;! (1) _dignum_conc                                          7     5      2     757
  6956                           ;!                                              6 COMRAM     7     5      2
  6957                           ;!                             ___wmul
  6958                           ;! ---------------------------------------------------------------------------------
  6959                           ;! (2) ___wmul                                               6     2      4     463
  6960                           ;!                                              0 COMRAM     6     2      4
  6961                           ;! ---------------------------------------------------------------------------------
  6962                           ;! (1) _dignum_apagar                                        2     0      2     540
  6963                           ;!                                              7 COMRAM     2     0      2
  6964                           ;!                            ___lwdiv
  6965                           ;! ---------------------------------------------------------------------------------
  6966                           ;! (2) ___lwdiv                                              7     3      4     268
  6967                           ;!                                              0 COMRAM     7     3      4
  6968                           ;! ---------------------------------------------------------------------------------
  6969                           ;! (1) _deletar_receita                                      4     4      0     939
  6970                           ;!                                              4 COMRAM     4     4      0
  6971                           ;!                       _EEPROM_write
  6972                           ;!                        _end_receita
  6973                           ;! ---------------------------------------------------------------------------------
  6974                           ;! (2) _EEPROM_write                                         2     1      1     348
  6975                           ;!                                              0 COMRAM     2     1      1
  6976                           ;! ---------------------------------------------------------------------------------
  6977                           ;! (1) _buscar_receita                                       6     4      2     763
  6978                           ;!                                              6 COMRAM     6     4      2
  6979                           ;!                        _EEPROM_read
  6980                           ;!                            ___awmod (ARG)
  6981                           ;!                        _end_receita
  6982                           ;! ---------------------------------------------------------------------------------
  6983                           ;! (1) _buscar_dado                                          6     3      3     893
  6984                           ;!                                              6 COMRAM     6     3      3
  6985                           ;!                        _EEPROM_read
  6986                           ;!                            ___awmod (ARG)
  6987                           ;!                        _end_receita
  6988                           ;! ---------------------------------------------------------------------------------
  6989                           ;! (2) _end_receita                                          4     2      2     478
  6990                           ;!                                              0 COMRAM     4     2      2
  6991                           ;! ---------------------------------------------------------------------------------
  6992                           ;! (2) _EEPROM_read                                          1     1      0      22
  6993                           ;!                                              0 COMRAM     1     1      0
  6994                           ;! ---------------------------------------------------------------------------------
  6995                           ;! (1) _addIndicePassos                                      0     0      0       0
  6996                           ;! ---------------------------------------------------------------------------------
  6997                           ;! (1) _addContCiclos                                        0     0      0       0
  6998                           ;! ---------------------------------------------------------------------------------
  6999                           ;! (1) ___lmul                                              12     4      8     370
  7000                           ;!                                              0 COMRAM    12     4      8
  7001                           ;! ---------------------------------------------------------------------------------
  7002                           ;! (1) ___aldiv                                             14     6      8     452
  7003                           ;!                                             12 COMRAM    14     6      8
  7004                           ;!                             ___lmul (ARG)
  7005                           ;! ---------------------------------------------------------------------------------
  7006                           ;! (1) _MCP4725                                              2     0      2    4207
  7007                           ;!                                             26 COMRAM     2     0      2
  7008                           ;!                           _I2C_stop
  7009                           ;!                            ___aldiv (ARG)
  7010                           ;!                             ___lmul (ARG)
  7011                           ;!                           _dac_init
  7012                           ;!                          _dac_write
  7013                           ;!                              _delay
  7014                           ;! ---------------------------------------------------------------------------------
  7015                           ;! (2) _dac_write                                            5     3      2    1533
  7016                           ;!                                              3 COMRAM     5     3      2
  7017                           ;!                    _I2C_ack_receive
  7018                           ;!                             _I2C_tx
  7019                           ;!                              _delay
  7020                           ;! ---------------------------------------------------------------------------------
  7021                           ;! (2) _dac_init                                             0     0      0    1261
  7022                           ;!                    _I2C_ack_receive
  7023                           ;!                          _I2C_start
  7024                           ;!                             _I2C_tx
  7025                           ;!                              _delay
  7026                           ;! ---------------------------------------------------------------------------------
  7027                           ;! (2) _delay                                                3     1      2    1239
  7028                           ;!                                              0 COMRAM     3     1      2
  7029                           ;! ---------------------------------------------------------------------------------
  7030                           ;! (3) _I2C_tx                                               1     1      0      22
  7031                           ;!                                              0 COMRAM     1     1      0
  7032                           ;! ---------------------------------------------------------------------------------
  7033                           ;! (3) _I2C_start                                            0     0      0       0
  7034                           ;! ---------------------------------------------------------------------------------
  7035                           ;! (3) _I2C_ack_receive                                      0     0      0       0
  7036                           ;! ---------------------------------------------------------------------------------
  7037                           ;! (2) _I2C_stop                                             0     0      0       0
  7038                           ;! ---------------------------------------------------------------------------------
  7039                           ;! (1) _I2C_init                                             4     0      4     564
  7040                           ;!                                             13 COMRAM     4     0      4
  7041                           ;!                            ___lldiv
  7042                           ;! ---------------------------------------------------------------------------------
  7043                           ;! (3) ___lldiv                                             13     5      8     466
  7044                           ;!                                              0 COMRAM    13     5      8
  7045                           ;! ---------------------------------------------------------------------------------
  7046                           ;! Estimated maximum stack depth 4
  7047                           ;! ---------------------------------------------------------------------------------
  7048                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  7049                           ;! ---------------------------------------------------------------------------------
  7050                           ;! (5) _irq                                                  0     0      0       0
  7051                           ;!                          _intt1_1ms
  7052                           ;! ---------------------------------------------------------------------------------
  7053                           ;! (6) _intt1_1ms                                            0     0      0       0
  7054                           ;! ---------------------------------------------------------------------------------
  7055                           ;! Estimated maximum stack depth 6
  7056                           ;! ---------------------------------------------------------------------------------
  7057                           ;!
  7058                           ;! Call Graph Graphs:
  7059                           ;!
  7060                           ;! _main (ROOT)
  7061                           ;!   _I2C_init
  7062                           ;!     ___lldiv
  7063                           ;!   _MCP4725
  7064                           ;!     _I2C_stop
  7065                           ;!     ___aldiv (ARG)
  7066                           ;!       ___lmul (ARG)
  7067                           ;!     ___lmul (ARG)
  7068                           ;!     _dac_init (ARG)
  7069                           ;!       _I2C_ack_receive
  7070                           ;!       _I2C_start
  7071                           ;!       _I2C_tx
  7072                           ;!       _delay
  7073                           ;!     _dac_write (ARG)
  7074                           ;!       _I2C_ack_receive
  7075                           ;!       _I2C_tx
  7076                           ;!       _delay
  7077                           ;!     _delay (ARG)
  7078                           ;!   ___aldiv
  7079                           ;!     ___lmul (ARG)
  7080                           ;!   ___awmod
  7081                           ;!   ___lmul
  7082                           ;!   ___wmul
  7083                           ;!   _addContCiclos
  7084                           ;!   _addIndicePassos
  7085                           ;!   _alt_atuador
  7086                           ;!   _buscar_dado
  7087                           ;!     _EEPROM_read
  7088                           ;!     ___awmod (ARG)
  7089                           ;!     _end_receita (ARG)
  7090                           ;!   _buscar_receita *
  7091                           ;!     _EEPROM_read
  7092                           ;!     ___awmod (ARG)
  7093                           ;!     _end_receita (ARG)
  7094                           ;!   _decodifica *
  7095                           ;!   _delay *
  7096                           ;!   _deletar_receita *
  7097                           ;!     _EEPROM_write
  7098                           ;!     _end_receita
  7099                           ;!   _dignum_apagar *
  7100                           ;!     ___lwdiv
  7101                           ;!   _dignum_conc *
  7102                           ;!     ___wmul
  7103                           ;!   _dispLCD *
  7104                           ;!     _dispLCD_dataReg
  7105                           ;!     _dispLCD_lincol
  7106                           ;!       _dispLCD_instReg
  7107                           ;!   _dispLCD_clr *
  7108                           ;!     _dispLCD_instReg
  7109                           ;!   _dispLCD_dataReg *
  7110                           ;!   _dispLCD_init *
  7111                           ;!     _delay
  7112                           ;!     _dispLCD_instReg
  7113                           ;!   _dispLCD_lincol *
  7114                           ;!     _dispLCD_instReg
  7115                           ;!   _dispLCD_num *
  7116                           ;!     ___awdiv
  7117                           ;!     ___awmod
  7118                           ;!     _dignum_tam (ARG)
  7119                           ;!       ___awdiv
  7120                           ;!     _dispLCD_dataReg (ARG)
  7121                           ;!     _dispLCD_lincol (ARG)
  7122                           ;!       _dispLCD_instReg
  7123                           ;!     _fifo_indice (ARG)
  7124                           ;!     _fifo_tam (ARG)
  7125                           ;!     _getContCiclos (ARG)
  7126                           ;!     _getIndicePassos (ARG)
  7127                           ;!   _dispLCD_str *
  7128                           ;!     _dispLCD_dataReg
  7129                           ;!     _dispLCD_lincol
  7130                           ;!       _dispLCD_instReg
  7131                           ;!   _fifo_add *
  7132                           ;!     _codifica
  7133                           ;!     _fifo_alinharPrint
  7134                           ;!       _dignum_tam
  7135                           ;!         ___awdiv
  7136                           ;!   _fifo_add_ciclo *
  7137                           ;!   _fifo_add_control *
  7138                           ;!     _codifica
  7139                           ;!     _fifo_alinharPrint
  7140                           ;!       _dignum_tam
  7141                           ;!         ___awdiv
  7142                           ;!   _fifo_add_tempo *
  7143                           ;!     _codifica
  7144                           ;!     _fifo_alinharPrint
  7145                           ;!       _dignum_tam
  7146                           ;!         ___awdiv
  7147                           ;!   _fifo_adrs *
  7148                           ;!   _fifo_delete *
  7149                           ;!     _alt_atuador
  7150                           ;!     _codifica
  7151                           ;!     _decodifica
  7152                           ;!     _fifo_alinharPrint
  7153                           ;!       _dignum_tam
  7154                           ;!         ___awdiv
  7155                           ;!   _fifo_disponivel *
  7156                           ;!   _fifo_indice *
  7157                           ;!   _fifo_indicePrint_dec *
  7158                           ;!   _fifo_indicePrint_inc *
  7159                           ;!   _fifo_lerPos *
  7160                           ;!   _fifo_print *
  7161                           ;!     ___awdiv
  7162                           ;!     ___awmod
  7163                           ;!     _decodifica
  7164                           ;!     _dispLCD_dataReg
  7165                           ;!     _dispLCD_lincol
  7166                           ;!       _dispLCD_instReg
  7167                           ;!   _fifo_tam *
  7168                           ;!   _formatar_receitas *
  7169                           ;!     _EEPROM_write
  7170                           ;!   _getCiclos *
  7171                           ;!   _getContCiclos *
  7172                           ;!   _getIndicePassos *
  7173                           ;!   _initSerialIO *
  7174                           ;!   _init_atuadores *
  7175                           ;!   _ler_atuador *
  7176                           ;!   _ler_sensor *
  7177                           ;!   _manipula_atuadores_init *
  7178                           ;!     _alt_atuador
  7179                           ;!   _printExec *
  7180                           ;!     _decodifica
  7181                           ;!     _dignum_tam
  7182                           ;!       ___awdiv
  7183                           ;!     _dispLCD_dataReg
  7184                           ;!     _dispLCD_lincol
  7185                           ;!       _dispLCD_instReg
  7186                           ;!     _dispLCD_num
  7187                           ;!       ___awdiv
  7188                           ;!       ___awmod
  7189                           ;!       _dignum_tam (ARG)
  7190                           ;!         ___awdiv
  7191                           ;!       _dispLCD_dataReg (ARG)
  7192                           ;!       _dispLCD_lincol (ARG)
  7193                           ;!         _dispLCD_instReg
  7194                           ;!       _fifo_indice (ARG)
  7195                           ;!       _fifo_tam (ARG)
  7196                           ;!       _getContCiclos (ARG)
  7197                           ;!       _getIndicePassos (ARG)
  7198                           ;!     _posAtual
  7199                           ;!       _fifo_lerPos
  7200                           ;!       _getIndicePassos
  7201                           ;!   _resetContCiclos *
  7202                           ;!   _resetIndicePassos *
  7203                           ;!   _salva_atuadores_init *
  7204                           ;!     _ler_atuador
  7205                           ;!   _salvar_dado *
  7206                           ;!     _EEPROM_write
  7207                           ;!     ___awmod (ARG)
  7208                           ;!     _end_receita (ARG)
  7209                           ;!   _salvar_receita *
  7210                           ;!     _EEPROM_write
  7211                           ;!     ___awmod (ARG)
  7212                           ;!     _end_receita (ARG)
  7213                           ;!     _fifo_adrs (ARG)
  7214                           ;!   _serialIOscan *
  7215                           ;!     _serialIObyteShift
  7216                           ;!     _serialIOload
  7217                           ;!   _setT1 *
  7218                           ;!     ___wmul (ARG)
  7219                           ;!   _set_passo *
  7220                           ;!   _statusT1 *
  7221                           ;!   _teclado_borda *
  7222                           ;!     _teclado_scan
  7223                           ;!   _teclado_init *
  7224                           ;!   _timer1_init *
  7225                           ;!   _wifi_init *
  7226                           ;!     _initEUSART *
  7227                           ;!       ___lldiv
  7228                           ;!
  7229                           ;! _irq (ROOT)
  7230                           ;!   _intt1_1ms
  7231                           ;!
  7232                           
  7233                           ;! Address spaces:
  7234                           
  7235                           ;!Name               Size   Autos  Total    Cost      Usage
  7236                           ;!BIGRAMh            765      0       0      23        0.0%
  7237                           ;!EEDATA             100      0       0       0        0.0%
  7238                           ;!BITBANK7           100      0       0      21        0.0%
  7239                           ;!BANK7              100      0       0      22        0.0%
  7240                           ;!BITBANK6           100      0       0      19        0.0%
  7241                           ;!BANK6              100      0       0      20        0.0%
  7242                           ;!BITBANK5           100      0       0      16        0.0%
  7243                           ;!BANK5              100      0       0      17        0.0%
  7244                           ;!BITBANK4           100      0       0      14        0.0%
  7245                           ;!BANK4              100      0       0      15        0.0%
  7246                           ;!BITBANK3           100      0       0      12        0.0%
  7247                           ;!BANK3              100      0       0      13        0.0%
  7248                           ;!BITBANK2           100      0       0      10        0.0%
  7249                           ;!BANK2              100      0       0      11        0.0%
  7250                           ;!BITBANK1           100      0       0       8        0.0%
  7251                           ;!BANK1              100      0      3C       9       23.4%
  7252                           ;!BIGRAMl             98      0       0      24        0.0%
  7253                           ;!BANK0h              65     5D      5F       6       94.1%
  7254                           ;!BITBANK0h           65      0       0       4        0.0%
  7255                           ;!BITCOMRAM           5E      0       0       0        0.0%
  7256                           ;!COMRAM              5E     20      5D       1       98.9%
  7257                           ;!BITBANK0l           39      0       0       5        0.0%
  7258                           ;!BANK0l              39      0      34       7       91.2%
  7259                           ;!BITSFR               0      0       0     200        0.0%
  7260                           ;!SFR                  0      0       0     200        0.0%
  7261                           ;!STACK                0      0       0       2        0.0%
  7262                           ;!NULL                 0      0       0       0        0.0%
  7263                           ;!ABS                  0      0     12C      18        0.0%
  7264                           ;!DATA                 0      0     12C       3        0.0%
  7265                           ;!CODE                 0      0       0       0        0.0%
  7266                           
  7267                           	global	_main
  7268                           
  7269 ;; *************** function _main *****************
  7270 ;; Defined at:
  7271 ;;		line 71 in file "main.c"
  7272 ;; Parameters:    Size  Location     Type
  7273 ;;		None
  7274 ;; Auto vars:     Size  Location     Type
  7275 ;;  j               1   76[BANK0h] unsigned char 
  7276 ;;  j               1   74[BANK0h] unsigned char 
  7277 ;;  j               1   72[BANK0h] unsigned char 
  7278 ;;  j               1   70[BANK0h] unsigned char 
  7279 ;;  j               1   68[BANK0h] unsigned char 
  7280 ;;  j               1   66[BANK0h] unsigned char 
  7281 ;;  ptr             2   88[BANK0h] PTR unsigned char 
  7282 ;;		 -> main@vetor_aux(16), 
  7283 ;;  i               1   75[BANK0h] unsigned char 
  7284 ;;  i               1   73[BANK0h] unsigned char 
  7285 ;;  i               1   71[BANK0h] unsigned char 
  7286 ;;  i               1   69[BANK0h] unsigned char 
  7287 ;;  ptr             2   86[BANK0h] PTR unsigned char 
  7288 ;;		 -> main@vetor_aux(16), 
  7289 ;;  i               1   67[BANK0h] unsigned char 
  7290 ;;  i               1   65[BANK0h] unsigned char 
  7291 ;;  lema           20    0[BANK0h] unsigned char [20]
  7292 ;;  ptr             2   63[BANK0h] PTR unsigned char 
  7293 ;;		 -> main@lema(20), 
  7294 ;;  i               1   60[BANK0h] unsigned char 
  7295 ;;  vetor_aux      16   22[BANK0h] unsigned char [16]
  7296 ;;  num             2   84[BANK0h] unsigned int 
  7297 ;;  ciclos          2   80[BANK0h] unsigned int 
  7298 ;;  pt              2   61[BANK0h] PTR unsigned char 
  7299 ;;		 -> main@vetor_aux(16), 
  7300 ;;  tecla           1   92[BANK0h] unsigned char 
  7301 ;;  estado          1   91[BANK0h] unsigned char 
  7302 ;;  auxPasso        1   90[BANK0h] unsigned char 
  7303 ;;  botao           1   83[BANK0h] unsigned char 
  7304 ;;  init_cond       1   82[BANK0h] unsigned char 
  7305 ;;  meAtuadores     1   79[BANK0h] unsigned char 
  7306 ;;  vetorOut        1   78[BANK0h] unsigned char [1]
  7307 ;;  vetorIn         1   77[BANK0h] unsigned char [1]
  7308 ;;  aux             1   21[BANK0h] unsigned char 
  7309 ;;  contPassos      1   20[BANK0h] unsigned char 
  7310 ;;  atuador         1    0        unsigned char 
  7311 ;; Return value:  Size  Location     Type
  7312 ;;                  1    wreg      void 
  7313 ;; Registers used:
  7314 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack

  7315 ;; Tracked objects:
  7316 ;;		On entry : 0/0
  7317 ;;		On exit  : 0/0
  7318 ;;		Unchanged: 0/0
  7319 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7320 ;;      Params:         0       0       0       0       0       0       0       0       0       0
  7321 ;;      Locals:         0      93       0       0       0       0       0       0       0       0
  7322 ;;      Temps:          2       0       0       0       0       0       0       0       0       0
  7323 ;;      Totals:         2      93       0       0       0       0       0       0       0       0
  7324 ;;Total ram usage:       95 bytes
  7325 ;; Hardware stack levels required when called:    6
  7326 ;; This function calls:
  7327 ;;		_I2C_init
  7328 ;;		_MCP4725
  7329 ;;		___aldiv
  7330 ;;		___awmod
  7331 ;;		___lmul
  7332 ;;		___wmul
  7333 ;;		_addContCiclos
  7334 ;;		_addIndicePassos
  7335 ;;		_alt_atuador
  7336 ;;		_buscar_dado
  7337 ;;		_buscar_receita
  7338 ;;		_decodifica
  7339 ;;		_delay
  7340 ;;		_deletar_receita
  7341 ;;		_dignum_apagar
  7342 ;;		_dignum_conc
  7343 ;;		_dispLCD
  7344 ;;		_dispLCD_clr
  7345 ;;		_dispLCD_dataReg
  7346 ;;		_dispLCD_init
  7347 ;;		_dispLCD_lincol
  7348 ;;		_dispLCD_num
  7349 ;;		_dispLCD_str
  7350 ;;		_fifo_add
  7351 ;;		_fifo_add_ciclo
  7352 ;;		_fifo_add_control
  7353 ;;		_fifo_add_tempo
  7354 ;;		_fifo_adrs
  7355 ;;		_fifo_delete
  7356 ;;		_fifo_disponivel
  7357 ;;		_fifo_indice
  7358 ;;		_fifo_indicePrint_dec
  7359 ;;		_fifo_indicePrint_inc
  7360 ;;		_fifo_lerPos
  7361 ;;		_fifo_print
  7362 ;;		_fifo_tam
  7363 ;;		_formatar_receitas
  7364 ;;		_getCiclos
  7365 ;;		_getContCiclos
  7366 ;;		_getIndicePassos
  7367 ;;		_initSerialIO
  7368 ;;		_init_atuadores
  7369 ;;		_ler_atuador
  7370 ;;		_ler_sensor
  7371 ;;		_manipula_atuadores_init
  7372 ;;		_printExec
  7373 ;;		_resetContCiclos
  7374 ;;		_resetIndicePassos
  7375 ;;		_salva_atuadores_init
  7376 ;;		_salvar_dado
  7377 ;;		_salvar_receita
  7378 ;;		_serialIOscan
  7379 ;;		_setT1
  7380 ;;		_set_passo
  7381 ;;		_statusT1
  7382 ;;		_teclado_borda
  7383 ;;		_teclado_init
  7384 ;;		_timer1_init
  7385 ;;		_wifi_init
  7386 ;; This function is called by:
  7387 ;;		Startup code after reset
  7388 ;; This function uses a non-reentrant model
  7389 ;;
  7390                           psect	text0,class=CODE,space=0,reloc=2,group=0
  7391                           	file	"main.c"
  7392                           	line	71
  7393                           global __ptext0
  7394                           __ptext0:
  7395  000012                     psect	text0
  7396                           	file	"main.c"
  7397                           	line	71
  7398                           	global	__size_of_main
  7399                           	__size_of_main	equ	__end_of_main-_main
  7400  0000                     	
  7401                           _main:
  7402  000012                     ;incstack = 0
  7403                           	opt	stack 25
  7404                           	line	73
  7405                           	
  7406                           l6172:
  7407  000012                     ;main.c: 73:     dispLCD_init();
  7408                           	call	_dispLCD_init	;wreg free
  7409  000012  ECAA  F01F         	line	74
  7410                           	
  7411                           l6174:
  7412  000016                     ;main.c: 74:     teclado_init();
  7413                           	call	_teclado_init	;wreg free
  7414  000016  ECB7  F021         	line	75
  7415                           	
  7416                           l6176:
  7417  00001A                     ;main.c: 75:     timer1_init();
  7418                           	call	_timer1_init	;wreg free
  7419  00001A  EC17  F021         	line	76
  7420                           ;main.c: 76:     I2C_init(20000000);
  7421                           	movlw	low(01312D00h)
  7422  00001E  0E00               	movwf	((c:I2C_init@freq)),c
  7423  000020  6E34               	movlw	high(01312D00h)
  7424  000022  0E2D               	movwf	((c:I2C_init@freq+1)),c
  7425  000024  6E35               	movlw	low highword(01312D00h)
  7426  000026  0E31               	movwf	((c:I2C_init@freq+2)),c
  7427  000028  6E36               	movlw	high highword(01312D00h)
  7428  00002A  0E01               	movwf	((c:I2C_init@freq+3)),c
  7429  00002C  6E37               	call	_I2C_init	;wreg free
  7430  00002E  EC8D  F01F         	line	77
  7431                           ;main.c: 77:     MCP4725(0);
  7432                           	movlw	high(0)
  7433  000032  0E00               	movwf	((c:MCP4725@Vout+1)),c
  7434  000034  6E42               	movlw	low(0)
  7435  000036  0E00               	movwf	((c:MCP4725@Vout)),c
  7436  000038  6E41               	call	_MCP4725	;wreg free
  7437  00003A  ECE8  F020         	line	78
  7438                           	
  7439                           l6178:
  7440  00003E                     ;main.c: 78:     wifi_init(115200);
  7441                           	movlw	low(01C200h)
  7442  00003E  0E00               	movwf	((c:wifi_init@br)),c
  7443  000040  6E3C               	movlw	high(01C200h)
  7444  000042  0EC2               	movwf	((c:wifi_init@br+1)),c
  7445  000044  6E3D               	movlw	low highword(01C200h)
  7446  000046  0E01               	movwf	((c:wifi_init@br+2)),c
  7447  000048  6E3E               	movlw	high highword(01C200h)
  7448  00004A  0E00               	movwf	((c:wifi_init@br+3)),c
  7449  00004C  6E3F               	call	_wifi_init	;wreg free
  7450  00004E  EC2B  F020         	line	81
  7451                           	
  7452                           l6180:
  7453  000052                     ;main.c: 81:     char tecla = 0;
  7454                           	movlw	low(0)
  7455  000052  0E00               	movlb	0	; () banked
  7456  000054  0100               	movwf	((main@tecla))&0ffh
  7457  000056  6FBC               	line	82
  7458                           	
  7459                           l6182:; BSR set to: 0
  7460  000058                     
  7461                           ;main.c: 82:     char estado = 0;
  7462                           	movlw	low(0)
  7463  000058  0E00               	movwf	((main@estado))&0ffh
  7464  00005A  6FBB               	line	85
  7465                           	
  7466                           l6184:; BSR set to: 0
  7467  00005C                     
  7468                           ;main.c: 83:     char atuador;;main.c: 84:     char vetor_aux[16];;main.c: 85:     char 
                                 init_cond = 0;
  7469                           	movlw	low(0)
  7470  00005C  0E00               	movwf	((main@init_cond))&0ffh
  7471  00005E  6FB2               	line	88
  7472                           	
  7473                           l6186:; BSR set to: 0
  7474  000060                     
  7475                           ;main.c: 86:     char *pt;;main.c: 88:     char contPassos = 0;
  7476                           	movlw	low(0)
  7477  000060  0E00               	movwf	((main@contPassos))&0ffh
  7478  000062  6F74               	line	89
  7479                           	
  7480                           l6188:; BSR set to: 0
  7481  000064                     
  7482                           ;main.c: 89:     char vetorIn[1] = { 0 };
  7483                           	movff	(main@F3472),(main@vetorIn)
  7484  000064  C0F2  F0AD         	line	90
  7485                           	
  7486                           l6190:; BSR set to: 0
  7487  000068                     
  7488                           ;main.c: 90:     char vetorOut[1] = { 0 };
  7489                           	movff	(main@F3474),(main@vetorOut)
  7490  000068  C0F1  F0AE         	line	91
  7491                           	
  7492                           l6192:; BSR set to: 0
  7493  00006C                     
  7494                           ;main.c: 91:     initSerialIO( vetorIn, vetorOut, 1 );
  7495                           		movlw	low(main@vetorIn)
  7496  00006C  0EAD               	movwf	((c:initSerialIO@ptrIn)),c
  7497  00006E  6E27               	movlw	high(main@vetorIn)
  7498  000070  0E00               	movwf	((c:initSerialIO@ptrIn+1)),c
  7499  000072  6E28               
  7500                           		movlw	low(main@vetorOut)
  7501  000074  0EAE               	movwf	((c:initSerialIO@ptrOut)),c
  7502  000076  6E29               	movlw	high(main@vetorOut)
  7503  000078  0E00               	movwf	((c:initSerialIO@ptrOut+1)),c
  7504  00007A  6E2A               
  7505                           	movlw	low(01h)
  7506  00007C  0E01               	movwf	((c:initSerialIO@length)),c
  7507  00007E  6E2B               	call	_initSerialIO	;wreg free
  7508  000080  EC5B  F020         	line	92
  7509                           	
  7510                           l6194:
  7511  000084                     ;main.c: 92:     char meAtuadores = -1;
  7512                           	movlb	0	; () banked
  7513  000084  0100               	setf	((main@meAtuadores))&0ffh
  7514  000086  69AF               	line	93
  7515                           	
  7516                           l6196:; BSR set to: 0
  7517  000088                     
  7518                           ;main.c: 93:     char auxPasso = 0;
  7519                           	movlw	low(0)
  7520  000088  0E00               	movwf	((main@auxPasso))&0ffh
  7521  00008A  6FBA               	line	94
  7522                           	
  7523                           l6198:; BSR set to: 0
  7524  00008C                     
  7525                           ;main.c: 94:     char aux = 2;
  7526                           	movlw	low(02h)
  7527  00008C  0E02               	movwf	((main@aux))&0ffh
  7528  00008E  6F75               	line	95
  7529                           	
  7530                           l6200:; BSR set to: 0
  7531  000090                     
  7532                           ;main.c: 95:     unsigned int num = 0;
  7533                           	movlw	high(0)
  7534  000090  0E00               	movwf	((main@num+1))&0ffh
  7535  000092  6FB5               	movlw	low(0)
  7536  000094  0E00               	movwf	((main@num))&0ffh
  7537  000096  6FB4               	line	96
  7538                           	
  7539                           l6202:; BSR set to: 0
  7540  000098                     
  7541                           ;main.c: 96:     unsigned int ciclos = 0;
  7542                           	movlw	high(0)
  7543  000098  0E00               	movwf	((main@ciclos+1))&0ffh
  7544  00009A  6FB1               	movlw	low(0)
  7545  00009C  0E00               	movwf	((main@ciclos))&0ffh
  7546  00009E  6FB0               	line	97
  7547                           	
  7548                           l6204:; BSR set to: 0
  7549  0000A0                     
  7550                           ;main.c: 97:     char botao = 0;
  7551                           	movlw	low(0)
  7552  0000A0  0E00               	movwf	((main@botao))&0ffh
  7553  0000A2  6FB3               	goto	l6948
  7554  0000A4  EFA3  F00E         	line	110
  7555                           ;main.c: 110:     while(1)
  7556                           	
  7557                           l161:; BSR set to: 0
  7558  0000A8                     
  7559                           	line	112
  7560                           ;main.c: 111:     {;main.c: 112:          switch(estado)
  7561                           	goto	l6948
  7562  0000A8  EFA3  F00E         	line	114
  7563                           ;main.c: 113:         {;main.c: 114:              case 0:
  7564                           	
  7565                           l163:; BSR set to: 0
  7566  0000AC                     
  7567                           	line	115
  7568                           	
  7569                           l6206:; BSR set to: 0
  7570  0000AC                     
  7571                           ;main.c: 115:                             for(char i = 0; i <= 3; i++)
  7572                           	movlw	low(0)
  7573  0000AC  0E00               	movwf	((main@i))&0ffh
  7574  0000AE  6FA1               	
  7575                           l6208:; BSR set to: 0
  7576  0000B0                     
  7577                           		movlw	04h-1
  7578  0000B0  0E03               	cpfsgt	((main@i))&0ffh
  7579  0000B2  65A1               	goto	u4661
  7580  0000B4  EF5E  F000         	goto	u4660
  7581  0000B8  EF60  F000         
  7582                           u4661:
  7583  0000BC                     	goto	l6212
  7584  0000BC  EF64  F000         u4660:
  7585  0000C0                     	goto	l6230
  7586  0000C0  EFA5  F000         	
  7587                           l6210:; BSR set to: 0
  7588  0000C4                     
  7589                           	goto	l6230
  7590  0000C4  EFA5  F000         	
  7591                           l164:; BSR set to: 0
  7592  0000C8                     
  7593                           	line	117
  7594                           	
  7595                           l6212:; BSR set to: 0
  7596  0000C8                     
  7597                           ;main.c: 116:                             {;main.c: 117:                                
                                  for(char j = 0; j <= 19; j++)
  7598                           	movlw	low(0)
  7599  0000C8  0E00               	movwf	((main@j))&0ffh
  7600  0000CA  6FA2               	
  7601                           l6214:; BSR set to: 0
  7602  0000CC                     
  7603                           		movlw	014h-1
  7604  0000CC  0E13               	cpfsgt	((main@j))&0ffh
  7605  0000CE  65A2               	goto	u4671
  7606  0000D0  EF6C  F000         	goto	u4670
  7607  0000D4  EF6E  F000         
  7608                           u4671:
  7609  0000D8                     	goto	l6218
  7610  0000D8  EF72  F000         u4670:
  7611  0000DC                     	goto	l6226
  7612  0000DC  EF9A  F000         	
  7613                           l6216:; BSR set to: 0
  7614  0000E0                     
  7615                           	goto	l6226
  7616  0000E0  EF9A  F000         	
  7617                           l166:; BSR set to: 0
  7618  0000E4                     
  7619                           	line	119
  7620                           	
  7621                           l6218:; BSR set to: 0
  7622  0000E4                     
  7623                           ;main.c: 118:                                 {;main.c: 119:                            
                                          IHM.printpos(i, j, "\377");
  7624                           	lfsr	2,(_IHM)+04h
  7625  0000E4  EE20  F055         	call	u4688
  7626  0000E8  D802               	goto	u4689
  7627  0000EA  EF88  F000         u4688:
  7628  0000EE                     	push
  7629  0000EE  0005               	movwf	pclath
  7630  0000F0  6EFA               	movf	postinc2,w
  7631  0000F2  50DE               	movwf	tosl
  7632  0000F4  6EFD               	movf	postinc2,w
  7633  0000F6  50DE               	movwf	tosl+1
  7634  0000F8  6EFE               	movf	tblptru,w
  7635  0000FA  50F8               	movwf	tosl+2
  7636  0000FC  6EFF               	movf	pclath,w
  7637  0000FE  50FA               	
  7638                           	movff	(main@j),(c:dispLCD@col)
  7639  000100  C0A2  F02E         		movlw	low(STR_1)
  7640  000104  0EFD               	movwf	((c:dispLCD@str)),c
  7641  000106  6E2F               	movlw	high(STR_1)
  7642  000108  0E7F               	movwf	((c:dispLCD@str+1)),c
  7643  00010A  6E30               
  7644                           	movf	((main@i))&0ffh,w
  7645  00010C  51A1               	
  7646                           	return	;indir
  7647  00010E  0012               	u4689:
  7648  000110                     	line	120
  7649                           	
  7650                           l6220:
  7651  000110                     ;main.c: 120:                                     delay(10);
  7652                           	movlw	high(0Ah)
  7653  000110  0E00               	movwf	((c:delay@t+1)),c
  7654  000112  6E28               	movlw	low(0Ah)
  7655  000114  0E0A               	movwf	((c:delay@t)),c
  7656  000116  6E27               	call	_delay
  7657  000118  EC12  F020         	line	121
  7658                           	
  7659                           l6222:
  7660  00011C                     ;main.c: 121:                                 }
  7661                           	movlb	0	; () banked
  7662  00011C  0100               	incf	((main@j))&0ffh
  7663  00011E  2BA2               	
  7664                           l6224:; BSR set to: 0
  7665  000120                     
  7666                           		movlw	014h-1
  7667  000120  0E13               	cpfsgt	((main@j))&0ffh
  7668  000122  65A2               	goto	u4691
  7669  000124  EF96  F000         	goto	u4690
  7670  000128  EF98  F000         
  7671                           u4691:
  7672  00012C                     	goto	l6218
  7673  00012C  EF72  F000         u4690:
  7674  000130                     	goto	l6226
  7675  000130  EF9A  F000         	
  7676                           l167:; BSR set to: 0
  7677  000134                     
  7678                           	line	122
  7679                           	
  7680                           l6226:; BSR set to: 0
  7681  000134                     
  7682                           ;main.c: 122:                             }
  7683                           	incf	((main@i))&0ffh
  7684  000134  2BA1               	
  7685                           l6228:; BSR set to: 0
  7686  000136                     
  7687                           		movlw	04h-1
  7688  000136  0E03               	cpfsgt	((main@i))&0ffh
  7689  000138  65A1               	goto	u4701
  7690  00013A  EFA1  F000         	goto	u4700
  7691  00013E  EFA3  F000         
  7692                           u4701:
  7693  000142                     	goto	l6212
  7694  000142  EF64  F000         u4700:
  7695  000146                     	goto	l6230
  7696  000146  EFA5  F000         	
  7697                           l165:; BSR set to: 0
  7698  00014A                     
  7699                           	line	124
  7700                           	
  7701                           l6230:; BSR set to: 0
  7702  00014A                     
  7703                           ;main.c: 124:                             for(char i = 0; i <= 3; i++)
  7704                           	movlw	low(0)
  7705  00014A  0E00               	movwf	((main@i_636))&0ffh
  7706  00014C  6FA3               	
  7707                           l6232:; BSR set to: 0
  7708  00014E                     
  7709                           		movlw	04h-1
  7710  00014E  0E03               	cpfsgt	((main@i_636))&0ffh
  7711  000150  65A3               	goto	u4711
  7712  000152  EFAD  F000         	goto	u4710
  7713  000156  EFAF  F000         
  7714                           u4711:
  7715  00015A                     	goto	l6236
  7716  00015A  EFB3  F000         u4710:
  7717  00015E                     	goto	l6254
  7718  00015E  EFF4  F000         	
  7719                           l6234:; BSR set to: 0
  7720  000162                     
  7721                           	goto	l6254
  7722  000162  EFF4  F000         	
  7723                           l168:; BSR set to: 0
  7724  000166                     
  7725                           	line	126
  7726                           	
  7727                           l6236:; BSR set to: 0
  7728  000166                     
  7729                           ;main.c: 125:                             {;main.c: 126:                                
                                  for(char j = 0; j <= 19; j++)
  7730                           	movlw	low(0)
  7731  000166  0E00               	movwf	((main@j_637))&0ffh
  7732  000168  6FA4               	
  7733                           l6238:; BSR set to: 0
  7734  00016A                     
  7735                           		movlw	014h-1
  7736  00016A  0E13               	cpfsgt	((main@j_637))&0ffh
  7737  00016C  65A4               	goto	u4721
  7738  00016E  EFBB  F000         	goto	u4720
  7739  000172  EFBD  F000         
  7740                           u4721:
  7741  000176                     	goto	l6242
  7742  000176  EFC1  F000         u4720:
  7743  00017A                     	goto	l6250
  7744  00017A  EFE9  F000         	
  7745                           l6240:; BSR set to: 0
  7746  00017E                     
  7747                           	goto	l6250
  7748  00017E  EFE9  F000         	
  7749                           l170:; BSR set to: 0
  7750  000182                     
  7751                           	line	128
  7752                           	
  7753                           l6242:; BSR set to: 0
  7754  000182                     
  7755                           ;main.c: 127:                                 {;main.c: 128:                            
                                          IHM.printpos(i, j, " ");
  7756                           	lfsr	2,(_IHM)+04h
  7757  000182  EE20  F055         	call	u4738
  7758  000186  D802               	goto	u4739
  7759  000188  EFD7  F000         u4738:
  7760  00018C                     	push
  7761  00018C  0005               	movwf	pclath
  7762  00018E  6EFA               	movf	postinc2,w
  7763  000190  50DE               	movwf	tosl
  7764  000192  6EFD               	movf	postinc2,w
  7765  000194  50DE               	movwf	tosl+1
  7766  000196  6EFE               	movf	tblptru,w
  7767  000198  50F8               	movwf	tosl+2
  7768  00019A  6EFF               	movf	pclath,w
  7769  00019C  50FA               	
  7770                           	movff	(main@j_637),(c:dispLCD@col)
  7771  00019E  C0A4  F02E         		movlw	low(STR_2)
  7772  0001A2  0EC1               	movwf	((c:dispLCD@str)),c
  7773  0001A4  6E2F               	movlw	high(STR_2)
  7774  0001A6  0E7D               	movwf	((c:dispLCD@str+1)),c
  7775  0001A8  6E30               
  7776                           	movf	((main@i_636))&0ffh,w
  7777  0001AA  51A3               	
  7778                           	return	;indir
  7779  0001AC  0012               	u4739:
  7780  0001AE                     	line	129
  7781                           	
  7782                           l6244:
  7783  0001AE                     ;main.c: 129:                                     delay(10);
  7784                           	movlw	high(0Ah)
  7785  0001AE  0E00               	movwf	((c:delay@t+1)),c
  7786  0001B0  6E28               	movlw	low(0Ah)
  7787  0001B2  0E0A               	movwf	((c:delay@t)),c
  7788  0001B4  6E27               	call	_delay
  7789  0001B6  EC12  F020         	line	130
  7790                           	
  7791                           l6246:
  7792  0001BA                     ;main.c: 130:                                 }
  7793                           	movlb	0	; () banked
  7794  0001BA  0100               	incf	((main@j_637))&0ffh
  7795  0001BC  2BA4               	
  7796                           l6248:; BSR set to: 0
  7797  0001BE                     
  7798                           		movlw	014h-1
  7799  0001BE  0E13               	cpfsgt	((main@j_637))&0ffh
  7800  0001C0  65A4               	goto	u4741
  7801  0001C2  EFE5  F000         	goto	u4740
  7802  0001C6  EFE7  F000         
  7803                           u4741:
  7804  0001CA                     	goto	l6242
  7805  0001CA  EFC1  F000         u4740:
  7806  0001CE                     	goto	l6250
  7807  0001CE  EFE9  F000         	
  7808                           l171:; BSR set to: 0
  7809  0001D2                     
  7810                           	line	131
  7811                           	
  7812                           l6250:; BSR set to: 0
  7813  0001D2                     
  7814                           ;main.c: 131:                             }
  7815                           	incf	((main@i_636))&0ffh
  7816  0001D2  2BA3               	
  7817                           l6252:; BSR set to: 0
  7818  0001D4                     
  7819                           		movlw	04h-1
  7820  0001D4  0E03               	cpfsgt	((main@i_636))&0ffh
  7821  0001D6  65A3               	goto	u4751
  7822  0001D8  EFF0  F000         	goto	u4750
  7823  0001DC  EFF2  F000         
  7824                           u4751:
  7825  0001E0                     	goto	l6236
  7826  0001E0  EFB3  F000         u4750:
  7827  0001E4                     	goto	l6254
  7828  0001E4  EFF4  F000         	
  7829                           l169:; BSR set to: 0
  7830  0001E8                     
  7831                           	line	132
  7832                           	
  7833                           l6254:; BSR set to: 0
  7834  0001E8                     
  7835                           ;main.c: 132:                             estado = 1;
  7836                           	movlw	low(01h)
  7837  0001E8  0E01               	movwf	((main@estado))&0ffh
  7838  0001EA  6FBB               	line	133
  7839                           ;main.c: 133:                             break;
  7840                           	goto	l6950
  7841  0001EC  EF49  F00F         	line	135
  7842                           ;main.c: 135:             case 1:
  7843                           	
  7844                           l173:; BSR set to: 0
  7845  0001F0                     
  7846                           	line	136
  7847                           	
  7848                           l6256:; BSR set to: 0
  7849  0001F0                     
  7850                           ;main.c: 136:                             IHM.printpos(1, 0, "      SEGGUIT       ");
  7851                           	lfsr	2,(_IHM)+04h
  7852  0001F0  EE20  F055         	call	u4768
  7853  0001F4  D802               	goto	u4769
  7854  0001F6  EF0E  F001         u4768:
  7855  0001FA                     	push
  7856  0001FA  0005               	movwf	pclath
  7857  0001FC  6EFA               	movf	postinc2,w
  7858  0001FE  50DE               	movwf	tosl
  7859  000200  6EFD               	movf	postinc2,w
  7860  000202  50DE               	movwf	tosl+1
  7861  000204  6EFE               	movf	tblptru,w
  7862  000206  50F8               	movwf	tosl+2
  7863  000208  6EFF               	movf	pclath,w
  7864  00020A  50FA               	
  7865                           	movlw	low(0)
  7866  00020C  0E00               	movwf	((c:dispLCD@col)),c
  7867  00020E  6E2E               		movlw	low(STR_3)
  7868  000210  0EED               	movwf	((c:dispLCD@str)),c
  7869  000212  6E2F               	movlw	high(STR_3)
  7870  000214  0E7D               	movwf	((c:dispLCD@str+1)),c
  7871  000216  6E30               
  7872                           	movlw	(01h)&0ffh
  7873  000218  0E01               	
  7874                           	return	;indir
  7875  00021A  0012               	u4769:
  7876  00021C                     	line	138
  7877                           	
  7878                           l6258:
  7879  00021C                     ;main.c: 138:                             char lema[20] = "Mundo ao seu comando";
  7880                           	lfsr	2,(main@F3498)
  7881  00021C  EE20  F0BD         	lfsr	1,(main@lema)
  7882  000220  EE10  F060         	movlw	20-1
  7883  000224  0E13               u4771:
  7884  000226                     	movff	plusw2,plusw1
  7885  000226  CFDB FFE3          	decf	wreg
  7886  00022A  06E8               	bc	u4771
  7887  00022C  E2FC               
  7888                           	line	139
  7889                           	
  7890                           l6260:
  7891  00022E                     ;main.c: 139:                             char i = 0;
  7892                           	movlw	low(0)
  7893  00022E  0E00               	movlb	0	; () banked
  7894  000230  0100               	movwf	((main@i_642))&0ffh
  7895  000232  6F9C               	line	142
  7896                           	
  7897                           l6262:; BSR set to: 0
  7898  000234                     
  7899                           ;main.c: 140:                             char *ptr;;main.c: 142:                       
                                       for(ptr = lema; *ptr != 0; ptr++)
  7900                           		movlw	low(main@lema)
  7901  000234  0E60               	movwf	((main@ptr))&0ffh
  7902  000236  6F9F               	movlw	high(main@lema)
  7903  000238  0E00               	movwf	((main@ptr+1))&0ffh
  7904  00023A  6FA0               
  7905                           	goto	l6274
  7906  00023C  EF39  F001         	
  7907                           l177:; BSR set to: 0
  7908  000240                     
  7909                           	line	144
  7910                           	
  7911                           l6264:; BSR set to: 0
  7912  000240                     
  7913                           ;main.c: 143:                             {;main.c: 144:                                
                                  dispLCD_lincol( 2, i );
  7914                           	movff	(main@i_642),(c:dispLCD_lincol@col)
  7915  000240  C09C  F029         	movlw	(02h)&0ffh
  7916  000244  0E02               	
  7917                           	call	_dispLCD_lincol
  7918  000246  EC8D  F01D         	line	145
  7919                           	
  7920                           l6266:
  7921  00024A                     ;main.c: 145:                                 dispLCD_dataReg( *ptr );
  7922                           	movff	(main@ptr),fsr2l
  7923  00024A  C09F  FFD9         	movff	(main@ptr+1),fsr2h
  7924  00024E  C0A0  FFDA         	movf	indf2,w
  7925  000252  50DF               	
  7926                           	call	_dispLCD_dataReg
  7927  000254  EC9B  F01E         	line	146
  7928                           	
  7929                           l6268:
  7930  000258                     ;main.c: 146:                                 i++;
  7931                           	movlb	0	; () banked
  7932  000258  0100               	incf	((main@i_642))&0ffh
  7933  00025A  2B9C               	line	147
  7934                           	
  7935                           l6270:; BSR set to: 0
  7936  00025C                     
  7937                           ;main.c: 147:                                 delay(50);
  7938                           	movlw	high(032h)
  7939  00025C  0E00               	movwf	((c:delay@t+1)),c
  7940  00025E  6E28               	movlw	low(032h)
  7941  000260  0E32               	movwf	((c:delay@t)),c
  7942  000262  6E27               	call	_delay	;wreg free
  7943  000264  EC12  F020         	line	148
  7944                           	
  7945                           l6272:
  7946  000268                     ;main.c: 148:                             }
  7947                           	movlb	0	; () banked
  7948  000268  0100               	infsnz	((main@ptr))&0ffh
  7949  00026A  4B9F               	incf	((main@ptr+1))&0ffh
  7950  00026C  2BA0               	goto	l6274
  7951  00026E  EF39  F001         	
  7952                           l176:; BSR set to: 0
  7953  000272                     
  7954                           	
  7955                           l6274:; BSR set to: 0
  7956  000272                     
  7957                           	movff	(main@ptr),fsr2l
  7958  000272  C09F  FFD9         	movff	(main@ptr+1),fsr2h
  7959  000276  C0A0  FFDA         	movf	indf2,w
  7960  00027A  50DF               	btfss	status,2
  7961  00027C  A4D8               	goto	u4781
  7962  00027E  EF43  F001         	goto	u4780
  7963  000282  EF45  F001         u4781:
  7964  000286                     	goto	l6264
  7965  000286  EF20  F001         u4780:
  7966  00028A                     	goto	l6276
  7967  00028A  EF47  F001         	
  7968                           l178:; BSR set to: 0
  7969  00028E                     
  7970                           	line	150
  7971                           	
  7972                           l6276:; BSR set to: 0
  7973  00028E                     
  7974                           ;main.c: 150:                             setT1(1500);
  7975                           	movlw	low(05DCh)
  7976  00028E  0EDC               	movwf	((c:setT1@c)),c
  7977  000290  6E2D               	movlw	high(05DCh)
  7978  000292  0E05               	movwf	((c:setT1@c+1)),c
  7979  000294  6E2E               	movlw	low highword(05DCh)
  7980  000296  0E00               	movwf	((c:setT1@c+2)),c
  7981  000298  6E2F               	movlw	high highword(05DCh)
  7982  00029A  0E00               	movwf	((c:setT1@c+3)),c
  7983  00029C  6E30               	call	_setT1	;wreg free
  7984  00029E  EC94  F021         	line	151
  7985                           	
  7986                           l6278:
  7987  0002A2                     ;main.c: 151:                             estado = 2;
  7988                           	movlw	low(02h)
  7989  0002A2  0E02               	movlb	0	; () banked
  7990  0002A4  0100               	movwf	((main@estado))&0ffh
  7991  0002A6  6FBB               	line	152
  7992                           ;main.c: 152:                             break;
  7993                           	goto	l6950
  7994  0002A8  EF49  F00F         	line	154
  7995                           ;main.c: 154:              case 2:
  7996                           	
  7997                           l179:; BSR set to: 0
  7998  0002AC                     
  7999                           	line	155
  8000                           	
  8001                           l6280:; BSR set to: 0
  8002  0002AC                     
  8003                           ;main.c: 155:                             if(!statusT1())
  8004                           	call	_statusT1	;wreg free
  8005  0002AC  EC9E  F021         	movf	(0+?_statusT1),c,w
  8006  0002B0  5027               iorwf	(1+?_statusT1),c,w
  8007  0002B2  1028               iorwf	(2+?_statusT1),c,w
  8008  0002B4  1029               iorwf	(3+?_statusT1),c,w
  8009  0002B6  102A               	btfss	status,2
  8010  0002B8  A4D8               	goto	u4791
  8011  0002BA  EF61  F001         	goto	u4790
  8012  0002BE  EF63  F001         
  8013                           u4791:
  8014  0002C2                     	goto	l6950
  8015  0002C2  EF49  F00F         u4790:
  8016  0002C6                     	line	156
  8017                           	
  8018                           l6282:
  8019  0002C6                     ;main.c: 156:                                 estado = 8;
  8020                           	movlw	low(08h)
  8021  0002C6  0E08               	movlb	0	; () banked
  8022  0002C8  0100               	movwf	((main@estado))&0ffh
  8023  0002CA  6FBB               	goto	l6950
  8024  0002CC  EF49  F00F         	
  8025                           l180:; BSR set to: 0
  8026  0002D0                     
  8027                           	line	157
  8028                           ;main.c: 157:                             break;
  8029                           	goto	l6950
  8030  0002D0  EF49  F00F         	line	174
  8031                           ;main.c: 174:              case 8:
  8032                           	
  8033                           l181:; BSR set to: 0
  8034  0002D4                     
  8035                           	line	175
  8036                           	
  8037                           l6284:; BSR set to: 0
  8038  0002D4                     
  8039                           ;main.c: 175:                             init_atuadores();
  8040                           	call	_init_atuadores	;wreg free
  8041  0002D4  ECC1  F021         	line	176
  8042                           	
  8043                           l6286:
  8044  0002D8                     ;main.c: 176:                             IHM.print("1: INSERIR SEQUENCIA\n"
  8045                           		movlw	low(STR_4)
  8046  0002D8  0E41               	movwf	((c:dispLCD_str@str)),c
  8047  0002DA  6E2E               	movlw	high(STR_4)
  8048  0002DC  0E7C               	movwf	((c:dispLCD_str@str+1)),c
  8049  0002DE  6E2F               
  8050                           	lfsr	2,(_IHM)+02h
  8051  0002E0  EE20  F053         	call	u4808
  8052  0002E4  D802               	goto	u4809
  8053  0002E6  EF7F  F001         u4808:
  8054  0002EA                     	push
  8055  0002EA  0005               	movwf	pclath
  8056  0002EC  6EFA               	movf	postinc2,w
  8057  0002EE  50DE               	movwf	tosl
  8058  0002F0  6EFD               	movf	postinc2,w
  8059  0002F2  50DE               	movwf	tosl+1
  8060  0002F4  6EFE               	movf	tblptru,w
  8061  0002F6  50F8               	movwf	tosl+2
  8062  0002F8  6EFF               	movf	pclath,w
  8063  0002FA  50FA               	
  8064                           	return	;indir
  8065  0002FC  0012               	u4809:
  8066  0002FE                     	line	180
  8067                           	
  8068                           l6288:
  8069  0002FE                     ;main.c: 180:                             setT1(1000);
  8070                           	movlw	low(03E8h)
  8071  0002FE  0EE8               	movwf	((c:setT1@c)),c
  8072  000300  6E2D               	movlw	high(03E8h)
  8073  000302  0E03               	movwf	((c:setT1@c+1)),c
  8074  000304  6E2E               	movlw	low highword(03E8h)
  8075  000306  0E00               	movwf	((c:setT1@c+2)),c
  8076  000308  6E2F               	movlw	high highword(03E8h)
  8077  00030A  0E00               	movwf	((c:setT1@c+3)),c
  8078  00030C  6E30               	call	_setT1	;wreg free
  8079  00030E  EC94  F021         	line	181
  8080                           	
  8081                           l6290:
  8082  000312                     ;main.c: 181:                             estado = 9;
  8083                           	movlw	low(09h)
  8084  000312  0E09               	movlb	0	; () banked
  8085  000314  0100               	movwf	((main@estado))&0ffh
  8086  000316  6FBB               	line	182
  8087                           ;main.c: 182:                             break;
  8088                           	goto	l6950
  8089  000318  EF49  F00F         	line	184
  8090                           ;main.c: 184:             case 9:
  8091                           	
  8092                           l182:; BSR set to: 0
  8093  00031C                     
  8094                           	line	185
  8095                           	
  8096                           l6292:; BSR set to: 0
  8097  00031C                     
  8098                           ;main.c: 185:                             if(!statusT1())
  8099                           	call	_statusT1	;wreg free
  8100  00031C  EC9E  F021         	movf	(0+?_statusT1),c,w
  8101  000320  5027               iorwf	(1+?_statusT1),c,w
  8102  000322  1028               iorwf	(2+?_statusT1),c,w
  8103  000324  1029               iorwf	(3+?_statusT1),c,w
  8104  000326  102A               	btfss	status,2
  8105  000328  A4D8               	goto	u4811
  8106  00032A  EF99  F001         	goto	u4810
  8107  00032E  EF9B  F001         
  8108                           u4811:
  8109  000332                     	goto	l6950
  8110  000332  EF49  F00F         u4810:
  8111  000336                     	line	186
  8112                           	
  8113                           l6294:
  8114  000336                     ;main.c: 186:                                 estado = 71;
  8115                           	movlw	low(047h)
  8116  000336  0E47               	movlb	0	; () banked
  8117  000338  0100               	movwf	((main@estado))&0ffh
  8118  00033A  6FBB               	goto	l6950
  8119  00033C  EF49  F00F         	
  8120                           l183:; BSR set to: 0
  8121  000340                     
  8122                           	line	187
  8123                           ;main.c: 187:                             break;
  8124                           	goto	l6950
  8125  000340  EF49  F00F         	line	189
  8126                           ;main.c: 189:             case 71:
  8127                           	
  8128                           l184:; BSR set to: 0
  8129  000344                     
  8130                           	line	190
  8131                           	
  8132                           l6296:; BSR set to: 0
  8133  000344                     
  8134                           ;main.c: 190:                             tecla = teclado_borda();
  8135                           	call	_teclado_borda	;wreg free
  8136  000344  EC31  F01F         	movlb	0	; () banked
  8137  000348  0100               	movwf	((main@tecla))&0ffh
  8138  00034A  6FBC               	line	191
  8139                           ;main.c: 191:                             switch(tecla)
  8140                           	goto	l6308
  8141  00034C  EFBA  F001         	line	193
  8142                           ;main.c: 192:                             {;main.c: 193:                                
                                  case '1': estado = 3; break;
  8143                           	
  8144                           l186:; BSR set to: 0
  8145  000350                     
  8146                           	
  8147                           l6298:; BSR set to: 0
  8148  000350                     
  8149                           	movlw	low(03h)
  8150  000350  0E03               	movwf	((main@estado))&0ffh
  8151  000352  6FBB               	goto	l6950
  8152  000354  EF49  F00F         	line	194
  8153                           ;main.c: 194:                                 case '2': estado = 72; break;
  8154                           	
  8155                           l188:; BSR set to: 0
  8156  000358                     
  8157                           	
  8158                           l6300:; BSR set to: 0
  8159  000358                     
  8160                           	movlw	low(048h)
  8161  000358  0E48               	movwf	((main@estado))&0ffh
  8162  00035A  6FBB               	goto	l6950
  8163  00035C  EF49  F00F         	line	195
  8164                           ;main.c: 195:                                 case '3': estado = 100; break;
  8165                           	
  8166                           l189:; BSR set to: 0
  8167  000360                     
  8168                           	
  8169                           l6302:; BSR set to: 0
  8170  000360                     
  8171                           	movlw	low(064h)
  8172  000360  0E64               	movwf	((main@estado))&0ffh
  8173  000362  6FBB               	goto	l6950
  8174  000364  EF49  F00F         	line	196
  8175                           ;main.c: 196:                                 case '4': estado = 80; break;
  8176                           	
  8177                           l190:; BSR set to: 0
  8178  000368                     
  8179                           	
  8180                           l6304:; BSR set to: 0
  8181  000368                     
  8182                           	movlw	low(050h)
  8183  000368  0E50               	movwf	((main@estado))&0ffh
  8184  00036A  6FBB               	goto	l6950
  8185  00036C  EF49  F00F         	line	197
  8186                           	
  8187                           l6306:; BSR set to: 0
  8188  000370                     
  8189                           ;main.c: 197:                             }
  8190                           	goto	l6950
  8191  000370  EF49  F00F         	
  8192                           l185:; BSR set to: 0
  8193  000374                     
  8194                           	
  8195                           l6308:; BSR set to: 0
  8196  000374                     
  8197                           	movf	((main@tecla))&0ffh,w
  8198  000374  51BC               	movwf	(??_main+0+0)&0ffh,c
  8199  000376  6E45               	clrf	(??_main+0+0+1)&0ffh,c
  8200  000378  6A46               
  8201                           	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  8202                           ; Switch size 1, requested type "space"
  8203                           ; Number of cases is 1, Range of values is 0 to 0
  8204                           ; switch strategies available:
  8205                           ; Name         Instructions Cycles
  8206                           ; simple_byte            4     3 (average)
  8207                           ;	Chosen strategy is simple_byte
  8208                           
  8209                           	movf ??_main+0+1,c,w
  8210  00037A  5046               	xorlw	0^0	; case 0
  8211  00037C  0A00               	skipnz
  8212  00037E  B4D8               	goto	l7816
  8213  000380  EFC4  F001         	goto	l6950
  8214  000384  EF49  F00F         	
  8215                           l7816:; BSR set to: 0
  8216  000388                     
  8217                           ; Switch size 1, requested type "space"
  8218                           ; Number of cases is 4, Range of values is 49 to 52
  8219                           ; switch strategies available:
  8220                           ; Name         Instructions Cycles
  8221                           ; simple_byte           13     7 (average)
  8222                           ;	Chosen strategy is simple_byte
  8223                           
  8224                           	movf ??_main+0+0,c,w
  8225  000388  5045               	xorlw	49^0	; case 49
  8226  00038A  0A31               	skipnz
  8227  00038C  B4D8               	goto	l6298
  8228  00038E  EFA8  F001         	xorlw	50^49	; case 50
  8229  000392  0A03               	skipnz
  8230  000394  B4D8               	goto	l6300
  8231  000396  EFAC  F001         	xorlw	51^50	; case 51
  8232  00039A  0A01               	skipnz
  8233  00039C  B4D8               	goto	l6302
  8234  00039E  EFB0  F001         	xorlw	52^51	; case 52
  8235  0003A2  0A07               	skipnz
  8236  0003A4  B4D8               	goto	l6304
  8237  0003A6  EFB4  F001         	goto	l6950
  8238  0003AA  EF49  F00F         
  8239                           	
  8240                           l187:; BSR set to: 0
  8241  0003AE                     
  8242                           	line	198
  8243                           ;main.c: 198:                             break;
  8244                           	goto	l6950
  8245  0003AE  EF49  F00F         	line	200
  8246                           ;main.c: 200:              case 100:
  8247                           	
  8248                           l191:; BSR set to: 0
  8249  0003B2                     
  8250                           	line	202
  8251                           	
  8252                           l6310:; BSR set to: 0
  8253  0003B2                     
  8254                           ;main.c: 202:                             buscar_dado(10, 10, &init_cond);
  8255                           	movlw	low(0Ah)
  8256  0003B2  0E0A               	movwf	((c:buscar_dado@col)),c
  8257  0003B4  6E2D               		movlw	low(main@init_cond)
  8258  0003B6  0EB2               	movwf	((c:buscar_dado@data)),c
  8259  0003B8  6E2E               	movlw	high(main@init_cond)
  8260  0003BA  0E00               	movwf	((c:buscar_dado@data+1)),c
  8261  0003BC  6E2F               
  8262                           	movlw	(0Ah)&0ffh
  8263  0003BE  0E0A               	
  8264                           	call	_buscar_dado
  8265  0003C0  EC9E  F020         	line	203
  8266                           	
  8267                           l6312:
  8268  0003C4                     ;main.c: 203:                             manipula_atuadores_init(init_cond);
  8269                           	movlb	0	; () banked
  8270  0003C4  0100               	movf	((main@init_cond))&0ffh,w
  8271  0003C6  51B2               	
  8272                           	call	_manipula_atuadores_init
  8273  0003C8  EC8B  F01C         	line	205
  8274                           	
  8275                           l6314:
  8276  0003CC                     ;main.c: 205:                             EEPROM.buscar(11, vetor_aux);
  8277                           	lfsr	2,(_EEPROM)+02h
  8278  0003CC  EE20  F049         	call	u4828
  8279  0003D0  D802               	goto	u4829
  8280  0003D2  EFFA  F001         u4828:
  8281  0003D6                     	push
  8282  0003D6  0005               	movwf	pclath
  8283  0003D8  6EFA               	movf	postinc2,w
  8284  0003DA  50DE               	movwf	tosl
  8285  0003DC  6EFD               	movf	postinc2,w
  8286  0003DE  50DE               	movwf	tosl+1
  8287  0003E0  6EFE               	movf	tblptru,w
  8288  0003E2  50F8               	movwf	tosl+2
  8289  0003E4  6EFF               	movf	pclath,w
  8290  0003E6  50FA               	
  8291                           		movlw	low(main@vetor_aux)
  8292  0003E8  0E76               	movwf	((c:buscar_receita@data)),c
  8293  0003EA  6E2D               	movlw	high(main@vetor_aux)
  8294  0003EC  0E00               	movwf	((c:buscar_receita@data+1)),c
  8295  0003EE  6E2E               
  8296                           	movlw	(0Bh)&0ffh
  8297  0003F0  0E0B               	
  8298                           	return	;indir
  8299  0003F2  0012               	u4829:
  8300  0003F4                     	line	206
  8301                           	
  8302                           l6316:
  8303  0003F4                     ;main.c: 206:                             pt = vetor_aux;
  8304                           		movlw	low(main@vetor_aux)
  8305  0003F4  0E76               	movlb	0	; () banked
  8306  0003F6  0100               	movwf	((main@pt))&0ffh
  8307  0003F8  6F9D               	movlw	high(main@vetor_aux)
  8308  0003FA  0E00               	movwf	((main@pt+1))&0ffh
  8309  0003FC  6F9E               
  8310                           	line	208
  8311                           	
  8312                           l6318:; BSR set to: 0
  8313  0003FE                     
  8314                           ;main.c: 208:                             if(*pt == 0xFF)
  8315                           	movff	(main@pt),fsr2l
  8316  0003FE  C09D  FFD9         	movff	(main@pt+1),fsr2h
  8317  000402  C09E  FFDA         	incf	postinc2,w
  8318  000406  28DE               	btfss	status,2
  8319  000408  A4D8               	goto	u4831
  8320  00040A  EF09  F002         	goto	u4830
  8321  00040E  EF0B  F002         
  8322                           u4831:
  8323  000412                     	goto	l6324
  8324  000412  EF29  F002         u4830:
  8325  000416                     	line	210
  8326                           	
  8327                           l6320:; BSR set to: 0
  8328  000416                     
  8329                           ;main.c: 209:                             {;main.c: 210:                                
                                  EEPROM.deletar(tecla % 0x30);
  8330                           	lfsr	2,(_EEPROM)+04h
  8331  000416  EE20  F04B         	call	u4848
  8332  00041A  D802               	goto	u4849
  8333  00041C  EF24  F002         u4848:
  8334  000420                     	push
  8335  000420  0005               	movwf	pclath
  8336  000422  6EFA               	movf	postinc2,w
  8337  000424  50DE               	movwf	tosl
  8338  000426  6EFD               	movf	postinc2,w
  8339  000428  50DE               	movwf	tosl+1
  8340  00042A  6EFE               	movf	tblptru,w
  8341  00042C  50F8               	movwf	tosl+2
  8342  00042E  6EFF               	movf	pclath,w
  8343  000430  50FA               	
  8344                           	movff	(main@tecla),(c:___awmod@dividend)
  8345  000432  C0BC  F027         	clrf	((c:___awmod@dividend+1)),c
  8346  000436  6A28               	movlw	high(030h)
  8347  000438  0E00               	movwf	((c:___awmod@divisor+1)),c
  8348  00043A  6E2A               	movlw	low(030h)
  8349  00043C  0E30               	movwf	((c:___awmod@divisor)),c
  8350  00043E  6E29               	call	___awmod
  8351  000440  EC12  F019         	movf	(0+?___awmod),c,w
  8352  000444  5027               	
  8353                           	return	;indir
  8354  000446  0012               	u4849:
  8355  000448                     	line	211
  8356                           	
  8357                           l6322:
  8358  000448                     ;main.c: 211:                                 vetor_aux[0] = 0;
  8359                           	movlw	low(0)
  8360  000448  0E00               	movlb	0	; () banked
  8361  00044A  0100               	movwf	((main@vetor_aux))&0ffh
  8362  00044C  6F76               	goto	l6324
  8363  00044E  EF29  F002         	line	212
  8364                           ;main.c: 212:                             }
  8365                           	
  8366                           l192:; BSR set to: 0
  8367  000452                     
  8368                           	line	215
  8369                           	
  8370                           l6324:; BSR set to: 0
  8371  000452                     
  8372                           ;main.c: 215:                             for(char *ptr = vetor_aux; *ptr != 0; ptr++)
  8373                           		movlw	low(main@vetor_aux)
  8374  000452  0E76               	movwf	((main@ptr_645))&0ffh
  8375  000454  6FB6               	movlw	high(main@vetor_aux)
  8376  000456  0E00               	movwf	((main@ptr_645+1))&0ffh
  8377  000458  6FB7               
  8378                           	goto	l6362
  8379  00045A  EF10  F003         	
  8380                           l194:; BSR set to: 0
  8381  00045E                     
  8382                           	line	217
  8383                           	
  8384                           l6326:; BSR set to: 0
  8385  00045E                     
  8386                           ;main.c: 216:                             {;main.c: 217:                                
                                  if(*ptr <= 0x64 || *ptr == 0xFE)
  8387                           	movff	(main@ptr_645),fsr2l
  8388  00045E  C0B6  FFD9         	movff	(main@ptr_645+1),fsr2h
  8389  000462  C0B7  FFDA         		movlw	065h-1
  8390  000466  0E64               	cpfsgt	indf2
  8391  000468  64DF               	goto	u4851
  8392  00046A  EF39  F002         	goto	u4850
  8393  00046E  EF3B  F002         
  8394                           u4851:
  8395  000472                     	goto	l6330
  8396  000472  EF4A  F002         u4850:
  8397  000476                     	
  8398                           l6328:; BSR set to: 0
  8399  000476                     
  8400                           	movff	(main@ptr_645),fsr2l
  8401  000476  C0B6  FFD9         	movff	(main@ptr_645+1),fsr2h
  8402  00047A  C0B7  FFDA         	movlw	254
  8403  00047E  0EFE               	xorwf	postinc2,w
  8404  000480  18DE               	btfss	status,2
  8405  000482  A4D8               	goto	u4861
  8406  000484  EF46  F002         	goto	u4860
  8407  000488  EF48  F002         
  8408                           u4861:
  8409  00048C                     	goto	l6334
  8410  00048C  EF59  F002         u4860:
  8411  000490                     	goto	l6330
  8412  000490  EF4A  F002         	
  8413                           l197:; BSR set to: 0
  8414  000494                     
  8415                           	line	219
  8416                           	
  8417                           l6330:; BSR set to: 0
  8418  000494                     
  8419                           ;main.c: 218:                                 {;main.c: 219:                            
                                          decodifica(&*ptr);
  8420                           		movff	(main@ptr_645),(c:decodifica@d)
  8421  000494  C0B6  F027         	movff	(main@ptr_645+1),(c:decodifica@d+1)
  8422  000498  C0B7  F028         
  8423                           	call	_decodifica
  8424  00049C  ECCB  F014         	line	220
  8425                           	
  8426                           l6332:
  8427  0004A0                     ;main.c: 220:                                     fifo_add_control(*ptr);
  8428                           	movff	(main@ptr_645),fsr2l
  8429  0004A0  C0B6  FFD9         	movff	(main@ptr_645+1),fsr2h
  8430  0004A4  C0B7  FFDA         	movf	indf2,w
  8431  0004A8  50DF               	
  8432                           	call	_fifo_add_control
  8433  0004AA  EC1F  F01E         	line	221
  8434                           ;main.c: 221:                                 }
  8435                           	goto	l6358
  8436  0004AE  EF09  F003         	line	222
  8437                           ;main.c: 222:                                 else if (*ptr > 0x64 && *ptr <= 0xDC)
  8438                           	
  8439                           l195:
  8440  0004B2                     	
  8441                           l6334:
  8442  0004B2                     	movff	(main@ptr_645),fsr2l
  8443  0004B2  C0B6  FFD9         	movff	(main@ptr_645+1),fsr2h
  8444  0004B6  C0B7  FFDA         		movlw	065h-1
  8445  0004BA  0E64               	cpfsgt	indf2
  8446  0004BC  64DF               	goto	u4871
  8447  0004BE  EF63  F002         	goto	u4870
  8448  0004C2  EF65  F002         
  8449                           u4871:
  8450  0004C6                     	goto	l6342
  8451  0004C6  EF80  F002         u4870:
  8452  0004CA                     	
  8453                           l6336:
  8454  0004CA                     	movff	(main@ptr_645),fsr2l
  8455  0004CA  C0B6  FFD9         	movff	(main@ptr_645+1),fsr2h
  8456  0004CE  C0B7  FFDA         		movlw	0DDh-0
  8457  0004D2  0EDD               	cpfslt	indf2
  8458  0004D4  60DF               	goto	u4881
  8459  0004D6  EF6F  F002         	goto	u4880
  8460  0004DA  EF71  F002         
  8461                           u4881:
  8462  0004DE                     	goto	l6342
  8463  0004DE  EF80  F002         u4880:
  8464  0004E2                     	line	224
  8465                           	
  8466                           l6338:
  8467  0004E2                     ;main.c: 223:                                 {;main.c: 224:                            
                                          decodifica(&*ptr);
  8468                           		movff	(main@ptr_645),(c:decodifica@d)
  8469  0004E2  C0B6  F027         	movff	(main@ptr_645+1),(c:decodifica@d+1)
  8470  0004E6  C0B7  F028         
  8471                           	call	_decodifica	;wreg free
  8472  0004EA  ECCB  F014         	line	225
  8473                           	
  8474                           l6340:
  8475  0004EE                     ;main.c: 225:                                     fifo_add_tempo(*ptr);
  8476                           	movff	(main@ptr_645),fsr2l
  8477  0004EE  C0B6  FFD9         	movff	(main@ptr_645+1),fsr2h
  8478  0004F2  C0B7  FFDA         	movf	indf2,w
  8479  0004F6  50DF               	
  8480                           	call	_fifo_add_tempo
  8481  0004F8  ECBF  F01C         	line	226
  8482                           ;main.c: 226:                                 }
  8483                           	goto	l6358
  8484  0004FC  EF09  F003         	line	227
  8485                           ;main.c: 227:                                 else
  8486                           	
  8487                           l199:
  8488  000500                     	line	229
  8489                           	
  8490                           l6342:
  8491  000500                     ;main.c: 228:                                 {;main.c: 229:                            
                                          decodifica(&*ptr);
  8492                           		movff	(main@ptr_645),(c:decodifica@d)
  8493  000500  C0B6  F027         	movff	(main@ptr_645+1),(c:decodifica@d+1)
  8494  000504  C0B7  F028         
  8495                           	call	_decodifica	;wreg free
  8496  000508  ECCB  F014         	line	230
  8497                           ;main.c: 230:                                     switch( *ptr )
  8498                           	goto	l6348
  8499  00050C  EFA0  F002         	line	232
  8500                           ;main.c: 231:                                     {;main.c: 232:                        
                                                  case 'A':
  8501                           	
  8502                           l202:
  8503  000510                     	goto	l6344
  8504  000510  EF96  F002         	line	233
  8505                           ;main.c: 233:                                         case 'B':
  8506                           	
  8507                           l203:
  8508  000514                     	goto	l6344
  8509  000514  EF96  F002         	line	234
  8510                           ;main.c: 234:                                         case 'C':
  8511                           	
  8512                           l204:
  8513  000518                     	goto	l6344
  8514  000518  EF96  F002         	line	235
  8515                           ;main.c: 235:                                         case 'D':
  8516                           	
  8517                           l205:
  8518  00051C                     	goto	l6344
  8519  00051C  EF96  F002         	line	236
  8520                           ;main.c: 236:                                         case 'a':
  8521                           	
  8522                           l206:
  8523  000520                     	goto	l6344
  8524  000520  EF96  F002         	line	237
  8525                           ;main.c: 237:                                         case 'b':
  8526                           	
  8527                           l207:
  8528  000524                     	goto	l6344
  8529  000524  EF96  F002         	line	238
  8530                           ;main.c: 238:                                         case 'c':
  8531                           	
  8532                           l208:
  8533  000528                     	goto	l6344
  8534  000528  EF96  F002         	line	239
  8535                           ;main.c: 239:                                         case 'd':
  8536                           	
  8537                           l209:
  8538  00052C                     	line	240
  8539                           	
  8540                           l6344:
  8541  00052C                     ;main.c: 240:                                                 *ptr &= ~0x20;
  8542                           	movff	(main@ptr_645),fsr2l
  8543  00052C  C0B6  FFD9         	movff	(main@ptr_645+1),fsr2h
  8544  000530  C0B7  FFDA         	movlw	0DFh
  8545  000534  0EDF               	andwf	indf2
  8546  000536  16DF               	line	241
  8547                           ;main.c: 241:                                                 break;
  8548                           	goto	l6350
  8549  000538  EFD1  F002         	line	242
  8550                           	
  8551                           l6346:
  8552  00053C                     ;main.c: 242:                                         }
  8553                           	goto	l6350
  8554  00053C  EFD1  F002         	
  8555                           l201:
  8556  000540                     	
  8557                           l6348:
  8558  000540                     	movff	(main@ptr_645),fsr2l
  8559  000540  C0B6  FFD9         	movff	(main@ptr_645+1),fsr2h
  8560  000544  C0B7  FFDA         	movf	indf2,w
  8561  000548  50DF               	movwf	(??_main+0+0)&0ffh,c
  8562  00054A  6E45               	clrf	(??_main+0+0+1)&0ffh,c
  8563  00054C  6A46               
  8564                           	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  8565                           ; Switch size 1, requested type "space"
  8566                           ; Number of cases is 1, Range of values is 0 to 0
  8567                           ; switch strategies available:
  8568                           ; Name         Instructions Cycles
  8569                           ; simple_byte            4     3 (average)
  8570                           ;	Chosen strategy is simple_byte
  8571                           
  8572                           	movf ??_main+0+1,c,w
  8573  00054E  5046               	xorlw	0^0	; case 0
  8574  000550  0A00               	skipnz
  8575  000552  B4D8               	goto	l7818
  8576  000554  EFAE  F002         	goto	l6350
  8577  000558  EFD1  F002         	
  8578                           l7818:
  8579  00055C                     ; Switch size 1, requested type "space"
  8580                           ; Number of cases is 8, Range of values is 65 to 100
  8581                           ; switch strategies available:
  8582                           ; Name         Instructions Cycles
  8583                           ; simple_byte           25    13 (average)
  8584                           ;	Chosen strategy is simple_byte
  8585                           
  8586                           	movf ??_main+0+0,c,w
  8587  00055C  5045               	xorlw	65^0	; case 65
  8588  00055E  0A41               	skipnz
  8589  000560  B4D8               	goto	l6344
  8590  000562  EF96  F002         	xorlw	66^65	; case 66
  8591  000566  0A03               	skipnz
  8592  000568  B4D8               	goto	l6344
  8593  00056A  EF96  F002         	xorlw	67^66	; case 67
  8594  00056E  0A01               	skipnz
  8595  000570  B4D8               	goto	l6344
  8596  000572  EF96  F002         	xorlw	68^67	; case 68
  8597  000576  0A07               	skipnz
  8598  000578  B4D8               	goto	l6344
  8599  00057A  EF96  F002         	xorlw	97^68	; case 97
  8600  00057E  0A25               	skipnz
  8601  000580  B4D8               	goto	l6344
  8602  000582  EF96  F002         	xorlw	98^97	; case 98
  8603  000586  0A03               	skipnz
  8604  000588  B4D8               	goto	l6344
  8605  00058A  EF96  F002         	xorlw	99^98	; case 99
  8606  00058E  0A01               	skipnz
  8607  000590  B4D8               	goto	l6344
  8608  000592  EF96  F002         	xorlw	100^99	; case 100
  8609  000596  0A07               	skipnz
  8610  000598  B4D8               	goto	l6344
  8611  00059A  EF96  F002         	goto	l6350
  8612  00059E  EFD1  F002         
  8613                           	
  8614                           l210:
  8615  0005A2                     	line	243
  8616                           	
  8617                           l6350:
  8618  0005A2                     ;main.c: 243:                                         alt_atuador(*ptr);
  8619                           	movff	(main@ptr_645),fsr2l
  8620  0005A2  C0B6  FFD9         	movff	(main@ptr_645+1),fsr2h
  8621  0005A6  C0B7  FFDA         	movf	indf2,w
  8622  0005AA  50DF               	
  8623                           	call	_alt_atuador
  8624  0005AC  EC94  F01A         	line	244
  8625                           ;main.c: 244:                                         fifo_add( ler_atuador(*ptr) ? *ptr
                                  : *ptr|0x20 );
  8626                           	movff	(main@ptr_645),fsr2l
  8627  0005B0  C0B6  FFD9         	movff	(main@ptr_645+1),fsr2h
  8628  0005B4  C0B7  FFDA         	movf	indf2,w
  8629  0005B8  50DF               	
  8630                           	call	_ler_atuador
  8631  0005BA  EC7E  F019         	iorlw	0
  8632  0005BE  0900               	btfss	status,2
  8633  0005C0  A4D8               	goto	u4891
  8634  0005C2  EFE5  F002         	goto	u4890
  8635  0005C6  EFE7  F002         u4891:
  8636  0005CA                     	goto	l6354
  8637  0005CA  EFF6  F002         u4890:
  8638  0005CE                     	
  8639                           l6352:
  8640  0005CE                     	movff	(main@ptr_645),fsr2l
  8641  0005CE  C0B6  FFD9         	movff	(main@ptr_645+1),fsr2h
  8642  0005D2  C0B7  FFDA         	movf	indf2,w
  8643  0005D6  50DF               	movwf	(??_main+0+0)&0ffh,c
  8644  0005D8  6E45               	clrf	(??_main+0+0+1)&0ffh,c
  8645  0005DA  6A46               
  8646                           	movlw	020h
  8647  0005DC  0E20               	iorwf	(??_main+0+0),c,w
  8648  0005DE  1045               	movlb	0	; () banked
  8649  0005E0  0100               	movwf	((_main$646))&0ffh
  8650  0005E2  6F86               	movf	(??_main+0+1),c,w
  8651  0005E4  5046               	movwf	1+((_main$646))&0ffh
  8652  0005E6  6F87               	goto	l6356
  8653  0005E8  EF02  F003         	
  8654                           l212:; BSR set to: 0
  8655  0005EC                     
  8656                           	
  8657                           l6354:
  8658  0005EC                     	movff	(main@ptr_645),fsr2l
  8659  0005EC  C0B6  FFD9         	movff	(main@ptr_645+1),fsr2h
  8660  0005F0  C0B7  FFDA         	movf	indf2,w
  8661  0005F4  50DF               	movwf	(??_main+0+0)&0ffh,c
  8662  0005F6  6E45               	movf	((??_main+0+0)),c,w
  8663  0005F8  5045               	movlb	0	; () banked
  8664  0005FA  0100               	movwf	((_main$646))&0ffh
  8665  0005FC  6F86               	clrf	((_main$646+1))&0ffh
  8666  0005FE  6B87               	goto	l6356
  8667  000600  EF02  F003         	
  8668                           l214:; BSR set to: 0
  8669  000604                     
  8670                           	
  8671                           l6356:; BSR set to: 0
  8672  000604                     
  8673                           	movf	((_main$646))&0ffh,w
  8674  000604  5186               	
  8675                           	call	_fifo_add
  8676  000606  ECF3  F01C         	goto	l6358
  8677  00060A  EF09  F003         	line	245
  8678                           ;main.c: 245:                                     }
  8679                           	
  8680                           l200:
  8681  00060E                     	goto	l6358
  8682  00060E  EF09  F003         	
  8683                           l198:
  8684  000612                     	line	246
  8685                           	
  8686                           l6358:
  8687  000612                     ;main.c: 246:                                 fifo_print();
  8688                           	call	_fifo_print	;wreg free
  8689  000612  ECCD  F010         	line	247
  8690                           	
  8691                           l6360:
  8692  000616                     ;main.c: 247:                             }
  8693                           	movlb	0	; () banked
  8694  000616  0100               	infsnz	((main@ptr_645))&0ffh
  8695  000618  4BB6               	incf	((main@ptr_645+1))&0ffh
  8696  00061A  2BB7               	goto	l6362
  8697  00061C  EF10  F003         	
  8698                           l193:; BSR set to: 0
  8699  000620                     
  8700                           	
  8701                           l6362:; BSR set to: 0
  8702  000620                     
  8703                           	movff	(main@ptr_645),fsr2l
  8704  000620  C0B6  FFD9         	movff	(main@ptr_645+1),fsr2h
  8705  000624  C0B7  FFDA         	movf	indf2,w
  8706  000628  50DF               	btfss	status,2
  8707  00062A  A4D8               	goto	u4901
  8708  00062C  EF1A  F003         	goto	u4900
  8709  000630  EF1C  F003         u4901:
  8710  000634                     	goto	l6326
  8711  000634  EF2F  F002         u4900:
  8712  000638                     	goto	l6364
  8713  000638  EF1E  F003         	
  8714                           l215:; BSR set to: 0
  8715  00063C                     
  8716                           	line	249
  8717                           	
  8718                           l6364:; BSR set to: 0
  8719  00063C                     
  8720                           ;main.c: 249:                             dispLCD_clr();
  8721                           	call	_dispLCD_clr	;wreg free
  8722  00063C  ECDC  F021         	line	250
  8723                           	
  8724                           l6366:
  8725  000640                     ;main.c: 250:                             estado = 16;
  8726                           	movlw	low(010h)
  8727  000640  0E10               	movlb	0	; () banked
  8728  000642  0100               	movwf	((main@estado))&0ffh
  8729  000644  6FBB               	line	251
  8730                           ;main.c: 251:                             break;
  8731                           	goto	l6950
  8732  000646  EF49  F00F         	line	253
  8733                           ;main.c: 253:              case 80:
  8734                           	
  8735                           l216:; BSR set to: 0
  8736  00064A                     
  8737                           	line	254
  8738                           	
  8739                           l6368:; BSR set to: 0
  8740  00064A                     
  8741                           ;main.c: 254:                             dispLCD_clr();
  8742                           	call	_dispLCD_clr	;wreg free
  8743  00064A  ECDC  F021         	line	255
  8744                           	
  8745                           l6370:
  8746  00064E                     ;main.c: 255:                             dispLCD(0,0,"1: VERIFICAR MEMORIA");
  8747                           	movlw	low(0)
  8748  00064E  0E00               	movwf	((c:dispLCD@col)),c
  8749  000650  6E2E               		movlw	low(STR_5)
  8750  000652  0E28               	movwf	((c:dispLCD@str)),c
  8751  000654  6E2F               	movlw	high(STR_5)
  8752  000656  0E7F               	movwf	((c:dispLCD@str+1)),c
  8753  000658  6E30               
  8754                           	movlw	(0)&0ffh
  8755  00065A  0E00               	
  8756                           	call	_dispLCD
  8757  00065C  EC73  F01E         	line	256
  8758                           	
  8759                           l6372:
  8760  000660                     ;main.c: 256:                             dispLCD(1,0,"2: LIMPAR MEMORIA   ");
  8761                           	movlw	low(0)
  8762  000660  0E00               	movwf	((c:dispLCD@col)),c
  8763  000662  6E2E               		movlw	low(STR_6)
  8764  000664  0EAA               	movwf	((c:dispLCD@str)),c
  8765  000666  6E2F               	movlw	high(STR_6)
  8766  000668  0E7E               	movwf	((c:dispLCD@str+1)),c
  8767  00066A  6E30               
  8768                           	movlw	(01h)&0ffh
  8769  00066C  0E01               	
  8770                           	call	_dispLCD
  8771  00066E  EC73  F01E         	line	258
  8772                           	
  8773                           l6374:
  8774  000672                     ;main.c: 258:                             setT1(1000);
  8775                           	movlw	low(03E8h)
  8776  000672  0EE8               	movwf	((c:setT1@c)),c
  8777  000674  6E2D               	movlw	high(03E8h)
  8778  000676  0E03               	movwf	((c:setT1@c+1)),c
  8779  000678  6E2E               	movlw	low highword(03E8h)
  8780  00067A  0E00               	movwf	((c:setT1@c+2)),c
  8781  00067C  6E2F               	movlw	high highword(03E8h)
  8782  00067E  0E00               	movwf	((c:setT1@c+3)),c
  8783  000680  6E30               	call	_setT1	;wreg free
  8784  000682  EC94  F021         	line	259
  8785                           	
  8786                           l6376:
  8787  000686                     ;main.c: 259:                             estado = 81;
  8788                           	movlw	low(051h)
  8789  000686  0E51               	movlb	0	; () banked
  8790  000688  0100               	movwf	((main@estado))&0ffh
  8791  00068A  6FBB               	line	260
  8792                           ;main.c: 260:                             break;
  8793                           	goto	l6950
  8794  00068C  EF49  F00F         	line	262
  8795                           ;main.c: 262:              case 81:
  8796                           	
  8797                           l217:; BSR set to: 0
  8798  000690                     
  8799                           	line	263
  8800                           	
  8801                           l6378:; BSR set to: 0
  8802  000690                     
  8803                           ;main.c: 263:                             if(!statusT1())
  8804                           	call	_statusT1	;wreg free
  8805  000690  EC9E  F021         	movf	(0+?_statusT1),c,w
  8806  000694  5027               iorwf	(1+?_statusT1),c,w
  8807  000696  1028               iorwf	(2+?_statusT1),c,w
  8808  000698  1029               iorwf	(3+?_statusT1),c,w
  8809  00069A  102A               	btfss	status,2
  8810  00069C  A4D8               	goto	u4911
  8811  00069E  EF53  F003         	goto	u4910
  8812  0006A2  EF55  F003         
  8813                           u4911:
  8814  0006A6                     	goto	l6950
  8815  0006A6  EF49  F00F         u4910:
  8816  0006AA                     	line	264
  8817                           	
  8818                           l6380:
  8819  0006AA                     ;main.c: 264:                                 estado = 82;
  8820                           	movlw	low(052h)
  8821  0006AA  0E52               	movlb	0	; () banked
  8822  0006AC  0100               	movwf	((main@estado))&0ffh
  8823  0006AE  6FBB               	goto	l6950
  8824  0006B0  EF49  F00F         	
  8825                           l218:; BSR set to: 0
  8826  0006B4                     
  8827                           	line	265
  8828                           ;main.c: 265:                             break;
  8829                           	goto	l6950
  8830  0006B4  EF49  F00F         	line	267
  8831                           ;main.c: 267:              case 82:
  8832                           	
  8833                           l219:; BSR set to: 0
  8834  0006B8                     
  8835                           	line	268
  8836                           	
  8837                           l6382:; BSR set to: 0
  8838  0006B8                     
  8839                           ;main.c: 268:                             tecla = teclado_borda();
  8840                           	call	_teclado_borda	;wreg free
  8841  0006B8  EC31  F01F         	movlb	0	; () banked
  8842  0006BC  0100               	movwf	((main@tecla))&0ffh
  8843  0006BE  6FBC               	line	269
  8844                           ;main.c: 269:                             switch(tecla)
  8845                           	goto	l6392
  8846  0006C0  EF70  F003         	line	271
  8847                           ;main.c: 270:                             {;main.c: 271:                                
                                  case '1': estado = 83; break;
  8848                           	
  8849                           l221:; BSR set to: 0
  8850  0006C4                     
  8851                           	
  8852                           l6384:; BSR set to: 0
  8853  0006C4                     
  8854                           	movlw	low(053h)
  8855  0006C4  0E53               	movwf	((main@estado))&0ffh
  8856  0006C6  6FBB               	goto	l6950
  8857  0006C8  EF49  F00F         	line	272
  8858                           ;main.c: 272:                                 case '2': estado = 84; break;
  8859                           	
  8860                           l223:; BSR set to: 0
  8861  0006CC                     
  8862                           	
  8863                           l6386:; BSR set to: 0
  8864  0006CC                     
  8865                           	movlw	low(054h)
  8866  0006CC  0E54               	movwf	((main@estado))&0ffh
  8867  0006CE  6FBB               	goto	l6950
  8868  0006D0  EF49  F00F         	line	273
  8869                           ;main.c: 273:                                 case '*': estado = 8; break;
  8870                           	
  8871                           l224:; BSR set to: 0
  8872  0006D4                     
  8873                           	
  8874                           l6388:; BSR set to: 0
  8875  0006D4                     
  8876                           	movlw	low(08h)
  8877  0006D4  0E08               	movwf	((main@estado))&0ffh
  8878  0006D6  6FBB               	goto	l6950
  8879  0006D8  EF49  F00F         	line	274
  8880                           	
  8881                           l6390:; BSR set to: 0
  8882  0006DC                     
  8883                           ;main.c: 274:                             }
  8884                           	goto	l6950
  8885  0006DC  EF49  F00F         	
  8886                           l220:; BSR set to: 0
  8887  0006E0                     
  8888                           	
  8889                           l6392:; BSR set to: 0
  8890  0006E0                     
  8891                           	movf	((main@tecla))&0ffh,w
  8892  0006E0  51BC               	movwf	(??_main+0+0)&0ffh,c
  8893  0006E2  6E45               	clrf	(??_main+0+0+1)&0ffh,c
  8894  0006E4  6A46               
  8895                           	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  8896                           ; Switch size 1, requested type "space"
  8897                           ; Number of cases is 1, Range of values is 0 to 0
  8898                           ; switch strategies available:
  8899                           ; Name         Instructions Cycles
  8900                           ; simple_byte            4     3 (average)
  8901                           ;	Chosen strategy is simple_byte
  8902                           
  8903                           	movf ??_main+0+1,c,w
  8904  0006E6  5046               	xorlw	0^0	; case 0
  8905  0006E8  0A00               	skipnz
  8906  0006EA  B4D8               	goto	l7820
  8907  0006EC  EF7A  F003         	goto	l6950
  8908  0006F0  EF49  F00F         	
  8909                           l7820:; BSR set to: 0
  8910  0006F4                     
  8911                           ; Switch size 1, requested type "space"
  8912                           ; Number of cases is 3, Range of values is 42 to 50
  8913                           ; switch strategies available:
  8914                           ; Name         Instructions Cycles
  8915                           ; simple_byte           10     6 (average)
  8916                           ;	Chosen strategy is simple_byte
  8917                           
  8918                           	movf ??_main+0+0,c,w
  8919  0006F4  5045               	xorlw	42^0	; case 42
  8920  0006F6  0A2A               	skipnz
  8921  0006F8  B4D8               	goto	l6388
  8922  0006FA  EF6A  F003         	xorlw	49^42	; case 49
  8923  0006FE  0A1B               	skipnz
  8924  000700  B4D8               	goto	l6384
  8925  000702  EF62  F003         	xorlw	50^49	; case 50
  8926  000706  0A03               	skipnz
  8927  000708  B4D8               	goto	l6386
  8928  00070A  EF66  F003         	goto	l6950
  8929  00070E  EF49  F00F         
  8930                           	
  8931                           l222:; BSR set to: 0
  8932  000712                     
  8933                           	line	275
  8934                           ;main.c: 275:                             break;
  8935                           	goto	l6950
  8936  000712  EF49  F00F         	line	277
  8937                           ;main.c: 277:              case 84:
  8938                           	
  8939                           l225:; BSR set to: 0
  8940  000716                     
  8941                           	line	278
  8942                           	
  8943                           l6394:; BSR set to: 0
  8944  000716                     
  8945                           ;main.c: 278:                             dispLCD(0, 0, " CERTEZA QUE DESEJA ");
  8946                           	movlw	low(0)
  8947  000716  0E00               	movwf	((c:dispLCD@col)),c
  8948  000718  6E2E               		movlw	low(STR_7)
  8949  00071A  0EFE               	movwf	((c:dispLCD@str)),c
  8950  00071C  6E2F               	movlw	high(STR_7)
  8951  00071E  0E7E               	movwf	((c:dispLCD@str+1)),c
  8952  000720  6E30               
  8953                           	movlw	(0)&0ffh
  8954  000722  0E00               	
  8955                           	call	_dispLCD
  8956  000724  EC73  F01E         	line	279
  8957                           ;main.c: 279:                             dispLCD(1, 0, "   DELETAR TODA A   ");
  8958                           	movlw	low(0)
  8959  000728  0E00               	movwf	((c:dispLCD@col)),c
  8960  00072A  6E2E               		movlw	low(STR_8)
  8961  00072C  0E95               	movwf	((c:dispLCD@str)),c
  8962  00072E  6E2F               	movlw	high(STR_8)
  8963  000730  0E7E               	movwf	((c:dispLCD@str+1)),c
  8964  000732  6E30               
  8965                           	movlw	(01h)&0ffh
  8966  000734  0E01               	
  8967                           	call	_dispLCD
  8968  000736  EC73  F01E         	line	280
  8969                           ;main.c: 280:                             dispLCD(2, 0, "      MEMORIA ?     ");
  8970                           	movlw	low(0)
  8971  00073A  0E00               	movwf	((c:dispLCD@col)),c
  8972  00073C  6E2E               		movlw	low(STR_9)
  8973  00073E  0E41               	movwf	((c:dispLCD@str)),c
  8974  000740  6E2F               	movlw	high(STR_9)
  8975  000742  0E7E               	movwf	((c:dispLCD@str+1)),c
  8976  000744  6E30               
  8977                           	movlw	(02h)&0ffh
  8978  000746  0E02               	
  8979                           	call	_dispLCD
  8980  000748  EC73  F01E         	line	281
  8981                           ;main.c: 281:                             dispLCD(3, 0, "# - SIM      * - NAO");
  8982                           	movlw	low(0)
  8983  00074C  0E00               	movwf	((c:dispLCD@col)),c
  8984  00074E  6E2E               		movlw	low(STR_10)
  8985  000750  0E5C               	movwf	((c:dispLCD@str)),c
  8986  000752  6E2F               	movlw	high(STR_10)
  8987  000754  0E7D               	movwf	((c:dispLCD@str+1)),c
  8988  000756  6E30               
  8989                           	movlw	(03h)&0ffh
  8990  000758  0E03               	
  8991                           	call	_dispLCD
  8992  00075A  EC73  F01E         	line	283
  8993                           	
  8994                           l6396:
  8995  00075E                     ;main.c: 283:                             tecla = teclado_borda();
  8996                           	call	_teclado_borda	;wreg free
  8997  00075E  EC31  F01F         	movlb	0	; () banked
  8998  000762  0100               	movwf	((main@tecla))&0ffh
  8999  000764  6FBC               	line	284
  9000                           ;main.c: 284:                             switch(tecla)
  9001                           	goto	l6406
  9002  000766  EFC2  F003         	line	286
  9003                           ;main.c: 285:                             {;main.c: 286:                                
                                  case '#': estado = 85; break;
  9004                           	
  9005                           l227:; BSR set to: 0
  9006  00076A                     
  9007                           	
  9008                           l6398:; BSR set to: 0
  9009  00076A                     
  9010                           	movlw	low(055h)
  9011  00076A  0E55               	movwf	((main@estado))&0ffh
  9012  00076C  6FBB               	goto	l6950
  9013  00076E  EF49  F00F         	line	288
  9014                           ;main.c: 288:                                 case '*': dispLCD_clr(); estado = 80; brea
                                 k;
  9015                           	
  9016                           l229:; BSR set to: 0
  9017  000772                     
  9018                           	
  9019                           l6400:; BSR set to: 0
  9020  000772                     
  9021                           	call	_dispLCD_clr	;wreg free
  9022  000772  ECDC  F021         	
  9023                           l6402:
  9024  000776                     	movlw	low(050h)
  9025  000776  0E50               	movlb	0	; () banked
  9026  000778  0100               	movwf	((main@estado))&0ffh
  9027  00077A  6FBB               	goto	l6950
  9028  00077C  EF49  F00F         	line	289
  9029                           	
  9030                           l6404:; BSR set to: 0
  9031  000780                     
  9032                           ;main.c: 289:                             }
  9033                           	goto	l6950
  9034  000780  EF49  F00F         	
  9035                           l226:; BSR set to: 0
  9036  000784                     
  9037                           	
  9038                           l6406:; BSR set to: 0
  9039  000784                     
  9040                           	movf	((main@tecla))&0ffh,w
  9041  000784  51BC               	movwf	(??_main+0+0)&0ffh,c
  9042  000786  6E45               	clrf	(??_main+0+0+1)&0ffh,c
  9043  000788  6A46               
  9044                           	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  9045                           ; Switch size 1, requested type "space"
  9046                           ; Number of cases is 1, Range of values is 0 to 0
  9047                           ; switch strategies available:
  9048                           ; Name         Instructions Cycles
  9049                           ; simple_byte            4     3 (average)
  9050                           ;	Chosen strategy is simple_byte
  9051                           
  9052                           	movf ??_main+0+1,c,w
  9053  00078A  5046               	xorlw	0^0	; case 0
  9054  00078C  0A00               	skipnz
  9055  00078E  B4D8               	goto	l7822
  9056  000790  EFCC  F003         	goto	l6950
  9057  000794  EF49  F00F         	
  9058                           l7822:; BSR set to: 0
  9059  000798                     
  9060                           ; Switch size 1, requested type "space"
  9061                           ; Number of cases is 2, Range of values is 35 to 42
  9062                           ; switch strategies available:
  9063                           ; Name         Instructions Cycles
  9064                           ; simple_byte            7     4 (average)
  9065                           ;	Chosen strategy is simple_byte
  9066                           
  9067                           	movf ??_main+0+0,c,w
  9068  000798  5045               	xorlw	35^0	; case 35
  9069  00079A  0A23               	skipnz
  9070  00079C  B4D8               	goto	l6398
  9071  00079E  EFB5  F003         	xorlw	42^35	; case 42
  9072  0007A2  0A09               	skipnz
  9073  0007A4  B4D8               	goto	l6400
  9074  0007A6  EFB9  F003         	goto	l6950
  9075  0007AA  EF49  F00F         
  9076                           	
  9077                           l228:; BSR set to: 0
  9078  0007AE                     
  9079                           	line	290
  9080                           ;main.c: 290:                             break;
  9081                           	goto	l6950
  9082  0007AE  EF49  F00F         	line	292
  9083                           ;main.c: 292:              case 85:
  9084                           	
  9085                           l230:; BSR set to: 0
  9086  0007B2                     
  9087                           	line	293
  9088                           	
  9089                           l6408:; BSR set to: 0
  9090  0007B2                     
  9091                           ;main.c: 293:                             EEPROM.formatar();
  9092                           	lfsr	2,(_EEPROM)+08h
  9093  0007B2  EE20  F04F         	call	u4928
  9094  0007B6  D802               	goto	u4929
  9095  0007B8  EFE8  F003         u4928:
  9096  0007BC                     	push
  9097  0007BC  0005               	movwf	pclath
  9098  0007BE  6EFA               	movf	postinc2,w
  9099  0007C0  50DE               	movwf	tosl
  9100  0007C2  6EFD               	movf	postinc2,w
  9101  0007C4  50DE               	movwf	tosl+1
  9102  0007C6  6EFE               	movf	tblptru,w
  9103  0007C8  50F8               	movwf	tosl+2
  9104  0007CA  6EFF               	movf	pclath,w
  9105  0007CC  50FA               	
  9106                           	return	;indir
  9107  0007CE  0012               	u4929:
  9108  0007D0                     	line	294
  9109                           	
  9110                           l6410:
  9111  0007D0                     ;main.c: 294:                             dispLCD_clr();
  9112                           	call	_dispLCD_clr	;wreg free
  9113  0007D0  ECDC  F021         	line	295
  9114                           	
  9115                           l6412:
  9116  0007D4                     ;main.c: 295:                             for(char i = 0; i <= 3; i++)
  9117                           	movlw	low(0)
  9118  0007D4  0E00               	movlb	0	; () banked
  9119  0007D6  0100               	movwf	((main@i_654))&0ffh
  9120  0007D8  6FA5               	
  9121                           l6414:; BSR set to: 0
  9122  0007DA                     
  9123                           		movlw	04h-1
  9124  0007DA  0E03               	cpfsgt	((main@i_654))&0ffh
  9125  0007DC  65A5               	goto	u4931
  9126  0007DE  EFF3  F003         	goto	u4930
  9127  0007E2  EFF5  F003         
  9128                           u4931:
  9129  0007E6                     	goto	l6418
  9130  0007E6  EFF9  F003         u4930:
  9131  0007EA                     	goto	l6436
  9132  0007EA  EF2D  F004         	
  9133                           l6416:; BSR set to: 0
  9134  0007EE                     
  9135                           	goto	l6436
  9136  0007EE  EF2D  F004         	
  9137                           l231:; BSR set to: 0
  9138  0007F2                     
  9139                           	line	297
  9140                           	
  9141                           l6418:; BSR set to: 0
  9142  0007F2                     
  9143                           ;main.c: 296:                             {;main.c: 297:                                
                                  for(char j = 0; j <= 19; j++)
  9144                           	movlw	low(0)
  9145  0007F2  0E00               	movwf	((main@j_655))&0ffh
  9146  0007F4  6FA6               	
  9147                           l6420:; BSR set to: 0
  9148  0007F6                     
  9149                           		movlw	014h-1
  9150  0007F6  0E13               	cpfsgt	((main@j_655))&0ffh
  9151  0007F8  65A6               	goto	u4941
  9152  0007FA  EF01  F004         	goto	u4940
  9153  0007FE  EF03  F004         
  9154                           u4941:
  9155  000802                     	goto	l6424
  9156  000802  EF07  F004         u4940:
  9157  000806                     	goto	l6432
  9158  000806  EF22  F004         	
  9159                           l6422:; BSR set to: 0
  9160  00080A                     
  9161                           	goto	l6432
  9162  00080A  EF22  F004         	
  9163                           l233:; BSR set to: 0
  9164  00080E                     
  9165                           	line	299
  9166                           	
  9167                           l6424:; BSR set to: 0
  9168  00080E                     
  9169                           ;main.c: 298:                                 {;main.c: 299:                            
                                          dispLCD(i, j, "\377");
  9170                           	movff	(main@j_655),(c:dispLCD@col)
  9171  00080E  C0A6  F02E         		movlw	low(STR_11)
  9172  000812  0EFD               	movwf	((c:dispLCD@str)),c
  9173  000814  6E2F               	movlw	high(STR_11)
  9174  000816  0E7F               	movwf	((c:dispLCD@str+1)),c
  9175  000818  6E30               
  9176                           	movf	((main@i_654))&0ffh,w
  9177  00081A  51A5               	
  9178                           	call	_dispLCD
  9179  00081C  EC73  F01E         	line	300
  9180                           	
  9181                           l6426:
  9182  000820                     ;main.c: 300:                                     delay(10);
  9183                           	movlw	high(0Ah)
  9184  000820  0E00               	movwf	((c:delay@t+1)),c
  9185  000822  6E28               	movlw	low(0Ah)
  9186  000824  0E0A               	movwf	((c:delay@t)),c
  9187  000826  6E27               	call	_delay	;wreg free
  9188  000828  EC12  F020         	line	301
  9189                           	
  9190                           l6428:
  9191  00082C                     ;main.c: 301:                                 }
  9192                           	movlb	0	; () banked
  9193  00082C  0100               	incf	((main@j_655))&0ffh
  9194  00082E  2BA6               	
  9195                           l6430:; BSR set to: 0
  9196  000830                     
  9197                           		movlw	014h-1
  9198  000830  0E13               	cpfsgt	((main@j_655))&0ffh
  9199  000832  65A6               	goto	u4951
  9200  000834  EF1E  F004         	goto	u4950
  9201  000838  EF20  F004         
  9202                           u4951:
  9203  00083C                     	goto	l6424
  9204  00083C  EF07  F004         u4950:
  9205  000840                     	goto	l6432
  9206  000840  EF22  F004         	
  9207                           l234:; BSR set to: 0
  9208  000844                     
  9209                           	line	302
  9210                           	
  9211                           l6432:; BSR set to: 0
  9212  000844                     
  9213                           ;main.c: 302:                             }
  9214                           	incf	((main@i_654))&0ffh
  9215  000844  2BA5               	
  9216                           l6434:; BSR set to: 0
  9217  000846                     
  9218                           		movlw	04h-1
  9219  000846  0E03               	cpfsgt	((main@i_654))&0ffh
  9220  000848  65A5               	goto	u4961
  9221  00084A  EF29  F004         	goto	u4960
  9222  00084E  EF2B  F004         
  9223                           u4961:
  9224  000852                     	goto	l6418
  9225  000852  EFF9  F003         u4960:
  9226  000856                     	goto	l6436
  9227  000856  EF2D  F004         	
  9228                           l232:; BSR set to: 0
  9229  00085A                     
  9230                           	line	304
  9231                           	
  9232                           l6436:; BSR set to: 0
  9233  00085A                     
  9234                           ;main.c: 304:                             for(char i = 0; i <= 3; i++)
  9235                           	movlw	low(0)
  9236  00085A  0E00               	movwf	((main@i_657))&0ffh
  9237  00085C  6FA7               	
  9238                           l6438:; BSR set to: 0
  9239  00085E                     
  9240                           		movlw	04h-1
  9241  00085E  0E03               	cpfsgt	((main@i_657))&0ffh
  9242  000860  65A7               	goto	u4971
  9243  000862  EF35  F004         	goto	u4970
  9244  000866  EF37  F004         
  9245                           u4971:
  9246  00086A                     	goto	l6442
  9247  00086A  EF3B  F004         u4970:
  9248  00086E                     	goto	l6460
  9249  00086E  EF6F  F004         	
  9250                           l6440:; BSR set to: 0
  9251  000872                     
  9252                           	goto	l6460
  9253  000872  EF6F  F004         	
  9254                           l235:; BSR set to: 0
  9255  000876                     
  9256                           	line	306
  9257                           	
  9258                           l6442:; BSR set to: 0
  9259  000876                     
  9260                           ;main.c: 305:                             {;main.c: 306:                                
                                  for(char j = 0; j <= 19; j++)
  9261                           	movlw	low(0)
  9262  000876  0E00               	movwf	((main@j_658))&0ffh
  9263  000878  6FA8               	
  9264                           l6444:; BSR set to: 0
  9265  00087A                     
  9266                           		movlw	014h-1
  9267  00087A  0E13               	cpfsgt	((main@j_658))&0ffh
  9268  00087C  65A8               	goto	u4981
  9269  00087E  EF43  F004         	goto	u4980
  9270  000882  EF45  F004         
  9271                           u4981:
  9272  000886                     	goto	l6448
  9273  000886  EF49  F004         u4980:
  9274  00088A                     	goto	l6456
  9275  00088A  EF64  F004         	
  9276                           l6446:; BSR set to: 0
  9277  00088E                     
  9278                           	goto	l6456
  9279  00088E  EF64  F004         	
  9280                           l237:; BSR set to: 0
  9281  000892                     
  9282                           	line	308
  9283                           	
  9284                           l6448:; BSR set to: 0
  9285  000892                     
  9286                           ;main.c: 307:                                 {;main.c: 308:                            
                                          dispLCD(i, j, " ");
  9287                           	movff	(main@j_658),(c:dispLCD@col)
  9288  000892  C0A8  F02E         		movlw	low(STR_12)
  9289  000896  0EC1               	movwf	((c:dispLCD@str)),c
  9290  000898  6E2F               	movlw	high(STR_12)
  9291  00089A  0E7D               	movwf	((c:dispLCD@str+1)),c
  9292  00089C  6E30               
  9293                           	movf	((main@i_657))&0ffh,w
  9294  00089E  51A7               	
  9295                           	call	_dispLCD
  9296  0008A0  EC73  F01E         	line	309
  9297                           	
  9298                           l6450:
  9299  0008A4                     ;main.c: 309:                                     delay(10);
  9300                           	movlw	high(0Ah)
  9301  0008A4  0E00               	movwf	((c:delay@t+1)),c
  9302  0008A6  6E28               	movlw	low(0Ah)
  9303  0008A8  0E0A               	movwf	((c:delay@t)),c
  9304  0008AA  6E27               	call	_delay	;wreg free
  9305  0008AC  EC12  F020         	line	310
  9306                           	
  9307                           l6452:
  9308  0008B0                     ;main.c: 310:                                 }
  9309                           	movlb	0	; () banked
  9310  0008B0  0100               	incf	((main@j_658))&0ffh
  9311  0008B2  2BA8               	
  9312                           l6454:; BSR set to: 0
  9313  0008B4                     
  9314                           		movlw	014h-1
  9315  0008B4  0E13               	cpfsgt	((main@j_658))&0ffh
  9316  0008B6  65A8               	goto	u4991
  9317  0008B8  EF60  F004         	goto	u4990
  9318  0008BC  EF62  F004         
  9319                           u4991:
  9320  0008C0                     	goto	l6448
  9321  0008C0  EF49  F004         u4990:
  9322  0008C4                     	goto	l6456
  9323  0008C4  EF64  F004         	
  9324                           l238:; BSR set to: 0
  9325  0008C8                     
  9326                           	line	311
  9327                           	
  9328                           l6456:; BSR set to: 0
  9329  0008C8                     
  9330                           ;main.c: 311:                             }
  9331                           	incf	((main@i_657))&0ffh
  9332  0008C8  2BA7               	
  9333                           l6458:; BSR set to: 0
  9334  0008CA                     
  9335                           		movlw	04h-1
  9336  0008CA  0E03               	cpfsgt	((main@i_657))&0ffh
  9337  0008CC  65A7               	goto	u5001
  9338  0008CE  EF6B  F004         	goto	u5000
  9339  0008D2  EF6D  F004         
  9340                           u5001:
  9341  0008D6                     	goto	l6442
  9342  0008D6  EF3B  F004         u5000:
  9343  0008DA                     	goto	l6460
  9344  0008DA  EF6F  F004         	
  9345                           l236:; BSR set to: 0
  9346  0008DE                     
  9347                           	line	312
  9348                           	
  9349                           l6460:; BSR set to: 0
  9350  0008DE                     
  9351                           ;main.c: 312:                             dispLCD(1, 0, "       DELETED      ");
  9352                           	movlw	low(0)
  9353  0008DE  0E00               	movwf	((c:dispLCD@col)),c
  9354  0008E0  6E2E               		movlw	low(STR_13)
  9355  0008E2  0E17               	movwf	((c:dispLCD@str)),c
  9356  0008E4  6E2F               	movlw	high(STR_13)
  9357  0008E6  0E7E               	movwf	((c:dispLCD@str+1)),c
  9358  0008E8  6E30               
  9359                           	movlw	(01h)&0ffh
  9360  0008EA  0E01               	
  9361                           	call	_dispLCD
  9362  0008EC  EC73  F01E         	line	313
  9363                           ;main.c: 313:                             dispLCD(2, 0, "        MEMORY      ");
  9364                           	movlw	low(0)
  9365  0008F0  0E00               	movwf	((c:dispLCD@col)),c
  9366  0008F2  6E2E               		movlw	low(STR_14)
  9367  0008F4  0E2C               	movwf	((c:dispLCD@str)),c
  9368  0008F6  6E2F               	movlw	high(STR_14)
  9369  0008F8  0E7E               	movwf	((c:dispLCD@str+1)),c
  9370  0008FA  6E30               
  9371                           	movlw	(02h)&0ffh
  9372  0008FC  0E02               	
  9373                           	call	_dispLCD
  9374  0008FE  EC73  F01E         	line	315
  9375                           	
  9376                           l6462:
  9377  000902                     ;main.c: 315:                             setT1(1000);
  9378                           	movlw	low(03E8h)
  9379  000902  0EE8               	movwf	((c:setT1@c)),c
  9380  000904  6E2D               	movlw	high(03E8h)
  9381  000906  0E03               	movwf	((c:setT1@c+1)),c
  9382  000908  6E2E               	movlw	low highword(03E8h)
  9383  00090A  0E00               	movwf	((c:setT1@c+2)),c
  9384  00090C  6E2F               	movlw	high highword(03E8h)
  9385  00090E  0E00               	movwf	((c:setT1@c+3)),c
  9386  000910  6E30               	call	_setT1	;wreg free
  9387  000912  EC94  F021         	line	316
  9388                           	
  9389                           l6464:
  9390  000916                     ;main.c: 316:                             estado = 86;
  9391                           	movlw	low(056h)
  9392  000916  0E56               	movlb	0	; () banked
  9393  000918  0100               	movwf	((main@estado))&0ffh
  9394  00091A  6FBB               	line	317
  9395                           ;main.c: 317:                             break;
  9396                           	goto	l6950
  9397  00091C  EF49  F00F         	line	319
  9398                           ;main.c: 319:              case 86:
  9399                           	
  9400                           l239:; BSR set to: 0
  9401  000920                     
  9402                           	line	320
  9403                           	
  9404                           l6466:; BSR set to: 0
  9405  000920                     
  9406                           ;main.c: 320:                             if(!statusT1())
  9407                           	call	_statusT1	;wreg free
  9408  000920  EC9E  F021         	movf	(0+?_statusT1),c,w
  9409  000924  5027               iorwf	(1+?_statusT1),c,w
  9410  000926  1028               iorwf	(2+?_statusT1),c,w
  9411  000928  1029               iorwf	(3+?_statusT1),c,w
  9412  00092A  102A               	btfss	status,2
  9413  00092C  A4D8               	goto	u5011
  9414  00092E  EF9B  F004         	goto	u5010
  9415  000932  EF9D  F004         
  9416                           u5011:
  9417  000936                     	goto	l6950
  9418  000936  EF49  F00F         u5010:
  9419  00093A                     	line	321
  9420                           	
  9421                           l6468:
  9422  00093A                     ;main.c: 321:                                 estado = 80;
  9423                           	movlw	low(050h)
  9424  00093A  0E50               	movlb	0	; () banked
  9425  00093C  0100               	movwf	((main@estado))&0ffh
  9426  00093E  6FBB               	goto	l6950
  9427  000940  EF49  F00F         	
  9428                           l240:; BSR set to: 0
  9429  000944                     
  9430                           	line	322
  9431                           ;main.c: 322:                             break;
  9432                           	goto	l6950
  9433  000944  EF49  F00F         	line	324
  9434                           ;main.c: 324:              case 72:
  9435                           	
  9436                           l241:; BSR set to: 0
  9437  000948                     
  9438                           	line	325
  9439                           	
  9440                           l6470:; BSR set to: 0
  9441  000948                     
  9442                           ;main.c: 325:                             IHM.clr();
  9443                           	lfsr	2,(_IHM)+08h
  9444  000948  EE20  F059         	call	u5028
  9445  00094C  D802               	goto	u5029
  9446  00094E  EFB3  F004         u5028:
  9447  000952                     	push
  9448  000952  0005               	movwf	pclath
  9449  000954  6EFA               	movf	postinc2,w
  9450  000956  50DE               	movwf	tosl
  9451  000958  6EFD               	movf	postinc2,w
  9452  00095A  50DE               	movwf	tosl+1
  9453  00095C  6EFE               	movf	tblptru,w
  9454  00095E  50F8               	movwf	tosl+2
  9455  000960  6EFF               	movf	pclath,w
  9456  000962  50FA               	
  9457                           	return	;indir
  9458  000964  0012               	u5029:
  9459  000966                     	line	326
  9460                           	
  9461                           l6472:
  9462  000966                     ;main.c: 326:                             IHM.print(" ESCOLHA A MEMORIA \n"
  9463                           		movlw	low(STR_15)
  9464  000966  0E94               	movwf	((c:dispLCD_str@str)),c
  9465  000968  6E2E               	movlw	high(STR_15)
  9466  00096A  0E7C               	movwf	((c:dispLCD_str@str+1)),c
  9467  00096C  6E2F               
  9468                           	lfsr	2,(_IHM)+02h
  9469  00096E  EE20  F053         	call	u5038
  9470  000972  D802               	goto	u5039
  9471  000974  EFC6  F004         u5038:
  9472  000978                     	push
  9473  000978  0005               	movwf	pclath
  9474  00097A  6EFA               	movf	postinc2,w
  9475  00097C  50DE               	movwf	tosl
  9476  00097E  6EFD               	movf	postinc2,w
  9477  000980  50DE               	movwf	tosl+1
  9478  000982  6EFE               	movf	tblptru,w
  9479  000984  50F8               	movwf	tosl+2
  9480  000986  6EFF               	movf	pclath,w
  9481  000988  50FA               	
  9482                           	return	;indir
  9483  00098A  0012               	u5039:
  9484  00098C                     	line	330
  9485                           	
  9486                           l6474:
  9487  00098C                     ;main.c: 330:                             estado = 73;
  9488                           	movlw	low(049h)
  9489  00098C  0E49               	movlb	0	; () banked
  9490  00098E  0100               	movwf	((main@estado))&0ffh
  9491  000990  6FBB               	goto	l6476
  9492  000992  EFCB  F004         	line	332
  9493                           ;main.c: 332:              case 73:
  9494                           	
  9495                           l242:; BSR set to: 0
  9496  000996                     
  9497                           	line	333
  9498                           	
  9499                           l6476:; BSR set to: 0
  9500  000996                     
  9501                           ;main.c: 333:                             tecla = teclado_borda();
  9502                           	call	_teclado_borda	;wreg free
  9503  000996  EC31  F01F         	movlb	0	; () banked
  9504  00099A  0100               	movwf	((main@tecla))&0ffh
  9505  00099C  6FBC               	line	334
  9506                           ;main.c: 334:                             switch(tecla)
  9507                           	goto	l6540
  9508  00099E  EF47  F006         	line	336
  9509                           ;main.c: 335:                             {;main.c: 336:                                
                                  case '0':
  9510                           	
  9511                           l244:; BSR set to: 0
  9512  0009A2                     
  9513                           	goto	l6478
  9514  0009A2  EFE3  F004         	line	337
  9515                           ;main.c: 337:                                 case '1':
  9516                           	
  9517                           l245:; BSR set to: 0
  9518  0009A6                     
  9519                           	goto	l6478
  9520  0009A6  EFE3  F004         	line	338
  9521                           ;main.c: 338:                                 case '2':
  9522                           	
  9523                           l246:; BSR set to: 0
  9524  0009AA                     
  9525                           	goto	l6478
  9526  0009AA  EFE3  F004         	line	339
  9527                           ;main.c: 339:                                 case '3':
  9528                           	
  9529                           l247:; BSR set to: 0
  9530  0009AE                     
  9531                           	goto	l6478
  9532  0009AE  EFE3  F004         	line	340
  9533                           ;main.c: 340:                                 case '4':
  9534                           	
  9535                           l248:; BSR set to: 0
  9536  0009B2                     
  9537                           	goto	l6478
  9538  0009B2  EFE3  F004         	line	341
  9539                           ;main.c: 341:                                 case '5':
  9540                           	
  9541                           l249:; BSR set to: 0
  9542  0009B6                     
  9543                           	goto	l6478
  9544  0009B6  EFE3  F004         	line	342
  9545                           ;main.c: 342:                                 case '6':
  9546                           	
  9547                           l250:; BSR set to: 0
  9548  0009BA                     
  9549                           	goto	l6478
  9550  0009BA  EFE3  F004         	line	343
  9551                           ;main.c: 343:                                 case '7':
  9552                           	
  9553                           l251:; BSR set to: 0
  9554  0009BE                     
  9555                           	goto	l6478
  9556  0009BE  EFE3  F004         	line	344
  9557                           ;main.c: 344:                                 case '8':
  9558                           	
  9559                           l252:; BSR set to: 0
  9560  0009C2                     
  9561                           	goto	l6478
  9562  0009C2  EFE3  F004         	line	345
  9563                           ;main.c: 345:                                 case '9':
  9564                           	
  9565                           l253:; BSR set to: 0
  9566  0009C6                     
  9567                           	line	346
  9568                           	
  9569                           l6478:; BSR set to: 0
  9570  0009C6                     
  9571                           ;main.c: 346:                                            buscar_dado(10, tecla % 0x30, &
                                 init_cond);
  9572                           	movff	(main@tecla),(c:___awmod@dividend)
  9573  0009C6  C0BC  F027         	clrf	((c:___awmod@dividend+1)),c
  9574  0009CA  6A28               	movlw	high(030h)
  9575  0009CC  0E00               	movwf	((c:___awmod@divisor+1)),c
  9576  0009CE  6E2A               	movlw	low(030h)
  9577  0009D0  0E30               	movwf	((c:___awmod@divisor)),c
  9578  0009D2  6E29               	call	___awmod	;wreg free
  9579  0009D4  EC12  F019         	movf	(0+?___awmod),c,w
  9580  0009D8  5027               	movwf	((c:buscar_dado@col)),c
  9581  0009DA  6E2D               		movlw	low(main@init_cond)
  9582  0009DC  0EB2               	movwf	((c:buscar_dado@data)),c
  9583  0009DE  6E2E               	movlw	high(main@init_cond)
  9584  0009E0  0E00               	movwf	((c:buscar_dado@data+1)),c
  9585  0009E2  6E2F               
  9586                           	movlw	(0Ah)&0ffh
  9587  0009E4  0E0A               	
  9588                           	call	_buscar_dado
  9589  0009E6  EC9E  F020         	line	347
  9590                           	
  9591                           l6480:
  9592  0009EA                     ;main.c: 347:                                            manipula_atuadores_init(init_co
                                 nd);
  9593                           	movlb	0	; () banked
  9594  0009EA  0100               	movf	((main@init_cond))&0ffh,w
  9595  0009EC  51B2               	
  9596                           	call	_manipula_atuadores_init
  9597  0009EE  EC8B  F01C         	line	349
  9598                           	
  9599                           l6482:
  9600  0009F2                     ;main.c: 349:                                            EEPROM.buscar(tecla % 0x30, vet
                                 or_aux);
  9601                           	lfsr	2,(_EEPROM)+02h
  9602  0009F2  EE20  F049         	call	u5048
  9603  0009F6  D802               	goto	u5049
  9604  0009F8  EF16  F005         u5048:
  9605  0009FC                     	push
  9606  0009FC  0005               	movwf	pclath
  9607  0009FE  6EFA               	movf	postinc2,w
  9608  000A00  50DE               	movwf	tosl
  9609  000A02  6EFD               	movf	postinc2,w
  9610  000A04  50DE               	movwf	tosl+1
  9611  000A06  6EFE               	movf	tblptru,w
  9612  000A08  50F8               	movwf	tosl+2
  9613  000A0A  6EFF               	movf	pclath,w
  9614  000A0C  50FA               	
  9615                           		movlw	low(main@vetor_aux)
  9616  000A0E  0E76               	movwf	((c:buscar_receita@data)),c
  9617  000A10  6E2D               	movlw	high(main@vetor_aux)
  9618  000A12  0E00               	movwf	((c:buscar_receita@data+1)),c
  9619  000A14  6E2E               
  9620                           	movff	(main@tecla),(c:___awmod@dividend)
  9621  000A16  C0BC  F027         	clrf	((c:___awmod@dividend+1)),c
  9622  000A1A  6A28               	movlw	high(030h)
  9623  000A1C  0E00               	movwf	((c:___awmod@divisor+1)),c
  9624  000A1E  6E2A               	movlw	low(030h)
  9625  000A20  0E30               	movwf	((c:___awmod@divisor)),c
  9626  000A22  6E29               	call	___awmod	;wreg free
  9627  000A24  EC12  F019         	movf	(0+?___awmod),c,w
  9628  000A28  5027               	
  9629                           	return	;indir
  9630  000A2A  0012               	u5049:
  9631  000A2C                     	line	350
  9632                           	
  9633                           l6484:
  9634  000A2C                     ;main.c: 350:                                            pt = vetor_aux;
  9635                           		movlw	low(main@vetor_aux)
  9636  000A2C  0E76               	movlb	0	; () banked
  9637  000A2E  0100               	movwf	((main@pt))&0ffh
  9638  000A30  6F9D               	movlw	high(main@vetor_aux)
  9639  000A32  0E00               	movwf	((main@pt+1))&0ffh
  9640  000A34  6F9E               
  9641                           	line	352
  9642                           	
  9643                           l6486:; BSR set to: 0
  9644  000A36                     
  9645                           ;main.c: 352:                                            if(*pt == 0xFF)
  9646                           	movff	(main@pt),fsr2l
  9647  000A36  C09D  FFD9         	movff	(main@pt+1),fsr2h
  9648  000A3A  C09E  FFDA         	incf	postinc2,w
  9649  000A3E  28DE               	btfss	status,2
  9650  000A40  A4D8               	goto	u5051
  9651  000A42  EF25  F005         	goto	u5050
  9652  000A46  EF27  F005         
  9653                           u5051:
  9654  000A4A                     	goto	l6492
  9655  000A4A  EF45  F005         u5050:
  9656  000A4E                     	line	354
  9657                           	
  9658                           l6488:; BSR set to: 0
  9659  000A4E                     
  9660                           ;main.c: 353:                                            {;main.c: 354:                 
                                                                EEPROM.deletar(tecla % 0x30);
  9661                           	lfsr	2,(_EEPROM)+04h
  9662  000A4E  EE20  F04B         	call	u5068
  9663  000A52  D802               	goto	u5069
  9664  000A54  EF40  F005         u5068:
  9665  000A58                     	push
  9666  000A58  0005               	movwf	pclath
  9667  000A5A  6EFA               	movf	postinc2,w
  9668  000A5C  50DE               	movwf	tosl
  9669  000A5E  6EFD               	movf	postinc2,w
  9670  000A60  50DE               	movwf	tosl+1
  9671  000A62  6EFE               	movf	tblptru,w
  9672  000A64  50F8               	movwf	tosl+2
  9673  000A66  6EFF               	movf	pclath,w
  9674  000A68  50FA               	
  9675                           	movff	(main@tecla),(c:___awmod@dividend)
  9676  000A6A  C0BC  F027         	clrf	((c:___awmod@dividend+1)),c
  9677  000A6E  6A28               	movlw	high(030h)
  9678  000A70  0E00               	movwf	((c:___awmod@divisor+1)),c
  9679  000A72  6E2A               	movlw	low(030h)
  9680  000A74  0E30               	movwf	((c:___awmod@divisor)),c
  9681  000A76  6E29               	call	___awmod
  9682  000A78  EC12  F019         	movf	(0+?___awmod),c,w
  9683  000A7C  5027               	
  9684                           	return	;indir
  9685  000A7E  0012               	u5069:
  9686  000A80                     	line	355
  9687                           	
  9688                           l6490:
  9689  000A80                     ;main.c: 355:                                                vetor_aux[0] = 0;
  9690                           	movlw	low(0)
  9691  000A80  0E00               	movlb	0	; () banked
  9692  000A82  0100               	movwf	((main@vetor_aux))&0ffh
  9693  000A84  6F76               	goto	l6492
  9694  000A86  EF45  F005         	line	356
  9695                           ;main.c: 356:                                            }
  9696                           	
  9697                           l254:; BSR set to: 0
  9698  000A8A                     
  9699                           	line	359
  9700                           	
  9701                           l6492:; BSR set to: 0
  9702  000A8A                     
  9703                           ;main.c: 359:                                            for(char *ptr = vetor_aux; *ptr
                                  != 0; ptr++)
  9704                           		movlw	low(main@vetor_aux)
  9705  000A8A  0E76               	movwf	((main@ptr_664))&0ffh
  9706  000A8C  6FB8               	movlw	high(main@vetor_aux)
  9707  000A8E  0E00               	movwf	((main@ptr_664+1))&0ffh
  9708  000A90  6FB9               
  9709                           	goto	l6530
  9710  000A92  EF2C  F006         	
  9711                           l256:; BSR set to: 0
  9712  000A96                     
  9713                           	line	361
  9714                           	
  9715                           l6494:; BSR set to: 0
  9716  000A96                     
  9717                           ;main.c: 360:                                            {;main.c: 361:                 
                                                                 if(*ptr <= 0x64 || *ptr == 0xFE)
  9718                           	movff	(main@ptr_664),fsr2l
  9719  000A96  C0B8  FFD9         	movff	(main@ptr_664+1),fsr2h
  9720  000A9A  C0B9  FFDA         		movlw	065h-1
  9721  000A9E  0E64               	cpfsgt	indf2
  9722  000AA0  64DF               	goto	u5071
  9723  000AA2  EF55  F005         	goto	u5070
  9724  000AA6  EF57  F005         
  9725                           u5071:
  9726  000AAA                     	goto	l6498
  9727  000AAA  EF66  F005         u5070:
  9728  000AAE                     	
  9729                           l6496:; BSR set to: 0
  9730  000AAE                     
  9731                           	movff	(main@ptr_664),fsr2l
  9732  000AAE  C0B8  FFD9         	movff	(main@ptr_664+1),fsr2h
  9733  000AB2  C0B9  FFDA         	movlw	254
  9734  000AB6  0EFE               	xorwf	postinc2,w
  9735  000AB8  18DE               	btfss	status,2
  9736  000ABA  A4D8               	goto	u5081
  9737  000ABC  EF62  F005         	goto	u5080
  9738  000AC0  EF64  F005         
  9739                           u5081:
  9740  000AC4                     	goto	l6502
  9741  000AC4  EF75  F005         u5080:
  9742  000AC8                     	goto	l6498
  9743  000AC8  EF66  F005         	
  9744                           l259:; BSR set to: 0
  9745  000ACC                     
  9746                           	line	363
  9747                           	
  9748                           l6498:; BSR set to: 0
  9749  000ACC                     
  9750                           ;main.c: 362:                                                 {;main.c: 363:            
                                                                          decodifica(&*ptr);
  9751                           		movff	(main@ptr_664),(c:decodifica@d)
  9752  000ACC  C0B8  F027         	movff	(main@ptr_664+1),(c:decodifica@d+1)
  9753  000AD0  C0B9  F028         
  9754                           	call	_decodifica
  9755  000AD4  ECCB  F014         	line	364
  9756                           	
  9757                           l6500:
  9758  000AD8                     ;main.c: 364:                                                     fifo_add_control(*ptr)
                                 ;
  9759                           	movff	(main@ptr_664),fsr2l
  9760  000AD8  C0B8  FFD9         	movff	(main@ptr_664+1),fsr2h
  9761  000ADC  C0B9  FFDA         	movf	indf2,w
  9762  000AE0  50DF               	
  9763                           	call	_fifo_add_control
  9764  000AE2  EC1F  F01E         	line	365
  9765                           ;main.c: 365:                                                 }
  9766                           	goto	l6526
  9767  000AE6  EF25  F006         	line	366
  9768                           ;main.c: 366:                                                 else if (*ptr > 0x64 && *p
                                 tr <= 0xDC)
  9769                           	
  9770                           l257:
  9771  000AEA                     	
  9772                           l6502:
  9773  000AEA                     	movff	(main@ptr_664),fsr2l
  9774  000AEA  C0B8  FFD9         	movff	(main@ptr_664+1),fsr2h
  9775  000AEE  C0B9  FFDA         		movlw	065h-1
  9776  000AF2  0E64               	cpfsgt	indf2
  9777  000AF4  64DF               	goto	u5091
  9778  000AF6  EF7F  F005         	goto	u5090
  9779  000AFA  EF81  F005         
  9780                           u5091:
  9781  000AFE                     	goto	l6510
  9782  000AFE  EF9C  F005         u5090:
  9783  000B02                     	
  9784                           l6504:
  9785  000B02                     	movff	(main@ptr_664),fsr2l
  9786  000B02  C0B8  FFD9         	movff	(main@ptr_664+1),fsr2h
  9787  000B06  C0B9  FFDA         		movlw	0DDh-0
  9788  000B0A  0EDD               	cpfslt	indf2
  9789  000B0C  60DF               	goto	u5101
  9790  000B0E  EF8B  F005         	goto	u5100
  9791  000B12  EF8D  F005         
  9792                           u5101:
  9793  000B16                     	goto	l6510
  9794  000B16  EF9C  F005         u5100:
  9795  000B1A                     	line	368
  9796                           	
  9797                           l6506:
  9798  000B1A                     ;main.c: 367:                                                 {;main.c: 368:            
                                                                          decodifica(&*ptr);
  9799                           		movff	(main@ptr_664),(c:decodifica@d)
  9800  000B1A  C0B8  F027         	movff	(main@ptr_664+1),(c:decodifica@d+1)
  9801  000B1E  C0B9  F028         
  9802                           	call	_decodifica	;wreg free
  9803  000B22  ECCB  F014         	line	369
  9804                           	
  9805                           l6508:
  9806  000B26                     ;main.c: 369:                                                     fifo_add_tempo(*ptr);

  9807                           	movff	(main@ptr_664),fsr2l
  9808  000B26  C0B8  FFD9         	movff	(main@ptr_664+1),fsr2h
  9809  000B2A  C0B9  FFDA         	movf	indf2,w
  9810  000B2E  50DF               	
  9811                           	call	_fifo_add_tempo
  9812  000B30  ECBF  F01C         	line	370
  9813                           ;main.c: 370:                                                 }
  9814                           	goto	l6526
  9815  000B34  EF25  F006         	line	371
  9816                           ;main.c: 371:                                                 else
  9817                           	
  9818                           l261:
  9819  000B38                     	line	373
  9820                           	
  9821                           l6510:
  9822  000B38                     ;main.c: 372:                                                 {;main.c: 373:            
                                                                          decodifica(&*ptr);
  9823                           		movff	(main@ptr_664),(c:decodifica@d)
  9824  000B38  C0B8  F027         	movff	(main@ptr_664+1),(c:decodifica@d+1)
  9825  000B3C  C0B9  F028         
  9826                           	call	_decodifica	;wreg free
  9827  000B40  ECCB  F014         	line	374
  9828                           ;main.c: 374:                                                     switch( *ptr )
  9829                           	goto	l6516
  9830  000B44  EFBC  F005         	line	376
  9831                           ;main.c: 375:                                                     {;main.c: 376:        
                                                                                  case 'A':
  9832                           	
  9833                           l264:
  9834  000B48                     	goto	l6512
  9835  000B48  EFB2  F005         	line	377
  9836                           ;main.c: 377:                                                         case 'B':
  9837                           	
  9838                           l265:
  9839  000B4C                     	goto	l6512
  9840  000B4C  EFB2  F005         	line	378
  9841                           ;main.c: 378:                                                         case 'C':
  9842                           	
  9843                           l266:
  9844  000B50                     	goto	l6512
  9845  000B50  EFB2  F005         	line	379
  9846                           ;main.c: 379:                                                         case 'D':
  9847                           	
  9848                           l267:
  9849  000B54                     	goto	l6512
  9850  000B54  EFB2  F005         	line	380
  9851                           ;main.c: 380:                                                         case 'a':
  9852                           	
  9853                           l268:
  9854  000B58                     	goto	l6512
  9855  000B58  EFB2  F005         	line	381
  9856                           ;main.c: 381:                                                         case 'b':
  9857                           	
  9858                           l269:
  9859  000B5C                     	goto	l6512
  9860  000B5C  EFB2  F005         	line	382
  9861                           ;main.c: 382:                                                         case 'c':
  9862                           	
  9863                           l270:
  9864  000B60                     	goto	l6512
  9865  000B60  EFB2  F005         	line	383
  9866                           ;main.c: 383:                                                         case 'd':
  9867                           	
  9868                           l271:
  9869  000B64                     	line	384
  9870                           	
  9871                           l6512:
  9872  000B64                     ;main.c: 384:                                                                 *ptr &= ~0
                                 x20;
  9873                           	movff	(main@ptr_664),fsr2l
  9874  000B64  C0B8  FFD9         	movff	(main@ptr_664+1),fsr2h
  9875  000B68  C0B9  FFDA         	movlw	0DFh
  9876  000B6C  0EDF               	andwf	indf2
  9877  000B6E  16DF               	line	385
  9878                           ;main.c: 385:                                                                 break;
  9879                           	goto	l6518
  9880  000B70  EFED  F005         	line	386
  9881                           	
  9882                           l6514:
  9883  000B74                     ;main.c: 386:                                                     }
  9884                           	goto	l6518
  9885  000B74  EFED  F005         	
  9886                           l263:
  9887  000B78                     	
  9888                           l6516:
  9889  000B78                     	movff	(main@ptr_664),fsr2l
  9890  000B78  C0B8  FFD9         	movff	(main@ptr_664+1),fsr2h
  9891  000B7C  C0B9  FFDA         	movf	indf2,w
  9892  000B80  50DF               	movwf	(??_main+0+0)&0ffh,c
  9893  000B82  6E45               	clrf	(??_main+0+0+1)&0ffh,c
  9894  000B84  6A46               
  9895                           	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  9896                           ; Switch size 1, requested type "space"
  9897                           ; Number of cases is 1, Range of values is 0 to 0
  9898                           ; switch strategies available:
  9899                           ; Name         Instructions Cycles
  9900                           ; simple_byte            4     3 (average)
  9901                           ;	Chosen strategy is simple_byte
  9902                           
  9903                           	movf ??_main+0+1,c,w
  9904  000B86  5046               	xorlw	0^0	; case 0
  9905  000B88  0A00               	skipnz
  9906  000B8A  B4D8               	goto	l7824
  9907  000B8C  EFCA  F005         	goto	l6518
  9908  000B90  EFED  F005         	
  9909                           l7824:
  9910  000B94                     ; Switch size 1, requested type "space"
  9911                           ; Number of cases is 8, Range of values is 65 to 100
  9912                           ; switch strategies available:
  9913                           ; Name         Instructions Cycles
  9914                           ; simple_byte           25    13 (average)
  9915                           ;	Chosen strategy is simple_byte
  9916                           
  9917                           	movf ??_main+0+0,c,w
  9918  000B94  5045               	xorlw	65^0	; case 65
  9919  000B96  0A41               	skipnz
  9920  000B98  B4D8               	goto	l6512
  9921  000B9A  EFB2  F005         	xorlw	66^65	; case 66
  9922  000B9E  0A03               	skipnz
  9923  000BA0  B4D8               	goto	l6512
  9924  000BA2  EFB2  F005         	xorlw	67^66	; case 67
  9925  000BA6  0A01               	skipnz
  9926  000BA8  B4D8               	goto	l6512
  9927  000BAA  EFB2  F005         	xorlw	68^67	; case 68
  9928  000BAE  0A07               	skipnz
  9929  000BB0  B4D8               	goto	l6512
  9930  000BB2  EFB2  F005         	xorlw	97^68	; case 97
  9931  000BB6  0A25               	skipnz
  9932  000BB8  B4D8               	goto	l6512
  9933  000BBA  EFB2  F005         	xorlw	98^97	; case 98
  9934  000BBE  0A03               	skipnz
  9935  000BC0  B4D8               	goto	l6512
  9936  000BC2  EFB2  F005         	xorlw	99^98	; case 99
  9937  000BC6  0A01               	skipnz
  9938  000BC8  B4D8               	goto	l6512
  9939  000BCA  EFB2  F005         	xorlw	100^99	; case 100
  9940  000BCE  0A07               	skipnz
  9941  000BD0  B4D8               	goto	l6512
  9942  000BD2  EFB2  F005         	goto	l6518
  9943  000BD6  EFED  F005         
  9944                           	
  9945                           l272:
  9946  000BDA                     	line	387
  9947                           	
  9948                           l6518:
  9949  000BDA                     ;main.c: 387:                                                     alt_atuador(*ptr);
  9950                           	movff	(main@ptr_664),fsr2l
  9951  000BDA  C0B8  FFD9         	movff	(main@ptr_664+1),fsr2h
  9952  000BDE  C0B9  FFDA         	movf	indf2,w
  9953  000BE2  50DF               	
  9954                           	call	_alt_atuador
  9955  000BE4  EC94  F01A         	line	388
  9956                           ;main.c: 388:                                                     fifo_add( ler_atuador(
                                 *ptr) ? *ptr : *ptr|0x20 );
  9957                           	movff	(main@ptr_664),fsr2l
  9958  000BE8  C0B8  FFD9         	movff	(main@ptr_664+1),fsr2h
  9959  000BEC  C0B9  FFDA         	movf	indf2,w
  9960  000BF0  50DF               	
  9961                           	call	_ler_atuador
  9962  000BF2  EC7E  F019         	iorlw	0
  9963  000BF6  0900               	btfss	status,2
  9964  000BF8  A4D8               	goto	u5111
  9965  000BFA  EF01  F006         	goto	u5110
  9966  000BFE  EF03  F006         u5111:
  9967  000C02                     	goto	l6522
  9968  000C02  EF12  F006         u5110:
  9969  000C06                     	
  9970                           l6520:
  9971  000C06                     	movff	(main@ptr_664),fsr2l
  9972  000C06  C0B8  FFD9         	movff	(main@ptr_664+1),fsr2h
  9973  000C0A  C0B9  FFDA         	movf	indf2,w
  9974  000C0E  50DF               	movwf	(??_main+0+0)&0ffh,c
  9975  000C10  6E45               	clrf	(??_main+0+0+1)&0ffh,c
  9976  000C12  6A46               
  9977                           	movlw	020h
  9978  000C14  0E20               	iorwf	(??_main+0+0),c,w
  9979  000C16  1045               	movlb	0	; () banked
  9980  000C18  0100               	movwf	((_main$665))&0ffh
  9981  000C1A  6F88               	movf	(??_main+0+1),c,w
  9982  000C1C  5046               	movwf	1+((_main$665))&0ffh
  9983  000C1E  6F89               	goto	l6524
  9984  000C20  EF1E  F006         	
  9985                           l274:; BSR set to: 0
  9986  000C24                     
  9987                           	
  9988                           l6522:
  9989  000C24                     	movff	(main@ptr_664),fsr2l
  9990  000C24  C0B8  FFD9         	movff	(main@ptr_664+1),fsr2h
  9991  000C28  C0B9  FFDA         	movf	indf2,w
  9992  000C2C  50DF               	movwf	(??_main+0+0)&0ffh,c
  9993  000C2E  6E45               	movf	((??_main+0+0)),c,w
  9994  000C30  5045               	movlb	0	; () banked
  9995  000C32  0100               	movwf	((_main$665))&0ffh
  9996  000C34  6F88               	clrf	((_main$665+1))&0ffh
  9997  000C36  6B89               	goto	l6524
  9998  000C38  EF1E  F006         	
  9999                           l276:; BSR set to: 0
 10000  000C3C                     
 10001                           	
 10002                           l6524:; BSR set to: 0
 10003  000C3C                     
 10004                           	movf	((_main$665))&0ffh,w
 10005  000C3C  5188               	
 10006                           	call	_fifo_add
 10007  000C3E  ECF3  F01C         	goto	l6526
 10008  000C42  EF25  F006         	line	389
 10009                           ;main.c: 389:                                                 }
 10010                           	
 10011                           l262:
 10012  000C46                     	goto	l6526
 10013  000C46  EF25  F006         	
 10014                           l260:
 10015  000C4A                     	line	390
 10016                           	
 10017                           l6526:
 10018  000C4A                     ;main.c: 390:                                                 fifo_print();
 10019                           	call	_fifo_print	;wreg free
 10020  000C4A  ECCD  F010         	line	391
 10021                           	
 10022                           l6528:
 10023  000C4E                     ;main.c: 391:                                            }
 10024                           	movlb	0	; () banked
 10025  000C4E  0100               	infsnz	((main@ptr_664))&0ffh
 10026  000C50  4BB8               	incf	((main@ptr_664+1))&0ffh
 10027  000C52  2BB9               	goto	l6530
 10028  000C54  EF2C  F006         	
 10029                           l255:; BSR set to: 0
 10030  000C58                     
 10031                           	
 10032                           l6530:; BSR set to: 0
 10033  000C58                     
 10034                           	movff	(main@ptr_664),fsr2l
 10035  000C58  C0B8  FFD9         	movff	(main@ptr_664+1),fsr2h
 10036  000C5C  C0B9  FFDA         	movf	indf2,w
 10037  000C60  50DF               	btfss	status,2
 10038  000C62  A4D8               	goto	u5121
 10039  000C64  EF36  F006         	goto	u5120
 10040  000C68  EF38  F006         u5121:
 10041  000C6C                     	goto	l6494
 10042  000C6C  EF4B  F005         u5120:
 10043  000C70                     	goto	l6532
 10044  000C70  EF3A  F006         	
 10045                           l277:; BSR set to: 0
 10046  000C74                     
 10047                           	line	393
 10048                           	
 10049                           l6532:; BSR set to: 0
 10050  000C74                     
 10051                           ;main.c: 393:                                            dispLCD_clr();
 10052                           	call	_dispLCD_clr	;wreg free
 10053  000C74  ECDC  F021         	line	394
 10054                           	
 10055                           l6534:
 10056  000C78                     ;main.c: 394:                                            estado = 16;
 10057                           	movlw	low(010h)
 10058  000C78  0E10               	movlb	0	; () banked
 10059  000C7A  0100               	movwf	((main@estado))&0ffh
 10060  000C7C  6FBB               	line	395
 10061                           ;main.c: 395:                                            break;
 10062                           	goto	l6950
 10063  000C7E  EF49  F00F         	line	397
 10064                           ;main.c: 397:                                 case '*': estado = 8; break;
 10065                           	
 10066                           l279:; BSR set to: 0
 10067  000C82                     
 10068                           	
 10069                           l6536:; BSR set to: 0
 10070  000C82                     
 10071                           	movlw	low(08h)
 10072  000C82  0E08               	movwf	((main@estado))&0ffh
 10073  000C84  6FBB               	goto	l6950
 10074  000C86  EF49  F00F         	line	398
 10075                           	
 10076                           l6538:; BSR set to: 0
 10077  000C8A                     
 10078                           ;main.c: 398:                             }
 10079                           	goto	l6950
 10080  000C8A  EF49  F00F         	
 10081                           l243:; BSR set to: 0
 10082  000C8E                     
 10083                           	
 10084                           l6540:; BSR set to: 0
 10085  000C8E                     
 10086                           	movf	((main@tecla))&0ffh,w
 10087  000C8E  51BC               	movwf	(??_main+0+0)&0ffh,c
 10088  000C90  6E45               	clrf	(??_main+0+0+1)&0ffh,c
 10089  000C92  6A46               
 10090                           	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
 10091                           ; Switch size 1, requested type "space"
 10092                           ; Number of cases is 1, Range of values is 0 to 0
 10093                           ; switch strategies available:
 10094                           ; Name         Instructions Cycles
 10095                           ; simple_byte            4     3 (average)
 10096                           ;	Chosen strategy is simple_byte
 10097                           
 10098                           	movf ??_main+0+1,c,w
 10099  000C94  5046               	xorlw	0^0	; case 0
 10100  000C96  0A00               	skipnz
 10101  000C98  B4D8               	goto	l7826
 10102  000C9A  EF51  F006         	goto	l6950
 10103  000C9E  EF49  F00F         	
 10104                           l7826:; BSR set to: 0
 10105  000CA2                     
 10106                           ; Switch size 1, requested type "space"
 10107                           ; Number of cases is 11, Range of values is 42 to 57
 10108                           ; switch strategies available:
 10109                           ; Name         Instructions Cycles
 10110                           ; simple_byte           34    18 (average)
 10111                           ;	Chosen strategy is simple_byte
 10112                           
 10113                           	movf ??_main+0+0,c,w
 10114  000CA2  5045               	xorlw	42^0	; case 42
 10115  000CA4  0A2A               	skipnz
 10116  000CA6  B4D8               	goto	l6536
 10117  000CA8  EF41  F006         	xorlw	48^42	; case 48
 10118  000CAC  0A1A               	skipnz
 10119  000CAE  B4D8               	goto	l6478
 10120  000CB0  EFE3  F004         	xorlw	49^48	; case 49
 10121  000CB4  0A01               	skipnz
 10122  000CB6  B4D8               	goto	l6478
 10123  000CB8  EFE3  F004         	xorlw	50^49	; case 50
 10124  000CBC  0A03               	skipnz
 10125  000CBE  B4D8               	goto	l6478
 10126  000CC0  EFE3  F004         	xorlw	51^50	; case 51
 10127  000CC4  0A01               	skipnz
 10128  000CC6  B4D8               	goto	l6478
 10129  000CC8  EFE3  F004         	xorlw	52^51	; case 52
 10130  000CCC  0A07               	skipnz
 10131  000CCE  B4D8               	goto	l6478
 10132  000CD0  EFE3  F004         	xorlw	53^52	; case 53
 10133  000CD4  0A01               	skipnz
 10134  000CD6  B4D8               	goto	l6478
 10135  000CD8  EFE3  F004         	xorlw	54^53	; case 54
 10136  000CDC  0A03               	skipnz
 10137  000CDE  B4D8               	goto	l6478
 10138  000CE0  EFE3  F004         	xorlw	55^54	; case 55
 10139  000CE4  0A01               	skipnz
 10140  000CE6  B4D8               	goto	l6478
 10141  000CE8  EFE3  F004         	xorlw	56^55	; case 56
 10142  000CEC  0A0F               	skipnz
 10143  000CEE  B4D8               	goto	l6478
 10144  000CF0  EFE3  F004         	xorlw	57^56	; case 57
 10145  000CF4  0A01               	skipnz
 10146  000CF6  B4D8               	goto	l6478
 10147  000CF8  EFE3  F004         	goto	l6950
 10148  000CFC  EF49  F00F         
 10149                           	
 10150                           l278:; BSR set to: 0
 10151  000D00                     
 10152                           	line	399
 10153                           ;main.c: 399:                             break;
 10154                           	goto	l6950
 10155  000D00  EF49  F00F         	line	401
 10156                           ;main.c: 401:              case 3:
 10157                           	
 10158                           l280:; BSR set to: 0
 10159  000D04                     
 10160                           	line	402
 10161                           	
 10162                           l6542:; BSR set to: 0
 10163  000D04                     
 10164                           ;main.c: 402:                             IHM.clr();
 10165                           	lfsr	2,(_IHM)+08h
 10166  000D04  EE20  F059         	call	u5138
 10167  000D08  D802               	goto	u5139
 10168  000D0A  EF91  F006         u5138:
 10169  000D0E                     	push
 10170  000D0E  0005               	movwf	pclath
 10171  000D10  6EFA               	movf	postinc2,w
 10172  000D12  50DE               	movwf	tosl
 10173  000D14  6EFD               	movf	postinc2,w
 10174  000D16  50DE               	movwf	tosl+1
 10175  000D18  6EFE               	movf	tblptru,w
 10176  000D1A  50F8               	movwf	tosl+2
 10177  000D1C  6EFF               	movf	pclath,w
 10178  000D1E  50FA               	
 10179                           	return	;indir
 10180  000D20  0012               	u5139:
 10181  000D22                     	line	403
 10182                           	
 10183                           l6544:
 10184  000D22                     ;main.c: 403:                             IHM.printpos(0, 0, "   AJUSTE O INICIO  ");
 10185                           	lfsr	2,(_IHM)+04h
 10186  000D22  EE20  F055         	call	u5148
 10187  000D26  D802               	goto	u5149
 10188  000D28  EFA7  F006         u5148:
 10189  000D2C                     	push
 10190  000D2C  0005               	movwf	pclath
 10191  000D2E  6EFA               	movf	postinc2,w
 10192  000D30  50DE               	movwf	tosl
 10193  000D32  6EFD               	movf	postinc2,w
 10194  000D34  50DE               	movwf	tosl+1
 10195  000D36  6EFE               	movf	tblptru,w
 10196  000D38  50F8               	movwf	tosl+2
 10197  000D3A  6EFF               	movf	pclath,w
 10198  000D3C  50FA               	
 10199                           	movlw	low(0)
 10200  000D3E  0E00               	movwf	((c:dispLCD@col)),c
 10201  000D40  6E2E               		movlw	low(STR_16)
 10202  000D42  0EBF               	movwf	((c:dispLCD@str)),c
 10203  000D44  6E2F               	movlw	high(STR_16)
 10204  000D46  0E7E               	movwf	((c:dispLCD@str+1)),c
 10205  000D48  6E30               
 10206                           	movlw	(0)&0ffh
 10207  000D4A  0E00               	
 10208                           	return	;indir
 10209  000D4C  0012               	u5149:
 10210  000D4E                     	line	404
 10211                           	
 10212                           l6546:
 10213  000D4E                     ;main.c: 404:                             IHM.printpos(1, 0, "     DO SISTEMA     ");
 10214                           	lfsr	2,(_IHM)+04h
 10215  000D4E  EE20  F055         	call	u5158
 10216  000D52  D802               	goto	u5159
 10217  000D54  EFBD  F006         u5158:
 10218  000D58                     	push
 10219  000D58  0005               	movwf	pclath
 10220  000D5A  6EFA               	movf	postinc2,w
 10221  000D5C  50DE               	movwf	tosl
 10222  000D5E  6EFD               	movf	postinc2,w
 10223  000D60  50DE               	movwf	tosl+1
 10224  000D62  6EFE               	movf	tblptru,w
 10225  000D64  50F8               	movwf	tosl+2
 10226  000D66  6EFF               	movf	pclath,w
 10227  000D68  50FA               	
 10228                           	movlw	low(0)
 10229  000D6A  0E00               	movwf	((c:dispLCD@col)),c
 10230  000D6C  6E2E               		movlw	low(STR_17)
 10231  000D6E  0E6B               	movwf	((c:dispLCD@str)),c
 10232  000D70  6E2F               	movlw	high(STR_17)
 10233  000D72  0E7E               	movwf	((c:dispLCD@str+1)),c
 10234  000D74  6E30               
 10235                           	movlw	(01h)&0ffh
 10236  000D76  0E01               	
 10237                           	return	;indir
 10238  000D78  0012               	u5159:
 10239  000D7A                     	line	405
 10240                           	
 10241                           l6548:
 10242  000D7A                     ;main.c: 405:                             estado = 6;
 10243                           	movlw	low(06h)
 10244  000D7A  0E06               	movlb	0	; () banked
 10245  000D7C  0100               	movwf	((main@estado))&0ffh
 10246  000D7E  6FBB               	line	406
 10247                           ;main.c: 406:                             break;
 10248                           	goto	l6950
 10249  000D80  EF49  F00F         	line	408
 10250                           ;main.c: 408:             case 6:
 10251                           	
 10252                           l281:; BSR set to: 0
 10253  000D84                     
 10254                           	line	409
 10255                           	
 10256                           l6550:; BSR set to: 0
 10257  000D84                     
 10258                           ;main.c: 409:                             IHM.printpos(3,0,"   A   B   C   D    ");
 10259                           	lfsr	2,(_IHM)+04h
 10260  000D84  EE20  F055         	call	u5168
 10261  000D88  D802               	goto	u5169
 10262  000D8A  EFD8  F006         u5168:
 10263  000D8E                     	push
 10264  000D8E  0005               	movwf	pclath
 10265  000D90  6EFA               	movf	postinc2,w
 10266  000D92  50DE               	movwf	tosl
 10267  000D94  6EFD               	movf	postinc2,w
 10268  000D96  50DE               	movwf	tosl+1
 10269  000D98  6EFE               	movf	tblptru,w
 10270  000D9A  50F8               	movwf	tosl+2
 10271  000D9C  6EFF               	movf	pclath,w
 10272  000D9E  50FA               	
 10273                           	movlw	low(0)
 10274  000DA0  0E00               	movwf	((c:dispLCD@col)),c
 10275  000DA2  6E2E               		movlw	low(STR_18)
 10276  000DA4  0E80               	movwf	((c:dispLCD@str)),c
 10277  000DA6  6E2F               	movlw	high(STR_18)
 10278  000DA8  0E7E               	movwf	((c:dispLCD@str+1)),c
 10279  000DAA  6E30               
 10280                           	movlw	(03h)&0ffh
 10281  000DAC  0E03               	
 10282                           	return	;indir
 10283  000DAE  0012               	u5169:
 10284  000DB0                     	line	410
 10285                           	
 10286                           l6552:
 10287  000DB0                     ;main.c: 410:                             dispLCD_lincol(3, 4); dispLCD_dataReg(ler_atua
                                 dor('A') ? '+' : '-');
 10288                           	movlw	low(04h)
 10289  000DB0  0E04               	movwf	((c:dispLCD_lincol@col)),c
 10290  000DB2  6E29               	movlw	(03h)&0ffh
 10291  000DB4  0E03               	
 10292                           	call	_dispLCD_lincol
 10293  000DB6  EC8D  F01D         	
 10294                           l6554:
 10295  000DBA                     	movlw	(041h)&0ffh
 10296  000DBA  0E41               	
 10297                           	call	_ler_atuador
 10298  000DBC  EC7E  F019         	iorlw	0
 10299  000DC0  0900               	btfss	status,2
 10300  000DC2  A4D8               	goto	u5171
 10301  000DC4  EFE6  F006         	goto	u5170
 10302  000DC8  EFE8  F006         u5171:
 10303  000DCC                     	goto	l6558
 10304  000DCC  EFEF  F006         u5170:
 10305  000DD0                     	
 10306                           l6556:
 10307  000DD0                     	movlw	high(02Dh)
 10308  000DD0  0E00               	movlb	0	; () banked
 10309  000DD2  0100               	movwf	((_main$669+1))&0ffh
 10310  000DD4  6F8B               	movlw	low(02Dh)
 10311  000DD6  0E2D               	movwf	((_main$669))&0ffh
 10312  000DD8  6F8A               	goto	l6560
 10313  000DDA  EFF6  F006         	
 10314                           l283:; BSR set to: 0
 10315  000DDE                     
 10316                           	
 10317                           l6558:
 10318  000DDE                     	movlw	high(02Bh)
 10319  000DDE  0E00               	movlb	0	; () banked
 10320  000DE0  0100               	movwf	((_main$669+1))&0ffh
 10321  000DE2  6F8B               	movlw	low(02Bh)
 10322  000DE4  0E2B               	movwf	((_main$669))&0ffh
 10323  000DE6  6F8A               	goto	l6560
 10324  000DE8  EFF6  F006         	
 10325                           l285:; BSR set to: 0
 10326  000DEC                     
 10327                           	
 10328                           l6560:; BSR set to: 0
 10329  000DEC                     
 10330                           	movf	((_main$669))&0ffh,w
 10331  000DEC  518A               	
 10332                           	call	_dispLCD_dataReg
 10333  000DEE  EC9B  F01E         	line	411
 10334                           	
 10335                           l6562:
 10336  000DF2                     ;main.c: 411:                             dispLCD_lincol(3, 8);dispLCD_dataReg(ler_atuad
                                 or('B') ? '+' : '-');
 10337                           	movlw	low(08h)
 10338  000DF2  0E08               	movwf	((c:dispLCD_lincol@col)),c
 10339  000DF4  6E29               	movlw	(03h)&0ffh
 10340  000DF6  0E03               	
 10341                           	call	_dispLCD_lincol
 10342  000DF8  EC8D  F01D         	
 10343                           l6564:
 10344  000DFC                     	movlw	(042h)&0ffh
 10345  000DFC  0E42               	
 10346                           	call	_ler_atuador
 10347  000DFE  EC7E  F019         	iorlw	0
 10348  000E02  0900               	btfss	status,2
 10349  000E04  A4D8               	goto	u5181
 10350  000E06  EF07  F007         	goto	u5180
 10351  000E0A  EF09  F007         u5181:
 10352  000E0E                     	goto	l6568
 10353  000E0E  EF10  F007         u5180:
 10354  000E12                     	
 10355                           l6566:
 10356  000E12                     	movlw	high(02Dh)
 10357  000E12  0E00               	movlb	0	; () banked
 10358  000E14  0100               	movwf	((_main$670+1))&0ffh
 10359  000E16  6F8D               	movlw	low(02Dh)
 10360  000E18  0E2D               	movwf	((_main$670))&0ffh
 10361  000E1A  6F8C               	goto	l6570
 10362  000E1C  EF17  F007         	
 10363                           l287:; BSR set to: 0
 10364  000E20                     
 10365                           	
 10366                           l6568:
 10367  000E20                     	movlw	high(02Bh)
 10368  000E20  0E00               	movlb	0	; () banked
 10369  000E22  0100               	movwf	((_main$670+1))&0ffh
 10370  000E24  6F8D               	movlw	low(02Bh)
 10371  000E26  0E2B               	movwf	((_main$670))&0ffh
 10372  000E28  6F8C               	goto	l6570
 10373  000E2A  EF17  F007         	
 10374                           l289:; BSR set to: 0
 10375  000E2E                     
 10376                           	
 10377                           l6570:; BSR set to: 0
 10378  000E2E                     
 10379                           	movf	((_main$670))&0ffh,w
 10380  000E2E  518C               	
 10381                           	call	_dispLCD_dataReg
 10382  000E30  EC9B  F01E         	line	412
 10383                           	
 10384                           l6572:
 10385  000E34                     ;main.c: 412:                             dispLCD_lincol(3, 12);dispLCD_dataReg(ler_atua
                                 dor('C') ? '+' : '-');
 10386                           	movlw	low(0Ch)
 10387  000E34  0E0C               	movwf	((c:dispLCD_lincol@col)),c
 10388  000E36  6E29               	movlw	(03h)&0ffh
 10389  000E38  0E03               	
 10390                           	call	_dispLCD_lincol
 10391  000E3A  EC8D  F01D         	
 10392                           l6574:
 10393  000E3E                     	movlw	(043h)&0ffh
 10394  000E3E  0E43               	
 10395                           	call	_ler_atuador
 10396  000E40  EC7E  F019         	iorlw	0
 10397  000E44  0900               	btfss	status,2
 10398  000E46  A4D8               	goto	u5191
 10399  000E48  EF28  F007         	goto	u5190
 10400  000E4C  EF2A  F007         u5191:
 10401  000E50                     	goto	l6578
 10402  000E50  EF31  F007         u5190:
 10403  000E54                     	
 10404                           l6576:
 10405  000E54                     	movlw	high(02Dh)
 10406  000E54  0E00               	movlb	0	; () banked
 10407  000E56  0100               	movwf	((_main$671+1))&0ffh
 10408  000E58  6F8F               	movlw	low(02Dh)
 10409  000E5A  0E2D               	movwf	((_main$671))&0ffh
 10410  000E5C  6F8E               	goto	l6580
 10411  000E5E  EF38  F007         	
 10412                           l291:; BSR set to: 0
 10413  000E62                     
 10414                           	
 10415                           l6578:
 10416  000E62                     	movlw	high(02Bh)
 10417  000E62  0E00               	movlb	0	; () banked
 10418  000E64  0100               	movwf	((_main$671+1))&0ffh
 10419  000E66  6F8F               	movlw	low(02Bh)
 10420  000E68  0E2B               	movwf	((_main$671))&0ffh
 10421  000E6A  6F8E               	goto	l6580
 10422  000E6C  EF38  F007         	
 10423                           l293:; BSR set to: 0
 10424  000E70                     
 10425                           	
 10426                           l6580:; BSR set to: 0
 10427  000E70                     
 10428                           	movf	((_main$671))&0ffh,w
 10429  000E70  518E               	
 10430                           	call	_dispLCD_dataReg
 10431  000E72  EC9B  F01E         	line	413
 10432                           	
 10433                           l6582:
 10434  000E76                     ;main.c: 413:                             dispLCD_lincol(3, 16);dispLCD_dataReg(ler_atua
                                 dor('D') ? '+' : '-');
 10435                           	movlw	low(010h)
 10436  000E76  0E10               	movwf	((c:dispLCD_lincol@col)),c
 10437  000E78  6E29               	movlw	(03h)&0ffh
 10438  000E7A  0E03               	
 10439                           	call	_dispLCD_lincol
 10440  000E7C  EC8D  F01D         	
 10441                           l6584:
 10442  000E80                     	movlw	(044h)&0ffh
 10443  000E80  0E44               	
 10444                           	call	_ler_atuador
 10445  000E82  EC7E  F019         	iorlw	0
 10446  000E86  0900               	btfss	status,2
 10447  000E88  A4D8               	goto	u5201
 10448  000E8A  EF49  F007         	goto	u5200
 10449  000E8E  EF4B  F007         u5201:
 10450  000E92                     	goto	l6588
 10451  000E92  EF52  F007         u5200:
 10452  000E96                     	
 10453                           l6586:
 10454  000E96                     	movlw	high(02Dh)
 10455  000E96  0E00               	movlb	0	; () banked
 10456  000E98  0100               	movwf	((_main$672+1))&0ffh
 10457  000E9A  6F91               	movlw	low(02Dh)
 10458  000E9C  0E2D               	movwf	((_main$672))&0ffh
 10459  000E9E  6F90               	goto	l6590
 10460  000EA0  EF59  F007         	
 10461                           l295:; BSR set to: 0
 10462  000EA4                     
 10463                           	
 10464                           l6588:
 10465  000EA4                     	movlw	high(02Bh)
 10466  000EA4  0E00               	movlb	0	; () banked
 10467  000EA6  0100               	movwf	((_main$672+1))&0ffh
 10468  000EA8  6F91               	movlw	low(02Bh)
 10469  000EAA  0E2B               	movwf	((_main$672))&0ffh
 10470  000EAC  6F90               	goto	l6590
 10471  000EAE  EF59  F007         	
 10472                           l297:; BSR set to: 0
 10473  000EB2                     
 10474                           	
 10475                           l6590:; BSR set to: 0
 10476  000EB2                     
 10477                           	movf	((_main$672))&0ffh,w
 10478  000EB2  5190               	
 10479                           	call	_dispLCD_dataReg
 10480  000EB4  EC9B  F01E         	line	414
 10481                           	
 10482                           l6592:
 10483  000EB8                     ;main.c: 414:                             estado = 7;
 10484                           	movlw	low(07h)
 10485  000EB8  0E07               	movlb	0	; () banked
 10486  000EBA  0100               	movwf	((main@estado))&0ffh
 10487  000EBC  6FBB               	line	415
 10488                           ;main.c: 415:                             break;
 10489                           	goto	l6950
 10490  000EBE  EF49  F00F         	line	417
 10491                           ;main.c: 417:             case 7:
 10492                           	
 10493                           l298:; BSR set to: 0
 10494  000EC2                     
 10495                           	line	418
 10496                           	
 10497                           l6594:; BSR set to: 0
 10498  000EC2                     
 10499                           ;main.c: 418:                             tecla = teclado_borda();
 10500                           	call	_teclado_borda	;wreg free
 10501  000EC2  EC31  F01F         	movlb	0	; () banked
 10502  000EC6  0100               	movwf	((main@tecla))&0ffh
 10503  000EC8  6FBC               	line	419
 10504                           ;main.c: 419:                             switch(tecla)
 10505                           	goto	l6634
 10506  000ECA  EF0D  F008         	line	421
 10507                           ;main.c: 420:                             {;main.c: 421:                                
                                  case 'A': alt_atuador(tecla); dispLCD_lincol(3, 4); dispLCD_dataReg(ler_atuador('A') ? 
                                 '+' : '-'); break;
 10508                           	
 10509                           l300:; BSR set to: 0
 10510  000ECE                     
 10511                           	
 10512                           l6596:; BSR set to: 0
 10513  000ECE                     
 10514                           	movf	((main@tecla))&0ffh,w
 10515  000ECE  51BC               	
 10516                           	call	_alt_atuador
 10517  000ED0  EC94  F01A         	movlw	low(04h)
 10518  000ED4  0E04               	movwf	((c:dispLCD_lincol@col)),c
 10519  000ED6  6E29               	movlw	(03h)&0ffh
 10520  000ED8  0E03               	
 10521                           	call	_dispLCD_lincol
 10522  000EDA  EC8D  F01D         	movlw	(041h)&0ffh
 10523  000EDE  0E41               	
 10524                           	call	_ler_atuador
 10525  000EE0  EC7E  F019         	iorlw	0
 10526  000EE4  0900               	btfss	status,2
 10527  000EE6  A4D8               	goto	u5211
 10528  000EE8  EF78  F007         	goto	u5210
 10529  000EEC  EF7A  F007         u5211:
 10530  000EF0                     	goto	l6600
 10531  000EF0  EF81  F007         u5210:
 10532  000EF4                     	
 10533                           l6598:
 10534  000EF4                     	movlw	high(02Dh)
 10535  000EF4  0E00               	movlb	0	; () banked
 10536  000EF6  0100               	movwf	((_main$673+1))&0ffh
 10537  000EF8  6F93               	movlw	low(02Dh)
 10538  000EFA  0E2D               	movwf	((_main$673))&0ffh
 10539  000EFC  6F92               	goto	l6602
 10540  000EFE  EF88  F007         	
 10541                           l302:; BSR set to: 0
 10542  000F02                     
 10543                           	
 10544                           l6600:
 10545  000F02                     	movlw	high(02Bh)
 10546  000F02  0E00               	movlb	0	; () banked
 10547  000F04  0100               	movwf	((_main$673+1))&0ffh
 10548  000F06  6F93               	movlw	low(02Bh)
 10549  000F08  0E2B               	movwf	((_main$673))&0ffh
 10550  000F0A  6F92               	goto	l6602
 10551  000F0C  EF88  F007         	
 10552                           l304:; BSR set to: 0
 10553  000F10                     
 10554                           	
 10555                           l6602:; BSR set to: 0
 10556  000F10                     
 10557                           	movf	((_main$673))&0ffh,w
 10558  000F10  5192               	
 10559                           	call	_dispLCD_dataReg
 10560  000F12  EC9B  F01E         	goto	l6950
 10561  000F16  EF49  F00F         	line	422
 10562                           ;main.c: 422:                                 case 'B': alt_atuador(tecla); dispLCD_linc
                                 ol(3, 8); dispLCD_dataReg(ler_atuador('B') ? '+' : '-'); break;
 10563                           	
 10564                           l306:
 10565  000F1A                     	
 10566                           l6604:
 10567  000F1A                     	movlb	0	; () banked
 10568  000F1A  0100               	movf	((main@tecla))&0ffh,w
 10569  000F1C  51BC               	
 10570                           	call	_alt_atuador
 10571  000F1E  EC94  F01A         	movlw	low(08h)
 10572  000F22  0E08               	movwf	((c:dispLCD_lincol@col)),c
 10573  000F24  6E29               	movlw	(03h)&0ffh
 10574  000F26  0E03               	
 10575                           	call	_dispLCD_lincol
 10576  000F28  EC8D  F01D         	movlw	(042h)&0ffh
 10577  000F2C  0E42               	
 10578                           	call	_ler_atuador
 10579  000F2E  EC7E  F019         	iorlw	0
 10580  000F32  0900               	btfss	status,2
 10581  000F34  A4D8               	goto	u5221
 10582  000F36  EF9F  F007         	goto	u5220
 10583  000F3A  EFA1  F007         u5221:
 10584  000F3E                     	goto	l6608
 10585  000F3E  EFA8  F007         u5220:
 10586  000F42                     	
 10587                           l6606:
 10588  000F42                     	movlw	high(02Dh)
 10589  000F42  0E00               	movlb	0	; () banked
 10590  000F44  0100               	movwf	((_main$674+1))&0ffh
 10591  000F46  6F95               	movlw	low(02Dh)
 10592  000F48  0E2D               	movwf	((_main$674))&0ffh
 10593  000F4A  6F94               	goto	l6610
 10594  000F4C  EFAF  F007         	
 10595                           l308:; BSR set to: 0
 10596  000F50                     
 10597                           	
 10598                           l6608:
 10599  000F50                     	movlw	high(02Bh)
 10600  000F50  0E00               	movlb	0	; () banked
 10601  000F52  0100               	movwf	((_main$674+1))&0ffh
 10602  000F54  6F95               	movlw	low(02Bh)
 10603  000F56  0E2B               	movwf	((_main$674))&0ffh
 10604  000F58  6F94               	goto	l6610
 10605  000F5A  EFAF  F007         	
 10606                           l310:; BSR set to: 0
 10607  000F5E                     
 10608                           	
 10609                           l6610:; BSR set to: 0
 10610  000F5E                     
 10611                           	movf	((_main$674))&0ffh,w
 10612  000F5E  5194               	
 10613                           	call	_dispLCD_dataReg
 10614  000F60  EC9B  F01E         	goto	l6950
 10615  000F64  EF49  F00F         	line	423
 10616                           ;main.c: 423:                                 case 'C': alt_atuador(tecla); dispLCD_linc
                                 ol(3,12); dispLCD_dataReg(ler_atuador('C') ? '+' : '-'); break;
 10617                           	
 10618                           l311:
 10619  000F68                     	
 10620                           l6612:
 10621  000F68                     	movlb	0	; () banked
 10622  000F68  0100               	movf	((main@tecla))&0ffh,w
 10623  000F6A  51BC               	
 10624                           	call	_alt_atuador
 10625  000F6C  EC94  F01A         	movlw	low(0Ch)
 10626  000F70  0E0C               	movwf	((c:dispLCD_lincol@col)),c
 10627  000F72  6E29               	movlw	(03h)&0ffh
 10628  000F74  0E03               	
 10629                           	call	_dispLCD_lincol
 10630  000F76  EC8D  F01D         	movlw	(043h)&0ffh
 10631  000F7A  0E43               	
 10632                           	call	_ler_atuador
 10633  000F7C  EC7E  F019         	iorlw	0
 10634  000F80  0900               	btfss	status,2
 10635  000F82  A4D8               	goto	u5231
 10636  000F84  EFC6  F007         	goto	u5230
 10637  000F88  EFC8  F007         u5231:
 10638  000F8C                     	goto	l6616
 10639  000F8C  EFCF  F007         u5230:
 10640  000F90                     	
 10641                           l6614:
 10642  000F90                     	movlw	high(02Dh)
 10643  000F90  0E00               	movlb	0	; () banked
 10644  000F92  0100               	movwf	((_main$675+1))&0ffh
 10645  000F94  6F97               	movlw	low(02Dh)
 10646  000F96  0E2D               	movwf	((_main$675))&0ffh
 10647  000F98  6F96               	goto	l6618
 10648  000F9A  EFD6  F007         	
 10649                           l313:; BSR set to: 0
 10650  000F9E                     
 10651                           	
 10652                           l6616:
 10653  000F9E                     	movlw	high(02Bh)
 10654  000F9E  0E00               	movlb	0	; () banked
 10655  000FA0  0100               	movwf	((_main$675+1))&0ffh
 10656  000FA2  6F97               	movlw	low(02Bh)
 10657  000FA4  0E2B               	movwf	((_main$675))&0ffh
 10658  000FA6  6F96               	goto	l6618
 10659  000FA8  EFD6  F007         	
 10660                           l315:; BSR set to: 0
 10661  000FAC                     
 10662                           	
 10663                           l6618:; BSR set to: 0
 10664  000FAC                     
 10665                           	movf	((_main$675))&0ffh,w
 10666  000FAC  5196               	
 10667                           	call	_dispLCD_dataReg
 10668  000FAE  EC9B  F01E         	goto	l6950
 10669  000FB2  EF49  F00F         	line	424
 10670                           ;main.c: 424:                                 case 'D': alt_atuador(tecla); dispLCD_linc
                                 ol(3,16); dispLCD_dataReg(ler_atuador('D') ? '+' : '-'); break;
 10671                           	
 10672                           l316:
 10673  000FB6                     	
 10674                           l6620:
 10675  000FB6                     	movlb	0	; () banked
 10676  000FB6  0100               	movf	((main@tecla))&0ffh,w
 10677  000FB8  51BC               	
 10678                           	call	_alt_atuador
 10679  000FBA  EC94  F01A         	movlw	low(010h)
 10680  000FBE  0E10               	movwf	((c:dispLCD_lincol@col)),c
 10681  000FC0  6E29               	movlw	(03h)&0ffh
 10682  000FC2  0E03               	
 10683                           	call	_dispLCD_lincol
 10684  000FC4  EC8D  F01D         	movlw	(044h)&0ffh
 10685  000FC8  0E44               	
 10686                           	call	_ler_atuador
 10687  000FCA  EC7E  F019         	iorlw	0
 10688  000FCE  0900               	btfss	status,2
 10689  000FD0  A4D8               	goto	u5241
 10690  000FD2  EFED  F007         	goto	u5240
 10691  000FD6  EFEF  F007         u5241:
 10692  000FDA                     	goto	l6624
 10693  000FDA  EFF6  F007         u5240:
 10694  000FDE                     	
 10695                           l6622:
 10696  000FDE                     	movlw	high(02Dh)
 10697  000FDE  0E00               	movlb	0	; () banked
 10698  000FE0  0100               	movwf	((_main$676+1))&0ffh
 10699  000FE2  6F99               	movlw	low(02Dh)
 10700  000FE4  0E2D               	movwf	((_main$676))&0ffh
 10701  000FE6  6F98               	goto	l6626
 10702  000FE8  EFFD  F007         	
 10703                           l318:; BSR set to: 0
 10704  000FEC                     
 10705                           	
 10706                           l6624:
 10707  000FEC                     	movlw	high(02Bh)
 10708  000FEC  0E00               	movlb	0	; () banked
 10709  000FEE  0100               	movwf	((_main$676+1))&0ffh
 10710  000FF0  6F99               	movlw	low(02Bh)
 10711  000FF2  0E2B               	movwf	((_main$676))&0ffh
 10712  000FF4  6F98               	goto	l6626
 10713  000FF6  EFFD  F007         	
 10714                           l320:; BSR set to: 0
 10715  000FFA                     
 10716                           	
 10717                           l6626:; BSR set to: 0
 10718  000FFA                     
 10719                           	movf	((_main$676))&0ffh,w
 10720  000FFA  5198               	
 10721                           	call	_dispLCD_dataReg
 10722  000FFC  EC9B  F01E         	goto	l6950
 10723  001000  EF49  F00F         	line	425
 10724                           ;main.c: 425:                                 case '#': estado = 10; break;
 10725                           	
 10726                           l321:
 10727  001004                     	
 10728                           l6628:
 10729  001004                     	movlw	low(0Ah)
 10730  001004  0E0A               	movlb	0	; () banked
 10731  001006  0100               	movwf	((main@estado))&0ffh
 10732  001008  6FBB               	goto	l6950
 10733  00100A  EF49  F00F         	line	426
 10734                           ;main.c: 426:                                 case '*': estado = 8; break;
 10735                           	
 10736                           l322:; BSR set to: 0
 10737  00100E                     
 10738                           	
 10739                           l6630:; BSR set to: 0
 10740  00100E                     
 10741                           	movlw	low(08h)
 10742  00100E  0E08               	movwf	((main@estado))&0ffh
 10743  001010  6FBB               	goto	l6950
 10744  001012  EF49  F00F         	line	427
 10745                           	
 10746                           l6632:; BSR set to: 0
 10747  001016                     
 10748                           ;main.c: 427:                             }
 10749                           	goto	l6950
 10750  001016  EF49  F00F         	
 10751                           l299:; BSR set to: 0
 10752  00101A                     
 10753                           	
 10754                           l6634:; BSR set to: 0
 10755  00101A                     
 10756                           	movf	((main@tecla))&0ffh,w
 10757  00101A  51BC               	movwf	(??_main+0+0)&0ffh,c
 10758  00101C  6E45               	clrf	(??_main+0+0+1)&0ffh,c
 10759  00101E  6A46               
 10760                           	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
 10761                           ; Switch size 1, requested type "space"
 10762                           ; Number of cases is 1, Range of values is 0 to 0
 10763                           ; switch strategies available:
 10764                           ; Name         Instructions Cycles
 10765                           ; simple_byte            4     3 (average)
 10766                           ;	Chosen strategy is simple_byte
 10767                           
 10768                           	movf ??_main+0+1,c,w
 10769  001020  5046               	xorlw	0^0	; case 0
 10770  001022  0A00               	skipnz
 10771  001024  B4D8               	goto	l7828
 10772  001026  EF17  F008         	goto	l6950
 10773  00102A  EF49  F00F         	
 10774                           l7828:; BSR set to: 0
 10775  00102E                     
 10776                           ; Switch size 1, requested type "space"
 10777                           ; Number of cases is 6, Range of values is 35 to 68
 10778                           ; switch strategies available:
 10779                           ; Name         Instructions Cycles
 10780                           ; simple_byte           19    10 (average)
 10781                           ;	Chosen strategy is simple_byte
 10782                           
 10783                           	movf ??_main+0+0,c,w
 10784  00102E  5045               	xorlw	35^0	; case 35
 10785  001030  0A23               	skipnz
 10786  001032  B4D8               	goto	l6628
 10787  001034  EF02  F008         	xorlw	42^35	; case 42
 10788  001038  0A09               	skipnz
 10789  00103A  B4D8               	goto	l6630
 10790  00103C  EF07  F008         	xorlw	65^42	; case 65
 10791  001040  0A6B               	skipnz
 10792  001042  B4D8               	goto	l6596
 10793  001044  EF67  F007         	xorlw	66^65	; case 66
 10794  001048  0A03               	skipnz
 10795  00104A  B4D8               	goto	l6604
 10796  00104C  EF8D  F007         	xorlw	67^66	; case 67
 10797  001050  0A01               	skipnz
 10798  001052  B4D8               	goto	l6612
 10799  001054  EFB4  F007         	xorlw	68^67	; case 68
 10800  001058  0A07               	skipnz
 10801  00105A  B4D8               	goto	l6620
 10802  00105C  EFDB  F007         	goto	l6950
 10803  001060  EF49  F00F         
 10804                           	
 10805                           l305:; BSR set to: 0
 10806  001064                     
 10807                           	line	428
 10808                           ;main.c: 428:                             break;
 10809                           	goto	l6950
 10810  001064  EF49  F00F         	line	432
 10811                           ;main.c: 432:             case 10:
 10812                           	
 10813                           l323:; BSR set to: 0
 10814  001068                     
 10815                           	line	433
 10816                           	
 10817                           l6636:; BSR set to: 0
 10818  001068                     
 10819                           ;main.c: 433:                             init_cond = salva_atuadores_init();
 10820                           	call	_salva_atuadores_init	;wreg free
 10821  001068  ECE3  F01A         	movlb	0	; () banked
 10822  00106C  0100               	movwf	((main@init_cond))&0ffh
 10823  00106E  6FB2               	line	434
 10824                           	
 10825                           l6638:; BSR set to: 0
 10826  001070                     
 10827                           ;main.c: 434:                             IHM.clr();
 10828                           	lfsr	2,(_IHM)+08h
 10829  001070  EE20  F059         	call	u5258
 10830  001074  D802               	goto	u5259
 10831  001076  EF47  F008         u5258:
 10832  00107A                     	push
 10833  00107A  0005               	movwf	pclath
 10834  00107C  6EFA               	movf	postinc2,w
 10835  00107E  50DE               	movwf	tosl
 10836  001080  6EFD               	movf	postinc2,w
 10837  001082  50DE               	movwf	tosl+1
 10838  001084  6EFE               	movf	tblptru,w
 10839  001086  50F8               	movwf	tosl+2
 10840  001088  6EFF               	movf	pclath,w
 10841  00108A  50FA               	
 10842                           	return	;indir
 10843  00108C  0012               	u5259:
 10844  00108E                     	line	435
 10845                           	
 10846                           l6640:
 10847  00108E                     ;main.c: 435:                             IHM.printpos(0, 0, "  INSIRA OS PASSOS  ");
 10848                           	lfsr	2,(_IHM)+04h
 10849  00108E  EE20  F055         	call	u5268
 10850  001092  D802               	goto	u5269
 10851  001094  EF5D  F008         u5268:
 10852  001098                     	push
 10853  001098  0005               	movwf	pclath
 10854  00109A  6EFA               	movf	postinc2,w
 10855  00109C  50DE               	movwf	tosl
 10856  00109E  6EFD               	movf	postinc2,w
 10857  0010A0  50DE               	movwf	tosl+1
 10858  0010A2  6EFE               	movf	tblptru,w
 10859  0010A4  50F8               	movwf	tosl+2
 10860  0010A6  6EFF               	movf	pclath,w
 10861  0010A8  50FA               	
 10862                           	movlw	low(0)
 10863  0010AA  0E00               	movwf	((c:dispLCD@col)),c
 10864  0010AC  6E2E               		movlw	low(STR_19)
 10865  0010AE  0ED4               	movwf	((c:dispLCD@str)),c
 10866  0010B0  6E2F               	movlw	high(STR_19)
 10867  0010B2  0E7E               	movwf	((c:dispLCD@str+1)),c
 10868  0010B4  6E30               
 10869                           	movlw	(0)&0ffh
 10870  0010B6  0E00               	
 10871                           	return	;indir
 10872  0010B8  0012               	u5269:
 10873  0010BA                     	line	436
 10874                           	
 10875                           l6642:
 10876  0010BA                     ;main.c: 436:                             estado = 14;
 10877                           	movlw	low(0Eh)
 10878  0010BA  0E0E               	movlb	0	; () banked
 10879  0010BC  0100               	movwf	((main@estado))&0ffh
 10880  0010BE  6FBB               	line	437
 10881                           ;main.c: 437:                             break;
 10882                           	goto	l6950
 10883  0010C0  EF49  F00F         	line	439
 10884                           ;main.c: 439:              case 11:
 10885                           	
 10886                           l324:; BSR set to: 0
 10887  0010C4                     
 10888                           	line	440
 10889                           	
 10890                           l6644:; BSR set to: 0
 10891  0010C4                     
 10892                           ;main.c: 440:                             tecla = teclado_borda();
 10893                           	call	_teclado_borda
 10894  0010C4  EC31  F01F         	movlb	0	; () banked
 10895  0010C8  0100               	movwf	((main@tecla))&0ffh
 10896  0010CA  6FBC               	line	441
 10897                           ;main.c: 441:                             switch( tecla )
 10898                           	goto	l6680
 10899  0010CC  EFD7  F008         	line	443
 10900                           ;main.c: 442:                             {;main.c: 443:                                
                                  case 'A':
 10901                           	
 10902                           l326:; BSR set to: 0
 10903  0010D0                     
 10904                           	goto	l6646
 10905  0010D0  EF6E  F008         	line	444
 10906                           ;main.c: 444:                                 case 'B':
 10907                           	
 10908                           l327:; BSR set to: 0
 10909  0010D4                     
 10910                           	goto	l6646
 10911  0010D4  EF6E  F008         	line	445
 10912                           ;main.c: 445:                                 case 'C':
 10913                           	
 10914                           l328:; BSR set to: 0
 10915  0010D8                     
 10916                           	goto	l6646
 10917  0010D8  EF6E  F008         	line	446
 10918                           ;main.c: 446:                                 case 'D':
 10919                           	
 10920                           l329:; BSR set to: 0
 10921  0010DC                     
 10922                           	line	447
 10923                           	
 10924                           l6646:; BSR set to: 0
 10925  0010DC                     
 10926                           ;main.c: 447:                                             if( fifo_disponivel() )
 10927                           	call	_fifo_disponivel	;wreg free
 10928  0010DC  EC3E  F021         	iorlw	0
 10929  0010E0  0900               	btfsc	status,2
 10930  0010E2  B4D8               	goto	u5271
 10931  0010E4  EF76  F008         	goto	u5270
 10932  0010E8  EF78  F008         u5271:
 10933  0010EC                     	goto	l6950
 10934  0010EC  EF49  F00F         u5270:
 10935  0010F0                     	line	449
 10936                           	
 10937                           l6648:
 10938  0010F0                     ;main.c: 448:                                             {;main.c: 449:                
                                                                  alt_atuador(tecla);
 10939                           	movlb	0	; () banked
 10940  0010F0  0100               	movf	((main@tecla))&0ffh,w
 10941  0010F2  51BC               	
 10942                           	call	_alt_atuador
 10943  0010F4  EC94  F01A         	line	450
 10944                           ;main.c: 450:                                                 fifo_add( ler_atuador(tecl
                                 a) ? tecla : tecla|0x20 );
 10945                           	movlb	0	; () banked
 10946  0010F8  0100               	movf	((main@tecla))&0ffh,w
 10947  0010FA  51BC               	
 10948                           	call	_ler_atuador
 10949  0010FC  EC7E  F019         	iorlw	0
 10950  001100  0900               	btfss	status,2
 10951  001102  A4D8               	goto	u5281
 10952  001104  EF86  F008         	goto	u5280
 10953  001108  EF88  F008         u5281:
 10954  00110C                     	goto	l332
 10955  00110C  EF93  F008         u5280:
 10956  001110                     	
 10957                           l6650:
 10958  001110                     	movlw	020h
 10959  001110  0E20               	movff	(main@tecla),??_main+0+0
 10960  001112  C0BC  F045         	clrf	(??_main+0+0+1)&0ffh,c
 10961  001116  6A46               	iorwf	(??_main+0+0),c,w
 10962  001118  1045               	movlb	0	; () banked
 10963  00111A  0100               	movwf	((_main$678))&0ffh
 10964  00111C  6F9A               	movf	(??_main+0+1),c,w
 10965  00111E  5046               	movwf	1+((_main$678))&0ffh
 10966  001120  6F9B               	goto	l6652
 10967  001122  EF99  F008         	
 10968                           l332:
 10969  001126                     	movff	(main@tecla),(_main$678)
 10970  001126  C0BC  F09A         	movlb	0	; () banked
 10971  00112A  0100               	clrf	((_main$678+1))&0ffh
 10972  00112C  6B9B               	goto	l6652
 10973  00112E  EF99  F008         	
 10974                           l334:; BSR set to: 0
 10975  001132                     
 10976                           	
 10977                           l6652:; BSR set to: 0
 10978  001132                     
 10979                           	movf	((_main$678))&0ffh,w
 10980  001132  519A               	
 10981                           	call	_fifo_add
 10982  001134  ECF3  F01C         	line	451
 10983                           	
 10984                           l6654:
 10985  001138                     ;main.c: 451:                                                 estado = 16;
 10986                           	movlw	low(010h)
 10987  001138  0E10               	movlb	0	; () banked
 10988  00113A  0100               	movwf	((main@estado))&0ffh
 10989  00113C  6FBB               	goto	l6950
 10990  00113E  EF49  F00F         	line	452
 10991                           ;main.c: 452:                                             }
 10992                           	
 10993                           l330:; BSR set to: 0
 10994  001142                     
 10995                           	line	453
 10996                           ;main.c: 453:                                             break;
 10997                           	goto	l6950
 10998  001142  EF49  F00F         	line	454
 10999                           ;main.c: 454:                                 case '6':
 11000                           	
 11001                           l336:; BSR set to: 0
 11002  001146                     
 11003                           	line	455
 11004                           	
 11005                           l6656:; BSR set to: 0
 11006  001146                     
 11007                           ;main.c: 455:                                             fifo_indicePrint_inc();
 11008                           	call	_fifo_indicePrint_inc	;wreg free
 11009  001146  EC5A  F01D         	line	456
 11010                           	
 11011                           l6658:
 11012  00114A                     ;main.c: 456:                                             estado = 16;
 11013                           	movlw	low(010h)
 11014  00114A  0E10               	movlb	0	; () banked
 11015  00114C  0100               	movwf	((main@estado))&0ffh
 11016  00114E  6FBB               	line	457
 11017                           ;main.c: 457:                                             break;
 11018                           	goto	l6950
 11019  001150  EF49  F00F         	line	458
 11020                           ;main.c: 458:                                 case '4':
 11021                           	
 11022                           l337:; BSR set to: 0
 11023  001154                     
 11024                           	line	459
 11025                           	
 11026                           l6660:; BSR set to: 0
 11027  001154                     
 11028                           ;main.c: 459:                                             fifo_indicePrint_dec();
 11029                           	call	_fifo_indicePrint_dec	;wreg free
 11030  001154  EC58  F021         	line	460
 11031                           	
 11032                           l6662:
 11033  001158                     ;main.c: 460:                                             estado = 16;
 11034                           	movlw	low(010h)
 11035  001158  0E10               	movlb	0	; () banked
 11036  00115A  0100               	movwf	((main@estado))&0ffh
 11037  00115C  6FBB               	line	461
 11038                           ;main.c: 461:                                             break;
 11039                           	goto	l6950
 11040  00115E  EF49  F00F         	line	463
 11041                           ;main.c: 463:                                 case '*':
 11042                           	
 11043                           l338:; BSR set to: 0
 11044  001162                     
 11045                           	line	464
 11046                           	
 11047                           l6664:; BSR set to: 0
 11048  001162                     
 11049                           ;main.c: 464:                                             if(fifo_indice() == 2 )
 11050                           	call	_fifo_indice	;wreg free
 11051  001162  ECD8  F021         	xorlw	02h
 11052  001166  0A02               	btfss	status,2
 11053  001168  A4D8               	goto	u5291
 11054  00116A  EFB9  F008         	goto	u5290
 11055  00116E  EFBB  F008         u5291:
 11056  001172                     	goto	l6668
 11057  001172  EFC0  F008         u5290:
 11058  001176                     	line	465
 11059                           	
 11060                           l6666:
 11061  001176                     ;main.c: 465:                                                 estado = 3;
 11062                           	movlw	low(03h)
 11063  001176  0E03               	movlb	0	; () banked
 11064  001178  0100               	movwf	((main@estado))&0ffh
 11065  00117A  6FBB               	goto	l6950
 11066  00117C  EF49  F00F         	line	466
 11067                           ;main.c: 466:                                             else
 11068                           	
 11069                           l339:; BSR set to: 0
 11070  001180                     
 11071                           	line	468
 11072                           	
 11073                           l6668:
 11074  001180                     ;main.c: 467:                                             {;main.c: 468:                
                                                                  fifo_delete();
 11075                           	call	_fifo_delete	;wreg free
 11076  001180  ECDC  F019         	line	469
 11077                           	
 11078                           l6670:
 11079  001184                     ;main.c: 469:                                                 estado = 16;
 11080                           	movlw	low(010h)
 11081  001184  0E10               	movlb	0	; () banked
 11082  001186  0100               	movwf	((main@estado))&0ffh
 11083  001188  6FBB               	goto	l6950
 11084  00118A  EF49  F00F         	line	470
 11085                           ;main.c: 470:                                             }
 11086                           	
 11087                           l340:; BSR set to: 0
 11088  00118E                     
 11089                           	line	471
 11090                           ;main.c: 471:                                             break;
 11091                           	goto	l6950
 11092  00118E  EF49  F00F         	line	473
 11093                           ;main.c: 473:                                 case '#': estado = 74; break;
 11094                           	
 11095                           l341:; BSR set to: 0
 11096  001192                     
 11097                           	
 11098                           l6672:; BSR set to: 0
 11099  001192                     
 11100                           	movlw	low(04Ah)
 11101  001192  0E4A               	movwf	((main@estado))&0ffh
 11102  001194  6FBB               	goto	l6950
 11103  001196  EF49  F00F         	line	475
 11104                           ;main.c: 475:                                 case '0': estado = 41; break;
 11105                           	
 11106                           l342:; BSR set to: 0
 11107  00119A                     
 11108                           	
 11109                           l6674:; BSR set to: 0
 11110  00119A                     
 11111                           	movlw	low(029h)
 11112  00119A  0E29               	movwf	((main@estado))&0ffh
 11113  00119C  6FBB               	goto	l6950
 11114  00119E  EF49  F00F         	line	477
 11115                           ;main.c: 477:                                 case '9': estado = 90; break;
 11116                           	
 11117                           l343:; BSR set to: 0
 11118  0011A2                     
 11119                           	
 11120                           l6676:; BSR set to: 0
 11121  0011A2                     
 11122                           	movlw	low(05Ah)
 11123  0011A2  0E5A               	movwf	((main@estado))&0ffh
 11124  0011A4  6FBB               	goto	l6950
 11125  0011A6  EF49  F00F         	line	478
 11126                           	
 11127                           l6678:; BSR set to: 0
 11128  0011AA                     
 11129                           ;main.c: 478:                             }
 11130                           	goto	l6950
 11131  0011AA  EF49  F00F         	
 11132                           l325:; BSR set to: 0
 11133  0011AE                     
 11134                           	
 11135                           l6680:; BSR set to: 0
 11136  0011AE                     
 11137                           	movf	((main@tecla))&0ffh,w
 11138  0011AE  51BC               	movwf	(??_main+0+0)&0ffh,c
 11139  0011B0  6E45               	clrf	(??_main+0+0+1)&0ffh,c
 11140  0011B2  6A46               
 11141                           	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
 11142                           ; Switch size 1, requested type "space"
 11143                           ; Number of cases is 1, Range of values is 0 to 0
 11144                           ; switch strategies available:
 11145                           ; Name         Instructions Cycles
 11146                           ; simple_byte            4     3 (average)
 11147                           ;	Chosen strategy is simple_byte
 11148                           
 11149                           	movf ??_main+0+1,c,w
 11150  0011B4  5046               	xorlw	0^0	; case 0
 11151  0011B6  0A00               	skipnz
 11152  0011B8  B4D8               	goto	l7830
 11153  0011BA  EFE1  F008         	goto	l6950
 11154  0011BE  EF49  F00F         	
 11155                           l7830:; BSR set to: 0
 11156  0011C2                     
 11157                           ; Switch size 1, requested type "space"
 11158                           ; Number of cases is 10, Range of values is 35 to 68
 11159                           ; switch strategies available:
 11160                           ; Name         Instructions Cycles
 11161                           ; simple_byte           31    16 (average)
 11162                           ;	Chosen strategy is simple_byte
 11163                           
 11164                           	movf ??_main+0+0,c,w
 11165  0011C2  5045               	xorlw	35^0	; case 35
 11166  0011C4  0A23               	skipnz
 11167  0011C6  B4D8               	goto	l6672
 11168  0011C8  EFC9  F008         	xorlw	42^35	; case 42
 11169  0011CC  0A09               	skipnz
 11170  0011CE  B4D8               	goto	l6664
 11171  0011D0  EFB1  F008         	xorlw	48^42	; case 48
 11172  0011D4  0A1A               	skipnz
 11173  0011D6  B4D8               	goto	l6674
 11174  0011D8  EFCD  F008         	xorlw	52^48	; case 52
 11175  0011DC  0A04               	skipnz
 11176  0011DE  B4D8               	goto	l6660
 11177  0011E0  EFAA  F008         	xorlw	54^52	; case 54
 11178  0011E4  0A02               	skipnz
 11179  0011E6  B4D8               	goto	l6656
 11180  0011E8  EFA3  F008         	xorlw	57^54	; case 57
 11181  0011EC  0A0F               	skipnz
 11182  0011EE  B4D8               	goto	l6676
 11183  0011F0  EFD1  F008         	xorlw	65^57	; case 65
 11184  0011F4  0A78               	skipnz
 11185  0011F6  B4D8               	goto	l6646
 11186  0011F8  EF6E  F008         	xorlw	66^65	; case 66
 11187  0011FC  0A03               	skipnz
 11188  0011FE  B4D8               	goto	l6646
 11189  001200  EF6E  F008         	xorlw	67^66	; case 67
 11190  001204  0A01               	skipnz
 11191  001206  B4D8               	goto	l6646
 11192  001208  EF6E  F008         	xorlw	68^67	; case 68
 11193  00120C  0A07               	skipnz
 11194  00120E  B4D8               	goto	l6646
 11195  001210  EF6E  F008         	goto	l6950
 11196  001214  EF49  F00F         
 11197                           	
 11198                           l335:; BSR set to: 0
 11199  001218                     
 11200                           	line	479
 11201                           ;main.c: 479:                             break;
 11202                           	goto	l6950
 11203  001218  EF49  F00F         	line	481
 11204                           ;main.c: 481:              case 16:
 11205                           	
 11206                           l344:; BSR set to: 0
 11207  00121C                     
 11208                           	line	482
 11209                           	
 11210                           l6682:; BSR set to: 0
 11211  00121C                     
 11212                           ;main.c: 482:                             fifo_print();
 11213                           	call	_fifo_print	;wreg free
 11214  00121C  ECCD  F010         	line	483
 11215                           	
 11216                           l6684:
 11217  001220                     ;main.c: 483:                             estado = 14;
 11218                           	movlw	low(0Eh)
 11219  001220  0E0E               	movlb	0	; () banked
 11220  001222  0100               	movwf	((main@estado))&0ffh
 11221  001224  6FBB               	line	484
 11222                           ;main.c: 484:                             break;
 11223                           	goto	l6950
 11224  001226  EF49  F00F         	line	486
 11225                           ;main.c: 486:              case 14:
 11226                           	
 11227                           l345:; BSR set to: 0
 11228  00122A                     
 11229                           	line	487
 11230                           	
 11231                           l6686:; BSR set to: 0
 11232  00122A                     
 11233                           ;main.c: 487:                             IHM.printpos(3,0,"<  /  >");
 11234                           	lfsr	2,(_IHM)+04h
 11235  00122A  EE20  F055         	call	u5308
 11236  00122E  D802               	goto	u5309
 11237  001230  EF2B  F009         u5308:
 11238  001234                     	push
 11239  001234  0005               	movwf	pclath
 11240  001236  6EFA               	movf	postinc2,w
 11241  001238  50DE               	movwf	tosl
 11242  00123A  6EFD               	movf	postinc2,w
 11243  00123C  50DE               	movwf	tosl+1
 11244  00123E  6EFE               	movf	tblptru,w
 11245  001240  50F8               	movwf	tosl+2
 11246  001242  6EFF               	movf	pclath,w
 11247  001244  50FA               	
 11248                           	movlw	low(0)
 11249  001246  0E00               	movwf	((c:dispLCD@col)),c
 11250  001248  6E2E               		movlw	low(STR_20)
 11251  00124A  0EF5               	movwf	((c:dispLCD@str)),c
 11252  00124C  6E2F               	movlw	high(STR_20)
 11253  00124E  0E7F               	movwf	((c:dispLCD@str+1)),c
 11254  001250  6E30               
 11255                           	movlw	(03h)&0ffh
 11256  001252  0E03               	
 11257                           	return	;indir
 11258  001254  0012               	u5309:
 11259  001256                     	line	488
 11260                           	
 11261                           l6688:
 11262  001256                     ;main.c: 488:                             IHM.printv(3, 1,( fifo_indice()-2 ), 2);
 11263                           	lfsr	2,(_IHM)+06h
 11264  001256  EE20  F057         	call	u5318
 11265  00125A  D802               	goto	u5319
 11266  00125C  EF48  F009         u5318:
 11267  001260                     	push
 11268  001260  0005               	movwf	pclath
 11269  001262  6EFA               	movf	postinc2,w
 11270  001264  50DE               	movwf	tosl
 11271  001266  6EFD               	movf	postinc2,w
 11272  001268  50DE               	movwf	tosl+1
 11273  00126A  6EFE               	movf	tblptru,w
 11274  00126C  50F8               	movwf	tosl+2
 11275  00126E  6EFF               	movf	pclath,w
 11276  001270  50FA               	
 11277                           	movlw	low(01h)
 11278  001272  0E01               	movwf	((c:dispLCD_num@col)),c
 11279  001274  6E32               	call	_fifo_indice
 11280  001276  ECD8  F021         	movwf	(??_main+0+0)&0ffh,c
 11281  00127A  6E45               	movlw	low(-2)
 11282  00127C  0EFE               	addwf	((??_main+0+0)),c,w
 11283  00127E  2445               	movwf	((c:dispLCD_num@num)),c
 11284  001280  6E33               	clrf	1+((c:dispLCD_num@num)),c
 11285  001282  6A34               	movlw	high(-2)
 11286  001284  0EFF               	addwfc	1+((c:dispLCD_num@num)),c
 11287  001286  2234               	movlw	low(02h)
 11288  001288  0E02               	movwf	((c:dispLCD_num@tam)),c
 11289  00128A  6E35               	movlw	(03h)&0ffh
 11290  00128C  0E03               	
 11291                           	return	;indir
 11292  00128E  0012               	u5319:
 11293  001290                     	line	489
 11294                           	
 11295                           l6690:
 11296  001290                     ;main.c: 489:                             IHM.printv(3, 4,( fifo_tam()-2 ), 2);
 11297                           	lfsr	2,(_IHM)+06h
 11298  001290  EE20  F057         	call	u5328
 11299  001294  D802               	goto	u5329
 11300  001296  EF65  F009         u5328:
 11301  00129A                     	push
 11302  00129A  0005               	movwf	pclath
 11303  00129C  6EFA               	movf	postinc2,w
 11304  00129E  50DE               	movwf	tosl
 11305  0012A0  6EFD               	movf	postinc2,w
 11306  0012A2  50DE               	movwf	tosl+1
 11307  0012A4  6EFE               	movf	tblptru,w
 11308  0012A6  50F8               	movwf	tosl+2
 11309  0012A8  6EFF               	movf	pclath,w
 11310  0012AA  50FA               	
 11311                           	movlw	low(04h)
 11312  0012AC  0E04               	movwf	((c:dispLCD_num@col)),c
 11313  0012AE  6E32               	call	_fifo_tam
 11314  0012B0  ECD4  F021         	movwf	(??_main+0+0)&0ffh,c
 11315  0012B4  6E45               	movlw	low(-2)
 11316  0012B6  0EFE               	addwf	((??_main+0+0)),c,w
 11317  0012B8  2445               	movwf	((c:dispLCD_num@num)),c
 11318  0012BA  6E33               	clrf	1+((c:dispLCD_num@num)),c
 11319  0012BC  6A34               	movlw	high(-2)
 11320  0012BE  0EFF               	addwfc	1+((c:dispLCD_num@num)),c
 11321  0012C0  2234               	movlw	low(02h)
 11322  0012C2  0E02               	movwf	((c:dispLCD_num@tam)),c
 11323  0012C4  6E35               	movlw	(03h)&0ffh
 11324  0012C6  0E03               	
 11325                           	return	;indir
 11326  0012C8  0012               	u5329:
 11327  0012CA                     	line	490
 11328                           	
 11329                           l6692:
 11330  0012CA                     ;main.c: 490:                             estado = 11;
 11331                           	movlw	low(0Bh)
 11332  0012CA  0E0B               	movlb	0	; () banked
 11333  0012CC  0100               	movwf	((main@estado))&0ffh
 11334  0012CE  6FBB               	line	491
 11335                           ;main.c: 491:                             break;
 11336                           	goto	l6950
 11337  0012D0  EF49  F00F         	line	493
 11338                           ;main.c: 493:              case 30:
 11339                           	
 11340                           l346:; BSR set to: 0
 11341  0012D4                     
 11342                           	line	495
 11343                           	
 11344                           l6694:; BSR set to: 0
 11345  0012D4                     
 11346                           ;main.c: 495:                             estado = 70;
 11347                           	movlw	low(046h)
 11348  0012D4  0E46               	movwf	((main@estado))&0ffh
 11349  0012D6  6FBB               	line	496
 11350                           ;main.c: 496:                             meAtuadores = 1;
 11351                           	movlw	low(01h)
 11352  0012D8  0E01               	movwf	((main@meAtuadores))&0ffh
 11353  0012DA  6FAF               	line	497
 11354                           ;main.c: 497:                             break;
 11355                           	goto	l6950
 11356  0012DC  EF49  F00F         	line	499
 11357                           ;main.c: 499:              case 70:
 11358                           	
 11359                           l347:; BSR set to: 0
 11360  0012E0                     
 11361                           	line	500
 11362                           	
 11363                           l6696:; BSR set to: 0
 11364  0012E0                     
 11365                           ;main.c: 500:                             if( meAtuadores == 3 && botao != 2 )
 11366                           		movlw	3
 11367  0012E0  0E03               	xorwf	((main@meAtuadores))&0ffh,w
 11368  0012E2  19AF               	btfss	status,2
 11369  0012E4  A4D8               	goto	u5331
 11370  0012E6  EF77  F009         	goto	u5330
 11371  0012EA  EF79  F009         
 11372                           u5331:
 11373  0012EE                     	goto	l6716
 11374  0012EE  EF15  F00A         u5330:
 11375  0012F2                     	
 11376                           l6698:; BSR set to: 0
 11377  0012F2                     
 11378                           		movlw	2
 11379  0012F2  0E02               	xorwf	((main@botao))&0ffh,w
 11380  0012F4  19B3               	btfsc	status,2
 11381  0012F6  B4D8               	goto	u5341
 11382  0012F8  EF80  F009         	goto	u5340
 11383  0012FC  EF82  F009         
 11384                           u5341:
 11385  001300                     	goto	l6716
 11386  001300  EF15  F00A         u5340:
 11387  001304                     	line	502
 11388                           	
 11389                           l6700:; BSR set to: 0
 11390  001304                     
 11391                           ;main.c: 501:                             {;main.c: 502:                                
                                  IHM.printpos(0, 0, "       [    ]       ");
 11392                           	lfsr	2,(_IHM)+04h
 11393  001304  EE20  F055         	call	u5358
 11394  001308  D802               	goto	u5359
 11395  00130A  EF98  F009         u5358:
 11396  00130E                     	push
 11397  00130E  0005               	movwf	pclath
 11398  001310  6EFA               	movf	postinc2,w
 11399  001312  50DE               	movwf	tosl
 11400  001314  6EFD               	movf	postinc2,w
 11401  001316  50DE               	movwf	tosl+1
 11402  001318  6EFE               	movf	tblptru,w
 11403  00131A  50F8               	movwf	tosl+2
 11404  00131C  6EFF               	movf	pclath,w
 11405  00131E  50FA               	
 11406                           	movlw	low(0)
 11407  001320  0E00               	movwf	((c:dispLCD@col)),c
 11408  001322  6E2E               		movlw	low(STR_21)
 11409  001324  0E02               	movwf	((c:dispLCD@str)),c
 11410  001326  6E2F               	movlw	high(STR_21)
 11411  001328  0E7E               	movwf	((c:dispLCD@str+1)),c
 11412  00132A  6E30               
 11413                           	movlw	(0)&0ffh
 11414  00132C  0E00               	
 11415                           	return	;indir
 11416  00132E  0012               	u5359:
 11417  001330                     	line	503
 11418                           	
 11419                           l6702:
 11420  001330                     ;main.c: 503:                                 printExec(1, -1);
 11421                           	movlw	low(0FFh)
 11422  001330  0EFF               	movwf	((c:printExec@ind)),c
 11423  001332  6E40               	movlw	(01h)&0ffh
 11424  001334  0E01               	
 11425                           	call	_printExec
 11426  001336  EC75  F012         	line	504
 11427                           	
 11428                           l6704:
 11429  00133A                     ;main.c: 504:                                 printExec(9, 0);
 11430                           	movlw	low(0)
 11431  00133A  0E00               	movwf	((c:printExec@ind)),c
 11432  00133C  6E40               	movlw	(09h)&0ffh
 11433  00133E  0E09               	
 11434                           	call	_printExec
 11435  001340  EC75  F012         	line	505
 11436                           	
 11437                           l6706:
 11438  001344                     ;main.c: 505:                                 printExec(14, 1);
 11439                           	movlw	low(01h)
 11440  001344  0E01               	movwf	((c:printExec@ind)),c
 11441  001346  6E40               	movlw	(0Eh)&0ffh
 11442  001348  0E0E               	
 11443                           	call	_printExec
 11444  00134A  EC75  F012         	line	506
 11445                           	
 11446                           l6708:
 11447  00134E                     ;main.c: 506:                                 IHM.printpos(2, 0, "<  /  > c:          ")
                                 ;
 11448                           	lfsr	2,(_IHM)+04h
 11449  00134E  EE20  F055         	call	u5368
 11450  001352  D802               	goto	u5369
 11451  001354  EFBD  F009         u5368:
 11452  001358                     	push
 11453  001358  0005               	movwf	pclath
 11454  00135A  6EFA               	movf	postinc2,w
 11455  00135C  50DE               	movwf	tosl
 11456  00135E  6EFD               	movf	postinc2,w
 11457  001360  50DE               	movwf	tosl+1
 11458  001362  6EFE               	movf	tblptru,w
 11459  001364  50F8               	movwf	tosl+2
 11460  001366  6EFF               	movf	pclath,w
 11461  001368  50FA               	
 11462                           	movlw	low(0)
 11463  00136A  0E00               	movwf	((c:dispLCD@col)),c
 11464  00136C  6E2E               		movlw	low(STR_22)
 11465  00136E  0EC3               	movwf	((c:dispLCD@str)),c
 11466  001370  6E2F               	movlw	high(STR_22)
 11467  001372  0E7D               	movwf	((c:dispLCD@str+1)),c
 11468  001374  6E30               
 11469                           	movlw	(02h)&0ffh
 11470  001376  0E02               	
 11471                           	return	;indir
 11472  001378  0012               	u5369:
 11473  00137A                     	line	507
 11474                           	
 11475                           l6710:
 11476  00137A                     ;main.c: 507:                                 IHM.printv(2, 4,( fifo_indice() - 2 ), 2);
                                 
 11477                           	lfsr	2,(_IHM)+06h
 11478  00137A  EE20  F057         	call	u5378
 11479  00137E  D802               	goto	u5379
 11480  001380  EFDA  F009         u5378:
 11481  001384                     	push
 11482  001384  0005               	movwf	pclath
 11483  001386  6EFA               	movf	postinc2,w
 11484  001388  50DE               	movwf	tosl
 11485  00138A  6EFD               	movf	postinc2,w
 11486  00138C  50DE               	movwf	tosl+1
 11487  00138E  6EFE               	movf	tblptru,w
 11488  001390  50F8               	movwf	tosl+2
 11489  001392  6EFF               	movf	pclath,w
 11490  001394  50FA               	
 11491                           	movlw	low(04h)
 11492  001396  0E04               	movwf	((c:dispLCD_num@col)),c
 11493  001398  6E32               	call	_fifo_indice
 11494  00139A  ECD8  F021         	movwf	(??_main+0+0)&0ffh,c
 11495  00139E  6E45               	movlw	low(-2)
 11496  0013A0  0EFE               	addwf	((??_main+0+0)),c,w
 11497  0013A2  2445               	movwf	((c:dispLCD_num@num)),c
 11498  0013A4  6E33               	clrf	1+((c:dispLCD_num@num)),c
 11499  0013A6  6A34               	movlw	high(-2)
 11500  0013A8  0EFF               	addwfc	1+((c:dispLCD_num@num)),c
 11501  0013AA  2234               	movlw	low(02h)
 11502  0013AC  0E02               	movwf	((c:dispLCD_num@tam)),c
 11503  0013AE  6E35               	movlw	(02h)&0ffh
 11504  0013B0  0E02               	
 11505                           	return	;indir
 11506  0013B2  0012               	u5379:
 11507  0013B4                     	line	508
 11508                           	
 11509                           l6712:
 11510  0013B4                     ;main.c: 508:                                 IHM.printv(2, 1, ( getIndicePassos() - 1 )
                                 , 2);
 11511                           	lfsr	2,(_IHM)+06h
 11512  0013B4  EE20  F057         	call	u5388
 11513  0013B8  D802               	goto	u5389
 11514  0013BA  EFF7  F009         u5388:
 11515  0013BE                     	push
 11516  0013BE  0005               	movwf	pclath
 11517  0013C0  6EFA               	movf	postinc2,w
 11518  0013C2  50DE               	movwf	tosl
 11519  0013C4  6EFD               	movf	postinc2,w
 11520  0013C6  50DE               	movwf	tosl+1
 11521  0013C8  6EFE               	movf	tblptru,w
 11522  0013CA  50F8               	movwf	tosl+2
 11523  0013CC  6EFF               	movf	pclath,w
 11524  0013CE  50FA               	
 11525                           	movlw	low(01h)
 11526  0013D0  0E01               	movwf	((c:dispLCD_num@col)),c
 11527  0013D2  6E32               	call	_getIndicePassos
 11528  0013D4  ECD0  F021         	movwf	(??_main+0+0)&0ffh,c
 11529  0013D8  6E45               	movlw	low(-1)
 11530  0013DA  0EFF               	addwf	((??_main+0+0)),c,w
 11531  0013DC  2445               	movwf	((c:dispLCD_num@num)),c
 11532  0013DE  6E33               	clrf	1+((c:dispLCD_num@num)),c
 11533  0013E0  6A34               	movlw	high(-1)
 11534  0013E2  0EFF               	addwfc	1+((c:dispLCD_num@num)),c
 11535  0013E4  2234               	movlw	low(02h)
 11536  0013E6  0E02               	movwf	((c:dispLCD_num@tam)),c
 11537  0013E8  6E35               	movlw	(02h)&0ffh
 11538  0013EA  0E02               	
 11539                           	return	;indir
 11540  0013EC  0012               	u5389:
 11541  0013EE                     	line	509
 11542                           	
 11543                           l6714:
 11544  0013EE                     ;main.c: 509:                                 IHM.printv(2, 11, ( getContCiclos() + 1 ),
                                  5);
 11545                           	lfsr	2,(_IHM)+06h
 11546  0013EE  EE20  F057         	call	u5398
 11547  0013F2  D802               	goto	u5399
 11548  0013F4  EF13  F00A         u5398:
 11549  0013F8                     	push
 11550  0013F8  0005               	movwf	pclath
 11551  0013FA  6EFA               	movf	postinc2,w
 11552  0013FC  50DE               	movwf	tosl
 11553  0013FE  6EFD               	movf	postinc2,w
 11554  001400  50DE               	movwf	tosl+1
 11555  001402  6EFE               	movf	tblptru,w
 11556  001404  50F8               	movwf	tosl+2
 11557  001406  6EFF               	movf	pclath,w
 11558  001408  50FA               	
 11559                           	movlw	low(0Bh)
 11560  00140A  0E0B               	movwf	((c:dispLCD_num@col)),c
 11561  00140C  6E32               	call	_getContCiclos
 11562  00140E  ECC6  F021         	movlw	low(01h)
 11563  001412  0E01               	addwf	(0+?_getContCiclos),c,w
 11564  001414  2427               	movwf	((c:dispLCD_num@num)),c
 11565  001416  6E33               	movlw	high(01h)
 11566  001418  0E00               	addwfc	(1+?_getContCiclos),c,w
 11567  00141A  2028               	movwf	1+((c:dispLCD_num@num)),c
 11568  00141C  6E34               	movlw	low(05h)
 11569  00141E  0E05               	movwf	((c:dispLCD_num@tam)),c
 11570  001420  6E35               	movlw	(02h)&0ffh
 11571  001422  0E02               	
 11572                           	return	;indir
 11573  001424  0012               	u5399:
 11574  001426                     	goto	l6716
 11575  001426  EF15  F00A         	line	511
 11576                           ;main.c: 511:                             }
 11577                           	
 11578                           l348:
 11579  00142A                     	line	512
 11580                           	
 11581                           l6716:
 11582  00142A                     ;main.c: 512:                             if(meAtuadores == 0)
 11583                           	movlb	0	; () banked
 11584  00142A  0100               	movf	((main@meAtuadores))&0ffh,w
 11585  00142C  51AF               	btfss	status,2
 11586  00142E  A4D8               	goto	u5401
 11587  001430  EF1C  F00A         	goto	u5400
 11588  001434  EF1E  F00A         u5401:
 11589  001438                     	goto	l6722
 11590  001438  EF31  F00A         u5400:
 11591  00143C                     	line	514
 11592                           	
 11593                           l6718:; BSR set to: 0
 11594  00143C                     
 11595                           ;main.c: 513:                             {;main.c: 514:                                
                                  estado = 16;
 11596                           	movlw	low(010h)
 11597  00143C  0E10               	movwf	((main@estado))&0ffh
 11598  00143E  6FBB               	line	515
 11599                           	
 11600                           l6720:; BSR set to: 0
 11601  001440                     
 11602                           ;main.c: 515:                                 IHM.clr();
 11603                           	lfsr	2,(_IHM)+08h
 11604  001440  EE20  F059         	call	u5418
 11605  001444  D802               	goto	u5419
 11606  001446  EF2F  F00A         u5418:
 11607  00144A                     	push
 11608  00144A  0005               	movwf	pclath
 11609  00144C  6EFA               	movf	postinc2,w
 11610  00144E  50DE               	movwf	tosl
 11611  001450  6EFD               	movf	postinc2,w
 11612  001452  50DE               	movwf	tosl+1
 11613  001454  6EFE               	movf	tblptru,w
 11614  001456  50F8               	movwf	tosl+2
 11615  001458  6EFF               	movf	pclath,w
 11616  00145A  50FA               	
 11617                           	return	;indir
 11618  00145C  0012               	u5419:
 11619  00145E                     	goto	l6722
 11620  00145E  EF31  F00A         	line	516
 11621                           ;main.c: 516:                             }
 11622                           	
 11623                           l349:
 11624  001462                     	line	517
 11625                           	
 11626                           l6722:
 11627  001462                     ;main.c: 517:                             tecla = teclado_borda();
 11628                           	call	_teclado_borda
 11629  001462  EC31  F01F         	movlb	0	; () banked
 11630  001466  0100               	movwf	((main@tecla))&0ffh
 11631  001468  6FBC               	line	518
 11632                           ;main.c: 518:                             switch(tecla)
 11633                           	goto	l6736
 11634  00146A  EF54  F00A         	line	520
 11635                           ;main.c: 519:                             {;main.c: 520:                                
                                  case '#':
 11636                           	
 11637                           l351:; BSR set to: 0
 11638  00146E                     
 11639                           	line	521
 11640                           	
 11641                           l6724:; BSR set to: 0
 11642  00146E                     
 11643                           ;main.c: 521:                                     botao = 1;
 11644                           	movlw	low(01h)
 11645  00146E  0E01               	movwf	((main@botao))&0ffh
 11646  001470  6FB3               	line	522
 11647                           ;main.c: 522:                                     break;
 11648                           	goto	l6950
 11649  001472  EF49  F00F         	line	524
 11650                           ;main.c: 524:                                 case '5':
 11651                           	
 11652                           l353:; BSR set to: 0
 11653  001476                     
 11654                           	line	525
 11655                           	
 11656                           l6726:; BSR set to: 0
 11657  001476                     
 11658                           ;main.c: 525:                                     botao = 2;
 11659                           	movlw	low(02h)
 11660  001476  0E02               	movwf	((main@botao))&0ffh
 11661  001478  6FB3               	line	526
 11662                           ;main.c: 526:                                     break;
 11663                           	goto	l6950
 11664  00147A  EF49  F00F         	line	528
 11665                           ;main.c: 528:                                 case '0':
 11666                           	
 11667                           l354:; BSR set to: 0
 11668  00147E                     
 11669                           	line	529
 11670                           	
 11671                           l6728:; BSR set to: 0
 11672  00147E                     
 11673                           ;main.c: 529:                                     botao = 0;
 11674                           	movlw	low(0)
 11675  00147E  0E00               	movwf	((main@botao))&0ffh
 11676  001480  6FB3               	line	530
 11677                           ;main.c: 530:                                     break;
 11678                           	goto	l6950
 11679  001482  EF49  F00F         	line	532
 11680                           ;main.c: 532:                                 case '1':
 11681                           	
 11682                           l355:; BSR set to: 0
 11683  001486                     
 11684                           	line	533
 11685                           	
 11686                           l6730:; BSR set to: 0
 11687  001486                     
 11688                           ;main.c: 533:                                     if(botao == 2)
 11689                           		movlw	2
 11690  001486  0E02               	xorwf	((main@botao))&0ffh,w
 11691  001488  19B3               	btfss	status,2
 11692  00148A  A4D8               	goto	u5421
 11693  00148C  EF4A  F00A         	goto	u5420
 11694  001490  EF4C  F00A         
 11695                           u5421:
 11696  001494                     	goto	l6950
 11697  001494  EF49  F00F         u5420:
 11698  001498                     	line	534
 11699                           	
 11700                           l6732:; BSR set to: 0
 11701  001498                     
 11702                           ;main.c: 534:                                         botao = 3;
 11703                           	movlw	low(03h)
 11704  001498  0E03               	movwf	((main@botao))&0ffh
 11705  00149A  6FB3               	goto	l6950
 11706  00149C  EF49  F00F         	
 11707                           l356:; BSR set to: 0
 11708  0014A0                     
 11709                           	line	535
 11710                           ;main.c: 535:                                     break;
 11711                           	goto	l6950
 11712  0014A0  EF49  F00F         	line	536
 11713                           	
 11714                           l6734:; BSR set to: 0
 11715  0014A4                     
 11716                           ;main.c: 536:                             }
 11717                           	goto	l6950
 11718  0014A4  EF49  F00F         	
 11719                           l350:; BSR set to: 0
 11720  0014A8                     
 11721                           	
 11722                           l6736:; BSR set to: 0
 11723  0014A8                     
 11724                           	movf	((main@tecla))&0ffh,w
 11725  0014A8  51BC               	movwf	(??_main+0+0)&0ffh,c
 11726  0014AA  6E45               	clrf	(??_main+0+0+1)&0ffh,c
 11727  0014AC  6A46               
 11728                           	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
 11729                           ; Switch size 1, requested type "space"
 11730                           ; Number of cases is 1, Range of values is 0 to 0
 11731                           ; switch strategies available:
 11732                           ; Name         Instructions Cycles
 11733                           ; simple_byte            4     3 (average)
 11734                           ;	Chosen strategy is simple_byte
 11735                           
 11736                           	movf ??_main+0+1,c,w
 11737  0014AE  5046               	xorlw	0^0	; case 0
 11738  0014B0  0A00               	skipnz
 11739  0014B2  B4D8               	goto	l7832
 11740  0014B4  EF5E  F00A         	goto	l6950
 11741  0014B8  EF49  F00F         	
 11742                           l7832:; BSR set to: 0
 11743  0014BC                     
 11744                           ; Switch size 1, requested type "space"
 11745                           ; Number of cases is 4, Range of values is 35 to 53
 11746                           ; switch strategies available:
 11747                           ; Name         Instructions Cycles
 11748                           ; simple_byte           13     7 (average)
 11749                           ;	Chosen strategy is simple_byte
 11750                           
 11751                           	movf ??_main+0+0,c,w
 11752  0014BC  5045               	xorlw	35^0	; case 35
 11753  0014BE  0A23               	skipnz
 11754  0014C0  B4D8               	goto	l6724
 11755  0014C2  EF37  F00A         	xorlw	48^35	; case 48
 11756  0014C6  0A13               	skipnz
 11757  0014C8  B4D8               	goto	l6728
 11758  0014CA  EF3F  F00A         	xorlw	49^48	; case 49
 11759  0014CE  0A01               	skipnz
 11760  0014D0  B4D8               	goto	l6730
 11761  0014D2  EF43  F00A         	xorlw	53^49	; case 53
 11762  0014D6  0A04               	skipnz
 11763  0014D8  B4D8               	goto	l6726
 11764  0014DA  EF3B  F00A         	goto	l6950
 11765  0014DE  EF49  F00F         
 11766                           	
 11767                           l352:; BSR set to: 0
 11768  0014E2                     
 11769                           	line	537
 11770                           ;main.c: 537:                             break;
 11771                           	goto	l6950
 11772  0014E2  EF49  F00F         	line	539
 11773                           ;main.c: 539:              case 40:
 11774                           	
 11775                           l357:; BSR set to: 0
 11776  0014E6                     
 11777                           	line	540
 11778                           	
 11779                           l6738:; BSR set to: 0
 11780  0014E6                     
 11781                           ;main.c: 540:                             tecla = teclado_borda();
 11782                           	call	_teclado_borda	;wreg free
 11783  0014E6  EC31  F01F         	movlb	0	; () banked
 11784  0014EA  0100               	movwf	((main@tecla))&0ffh
 11785  0014EC  6FBC               	line	541
 11786                           	
 11787                           l6740:; BSR set to: 0
 11788  0014EE                     
 11789                           ;main.c: 541:                             if(tecla >= '0' && tecla <= '9')
 11790                           		movlw	030h-1
 11791  0014EE  0E2F               	cpfsgt	((main@tecla))&0ffh
 11792  0014F0  65BC               	goto	u5431
 11793  0014F2  EF7D  F00A         	goto	u5430
 11794  0014F6  EF7F  F00A         
 11795                           u5431:
 11796  0014FA                     	goto	l6750
 11797  0014FA  EFA2  F00A         u5430:
 11798  0014FE                     	
 11799                           l6742:; BSR set to: 0
 11800  0014FE                     
 11801                           		movlw	03Ah-0
 11802  0014FE  0E3A               	cpfslt	((main@tecla))&0ffh
 11803  001500  61BC               	goto	u5441
 11804  001502  EF85  F00A         	goto	u5440
 11805  001506  EF87  F00A         
 11806                           u5441:
 11807  00150A                     	goto	l6750
 11808  00150A  EFA2  F00A         u5440:
 11809  00150E                     	line	543
 11810                           	
 11811                           l6744:; BSR set to: 0
 11812  00150E                     
 11813                           ;main.c: 542:                             {;main.c: 543:                                
                                  dignum_conc(tecla, &num);
 11814                           		movlw	low(main@num)
 11815  00150E  0EB4               	movwf	((c:dignum_conc@ptrNum)),c
 11816  001510  6E2D               	movlw	high(main@num)
 11817  001512  0E00               	movwf	((c:dignum_conc@ptrNum+1)),c
 11818  001514  6E2E               
 11819                           	movf	((main@tecla))&0ffh,w
 11820  001516  51BC               	
 11821                           	call	_dignum_conc
 11822  001518  ECC2  F01E         	line	544
 11823                           	
 11824                           l6746:
 11825  00151C                     ;main.c: 544:                                 if(num > 120)
 11826                           	movlb	0	; () banked
 11827  00151C  0100               		movf	((main@num+1))&0ffh,w
 11828  00151E  51B5               	bnz	u5450
 11829  001520  E109               	movlw	121
 11830  001522  0E79               	subwf	 ((main@num))&0ffh,w
 11831  001524  5DB4               	btfss	status,0
 11832  001526  A0D8               	goto	u5451
 11833  001528  EF98  F00A         	goto	u5450
 11834  00152C  EF9A  F00A         
 11835                           u5451:
 11836  001530                     	goto	l359
 11837  001530  EF9E  F00A         u5450:
 11838  001534                     	line	545
 11839                           	
 11840                           l6748:; BSR set to: 0
 11841  001534                     
 11842                           ;main.c: 545:                                     num = 120;
 11843                           	movlw	high(078h)
 11844  001534  0E00               	movwf	((main@num+1))&0ffh
 11845  001536  6FB5               	movlw	low(078h)
 11846  001538  0E78               	movwf	((main@num))&0ffh
 11847  00153A  6FB4               	
 11848                           l359:; BSR set to: 0
 11849  00153C                     
 11850                           	line	546
 11851                           ;main.c: 546:                                 estado = 41;
 11852                           	movlw	low(029h)
 11853  00153C  0E29               	movwf	((main@estado))&0ffh
 11854  00153E  6FBB               	goto	l6750
 11855  001540  EFA2  F00A         	line	547
 11856                           ;main.c: 547:                             }
 11857                           	
 11858                           l358:; BSR set to: 0
 11859  001544                     
 11860                           	line	548
 11861                           	
 11862                           l6750:; BSR set to: 0
 11863  001544                     
 11864                           ;main.c: 548:                             if(tecla == '*')
 11865                           		movlw	42
 11866  001544  0E2A               	xorwf	((main@tecla))&0ffh,w
 11867  001546  19BC               	btfss	status,2
 11868  001548  A4D8               	goto	u5461
 11869  00154A  EFA9  F00A         	goto	u5460
 11870  00154E  EFAB  F00A         
 11871                           u5461:
 11872  001552                     	goto	l6756
 11873  001552  EFB6  F00A         u5460:
 11874  001556                     	line	550
 11875                           	
 11876                           l6752:; BSR set to: 0
 11877  001556                     
 11878                           ;main.c: 549:                             {;main.c: 550:                                
                                  dignum_apagar(&num);
 11879                           		movlw	low(main@num)
 11880  001556  0EB4               	movwf	((c:dignum_apagar@ptrNum)),c
 11881  001558  6E2E               	movlw	high(main@num)
 11882  00155A  0E00               	movwf	((c:dignum_apagar@ptrNum+1)),c
 11883  00155C  6E2F               
 11884                           	call	_dignum_apagar	;wreg free
 11885  00155E  EC72  F020         	line	551
 11886                           	
 11887                           l6754:
 11888  001562                     ;main.c: 551:                                 estado = 41;
 11889                           	movlw	low(029h)
 11890  001562  0E29               	movlb	0	; () banked
 11891  001564  0100               	movwf	((main@estado))&0ffh
 11892  001566  6FBB               	goto	l6756
 11893  001568  EFB6  F00A         	line	552
 11894                           ;main.c: 552:                             }
 11895                           	
 11896                           l360:; BSR set to: 0
 11897  00156C                     
 11898                           	line	553
 11899                           	
 11900                           l6756:; BSR set to: 0
 11901  00156C                     
 11902                           ;main.c: 553:                             if(tecla == '#')
 11903                           		movlw	35
 11904  00156C  0E23               	xorwf	((main@tecla))&0ffh,w
 11905  00156E  19BC               	btfss	status,2
 11906  001570  A4D8               	goto	u5471
 11907  001572  EFBD  F00A         	goto	u5470
 11908  001576  EFBF  F00A         
 11909                           u5471:
 11910  00157A                     	goto	l6950
 11911  00157A  EF49  F00F         u5470:
 11912  00157E                     	line	554
 11913                           	
 11914                           l6758:; BSR set to: 0
 11915  00157E                     
 11916                           ;main.c: 554:                                 estado = 42;
 11917                           	movlw	low(02Ah)
 11918  00157E  0E2A               	movwf	((main@estado))&0ffh
 11919  001580  6FBB               	goto	l6950
 11920  001582  EF49  F00F         	
 11921                           l361:; BSR set to: 0
 11922  001586                     
 11923                           	line	555
 11924                           ;main.c: 555:                             break;
 11925                           	goto	l6950
 11926  001586  EF49  F00F         	line	557
 11927                           ;main.c: 557:              case 41:
 11928                           	
 11929                           l362:; BSR set to: 0
 11930  00158A                     
 11931                           	line	559
 11932                           	
 11933                           l6760:; BSR set to: 0
 11934  00158A                     
 11935                           ;main.c: 559:                             IHM.printpos(2, 0, "config tempo:      s");
 11936                           	lfsr	2,(_IHM)+04h
 11937  00158A  EE20  F055         	call	u5488
 11938  00158E  D802               	goto	u5489
 11939  001590  EFDB  F00A         u5488:
 11940  001594                     	push
 11941  001594  0005               	movwf	pclath
 11942  001596  6EFA               	movf	postinc2,w
 11943  001598  50DE               	movwf	tosl
 11944  00159A  6EFD               	movf	postinc2,w
 11945  00159C  50DE               	movwf	tosl+1
 11946  00159E  6EFE               	movf	tblptru,w
 11947  0015A0  50F8               	movwf	tosl+2
 11948  0015A2  6EFF               	movf	pclath,w
 11949  0015A4  50FA               	
 11950                           	movlw	low(0)
 11951  0015A6  0E00               	movwf	((c:dispLCD@col)),c
 11952  0015A8  6E2E               		movlw	low(STR_23)
 11953  0015AA  0E3D               	movwf	((c:dispLCD@str)),c
 11954  0015AC  6E2F               	movlw	high(STR_23)
 11955  0015AE  0E7F               	movwf	((c:dispLCD@str+1)),c
 11956  0015B0  6E30               
 11957                           	movlw	(02h)&0ffh
 11958  0015B2  0E02               	
 11959                           	return	;indir
 11960  0015B4  0012               	u5489:
 11961  0015B6                     	line	560
 11962                           	
 11963                           l6762:
 11964  0015B6                     ;main.c: 560:                             IHM.printv(2, 15, num, 3);
 11965                           	lfsr	2,(_IHM)+06h
 11966  0015B6  EE20  F057         	call	u5498
 11967  0015BA  D802               	goto	u5499
 11968  0015BC  EFF3  F00A         u5498:
 11969  0015C0                     	push
 11970  0015C0  0005               	movwf	pclath
 11971  0015C2  6EFA               	movf	postinc2,w
 11972  0015C4  50DE               	movwf	tosl
 11973  0015C6  6EFD               	movf	postinc2,w
 11974  0015C8  50DE               	movwf	tosl+1
 11975  0015CA  6EFE               	movf	tblptru,w
 11976  0015CC  50F8               	movwf	tosl+2
 11977  0015CE  6EFF               	movf	pclath,w
 11978  0015D0  50FA               	
 11979                           	movlw	low(0Fh)
 11980  0015D2  0E0F               	movwf	((c:dispLCD_num@col)),c
 11981  0015D4  6E32               	movff	(main@num),(c:dispLCD_num@num)
 11982  0015D6  C0B4  F033         	movff	(main@num+1),(c:dispLCD_num@num+1)
 11983  0015DA  C0B5  F034         	movlw	low(03h)
 11984  0015DE  0E03               	movwf	((c:dispLCD_num@tam)),c
 11985  0015E0  6E35               	movlw	(02h)&0ffh
 11986  0015E2  0E02               	
 11987                           	return	;indir
 11988  0015E4  0012               	u5499:
 11989  0015E6                     	line	561
 11990                           	
 11991                           l6764:
 11992  0015E6                     ;main.c: 561:                             estado = 40;
 11993                           	movlw	low(028h)
 11994  0015E6  0E28               	movlb	0	; () banked
 11995  0015E8  0100               	movwf	((main@estado))&0ffh
 11996  0015EA  6FBB               	line	562
 11997                           ;main.c: 562:                             break;
 11998                           	goto	l6950
 11999  0015EC  EF49  F00F         	line	564
 12000                           ;main.c: 564:              case 42:
 12001                           	
 12002                           l363:; BSR set to: 0
 12003  0015F0                     
 12004                           	line	565
 12005                           	
 12006                           l6766:; BSR set to: 0
 12007  0015F0                     
 12008                           ;main.c: 565:                             fifo_add_tempo(num);
 12009                           	movf	((main@num))&0ffh,w
 12010  0015F0  51B4               	
 12011                           	call	_fifo_add_tempo
 12012  0015F2  ECBF  F01C         	line	566
 12013                           	
 12014                           l6768:
 12015  0015F6                     ;main.c: 566:                             IHM.clr();
 12016                           	lfsr	2,(_IHM)+08h
 12017  0015F6  EE20  F059         	call	u5508
 12018  0015FA  D802               	goto	u5509
 12019  0015FC  EF0A  F00B         u5508:
 12020  001600                     	push
 12021  001600  0005               	movwf	pclath
 12022  001602  6EFA               	movf	postinc2,w
 12023  001604  50DE               	movwf	tosl
 12024  001606  6EFD               	movf	postinc2,w
 12025  001608  50DE               	movwf	tosl+1
 12026  00160A  6EFE               	movf	tblptru,w
 12027  00160C  50F8               	movwf	tosl+2
 12028  00160E  6EFF               	movf	pclath,w
 12029  001610  50FA               	
 12030                           	return	;indir
 12031  001612  0012               	u5509:
 12032  001614                     	line	567
 12033                           	
 12034                           l6770:
 12035  001614                     ;main.c: 567:                             estado = 16;
 12036                           	movlw	low(010h)
 12037  001614  0E10               	movlb	0	; () banked
 12038  001616  0100               	movwf	((main@estado))&0ffh
 12039  001618  6FBB               	line	568
 12040                           ;main.c: 568:                             break;
 12041                           	goto	l6950
 12042  00161A  EF49  F00F         	line	598
 12043                           ;main.c: 598:              case 52:
 12044                           	
 12045                           l364:; BSR set to: 0
 12046  00161E                     
 12047                           	line	599
 12048                           	
 12049                           l6772:; BSR set to: 0
 12050  00161E                     
 12051                           ;main.c: 599:                             tecla = teclado_borda();
 12052                           	call	_teclado_borda	;wreg free
 12053  00161E  EC31  F01F         	movlb	0	; () banked
 12054  001622  0100               	movwf	((main@tecla))&0ffh
 12055  001624  6FBC               	line	600
 12056                           	
 12057                           l6774:; BSR set to: 0
 12058  001626                     
 12059                           ;main.c: 600:                             if(tecla >= '0' && tecla <= '9')
 12060                           		movlw	030h-1
 12061  001626  0E2F               	cpfsgt	((main@tecla))&0ffh
 12062  001628  65BC               	goto	u5511
 12063  00162A  EF19  F00B         	goto	u5510
 12064  00162E  EF1B  F00B         
 12065                           u5511:
 12066  001632                     	goto	l6796
 12067  001632  EF5E  F00B         u5510:
 12068  001636                     	
 12069                           l6776:; BSR set to: 0
 12070  001636                     
 12071                           		movlw	03Ah-0
 12072  001636  0E3A               	cpfslt	((main@tecla))&0ffh
 12073  001638  61BC               	goto	u5521
 12074  00163A  EF21  F00B         	goto	u5520
 12075  00163E  EF23  F00B         
 12076                           u5521:
 12077  001642                     	goto	l6796
 12078  001642  EF5E  F00B         u5520:
 12079  001646                     	line	602
 12080                           	
 12081                           l6778:; BSR set to: 0
 12082  001646                     
 12083                           ;main.c: 601:                                {;main.c: 602:                             
                                     dignum_conc(tecla, &ciclos);
 12084                           		movlw	low(main@ciclos)
 12085  001646  0EB0               	movwf	((c:dignum_conc@ptrNum)),c
 12086  001648  6E2D               	movlw	high(main@ciclos)
 12087  00164A  0E00               	movwf	((c:dignum_conc@ptrNum+1)),c
 12088  00164C  6E2E               
 12089                           	movf	((main@tecla))&0ffh,w
 12090  00164E  51BC               	
 12091                           	call	_dignum_conc
 12092  001650  ECC2  F01E         	line	603
 12093                           	
 12094                           l6780:
 12095  001654                     ;main.c: 603:                                 if(ciclos > 10000)
 12096                           		movlw	17
 12097  001654  0E11               	movlb	0	; () banked
 12098  001656  0100               	subwf	 ((main@ciclos))&0ffh,w
 12099  001658  5DB0               	movlw	39
 12100  00165A  0E27               	subwfb	((main@ciclos+1))&0ffh,w
 12101  00165C  59B1               	btfss	status,0
 12102  00165E  A0D8               	goto	u5531
 12103  001660  EF34  F00B         	goto	u5530
 12104  001664  EF36  F00B         
 12105                           u5531:
 12106  001668                     	goto	l366
 12107  001668  EF3A  F00B         u5530:
 12108  00166C                     	line	604
 12109                           	
 12110                           l6782:; BSR set to: 0
 12111  00166C                     
 12112                           ;main.c: 604:                                     ciclos = 10000;
 12113                           	movlw	high(02710h)
 12114  00166C  0E27               	movwf	((main@ciclos+1))&0ffh
 12115  00166E  6FB1               	movlw	low(02710h)
 12116  001670  0E10               	movwf	((main@ciclos))&0ffh
 12117  001672  6FB0               	
 12118                           l366:; BSR set to: 0
 12119  001674                     
 12120                           	line	605
 12121                           ;main.c: 605:                                 estado = 53;
 12122                           	movlw	low(035h)
 12123  001674  0E35               	movwf	((main@estado))&0ffh
 12124  001676  6FBB               	line	606
 12125                           ;main.c: 606:                                 break;
 12126                           	goto	l6950
 12127  001678  EF49  F00F         	line	607
 12128                           ;main.c: 607:                                }
 12129                           	
 12130                           l365:; BSR set to: 0
 12131  00167C                     
 12132                           	line	608
 12133                           ;main.c: 608:                             switch(tecla)
 12134                           	goto	l6796
 12135  00167C  EF5E  F00B         	line	610
 12136                           ;main.c: 609:                                {;main.c: 610:                             
                                        case 'A':
 12137                           	
 12138                           l368:; BSR set to: 0
 12139  001680                     
 12140                           	goto	l6784
 12141  001680  EF46  F00B         	line	611
 12142                           ;main.c: 611:                                    case 'B':
 12143                           	
 12144                           l369:; BSR set to: 0
 12145  001684                     
 12146                           	goto	l6784
 12147  001684  EF46  F00B         	line	612
 12148                           ;main.c: 612:                                    case 'C':
 12149                           	
 12150                           l370:; BSR set to: 0
 12151  001688                     
 12152                           	goto	l6784
 12153  001688  EF46  F00B         	line	613
 12154                           ;main.c: 613:                                    case 'D':
 12155                           	
 12156                           l371:; BSR set to: 0
 12157  00168C                     
 12158                           	line	614
 12159                           	
 12160                           l6784:; BSR set to: 0
 12161  00168C                     
 12162                           ;main.c: 614:                                        dispLCD_clr();
 12163                           	call	_dispLCD_clr	;wreg free
 12164  00168C  ECDC  F021         	line	615
 12165                           	
 12166                           l6786:
 12167  001690                     ;main.c: 615:                                        estado = 16;
 12168                           	movlw	low(010h)
 12169  001690  0E10               	movlb	0	; () banked
 12170  001692  0100               	movwf	((main@estado))&0ffh
 12171  001694  6FBB               	line	616
 12172                           ;main.c: 616:                                        break;
 12173                           	goto	l6950
 12174  001696  EF49  F00F         	line	617
 12175                           ;main.c: 617:                                    case '#':
 12176                           	
 12177                           l373:; BSR set to: 0
 12178  00169A                     
 12179                           	line	618
 12180                           	
 12181                           l6788:; BSR set to: 0
 12182  00169A                     
 12183                           ;main.c: 618:                                        estado = 54;
 12184                           	movlw	low(036h)
 12185  00169A  0E36               	movwf	((main@estado))&0ffh
 12186  00169C  6FBB               	line	619
 12187                           ;main.c: 619:                                        break;
 12188                           	goto	l6950
 12189  00169E  EF49  F00F         	line	620
 12190                           ;main.c: 620:                                    case '*':
 12191                           	
 12192                           l374:; BSR set to: 0
 12193  0016A2                     
 12194                           	line	621
 12195                           	
 12196                           l6790:; BSR set to: 0
 12197  0016A2                     
 12198                           ;main.c: 621:                                        dignum_apagar(&ciclos);
 12199                           		movlw	low(main@ciclos)
 12200  0016A2  0EB0               	movwf	((c:dignum_apagar@ptrNum)),c
 12201  0016A4  6E2E               	movlw	high(main@ciclos)
 12202  0016A6  0E00               	movwf	((c:dignum_apagar@ptrNum+1)),c
 12203  0016A8  6E2F               
 12204                           	call	_dignum_apagar	;wreg free
 12205  0016AA  EC72  F020         	line	622
 12206                           	
 12207                           l6792:
 12208  0016AE                     ;main.c: 622:                                        estado = 53;
 12209                           	movlw	low(035h)
 12210  0016AE  0E35               	movlb	0	; () banked
 12211  0016B0  0100               	movwf	((main@estado))&0ffh
 12212  0016B2  6FBB               	line	623
 12213                           ;main.c: 623:                                        break;
 12214                           	goto	l6950
 12215  0016B4  EF49  F00F         	line	624
 12216                           	
 12217                           l6794:; BSR set to: 0
 12218  0016B8                     
 12219                           ;main.c: 624:                                }
 12220                           	goto	l6950
 12221  0016B8  EF49  F00F         	
 12222                           l367:; BSR set to: 0
 12223  0016BC                     
 12224                           	
 12225                           l6796:; BSR set to: 0
 12226  0016BC                     
 12227                           	movf	((main@tecla))&0ffh,w
 12228  0016BC  51BC               	movwf	(??_main+0+0)&0ffh,c
 12229  0016BE  6E45               	clrf	(??_main+0+0+1)&0ffh,c
 12230  0016C0  6A46               
 12231                           	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
 12232                           ; Switch size 1, requested type "space"
 12233                           ; Number of cases is 1, Range of values is 0 to 0
 12234                           ; switch strategies available:
 12235                           ; Name         Instructions Cycles
 12236                           ; simple_byte            4     3 (average)
 12237                           ;	Chosen strategy is simple_byte
 12238                           
 12239                           	movf ??_main+0+1,c,w
 12240  0016C2  5046               	xorlw	0^0	; case 0
 12241  0016C4  0A00               	skipnz
 12242  0016C6  B4D8               	goto	l7834
 12243  0016C8  EF68  F00B         	goto	l6950
 12244  0016CC  EF49  F00F         	
 12245                           l7834:; BSR set to: 0
 12246  0016D0                     
 12247                           ; Switch size 1, requested type "space"
 12248                           ; Number of cases is 6, Range of values is 35 to 68
 12249                           ; switch strategies available:
 12250                           ; Name         Instructions Cycles
 12251                           ; simple_byte           19    10 (average)
 12252                           ;	Chosen strategy is simple_byte
 12253                           
 12254                           	movf ??_main+0+0,c,w
 12255  0016D0  5045               	xorlw	35^0	; case 35
 12256  0016D2  0A23               	skipnz
 12257  0016D4  B4D8               	goto	l6788
 12258  0016D6  EF4D  F00B         	xorlw	42^35	; case 42
 12259  0016DA  0A09               	skipnz
 12260  0016DC  B4D8               	goto	l6790
 12261  0016DE  EF51  F00B         	xorlw	65^42	; case 65
 12262  0016E2  0A6B               	skipnz
 12263  0016E4  B4D8               	goto	l6784
 12264  0016E6  EF46  F00B         	xorlw	66^65	; case 66
 12265  0016EA  0A03               	skipnz
 12266  0016EC  B4D8               	goto	l6784
 12267  0016EE  EF46  F00B         	xorlw	67^66	; case 67
 12268  0016F2  0A01               	skipnz
 12269  0016F4  B4D8               	goto	l6784
 12270  0016F6  EF46  F00B         	xorlw	68^67	; case 68
 12271  0016FA  0A07               	skipnz
 12272  0016FC  B4D8               	goto	l6784
 12273  0016FE  EF46  F00B         	goto	l6950
 12274  001702  EF49  F00F         
 12275                           	
 12276                           l372:; BSR set to: 0
 12277  001706                     
 12278                           	line	625
 12279                           ;main.c: 625:                             break;
 12280                           	goto	l6950
 12281  001706  EF49  F00F         	line	627
 12282                           ;main.c: 627:              case 53:
 12283                           	
 12284                           l375:; BSR set to: 0
 12285  00170A                     
 12286                           	line	628
 12287                           	
 12288                           l6798:; BSR set to: 0
 12289  00170A                     
 12290                           ;main.c: 628:                             IHM.clr();
 12291                           	lfsr	2,(_IHM)+08h
 12292  00170A  EE20  F059         	call	u5548
 12293  00170E  D802               	goto	u5549
 12294  001710  EF94  F00B         u5548:
 12295  001714                     	push
 12296  001714  0005               	movwf	pclath
 12297  001716  6EFA               	movf	postinc2,w
 12298  001718  50DE               	movwf	tosl
 12299  00171A  6EFD               	movf	postinc2,w
 12300  00171C  50DE               	movwf	tosl+1
 12301  00171E  6EFE               	movf	tblptru,w
 12302  001720  50F8               	movwf	tosl+2
 12303  001722  6EFF               	movf	pclath,w
 12304  001724  50FA               	
 12305                           	return	;indir
 12306  001726  0012               	u5549:
 12307  001728                     	line	629
 12308                           	
 12309                           l6800:
 12310  001728                     ;main.c: 629:                             IHM.printpos(0, 0, "Ciclos:             ");
 12311                           	lfsr	2,(_IHM)+04h
 12312  001728  EE20  F055         	call	u5558
 12313  00172C  D802               	goto	u5559
 12314  00172E  EFAA  F00B         u5558:
 12315  001732                     	push
 12316  001732  0005               	movwf	pclath
 12317  001734  6EFA               	movf	postinc2,w
 12318  001736  50DE               	movwf	tosl
 12319  001738  6EFD               	movf	postinc2,w
 12320  00173A  50DE               	movwf	tosl+1
 12321  00173C  6EFE               	movf	tblptru,w
 12322  00173E  50F8               	movwf	tosl+2
 12323  001740  6EFF               	movf	pclath,w
 12324  001742  50FA               	
 12325                           	movlw	low(0)
 12326  001744  0E00               	movwf	((c:dispLCD@col)),c
 12327  001746  6E2E               		movlw	low(STR_24)
 12328  001748  0EAE               	movwf	((c:dispLCD@str)),c
 12329  00174A  6E2F               	movlw	high(STR_24)
 12330  00174C  0E7D               	movwf	((c:dispLCD@str+1)),c
 12331  00174E  6E30               
 12332                           	movlw	(0)&0ffh
 12333  001750  0E00               	
 12334                           	return	;indir
 12335  001752  0012               	u5559:
 12336  001754                     	line	630
 12337                           	
 12338                           l6802:
 12339  001754                     ;main.c: 630:                             IHM.printv(0, 15, ciclos, 5);
 12340                           	lfsr	2,(_IHM)+06h
 12341  001754  EE20  F057         	call	u5568
 12342  001758  D802               	goto	u5569
 12343  00175A  EFC2  F00B         u5568:
 12344  00175E                     	push
 12345  00175E  0005               	movwf	pclath
 12346  001760  6EFA               	movf	postinc2,w
 12347  001762  50DE               	movwf	tosl
 12348  001764  6EFD               	movf	postinc2,w
 12349  001766  50DE               	movwf	tosl+1
 12350  001768  6EFE               	movf	tblptru,w
 12351  00176A  50F8               	movwf	tosl+2
 12352  00176C  6EFF               	movf	pclath,w
 12353  00176E  50FA               	
 12354                           	movlw	low(0Fh)
 12355  001770  0E0F               	movwf	((c:dispLCD_num@col)),c
 12356  001772  6E32               	movff	(main@ciclos),(c:dispLCD_num@num)
 12357  001774  C0B0  F033         	movff	(main@ciclos+1),(c:dispLCD_num@num+1)
 12358  001778  C0B1  F034         	movlw	low(05h)
 12359  00177C  0E05               	movwf	((c:dispLCD_num@tam)),c
 12360  00177E  6E35               	movlw	(0)&0ffh
 12361  001780  0E00               	
 12362                           	return	;indir
 12363  001782  0012               	u5569:
 12364  001784                     	line	631
 12365                           ;main.c: 631:                             IHM.printpos(2, 0, "0 - Ciclo continuo  ");
 12366                           	lfsr	2,(_IHM)+04h
 12367  001784  EE20  F055         	call	u5578
 12368  001788  D802               	goto	u5579
 12369  00178A  EFD8  F00B         u5578:
 12370  00178E                     	push
 12371  00178E  0005               	movwf	pclath
 12372  001790  6EFA               	movf	postinc2,w
 12373  001792  50DE               	movwf	tosl
 12374  001794  6EFD               	movf	postinc2,w
 12375  001796  50DE               	movwf	tosl+1
 12376  001798  6EFE               	movf	tblptru,w
 12377  00179A  50F8               	movwf	tosl+2
 12378  00179C  6EFF               	movf	pclath,w
 12379  00179E  50FA               	
 12380                           	movlw	low(0)
 12381  0017A0  0E00               	movwf	((c:dispLCD@col)),c
 12382  0017A2  6E2E               		movlw	low(STR_25)
 12383  0017A4  0EE9               	movwf	((c:dispLCD@str)),c
 12384  0017A6  6E2F               	movlw	high(STR_25)
 12385  0017A8  0E7E               	movwf	((c:dispLCD@str+1)),c
 12386  0017AA  6E30               
 12387                           	movlw	(02h)&0ffh
 12388  0017AC  0E02               	
 12389                           	return	;indir
 12390  0017AE  0012               	u5579:
 12391  0017B0                     	line	632
 12392                           	
 12393                           l6804:
 12394  0017B0                     ;main.c: 632:                             estado = 52;
 12395                           	movlw	low(034h)
 12396  0017B0  0E34               	movlb	0	; () banked
 12397  0017B2  0100               	movwf	((main@estado))&0ffh
 12398  0017B4  6FBB               	line	633
 12399                           ;main.c: 633:                             break;
 12400                           	goto	l6950
 12401  0017B6  EF49  F00F         	line	635
 12402                           ;main.c: 635:              case 74:
 12403                           	
 12404                           l376:; BSR set to: 0
 12405  0017BA                     
 12406                           	line	636
 12407                           	
 12408                           l6806:; BSR set to: 0
 12409  0017BA                     
 12410                           ;main.c: 636:                             salvar_dado(10, 10, init_cond);
 12411                           	movlw	low(0Ah)
 12412  0017BA  0E0A               	movwf	((c:salvar_dado@col)),c
 12413  0017BC  6E2D               	movff	(main@init_cond),(c:salvar_dado@data)
 12414  0017BE  C0B2  F02E         	movlw	(0Ah)&0ffh
 12415  0017C2  0E0A               	
 12416                           	call	_salvar_dado
 12417  0017C4  ECC6  F020         	line	637
 12418                           	
 12419                           l6808:
 12420  0017C8                     ;main.c: 637:                             EEPROM.salvar(11, fifo_adrs() + 2);
 12421                           	call	u5588
 12422  0017C8  D802               	goto	u5589
 12423  0017CA  EFFA  F00B         u5588:
 12424  0017CE                     	push
 12425  0017CE  0005               	
 12426                           	movwf	pclath
 12427  0017D0  6EFA               	movf	((c:_EEPROM)),c,w
 12428  0017D2  5047               	movwf	tosl
 12429  0017D4  6EFD               	movf	((c:_EEPROM+1)),c,w
 12430  0017D6  5048               	movwf	tosl+1
 12431  0017D8  6EFE               	movf	tblptru,w
 12432  0017DA  50F8               	movwf	tosl+2
 12433  0017DC  6EFF               	movf	pclath,w
 12434  0017DE  50FA               	
 12435                           	call	_fifo_adrs	;wreg free
 12436  0017E0  ECB0  F021         	movlw	low(02h)
 12437  0017E4  0E02               	addwf	(0+?_fifo_adrs),c,w
 12438  0017E6  2427               	movwf	((c:salvar_receita@data)),c
 12439  0017E8  6E2D               	movlw	high(02h)
 12440  0017EA  0E00               	addwfc	(1+?_fifo_adrs),c,w
 12441  0017EC  2028               	movwf	1+((c:salvar_receita@data)),c
 12442  0017EE  6E2E               	movlw	(0Bh)&0ffh
 12443  0017F0  0E0B               	
 12444                           	return	;indir
 12445  0017F2  0012               	u5589:
 12446  0017F4                     	line	638
 12447                           	
 12448                           l6810:
 12449  0017F4                     ;main.c: 638:                             IHM.print("    DESEJA SALVAR   \n"
 12450                           		movlw	low(STR_26)
 12451  0017F4  0E33               	movwf	((c:dispLCD_str@str)),c
 12452  0017F6  6E2E               	movlw	high(STR_26)
 12453  0017F8  0E7D               	movwf	((c:dispLCD_str@str+1)),c
 12454  0017FA  6E2F               
 12455                           	lfsr	2,(_IHM)+02h
 12456  0017FC  EE20  F053         	call	u5598
 12457  001800  D802               	goto	u5599
 12458  001802  EF0D  F00C         u5598:
 12459  001806                     	push
 12460  001806  0005               	movwf	pclath
 12461  001808  6EFA               	movf	postinc2,w
 12462  00180A  50DE               	movwf	tosl
 12463  00180C  6EFD               	movf	postinc2,w
 12464  00180E  50DE               	movwf	tosl+1
 12465  001810  6EFE               	movf	tblptru,w
 12466  001812  50F8               	movwf	tosl+2
 12467  001814  6EFF               	movf	pclath,w
 12468  001816  50FA               	
 12469                           	return	;indir
 12470  001818  0012               	u5599:
 12471  00181A                     	line	642
 12472                           	
 12473                           l6812:
 12474  00181A                     ;main.c: 642:                             tecla = teclado_borda();
 12475                           	call	_teclado_borda
 12476  00181A  EC31  F01F         	movlb	0	; () banked
 12477  00181E  0100               	movwf	((main@tecla))&0ffh
 12478  001820  6FBC               	line	643
 12479                           ;main.c: 643:                             switch(tecla)
 12480                           	goto	l6822
 12481  001822  EF20  F00C         	line	645
 12482                           ;main.c: 644:                             {;main.c: 645:                                
                                  case '#': estado = 75; break;
 12483                           	
 12484                           l378:; BSR set to: 0
 12485  001826                     
 12486                           	
 12487                           l6814:; BSR set to: 0
 12488  001826                     
 12489                           	movlw	low(04Bh)
 12490  001826  0E4B               	movwf	((main@estado))&0ffh
 12491  001828  6FBB               	goto	l6950
 12492  00182A  EF49  F00F         	line	646
 12493                           ;main.c: 646:                                 case '*': dispLCD_clr(); estado = 53; brea
                                 k;
 12494                           	
 12495                           l380:; BSR set to: 0
 12496  00182E                     
 12497                           	
 12498                           l6816:; BSR set to: 0
 12499  00182E                     
 12500                           	call	_dispLCD_clr	;wreg free
 12501  00182E  ECDC  F021         	
 12502                           l6818:
 12503  001832                     	movlw	low(035h)
 12504  001832  0E35               	movlb	0	; () banked
 12505  001834  0100               	movwf	((main@estado))&0ffh
 12506  001836  6FBB               	goto	l6950
 12507  001838  EF49  F00F         	line	647
 12508                           	
 12509                           l6820:; BSR set to: 0
 12510  00183C                     
 12511                           ;main.c: 647:                             }
 12512                           	goto	l6950
 12513  00183C  EF49  F00F         	
 12514                           l377:; BSR set to: 0
 12515  001840                     
 12516                           	
 12517                           l6822:; BSR set to: 0
 12518  001840                     
 12519                           	movf	((main@tecla))&0ffh,w
 12520  001840  51BC               	movwf	(??_main+0+0)&0ffh,c
 12521  001842  6E45               	clrf	(??_main+0+0+1)&0ffh,c
 12522  001844  6A46               
 12523                           	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
 12524                           ; Switch size 1, requested type "space"
 12525                           ; Number of cases is 1, Range of values is 0 to 0
 12526                           ; switch strategies available:
 12527                           ; Name         Instructions Cycles
 12528                           ; simple_byte            4     3 (average)
 12529                           ;	Chosen strategy is simple_byte
 12530                           
 12531                           	movf ??_main+0+1,c,w
 12532  001846  5046               	xorlw	0^0	; case 0
 12533  001848  0A00               	skipnz
 12534  00184A  B4D8               	goto	l7836
 12535  00184C  EF2A  F00C         	goto	l6950
 12536  001850  EF49  F00F         	
 12537                           l7836:; BSR set to: 0
 12538  001854                     
 12539                           ; Switch size 1, requested type "space"
 12540                           ; Number of cases is 2, Range of values is 35 to 42
 12541                           ; switch strategies available:
 12542                           ; Name         Instructions Cycles
 12543                           ; simple_byte            7     4 (average)
 12544                           ;	Chosen strategy is simple_byte
 12545                           
 12546                           	movf ??_main+0+0,c,w
 12547  001854  5045               	xorlw	35^0	; case 35
 12548  001856  0A23               	skipnz
 12549  001858  B4D8               	goto	l6814
 12550  00185A  EF13  F00C         	xorlw	42^35	; case 42
 12551  00185E  0A09               	skipnz
 12552  001860  B4D8               	goto	l6816
 12553  001862  EF17  F00C         	goto	l6950
 12554  001866  EF49  F00F         
 12555                           	
 12556                           l379:; BSR set to: 0
 12557  00186A                     
 12558                           	line	648
 12559                           ;main.c: 648:                             break;
 12560                           	goto	l6950
 12561  00186A  EF49  F00F         	line	650
 12562                           ;main.c: 650:              case 75:
 12563                           	
 12564                           l381:; BSR set to: 0
 12565  00186E                     
 12566                           	line	651
 12567                           	
 12568                           l6824:; BSR set to: 0
 12569  00186E                     
 12570                           ;main.c: 651:                             IHM.clr();
 12571                           	lfsr	2,(_IHM)+08h
 12572  00186E  EE20  F059         	call	u5608
 12573  001872  D802               	goto	u5609
 12574  001874  EF46  F00C         u5608:
 12575  001878                     	push
 12576  001878  0005               	movwf	pclath
 12577  00187A  6EFA               	movf	postinc2,w
 12578  00187C  50DE               	movwf	tosl
 12579  00187E  6EFD               	movf	postinc2,w
 12580  001880  50DE               	movwf	tosl+1
 12581  001882  6EFE               	movf	tblptru,w
 12582  001884  50F8               	movwf	tosl+2
 12583  001886  6EFF               	movf	pclath,w
 12584  001888  50FA               	
 12585                           	return	;indir
 12586  00188A  0012               	u5609:
 12587  00188C                     	line	652
 12588                           	
 12589                           l6826:
 12590  00188C                     ;main.c: 652:                             IHM.print(" ESCOLHA A MEMORIA\n"
 12591                           		movlw	low(STR_27)
 12592  00188C  0EE5               	movwf	((c:dispLCD_str@str)),c
 12593  00188E  6E2E               	movlw	high(STR_27)
 12594  001890  0E7C               	movwf	((c:dispLCD_str@str+1)),c
 12595  001892  6E2F               
 12596                           	lfsr	2,(_IHM)+02h
 12597  001894  EE20  F053         	call	u5618
 12598  001898  D802               	goto	u5619
 12599  00189A  EF59  F00C         u5618:
 12600  00189E                     	push
 12601  00189E  0005               	movwf	pclath
 12602  0018A0  6EFA               	movf	postinc2,w
 12603  0018A2  50DE               	movwf	tosl
 12604  0018A4  6EFD               	movf	postinc2,w
 12605  0018A6  50DE               	movwf	tosl+1
 12606  0018A8  6EFE               	movf	tblptru,w
 12607  0018AA  50F8               	movwf	tosl+2
 12608  0018AC  6EFF               	movf	pclath,w
 12609  0018AE  50FA               	
 12610                           	return	;indir
 12611  0018B0  0012               	u5619:
 12612  0018B2                     	line	656
 12613                           	
 12614                           l6828:
 12615  0018B2                     ;main.c: 656:                             estado = 76;
 12616                           	movlw	low(04Ch)
 12617  0018B2  0E4C               	movlb	0	; () banked
 12618  0018B4  0100               	movwf	((main@estado))&0ffh
 12619  0018B6  6FBB               	goto	l6830
 12620  0018B8  EF5E  F00C         	line	658
 12621                           ;main.c: 658:              case 76:
 12622                           	
 12623                           l382:; BSR set to: 0
 12624  0018BC                     
 12625                           	line	659
 12626                           	
 12627                           l6830:; BSR set to: 0
 12628  0018BC                     
 12629                           ;main.c: 659:                             tecla = teclado_borda();
 12630                           	call	_teclado_borda	;wreg free
 12631  0018BC  EC31  F01F         	movlb	0	; () banked
 12632  0018C0  0100               	movwf	((main@tecla))&0ffh
 12633  0018C2  6FBC               	line	660
 12634                           ;main.c: 660:                             switch(tecla)
 12635                           	goto	l6844
 12636  0018C4  EFC0  F00C         	line	662
 12637                           ;main.c: 661:                             {;main.c: 662:                                
                                  case '0':
 12638                           	
 12639                           l384:; BSR set to: 0
 12640  0018C8                     
 12641                           	goto	l6832
 12642  0018C8  EF76  F00C         	line	663
 12643                           ;main.c: 663:                                 case '1':
 12644                           	
 12645                           l385:; BSR set to: 0
 12646  0018CC                     
 12647                           	goto	l6832
 12648  0018CC  EF76  F00C         	line	664
 12649                           ;main.c: 664:                                 case '2':
 12650                           	
 12651                           l386:; BSR set to: 0
 12652  0018D0                     
 12653                           	goto	l6832
 12654  0018D0  EF76  F00C         	line	665
 12655                           ;main.c: 665:                                 case '3':
 12656                           	
 12657                           l387:; BSR set to: 0
 12658  0018D4                     
 12659                           	goto	l6832
 12660  0018D4  EF76  F00C         	line	666
 12661                           ;main.c: 666:                                 case '4':
 12662                           	
 12663                           l388:; BSR set to: 0
 12664  0018D8                     
 12665                           	goto	l6832
 12666  0018D8  EF76  F00C         	line	667
 12667                           ;main.c: 667:                                 case '5':
 12668                           	
 12669                           l389:; BSR set to: 0
 12670  0018DC                     
 12671                           	goto	l6832
 12672  0018DC  EF76  F00C         	line	668
 12673                           ;main.c: 668:                                 case '6':
 12674                           	
 12675                           l390:; BSR set to: 0
 12676  0018E0                     
 12677                           	goto	l6832
 12678  0018E0  EF76  F00C         	line	669
 12679                           ;main.c: 669:                                 case '7':
 12680                           	
 12681                           l391:; BSR set to: 0
 12682  0018E4                     
 12683                           	goto	l6832
 12684  0018E4  EF76  F00C         	line	670
 12685                           ;main.c: 670:                                 case '8':
 12686                           	
 12687                           l392:; BSR set to: 0
 12688  0018E8                     
 12689                           	goto	l6832
 12690  0018E8  EF76  F00C         	line	671
 12691                           ;main.c: 671:                                 case '9':
 12692                           	
 12693                           l393:; BSR set to: 0
 12694  0018EC                     
 12695                           	line	672
 12696                           	
 12697                           l6832:; BSR set to: 0
 12698  0018EC                     
 12699                           ;main.c: 672:                                            salvar_dado(10, tecla % 0x30, i
                                 nit_cond);
 12700                           	movff	(main@tecla),(c:___awmod@dividend)
 12701  0018EC  C0BC  F027         	clrf	((c:___awmod@dividend+1)),c
 12702  0018F0  6A28               	movlw	high(030h)
 12703  0018F2  0E00               	movwf	((c:___awmod@divisor+1)),c
 12704  0018F4  6E2A               	movlw	low(030h)
 12705  0018F6  0E30               	movwf	((c:___awmod@divisor)),c
 12706  0018F8  6E29               	call	___awmod	;wreg free
 12707  0018FA  EC12  F019         	movf	(0+?___awmod),c,w
 12708  0018FE  5027               	movwf	((c:salvar_dado@col)),c
 12709  001900  6E2D               	movff	(main@init_cond),(c:salvar_dado@data)
 12710  001902  C0B2  F02E         	movlw	(0Ah)&0ffh
 12711  001906  0E0A               	
 12712                           	call	_salvar_dado
 12713  001908  ECC6  F020         	line	673
 12714                           	
 12715                           l6834:
 12716  00190C                     ;main.c: 673:                                            EEPROM.salvar(tecla % 0x30, fif
                                 o_adrs() + 2);
 12717                           	call	u5628
 12718  00190C  D802               	goto	u5629
 12719  00190E  EFA5  F00C         u5628:
 12720  001912                     	push
 12721  001912  0005               	
 12722                           	movwf	pclath
 12723  001914  6EFA               	movf	((c:_EEPROM)),c,w
 12724  001916  5047               	movwf	tosl
 12725  001918  6EFD               	movf	((c:_EEPROM+1)),c,w
 12726  00191A  5048               	movwf	tosl+1
 12727  00191C  6EFE               	movf	tblptru,w
 12728  00191E  50F8               	movwf	tosl+2
 12729  001920  6EFF               	movf	pclath,w
 12730  001922  50FA               	
 12731                           	call	_fifo_adrs	;wreg free
 12732  001924  ECB0  F021         	movlw	low(02h)
 12733  001928  0E02               	addwf	(0+?_fifo_adrs),c,w
 12734  00192A  2427               	movwf	((c:salvar_receita@data)),c
 12735  00192C  6E2D               	movlw	high(02h)
 12736  00192E  0E00               	addwfc	(1+?_fifo_adrs),c,w
 12737  001930  2028               	movwf	1+((c:salvar_receita@data)),c
 12738  001932  6E2E               	movff	(main@tecla),(c:___awmod@dividend)
 12739  001934  C0BC  F027         	clrf	((c:___awmod@dividend+1)),c
 12740  001938  6A28               	movlw	high(030h)
 12741  00193A  0E00               	movwf	((c:___awmod@divisor+1)),c
 12742  00193C  6E2A               	movlw	low(030h)
 12743  00193E  0E30               	movwf	((c:___awmod@divisor)),c
 12744  001940  6E29               	call	___awmod	;wreg free
 12745  001942  EC12  F019         	movf	(0+?___awmod),c,w
 12746  001946  5027               	
 12747                           	return	;indir
 12748  001948  0012               	u5629:
 12749  00194A                     	line	674
 12750                           	
 12751                           l6836:
 12752  00194A                     ;main.c: 674:                                            estado = 77;
 12753                           	movlw	low(04Dh)
 12754  00194A  0E4D               	movlb	0	; () banked
 12755  00194C  0100               	movwf	((main@estado))&0ffh
 12756  00194E  6FBB               	line	675
 12757                           ;main.c: 675:                                            break;
 12758                           	goto	l6950
 12759  001950  EF49  F00F         	line	677
 12760                           ;main.c: 677:                                 case '*': IHM.clr(); estado = 74; break;
 12761                           	
 12762                           l395:; BSR set to: 0
 12763  001954                     
 12764                           	
 12765                           l6838:; BSR set to: 0
 12766  001954                     
 12767                           	lfsr	2,(_IHM)+08h
 12768  001954  EE20  F059         	call	u5638
 12769  001958  D802               	goto	u5639
 12770  00195A  EFB9  F00C         u5638:
 12771  00195E                     	push
 12772  00195E  0005               	movwf	pclath
 12773  001960  6EFA               	movf	postinc2,w
 12774  001962  50DE               	movwf	tosl
 12775  001964  6EFD               	movf	postinc2,w
 12776  001966  50DE               	movwf	tosl+1
 12777  001968  6EFE               	movf	tblptru,w
 12778  00196A  50F8               	movwf	tosl+2
 12779  00196C  6EFF               	movf	pclath,w
 12780  00196E  50FA               	
 12781                           	return	;indir
 12782  001970  0012               	u5639:
 12783  001972                     	
 12784                           l6840:
 12785  001972                     	movlw	low(04Ah)
 12786  001972  0E4A               	movlb	0	; () banked
 12787  001974  0100               	movwf	((main@estado))&0ffh
 12788  001976  6FBB               	goto	l6950
 12789  001978  EF49  F00F         	line	678
 12790                           	
 12791                           l6842:; BSR set to: 0
 12792  00197C                     
 12793                           ;main.c: 678:                             }
 12794                           	goto	l6950
 12795  00197C  EF49  F00F         	
 12796                           l383:; BSR set to: 0
 12797  001980                     
 12798                           	
 12799                           l6844:; BSR set to: 0
 12800  001980                     
 12801                           	movf	((main@tecla))&0ffh,w
 12802  001980  51BC               	movwf	(??_main+0+0)&0ffh,c
 12803  001982  6E45               	clrf	(??_main+0+0+1)&0ffh,c
 12804  001984  6A46               
 12805                           	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
 12806                           ; Switch size 1, requested type "space"
 12807                           ; Number of cases is 1, Range of values is 0 to 0
 12808                           ; switch strategies available:
 12809                           ; Name         Instructions Cycles
 12810                           ; simple_byte            4     3 (average)
 12811                           ;	Chosen strategy is simple_byte
 12812                           
 12813                           	movf ??_main+0+1,c,w
 12814  001986  5046               	xorlw	0^0	; case 0
 12815  001988  0A00               	skipnz
 12816  00198A  B4D8               	goto	l7838
 12817  00198C  EFCA  F00C         	goto	l6950
 12818  001990  EF49  F00F         	
 12819                           l7838:; BSR set to: 0
 12820  001994                     
 12821                           ; Switch size 1, requested type "space"
 12822                           ; Number of cases is 11, Range of values is 42 to 57
 12823                           ; switch strategies available:
 12824                           ; Name         Instructions Cycles
 12825                           ; simple_byte           34    18 (average)
 12826                           ;	Chosen strategy is simple_byte
 12827                           
 12828                           	movf ??_main+0+0,c,w
 12829  001994  5045               	xorlw	42^0	; case 42
 12830  001996  0A2A               	skipnz
 12831  001998  B4D8               	goto	l6838
 12832  00199A  EFAA  F00C         	xorlw	48^42	; case 48
 12833  00199E  0A1A               	skipnz
 12834  0019A0  B4D8               	goto	l6832
 12835  0019A2  EF76  F00C         	xorlw	49^48	; case 49
 12836  0019A6  0A01               	skipnz
 12837  0019A8  B4D8               	goto	l6832
 12838  0019AA  EF76  F00C         	xorlw	50^49	; case 50
 12839  0019AE  0A03               	skipnz
 12840  0019B0  B4D8               	goto	l6832
 12841  0019B2  EF76  F00C         	xorlw	51^50	; case 51
 12842  0019B6  0A01               	skipnz
 12843  0019B8  B4D8               	goto	l6832
 12844  0019BA  EF76  F00C         	xorlw	52^51	; case 52
 12845  0019BE  0A07               	skipnz
 12846  0019C0  B4D8               	goto	l6832
 12847  0019C2  EF76  F00C         	xorlw	53^52	; case 53
 12848  0019C6  0A01               	skipnz
 12849  0019C8  B4D8               	goto	l6832
 12850  0019CA  EF76  F00C         	xorlw	54^53	; case 54
 12851  0019CE  0A03               	skipnz
 12852  0019D0  B4D8               	goto	l6832
 12853  0019D2  EF76  F00C         	xorlw	55^54	; case 55
 12854  0019D6  0A01               	skipnz
 12855  0019D8  B4D8               	goto	l6832
 12856  0019DA  EF76  F00C         	xorlw	56^55	; case 56
 12857  0019DE  0A0F               	skipnz
 12858  0019E0  B4D8               	goto	l6832
 12859  0019E2  EF76  F00C         	xorlw	57^56	; case 57
 12860  0019E6  0A01               	skipnz
 12861  0019E8  B4D8               	goto	l6832
 12862  0019EA  EF76  F00C         	goto	l6950
 12863  0019EE  EF49  F00F         
 12864                           	
 12865                           l394:; BSR set to: 0
 12866  0019F2                     
 12867                           	line	679
 12868                           ;main.c: 679:                             break;
 12869                           	goto	l6950
 12870  0019F2  EF49  F00F         	line	681
 12871                           ;main.c: 681:              case 77:
 12872                           	
 12873                           l396:; BSR set to: 0
 12874  0019F6                     
 12875                           	line	682
 12876                           	
 12877                           l6846:; BSR set to: 0
 12878  0019F6                     
 12879                           ;main.c: 682:                             IHM.clr();
 12880                           	lfsr	2,(_IHM)+08h
 12881  0019F6  EE20  F059         	call	u5648
 12882  0019FA  D802               	goto	u5649
 12883  0019FC  EF0A  F00D         u5648:
 12884  001A00                     	push
 12885  001A00  0005               	movwf	pclath
 12886  001A02  6EFA               	movf	postinc2,w
 12887  001A04  50DE               	movwf	tosl
 12888  001A06  6EFD               	movf	postinc2,w
 12889  001A08  50DE               	movwf	tosl+1
 12890  001A0A  6EFE               	movf	tblptru,w
 12891  001A0C  50F8               	movwf	tosl+2
 12892  001A0E  6EFF               	movf	pclath,w
 12893  001A10  50FA               	
 12894                           	return	;indir
 12895  001A12  0012               	u5649:
 12896  001A14                     	line	683
 12897                           	
 12898                           l6848:
 12899  001A14                     ;main.c: 683:                             for(char i = 0; i <= 3; i++)
 12900                           	movlw	low(0)
 12901  001A14  0E00               	movlb	0	; () banked
 12902  001A16  0100               	movwf	((main@i_687))&0ffh
 12903  001A18  6FA9               	
 12904                           l6850:; BSR set to: 0
 12905  001A1A                     
 12906                           		movlw	04h-1
 12907  001A1A  0E03               	cpfsgt	((main@i_687))&0ffh
 12908  001A1C  65A9               	goto	u5651
 12909  001A1E  EF13  F00D         	goto	u5650
 12910  001A22  EF15  F00D         
 12911                           u5651:
 12912  001A26                     	goto	l6854
 12913  001A26  EF19  F00D         u5650:
 12914  001A2A                     	goto	l6872
 12915  001A2A  EF5A  F00D         	
 12916                           l6852:; BSR set to: 0
 12917  001A2E                     
 12918                           	goto	l6872
 12919  001A2E  EF5A  F00D         	
 12920                           l397:; BSR set to: 0
 12921  001A32                     
 12922                           	line	685
 12923                           	
 12924                           l6854:; BSR set to: 0
 12925  001A32                     
 12926                           ;main.c: 684:                             {;main.c: 685:                                
                                  for(char j = 0; j <= 19; j++)
 12927                           	movlw	low(0)
 12928  001A32  0E00               	movwf	((main@j_688))&0ffh
 12929  001A34  6FAA               	
 12930                           l6856:; BSR set to: 0
 12931  001A36                     
 12932                           		movlw	014h-1
 12933  001A36  0E13               	cpfsgt	((main@j_688))&0ffh
 12934  001A38  65AA               	goto	u5661
 12935  001A3A  EF21  F00D         	goto	u5660
 12936  001A3E  EF23  F00D         
 12937                           u5661:
 12938  001A42                     	goto	l6860
 12939  001A42  EF27  F00D         u5660:
 12940  001A46                     	goto	l6868
 12941  001A46  EF4F  F00D         	
 12942                           l6858:; BSR set to: 0
 12943  001A4A                     
 12944                           	goto	l6868
 12945  001A4A  EF4F  F00D         	
 12946                           l399:; BSR set to: 0
 12947  001A4E                     
 12948                           	line	687
 12949                           	
 12950                           l6860:; BSR set to: 0
 12951  001A4E                     
 12952                           ;main.c: 686:                                 {;main.c: 687:                            
                                          IHM.printpos(i, j, "\377");
 12953                           	lfsr	2,(_IHM)+04h
 12954  001A4E  EE20  F055         	call	u5678
 12955  001A52  D802               	goto	u5679
 12956  001A54  EF3D  F00D         u5678:
 12957  001A58                     	push
 12958  001A58  0005               	movwf	pclath
 12959  001A5A  6EFA               	movf	postinc2,w
 12960  001A5C  50DE               	movwf	tosl
 12961  001A5E  6EFD               	movf	postinc2,w
 12962  001A60  50DE               	movwf	tosl+1
 12963  001A62  6EFE               	movf	tblptru,w
 12964  001A64  50F8               	movwf	tosl+2
 12965  001A66  6EFF               	movf	pclath,w
 12966  001A68  50FA               	
 12967                           	movff	(main@j_688),(c:dispLCD@col)
 12968  001A6A  C0AA  F02E         		movlw	low(STR_28)
 12969  001A6E  0EFD               	movwf	((c:dispLCD@str)),c
 12970  001A70  6E2F               	movlw	high(STR_28)
 12971  001A72  0E7F               	movwf	((c:dispLCD@str+1)),c
 12972  001A74  6E30               
 12973                           	movf	((main@i_687))&0ffh,w
 12974  001A76  51A9               	
 12975                           	return	;indir
 12976  001A78  0012               	u5679:
 12977  001A7A                     	line	688
 12978                           	
 12979                           l6862:
 12980  001A7A                     ;main.c: 688:                                     delay(10);
 12981                           	movlw	high(0Ah)
 12982  001A7A  0E00               	movwf	((c:delay@t+1)),c
 12983  001A7C  6E28               	movlw	low(0Ah)
 12984  001A7E  0E0A               	movwf	((c:delay@t)),c
 12985  001A80  6E27               	call	_delay
 12986  001A82  EC12  F020         	line	689
 12987                           	
 12988                           l6864:
 12989  001A86                     ;main.c: 689:                                 }
 12990                           	movlb	0	; () banked
 12991  001A86  0100               	incf	((main@j_688))&0ffh
 12992  001A88  2BAA               	
 12993                           l6866:; BSR set to: 0
 12994  001A8A                     
 12995                           		movlw	014h-1
 12996  001A8A  0E13               	cpfsgt	((main@j_688))&0ffh
 12997  001A8C  65AA               	goto	u5681
 12998  001A8E  EF4B  F00D         	goto	u5680
 12999  001A92  EF4D  F00D         
 13000                           u5681:
 13001  001A96                     	goto	l6860
 13002  001A96  EF27  F00D         u5680:
 13003  001A9A                     	goto	l6868
 13004  001A9A  EF4F  F00D         	
 13005                           l400:; BSR set to: 0
 13006  001A9E                     
 13007                           	line	690
 13008                           	
 13009                           l6868:; BSR set to: 0
 13010  001A9E                     
 13011                           ;main.c: 690:                             }
 13012                           	incf	((main@i_687))&0ffh
 13013  001A9E  2BA9               	
 13014                           l6870:; BSR set to: 0
 13015  001AA0                     
 13016                           		movlw	04h-1
 13017  001AA0  0E03               	cpfsgt	((main@i_687))&0ffh
 13018  001AA2  65A9               	goto	u5691
 13019  001AA4  EF56  F00D         	goto	u5690
 13020  001AA8  EF58  F00D         
 13021                           u5691:
 13022  001AAC                     	goto	l6854
 13023  001AAC  EF19  F00D         u5690:
 13024  001AB0                     	goto	l6872
 13025  001AB0  EF5A  F00D         	
 13026                           l398:; BSR set to: 0
 13027  001AB4                     
 13028                           	line	692
 13029                           	
 13030                           l6872:; BSR set to: 0
 13031  001AB4                     
 13032                           ;main.c: 692:                             for(char i = 0; i <= 3; i++)
 13033                           	movlw	low(0)
 13034  001AB4  0E00               	movwf	((main@i_690))&0ffh
 13035  001AB6  6FAB               	
 13036                           l6874:; BSR set to: 0
 13037  001AB8                     
 13038                           		movlw	04h-1
 13039  001AB8  0E03               	cpfsgt	((main@i_690))&0ffh
 13040  001ABA  65AB               	goto	u5701
 13041  001ABC  EF62  F00D         	goto	u5700
 13042  001AC0  EF64  F00D         
 13043                           u5701:
 13044  001AC4                     	goto	l6878
 13045  001AC4  EF68  F00D         u5700:
 13046  001AC8                     	goto	l6896
 13047  001AC8  EFA9  F00D         	
 13048                           l6876:; BSR set to: 0
 13049  001ACC                     
 13050                           	goto	l6896
 13051  001ACC  EFA9  F00D         	
 13052                           l401:; BSR set to: 0
 13053  001AD0                     
 13054                           	line	694
 13055                           	
 13056                           l6878:; BSR set to: 0
 13057  001AD0                     
 13058                           ;main.c: 693:                             {;main.c: 694:                                
                                  for(char j = 0; j <= 19; j++)
 13059                           	movlw	low(0)
 13060  001AD0  0E00               	movwf	((main@j_691))&0ffh
 13061  001AD2  6FAC               	
 13062                           l6880:; BSR set to: 0
 13063  001AD4                     
 13064                           		movlw	014h-1
 13065  001AD4  0E13               	cpfsgt	((main@j_691))&0ffh
 13066  001AD6  65AC               	goto	u5711
 13067  001AD8  EF70  F00D         	goto	u5710
 13068  001ADC  EF72  F00D         
 13069                           u5711:
 13070  001AE0                     	goto	l6884
 13071  001AE0  EF76  F00D         u5710:
 13072  001AE4                     	goto	l6892
 13073  001AE4  EF9E  F00D         	
 13074                           l6882:; BSR set to: 0
 13075  001AE8                     
 13076                           	goto	l6892
 13077  001AE8  EF9E  F00D         	
 13078                           l403:; BSR set to: 0
 13079  001AEC                     
 13080                           	line	696
 13081                           	
 13082                           l6884:; BSR set to: 0
 13083  001AEC                     
 13084                           ;main.c: 695:                                 {;main.c: 696:                            
                                          IHM.printpos(i, j, " ");
 13085                           	lfsr	2,(_IHM)+04h
 13086  001AEC  EE20  F055         	call	u5728
 13087  001AF0  D802               	goto	u5729
 13088  001AF2  EF8C  F00D         u5728:
 13089  001AF6                     	push
 13090  001AF6  0005               	movwf	pclath
 13091  001AF8  6EFA               	movf	postinc2,w
 13092  001AFA  50DE               	movwf	tosl
 13093  001AFC  6EFD               	movf	postinc2,w
 13094  001AFE  50DE               	movwf	tosl+1
 13095  001B00  6EFE               	movf	tblptru,w
 13096  001B02  50F8               	movwf	tosl+2
 13097  001B04  6EFF               	movf	pclath,w
 13098  001B06  50FA               	
 13099                           	movff	(main@j_691),(c:dispLCD@col)
 13100  001B08  C0AC  F02E         		movlw	low(STR_29)
 13101  001B0C  0EC1               	movwf	((c:dispLCD@str)),c
 13102  001B0E  6E2F               	movlw	high(STR_29)
 13103  001B10  0E7D               	movwf	((c:dispLCD@str+1)),c
 13104  001B12  6E30               
 13105                           	movf	((main@i_690))&0ffh,w
 13106  001B14  51AB               	
 13107                           	return	;indir
 13108  001B16  0012               	u5729:
 13109  001B18                     	line	697
 13110                           	
 13111                           l6886:
 13112  001B18                     ;main.c: 697:                                     delay(10);
 13113                           	movlw	high(0Ah)
 13114  001B18  0E00               	movwf	((c:delay@t+1)),c
 13115  001B1A  6E28               	movlw	low(0Ah)
 13116  001B1C  0E0A               	movwf	((c:delay@t)),c
 13117  001B1E  6E27               	call	_delay
 13118  001B20  EC12  F020         	line	698
 13119                           	
 13120                           l6888:
 13121  001B24                     ;main.c: 698:                                 }
 13122                           	movlb	0	; () banked
 13123  001B24  0100               	incf	((main@j_691))&0ffh
 13124  001B26  2BAC               	
 13125                           l6890:; BSR set to: 0
 13126  001B28                     
 13127                           		movlw	014h-1
 13128  001B28  0E13               	cpfsgt	((main@j_691))&0ffh
 13129  001B2A  65AC               	goto	u5731
 13130  001B2C  EF9A  F00D         	goto	u5730
 13131  001B30  EF9C  F00D         
 13132                           u5731:
 13133  001B34                     	goto	l6884
 13134  001B34  EF76  F00D         u5730:
 13135  001B38                     	goto	l6892
 13136  001B38  EF9E  F00D         	
 13137                           l404:; BSR set to: 0
 13138  001B3C                     
 13139                           	line	699
 13140                           	
 13141                           l6892:; BSR set to: 0
 13142  001B3C                     
 13143                           ;main.c: 699:                             }
 13144                           	incf	((main@i_690))&0ffh
 13145  001B3C  2BAB               	
 13146                           l6894:; BSR set to: 0
 13147  001B3E                     
 13148                           		movlw	04h-1
 13149  001B3E  0E03               	cpfsgt	((main@i_690))&0ffh
 13150  001B40  65AB               	goto	u5741
 13151  001B42  EFA5  F00D         	goto	u5740
 13152  001B46  EFA7  F00D         
 13153                           u5741:
 13154  001B4A                     	goto	l6878
 13155  001B4A  EF68  F00D         u5740:
 13156  001B4E                     	goto	l6896
 13157  001B4E  EFA9  F00D         	
 13158                           l402:; BSR set to: 0
 13159  001B52                     
 13160                           	line	700
 13161                           	
 13162                           l6896:; BSR set to: 0
 13163  001B52                     
 13164                           ;main.c: 700:                             IHM.printpos(1, 0, "      SEQUENCIA     ");
 13165                           	lfsr	2,(_IHM)+04h
 13166  001B52  EE20  F055         	call	u5758
 13167  001B56  D802               	goto	u5759
 13168  001B58  EFBF  F00D         u5758:
 13169  001B5C                     	push
 13170  001B5C  0005               	movwf	pclath
 13171  001B5E  6EFA               	movf	postinc2,w
 13172  001B60  50DE               	movwf	tosl
 13173  001B62  6EFD               	movf	postinc2,w
 13174  001B64  50DE               	movwf	tosl+1
 13175  001B66  6EFE               	movf	tblptru,w
 13176  001B68  50F8               	movwf	tosl+2
 13177  001B6A  6EFF               	movf	pclath,w
 13178  001B6C  50FA               	
 13179                           	movlw	low(0)
 13180  001B6E  0E00               	movwf	((c:dispLCD@col)),c
 13181  001B70  6E2E               		movlw	low(STR_30)
 13182  001B72  0E56               	movwf	((c:dispLCD@str)),c
 13183  001B74  6E2F               	movlw	high(STR_30)
 13184  001B76  0E7E               	movwf	((c:dispLCD@str+1)),c
 13185  001B78  6E30               
 13186                           	movlw	(01h)&0ffh
 13187  001B7A  0E01               	
 13188                           	return	;indir
 13189  001B7C  0012               	u5759:
 13190  001B7E                     	line	701
 13191                           ;main.c: 701:                             IHM.printpos(2, 0, "        SALVA       ");
 13192                           	lfsr	2,(_IHM)+04h
 13193  001B7E  EE20  F055         	call	u5768
 13194  001B82  D802               	goto	u5769
 13195  001B84  EFD5  F00D         u5768:
 13196  001B88                     	push
 13197  001B88  0005               	movwf	pclath
 13198  001B8A  6EFA               	movf	postinc2,w
 13199  001B8C  50DE               	movwf	tosl
 13200  001B8E  6EFD               	movf	postinc2,w
 13201  001B90  50DE               	movwf	tosl+1
 13202  001B92  6EFE               	movf	tblptru,w
 13203  001B94  50F8               	movwf	tosl+2
 13204  001B96  6EFF               	movf	pclath,w
 13205  001B98  50FA               	
 13206                           	movlw	low(0)
 13207  001B9A  0E00               	movwf	((c:dispLCD@col)),c
 13208  001B9C  6E2E               		movlw	low(STR_31)
 13209  001B9E  0ED8               	movwf	((c:dispLCD@str)),c
 13210  001BA0  6E2F               	movlw	high(STR_31)
 13211  001BA2  0E7D               	movwf	((c:dispLCD@str+1)),c
 13212  001BA4  6E30               
 13213                           	movlw	(02h)&0ffh
 13214  001BA6  0E02               	
 13215                           	return	;indir
 13216  001BA8  0012               	u5769:
 13217  001BAA                     	line	703
 13218                           	
 13219                           l6898:
 13220  001BAA                     ;main.c: 703:                             setT1(1000);
 13221                           	movlw	low(03E8h)
 13222  001BAA  0EE8               	movwf	((c:setT1@c)),c
 13223  001BAC  6E2D               	movlw	high(03E8h)
 13224  001BAE  0E03               	movwf	((c:setT1@c+1)),c
 13225  001BB0  6E2E               	movlw	low highword(03E8h)
 13226  001BB2  0E00               	movwf	((c:setT1@c+2)),c
 13227  001BB4  6E2F               	movlw	high highword(03E8h)
 13228  001BB6  0E00               	movwf	((c:setT1@c+3)),c
 13229  001BB8  6E30               	call	_setT1
 13230  001BBA  EC94  F021         	line	704
 13231                           	
 13232                           l6900:
 13233  001BBE                     ;main.c: 704:                             estado = 78;
 13234                           	movlw	low(04Eh)
 13235  001BBE  0E4E               	movlb	0	; () banked
 13236  001BC0  0100               	movwf	((main@estado))&0ffh
 13237  001BC2  6FBB               	line	705
 13238                           ;main.c: 705:                             break;
 13239                           	goto	l6950
 13240  001BC4  EF49  F00F         	line	707
 13241                           ;main.c: 707:              case 78:
 13242                           	
 13243                           l405:; BSR set to: 0
 13244  001BC8                     
 13245                           	line	708
 13246                           	
 13247                           l6902:; BSR set to: 0
 13248  001BC8                     
 13249                           ;main.c: 708:                             if(!statusT1())
 13250                           	call	_statusT1	;wreg free
 13251  001BC8  EC9E  F021         	movf	(0+?_statusT1),c,w
 13252  001BCC  5027               iorwf	(1+?_statusT1),c,w
 13253  001BCE  1028               iorwf	(2+?_statusT1),c,w
 13254  001BD0  1029               iorwf	(3+?_statusT1),c,w
 13255  001BD2  102A               	btfss	status,2
 13256  001BD4  A4D8               	goto	u5771
 13257  001BD6  EFEF  F00D         	goto	u5770
 13258  001BDA  EFF1  F00D         
 13259                           u5771:
 13260  001BDE                     	goto	l6950
 13261  001BDE  EF49  F00F         u5770:
 13262  001BE2                     	line	709
 13263                           	
 13264                           l6904:
 13265  001BE2                     ;main.c: 709:                                 estado = 53;
 13266                           	movlw	low(035h)
 13267  001BE2  0E35               	movlb	0	; () banked
 13268  001BE4  0100               	movwf	((main@estado))&0ffh
 13269  001BE6  6FBB               	goto	l6950
 13270  001BE8  EF49  F00F         	
 13271                           l406:; BSR set to: 0
 13272  001BEC                     
 13273                           	line	710
 13274                           ;main.c: 710:                             break;
 13275                           	goto	l6950
 13276  001BEC  EF49  F00F         	line	712
 13277                           ;main.c: 712:              case 90:
 13278                           	
 13279                           l407:; BSR set to: 0
 13280  001BF0                     
 13281                           	line	713
 13282                           	
 13283                           l6906:; BSR set to: 0
 13284  001BF0                     
 13285                           ;main.c: 713:                             IHM.printpos(2, 0, "config contrl:     %");
 13286                           	lfsr	2,(_IHM)+04h
 13287  001BF0  EE20  F055         	call	u5788
 13288  001BF4  D802               	goto	u5789
 13289  001BF6  EF0E  F00E         u5788:
 13290  001BFA                     	push
 13291  001BFA  0005               	movwf	pclath
 13292  001BFC  6EFA               	movf	postinc2,w
 13293  001BFE  50DE               	movwf	tosl
 13294  001C00  6EFD               	movf	postinc2,w
 13295  001C02  50DE               	movwf	tosl+1
 13296  001C04  6EFE               	movf	tblptru,w
 13297  001C06  50F8               	movwf	tosl+2
 13298  001C08  6EFF               	movf	pclath,w
 13299  001C0A  50FA               	
 13300                           	movlw	low(0)
 13301  001C0C  0E00               	movwf	((c:dispLCD@col)),c
 13302  001C0E  6E2E               		movlw	low(STR_32)
 13303  001C10  0E13               	movwf	((c:dispLCD@str)),c
 13304  001C12  6E2F               	movlw	high(STR_32)
 13305  001C14  0E7F               	movwf	((c:dispLCD@str+1)),c
 13306  001C16  6E30               
 13307                           	movlw	(02h)&0ffh
 13308  001C18  0E02               	
 13309                           	return	;indir
 13310  001C1A  0012               	u5789:
 13311  001C1C                     	line	714
 13312                           	
 13313                           l6908:
 13314  001C1C                     ;main.c: 714:                             IHM.printv(2, 15, num, 3);
 13315                           	lfsr	2,(_IHM)+06h
 13316  001C1C  EE20  F057         	call	u5798
 13317  001C20  D802               	goto	u5799
 13318  001C22  EF26  F00E         u5798:
 13319  001C26                     	push
 13320  001C26  0005               	movwf	pclath
 13321  001C28  6EFA               	movf	postinc2,w
 13322  001C2A  50DE               	movwf	tosl
 13323  001C2C  6EFD               	movf	postinc2,w
 13324  001C2E  50DE               	movwf	tosl+1
 13325  001C30  6EFE               	movf	tblptru,w
 13326  001C32  50F8               	movwf	tosl+2
 13327  001C34  6EFF               	movf	pclath,w
 13328  001C36  50FA               	
 13329                           	movlw	low(0Fh)
 13330  001C38  0E0F               	movwf	((c:dispLCD_num@col)),c
 13331  001C3A  6E32               	movff	(main@num),(c:dispLCD_num@num)
 13332  001C3C  C0B4  F033         	movff	(main@num+1),(c:dispLCD_num@num+1)
 13333  001C40  C0B5  F034         	movlw	low(03h)
 13334  001C44  0E03               	movwf	((c:dispLCD_num@tam)),c
 13335  001C46  6E35               	movlw	(02h)&0ffh
 13336  001C48  0E02               	
 13337                           	return	;indir
 13338  001C4A  0012               	u5799:
 13339  001C4C                     	line	715
 13340                           	
 13341                           l6910:
 13342  001C4C                     ;main.c: 715:                             estado = 91;
 13343                           	movlw	low(05Bh)
 13344  001C4C  0E5B               	movlb	0	; () banked
 13345  001C4E  0100               	movwf	((main@estado))&0ffh
 13346  001C50  6FBB               	line	716
 13347                           ;main.c: 716:                             break;
 13348                           	goto	l6950
 13349  001C52  EF49  F00F         	line	718
 13350                           ;main.c: 718:              case 91:
 13351                           	
 13352                           l408:; BSR set to: 0
 13353  001C56                     
 13354                           	line	719
 13355                           	
 13356                           l6912:; BSR set to: 0
 13357  001C56                     
 13358                           ;main.c: 719:                             tecla = teclado_borda();
 13359                           	call	_teclado_borda
 13360  001C56  EC31  F01F         	movlb	0	; () banked
 13361  001C5A  0100               	movwf	((main@tecla))&0ffh
 13362  001C5C  6FBC               	line	720
 13363                           	
 13364                           l6914:; BSR set to: 0
 13365  001C5E                     
 13366                           ;main.c: 720:                             if(tecla >= '0' && tecla <= '9')
 13367                           		movlw	030h-1
 13368  001C5E  0E2F               	cpfsgt	((main@tecla))&0ffh
 13369  001C60  65BC               	goto	u5801
 13370  001C62  EF35  F00E         	goto	u5800
 13371  001C66  EF37  F00E         
 13372                           u5801:
 13373  001C6A                     	goto	l6924
 13374  001C6A  EF5A  F00E         u5800:
 13375  001C6E                     	
 13376                           l6916:; BSR set to: 0
 13377  001C6E                     
 13378                           		movlw	03Ah-0
 13379  001C6E  0E3A               	cpfslt	((main@tecla))&0ffh
 13380  001C70  61BC               	goto	u5811
 13381  001C72  EF3D  F00E         	goto	u5810
 13382  001C76  EF3F  F00E         
 13383                           u5811:
 13384  001C7A                     	goto	l6924
 13385  001C7A  EF5A  F00E         u5810:
 13386  001C7E                     	line	722
 13387                           	
 13388                           l6918:; BSR set to: 0
 13389  001C7E                     
 13390                           ;main.c: 721:                             {;main.c: 722:                                
                                  dignum_conc(tecla, &num);
 13391                           		movlw	low(main@num)
 13392  001C7E  0EB4               	movwf	((c:dignum_conc@ptrNum)),c
 13393  001C80  6E2D               	movlw	high(main@num)
 13394  001C82  0E00               	movwf	((c:dignum_conc@ptrNum+1)),c
 13395  001C84  6E2E               
 13396                           	movf	((main@tecla))&0ffh,w
 13397  001C86  51BC               	
 13398                           	call	_dignum_conc
 13399  001C88  ECC2  F01E         	line	723
 13400                           	
 13401                           l6920:
 13402  001C8C                     ;main.c: 723:                                 if(num > 100)
 13403                           	movlb	0	; () banked
 13404  001C8C  0100               		movf	((main@num+1))&0ffh,w
 13405  001C8E  51B5               	bnz	u5820
 13406  001C90  E109               	movlw	101
 13407  001C92  0E65               	subwf	 ((main@num))&0ffh,w
 13408  001C94  5DB4               	btfss	status,0
 13409  001C96  A0D8               	goto	u5821
 13410  001C98  EF50  F00E         	goto	u5820
 13411  001C9C  EF52  F00E         
 13412                           u5821:
 13413  001CA0                     	goto	l410
 13414  001CA0  EF56  F00E         u5820:
 13415  001CA4                     	line	724
 13416                           	
 13417                           l6922:; BSR set to: 0
 13418  001CA4                     
 13419                           ;main.c: 724:                                     num = 100;
 13420                           	movlw	high(064h)
 13421  001CA4  0E00               	movwf	((main@num+1))&0ffh
 13422  001CA6  6FB5               	movlw	low(064h)
 13423  001CA8  0E64               	movwf	((main@num))&0ffh
 13424  001CAA  6FB4               	
 13425                           l410:; BSR set to: 0
 13426  001CAC                     
 13427                           	line	725
 13428                           ;main.c: 725:                                 estado = 90;
 13429                           	movlw	low(05Ah)
 13430  001CAC  0E5A               	movwf	((main@estado))&0ffh
 13431  001CAE  6FBB               	goto	l6924
 13432  001CB0  EF5A  F00E         	line	726
 13433                           ;main.c: 726:                             }
 13434                           	
 13435                           l409:; BSR set to: 0
 13436  001CB4                     
 13437                           	line	727
 13438                           	
 13439                           l6924:; BSR set to: 0
 13440  001CB4                     
 13441                           ;main.c: 727:                             if(tecla == '*')
 13442                           		movlw	42
 13443  001CB4  0E2A               	xorwf	((main@tecla))&0ffh,w
 13444  001CB6  19BC               	btfss	status,2
 13445  001CB8  A4D8               	goto	u5831
 13446  001CBA  EF61  F00E         	goto	u5830
 13447  001CBE  EF63  F00E         
 13448                           u5831:
 13449  001CC2                     	goto	l6930
 13450  001CC2  EF6E  F00E         u5830:
 13451  001CC6                     	line	729
 13452                           	
 13453                           l6926:; BSR set to: 0
 13454  001CC6                     
 13455                           ;main.c: 728:                             {;main.c: 729:                                
                                  dignum_apagar(&num);
 13456                           		movlw	low(main@num)
 13457  001CC6  0EB4               	movwf	((c:dignum_apagar@ptrNum)),c
 13458  001CC8  6E2E               	movlw	high(main@num)
 13459  001CCA  0E00               	movwf	((c:dignum_apagar@ptrNum+1)),c
 13460  001CCC  6E2F               
 13461                           	call	_dignum_apagar	;wreg free
 13462  001CCE  EC72  F020         	line	730
 13463                           	
 13464                           l6928:
 13465  001CD2                     ;main.c: 730:                                 estado = 90;
 13466                           	movlw	low(05Ah)
 13467  001CD2  0E5A               	movlb	0	; () banked
 13468  001CD4  0100               	movwf	((main@estado))&0ffh
 13469  001CD6  6FBB               	goto	l6930
 13470  001CD8  EF6E  F00E         	line	731
 13471                           ;main.c: 731:                             }
 13472                           	
 13473                           l411:; BSR set to: 0
 13474  001CDC                     
 13475                           	line	732
 13476                           	
 13477                           l6930:; BSR set to: 0
 13478  001CDC                     
 13479                           ;main.c: 732:                             if(tecla == '#')
 13480                           		movlw	35
 13481  001CDC  0E23               	xorwf	((main@tecla))&0ffh,w
 13482  001CDE  19BC               	btfss	status,2
 13483  001CE0  A4D8               	goto	u5841
 13484  001CE2  EF75  F00E         	goto	u5840
 13485  001CE6  EF77  F00E         
 13486                           u5841:
 13487  001CEA                     	goto	l6950
 13488  001CEA  EF49  F00F         u5840:
 13489  001CEE                     	line	733
 13490                           	
 13491                           l6932:; BSR set to: 0
 13492  001CEE                     
 13493                           ;main.c: 733:                                 estado = 92;
 13494                           	movlw	low(05Ch)
 13495  001CEE  0E5C               	movwf	((main@estado))&0ffh
 13496  001CF0  6FBB               	goto	l6950
 13497  001CF2  EF49  F00F         	
 13498                           l412:; BSR set to: 0
 13499  001CF6                     
 13500                           	line	734
 13501                           ;main.c: 734:                             break;
 13502                           	goto	l6950
 13503  001CF6  EF49  F00F         	line	736
 13504                           ;main.c: 736:              case 92:
 13505                           	
 13506                           l413:; BSR set to: 0
 13507  001CFA                     
 13508                           	line	737
 13509                           	
 13510                           l6934:; BSR set to: 0
 13511  001CFA                     
 13512                           ;main.c: 737:                             fifo_add_control(num);
 13513                           	movf	((main@num))&0ffh,w
 13514  001CFA  51B4               	
 13515                           	call	_fifo_add_control
 13516  001CFC  EC1F  F01E         	line	738
 13517                           	
 13518                           l6936:
 13519  001D00                     ;main.c: 738:                             IHM.clr();
 13520                           	lfsr	2,(_IHM)+08h
 13521  001D00  EE20  F059         	call	u5858
 13522  001D04  D802               	goto	u5859
 13523  001D06  EF8F  F00E         u5858:
 13524  001D0A                     	push
 13525  001D0A  0005               	movwf	pclath
 13526  001D0C  6EFA               	movf	postinc2,w
 13527  001D0E  50DE               	movwf	tosl
 13528  001D10  6EFD               	movf	postinc2,w
 13529  001D12  50DE               	movwf	tosl+1
 13530  001D14  6EFE               	movf	tblptru,w
 13531  001D16  50F8               	movwf	tosl+2
 13532  001D18  6EFF               	movf	pclath,w
 13533  001D1A  50FA               	
 13534                           	return	;indir
 13535  001D1C  0012               	u5859:
 13536  001D1E                     	line	739
 13537                           	
 13538                           l6938:
 13539  001D1E                     ;main.c: 739:                             estado = 16;
 13540                           	movlw	low(010h)
 13541  001D1E  0E10               	movlb	0	; () banked
 13542  001D20  0100               	movwf	((main@estado))&0ffh
 13543  001D22  6FBB               	line	740
 13544                           ;main.c: 740:                             break;
 13545                           	goto	l6950
 13546  001D24  EF49  F00F         	line	742
 13547                           ;main.c: 742:              case 54:
 13548                           	
 13549                           l414:; BSR set to: 0
 13550  001D28                     
 13551                           	line	743
 13552                           	
 13553                           l6940:; BSR set to: 0
 13554  001D28                     
 13555                           ;main.c: 743:                             fifo_add_ciclo(ciclos);
 13556                           	movff	(main@ciclos),(c:fifo_add_ciclo@ciclos)
 13557  001D28  C0B0  F027         	movff	(main@ciclos+1),(c:fifo_add_ciclo@ciclos+1)
 13558  001D2C  C0B1  F028         	call	_fifo_add_ciclo	;wreg free
 13559  001D30  ECCB  F021         	line	744
 13560                           	
 13561                           l6942:
 13562  001D34                     ;main.c: 744:                             estado = 30;
 13563                           	movlw	low(01Eh)
 13564  001D34  0E1E               	movlb	0	; () banked
 13565  001D36  0100               	movwf	((main@estado))&0ffh
 13566  001D38  6FBB               	line	745
 13567                           	
 13568                           l6944:; BSR set to: 0
 13569  001D3A                     
 13570                           ;main.c: 745:                             botao = 1;
 13571                           	movlw	low(01h)
 13572  001D3A  0E01               	movwf	((main@botao))&0ffh
 13573  001D3C  6FB3               	line	746
 13574                           ;main.c: 746:                             break;
 13575                           	goto	l6950
 13576  001D3E  EF49  F00F         	line	747
 13577                           	
 13578                           l6946:; BSR set to: 0
 13579  001D42                     
 13580                           ;main.c: 747:         }
 13581                           	goto	l6950
 13582  001D42  EF49  F00F         	
 13583                           l162:; BSR set to: 0
 13584  001D46                     
 13585                           	
 13586                           l6948:
 13587  001D46                     	movlb	0	; () banked
 13588  001D46  0100               	movf	((main@estado))&0ffh,w
 13589  001D48  51BB               	movwf	(??_main+0+0)&0ffh,c
 13590  001D4A  6E45               	clrf	(??_main+0+0+1)&0ffh,c
 13591  001D4C  6A46               
 13592                           	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
 13593                           ; Switch size 1, requested type "space"
 13594                           ; Number of cases is 1, Range of values is 0 to 0
 13595                           ; switch strategies available:
 13596                           ; Name         Instructions Cycles
 13597                           ; simple_byte            4     3 (average)
 13598                           ;	Chosen strategy is simple_byte
 13599                           
 13600                           	movf ??_main+0+1,c,w
 13601  001D4E  5046               	xorlw	0^0	; case 0
 13602  001D50  0A00               	skipnz
 13603  001D52  B4D8               	goto	l7840
 13604  001D54  EFAE  F00E         	goto	l6950
 13605  001D58  EF49  F00F         	
 13606                           l7840:; BSR set to: 0
 13607  001D5C                     
 13608                           ; Switch size 1, requested type "space"
 13609                           ; Number of cases is 38, Range of values is 0 to 100
 13610                           ; switch strategies available:
 13611                           ; Name         Instructions Cycles
 13612                           ; simple_byte          115    58 (average)
 13613                           ;	Chosen strategy is simple_byte
 13614                           
 13615                           	movf ??_main+0+0,c,w
 13616  001D5C  5045               	xorlw	0^0	; case 0
 13617  001D5E  0A00               	skipnz
 13618  001D60  B4D8               	goto	l6206
 13619  001D62  EF56  F000         	xorlw	1^0	; case 1
 13620  001D66  0A01               	skipnz
 13621  001D68  B4D8               	goto	l6256
 13622  001D6A  EFF8  F000         	xorlw	2^1	; case 2
 13623  001D6E  0A03               	skipnz
 13624  001D70  B4D8               	goto	l6280
 13625  001D72  EF56  F001         	xorlw	3^2	; case 3
 13626  001D76  0A01               	skipnz
 13627  001D78  B4D8               	goto	l6542
 13628  001D7A  EF82  F006         	xorlw	6^3	; case 6
 13629  001D7E  0A05               	skipnz
 13630  001D80  B4D8               	goto	l6550
 13631  001D82  EFC2  F006         	xorlw	7^6	; case 7
 13632  001D86  0A01               	skipnz
 13633  001D88  B4D8               	goto	l6594
 13634  001D8A  EF61  F007         	xorlw	8^7	; case 8
 13635  001D8E  0A0F               	skipnz
 13636  001D90  B4D8               	goto	l6284
 13637  001D92  EF6A  F001         	xorlw	9^8	; case 9
 13638  001D96  0A01               	skipnz
 13639  001D98  B4D8               	goto	l6292
 13640  001D9A  EF8E  F001         	xorlw	10^9	; case 10
 13641  001D9E  0A03               	skipnz
 13642  001DA0  B4D8               	goto	l6636
 13643  001DA2  EF34  F008         	xorlw	11^10	; case 11
 13644  001DA6  0A01               	skipnz
 13645  001DA8  B4D8               	goto	l6644
 13646  001DAA  EF62  F008         	xorlw	14^11	; case 14
 13647  001DAE  0A05               	skipnz
 13648  001DB0  B4D8               	goto	l6686
 13649  001DB2  EF15  F009         	xorlw	16^14	; case 16
 13650  001DB6  0A1E               	skipnz
 13651  001DB8  B4D8               	goto	l6682
 13652  001DBA  EF0E  F009         	xorlw	30^16	; case 30
 13653  001DBE  0A0E               	skipnz
 13654  001DC0  B4D8               	goto	l6694
 13655  001DC2  EF6A  F009         	xorlw	40^30	; case 40
 13656  001DC6  0A36               	skipnz
 13657  001DC8  B4D8               	goto	l6738
 13658  001DCA  EF73  F00A         	xorlw	41^40	; case 41
 13659  001DCE  0A01               	skipnz
 13660  001DD0  B4D8               	goto	l6760
 13661  001DD2  EFC5  F00A         	xorlw	42^41	; case 42
 13662  001DD6  0A03               	skipnz
 13663  001DD8  B4D8               	goto	l6766
 13664  001DDA  EFF8  F00A         	xorlw	52^42	; case 52
 13665  001DDE  0A1E               	skipnz
 13666  001DE0  B4D8               	goto	l6772
 13667  001DE2  EF0F  F00B         	xorlw	53^52	; case 53
 13668  001DE6  0A01               	skipnz
 13669  001DE8  B4D8               	goto	l6798
 13670  001DEA  EF85  F00B         	xorlw	54^53	; case 54
 13671  001DEE  0A03               	skipnz
 13672  001DF0  B4D8               	goto	l6940
 13673  001DF2  EF94  F00E         	xorlw	70^54	; case 70
 13674  001DF6  0A70               	skipnz
 13675  001DF8  B4D8               	goto	l6696
 13676  001DFA  EF70  F009         	xorlw	71^70	; case 71
 13677  001DFE  0A01               	skipnz
 13678  001E00  B4D8               	goto	l6296
 13679  001E02  EFA2  F001         	xorlw	72^71	; case 72
 13680  001E06  0A0F               	skipnz
 13681  001E08  B4D8               	goto	l6470
 13682  001E0A  EFA4  F004         	xorlw	73^72	; case 73
 13683  001E0E  0A01               	skipnz
 13684  001E10  B4D8               	goto	l6476
 13685  001E12  EFCB  F004         	xorlw	74^73	; case 74
 13686  001E16  0A03               	skipnz
 13687  001E18  B4D8               	goto	l6806
 13688  001E1A  EFDD  F00B         	xorlw	75^74	; case 75
 13689  001E1E  0A01               	skipnz
 13690  001E20  B4D8               	goto	l6824
 13691  001E22  EF37  F00C         	xorlw	76^75	; case 76
 13692  001E26  0A07               	skipnz
 13693  001E28  B4D8               	goto	l6830
 13694  001E2A  EF5E  F00C         	xorlw	77^76	; case 77
 13695  001E2E  0A01               	skipnz
 13696  001E30  B4D8               	goto	l6846
 13697  001E32  EFFB  F00C         	xorlw	78^77	; case 78
 13698  001E36  0A03               	skipnz
 13699  001E38  B4D8               	goto	l6902
 13700  001E3A  EFE4  F00D         	xorlw	80^78	; case 80
 13701  001E3E  0A1E               	skipnz
 13702  001E40  B4D8               	goto	l6368
 13703  001E42  EF25  F003         	xorlw	81^80	; case 81
 13704  001E46  0A01               	skipnz
 13705  001E48  B4D8               	goto	l6378
 13706  001E4A  EF48  F003         	xorlw	82^81	; case 82
 13707  001E4E  0A03               	skipnz
 13708  001E50  B4D8               	goto	l6382
 13709  001E52  EF5C  F003         	xorlw	84^82	; case 84
 13710  001E56  0A06               	skipnz
 13711  001E58  B4D8               	goto	l6394
 13712  001E5A  EF8B  F003         	xorlw	85^84	; case 85
 13713  001E5E  0A01               	skipnz
 13714  001E60  B4D8               	goto	l6408
 13715  001E62  EFD9  F003         	xorlw	86^85	; case 86
 13716  001E66  0A03               	skipnz
 13717  001E68  B4D8               	goto	l6466
 13718  001E6A  EF90  F004         	xorlw	90^86	; case 90
 13719  001E6E  0A0C               	skipnz
 13720  001E70  B4D8               	goto	l6906
 13721  001E72  EFF8  F00D         	xorlw	91^90	; case 91
 13722  001E76  0A01               	skipnz
 13723  001E78  B4D8               	goto	l6912
 13724  001E7A  EF2B  F00E         	xorlw	92^91	; case 92
 13725  001E7E  0A07               	skipnz
 13726  001E80  B4D8               	goto	l6934
 13727  001E82  EF7D  F00E         	xorlw	100^92	; case 100
 13728  001E86  0A38               	skipnz
 13729  001E88  B4D8               	goto	l6310
 13730  001E8A  EFD9  F001         	goto	l6950
 13731  001E8E  EF49  F00F         
 13732                           	
 13733                           l172:; BSR set to: 0
 13734  001E92                     
 13735                           	line	749
 13736                           	
 13737                           l6950:
 13738  001E92                     ;main.c: 749:         serialIOscan();
 13739                           	call	_serialIOscan	;wreg free
 13740  001E92  ECAE  F01B         	line	751
 13741                           ;main.c: 751:         switch(meAtuadores)
 13742                           	goto	l7024
 13743  001E96  EF95  F010         	line	753
 13744                           ;main.c: 752:         {;main.c: 753:             case 0: break;
 13745                           	
 13746                           l416:
 13747  001E9A                     	goto	l6948
 13748  001E9A  EFA3  F00E         	line	755
 13749                           ;main.c: 755:             case 1:
 13750                           	
 13751                           l418:
 13752  001E9E                     	line	756
 13753                           	
 13754                           l6952:
 13755  001E9E                     ;main.c: 756:                             resetIndicePassos();
 13756                           	call	_resetIndicePassos	;wreg free
 13757  001E9E  ECE3  F021         	line	757
 13758                           ;main.c: 757:                             resetContCiclos();
 13759                           	call	_resetContCiclos	;wreg free
 13760  001EA2  ECBC  F021         	line	758
 13761                           	
 13762                           l6954:
 13763  001EA6                     ;main.c: 758:                             meAtuadores = 2;
 13764                           	movlw	low(02h)
 13765  001EA6  0E02               	movlb	0	; () banked
 13766  001EA8  0100               	movwf	((main@meAtuadores))&0ffh
 13767  001EAA  6FAF               	line	759
 13768                           ;main.c: 759:                             break;
 13769                           	goto	l6948
 13770  001EAC  EFA3  F00E         	line	761
 13771                           ;main.c: 761:             case 2:
 13772                           	
 13773                           l419:; BSR set to: 0
 13774  001EB0                     
 13775                           	line	762
 13776                           	
 13777                           l6956:; BSR set to: 0
 13778  001EB0                     
 13779                           ;main.c: 762:                             auxPasso = fifo_lerPos(getIndicePassos());
 13780                           	call	_getIndicePassos	;wreg free
 13781  001EB0  ECD0  F021         	
 13782                           	call	_fifo_lerPos
 13783  001EB4  EC31  F021         	movlb	0	; () banked
 13784  001EB8  0100               	movwf	((main@auxPasso))&0ffh
 13785  001EBA  6FBA               	line	764
 13786                           	
 13787                           l6958:; BSR set to: 0
 13788  001EBC                     
 13789                           ;main.c: 764:                             if(botao == 1 || botao == 3 || botao == 0)
 13790                           		decf	((main@botao))&0ffh,w
 13791  001EBC  05B3               	btfsc	status,2
 13792  001EBE  B4D8               	goto	u5861
 13793  001EC0  EF64  F00F         	goto	u5860
 13794  001EC4  EF66  F00F         
 13795                           u5861:
 13796  001EC8                     	goto	l6964
 13797  001EC8  EF79  F00F         u5860:
 13798  001ECC                     	
 13799                           l6960:; BSR set to: 0
 13800  001ECC                     
 13801                           		movlw	3
 13802  001ECC  0E03               	xorwf	((main@botao))&0ffh,w
 13803  001ECE  19B3               	btfsc	status,2
 13804  001ED0  B4D8               	goto	u5871
 13805  001ED2  EF6D  F00F         	goto	u5870
 13806  001ED6  EF6F  F00F         
 13807                           u5871:
 13808  001EDA                     	goto	l6964
 13809  001EDA  EF79  F00F         u5870:
 13810  001EDE                     	
 13811                           l6962:; BSR set to: 0
 13812  001EDE                     
 13813                           	movf	((main@botao))&0ffh,w
 13814  001EDE  51B3               	btfss	status,2
 13815  001EE0  A4D8               	goto	u5881
 13816  001EE2  EF75  F00F         	goto	u5880
 13817  001EE6  EF77  F00F         u5881:
 13818  001EEA                     	goto	l6948
 13819  001EEA  EFA3  F00E         u5880:
 13820  001EEE                     	goto	l6964
 13821  001EEE  EF79  F00F         	
 13822                           l422:; BSR set to: 0
 13823  001EF2                     
 13824                           	line	765
 13825                           	
 13826                           l6964:; BSR set to: 0
 13827  001EF2                     
 13828                           ;main.c: 765:                                 meAtuadores = 3;
 13829                           	movlw	low(03h)
 13830  001EF2  0E03               	movwf	((main@meAtuadores))&0ffh
 13831  001EF4  6FAF               	goto	l6948
 13832  001EF6  EFA3  F00E         	
 13833                           l420:; BSR set to: 0
 13834  001EFA                     
 13835                           	line	766
 13836                           ;main.c: 766:                             break;
 13837                           	goto	l6948
 13838  001EFA  EFA3  F00E         	line	768
 13839                           ;main.c: 768:             case 3:
 13840                           	
 13841                           l423:; BSR set to: 0
 13842  001EFE                     
 13843                           	line	769
 13844                           	
 13845                           l6966:; BSR set to: 0
 13846  001EFE                     
 13847                           ;main.c: 769:                             if(auxPasso <= 0x64 || auxPasso == 0xFE)
 13848                           		movlw	065h-1
 13849  001EFE  0E64               	cpfsgt	((main@auxPasso))&0ffh
 13850  001F00  65BA               	goto	u5891
 13851  001F02  EF85  F00F         	goto	u5890
 13852  001F06  EF87  F00F         
 13853                           u5891:
 13854  001F0A                     	goto	l6970
 13855  001F0A  EF92  F00F         u5890:
 13856  001F0E                     	
 13857                           l6968:; BSR set to: 0
 13858  001F0E                     
 13859                           		movlw	254
 13860  001F0E  0EFE               	xorwf	((main@auxPasso))&0ffh,w
 13861  001F10  19BA               	btfss	status,2
 13862  001F12  A4D8               	goto	u5901
 13863  001F14  EF8E  F00F         	goto	u5900
 13864  001F18  EF90  F00F         
 13865                           u5901:
 13866  001F1C                     	goto	l6976
 13867  001F1C  EFC5  F00F         u5900:
 13868  001F20                     	goto	l6970
 13869  001F20  EF92  F00F         	
 13870                           l426:; BSR set to: 0
 13871  001F24                     
 13872                           	line	771
 13873                           	
 13874                           l6970:; BSR set to: 0
 13875  001F24                     
 13876                           ;main.c: 770:                             {;main.c: 771:                                
                                  decodifica(&auxPasso);
 13877                           		movlw	low(main@auxPasso)
 13878  001F24  0EBA               	movwf	((c:decodifica@d)),c
 13879  001F26  6E27               	movlw	high(main@auxPasso)
 13880  001F28  0E00               	movwf	((c:decodifica@d+1)),c
 13881  001F2A  6E28               
 13882                           	call	_decodifica	;wreg free
 13883  001F2C  ECCB  F014         	line	772
 13884                           	
 13885                           l6972:
 13886  001F30                     ;main.c: 772:                                 MCP4725((long)((4095L * auxPasso)/100));
 13887                           	movlb	0	; () banked
 13888  001F30  0100               	movf	((main@auxPasso))&0ffh,w
 13889  001F32  51BA               	movwf	((c:___lmul@multiplier)),c
 13890  001F34  6E27               	clrf	((c:___lmul@multiplier+1)),c
 13891  001F36  6A28               	clrf	((c:___lmul@multiplier+2)),c
 13892  001F38  6A29               	clrf	((c:___lmul@multiplier+3)),c
 13893  001F3A  6A2A               
 13894                           	movlw	low(0FFFh)
 13895  001F3C  0EFF               	movwf	((c:___lmul@multiplicand)),c
 13896  001F3E  6E2B               	movlw	high(0FFFh)
 13897  001F40  0E0F               	movwf	((c:___lmul@multiplicand+1)),c
 13898  001F42  6E2C               	movlw	low highword(0FFFh)
 13899  001F44  0E00               	movwf	((c:___lmul@multiplicand+2)),c
 13900  001F46  6E2D               	movlw	high highword(0FFFh)
 13901  001F48  0E00               	movwf	((c:___lmul@multiplicand+3)),c
 13902  001F4A  6E2E               	call	___lmul	;wreg free
 13903  001F4C  ECE7  F01B         	movff	0+?___lmul,(c:___aldiv@dividend)
 13904  001F50  C027  F033         	movff	1+?___lmul,(c:___aldiv@dividend+1)
 13905  001F54  C028  F034         	movff	2+?___lmul,(c:___aldiv@dividend+2)
 13906  001F58  C029  F035         	movff	3+?___lmul,(c:___aldiv@dividend+3)
 13907  001F5C  C02A  F036         	
 13908                           	movlw	low(064h)
 13909  001F60  0E64               	movwf	((c:___aldiv@divisor)),c
 13910  001F62  6E37               	movlw	high(064h)
 13911  001F64  0E00               	movwf	((c:___aldiv@divisor+1)),c
 13912  001F66  6E38               	movlw	low highword(064h)
 13913  001F68  0E00               	movwf	((c:___aldiv@divisor+2)),c
 13914  001F6A  6E39               	movlw	high highword(064h)
 13915  001F6C  0E00               	movwf	((c:___aldiv@divisor+3)),c
 13916  001F6E  6E3A               	call	___aldiv	;wreg free
 13917  001F70  EC0F  F016         	movff	0+?___aldiv,(c:MCP4725@Vout)
 13918  001F74  C033  F041         	movff	1+?___aldiv,(c:MCP4725@Vout+1)
 13919  001F78  C034  F042         	call	_MCP4725	;wreg free
 13920  001F7C  ECE8  F020         	line	773
 13921                           	
 13922                           l6974:
 13923  001F80                     ;main.c: 773:                                 meAtuadores = 6;
 13924                           	movlw	low(06h)
 13925  001F80  0E06               	movlb	0	; () banked
 13926  001F82  0100               	movwf	((main@meAtuadores))&0ffh
 13927  001F84  6FAF               	line	774
 13928                           ;main.c: 774:                             }
 13929                           	goto	l6948
 13930  001F86  EFA3  F00E         	line	775
 13931                           ;main.c: 775:                             else if( auxPasso > 0x64 && auxPasso <= 0xDC )
                                 
 13932                           	
 13933                           l424:; BSR set to: 0
 13934  001F8A                     
 13935                           	
 13936                           l6976:; BSR set to: 0
 13937  001F8A                     
 13938                           		movlw	065h-1
 13939  001F8A  0E64               	cpfsgt	((main@auxPasso))&0ffh
 13940  001F8C  65BA               	goto	u5911
 13941  001F8E  EFCB  F00F         	goto	u5910
 13942  001F92  EFCD  F00F         
 13943                           u5911:
 13944  001F96                     	goto	l6986
 13945  001F96  EFF0  F00F         u5910:
 13946  001F9A                     	
 13947                           l6978:; BSR set to: 0
 13948  001F9A                     
 13949                           		movlw	0DDh-0
 13950  001F9A  0EDD               	cpfslt	((main@auxPasso))&0ffh
 13951  001F9C  61BA               	goto	u5921
 13952  001F9E  EFD3  F00F         	goto	u5920
 13953  001FA2  EFD5  F00F         
 13954                           u5921:
 13955  001FA6                     	goto	l6986
 13956  001FA6  EFF0  F00F         u5920:
 13957  001FAA                     	line	777
 13958                           	
 13959                           l6980:; BSR set to: 0
 13960  001FAA                     
 13961                           ;main.c: 776:                             {;main.c: 777:                                
                                  auxPasso -= 0x64;
 13962                           	movlw	(064h)&0ffh
 13963  001FAA  0E64               	subwf	((main@auxPasso))&0ffh
 13964  001FAC  5FBA               	line	778
 13965                           	
 13966                           l6982:; BSR set to: 0
 13967  001FAE                     
 13968                           ;main.c: 778:                                 setT1(auxPasso * 1000 );
 13969                           	movff	(main@auxPasso),(c:___wmul@multiplier)
 13970  001FAE  C0BA  F027         	clrf	((c:___wmul@multiplier+1)),c
 13971  001FB2  6A28               	movlw	high(03E8h)
 13972  001FB4  0E03               	movwf	((c:___wmul@multiplicand+1)),c
 13973  001FB6  6E2A               	movlw	low(03E8h)
 13974  001FB8  0EE8               	movwf	((c:___wmul@multiplicand)),c
 13975  001FBA  6E29               	call	___wmul	;wreg free
 13976  001FBC  EC89  F020         	movff	0+?___wmul,(c:setT1@c)
 13977  001FC0  C027  F02D         	movff	1+?___wmul,(c:setT1@c+1)
 13978  001FC4  C028  F02E         	movlw	0
 13979  001FC8  0E00               	btfsc	((c:setT1@c+1)),c,7
 13980  001FCA  BE2E               	movlw	-1
 13981  001FCC  0EFF               	movwf	((c:setT1@c+2)),c
 13982  001FCE  6E2F               	movwf	((c:setT1@c+3)),c
 13983  001FD0  6E30               	call	_setT1	;wreg free
 13984  001FD2  EC94  F021         	line	779
 13985                           	
 13986                           l6984:
 13987  001FD6                     ;main.c: 779:                                 meAtuadores = 4;
 13988                           	movlw	low(04h)
 13989  001FD6  0E04               	movlb	0	; () banked
 13990  001FD8  0100               	movwf	((main@meAtuadores))&0ffh
 13991  001FDA  6FAF               	line	780
 13992                           ;main.c: 780:                             }
 13993                           	goto	l6948
 13994  001FDC  EFA3  F00E         	line	781
 13995                           ;main.c: 781:                             else
 13996                           	
 13997                           l428:; BSR set to: 0
 13998  001FE0                     
 13999                           	line	783
 14000                           	
 14001                           l6986:; BSR set to: 0
 14002  001FE0                     
 14003                           ;main.c: 782:                             {;main.c: 783:                                
                                  decodifica(&auxPasso);
 14004                           		movlw	low(main@auxPasso)
 14005  001FE0  0EBA               	movwf	((c:decodifica@d)),c
 14006  001FE2  6E27               	movlw	high(main@auxPasso)
 14007  001FE4  0E00               	movwf	((c:decodifica@d+1)),c
 14008  001FE6  6E28               
 14009                           	call	_decodifica	;wreg free
 14010  001FE8  ECCB  F014         	line	784
 14011                           ;main.c: 784:                                 set_passo(auxPasso, vetorOut);
 14012                           		movlw	low(main@vetorOut)
 14013  001FEC  0EAE               	movwf	((c:set_passo@ptr)),c
 14014  001FEE  6E27               	movlw	high(main@vetorOut)
 14015  001FF0  0E00               	movwf	((c:set_passo@ptr+1)),c
 14016  001FF2  6E28               
 14017                           	movlb	0	; () banked
 14018  001FF4  0100               	movf	((main@auxPasso))&0ffh,w
 14019  001FF6  51BA               	
 14020                           	call	_set_passo
 14021  001FF8  EC2D  F018         	line	785
 14022                           	
 14023                           l6988:
 14024  001FFC                     ;main.c: 785:                                 meAtuadores = 5;
 14025                           	movlw	low(05h)
 14026  001FFC  0E05               	movlb	0	; () banked
 14027  001FFE  0100               	movwf	((main@meAtuadores))&0ffh
 14028  002000  6FAF               	goto	l6948
 14029  002002  EFA3  F00E         	line	786
 14030                           ;main.c: 786:                             }
 14031                           	
 14032                           l429:; BSR set to: 0
 14033  002006                     
 14034                           	goto	l6948
 14035  002006  EFA3  F00E         	
 14036                           l427:; BSR set to: 0
 14037  00200A                     
 14038                           	line	787
 14039                           ;main.c: 787:                             break;
 14040                           	goto	l6948
 14041  00200A  EFA3  F00E         	line	789
 14042                           ;main.c: 789:             case 4:
 14043                           	
 14044                           l430:; BSR set to: 0
 14045  00200E                     
 14046                           	line	790
 14047                           	
 14048                           l6990:; BSR set to: 0
 14049  00200E                     
 14050                           ;main.c: 790:                             if(!statusT1())
 14051                           	call	_statusT1	;wreg free
 14052  00200E  EC9E  F021         	movf	(0+?_statusT1),c,w
 14053  002012  5027               iorwf	(1+?_statusT1),c,w
 14054  002014  1028               iorwf	(2+?_statusT1),c,w
 14055  002016  1029               iorwf	(3+?_statusT1),c,w
 14056  002018  102A               	btfss	status,2
 14057  00201A  A4D8               	goto	u5931
 14058  00201C  EF12  F010         	goto	u5930
 14059  002020  EF14  F010         
 14060                           u5931:
 14061  002024                     	goto	l6948
 14062  002024  EFA3  F00E         u5930:
 14063  002028                     	line	791
 14064                           	
 14065                           l6992:
 14066  002028                     ;main.c: 791:                                 meAtuadores = 6;
 14067                           	movlw	low(06h)
 14068  002028  0E06               	movlb	0	; () banked
 14069  00202A  0100               	movwf	((main@meAtuadores))&0ffh
 14070  00202C  6FAF               	goto	l6948
 14071  00202E  EFA3  F00E         	
 14072                           l431:; BSR set to: 0
 14073  002032                     
 14074                           	line	792
 14075                           ;main.c: 792:                             break;
 14076                           	goto	l6948
 14077  002032  EFA3  F00E         	line	794
 14078                           ;main.c: 794:             case 5:
 14079                           	
 14080                           l432:; BSR set to: 0
 14081  002036                     
 14082                           	line	795
 14083                           	
 14084                           l6994:; BSR set to: 0
 14085  002036                     
 14086                           ;main.c: 795:                             if(ler_sensor(auxPasso, vetorIn))
 14087                           		movlw	low(main@vetorIn)
 14088  002036  0EAD               	movwf	((c:ler_sensor@ptr)),c
 14089  002038  6E27               	movlw	high(main@vetorIn)
 14090  00203A  0E00               	movwf	((c:ler_sensor@ptr+1)),c
 14091  00203C  6E28               
 14092                           	movf	((main@auxPasso))&0ffh,w
 14093  00203E  51BA               	
 14094                           	call	_ler_sensor
 14095  002040  EC75  F015         	iorlw	0
 14096  002044  0900               	btfsc	status,2
 14097  002046  B4D8               	goto	u5941
 14098  002048  EF28  F010         	goto	u5940
 14099  00204C  EF2A  F010         u5941:
 14100  002050                     	goto	l6948
 14101  002050  EFA3  F00E         u5940:
 14102  002054                     	line	796
 14103                           	
 14104                           l6996:
 14105  002054                     ;main.c: 796:                                 meAtuadores = 6;
 14106                           	movlw	low(06h)
 14107  002054  0E06               	movlb	0	; () banked
 14108  002056  0100               	movwf	((main@meAtuadores))&0ffh
 14109  002058  6FAF               	goto	l6948
 14110  00205A  EFA3  F00E         	
 14111                           l433:; BSR set to: 0
 14112  00205E                     
 14113                           	line	797
 14114                           ;main.c: 797:                             break;
 14115                           	goto	l6948
 14116  00205E  EFA3  F00E         	line	799
 14117                           ;main.c: 799:             case 6:
 14118                           	
 14119                           l434:; BSR set to: 0
 14120  002062                     
 14121                           	line	800
 14122                           	
 14123                           l6998:; BSR set to: 0
 14124  002062                     
 14125                           ;main.c: 800:                             if(botao == 3)
 14126                           		movlw	3
 14127  002062  0E03               	xorwf	((main@botao))&0ffh,w
 14128  002064  19B3               	btfss	status,2
 14129  002066  A4D8               	goto	u5951
 14130  002068  EF38  F010         	goto	u5950
 14131  00206C  EF3A  F010         
 14132                           u5951:
 14133  002070                     	goto	l435
 14134  002070  EF3C  F010         u5950:
 14135  002074                     	line	802
 14136                           	
 14137                           l7000:; BSR set to: 0
 14138  002074                     
 14139                           ;main.c: 801:                             {;main.c: 802:                                
                                  botao = 2;
 14140                           	movlw	low(02h)
 14141  002074  0E02               	movwf	((main@botao))&0ffh
 14142  002076  6FB3               	line	803
 14143                           ;main.c: 803:                             }
 14144                           	
 14145                           l435:; BSR set to: 0
 14146  002078                     
 14147                           	line	804
 14148                           ;main.c: 804:                             meAtuadores = 7;
 14149                           	movlw	low(07h)
 14150  002078  0E07               	movwf	((main@meAtuadores))&0ffh
 14151  00207A  6FAF               	line	806
 14152                           ;main.c: 806:                             break;
 14153                           	goto	l6948
 14154  00207C  EFA3  F00E         	line	808
 14155                           ;main.c: 808:             case 7:
 14156                           	
 14157                           l436:; BSR set to: 0
 14158  002080                     
 14159                           	line	809
 14160                           	
 14161                           l7002:; BSR set to: 0
 14162  002080                     
 14163                           ;main.c: 809:                             addIndicePassos();
 14164                           	call	_addIndicePassos	;wreg free
 14165  002080  EC4B  F021         	line	810
 14166                           ;main.c: 810:                             if(getIndicePassos() < fifo_indice())
 14167                           	call	_getIndicePassos	;wreg free
 14168  002084  ECD0  F021         	movwf	(??_main+0+0)&0ffh,c
 14169  002088  6E45               	call	_fifo_indice	;wreg free
 14170  00208A  ECD8  F021         	subwf	((??_main+0+0)),c,w
 14171  00208E  5C45               	btfsc	status,0
 14172  002090  B0D8               	goto	u5961
 14173  002092  EF4D  F010         	goto	u5960
 14174  002096  EF4F  F010         u5961:
 14175  00209A                     	goto	l7006
 14176  00209A  EF54  F010         u5960:
 14177  00209E                     	line	811
 14178                           	
 14179                           l7004:
 14180  00209E                     ;main.c: 811:                                 meAtuadores = 2;
 14181                           	movlw	low(02h)
 14182  00209E  0E02               	movlb	0	; () banked
 14183  0020A0  0100               	movwf	((main@meAtuadores))&0ffh
 14184  0020A2  6FAF               	goto	l6948
 14185  0020A4  EFA3  F00E         	line	812
 14186                           ;main.c: 812:                             else
 14187                           	
 14188                           l437:; BSR set to: 0
 14189  0020A8                     
 14190                           	line	814
 14191                           	
 14192                           l7006:
 14193  0020A8                     ;main.c: 813:                             {;main.c: 814:                                
                                  addContCiclos();
 14194                           	call	_addContCiclos	;wreg free
 14195  0020A8  ECE6  F021         	line	815
 14196                           	
 14197                           l7008:
 14198  0020AC                     ;main.c: 815:                                 meAtuadores = 8;
 14199                           	movlw	low(08h)
 14200  0020AC  0E08               	movlb	0	; () banked
 14201  0020AE  0100               	movwf	((main@meAtuadores))&0ffh
 14202  0020B0  6FAF               	goto	l6948
 14203  0020B2  EFA3  F00E         	line	816
 14204                           ;main.c: 816:                             }
 14205                           	
 14206                           l438:; BSR set to: 0
 14207  0020B6                     
 14208                           	line	817
 14209                           ;main.c: 817:                             break;
 14210                           	goto	l6948
 14211  0020B6  EFA3  F00E         	line	819
 14212                           ;main.c: 819:             case 8:
 14213                           	
 14214                           l439:; BSR set to: 0
 14215  0020BA                     
 14216                           	line	820
 14217                           	
 14218                           l7010:; BSR set to: 0
 14219  0020BA                     
 14220                           ;main.c: 820:                             if((botao != 0) && ((getContCiclos() < getCicl
                                 os()) || (getCiclos() == 0)))
 14221                           	movf	((main@botao))&0ffh,w
 14222  0020BA  51B3               	btfsc	status,2
 14223  0020BC  B4D8               	goto	u5971
 14224  0020BE  EF63  F010         	goto	u5970
 14225  0020C2  EF65  F010         u5971:
 14226  0020C6                     	goto	l7020
 14227  0020C6  EF8C  F010         u5970:
 14228  0020CA                     	
 14229                           l7012:; BSR set to: 0
 14230  0020CA                     
 14231                           	call	_getContCiclos	;wreg free
 14232  0020CA  ECC6  F021         	movff	0+?_getContCiclos,??_main+0+0
 14233  0020CE  C027  F045         	movff	1+?_getContCiclos,??_main+0+0+1
 14234  0020D2  C028  F046         	call	_getCiclos	;wreg free
 14235  0020D6  ECD7  F020         		movf	(0+?_getCiclos),c,w
 14236  0020DA  5027               	subwf	(??_main+0+0),c,w
 14237  0020DC  5C45               	movf	(1+?_getCiclos),c,w
 14238  0020DE  5028               	subwfb	(??_main+0+1),c,w
 14239  0020E0  5846               	btfss	status,0
 14240  0020E2  A0D8               	goto	u5981
 14241  0020E4  EF76  F010         	goto	u5980
 14242  0020E8  EF78  F010         
 14243                           u5981:
 14244  0020EC                     	goto	l7016
 14245  0020EC  EF85  F010         u5980:
 14246  0020F0                     	
 14247                           l7014:
 14248  0020F0                     	call	_getCiclos	;wreg free
 14249  0020F0  ECD7  F020         	movf	(0+?_getCiclos),c,w
 14250  0020F4  5027               iorwf	(1+?_getCiclos),c,w
 14251  0020F6  1028               	btfss	status,2
 14252  0020F8  A4D8               	goto	u5991
 14253  0020FA  EF81  F010         	goto	u5990
 14254  0020FE  EF83  F010         
 14255                           u5991:
 14256  002102                     	goto	l7020
 14257  002102  EF8C  F010         u5990:
 14258  002106                     	goto	l7016
 14259  002106  EF85  F010         	
 14260                           l442:
 14261  00210A                     	line	822
 14262                           	
 14263                           l7016:
 14264  00210A                     ;main.c: 821:                             {;main.c: 822:                                
                                  resetIndicePassos();
 14265                           	call	_resetIndicePassos	;wreg free
 14266  00210A  ECE3  F021         	line	823
 14267                           	
 14268                           l7018:
 14269  00210E                     ;main.c: 823:                                 meAtuadores = 2;
 14270                           	movlw	low(02h)
 14271  00210E  0E02               	movlb	0	; () banked
 14272  002110  0100               	movwf	((main@meAtuadores))&0ffh
 14273  002112  6FAF               	line	824
 14274                           ;main.c: 824:                             }
 14275                           	goto	l6948
 14276  002114  EFA3  F00E         	line	825
 14277                           ;main.c: 825:                             else
 14278                           	
 14279                           l440:; BSR set to: 0
 14280  002118                     
 14281                           	line	827
 14282                           	
 14283                           l7020:
 14284  002118                     ;main.c: 826:                             {;main.c: 827:                                
                                  meAtuadores = 0;
 14285                           	movlw	low(0)
 14286  002118  0E00               	movlb	0	; () banked
 14287  00211A  0100               	movwf	((main@meAtuadores))&0ffh
 14288  00211C  6FAF               	goto	l6948
 14289  00211E  EFA3  F00E         	line	828
 14290                           ;main.c: 828:                             }
 14291                           	
 14292                           l443:; BSR set to: 0
 14293  002122                     
 14294                           	line	829
 14295                           ;main.c: 829:                             break;
 14296                           	goto	l6948
 14297  002122  EFA3  F00E         	line	830
 14298                           	
 14299                           l7022:; BSR set to: 0
 14300  002126                     
 14301                           ;main.c: 830:         }
 14302                           	goto	l6948
 14303  002126  EFA3  F00E         	
 14304                           l415:; BSR set to: 0
 14305  00212A                     
 14306                           	
 14307                           l7024:
 14308  00212A                     	movlb	0	; () banked
 14309  00212A  0100               	movf	((main@meAtuadores))&0ffh,w
 14310  00212C  51AF               	movwf	(??_main+0+0)&0ffh,c
 14311  00212E  6E45               	clrf	(??_main+0+0+1)&0ffh,c
 14312  002130  6A46               
 14313                           	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
 14314                           ; Switch size 1, requested type "space"
 14315                           ; Number of cases is 1, Range of values is 0 to 0
 14316                           ; switch strategies available:
 14317                           ; Name         Instructions Cycles
 14318                           ; simple_byte            4     3 (average)
 14319                           ;	Chosen strategy is simple_byte
 14320                           
 14321                           	movf ??_main+0+1,c,w
 14322  002132  5046               	xorlw	0^0	; case 0
 14323  002134  0A00               	skipnz
 14324  002136  B4D8               	goto	l7842
 14325  002138  EFA0  F010         	goto	l6948
 14326  00213C  EFA3  F00E         	
 14327                           l7842:; BSR set to: 0
 14328  002140                     
 14329                           ; Switch size 1, requested type "space"
 14330                           ; Number of cases is 9, Range of values is 0 to 8
 14331                           ; switch strategies available:
 14332                           ; Name         Instructions Cycles
 14333                           ; simple_byte           28    15 (average)
 14334                           ;	Chosen strategy is simple_byte
 14335                           
 14336                           	movf ??_main+0+0,c,w
 14337  002140  5045               	xorlw	0^0	; case 0
 14338  002142  0A00               	skipnz
 14339  002144  B4D8               	goto	l6948
 14340  002146  EFA3  F00E         	xorlw	1^0	; case 1
 14341  00214A  0A01               	skipnz
 14342  00214C  B4D8               	goto	l6952
 14343  00214E  EF4F  F00F         	xorlw	2^1	; case 2
 14344  002152  0A03               	skipnz
 14345  002154  B4D8               	goto	l6956
 14346  002156  EF58  F00F         	xorlw	3^2	; case 3
 14347  00215A  0A01               	skipnz
 14348  00215C  B4D8               	goto	l6966
 14349  00215E  EF7F  F00F         	xorlw	4^3	; case 4
 14350  002162  0A07               	skipnz
 14351  002164  B4D8               	goto	l6990
 14352  002166  EF07  F010         	xorlw	5^4	; case 5
 14353  00216A  0A01               	skipnz
 14354  00216C  B4D8               	goto	l6994
 14355  00216E  EF1B  F010         	xorlw	6^5	; case 6
 14356  002172  0A03               	skipnz
 14357  002174  B4D8               	goto	l6998
 14358  002176  EF31  F010         	xorlw	7^6	; case 7
 14359  00217A  0A01               	skipnz
 14360  00217C  B4D8               	goto	l7002
 14361  00217E  EF40  F010         	xorlw	8^7	; case 8
 14362  002182  0A0F               	skipnz
 14363  002184  B4D8               	goto	l7010
 14364  002186  EF5D  F010         	goto	l6948
 14365  00218A  EFA3  F00E         
 14366                           	
 14367                           l417:; BSR set to: 0
 14368  00218E                     
 14369                           	goto	l6948
 14370  00218E  EFA3  F00E         	line	831
 14371                           ;main.c: 831:     }
 14372                           	
 14373                           l444:; BSR set to: 0
 14374  002192                     
 14375                           	goto	l6948
 14376  002192  EFA3  F00E         	
 14377                           l445:; BSR set to: 0
 14378  002196                     
 14379                           	line	833
 14380                           ;main.c: 832:     return;
 14381                           	
 14382                           l446:; BSR set to: 0
 14383  002196                     
 14384                           	global	start
 14385                           	goto	start
 14386  002196  EF07  F000         	opt stack 0
 14387                           GLOBAL	__end_of_main
 14388                           	__end_of_main:
 14389  00219A                     	signat	_main,89
 14390                           	global	_wifi_init
 14391                           
 14392 ;; *************** function _wifi_init *****************
 14393 ;; Defined at:
 14394 ;;		line 12 in file "wifi.c"
 14395 ;; Parameters:    Size  Location     Type
 14396 ;;  br              4   21[COMRAM] long 
 14397 ;; Auto vars:     Size  Location     Type
 14398 ;;		None
 14399 ;; Return value:  Size  Location     Type
 14400 ;;                  1    wreg      void 
 14401 ;; Registers used:
 14402 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 14403 ;; Tracked objects:
 14404 ;;		On entry : 0/0
 14405 ;;		On exit  : 0/0
 14406 ;;		Unchanged: 0/0
 14407 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14408 ;;      Params:         4       0       0       0       0       0       0       0       0       0
 14409 ;;      Locals:         0       0       0       0       0       0       0       0       0       0
 14410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0
 14411 ;;      Totals:         4       0       0       0       0       0       0       0       0       0
 14412 ;;Total ram usage:        4 bytes
 14413 ;; Hardware stack levels used:    1
 14414 ;; Hardware stack levels required when called:    4
 14415 ;; This function calls:
 14416 ;;		_initEUSART
 14417 ;; This function is called by:
 14418 ;;		_main
 14419 ;; This function uses a non-reentrant model
 14420 ;;
 14421                           psect	text1,class=CODE,space=0,reloc=2,group=0
 14422                           	file	"wifi.c"
 14423                           	line	12
 14424                           global __ptext1
 14425                           __ptext1:
 14426  004056                     psect	text1
 14427                           	file	"wifi.c"
 14428                           	line	12
 14429                           	global	__size_of_wifi_init
 14430                           	__size_of_wifi_init	equ	__end_of_wifi_init-_wifi_init
 14431  0000                     	
 14432                           _wifi_init:; BSR set to: 0
 14433  004056                     
 14434                           ;incstack = 0
 14435                           	opt	stack 26
 14436                           	line	14
 14437                           	
 14438                           l5522:
 14439  004056                     ;wifi.c: 12: void wifi_init( long br);wifi.c: 13: {;wifi.c: 14:     eusart.init(br);
 14440                           	movff	(c:wifi_init@br),(c:initEUSART@baudRate)
 14441  004056  C03C  F034         	movff	(c:wifi_init@br+1),(c:initEUSART@baudRate+1)
 14442  00405A  C03D  F035         	movff	(c:wifi_init@br+2),(c:initEUSART@baudRate+2)
 14443  00405E  C03E  F036         	movff	(c:wifi_init@br+3),(c:initEUSART@baudRate+3)
 14444  004062  C03F  F037         	lfsr	2,(_eusart)+0Ch
 14445  004066  EE20  F0DD         	call	u3938
 14446  00406A  D802               	goto	u3939
 14447  00406C  EF42  F020         u3938:
 14448  004070                     	push
 14449  004070  0005               	movwf	pclath
 14450  004072  6EFA               	movf	postinc2,w
 14451  004074  50DE               	movwf	tosl
 14452  004076  6EFD               	movf	postinc2,w
 14453  004078  50DE               	movwf	tosl+1
 14454  00407A  6EFE               	movf	tblptru,w
 14455  00407C  50F8               	movwf	tosl+2
 14456  00407E  6EFF               	movf	pclath,w
 14457  004080  50FA               	
 14458                           	return	;indir
 14459  004082  0012               	u3939:
 14460  004084                     	line	16
 14461                           	
 14462                           l1175:
 14463  004084                     	return	;funcret
 14464  004084  0012               	opt stack 0
 14465                           GLOBAL	__end_of_wifi_init
 14466                           	__end_of_wifi_init:
 14467  004086                     	signat	_wifi_init,4217
 14468                           	global	_initEUSART
 14469                           
 14470 ;; *************** function _initEUSART *****************
 14471 ;; Defined at:
 14472 ;;		line 137 in file "eusart.c"
 14473 ;; Parameters:    Size  Location     Type
 14474 ;;  baudRate        4   13[COMRAM] unsigned long 
 14475 ;; Auto vars:     Size  Location     Type
 14476 ;;		None
 14477 ;; Return value:  Size  Location     Type
 14478 ;;                  1    wreg      void 
 14479 ;; Registers used:
 14480 ;;		wreg, status,2, status,0, cstack
 14481 ;; Tracked objects:
 14482 ;;		On entry : 0/0
 14483 ;;		On exit  : 0/0
 14484 ;;		Unchanged: 0/0
 14485 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14486 ;;      Params:         4       0       0       0       0       0       0       0       0       0
 14487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0
 14488 ;;      Temps:          4       0       0       0       0       0       0       0       0       0
 14489 ;;      Totals:         8       0       0       0       0       0       0       0       0       0
 14490 ;;Total ram usage:        8 bytes
 14491 ;; Hardware stack levels used:    1
 14492 ;; Hardware stack levels required when called:    3
 14493 ;; This function calls:
 14494 ;;		___lldiv
 14495 ;; This function is called by:
 14496 ;;		_wifi_init
 14497 ;; This function uses a non-reentrant model
 14498 ;;
 14499                           psect	text2,class=CODE,space=0,reloc=2,group=0
 14500                           	file	"eusart.c"
 14501                           	line	137
 14502                           global __ptext2
 14503                           __ptext2:
 14504  003840                     psect	text2
 14505                           	file	"eusart.c"
 14506                           	line	137
 14507                           	global	__size_of_initEUSART
 14508                           	__size_of_initEUSART	equ	__end_of_initEUSART-_initEUSART
 14509  0000                     	
 14510                           _initEUSART:
 14511  003840                     ;incstack = 0
 14512                           	opt	stack 26
 14513                           	line	139
 14514                           	
 14515                           l5434:
 14516  003840                     ;eusart.c: 137: void initEUSART( unsigned long baudRate );eusart.c: 138: {;eusart.c: 139
                                 :     INTCONbits.GIE = 0;
 14517                           	bcf	((c:4082)),c,7	;volatile
 14518  003840  9EF2               	line	142
 14519                           	
 14520                           l5436:
 14521  003842                     ;eusart.c: 142:     SPBRbits.u16 = (unsigned int)( (20000000 / (baudRate<<2)) - 1);
 14522                           	movlw	low(01312D00h)
 14523  003842  0E00               	movwf	((c:___lldiv@dividend)),c
 14524  003844  6E27               	movlw	high(01312D00h)
 14525  003846  0E2D               	movwf	((c:___lldiv@dividend+1)),c
 14526  003848  6E28               	movlw	low highword(01312D00h)
 14527  00384A  0E31               	movwf	((c:___lldiv@dividend+2)),c
 14528  00384C  6E29               	movlw	high highword(01312D00h)
 14529  00384E  0E01               	movwf	((c:___lldiv@dividend+3)),c
 14530  003850  6E2A               	movff	(c:initEUSART@baudRate),??_initEUSART+0+0
 14531  003852  C034  F038         	movff	(c:initEUSART@baudRate+1),??_initEUSART+0+0+1
 14532  003856  C035  F039         	movff	(c:initEUSART@baudRate+2),??_initEUSART+0+0+2
 14533  00385A  C036  F03A         	movff	(c:initEUSART@baudRate+3),??_initEUSART+0+0+3
 14534  00385E  C037  F03B         	movlw	02h
 14535  003862  0E02               u3895:
 14536  003864                     	bcf	status,0
 14537  003864  90D8               	rlcf	(??_initEUSART+0+0),c
 14538  003866  3638               	rlcf	(??_initEUSART+0+1),c
 14539  003868  3639               	rlcf	(??_initEUSART+0+2),c
 14540  00386A  363A               	rlcf	(??_initEUSART+0+3),c
 14541  00386C  363B               	decfsz	wreg
 14542  00386E  2EE8               	goto	u3895
 14543  003870  EF32  F01C         	movff	??_initEUSART+0+0,(c:___lldiv@divisor)
 14544  003874  C038  F02B         	movff	??_initEUSART+0+1,(c:___lldiv@divisor+1)
 14545  003878  C039  F02C         	movff	??_initEUSART+0+2,(c:___lldiv@divisor+2)
 14546  00387C  C03A  F02D         	movff	??_initEUSART+0+3,(c:___lldiv@divisor+3)
 14547  003880  C03B  F02E         	call	___lldiv	;wreg free
 14548  003884  EC38  F01A         	movlw	low(0FFFFh)
 14549  003888  0EFF               	addwf	(0+?___lldiv),c,w
 14550  00388A  2427               	movlb	0	; () banked
 14551  00388C  0100               	movwf	((153))&0ffh	;volatile
 14552  00388E  6F99               	movlw	high(0FFFFh)
 14553  003890  0EFF               	addwfc	(1+?___lldiv),c,w
 14554  003892  2028               	movwf	1+((153))&0ffh	;volatile
 14555  003894  6F9A               	line	146
 14556                           	
 14557                           l5438:; BSR set to: 0
 14558  003896                     
 14559                           ;eusart.c: 146:     TXSTAbits.SYNC = 0;
 14560                           	bcf	((c:4012)),c,4	;volatile
 14561  003896  98AC               	line	147
 14562                           	
 14563                           l5440:; BSR set to: 0
 14564  003898                     
 14565                           ;eusart.c: 147:     BAUDCTLbits.BRG16 = 1;
 14566                           	bsf	((c:4024)),c,3	;volatile
 14567  003898  86B8               	line	148
 14568                           	
 14569                           l5442:; BSR set to: 0
 14570  00389A                     
 14571                           ;eusart.c: 148:     TXSTAbits.BRGH = 1;
 14572                           	bsf	((c:4012)),c,2	;volatile
 14573  00389A  84AC               	line	150
 14574                           	
 14575                           l5444:; BSR set to: 0
 14576  00389C                     
 14577                           ;eusart.c: 150:     RCSTAbits.SPEN = 1;
 14578                           	bsf	((c:4011)),c,7	;volatile
 14579  00389C  8EAB               	line	151
 14580                           	
 14581                           l5446:; BSR set to: 0
 14582  00389E                     
 14583                           ;eusart.c: 151:     TXSTAbits.TXEN = 1;
 14584                           	bsf	((c:4012)),c,5	;volatile
 14585  00389E  8AAC               	line	152
 14586                           	
 14587                           l5448:; BSR set to: 0
 14588  0038A0                     
 14589                           ;eusart.c: 152:     RCSTAbits.CREN = 1;
 14590                           	bsf	((c:4011)),c,4	;volatile
 14591  0038A0  88AB               	line	154
 14592                           	
 14593                           l5450:; BSR set to: 0
 14594  0038A2                     
 14595                           ;eusart.c: 154:     PIE1bits.RCIE = 1;
 14596                           	bsf	((c:3997)),c,5	;volatile
 14597  0038A2  8A9D               	line	155
 14598                           	
 14599                           l5452:; BSR set to: 0
 14600  0038A4                     
 14601                           ;eusart.c: 155:     PIE1bits.TXIE = 0;
 14602                           	bcf	((c:3997)),c,4	;volatile
 14603  0038A4  989D               	line	156
 14604                           	
 14605                           l5454:; BSR set to: 0
 14606  0038A6                     
 14607                           ;eusart.c: 156:     INTCONbits.PEIE = 1;
 14608                           	bsf	((c:4082)),c,6	;volatile
 14609  0038A6  8CF2               	line	157
 14610                           	
 14611                           l5456:; BSR set to: 0
 14612  0038A8                     
 14613                           ;eusart.c: 157:     INTCONbits.GIE = 1;
 14614                           	bsf	((c:4082)),c,7	;volatile
 14615  0038A8  8EF2               	line	158
 14616                           	
 14617                           l1137:; BSR set to: 0
 14618  0038AA                     
 14619                           	return	;funcret
 14620  0038AA  0012               	opt stack 0
 14621                           GLOBAL	__end_of_initEUSART
 14622                           	__end_of_initEUSART:
 14623  0038AC                     	signat	_initEUSART,4217
 14624                           	global	_timer1_init
 14625                           
 14626 ;; *************** function _timer1_init *****************
 14627 ;; Defined at:
 14628 ;;		line 16 in file "timer1.c"
 14629 ;; Parameters:    Size  Location     Type
 14630 ;;		None
 14631 ;; Auto vars:     Size  Location     Type
 14632 ;;		None
 14633 ;; Return value:  Size  Location     Type
 14634 ;;                  1    wreg      void 
 14635 ;; Registers used:
 14636 ;;		wreg, status,2
 14637 ;; Tracked objects:
 14638 ;;		On entry : 0/0
 14639 ;;		On exit  : 0/0
 14640 ;;		Unchanged: 0/0
 14641 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14642 ;;      Params:         0       0       0       0       0       0       0       0       0       0
 14643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0
 14644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0
 14645 ;;      Totals:         0       0       0       0       0       0       0       0       0       0
 14646 ;;Total ram usage:        0 bytes
 14647 ;; Hardware stack levels used:    1
 14648 ;; Hardware stack levels required when called:    2
 14649 ;; This function calls:
 14650 ;;		Nothing
 14651 ;; This function is called by:
 14652 ;;		_main
 14653 ;; This function uses a non-reentrant model
 14654 ;;
 14655                           psect	text3,class=CODE,space=0,reloc=2,group=0
 14656                           	file	"timer1.c"
 14657                           	line	16
 14658                           global __ptext3
 14659                           __ptext3:
 14660  00422E                     psect	text3
 14661                           	file	"timer1.c"
 14662                           	line	16
 14663                           	global	__size_of_timer1_init
 14664                           	__size_of_timer1_init	equ	__end_of_timer1_init-_timer1_init
 14665  0000                     	
 14666                           _timer1_init:; BSR set to: 0
 14667  00422E                     
 14668                           ;incstack = 0
 14669                           	opt	stack 28
 14670                           	line	18
 14671                           	
 14672                           l5492:
 14673  00422E                     ;timer1.c: 18:     T1CONbits.TMR1CS = 0;
 14674                           	bcf	((c:4045)),c,1	;volatile
 14675  00422E  92CD               	line	19
 14676                           	
 14677                           l5494:
 14678  004230                     ;timer1.c: 19:     T1CONbits.T1CKPS = 0b11;
 14679                           	movlw	(03h & ((1<<2)-1))<<4
 14680  004230  0E30               	iorwf	((c:4045)),c	;volatile
 14681  004232  12CD               	line	20
 14682                           	
 14683                           l5496:
 14684  004234                     ;timer1.c: 20:     T1CONbits.nT1SYNC = 1;
 14685                           	bsf	((c:4045)),c,2	;volatile
 14686  004234  84CD               	line	21
 14687                           ;timer1.c: 21:     TMR1H = ((65536-625)>>8) & 0x00FF;
 14688                           	movlw	low(0FDh)
 14689  004236  0EFD               	movwf	((c:4047)),c	;volatile
 14690  004238  6ECF               	line	22
 14691                           ;timer1.c: 22:     TMR1L = (65536-625) & 0x00FF;
 14692                           	movlw	low(08Fh)
 14693  00423A  0E8F               	movwf	((c:4046)),c	;volatile
 14694  00423C  6ECE               	line	23
 14695                           	
 14696                           l5498:
 14697  00423E                     ;timer1.c: 23:     T1CONbits.T1RUN = 0;
 14698                           	bcf	((c:4045)),c,6	;volatile
 14699  00423E  9CCD               	line	25
 14700                           	
 14701                           l5500:
 14702  004240                     ;timer1.c: 25:     PIE1bits.TMR1IE = 1;
 14703                           	bsf	((c:3997)),c,0	;volatile
 14704  004240  809D               	line	26
 14705                           	
 14706                           l5502:
 14707  004242                     ;timer1.c: 26:     INTCONbits.PEIE = 1;
 14708                           	bsf	((c:4082)),c,6	;volatile
 14709  004242  8CF2               	line	27
 14710                           	
 14711                           l5504:
 14712  004244                     ;timer1.c: 27:     INTCONbits.GIE = 1;
 14713                           	bsf	((c:4082)),c,7	;volatile
 14714  004244  8EF2               	line	29
 14715                           	
 14716                           l1066:
 14717  004246                     	return	;funcret
 14718  004246  0012               	opt stack 0
 14719                           GLOBAL	__end_of_timer1_init
 14720                           	__end_of_timer1_init:
 14721  004248                     	signat	_timer1_init,89
 14722                           	global	_teclado_init
 14723                           
 14724 ;; *************** function _teclado_init *****************
 14725 ;; Defined at:
 14726 ;;		line 29 in file "teclado.c"
 14727 ;; Parameters:    Size  Location     Type
 14728 ;;		None
 14729 ;; Auto vars:     Size  Location     Type
 14730 ;;		None
 14731 ;; Return value:  Size  Location     Type
 14732 ;;                  1    wreg      void 
 14733 ;; Registers used:
 14734 ;;		wreg, status,2
 14735 ;; Tracked objects:
 14736 ;;		On entry : 0/0
 14737 ;;		On exit  : 0/0
 14738 ;;		Unchanged: 0/0
 14739 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14740 ;;      Params:         0       0       0       0       0       0       0       0       0       0
 14741 ;;      Locals:         0       0       0       0       0       0       0       0       0       0
 14742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0
 14743 ;;      Totals:         0       0       0       0       0       0       0       0       0       0
 14744 ;;Total ram usage:        0 bytes
 14745 ;; Hardware stack levels used:    1
 14746 ;; Hardware stack levels required when called:    2
 14747 ;; This function calls:
 14748 ;;		Nothing
 14749 ;; This function is called by:
 14750 ;;		_main
 14751 ;; This function uses a non-reentrant model
 14752 ;;
 14753                           psect	text4,class=CODE,space=0,reloc=2,group=0
 14754                           	file	"teclado.c"
 14755                           	line	29
 14756                           global __ptext4
 14757                           __ptext4:
 14758  00436E                     psect	text4
 14759                           	file	"teclado.c"
 14760                           	line	29
 14761                           	global	__size_of_teclado_init
 14762                           	__size_of_teclado_init	equ	__end_of_teclado_init-_teclado_init
 14763  0000                     	
 14764                           _teclado_init:
 14765  00436E                     ;incstack = 0
 14766                           	opt	stack 28
 14767                           	line	31
 14768                           	
 14769                           l5490:
 14770  00436E                     ;teclado.c: 31:     PORTD = 0x00;
 14771                           	movlw	low(0)
 14772  00436E  0E00               	movwf	((c:3971)),c	;volatile
 14773  004370  6E83               	line	32
 14774                           ;teclado.c: 32:     TRISD = 0xF0;
 14775                           	movlw	low(0F0h)
 14776  004372  0EF0               	movwf	((c:3989)),c	;volatile
 14777  004374  6E95               	line	34
 14778                           	
 14779                           l1014:
 14780  004376                     	return	;funcret
 14781  004376  0012               	opt stack 0
 14782                           GLOBAL	__end_of_teclado_init
 14783                           	__end_of_teclado_init:
 14784  004378                     	signat	_teclado_init,89
 14785                           	global	_teclado_borda
 14786                           
 14787 ;; *************** function _teclado_borda *****************
 14788 ;; Defined at:
 14789 ;;		line 92 in file "teclado.c"
 14790 ;; Parameters:    Size  Location     Type
 14791 ;;		None
 14792 ;; Auto vars:     Size  Location     Type
 14793 ;;  tecla           1    6[COMRAM] unsigned char 
 14794 ;;  aux             1    5[COMRAM] unsigned char 
 14795 ;; Return value:  Size  Location     Type
 14796 ;;                  1    wreg      unsigned char 
 14797 ;; Registers used:
 14798 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14799 ;; Tracked objects:
 14800 ;;		On entry : 0/0
 14801 ;;		On exit  : 0/0
 14802 ;;		Unchanged: 0/0
 14803 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14804 ;;      Params:         0       0       0       0       0       0       0       0       0       0
 14805 ;;      Locals:         2       0       0       0       0       0       0       0       0       0
 14806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0
 14807 ;;      Totals:         2       0       0       0       0       0       0       0       0       0
 14808 ;;Total ram usage:        2 bytes
 14809 ;; Hardware stack levels used:    1
 14810 ;; Hardware stack levels required when called:    3
 14811 ;; This function calls:
 14812 ;;		_teclado_scan
 14813 ;; This function is called by:
 14814 ;;		_main
 14815 ;; This function uses a non-reentrant model
 14816 ;;
 14817                           psect	text5,class=CODE,space=0,reloc=2,group=0
 14818                           	line	92
 14819                           global __ptext5
 14820                           __ptext5:
 14821  003E62                     psect	text5
 14822                           	file	"teclado.c"
 14823                           	line	92
 14824                           	global	__size_of_teclado_borda
 14825                           	__size_of_teclado_borda	equ	__end_of_teclado_borda-_teclado_borda
 14826  0000                     	
 14827                           _teclado_borda:
 14828  003E62                     ;incstack = 0
 14829                           	opt	stack 27
 14830                           	line	94
 14831                           	
 14832                           l5558:
 14833  003E62                     ;teclado.c: 94:     char tecla = 0;
 14834                           	movlw	low(0)
 14835  003E62  0E00               	movwf	((c:teclado_borda@tecla)),c
 14836  003E64  6E2D               	line	95
 14837                           ;teclado.c: 95:     char aux = 0;
 14838                           	movlw	low(0)
 14839  003E66  0E00               	movwf	((c:teclado_borda@aux)),c
 14840  003E68  6E2C               	line	97
 14841                           	
 14842                           l5560:
 14843  003E6A                     ;teclado.c: 97:     tecla = teclado_scan();
 14844                           	call	_teclado_scan	;wreg free
 14845  003E6A  ECA0  F018         	movwf	((c:teclado_borda@tecla)),c
 14846  003E6E  6E2D               	line	99
 14847                           	
 14848                           l5562:
 14849  003E70                     ;teclado.c: 99:     if(tecla && !teclaAnterior)
 14850                           	movf	((c:teclado_borda@tecla)),c,w
 14851  003E70  502D               	btfsc	status,2
 14852  003E72  B4D8               	goto	u3941
 14853  003E74  EF3E  F01F         	goto	u3940
 14854  003E78  EF40  F01F         u3941:
 14855  003E7C                     	goto	l1029
 14856  003E7C  EF4A  F01F         u3940:
 14857  003E80                     	
 14858                           l5564:
 14859  003E80                     	movf	((c:_teclaAnterior)),c,w
 14860  003E80  5011               	btfss	status,2
 14861  003E82  A4D8               	goto	u3951
 14862  003E84  EF46  F01F         	goto	u3950
 14863  003E88  EF48  F01F         u3951:
 14864  003E8C                     	goto	l1029
 14865  003E8C  EF4A  F01F         u3950:
 14866  003E90                     	line	100
 14867                           	
 14868                           l5566:
 14869  003E90                     ;teclado.c: 100:         aux = tecla;
 14870                           	movff	(c:teclado_borda@tecla),(c:teclado_borda@aux)
 14871  003E90  C02D  F02C         	
 14872                           l1029:
 14873  003E94                     	line	102
 14874                           ;teclado.c: 102:     teclaAnterior = tecla;
 14875                           	movff	(c:teclado_borda@tecla),(c:_teclaAnterior)
 14876  003E94  C02D  F011         	line	104
 14877                           	
 14878                           l5568:
 14879  003E98                     ;teclado.c: 104:     return(aux);
 14880                           	movf	((c:teclado_borda@aux)),c,w
 14881  003E98  502C               	goto	l1030
 14882  003E9A  EF4F  F01F         	
 14883                           l5570:
 14884  003E9E                     	line	105
 14885                           	
 14886                           l1030:
 14887  003E9E                     	return	;funcret
 14888  003E9E  0012               	opt stack 0
 14889                           GLOBAL	__end_of_teclado_borda
 14890                           	__end_of_teclado_borda:
 14891  003EA0                     	signat	_teclado_borda,89
 14892                           	global	_teclado_scan
 14893                           
 14894 ;; *************** function _teclado_scan *****************
 14895 ;; Defined at:
 14896 ;;		line 55 in file "teclado.c"
 14897 ;; Parameters:    Size  Location     Type
 14898 ;;		None
 14899 ;; Auto vars:     Size  Location     Type
 14900 ;;  c               1    4[COMRAM] unsigned char 
 14901 ;;  l               1    3[COMRAM] unsigned char 
 14902 ;;  tecla           1    2[COMRAM] unsigned char 
 14903 ;; Return value:  Size  Location     Type
 14904 ;;                  1    wreg      unsigned char 
 14905 ;; Registers used:
 14906 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 14907 ;; Tracked objects:
 14908 ;;		On entry : 0/0
 14909 ;;		On exit  : 0/0
 14910 ;;		Unchanged: 0/0
 14911 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14912 ;;      Params:         0       0       0       0       0       0       0       0       0       0
 14913 ;;      Locals:         3       0       0       0       0       0       0       0       0       0
 14914 ;;      Temps:          2       0       0       0       0       0       0       0       0       0
 14915 ;;      Totals:         5       0       0       0       0       0       0       0       0       0
 14916 ;;Total ram usage:        5 bytes
 14917 ;; Hardware stack levels used:    1
 14918 ;; Hardware stack levels required when called:    2
 14919 ;; This function calls:
 14920 ;;		Nothing
 14921 ;; This function is called by:
 14922 ;;		_teclado_borda
 14923 ;; This function uses a non-reentrant model
 14924 ;;
 14925                           psect	text6,class=CODE,space=0,reloc=2,group=0
 14926                           	line	55
 14927                           global __ptext6
 14928                           __ptext6:
 14929  003140                     psect	text6
 14930                           	file	"teclado.c"
 14931                           	line	55
 14932                           	global	__size_of_teclado_scan
 14933                           	__size_of_teclado_scan	equ	__end_of_teclado_scan-_teclado_scan
 14934  0000                     	
 14935                           _teclado_scan:
 14936  003140                     ;incstack = 0
 14937                           	opt	stack 27
 14938                           	line	57
 14939                           	
 14940                           l5398:
 14941  003140                     ;teclado.c: 57:    char tecla = 0;
 14942                           	movlw	low(0)
 14943  003140  0E00               	movwf	((c:teclado_scan@tecla)),c
 14944  003142  6E29               	line	73
 14945                           ;teclado.c: 71:     unsigned char l,c;;teclado.c: 73:     for( l=0; l<4; l++ )
 14946                           	movlw	low(0)
 14947  003144  0E00               	movwf	((c:teclado_scan@l)),c
 14948  003146  6E2A               	
 14949                           l5400:
 14950  003148                     		movlw	04h-1
 14951  003148  0E03               	cpfsgt	((c:teclado_scan@l)),c
 14952  00314A  642A               	goto	u3801
 14953  00314C  EFAA  F018         	goto	u3800
 14954  003150  EFAC  F018         
 14955                           u3801:
 14956  003154                     	goto	l5404
 14957  003154  EFB0  F018         u3800:
 14958  003158                     	goto	l5424
 14959  003158  EF0E  F019         	
 14960                           l5402:
 14961  00315C                     	goto	l5424
 14962  00315C  EF0E  F019         	
 14963                           l1019:
 14964  003160                     	line	75
 14965                           	
 14966                           l5404:
 14967  003160                     ;teclado.c: 74:     {;teclado.c: 75:         PORTD = (0x01 << l);
 14968                           	movff	(c:teclado_scan@l),??_teclado_scan+0+0
 14969  003160  C02A  F027         	movlw	(01h)&0ffh
 14970  003164  0E01               	movwf	(??_teclado_scan+1+0)&0ffh,c
 14971  003166  6E28               	incf	(??_teclado_scan+0+0),c
 14972  003168  2A27               	goto	u3814
 14973  00316A  EFB9  F018         u3815:
 14974  00316E                     	bcf	status,0
 14975  00316E  90D8               	rlcf	((??_teclado_scan+1+0)),c
 14976  003170  3628               u3814:
 14977  003172                     	decfsz	(??_teclado_scan+0+0),c
 14978  003172  2E27               	goto	u3815
 14979  003174  EFB7  F018         	movf	((??_teclado_scan+1+0)),c,w
 14980  003178  5028               	movwf	((c:3971)),c	;volatile
 14981  00317A  6E83               	line	77
 14982                           	
 14983                           l5406:
 14984  00317C                     ;teclado.c: 77:         for( c=0; c<4; c++ )
 14985                           	movlw	low(0)
 14986  00317C  0E00               	movwf	((c:teclado_scan@c)),c
 14987  00317E  6E2B               	
 14988                           l5408:
 14989  003180                     		movlw	04h-1
 14990  003180  0E03               	cpfsgt	((c:teclado_scan@c)),c
 14991  003182  642B               	goto	u3821
 14992  003184  EFC6  F018         	goto	u3820
 14993  003188  EFC8  F018         
 14994                           u3821:
 14995  00318C                     	goto	l5412
 14996  00318C  EFCC  F018         u3820:
 14997  003190                     	goto	l5420
 14998  003190  EF03  F019         	
 14999                           l5410:
 15000  003194                     	goto	l5420
 15001  003194  EF03  F019         	
 15002                           l1021:
 15003  003198                     	line	80
 15004                           	
 15005                           l5412:
 15006  003198                     ;teclado.c: 78:         {;teclado.c: 80:             if( PORTD & (0x10<<c) )
 15007                           	movff	(c:teclado_scan@c),??_teclado_scan+0+0
 15008  003198  C02B  F027         	movlw	(010h)&0ffh
 15009  00319C  0E10               	movwf	(??_teclado_scan+1+0)&0ffh,c
 15010  00319E  6E28               	incf	(??_teclado_scan+0+0),c
 15011  0031A0  2A27               	goto	u3834
 15012  0031A2  EFD5  F018         u3835:
 15013  0031A6                     	bcf	status,0
 15014  0031A6  90D8               	rlcf	((??_teclado_scan+1+0)),c
 15015  0031A8  3628               u3834:
 15016  0031AA                     	decfsz	(??_teclado_scan+0+0),c
 15017  0031AA  2E27               	goto	u3835
 15018  0031AC  EFD3  F018         	movf	((??_teclado_scan+1+0)),c,w
 15019  0031B0  5028               	andwf	((c:3971)),c,w	;volatile
 15020  0031B2  1483               	iorlw	0
 15021  0031B4  0900               	btfsc	status,2
 15022  0031B6  B4D8               	goto	u3841
 15023  0031B8  EFE0  F018         	goto	u3840
 15024  0031BC  EFE2  F018         u3841:
 15025  0031C0                     	goto	l5416
 15026  0031C0  EFF8  F018         u3840:
 15027  0031C4                     	line	82
 15028                           	
 15029                           l5414:
 15030  0031C4                     ;teclado.c: 81:             {;teclado.c: 82:                 tecla = teclas[l][c];
 15031                           	movf	((c:teclado_scan@l)),c,w
 15032  0031C4  502A               	mullw	04h
 15033  0031C6  0D04               	movlw	low((_teclas))
 15034  0031C8  0EE1               	movwf	(??_teclado_scan+0+0)&0ffh,c
 15035  0031CA  6E27               	movlw	high((_teclas))
 15036  0031CC  0E00               	movwf	1+(??_teclado_scan+0+0)&0ffh,c
 15037  0031CE  6E28               	movf	(prodl),c,w
 15038  0031D0  50F3               	addwf	(??_teclado_scan+0+0),c
 15039  0031D2  2627               	movf	(prodh),c,w
 15040  0031D4  50F4               	addwfc	(??_teclado_scan+0+1),c
 15041  0031D6  2228               	movf	((c:teclado_scan@c)),c,w
 15042  0031D8  502B               	mullw	01h
 15043  0031DA  0D01               	movf	(prodl),c,w
 15044  0031DC  50F3               	addwf	(??_teclado_scan+0+0),c,w
 15045  0031DE  2427               	movwf	c:fsr2l
 15046  0031E0  6ED9               	movf	(prodh),c,w
 15047  0031E2  50F4               	addwfc	(??_teclado_scan+0+1),c,w
 15048  0031E4  2028               	movwf	1+c:fsr2l
 15049  0031E6  6EDA               	movf	indf2,w
 15050  0031E8  50DF               	movwf	((c:teclado_scan@tecla)),c
 15051  0031EA  6E29               	goto	l5416
 15052  0031EC  EFF8  F018         	line	84
 15053                           ;teclado.c: 84:             }
 15054                           	
 15055                           l1023:
 15056  0031F0                     	line	85
 15057                           	
 15058                           l5416:
 15059  0031F0                     ;teclado.c: 85:         }
 15060                           	incf	((c:teclado_scan@c)),c
 15061  0031F0  2A2B               	
 15062                           l5418:
 15063  0031F2                     		movlw	04h-1
 15064  0031F2  0E03               	cpfsgt	((c:teclado_scan@c)),c
 15065  0031F4  642B               	goto	u3851
 15066  0031F6  EFFF  F018         	goto	u3850
 15067  0031FA  EF01  F019         
 15068                           u3851:
 15069  0031FE                     	goto	l5412
 15070  0031FE  EFCC  F018         u3850:
 15071  003202                     	goto	l5420
 15072  003202  EF03  F019         	
 15073                           l1022:
 15074  003206                     	line	86
 15075                           	
 15076                           l5420:
 15077  003206                     ;teclado.c: 86:     }
 15078                           	incf	((c:teclado_scan@l)),c
 15079  003206  2A2A               	
 15080                           l5422:
 15081  003208                     		movlw	04h-1
 15082  003208  0E03               	cpfsgt	((c:teclado_scan@l)),c
 15083  00320A  642A               	goto	u3861
 15084  00320C  EF0A  F019         	goto	u3860
 15085  003210  EF0C  F019         
 15086                           u3861:
 15087  003214                     	goto	l5404
 15088  003214  EFB0  F018         u3860:
 15089  003218                     	goto	l5424
 15090  003218  EF0E  F019         	
 15091                           l1020:
 15092  00321C                     	line	87
 15093                           	
 15094                           l5424:
 15095  00321C                     ;teclado.c: 87:     return( tecla );
 15096                           	movf	((c:teclado_scan@tecla)),c,w
 15097  00321C  5029               	goto	l1024
 15098  00321E  EF11  F019         	
 15099                           l5426:
 15100  003222                     	line	89
 15101                           	
 15102                           l1024:
 15103  003222                     	return	;funcret
 15104  003222  0012               	opt stack 0
 15105                           GLOBAL	__end_of_teclado_scan
 15106                           	__end_of_teclado_scan:
 15107  003224                     	signat	_teclado_scan,89
 15108                           	global	_statusT1
 15109                           
 15110 ;; *************** function _statusT1 *****************
 15111 ;; Defined at:
 15112 ;;		line 38 in file "timer1.c"
 15113 ;; Parameters:    Size  Location     Type
 15114 ;;		None
 15115 ;; Auto vars:     Size  Location     Type
 15116 ;;		None
 15117 ;; Return value:  Size  Location     Type
 15118 ;;                  4    0[COMRAM] unsigned long 
 15119 ;; Registers used:
 15120 ;;		None
 15121 ;; Tracked objects:
 15122 ;;		On entry : 0/0
 15123 ;;		On exit  : 0/0
 15124 ;;		Unchanged: 0/0
 15125 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15126 ;;      Params:         4       0       0       0       0       0       0       0       0       0
 15127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0
 15128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0
 15129 ;;      Totals:         4       0       0       0       0       0       0       0       0       0
 15130 ;;Total ram usage:        4 bytes
 15131 ;; Hardware stack levels used:    1
 15132 ;; Hardware stack levels required when called:    2
 15133 ;; This function calls:
 15134 ;;		Nothing
 15135 ;; This function is called by:
 15136 ;;		_main
 15137 ;; This function uses a non-reentrant model
 15138 ;;
 15139                           psect	text7,class=CODE,space=0,reloc=2,group=0
 15140                           	file	"timer1.c"
 15141                           	line	38
 15142                           global __ptext7
 15143                           __ptext7:
 15144  00433C                     psect	text7
 15145                           	file	"timer1.c"
 15146                           	line	38
 15147                           	global	__size_of_statusT1
 15148                           	__size_of_statusT1	equ	__end_of_statusT1-_statusT1
 15149  0000                     	
 15150                           _statusT1:
 15151  00433C                     ;incstack = 0
 15152                           	opt	stack 28
 15153                           	line	40
 15154                           	
 15155                           l5554:
 15156  00433C                     ;timer1.c: 40:     return( t1cont );
 15157                           	movff	(c:_t1cont),(c:?_statusT1)
 15158  00433C  C001  F027         	movff	(c:_t1cont+1),(c:?_statusT1+1)
 15159  004340  C002  F028         	movff	(c:_t1cont+2),(c:?_statusT1+2)
 15160  004344  C003  F029         	movff	(c:_t1cont+3),(c:?_statusT1+3)
 15161  004348  C004  F02A         	line	41
 15162                           	
 15163                           l1072:
 15164  00434C                     	return	;funcret
 15165  00434C  0012               	opt stack 0
 15166                           GLOBAL	__end_of_statusT1
 15167                           	__end_of_statusT1:
 15168  00434E                     	signat	_statusT1,92
 15169                           	global	_set_passo
 15170                           
 15171 ;; *************** function _set_passo *****************
 15172 ;; Defined at:
 15173 ;;		line 53 in file "atuadores.c"
 15174 ;; Parameters:    Size  Location     Type
 15175 ;;  passo           1    wreg     unsigned char 
 15176 ;;  ptr             2    0[COMRAM] PTR unsigned char 
 15177 ;;		 -> main@vetorOut(1), 
 15178 ;; Auto vars:     Size  Location     Type
 15179 ;;  passo           1    4[COMRAM] unsigned char 
 15180 ;; Return value:  Size  Location     Type
 15181 ;;                  1    wreg      void 
 15182 ;; Registers used:
 15183 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15184 ;; Tracked objects:
 15185 ;;		On entry : 0/0
 15186 ;;		On exit  : 0/0
 15187 ;;		Unchanged: 0/0
 15188 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15189 ;;      Params:         2       0       0       0       0       0       0       0       0       0
 15190 ;;      Locals:         1       0       0       0       0       0       0       0       0       0
 15191 ;;      Temps:          2       0       0       0       0       0       0       0       0       0
 15192 ;;      Totals:         5       0       0       0       0       0       0       0       0       0
 15193 ;;Total ram usage:        5 bytes
 15194 ;; Hardware stack levels used:    1
 15195 ;; Hardware stack levels required when called:    2
 15196 ;; This function calls:
 15197 ;;		Nothing
 15198 ;; This function is called by:
 15199 ;;		_main
 15200 ;; This function uses a non-reentrant model
 15201 ;;
 15202                           psect	text8,class=CODE,space=0,reloc=2,group=0
 15203                           	file	"atuadores.c"
 15204                           	line	53
 15205                           global __ptext8
 15206                           __ptext8:
 15207  00305A                     psect	text8
 15208                           	file	"atuadores.c"
 15209                           	line	53
 15210                           	global	__size_of_set_passo
 15211                           	__size_of_set_passo	equ	__end_of_set_passo-_set_passo
 15212  0000                     	
 15213                           _set_passo:
 15214  00305A                     ;incstack = 0
 15215                           	opt	stack 28
 15216                           ;set_passo@passo stored from wreg
 15217                           	movwf	((c:set_passo@passo)),c
 15218  00305A  6E2B               	line	55
 15219                           	
 15220                           l5930:
 15221  00305C                     ;atuadores.c: 53: void set_passo(char passo, char* ptr);atuadores.c: 54: {;atuadores.c: 
                                 55:     switch (passo)
 15222                           	goto	l5950
 15223  00305C  EF72  F018         	line	57
 15224                           ;atuadores.c: 56:     {;atuadores.c: 57:         case 'A': *ptr |= 0x01; break;
 15225                           	
 15226                           l450:
 15227  003060                     	
 15228                           l5932:
 15229  003060                     	movff	(c:set_passo@ptr),fsr2l
 15230  003060  C027  FFD9         	movff	(c:set_passo@ptr+1),fsr2h
 15231  003064  C028  FFDA         	movlw	0+(0/8)
 15232  003068  0E00               	bsf	plusw2,(0)&7
 15233  00306A  80DB               	goto	l459
 15234  00306C  EF9F  F018         	line	58
 15235                           ;atuadores.c: 58:         case 'a': *ptr &= ~0x01; break;
 15236                           	
 15237                           l452:
 15238  003070                     	
 15239                           l5934:
 15240  003070                     	movff	(c:set_passo@ptr),fsr2l
 15241  003070  C027  FFD9         	movff	(c:set_passo@ptr+1),fsr2h
 15242  003074  C028  FFDA         	movlw	0FEh
 15243  003078  0EFE               	andwf	indf2
 15244  00307A  16DF               	goto	l459
 15245  00307C  EF9F  F018         	line	59
 15246                           ;atuadores.c: 59:         case 'B': *ptr |= 0x02; break;
 15247                           	
 15248                           l453:
 15249  003080                     	
 15250                           l5936:
 15251  003080                     	movff	(c:set_passo@ptr),fsr2l
 15252  003080  C027  FFD9         	movff	(c:set_passo@ptr+1),fsr2h
 15253  003084  C028  FFDA         	movlw	0+(1/8)
 15254  003088  0E00               	bsf	plusw2,(1)&7
 15255  00308A  82DB               	goto	l459
 15256  00308C  EF9F  F018         	line	60
 15257                           ;atuadores.c: 60:         case 'b': *ptr &= ~0x02; break;
 15258                           	
 15259                           l454:
 15260  003090                     	
 15261                           l5938:
 15262  003090                     	movff	(c:set_passo@ptr),fsr2l
 15263  003090  C027  FFD9         	movff	(c:set_passo@ptr+1),fsr2h
 15264  003094  C028  FFDA         	movlw	0FDh
 15265  003098  0EFD               	andwf	indf2
 15266  00309A  16DF               	goto	l459
 15267  00309C  EF9F  F018         	line	61
 15268                           ;atuadores.c: 61:         case 'C': *ptr |= 0x04; break;
 15269                           	
 15270                           l455:
 15271  0030A0                     	
 15272                           l5940:
 15273  0030A0                     	movff	(c:set_passo@ptr),fsr2l
 15274  0030A0  C027  FFD9         	movff	(c:set_passo@ptr+1),fsr2h
 15275  0030A4  C028  FFDA         	movlw	0+(2/8)
 15276  0030A8  0E00               	bsf	plusw2,(2)&7
 15277  0030AA  84DB               	goto	l459
 15278  0030AC  EF9F  F018         	line	62
 15279                           ;atuadores.c: 62:         case 'c': *ptr &= ~0x04; break;
 15280                           	
 15281                           l456:
 15282  0030B0                     	
 15283                           l5942:
 15284  0030B0                     	movff	(c:set_passo@ptr),fsr2l
 15285  0030B0  C027  FFD9         	movff	(c:set_passo@ptr+1),fsr2h
 15286  0030B4  C028  FFDA         	movlw	0FBh
 15287  0030B8  0EFB               	andwf	indf2
 15288  0030BA  16DF               	goto	l459
 15289  0030BC  EF9F  F018         	line	63
 15290                           ;atuadores.c: 63:         case 'D': *ptr |= 0x08; break;
 15291                           	
 15292                           l457:
 15293  0030C0                     	
 15294                           l5944:
 15295  0030C0                     	movff	(c:set_passo@ptr),fsr2l
 15296  0030C0  C027  FFD9         	movff	(c:set_passo@ptr+1),fsr2h
 15297  0030C4  C028  FFDA         	movlw	0+(3/8)
 15298  0030C8  0E00               	bsf	plusw2,(3)&7
 15299  0030CA  86DB               	goto	l459
 15300  0030CC  EF9F  F018         	line	64
 15301                           ;atuadores.c: 64:         case 'd': *ptr &= ~0x08; break;
 15302                           	
 15303                           l458:
 15304  0030D0                     	
 15305                           l5946:
 15306  0030D0                     	movff	(c:set_passo@ptr),fsr2l
 15307  0030D0  C027  FFD9         	movff	(c:set_passo@ptr+1),fsr2h
 15308  0030D4  C028  FFDA         	movlw	0F7h
 15309  0030D8  0EF7               	andwf	indf2
 15310  0030DA  16DF               	goto	l459
 15311  0030DC  EF9F  F018         	line	65
 15312                           	
 15313                           l5948:
 15314  0030E0                     ;atuadores.c: 65:     }
 15315                           	goto	l459
 15316  0030E0  EF9F  F018         	
 15317                           l449:
 15318  0030E4                     	
 15319                           l5950:
 15320  0030E4                     	movf	((c:set_passo@passo)),c,w
 15321  0030E4  502B               	movwf	(??_set_passo+0+0)&0ffh,c
 15322  0030E6  6E29               	clrf	(??_set_passo+0+0+1)&0ffh,c
 15323  0030E8  6A2A               
 15324                           	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
 15325                           ; Switch size 1, requested type "space"
 15326                           ; Number of cases is 1, Range of values is 0 to 0
 15327                           ; switch strategies available:
 15328                           ; Name         Instructions Cycles
 15329                           ; simple_byte            4     3 (average)
 15330                           ;	Chosen strategy is simple_byte
 15331                           
 15332                           	movf ??_set_passo+0+1,c,w
 15333  0030EA  502A               	xorlw	0^0	; case 0
 15334  0030EC  0A00               	skipnz
 15335  0030EE  B4D8               	goto	l7844
 15336  0030F0  EF7C  F018         	goto	l459
 15337  0030F4  EF9F  F018         	
 15338                           l7844:
 15339  0030F8                     ; Switch size 1, requested type "space"
 15340                           ; Number of cases is 8, Range of values is 65 to 100
 15341                           ; switch strategies available:
 15342                           ; Name         Instructions Cycles
 15343                           ; simple_byte           25    13 (average)
 15344                           ;	Chosen strategy is simple_byte
 15345                           
 15346                           	movf ??_set_passo+0+0,c,w
 15347  0030F8  5029               	xorlw	65^0	; case 65
 15348  0030FA  0A41               	skipnz
 15349  0030FC  B4D8               	goto	l5932
 15350  0030FE  EF30  F018         	xorlw	66^65	; case 66
 15351  003102  0A03               	skipnz
 15352  003104  B4D8               	goto	l5936
 15353  003106  EF40  F018         	xorlw	67^66	; case 67
 15354  00310A  0A01               	skipnz
 15355  00310C  B4D8               	goto	l5940
 15356  00310E  EF50  F018         	xorlw	68^67	; case 68
 15357  003112  0A07               	skipnz
 15358  003114  B4D8               	goto	l5944
 15359  003116  EF60  F018         	xorlw	97^68	; case 97
 15360  00311A  0A25               	skipnz
 15361  00311C  B4D8               	goto	l5934
 15362  00311E  EF38  F018         	xorlw	98^97	; case 98
 15363  003122  0A03               	skipnz
 15364  003124  B4D8               	goto	l5938
 15365  003126  EF48  F018         	xorlw	99^98	; case 99
 15366  00312A  0A01               	skipnz
 15367  00312C  B4D8               	goto	l5942
 15368  00312E  EF58  F018         	xorlw	100^99	; case 100
 15369  003132  0A07               	skipnz
 15370  003134  B4D8               	goto	l5946
 15371  003136  EF68  F018         	goto	l459
 15372  00313A  EF9F  F018         
 15373                           	
 15374                           l451:
 15375  00313E                     	line	66
 15376                           	
 15377                           l459:
 15378  00313E                     	return	;funcret
 15379  00313E  0012               	opt stack 0
 15380                           GLOBAL	__end_of_set_passo
 15381                           	__end_of_set_passo:
 15382  003140                     	signat	_set_passo,8313
 15383                           	global	_setT1
 15384                           
 15385 ;; *************** function _setT1 *****************
 15386 ;; Defined at:
 15387 ;;		line 31 in file "timer1.c"
 15388 ;; Parameters:    Size  Location     Type
 15389 ;;  c               4    6[COMRAM] unsigned long 
 15390 ;; Auto vars:     Size  Location     Type
 15391 ;;		None
 15392 ;; Return value:  Size  Location     Type
 15393 ;;                  1    wreg      void 
 15394 ;; Registers used:
 15395 ;;		None
 15396 ;; Tracked objects:
 15397 ;;		On entry : 0/0
 15398 ;;		On exit  : 0/0
 15399 ;;		Unchanged: 0/0
 15400 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15401 ;;      Params:         4       0       0       0       0       0       0       0       0       0
 15402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0
 15403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0
 15404 ;;      Totals:         4       0       0       0       0       0       0       0       0       0
 15405 ;;Total ram usage:        4 bytes
 15406 ;; Hardware stack levels used:    1
 15407 ;; Hardware stack levels required when called:    2
 15408 ;; This function calls:
 15409 ;;		Nothing
 15410 ;; This function is called by:
 15411 ;;		_main
 15412 ;; This function uses a non-reentrant model
 15413 ;;
 15414                           psect	text9,class=CODE,space=0,reloc=2,group=0
 15415                           	file	"timer1.c"
 15416                           	line	31
 15417                           global __ptext9
 15418                           __ptext9:
 15419  004328                     psect	text9
 15420                           	file	"timer1.c"
 15421                           	line	31
 15422                           	global	__size_of_setT1
 15423                           	__size_of_setT1	equ	__end_of_setT1-_setT1
 15424  0000                     	
 15425                           _setT1:
 15426  004328                     ;incstack = 0
 15427                           	opt	stack 28
 15428                           	line	33
 15429                           	
 15430                           l5552:
 15431  004328                     ;timer1.c: 31: void setT1( unsigned long int c );timer1.c: 32: {;timer1.c: 33:     t1con
                                 t = c;
 15432                           	movff	(c:setT1@c),(c:_t1cont)
 15433  004328  C02D  F001         	movff	(c:setT1@c+1),(c:_t1cont+1)
 15434  00432C  C02E  F002         	movff	(c:setT1@c+2),(c:_t1cont+2)
 15435  004330  C02F  F003         	movff	(c:setT1@c+3),(c:_t1cont+3)
 15436  004334  C030  F004         	line	34
 15437                           ;timer1.c: 34:     T1CONbits.TMR1ON = 1;
 15438                           	bsf	((c:4045)),c,0	;volatile
 15439  004338  80CD               	line	35
 15440                           	
 15441                           l1069:
 15442  00433A                     	return	;funcret
 15443  00433A  0012               	opt stack 0
 15444                           GLOBAL	__end_of_setT1
 15445                           	__end_of_setT1:
 15446  00433C                     	signat	_setT1,4217
 15447                           	global	_serialIOscan
 15448                           
 15449 ;; *************** function _serialIOscan *****************
 15450 ;; Defined at:
 15451 ;;		line 76 in file "serialIO.c"
 15452 ;; Parameters:    Size  Location     Type
 15453 ;;		None
 15454 ;; Auto vars:     Size  Location     Type
 15455 ;;  i               1    8[COMRAM] unsigned char 
 15456 ;;  j               1    7[COMRAM] unsigned char 
 15457 ;; Return value:  Size  Location     Type
 15458 ;;                  1    wreg      void 
 15459 ;; Registers used:
 15460 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15461 ;; Tracked objects:
 15462 ;;		On entry : 0/0
 15463 ;;		On exit  : 0/0
 15464 ;;		Unchanged: 0/0
 15465 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15466 ;;      Params:         0       0       0       0       0       0       0       0       0       0
 15467 ;;      Locals:         2       0       0       0       0       0       0       0       0       0
 15468 ;;      Temps:          4       0       0       0       0       0       0       0       0       0
 15469 ;;      Totals:         6       0       0       0       0       0       0       0       0       0
 15470 ;;Total ram usage:        6 bytes
 15471 ;; Hardware stack levels used:    1
 15472 ;; Hardware stack levels required when called:    3
 15473 ;; This function calls:
 15474 ;;		_serialIObyteShift
 15475 ;;		_serialIOload
 15476 ;; This function is called by:
 15477 ;;		_main
 15478 ;; This function uses a non-reentrant model
 15479 ;;
 15480                           psect	text10,class=CODE,space=0,reloc=2,group=0
 15481                           	file	"serialIO.c"
 15482                           	line	76
 15483                           global __ptext10
 15484                           __ptext10:
 15485  00375C                     psect	text10
 15486                           	file	"serialIO.c"
 15487                           	line	76
 15488                           	global	__size_of_serialIOscan
 15489                           	__size_of_serialIOscan	equ	__end_of_serialIOscan-_serialIOscan
 15490  0000                     	
 15491                           _serialIOscan:
 15492  00375C                     ;incstack = 0
 15493                           	opt	stack 27
 15494                           	line	79
 15495                           	
 15496                           l5912:
 15497  00375C                     ;serialIO.c: 78:     unsigned char i,j;;serialIO.c: 79:     j = lenSerialIO - 1;
 15498                           	decf	((c:_lenSerialIO)),c,w
 15499  00375C  0412               	movwf	((c:serialIOscan@j)),c
 15500  00375E  6E2E               	line	80
 15501                           	
 15502                           l5914:
 15503  003760                     ;serialIO.c: 80:     serialIOload();
 15504                           	call	_serialIOload	;wreg free
 15505  003760  ECE0  F021         	line	81
 15506                           	
 15507                           l5916:
 15508  003764                     ;serialIO.c: 81:     for( i=0; i<lenSerialIO; i++ )
 15509                           	movlw	low(0)
 15510  003764  0E00               	movwf	((c:serialIOscan@i)),c
 15511  003766  6E2F               	goto	l5922
 15512  003768  EFD9  F01B         	
 15513                           l935:
 15514  00376C                     	line	83
 15515                           	
 15516                           l5918:
 15517  00376C                     ;serialIO.c: 82:     {;serialIO.c: 83:         ptrSerialIn[i] = serialIObyteShift( ptrSe
                                 rialOut[j-i]);
 15518                           	movf	((c:serialIOscan@i)),c,w
 15519  00376C  502F               	mullw	01h
 15520  00376E  0D01               	movf	(prodl),c,w
 15521  003770  50F3               	addwf	((c:_ptrSerialIn)),c,w
 15522  003772  240B               	movwf	c:fsr2l
 15523  003774  6ED9               	movf	(prodh),c,w
 15524  003776  50F4               	addwfc	((c:_ptrSerialIn+1)),c,w
 15525  003778  200C               	movwf	1+c:fsr2l
 15526  00377A  6EDA               	movf	((c:serialIOscan@i)),c,w
 15527  00377C  502F               	movwf	(??_serialIOscan+0+0)&0ffh,c
 15528  00377E  6E2A               	clrf	(??_serialIOscan+0+0+1)&0ffh,c
 15529  003780  6A2B               
 15530                           	comf	(??_serialIOscan+0+0),c
 15531  003782  1E2A               	comf	(??_serialIOscan+0+1),c
 15532  003784  1E2B               	infsnz	(??_serialIOscan+0+0),c
 15533  003786  4A2A               	incf	(??_serialIOscan+0+1),c
 15534  003788  2A2B               	movf	((c:serialIOscan@j)),c,w
 15535  00378A  502E               	movwf	(??_serialIOscan+2+0)&0ffh,c
 15536  00378C  6E2C               	clrf	(??_serialIOscan+2+0+1)&0ffh,c
 15537  00378E  6A2D               
 15538                           	movf	(??_serialIOscan+0+0),c,w
 15539  003790  502A               	addwf	(??_serialIOscan+2+0),c
 15540  003792  262C               	movf	(??_serialIOscan+0+1),c,w
 15541  003794  502B               	addwfc	(??_serialIOscan+2+1),c
 15542  003796  222D               	movf	(??_serialIOscan+2+0),c,w
 15543  003798  502C               	addwf	((c:_ptrSerialOut)),c,w
 15544  00379A  2409               	movwf	c:fsr1l
 15545  00379C  6EE1               	movf	(??_serialIOscan+2+1),c,w
 15546  00379E  502D               	addwfc	((c:_ptrSerialOut+1)),c,w
 15547  0037A0  200A               	movwf	1+c:fsr1l
 15548  0037A2  6EE2               	movf	indf1,w
 15549  0037A4  50E7               	
 15550                           	call	_serialIObyteShift
 15551  0037A6  EC27  F01D         	movwf	indf2,c
 15552  0037AA  6EDF               
 15553                           	line	84
 15554                           	
 15555                           l5920:
 15556  0037AC                     ;serialIO.c: 84:     }
 15557                           	incf	((c:serialIOscan@i)),c
 15558  0037AC  2A2F               	goto	l5922
 15559  0037AE  EFD9  F01B         	
 15560                           l934:
 15561  0037B2                     	
 15562                           l5922:
 15563  0037B2                     		movf	((c:_lenSerialIO)),c,w
 15564  0037B2  5012               	subwf	((c:serialIOscan@i)),c,w
 15565  0037B4  5C2F               	btfss	status,0
 15566  0037B6  A0D8               	goto	u4411
 15567  0037B8  EFE0  F01B         	goto	u4410
 15568  0037BC  EFE2  F01B         
 15569                           u4411:
 15570  0037C0                     	goto	l5918
 15571  0037C0  EFB6  F01B         u4410:
 15572  0037C4                     	goto	l5924
 15573  0037C4  EFE4  F01B         	
 15574                           l936:
 15575  0037C8                     	line	85
 15576                           	
 15577                           l5924:
 15578  0037C8                     ;serialIO.c: 85:     serialIOload();
 15579                           	call	_serialIOload	;wreg free
 15580  0037C8  ECE0  F021         	line	86
 15581                           	
 15582                           l937:
 15583  0037CC                     	return	;funcret
 15584  0037CC  0012               	opt stack 0
 15585                           GLOBAL	__end_of_serialIOscan
 15586                           	__end_of_serialIOscan:
 15587  0037CE                     	signat	_serialIOscan,89
 15588                           	global	_serialIOload
 15589                           
 15590 ;; *************** function _serialIOload *****************
 15591 ;; Defined at:
 15592 ;;		line 45 in file "serialIO.c"
 15593 ;; Parameters:    Size  Location     Type
 15594 ;;		None
 15595 ;; Auto vars:     Size  Location     Type
 15596 ;;		None
 15597 ;; Return value:  Size  Location     Type
 15598 ;;                  1    wreg      void 
 15599 ;; Registers used:
 15600 ;;		None
 15601 ;; Tracked objects:
 15602 ;;		On entry : 0/0
 15603 ;;		On exit  : 0/0
 15604 ;;		Unchanged: 0/0
 15605 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15606 ;;      Params:         0       0       0       0       0       0       0       0       0       0
 15607 ;;      Locals:         0       0       0       0       0       0       0       0       0       0
 15608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0
 15609 ;;      Totals:         0       0       0       0       0       0       0       0       0       0
 15610 ;;Total ram usage:        0 bytes
 15611 ;; Hardware stack levels used:    1
 15612 ;; Hardware stack levels required when called:    2
 15613 ;; This function calls:
 15614 ;;		Nothing
 15615 ;; This function is called by:
 15616 ;;		_serialIOscan
 15617 ;; This function uses a non-reentrant model
 15618 ;;
 15619                           psect	text11,class=CODE,space=0,reloc=2,group=0
 15620                           	line	45
 15621                           global __ptext11
 15622                           __ptext11:
 15623  0043C0                     psect	text11
 15624                           	file	"serialIO.c"
 15625                           	line	45
 15626                           	global	__size_of_serialIOload
 15627                           	__size_of_serialIOload	equ	__end_of_serialIOload-_serialIOload
 15628  0000                     	
 15629                           _serialIOload:
 15630  0043C0                     ;incstack = 0
 15631                           	opt	stack 27
 15632                           	line	47
 15633                           	
 15634                           l5380:
 15635  0043C0                     ;serialIO.c: 47:     SERIALIO.SHLD = 0;
 15636                           	bcf	((c:3968)),c,3	;volatile
 15637  0043C0  9680               	line	48
 15638                           ;serialIO.c: 48:     SERIALIO.SHLD = 1;
 15639                           	bsf	((c:3968)),c,3	;volatile
 15640  0043C2  8680               	line	49
 15641                           	
 15642                           l922:
 15643  0043C4                     	return	;funcret
 15644  0043C4  0012               	opt stack 0
 15645                           GLOBAL	__end_of_serialIOload
 15646                           	__end_of_serialIOload:
 15647  0043C6                     	signat	_serialIOload,89
 15648                           	global	_serialIObyteShift
 15649                           
 15650 ;; *************** function _serialIObyteShift *****************
 15651 ;; Defined at:
 15652 ;;		line 50 in file "serialIO.c"
 15653 ;; Parameters:    Size  Location     Type
 15654 ;;  dataIn          1    wreg     unsigned char 
 15655 ;; Auto vars:     Size  Location     Type
 15656 ;;  dataIn          1    0[COMRAM] unsigned char 
 15657 ;;  dataBit         1    2[COMRAM] unsigned char 
 15658 ;;  dataOut         1    1[COMRAM] unsigned char 
 15659 ;; Return value:  Size  Location     Type
 15660 ;;                  1    wreg      unsigned char 
 15661 ;; Registers used:
 15662 ;;		wreg, status,2, status,0
 15663 ;; Tracked objects:
 15664 ;;		On entry : 0/0
 15665 ;;		On exit  : 0/0
 15666 ;;		Unchanged: 0/0
 15667 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15668 ;;      Params:         0       0       0       0       0       0       0       0       0       0
 15669 ;;      Locals:         3       0       0       0       0       0       0       0       0       0
 15670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0
 15671 ;;      Totals:         3       0       0       0       0       0       0       0       0       0
 15672 ;;Total ram usage:        3 bytes
 15673 ;; Hardware stack levels used:    1
 15674 ;; Hardware stack levels required when called:    2
 15675 ;; This function calls:
 15676 ;;		Nothing
 15677 ;; This function is called by:
 15678 ;;		_serialIOscan
 15679 ;; This function uses a non-reentrant model
 15680 ;;
 15681                           psect	text12,class=CODE,space=0,reloc=2,group=0
 15682                           	line	50
 15683                           global __ptext12
 15684                           __ptext12:
 15685  003A4E                     psect	text12
 15686                           	file	"serialIO.c"
 15687                           	line	50
 15688                           	global	__size_of_serialIObyteShift
 15689                           	__size_of_serialIObyteShift	equ	__end_of_serialIObyteShift-_serialIObyteShift
 15690  0000                     	
 15691                           _serialIObyteShift:
 15692  003A4E                     ;incstack = 0
 15693                           	opt	stack 27
 15694                           ;serialIObyteShift@dataIn stored from wreg
 15695                           	movwf	((c:serialIObyteShift@dataIn)),c
 15696  003A4E  6E27               	line	55
 15697                           	
 15698                           l5382:
 15699  003A50                     ;serialIO.c: 50: unsigned char serialIObyteShift( unsigned char dataIn );serialIO.c: 51:
                                  {;serialIO.c: 52:     unsigned char dataBit;;serialIO.c: 53:     unsigned char dataOut;
                                 ;serialIO.c: 55:     dataBit = 0x80;
 15700                           	movlw	low(080h)
 15701  003A50  0E80               	movwf	((c:serialIObyteShift@dataBit)),c
 15702  003A52  6E29               	line	56
 15703                           ;serialIO.c: 56:     dataOut = 0;
 15704                           	movlw	low(0)
 15705  003A54  0E00               	movwf	((c:serialIObyteShift@dataOut)),c
 15706  003A56  6E28               	line	58
 15707                           ;serialIO.c: 58:     while( dataBit )
 15708                           	goto	l5392
 15709  003A58  EF4D  F01D         	
 15710                           l926:
 15711  003A5C                     	line	60
 15712                           ;serialIO.c: 59:     {;serialIO.c: 60:         SERIALIO.CLK = 0;
 15713                           	bcf	((c:3968)),c,2	;volatile
 15714  003A5C  9480               	line	61
 15715                           	
 15716                           l5384:
 15717  003A5E                     ;serialIO.c: 61:         if( dataIn & dataBit )
 15718                           	movf	((c:serialIObyteShift@dataIn)),c,w
 15719  003A5E  5027               	andwf	((c:serialIObyteShift@dataBit)),c,w
 15720  003A60  1429               	iorlw	0
 15721  003A62  0900               	btfsc	status,2
 15722  003A64  B4D8               	goto	u3771
 15723  003A66  EF37  F01D         	goto	u3770
 15724  003A6A  EF39  F01D         u3771:
 15725  003A6E                     	goto	l927
 15726  003A6E  EF3C  F01D         u3770:
 15727  003A72                     	line	62
 15728                           	
 15729                           l5386:
 15730  003A72                     ;serialIO.c: 62:             SERIALIO.OUT = 1;
 15731                           	bsf	((c:3968)),c,0	;volatile
 15732  003A72  8080               	goto	l928
 15733  003A74  EF3D  F01D         	line	63
 15734                           ;serialIO.c: 63:         else
 15735                           	
 15736                           l927:
 15737  003A78                     	line	64
 15738                           ;serialIO.c: 64:             SERIALIO.OUT = 0;
 15739                           	bcf	((c:3968)),c,0	;volatile
 15740  003A78  9080               	
 15741                           l928:
 15742  003A7A                     	line	66
 15743                           ;serialIO.c: 66:         if( SERIALIO.IN )
 15744                           	btfss	((c:3968)),c,1	;volatile
 15745  003A7A  A280               	goto	u3781
 15746  003A7C  EF42  F01D         	goto	u3780
 15747  003A80  EF44  F01D         u3781:
 15748  003A84                     	goto	l5390
 15749  003A84  EF48  F01D         u3780:
 15750  003A88                     	line	67
 15751                           	
 15752                           l5388:
 15753  003A88                     ;serialIO.c: 67:             dataOut |= dataBit;
 15754                           	movf	((c:serialIObyteShift@dataBit)),c,w
 15755  003A88  5029               	iorwf	((c:serialIObyteShift@dataOut)),c
 15756  003A8A  1228               	goto	l5390
 15757  003A8C  EF48  F01D         	
 15758                           l929:
 15759  003A90                     	line	68
 15760                           	
 15761                           l5390:
 15762  003A90                     ;serialIO.c: 68:         SERIALIO.CLK = 1;
 15763                           	bsf	((c:3968)),c,2	;volatile
 15764  003A90  8480               	line	69
 15765                           ;serialIO.c: 69:         dataBit >>= 1;
 15766                           	bcf status,0
 15767  003A92  90D8               	rrcf	((c:serialIObyteShift@dataBit)),c
 15768  003A94  3229               
 15769                           	goto	l5392
 15770  003A96  EF4D  F01D         	line	70
 15771                           ;serialIO.c: 70:     }
 15772                           	
 15773                           l925:
 15774  003A9A                     	line	58
 15775                           	
 15776                           l5392:
 15777  003A9A                     ;serialIO.c: 58:     while( dataBit )
 15778                           	movf	((c:serialIObyteShift@dataBit)),c,w
 15779  003A9A  5029               	btfss	status,2
 15780  003A9C  A4D8               	goto	u3791
 15781  003A9E  EF53  F01D         	goto	u3790
 15782  003AA2  EF55  F01D         u3791:
 15783  003AA6                     	goto	l926
 15784  003AA6  EF2E  F01D         u3790:
 15785  003AAA                     	
 15786                           l930:
 15787  003AAA                     	line	71
 15788                           ;serialIO.c: 71:     SERIALIO.CLK = 0;
 15789                           	bcf	((c:3968)),c,2	;volatile
 15790  003AAA  9480               	line	72
 15791                           	
 15792                           l5394:
 15793  003AAC                     ;serialIO.c: 72:     return( dataOut );
 15794                           	movf	((c:serialIObyteShift@dataOut)),c,w
 15795  003AAC  5028               	goto	l931
 15796  003AAE  EF59  F01D         	
 15797                           l5396:
 15798  003AB2                     	line	73
 15799                           	
 15800                           l931:
 15801  003AB2                     	return	;funcret
 15802  003AB2  0012               	opt stack 0
 15803                           GLOBAL	__end_of_serialIObyteShift
 15804                           	__end_of_serialIObyteShift:
 15805  003AB4                     	signat	_serialIObyteShift,4217
 15806                           	global	_salvar_receita
 15807                           
 15808 ;; *************** function _salvar_receita *****************
 15809 ;; Defined at:
 15810 ;;		line 46 in file "eeprom.c"
 15811 ;; Parameters:    Size  Location     Type
 15812 ;;  adrs            1    wreg     unsigned char 
 15813 ;;  data            2    6[COMRAM] PTR unsigned char 
 15814 ;;		 -> fila(18), 
 15815 ;; Auto vars:     Size  Location     Type
 15816 ;;  adrs            1   10[COMRAM] unsigned char 
 15817 ;;  i               1   11[COMRAM] unsigned char 
 15818 ;;  aux             2    8[COMRAM] int 
 15819 ;; Return value:  Size  Location     Type
 15820 ;;                  1    wreg      void 
 15821 ;; Registers used:
 15822 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15823 ;; Tracked objects:
 15824 ;;		On entry : 0/0
 15825 ;;		On exit  : 0/0
 15826 ;;		Unchanged: 0/0
 15827 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15828 ;;      Params:         2       0       0       0       0       0       0       0       0       0
 15829 ;;      Locals:         4       0       0       0       0       0       0       0       0       0
 15830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0
 15831 ;;      Totals:         6       0       0       0       0       0       0       0       0       0
 15832 ;;Total ram usage:        6 bytes
 15833 ;; Hardware stack levels used:    1
 15834 ;; Hardware stack levels required when called:    3
 15835 ;; This function calls:
 15836 ;;		_EEPROM_write
 15837 ;;		_end_receita
 15838 ;; This function is called by:
 15839 ;;		_main
 15840 ;; This function uses a non-reentrant model
 15841 ;;
 15842                           psect	text13,class=CODE,space=0,reloc=2,group=0
 15843                           	file	"eeprom.c"
 15844                           	line	46
 15845                           global __ptext13
 15846                           __ptext13:
 15847  003B80                     psect	text13
 15848                           	file	"eeprom.c"
 15849                           	line	46
 15850                           	global	__size_of_salvar_receita
 15851                           	__size_of_salvar_receita	equ	__end_of_salvar_receita-_salvar_receita
 15852  0000                     	
 15853                           _salvar_receita:
 15854  003B80                     ;incstack = 0
 15855                           	opt	stack 27
 15856                           ;salvar_receita@adrs stored from wreg
 15857                           	movwf	((c:salvar_receita@adrs)),c
 15858  003B80  6E31               	line	49
 15859                           	
 15860                           l6050:
 15861  003B82                     ;eeprom.c: 46: void salvar_receita (char adrs, unsigned char *data );eeprom.c: 47: {;eep
                                 rom.c: 48:     int aux;;eeprom.c: 49:     aux = end_receita(adrs);
 15862                           	movff	(c:salvar_receita@adrs),(c:end_receita@x)
 15863  003B82  C031  F027         	clrf	((c:end_receita@x+1)),c
 15864  003B86  6A28               	call	_end_receita	;wreg free
 15865  003B88  ECB2  F020         	movff	0+?_end_receita,(c:salvar_receita@aux)
 15866  003B8C  C027  F02F         	movff	1+?_end_receita,(c:salvar_receita@aux+1)
 15867  003B90  C028  F030         	line	50
 15868                           	
 15869                           l6052:
 15870  003B94                     ;eeprom.c: 50:     for( char i=0 ; i<16; i++)
 15871                           	movlw	low(0)
 15872  003B94  0E00               	movwf	((c:salvar_receita@i)),c
 15873  003B96  6E32               	
 15874                           l6054:
 15875  003B98                     		movlw	010h-1
 15876  003B98  0E0F               	cpfsgt	((c:salvar_receita@i)),c
 15877  003B9A  6432               	goto	u4451
 15878  003B9C  EFD2  F01D         	goto	u4450
 15879  003BA0  EFD4  F01D         
 15880                           u4451:
 15881  003BA4                     	goto	l6058
 15882  003BA4  EFD8  F01D         u4450:
 15883  003BA8                     	goto	l590
 15884  003BA8  EFEF  F01D         	
 15885                           l6056:
 15886  003BAC                     	goto	l590
 15887  003BAC  EFEF  F01D         	
 15888                           l588:
 15889  003BB0                     	line	51
 15890                           	
 15891                           l6058:
 15892  003BB0                     ;eeprom.c: 51:          EEPROM_write( (aux+i), *(data+i) );
 15893                           	movf	((c:salvar_receita@i)),c,w
 15894  003BB0  5032               	addwf	((c:salvar_receita@data)),c,w
 15895  003BB2  242D               	movwf	c:fsr2l
 15896  003BB4  6ED9               	movlw	0
 15897  003BB6  0E00               	addwfc	((c:salvar_receita@data+1)),c,w
 15898  003BB8  202E               	movwf	1+c:fsr2l
 15899  003BBA  6EDA               	movf	indf2,w
 15900  003BBC  50DF               	movwf	((c:EEPROM_write@data)),c
 15901  003BBE  6E27               	movf	((c:salvar_receita@i)),c,w
 15902  003BC0  5032               	addwf	((c:salvar_receita@aux)),c,w
 15903  003BC2  242F               	
 15904                           	call	_EEPROM_write
 15905  003BC4  ECF9  F01F         	
 15906                           l6060:
 15907  003BC8                     	incf	((c:salvar_receita@i)),c
 15908  003BC8  2A32               	
 15909                           l6062:
 15910  003BCA                     		movlw	010h-1
 15911  003BCA  0E0F               	cpfsgt	((c:salvar_receita@i)),c
 15912  003BCC  6432               	goto	u4461
 15913  003BCE  EFEB  F01D         	goto	u4460
 15914  003BD2  EFED  F01D         
 15915                           u4461:
 15916  003BD6                     	goto	l6058
 15917  003BD6  EFD8  F01D         u4460:
 15918  003BDA                     	goto	l590
 15919  003BDA  EFEF  F01D         	
 15920                           l589:
 15921  003BDE                     	line	53
 15922                           	
 15923                           l590:
 15924  003BDE                     	return	;funcret
 15925  003BDE  0012               	opt stack 0
 15926                           GLOBAL	__end_of_salvar_receita
 15927                           	__end_of_salvar_receita:
 15928  003BE0                     	signat	_salvar_receita,8313
 15929                           	global	_salvar_dado
 15930                           
 15931 ;; *************** function _salvar_dado *****************
 15932 ;; Defined at:
 15933 ;;		line 63 in file "eeprom.c"
 15934 ;; Parameters:    Size  Location     Type
 15935 ;;  adrs            1    wreg     unsigned char 
 15936 ;;  col             1    6[COMRAM] unsigned char 
 15937 ;;  data            1    7[COMRAM] unsigned char 
 15938 ;; Auto vars:     Size  Location     Type
 15939 ;;  adrs            1   10[COMRAM] unsigned char 
 15940 ;;  aux             2    8[COMRAM] int 
 15941 ;; Return value:  Size  Location     Type
 15942 ;;                  1    wreg      void 
 15943 ;; Registers used:
 15944 ;;		wreg, status,2, status,0, cstack
 15945 ;; Tracked objects:
 15946 ;;		On entry : 0/0
 15947 ;;		On exit  : 0/0
 15948 ;;		Unchanged: 0/0
 15949 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15950 ;;      Params:         2       0       0       0       0       0       0       0       0       0
 15951 ;;      Locals:         3       0       0       0       0       0       0       0       0       0
 15952 ;;      Temps:          0       0       0       0       0       0       0       0       0       0
 15953 ;;      Totals:         5       0       0       0       0       0       0       0       0       0
 15954 ;;Total ram usage:        5 bytes
 15955 ;; Hardware stack levels used:    1
 15956 ;; Hardware stack levels required when called:    3
 15957 ;; This function calls:
 15958 ;;		_EEPROM_write
 15959 ;;		_end_receita
 15960 ;; This function is called by:
 15961 ;;		_main
 15962 ;; This function uses a non-reentrant model
 15963 ;;
 15964                           psect	text14,class=CODE,space=0,reloc=2,group=0
 15965                           	line	63
 15966                           global __ptext14
 15967                           __ptext14:
 15968  00418C                     psect	text14
 15969                           	file	"eeprom.c"
 15970                           	line	63
 15971                           	global	__size_of_salvar_dado
 15972                           	__size_of_salvar_dado	equ	__end_of_salvar_dado-_salvar_dado
 15973  0000                     	
 15974                           _salvar_dado:
 15975  00418C                     ;incstack = 0
 15976                           	opt	stack 27
 15977                           ;salvar_dado@adrs stored from wreg
 15978                           	movwf	((c:salvar_dado@adrs)),c
 15979  00418C  6E31               	line	66
 15980                           	
 15981                           l5902:
 15982  00418E                     ;eeprom.c: 63: void salvar_dado (char adrs, char col, unsigned char data);eeprom.c: 64: 
                                 {;eeprom.c: 65:     int aux;;eeprom.c: 66:     aux = end_receita(adrs);
 15983                           	movff	(c:salvar_dado@adrs),(c:end_receita@x)
 15984  00418E  C031  F027         	clrf	((c:end_receita@x+1)),c
 15985  004192  6A28               	call	_end_receita	;wreg free
 15986  004194  ECB2  F020         	movff	0+?_end_receita,(c:salvar_dado@aux)
 15987  004198  C027  F02F         	movff	1+?_end_receita,(c:salvar_dado@aux+1)
 15988  00419C  C028  F030         	line	67
 15989                           ;eeprom.c: 67:     EEPROM_write((aux+col), data);
 15990                           	movff	(c:salvar_dado@data),(c:EEPROM_write@data)
 15991  0041A0  C02E  F027         	movf	((c:salvar_dado@col)),c,w
 15992  0041A4  502D               	addwf	((c:salvar_dado@aux)),c,w
 15993  0041A6  242F               	
 15994                           	call	_EEPROM_write
 15995  0041A8  ECF9  F01F         	line	68
 15996                           	
 15997                           l598:
 15998  0041AC                     	return	;funcret
 15999  0041AC  0012               	opt stack 0
 16000                           GLOBAL	__end_of_salvar_dado
 16001                           	__end_of_salvar_dado:
 16002  0041AE                     	signat	_salvar_dado,12409
 16003                           	global	_salva_atuadores_init
 16004                           
 16005 ;; *************** function _salva_atuadores_init *****************
 16006 ;; Defined at:
 16007 ;;		line 117 in file "fifo.c"
 16008 ;; Parameters:    Size  Location     Type
 16009 ;;		None
 16010 ;; Auto vars:     Size  Location     Type
 16011 ;;  condi_init      4    3[COMRAM] unsigned char [4]
 16012 ;;  pt              2    7[COMRAM] PTR unsigned char 
 16013 ;;		 -> salva_atuadores_init@condi_init(4), 
 16014 ;;  mask            1   10[COMRAM] unsigned char 
 16015 ;;  dado            1    9[COMRAM] unsigned char 
 16016 ;; Return value:  Size  Location     Type
 16017 ;;                  1    wreg      unsigned char 
 16018 ;; Registers used:
 16019 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16020 ;; Tracked objects:
 16021 ;;		On entry : 0/0
 16022 ;;		On exit  : 0/0
 16023 ;;		Unchanged: 0/0
 16024 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16025 ;;      Params:         0       0       0       0       0       0       0       0       0       0
 16026 ;;      Locals:         8       0       0       0       0       0       0       0       0       0
 16027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0
 16028 ;;      Totals:         8       0       0       0       0       0       0       0       0       0
 16029 ;;Total ram usage:        8 bytes
 16030 ;; Hardware stack levels used:    1
 16031 ;; Hardware stack levels required when called:    3
 16032 ;; This function calls:
 16033 ;;		_ler_atuador
 16034 ;; This function is called by:
 16035 ;;		_main
 16036 ;; This function uses a non-reentrant model
 16037 ;;
 16038                           psect	text15,class=CODE,space=0,reloc=2,group=0
 16039                           	file	"fifo.c"
 16040                           	line	117
 16041                           global __ptext15
 16042                           __ptext15:
 16043  0035C6                     psect	text15
 16044                           	file	"fifo.c"
 16045                           	line	117
 16046                           	global	__size_of_salva_atuadores_init
 16047                           	__size_of_salva_atuadores_init	equ	__end_of_salva_atuadores_init-_salva_atuadores_init

 16048  0000                     	
 16049                           _salva_atuadores_init:
 16050  0035C6                     ;incstack = 0
 16051                           	opt	stack 27
 16052                           	line	119
 16053                           	
 16054                           l5778:
 16055  0035C6                     ;fifo.c: 119:     char condi_init[4] = {ler_atuador('A'), ler_atuador('B'), ler_atuador(
                                 'C'), ler_atuador('D')};
 16056                           	movff	(c:salva_atuadores_init@F108),(c:salva_atuadores_init@condi_init)
 16057  0035C6  C005  F02A         	movff	(c:salva_atuadores_init@F108+1),(c:salva_atuadores_init@condi_init+1)
 16058  0035CA  C006  F02B         	movff	(c:salva_atuadores_init@F108+2),(c:salva_atuadores_init@condi_init+2)
 16059  0035CE  C007  F02C         	movff	(c:salva_atuadores_init@F108+3),(c:salva_atuadores_init@condi_init+3)
 16060  0035D2  C008  F02D         	
 16061                           l5780:
 16062  0035D6                     	movlw	(041h)&0ffh
 16063  0035D6  0E41               	
 16064                           	call	_ler_atuador
 16065  0035D8  EC7E  F019         	movwf	((c:salva_atuadores_init@condi_init)),c
 16066  0035DC  6E2A               	movlw	(042h)&0ffh
 16067  0035DE  0E42               	
 16068                           	call	_ler_atuador
 16069  0035E0  EC7E  F019         	movwf	(0+((c:salva_atuadores_init@condi_init)+01h)),c
 16070  0035E4  6E2B               	movlw	(043h)&0ffh
 16071  0035E6  0E43               	
 16072                           	call	_ler_atuador
 16073  0035E8  EC7E  F019         	movwf	(0+((c:salva_atuadores_init@condi_init)+02h)),c
 16074  0035EC  6E2C               	movlw	(044h)&0ffh
 16075  0035EE  0E44               	
 16076                           	call	_ler_atuador
 16077  0035F0  EC7E  F019         	movwf	(0+((c:salva_atuadores_init@condi_init)+03h)),c
 16078  0035F4  6E2D               	line	121
 16079                           	
 16080                           l5782:
 16081  0035F6                     ;fifo.c: 121:     char *pt = condi_init;
 16082                           		movlw	low(salva_atuadores_init@condi_init)
 16083  0035F6  0E2A               	movwf	((c:salva_atuadores_init@pt)),c
 16084  0035F8  6E2E               	movlw	high(salva_atuadores_init@condi_init)
 16085  0035FA  0E00               	movwf	((c:salva_atuadores_init@pt+1)),c
 16086  0035FC  6E2F               
 16087                           	line	122
 16088                           	
 16089                           l5784:
 16090  0035FE                     ;fifo.c: 122:     char dado = 0;
 16091                           	movlw	low(0)
 16092  0035FE  0E00               	movwf	((c:salva_atuadores_init@dado)),c
 16093  003600  6E30               	line	123
 16094                           	
 16095                           l5786:
 16096  003602                     ;fifo.c: 123:     char mask = 0x08;
 16097                           	movlw	low(08h)
 16098  003602  0E08               	movwf	((c:salva_atuadores_init@mask)),c
 16099  003604  6E31               	line	125
 16100                           ;fifo.c: 125:     while( mask )
 16101                           	goto	l5796
 16102  003606  EF1C  F01B         	
 16103                           l699:
 16104  00360A                     	line	127
 16105                           	
 16106                           l5788:
 16107  00360A                     ;fifo.c: 126:     {;fifo.c: 127:         if( *pt )
 16108                           	movff	(c:salva_atuadores_init@pt),fsr2l
 16109  00360A  C02E  FFD9         	movff	(c:salva_atuadores_init@pt+1),fsr2h
 16110  00360E  C02F  FFDA         	movf	indf2,w
 16111  003612  50DF               	btfsc	status,2
 16112  003614  B4D8               	goto	u4211
 16113  003616  EF0F  F01B         	goto	u4210
 16114  00361A  EF11  F01B         u4211:
 16115  00361E                     	goto	l5792
 16116  00361E  EF16  F01B         u4210:
 16117  003622                     	line	129
 16118                           	
 16119                           l5790:
 16120  003622                     ;fifo.c: 128:         {;fifo.c: 129:             dado = dado | mask;
 16121                           	movf	((c:salva_atuadores_init@dado)),c,w
 16122  003622  5030               	iorwf	((c:salva_atuadores_init@mask)),c,w
 16123  003624  1031               	movwf	((c:salva_atuadores_init@dado)),c
 16124  003626  6E30               	goto	l5792
 16125  003628  EF16  F01B         	line	130
 16126                           ;fifo.c: 130:         }
 16127                           	
 16128                           l700:
 16129  00362C                     	line	131
 16130                           	
 16131                           l5792:
 16132  00362C                     ;fifo.c: 131:         pt++;
 16133                           	infsnz	((c:salva_atuadores_init@pt)),c
 16134  00362C  4A2E               	incf	((c:salva_atuadores_init@pt+1)),c
 16135  00362E  2A2F               	line	132
 16136                           	
 16137                           l5794:
 16138  003630                     ;fifo.c: 132:         mask >>= 1;
 16139                           	bcf status,0
 16140  003630  90D8               	rrcf	((c:salva_atuadores_init@mask)),c
 16141  003632  3231               
 16142                           	goto	l5796
 16143  003634  EF1C  F01B         	line	133
 16144                           ;fifo.c: 133:     }
 16145                           	
 16146                           l698:
 16147  003638                     	line	125
 16148                           	
 16149                           l5796:
 16150  003638                     ;fifo.c: 125:     while( mask )
 16151                           	movf	((c:salva_atuadores_init@mask)),c,w
 16152  003638  5031               	btfss	status,2
 16153  00363A  A4D8               	goto	u4221
 16154  00363C  EF22  F01B         	goto	u4220
 16155  003640  EF24  F01B         u4221:
 16156  003644                     	goto	l5788
 16157  003644  EF05  F01B         u4220:
 16158  003648                     	goto	l5798
 16159  003648  EF26  F01B         	
 16160                           l701:
 16161  00364C                     	line	134
 16162                           	
 16163                           l5798:
 16164  00364C                     ;fifo.c: 134:     return(dado);
 16165                           	movf	((c:salva_atuadores_init@dado)),c,w
 16166  00364C  5030               	goto	l702
 16167  00364E  EF29  F01B         	
 16168                           l5800:
 16169  003652                     	line	135
 16170                           	
 16171                           l702:
 16172  003652                     	return	;funcret
 16173  003652  0012               	opt stack 0
 16174                           GLOBAL	__end_of_salva_atuadores_init
 16175                           	__end_of_salva_atuadores_init:
 16176  003654                     	signat	_salva_atuadores_init,89
 16177                           	global	_ler_atuador
 16178                           
 16179 ;; *************** function _ler_atuador *****************
 16180 ;; Defined at:
 16181 ;;		line 80 in file "fifo.c"
 16182 ;; Parameters:    Size  Location     Type
 16183 ;;  tecla           1    wreg     unsigned char 
 16184 ;; Auto vars:     Size  Location     Type
 16185 ;;  tecla           1    2[COMRAM] unsigned char 
 16186 ;; Return value:  Size  Location     Type
 16187 ;;                  1    wreg      unsigned char 
 16188 ;; Registers used:
 16189 ;;		wreg, status,2, status,0
 16190 ;; Tracked objects:
 16191 ;;		On entry : 0/0
 16192 ;;		On exit  : 0/0
 16193 ;;		Unchanged: 0/0
 16194 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16195 ;;      Params:         0       0       0       0       0       0       0       0       0       0
 16196 ;;      Locals:         1       0       0       0       0       0       0       0       0       0
 16197 ;;      Temps:          2       0       0       0       0       0       0       0       0       0
 16198 ;;      Totals:         3       0       0       0       0       0       0       0       0       0
 16199 ;;Total ram usage:        3 bytes
 16200 ;; Hardware stack levels used:    1
 16201 ;; Hardware stack levels required when called:    2
 16202 ;; This function calls:
 16203 ;;		Nothing
 16204 ;; This function is called by:
 16205 ;;		_main
 16206 ;;		_salva_atuadores_init
 16207 ;; This function uses a non-reentrant model
 16208 ;;
 16209                           psect	text16,class=CODE,space=0,reloc=2,group=0
 16210                           	line	80
 16211                           global __ptext16
 16212                           __ptext16:
 16213  0032FC                     psect	text16
 16214                           	file	"fifo.c"
 16215                           	line	80
 16216                           	global	__size_of_ler_atuador
 16217                           	__size_of_ler_atuador	equ	__end_of_ler_atuador-_ler_atuador
 16218  0000                     	
 16219                           _ler_atuador:
 16220  0032FC                     ;incstack = 0
 16221                           	opt	stack 27
 16222                           ;ler_atuador@tecla stored from wreg
 16223                           	movwf	((c:ler_atuador@tecla)),c
 16224  0032FC  6E29               	line	82
 16225                           	
 16226                           l5180:
 16227  0032FE                     ;fifo.c: 80: char ler_atuador(char tecla);fifo.c: 81: {;fifo.c: 82:     switch(tecla)
 16228                           	goto	l5198
 16229  0032FE  EFBE  F019         	line	84
 16230                           ;fifo.c: 83:     {;fifo.c: 84:         case 'A': return(atuador.A); break;
 16231                           	
 16232                           l675:
 16233  003302                     	btfsc	((c:_atuador)),c,0
 16234  003302  B013               	goto	u3511
 16235  003304  EF86  F019         	goto	u3510
 16236  003308  EF89  F019         u3511:
 16237  00330C                     	movlw	1
 16238  00330C  0E01               	goto	u3516
 16239  00330E  EF8A  F019         u3510:
 16240  003312                     	movlw	0
 16241  003312  0E00               u3516:
 16242  003314                     	goto	l676
 16243  003314  EFDB  F019         	
 16244                           l5182:
 16245  003318                     	goto	l676
 16246  003318  EFDB  F019         	line	85
 16247                           ;fifo.c: 85:         case 'B': return(atuador.B); break;
 16248                           	
 16249                           l678:
 16250  00331C                     	btfsc	((c:_atuador)),c,1
 16251  00331C  B213               	goto	u3521
 16252  00331E  EF93  F019         	goto	u3520
 16253  003322  EF96  F019         u3521:
 16254  003326                     	movlw	1
 16255  003326  0E01               	goto	u3526
 16256  003328  EF97  F019         u3520:
 16257  00332C                     	movlw	0
 16258  00332C  0E00               u3526:
 16259  00332E                     	goto	l676
 16260  00332E  EFDB  F019         	
 16261                           l5184:
 16262  003332                     	goto	l676
 16263  003332  EFDB  F019         	line	86
 16264                           ;fifo.c: 86:         case 'C': return(atuador.C); break;
 16265                           	
 16266                           l679:
 16267  003336                     	btfsc	((c:_atuador)),c,2
 16268  003336  B413               	goto	u3531
 16269  003338  EFA0  F019         	goto	u3530
 16270  00333C  EFA3  F019         u3531:
 16271  003340                     	movlw	1
 16272  003340  0E01               	goto	u3536
 16273  003342  EFA4  F019         u3530:
 16274  003346                     	movlw	0
 16275  003346  0E00               u3536:
 16276  003348                     	goto	l676
 16277  003348  EFDB  F019         	
 16278                           l5186:
 16279  00334C                     	goto	l676
 16280  00334C  EFDB  F019         	line	87
 16281                           ;fifo.c: 87:         case 'D': return(atuador.D); break;
 16282                           	
 16283                           l680:
 16284  003350                     	btfsc	((c:_atuador)),c,3
 16285  003350  B613               	goto	u3541
 16286  003352  EFAD  F019         	goto	u3540
 16287  003356  EFB0  F019         u3541:
 16288  00335A                     	movlw	1
 16289  00335A  0E01               	goto	u3546
 16290  00335C  EFB1  F019         u3540:
 16291  003360                     	movlw	0
 16292  003360  0E00               u3546:
 16293  003362                     	goto	l676
 16294  003362  EFDB  F019         	
 16295                           l5188:
 16296  003366                     	goto	l676
 16297  003366  EFDB  F019         	line	88
 16298                           ;fifo.c: 88:         default: return 0; break;
 16299                           	
 16300                           l681:
 16301  00336A                     	
 16302                           l5190:
 16303  00336A                     	movlw	(0)&0ffh
 16304  00336A  0E00               	goto	l676
 16305  00336C  EFDB  F019         	
 16306                           l5192:
 16307  003370                     	goto	l676
 16308  003370  EFDB  F019         	
 16309                           l5194:
 16310  003374                     	goto	l676
 16311  003374  EFDB  F019         	line	89
 16312                           	
 16313                           l5196:
 16314  003378                     ;fifo.c: 89:     }
 16315                           	goto	l676
 16316  003378  EFDB  F019         	
 16317                           l674:
 16318  00337C                     	
 16319                           l5198:
 16320  00337C                     	movf	((c:ler_atuador@tecla)),c,w
 16321  00337C  5029               	movwf	(??_ler_atuador+0+0)&0ffh,c
 16322  00337E  6E27               	clrf	(??_ler_atuador+0+0+1)&0ffh,c
 16323  003380  6A28               
 16324                           	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
 16325                           ; Switch size 1, requested type "space"
 16326                           ; Number of cases is 1, Range of values is 0 to 0
 16327                           ; switch strategies available:
 16328                           ; Name         Instructions Cycles
 16329                           ; simple_byte            4     3 (average)
 16330                           ;	Chosen strategy is simple_byte
 16331                           
 16332                           	movf ??_ler_atuador+0+1,c,w
 16333  003382  5028               	xorlw	0^0	; case 0
 16334  003384  0A00               	skipnz
 16335  003386  B4D8               	goto	l7846
 16336  003388  EFC8  F019         	goto	l5190
 16337  00338C  EFB5  F019         	
 16338                           l7846:
 16339  003390                     ; Switch size 1, requested type "space"
 16340                           ; Number of cases is 4, Range of values is 65 to 68
 16341                           ; switch strategies available:
 16342                           ; Name         Instructions Cycles
 16343                           ; simple_byte           13     7 (average)
 16344                           ;	Chosen strategy is simple_byte
 16345                           
 16346                           	movf ??_ler_atuador+0+0,c,w
 16347  003390  5027               	xorlw	65^0	; case 65
 16348  003392  0A41               	skipnz
 16349  003394  B4D8               	goto	l675
 16350  003396  EF81  F019         	xorlw	66^65	; case 66
 16351  00339A  0A03               	skipnz
 16352  00339C  B4D8               	goto	l678
 16353  00339E  EF8E  F019         	xorlw	67^66	; case 67
 16354  0033A2  0A01               	skipnz
 16355  0033A4  B4D8               	goto	l679
 16356  0033A6  EF9B  F019         	xorlw	68^67	; case 68
 16357  0033AA  0A07               	skipnz
 16358  0033AC  B4D8               	goto	l680
 16359  0033AE  EFA8  F019         	goto	l5190
 16360  0033B2  EFB5  F019         
 16361                           	
 16362                           l677:
 16363  0033B6                     	line	90
 16364                           	
 16365                           l676:
 16366  0033B6                     	return	;funcret
 16367  0033B6  0012               	opt stack 0
 16368                           GLOBAL	__end_of_ler_atuador
 16369                           	__end_of_ler_atuador:
 16370  0033B8                     	signat	_ler_atuador,4217
 16371                           	global	_resetIndicePassos
 16372                           
 16373 ;; *************** function _resetIndicePassos *****************
 16374 ;; Defined at:
 16375 ;;		line 36 in file "fifo.c"
 16376 ;; Parameters:    Size  Location     Type
 16377 ;;		None
 16378 ;; Auto vars:     Size  Location     Type
 16379 ;;		None
 16380 ;; Return value:  Size  Location     Type
 16381 ;;                  1    wreg      void 
 16382 ;; Registers used:
 16383 ;;		wreg, status,2
 16384 ;; Tracked objects:
 16385 ;;		On entry : 0/0
 16386 ;;		On exit  : 0/0
 16387 ;;		Unchanged: 0/0
 16388 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16389 ;;      Params:         0       0       0       0       0       0       0       0       0       0
 16390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0
 16391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0
 16392 ;;      Totals:         0       0       0       0       0       0       0       0       0       0
 16393 ;;Total ram usage:        0 bytes
 16394 ;; Hardware stack levels used:    1
 16395 ;; Hardware stack levels required when called:    2
 16396 ;; This function calls:
 16397 ;;		Nothing
 16398 ;; This function is called by:
 16399 ;;		_main
 16400 ;; This function uses a non-reentrant model
 16401 ;;
 16402                           psect	text17,class=CODE,space=0,reloc=2,group=0
 16403                           	line	36
 16404                           global __ptext17
 16405                           __ptext17:
 16406  0043C6                     psect	text17
 16407                           	file	"fifo.c"
 16408                           	line	36
 16409                           	global	__size_of_resetIndicePassos
 16410                           	__size_of_resetIndicePassos	equ	__end_of_resetIndicePassos-_resetIndicePassos
 16411  0000                     	
 16412                           _resetIndicePassos:
 16413  0043C6                     ;incstack = 0
 16414                           	opt	stack 28
 16415                           	line	38
 16416                           	
 16417                           l5926:
 16418  0043C6                     ;fifo.c: 38:     indice_passos = 2;
 16419                           	movlw	low(02h)
 16420  0043C6  0E02               	movwf	((c:_indice_passos)),c
 16421  0043C8  6E5B               	line	39
 16422                           	
 16423                           l657:
 16424  0043CA                     	return	;funcret
 16425  0043CA  0012               	opt stack 0
 16426                           GLOBAL	__end_of_resetIndicePassos
 16427                           	__end_of_resetIndicePassos:
 16428  0043CC                     	signat	_resetIndicePassos,89
 16429                           	global	_resetContCiclos
 16430                           
 16431 ;; *************** function _resetContCiclos *****************
 16432 ;; Defined at:
 16433 ;;		line 54 in file "fifo.c"
 16434 ;; Parameters:    Size  Location     Type
 16435 ;;		None
 16436 ;; Auto vars:     Size  Location     Type
 16437 ;;		None
 16438 ;; Return value:  Size  Location     Type
 16439 ;;                  1    wreg      void 
 16440 ;; Registers used:
 16441 ;;		wreg, status,2
 16442 ;; Tracked objects:
 16443 ;;		On entry : 0/0
 16444 ;;		On exit  : 0/0
 16445 ;;		Unchanged: 0/0
 16446 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16447 ;;      Params:         0       0       0       0       0       0       0       0       0       0
 16448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0
 16449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0
 16450 ;;      Totals:         0       0       0       0       0       0       0       0       0       0
 16451 ;;Total ram usage:        0 bytes
 16452 ;; Hardware stack levels used:    1
 16453 ;; Hardware stack levels required when called:    2
 16454 ;; This function calls:
 16455 ;;		Nothing
 16456 ;; This function is called by:
 16457 ;;		_main
 16458 ;; This function uses a non-reentrant model
 16459 ;;
 16460                           psect	text18,class=CODE,space=0,reloc=2,group=0
 16461                           	line	54
 16462                           global __ptext18
 16463                           __ptext18:
 16464  004378                     psect	text18
 16465                           	file	"fifo.c"
 16466                           	line	54
 16467                           	global	__size_of_resetContCiclos
 16468                           	__size_of_resetContCiclos	equ	__end_of_resetContCiclos-_resetContCiclos
 16469  0000                     	
 16470                           _resetContCiclos:
 16471  004378                     ;incstack = 0
 16472                           	opt	stack 28
 16473                           	line	56
 16474                           	
 16475                           l5928:
 16476  004378                     ;fifo.c: 56:     cont_ciclos = 0;
 16477                           	movlw	high(0)
 16478  004378  0E00               	movwf	((c:_cont_ciclos+1)),c
 16479  00437A  6E0E               	movlw	low(0)
 16480  00437C  0E00               	movwf	((c:_cont_ciclos)),c
 16481  00437E  6E0D               	line	57
 16482                           	
 16483                           l666:
 16484  004380                     	return	;funcret
 16485  004380  0012               	opt stack 0
 16486                           GLOBAL	__end_of_resetContCiclos
 16487                           	__end_of_resetContCiclos:
 16488  004382                     	signat	_resetContCiclos,89
 16489                           	global	_printExec
 16490                           
 16491 ;; *************** function _printExec *****************
 16492 ;; Defined at:
 16493 ;;		line 520 in file "fifo.c"
 16494 ;; Parameters:    Size  Location     Type
 16495 ;;  col             1    wreg     unsigned char 
 16496 ;;  ind             1   25[COMRAM] unsigned char 
 16497 ;; Auto vars:     Size  Location     Type
 16498 ;;  col             1   28[COMRAM] unsigned char 
 16499 ;;  passo           1   29[COMRAM] unsigned char 
 16500 ;; Return value:  Size  Location     Type
 16501 ;;                  1    wreg      void 
 16502 ;; Registers used:
 16503 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16504 ;; Tracked objects:
 16505 ;;		On entry : 0/0
 16506 ;;		On exit  : 0/0
 16507 ;;		Unchanged: 0/0
 16508 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16509 ;;      Params:         1       0       0       0       0       0       0       0       0       0
 16510 ;;      Locals:         4       0       0       0       0       0       0       0       0       0
 16511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0
 16512 ;;      Totals:         5       0       0       0       0       0       0       0       0       0
 16513 ;;Total ram usage:        5 bytes
 16514 ;; Hardware stack levels used:    1
 16515 ;; Hardware stack levels required when called:    5
 16516 ;; This function calls:
 16517 ;;		_decodifica
 16518 ;;		_dignum_tam
 16519 ;;		_dispLCD_dataReg
 16520 ;;		_dispLCD_lincol
 16521 ;;		_dispLCD_num
 16522 ;;		_posAtual
 16523 ;; This function is called by:
 16524 ;;		_main
 16525 ;; This function uses a non-reentrant model
 16526 ;;
 16527                           psect	text19,class=CODE,space=0,reloc=2,group=0
 16528                           	line	520
 16529                           global __ptext19
 16530                           __ptext19:
 16531  0024EA                     psect	text19
 16532                           	file	"fifo.c"
 16533                           	line	520
 16534                           	global	__size_of_printExec
 16535                           	__size_of_printExec	equ	__end_of_printExec-_printExec
 16536  0000                     	
 16537                           _printExec:
 16538  0024EA                     ;incstack = 0
 16539                           	opt	stack 25
 16540                           ;printExec@col stored from wreg
 16541                           	movwf	((c:printExec@col)),c
 16542  0024EA  6E43               	line	522
 16543                           	
 16544                           l5842:
 16545  0024EC                     ;fifo.c: 520: void printExec (char col, char ind);fifo.c: 521: {;fifo.c: 522:     char p
                                 asso = posAtual( ind );
 16546                           	movf	((c:printExec@ind)),c,w
 16547  0024EC  5040               	
 16548                           	call	_posAtual
 16549  0024EE  EC24  F021         	movwf	((c:printExec@passo)),c
 16550  0024F2  6E44               	line	524
 16551                           	
 16552                           l5844:
 16553  0024F4                     ;fifo.c: 524:     if(passo > 0 && passo <= 0x64)
 16554                           	movf	((c:printExec@passo)),c,w
 16555  0024F4  5044               	btfsc	status,2
 16556  0024F6  B4D8               	goto	u4311
 16557  0024F8  EF80  F012         	goto	u4310
 16558  0024FC  EF82  F012         u4311:
 16559  002500                     	goto	l5856
 16560  002500  EFAD  F012         u4310:
 16561  002504                     	
 16562                           l5846:
 16563  002504                     		movlw	065h-0
 16564  002504  0E65               	cpfslt	((c:printExec@passo)),c
 16565  002506  6044               	goto	u4321
 16566  002508  EF88  F012         	goto	u4320
 16567  00250C  EF8A  F012         
 16568                           u4321:
 16569  002510                     	goto	l5856
 16570  002510  EFAD  F012         u4320:
 16571  002514                     	line	526
 16572                           	
 16573                           l5848:
 16574  002514                     ;fifo.c: 525:     {;fifo.c: 526:         if( dignum_tam( (int) passo ) == 3 )
 16575                           	movff	(c:printExec@passo),(c:dignum_tam@num)
 16576  002514  C044  F02F         	clrf	((c:dignum_tam@num+1)),c
 16577  002518  6A30               	call	_dignum_tam	;wreg free
 16578  00251A  ECE9  F01E         	xorlw	03h
 16579  00251E  0A03               	btfss	status,2
 16580  002520  A4D8               	goto	u4331
 16581  002522  EF95  F012         	goto	u4330
 16582  002526  EF97  F012         u4331:
 16583  00252A                     	goto	l5852
 16584  00252A  EF9A  F012         u4330:
 16585  00252E                     	line	527
 16586                           	
 16587                           l5850:
 16588  00252E                     ;fifo.c: 527:             col-=1;
 16589                           	decf	((c:printExec@col)),c
 16590  00252E  0643               	goto	l5852
 16591  002530  EF9A  F012         	
 16592                           l871:
 16593  002534                     	line	528
 16594                           	
 16595                           l5852:
 16596  002534                     ;fifo.c: 528:         dispLCD_num(0, col, (int)passo, dignum_tam( (int)passo) );
 16597                           	movff	(c:printExec@col),(c:dispLCD_num@col)
 16598  002534  C043  F032         	movff	(c:printExec@passo),(c:dispLCD_num@num)
 16599  002538  C044  F033         	clrf	((c:dispLCD_num@num+1)),c
 16600  00253C  6A34               	movff	(c:printExec@passo),(c:dignum_tam@num)
 16601  00253E  C044  F02F         	clrf	((c:dignum_tam@num+1)),c
 16602  002542  6A30               	call	_dignum_tam	;wreg free
 16603  002544  ECE9  F01E         	movwf	((c:dispLCD_num@tam)),c
 16604  002548  6E35               	movlw	(0)&0ffh
 16605  00254A  0E00               	
 16606                           	call	_dispLCD_num
 16607  00254C  EC46  F013         	line	529
 16608                           	
 16609                           l5854:
 16610  002550                     ;fifo.c: 529:         dispLCD_dataReg('%');
 16611                           	movlw	(025h)&0ffh
 16612  002550  0E25               	
 16613                           	call	_dispLCD_dataReg
 16614  002552  EC9B  F01E         	line	530
 16615                           ;fifo.c: 530:     }
 16616                           	goto	l883
 16617  002556  EF45  F013         	line	531
 16618                           ;fifo.c: 531:     else if(passo > 0x64 && passo <= 0xDC)
 16619                           	
 16620                           l870:
 16621  00255A                     	
 16622                           l5856:
 16623  00255A                     		movlw	065h-1
 16624  00255A  0E64               	cpfsgt	((c:printExec@passo)),c
 16625  00255C  6444               	goto	u4341
 16626  00255E  EFB3  F012         	goto	u4340
 16627  002562  EFB5  F012         
 16628                           u4341:
 16629  002566                     	goto	l5870
 16630  002566  EFE6  F012         u4340:
 16631  00256A                     	
 16632                           l5858:
 16633  00256A                     		movlw	0DDh-0
 16634  00256A  0EDD               	cpfslt	((c:printExec@passo)),c
 16635  00256C  6044               	goto	u4351
 16636  00256E  EFBB  F012         	goto	u4350
 16637  002572  EFBD  F012         
 16638                           u4351:
 16639  002576                     	goto	l5870
 16640  002576  EFE6  F012         u4350:
 16641  00257A                     	line	533
 16642                           	
 16643                           l5860:
 16644  00257A                     ;fifo.c: 532:     {;fifo.c: 533:         decodifica(&passo);
 16645                           		movlw	low(printExec@passo)
 16646  00257A  0E44               	movwf	((c:decodifica@d)),c
 16647  00257C  6E27               	movlw	high(printExec@passo)
 16648  00257E  0E00               	movwf	((c:decodifica@d+1)),c
 16649  002580  6E28               
 16650                           	call	_decodifica	;wreg free
 16651  002582  ECCB  F014         	line	534
 16652                           	
 16653                           l5862:
 16654  002586                     ;fifo.c: 534:         if( dignum_tam( (int) passo ) == 3 )
 16655                           	movff	(c:printExec@passo),(c:dignum_tam@num)
 16656  002586  C044  F02F         	clrf	((c:dignum_tam@num+1)),c
 16657  00258A  6A30               	call	_dignum_tam	;wreg free
 16658  00258C  ECE9  F01E         	xorlw	03h
 16659  002590  0A03               	btfss	status,2
 16660  002592  A4D8               	goto	u4361
 16661  002594  EFCE  F012         	goto	u4360
 16662  002598  EFD0  F012         u4361:
 16663  00259C                     	goto	l5866
 16664  00259C  EFD3  F012         u4360:
 16665  0025A0                     	line	535
 16666                           	
 16667                           l5864:
 16668  0025A0                     ;fifo.c: 535:             col-=1;
 16669                           	decf	((c:printExec@col)),c
 16670  0025A0  0643               	goto	l5866
 16671  0025A2  EFD3  F012         	
 16672                           l874:
 16673  0025A6                     	line	536
 16674                           	
 16675                           l5866:
 16676  0025A6                     ;fifo.c: 536:         dispLCD_num(0, col, (int)passo, dignum_tam( (int)passo) );
 16677                           	movff	(c:printExec@col),(c:dispLCD_num@col)
 16678  0025A6  C043  F032         	movff	(c:printExec@passo),(c:dispLCD_num@num)
 16679  0025AA  C044  F033         	clrf	((c:dispLCD_num@num+1)),c
 16680  0025AE  6A34               	movff	(c:printExec@passo),(c:dignum_tam@num)
 16681  0025B0  C044  F02F         	clrf	((c:dignum_tam@num+1)),c
 16682  0025B4  6A30               	call	_dignum_tam	;wreg free
 16683  0025B6  ECE9  F01E         	movwf	((c:dispLCD_num@tam)),c
 16684  0025BA  6E35               	movlw	(0)&0ffh
 16685  0025BC  0E00               	
 16686                           	call	_dispLCD_num
 16687  0025BE  EC46  F013         	line	537
 16688                           	
 16689                           l5868:
 16690  0025C2                     ;fifo.c: 537:         dispLCD_dataReg('s');
 16691                           	movlw	(073h)&0ffh
 16692  0025C2  0E73               	
 16693                           	call	_dispLCD_dataReg
 16694  0025C4  EC9B  F01E         	line	538
 16695                           ;fifo.c: 538:     }
 16696                           	goto	l883
 16697  0025C8  EF45  F013         	line	539
 16698                           ;fifo.c: 539:     else if( passo > 0xDC && passo <0xFE)
 16699                           	
 16700                           l873:
 16701  0025CC                     	
 16702                           l5870:
 16703  0025CC                     		movlw	0DDh-1
 16704  0025CC  0EDC               	cpfsgt	((c:printExec@passo)),c
 16705  0025CE  6444               	goto	u4371
 16706  0025D0  EFEC  F012         	goto	u4370
 16707  0025D4  EFEE  F012         
 16708                           u4371:
 16709  0025D8                     	goto	l5888
 16710  0025D8  EF1D  F013         u4370:
 16711  0025DC                     	
 16712                           l5872:
 16713  0025DC                     		movlw	0FEh-0
 16714  0025DC  0EFE               	cpfslt	((c:printExec@passo)),c
 16715  0025DE  6044               	goto	u4381
 16716  0025E0  EFF4  F012         	goto	u4380
 16717  0025E4  EFF6  F012         
 16718                           u4381:
 16719  0025E8                     	goto	l5888
 16720  0025E8  EF1D  F013         u4380:
 16721  0025EC                     	line	541
 16722                           	
 16723                           l5874:
 16724  0025EC                     ;fifo.c: 540:     {;fifo.c: 541:         decodifica(&passo);
 16725                           		movlw	low(printExec@passo)
 16726  0025EC  0E44               	movwf	((c:decodifica@d)),c
 16727  0025EE  6E27               	movlw	high(printExec@passo)
 16728  0025F0  0E00               	movwf	((c:decodifica@d+1)),c
 16729  0025F2  6E28               
 16730                           	call	_decodifica	;wreg free
 16731  0025F4  ECCB  F014         	line	542
 16732                           	
 16733                           l5876:
 16734  0025F8                     ;fifo.c: 542:         dispLCD_lincol(0, col);
 16735                           	movff	(c:printExec@col),(c:dispLCD_lincol@col)
 16736  0025F8  C043  F029         	movlw	(0)&0ffh
 16737  0025FC  0E00               	
 16738                           	call	_dispLCD_lincol
 16739  0025FE  EC8D  F01D         	line	543
 16740                           	
 16741                           l5878:
 16742  002602                     ;fifo.c: 543:         dispLCD_dataReg( passo & ~0x20 );
 16743                           	movf	((c:printExec@passo)),c,w
 16744  002602  5044               	andlw	low(0DFh)
 16745  002604  0BDF               	
 16746                           	call	_dispLCD_dataReg
 16747  002606  EC9B  F01E         	line	544
 16748                           	
 16749                           l5880:
 16750  00260A                     ;fifo.c: 544:         dispLCD_dataReg( passo & 0x20 ? '-': '+' );
 16751                           	
 16752                           	btfsc	((c:printExec@passo)),c,(5)&7
 16753  00260A  BA44               	goto	u4391
 16754  00260C  EF0A  F013         	goto	u4390
 16755  002610  EF0C  F013         u4391:
 16756  002614                     	goto	l5884
 16757  002614  EF12  F013         u4390:
 16758  002618                     	
 16759                           l5882:
 16760  002618                     	movlw	high(02Bh)
 16761  002618  0E00               	movwf	((c:_printExec$1068+1)),c
 16762  00261A  6E42               	movlw	low(02Bh)
 16763  00261C  0E2B               	movwf	((c:_printExec$1068)),c
 16764  00261E  6E41               	goto	l5886
 16765  002620  EF18  F013         	
 16766                           l878:
 16767  002624                     	
 16768                           l5884:
 16769  002624                     	movlw	high(02Dh)
 16770  002624  0E00               	movwf	((c:_printExec$1068+1)),c
 16771  002626  6E42               	movlw	low(02Dh)
 16772  002628  0E2D               	movwf	((c:_printExec$1068)),c
 16773  00262A  6E41               	goto	l5886
 16774  00262C  EF18  F013         	
 16775                           l880:
 16776  002630                     	
 16777                           l5886:
 16778  002630                     	movf	((c:_printExec$1068)),c,w
 16779  002630  5041               	
 16780                           	call	_dispLCD_dataReg
 16781  002632  EC9B  F01E         	line	545
 16782                           ;fifo.c: 545:     }
 16783                           	goto	l883
 16784  002636  EF45  F013         	line	546
 16785                           ;fifo.c: 546:     else if( passo == 0xFE)
 16786                           	
 16787                           l876:
 16788  00263A                     	
 16789                           l5888:
 16790  00263A                     		movlw	254
 16791  00263A  0EFE               	xorwf	((c:printExec@passo)),c,w
 16792  00263C  1844               	btfss	status,2
 16793  00263E  A4D8               	goto	u4401
 16794  002640  EF24  F013         	goto	u4400
 16795  002644  EF26  F013         
 16796                           u4401:
 16797  002648                     	goto	l883
 16798  002648  EF45  F013         u4400:
 16799  00264C                     	line	548
 16800                           	
 16801                           l5890:
 16802  00264C                     ;fifo.c: 547:     {;fifo.c: 548:         decodifica(&passo);
 16803                           		movlw	low(printExec@passo)
 16804  00264C  0E44               	movwf	((c:decodifica@d)),c
 16805  00264E  6E27               	movlw	high(printExec@passo)
 16806  002650  0E00               	movwf	((c:decodifica@d+1)),c
 16807  002652  6E28               
 16808                           	call	_decodifica	;wreg free
 16809  002654  ECCB  F014         	line	549
 16810                           	
 16811                           l5892:
 16812  002658                     ;fifo.c: 549:         dispLCD_num(0, col, (int)passo, dignum_tam( (int)passo) );
 16813                           	movff	(c:printExec@col),(c:dispLCD_num@col)
 16814  002658  C043  F032         	movff	(c:printExec@passo),(c:dispLCD_num@num)
 16815  00265C  C044  F033         	clrf	((c:dispLCD_num@num+1)),c
 16816  002660  6A34               	movff	(c:printExec@passo),(c:dignum_tam@num)
 16817  002662  C044  F02F         	clrf	((c:dignum_tam@num+1)),c
 16818  002666  6A30               	call	_dignum_tam	;wreg free
 16819  002668  ECE9  F01E         	movwf	((c:dispLCD_num@tam)),c
 16820  00266C  6E35               	movlw	(0)&0ffh
 16821  00266E  0E00               	
 16822                           	call	_dispLCD_num
 16823  002670  EC46  F013         	line	550
 16824                           	
 16825                           l5894:
 16826  002674                     ;fifo.c: 550:         dispLCD_dataReg('%');
 16827                           	movlw	(025h)&0ffh
 16828  002674  0E25               	
 16829                           	call	_dispLCD_dataReg
 16830  002676  EC9B  F01E         	goto	l883
 16831  00267A  EF45  F013         	line	551
 16832                           ;fifo.c: 551:     }
 16833                           	
 16834                           l882:
 16835  00267E                     	goto	l883
 16836  00267E  EF45  F013         	
 16837                           l881:
 16838  002682                     	goto	l883
 16839  002682  EF45  F013         	
 16840                           l875:
 16841  002686                     	goto	l883
 16842  002686  EF45  F013         	
 16843                           l872:
 16844  00268A                     	line	552
 16845                           	
 16846                           l883:
 16847  00268A                     	return	;funcret
 16848  00268A  0012               	opt stack 0
 16849                           GLOBAL	__end_of_printExec
 16850                           	__end_of_printExec:
 16851  00268C                     	signat	_printExec,8313
 16852                           	global	_posAtual
 16853                           
 16854 ;; *************** function _posAtual *****************
 16855 ;; Defined at:
 16856 ;;		line 512 in file "fifo.c"
 16857 ;; Parameters:    Size  Location     Type
 16858 ;;  ind             1    wreg     unsigned char 
 16859 ;; Auto vars:     Size  Location     Type
 16860 ;;  ind             1    1[COMRAM] unsigned char 
 16861 ;;  passo           1    2[COMRAM] unsigned char 
 16862 ;; Return value:  Size  Location     Type
 16863 ;;                  1    wreg      unsigned char 
 16864 ;; Registers used:
 16865 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16866 ;; Tracked objects:
 16867 ;;		On entry : 0/0
 16868 ;;		On exit  : 0/0
 16869 ;;		Unchanged: 0/0
 16870 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16871 ;;      Params:         0       0       0       0       0       0       0       0       0       0
 16872 ;;      Locals:         2       0       0       0       0       0       0       0       0       0
 16873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0
 16874 ;;      Totals:         2       0       0       0       0       0       0       0       0       0
 16875 ;;Total ram usage:        2 bytes
 16876 ;; Hardware stack levels used:    1
 16877 ;; Hardware stack levels required when called:    3
 16878 ;; This function calls:
 16879 ;;		_fifo_lerPos
 16880 ;;		_getIndicePassos
 16881 ;; This function is called by:
 16882 ;;		_printExec
 16883 ;; This function uses a non-reentrant model
 16884 ;;
 16885                           psect	text20,class=CODE,space=0,reloc=2,group=0
 16886                           	line	512
 16887                           global __ptext20
 16888                           __ptext20:
 16889  004248                     psect	text20
 16890                           	file	"fifo.c"
 16891                           	line	512
 16892                           	global	__size_of_posAtual
 16893                           	__size_of_posAtual	equ	__end_of_posAtual-_posAtual
 16894  0000                     	
 16895                           _posAtual:
 16896  004248                     ;incstack = 0
 16897                           	opt	stack 26
 16898                           ;posAtual@ind stored from wreg
 16899                           	movwf	((c:posAtual@ind)),c
 16900  004248  6E28               	line	514
 16901                           	
 16902                           l5346:
 16903  00424A                     ;fifo.c: 512: char posAtual(char ind);fifo.c: 513: {;fifo.c: 514:     char passo = 0;
 16904                           	movlw	low(0)
 16905  00424A  0E00               	movwf	((c:posAtual@passo)),c
 16906  00424C  6E29               	line	516
 16907                           	
 16908                           l5348:
 16909  00424E                     ;fifo.c: 516:     passo = fifo_lerPos( getIndicePassos() + ind );
 16910                           	call	_getIndicePassos	;wreg free
 16911  00424E  ECD0  F021         	addwf	((c:posAtual@ind)),c,w
 16912  004252  2428               	
 16913                           	call	_fifo_lerPos
 16914  004254  EC31  F021         	movwf	((c:posAtual@passo)),c
 16915  004258  6E29               	line	517
 16916                           	
 16917                           l5350:
 16918  00425A                     ;fifo.c: 517:     return(passo);
 16919                           	movf	((c:posAtual@passo)),c,w
 16920  00425A  5029               	goto	l867
 16921  00425C  EF30  F021         	
 16922                           l5352:
 16923  004260                     	line	518
 16924                           	
 16925                           l867:
 16926  004260                     	return	;funcret
 16927  004260  0012               	opt stack 0
 16928                           GLOBAL	__end_of_posAtual
 16929                           	__end_of_posAtual:
 16930  004262                     	signat	_posAtual,4217
 16931                           	global	_getIndicePassos
 16932                           
 16933 ;; *************** function _getIndicePassos *****************
 16934 ;; Defined at:
 16935 ;;		line 31 in file "fifo.c"
 16936 ;; Parameters:    Size  Location     Type
 16937 ;;		None
 16938 ;; Auto vars:     Size  Location     Type
 16939 ;;		None
 16940 ;; Return value:  Size  Location     Type
 16941 ;;                  1    wreg      unsigned char 
 16942 ;; Registers used:
 16943 ;;		wreg, status,2
 16944 ;; Tracked objects:
 16945 ;;		On entry : 0/0
 16946 ;;		On exit  : 0/0
 16947 ;;		Unchanged: 0/0
 16948 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16949 ;;      Params:         0       0       0       0       0       0       0       0       0       0
 16950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0
 16951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0
 16952 ;;      Totals:         0       0       0       0       0       0       0       0       0       0
 16953 ;;Total ram usage:        0 bytes
 16954 ;; Hardware stack levels used:    1
 16955 ;; Hardware stack levels required when called:    2
 16956 ;; This function calls:
 16957 ;;		Nothing
 16958 ;; This function is called by:
 16959 ;;		_main
 16960 ;;		_posAtual
 16961 ;; This function uses a non-reentrant model
 16962 ;;
 16963                           psect	text21,class=CODE,space=0,reloc=2,group=0
 16964                           	line	31
 16965                           global __ptext21
 16966                           __ptext21:
 16967  0043A0                     psect	text21
 16968                           	file	"fifo.c"
 16969                           	line	31
 16970                           	global	__size_of_getIndicePassos
 16971                           	__size_of_getIndicePassos	equ	__end_of_getIndicePassos-_getIndicePassos
 16972  0000                     	
 16973                           _getIndicePassos:
 16974  0043A0                     ;incstack = 0
 16975                           	opt	stack 26
 16976                           	line	33
 16977                           	
 16978                           l5052:
 16979  0043A0                     ;fifo.c: 33:     return(indice_passos);
 16980                           	movf	((c:_indice_passos)),c,w
 16981  0043A0  505B               	goto	l654
 16982  0043A2  EFD3  F021         	
 16983                           l5054:
 16984  0043A6                     	line	34
 16985                           	
 16986                           l654:
 16987  0043A6                     	return	;funcret
 16988  0043A6  0012               	opt stack 0
 16989                           GLOBAL	__end_of_getIndicePassos
 16990                           	__end_of_getIndicePassos:
 16991  0043A8                     	signat	_getIndicePassos,89
 16992                           	global	_fifo_lerPos
 16993                           
 16994 ;; *************** function _fifo_lerPos *****************
 16995 ;; Defined at:
 16996 ;;		line 168 in file "fifo.c"
 16997 ;; Parameters:    Size  Location     Type
 16998 ;;  i               1    wreg     unsigned char 
 16999 ;; Auto vars:     Size  Location     Type
 17000 ;;  i               1    0[COMRAM] unsigned char 
 17001 ;; Return value:  Size  Location     Type
 17002 ;;                  1    wreg      unsigned char 
 17003 ;; Registers used:
 17004 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 17005 ;; Tracked objects:
 17006 ;;		On entry : 0/0
 17007 ;;		On exit  : 0/0
 17008 ;;		Unchanged: 0/0
 17009 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17010 ;;      Params:         0       0       0       0       0       0       0       0       0       0
 17011 ;;      Locals:         1       0       0       0       0       0       0       0       0       0
 17012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0
 17013 ;;      Totals:         1       0       0       0       0       0       0       0       0       0
 17014 ;;Total ram usage:        1 bytes
 17015 ;; Hardware stack levels used:    1
 17016 ;; Hardware stack levels required when called:    2
 17017 ;; This function calls:
 17018 ;;		Nothing
 17019 ;; This function is called by:
 17020 ;;		_main
 17021 ;;		_posAtual
 17022 ;; This function uses a non-reentrant model
 17023 ;;
 17024                           psect	text22,class=CODE,space=0,reloc=2,group=0
 17025                           	line	168
 17026                           global __ptext22
 17027                           __ptext22:
 17028  004262                     psect	text22
 17029                           	file	"fifo.c"
 17030                           	line	168
 17031                           	global	__size_of_fifo_lerPos
 17032                           	__size_of_fifo_lerPos	equ	__end_of_fifo_lerPos-_fifo_lerPos
 17033  0000                     	
 17034                           _fifo_lerPos:
 17035  004262                     ;incstack = 0
 17036                           	opt	stack 26
 17037                           ;fifo_lerPos@i stored from wreg
 17038                           	movwf	((c:fifo_lerPos@i)),c
 17039  004262  6E27               	line	170
 17040                           	
 17041                           l5056:
 17042  004264                     ;fifo.c: 168: char fifo_lerPos(char i);fifo.c: 169: {;fifo.c: 170:     return ( fila[i] 
                                 );
 17043                           	movf	((c:fifo_lerPos@i)),c,w
 17044  004264  5027               	mullw	01h
 17045  004266  0D01               	movlw	low(_fila)
 17046  004268  0E15               	addwf	(prodl),c,w
 17047  00426A  24F3               	movwf	c:fsr2l
 17048  00426C  6ED9               	movlw	high(_fila)
 17049  00426E  0E00               	addwfc	prod+1,w
 17050  004270  20F4               	movwf	1+c:fsr2l
 17051  004272  6EDA               	movf	indf2,w
 17052  004274  50DF               	goto	l719
 17053  004276  EF3D  F021         	
 17054                           l5058:
 17055  00427A                     	line	171
 17056                           	
 17057                           l719:
 17058  00427A                     	return	;funcret
 17059  00427A  0012               	opt stack 0
 17060                           GLOBAL	__end_of_fifo_lerPos
 17061                           	__end_of_fifo_lerPos:
 17062  00427C                     	signat	_fifo_lerPos,4217
 17063                           	global	_dispLCD_num
 17064                           
 17065 ;; *************** function _dispLCD_num *****************
 17066 ;; Defined at:
 17067 ;;		line 201 in file "dispLCD4vias.c"
 17068 ;; Parameters:    Size  Location     Type
 17069 ;;  lin             1    wreg     unsigned char 
 17070 ;;  col             1   11[COMRAM] unsigned char 
 17071 ;;  num             2   12[COMRAM] int 
 17072 ;;  tam             1   14[COMRAM] unsigned char 
 17073 ;; Auto vars:     Size  Location     Type
 17074 ;;  lin             1   20[COMRAM] unsigned char 
 17075 ;;  div             2   23[COMRAM] int 
 17076 ;;  sinal           1   22[COMRAM] unsigned char 
 17077 ;;  size            1   21[COMRAM] unsigned char 
 17078 ;; Return value:  Size  Location     Type
 17079 ;;                  1    wreg      void 
 17080 ;; Registers used:
 17081 ;;		wreg, status,2, status,0, cstack
 17082 ;; Tracked objects:
 17083 ;;		On entry : 0/0
 17084 ;;		On exit  : 0/0
 17085 ;;		Unchanged: 0/0
 17086 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17087 ;;      Params:         4       0       0       0       0       0       0       0       0       0
 17088 ;;      Locals:         5       0       0       0       0       0       0       0       0       0
 17089 ;;      Temps:          5       0       0       0       0       0       0       0       0       0
 17090 ;;      Totals:        14       0       0       0       0       0       0       0       0       0
 17091 ;;Total ram usage:       14 bytes
 17092 ;; Hardware stack levels used:    1
 17093 ;; Hardware stack levels required when called:    4
 17094 ;; This function calls:
 17095 ;;		___awdiv
 17096 ;;		___awmod
 17097 ;;		_dispLCD_dataReg
 17098 ;;		_dispLCD_lincol
 17099 ;; This function is called by:
 17100 ;;		_printExec
 17101 ;;		_main
 17102 ;; This function uses a non-reentrant model
 17103 ;;
 17104                           psect	text23,class=CODE,space=0,reloc=2,group=0
 17105                           	file	"dispLCD4vias.c"
 17106                           	line	201
 17107                           global __ptext23
 17108                           __ptext23:
 17109  00268C                     psect	text23
 17110                           	file	"dispLCD4vias.c"
 17111                           	line	201
 17112                           	global	__size_of_dispLCD_num
 17113                           	__size_of_dispLCD_num	equ	__end_of_dispLCD_num-_dispLCD_num
 17114  0000                     	
 17115                           _dispLCD_num:
 17116  00268C                     ;incstack = 0
 17117                           	opt	stack 25
 17118                           ;dispLCD_num@lin stored from wreg
 17119                           	movwf	((c:dispLCD_num@lin)),c
 17120  00268C  6E3B               	line	208
 17121                           	
 17122                           l5204:
 17123  00268E                     ;dispLCD4vias.c: 201: void dispLCD_num( unsigned char lin, unsigned char col,;dispLCD4vi
                                 as.c: 202:                     int num, unsigned char tam );dispLCD4vias.c: 203: {;dispL
                                 CD4vias.c: 204:     int div;;dispLCD4vias.c: 205:     unsigned char size;;dispLCD4vias.c
                                 : 206:     char sinal;;dispLCD4vias.c: 208:     sinal = num < 0;
 17124                           	btfsc	((c:dispLCD_num@num+1)),c,7
 17125  00268E  BE34               	goto	u3551
 17126  002690  EF4C  F013         	goto	u3550
 17127  002694  EF4F  F013         
 17128                           u3551:
 17129  002698                     	movlw	1
 17130  002698  0E01               	goto	u3560
 17131  00269A  EF50  F013         u3550:
 17132  00269E                     	movlw	0
 17133  00269E  0E00               u3560:
 17134  0026A0                     	movwf	((c:dispLCD_num@sinal)),c
 17135  0026A0  6E3D               	line	209
 17136                           	
 17137                           l5206:
 17138  0026A2                     ;dispLCD4vias.c: 209:     if( sinal )
 17139                           	movf	((c:dispLCD_num@sinal)),c,w
 17140  0026A2  503D               	btfsc	status,2
 17141  0026A4  B4D8               	goto	u3571
 17142  0026A6  EF57  F013         	goto	u3570
 17143  0026AA  EF59  F013         u3571:
 17144  0026AE                     	goto	l5210
 17145  0026AE  EF5F  F013         u3570:
 17146  0026B2                     	line	210
 17147                           	
 17148                           l5208:
 17149  0026B2                     ;dispLCD4vias.c: 210:         num = (~num) + 1;
 17150                           	negf	((c:dispLCD_num@num)),c
 17151  0026B2  6C33               	comf	((c:dispLCD_num@num+1)),c
 17152  0026B4  1E34               	btfsc	status,0
 17153  0026B6  B0D8               	incf	((c:dispLCD_num@num+1)),c
 17154  0026B8  2A34               	goto	l5210
 17155  0026BA  EF5F  F013         	
 17156                           l526:
 17157  0026BE                     	line	212
 17158                           	
 17159                           l5210:
 17160  0026BE                     ;dispLCD4vias.c: 212:     dispLCD_lincol(lin, col);
 17161                           	movff	(c:dispLCD_num@col),(c:dispLCD_lincol@col)
 17162  0026BE  C032  F029         	movf	((c:dispLCD_num@lin)),c,w
 17163  0026C2  503B               	
 17164                           	call	_dispLCD_lincol
 17165  0026C4  EC8D  F01D         	line	214
 17166                           	
 17167                           l5212:
 17168  0026C8                     ;dispLCD4vias.c: 214:     div=10000;
 17169                           	movlw	high(02710h)
 17170  0026C8  0E27               	movwf	((c:dispLCD_num@div+1)),c
 17171  0026CA  6E3F               	movlw	low(02710h)
 17172  0026CC  0E10               	movwf	((c:dispLCD_num@div)),c
 17173  0026CE  6E3E               	line	215
 17174                           	
 17175                           l5214:
 17176  0026D0                     ;dispLCD4vias.c: 215:     size = 5;
 17177                           	movlw	low(05h)
 17178  0026D0  0E05               	movwf	((c:dispLCD_num@size)),c
 17179  0026D2  6E3C               	line	216
 17180                           ;dispLCD4vias.c: 216:     while( div >= 1 )
 17181                           	goto	l5222
 17182  0026D4  EF94  F013         	
 17183                           l528:
 17184  0026D8                     	line	218
 17185                           	
 17186                           l5216:
 17187  0026D8                     ;dispLCD4vias.c: 217:     {;dispLCD4vias.c: 218:         if( num/div == 0 )
 17188                           	movff	(c:dispLCD_num@num),(c:___awdiv@dividend)
 17189  0026D8  C033  F027         	movff	(c:dispLCD_num@num+1),(c:___awdiv@dividend+1)
 17190  0026DC  C034  F028         	movff	(c:dispLCD_num@div),(c:___awdiv@divisor)
 17191  0026E0  C03E  F029         	movff	(c:dispLCD_num@div+1),(c:___awdiv@divisor+1)
 17192  0026E4  C03F  F02A         	call	___awdiv	;wreg free
 17193  0026E8  ECB7  F017         	movf	(0+?___awdiv),c,w
 17194  0026EC  5027               iorwf	(1+?___awdiv),c,w
 17195  0026EE  1028               	btfss	status,2
 17196  0026F0  A4D8               	goto	u3581
 17197  0026F2  EF7D  F013         	goto	u3580
 17198  0026F6  EF7F  F013         
 17199                           u3581:
 17200  0026FA                     	goto	l5228
 17201  0026FA  EFAB  F013         u3580:
 17202  0026FE                     	line	219
 17203                           	
 17204                           l5218:
 17205  0026FE                     ;dispLCD4vias.c: 219:             --size;
 17206                           	decf	((c:dispLCD_num@size)),c
 17207  0026FE  063C               	goto	l5220
 17208  002700  EF84  F013         	line	220
 17209                           ;dispLCD4vias.c: 220:         else
 17210                           	
 17211                           l529:
 17212  002704                     	line	221
 17213                           ;dispLCD4vias.c: 221:             break;
 17214                           	goto	l5228
 17215  002704  EFAB  F013         	
 17216                           l530:
 17217  002708                     	line	222
 17218                           	
 17219                           l5220:
 17220  002708                     ;dispLCD4vias.c: 222:         div/=10;
 17221                           	movff	(c:dispLCD_num@div),(c:___awdiv@dividend)
 17222  002708  C03E  F027         	movff	(c:dispLCD_num@div+1),(c:___awdiv@dividend+1)
 17223  00270C  C03F  F028         	movlw	high(0Ah)
 17224  002710  0E00               	movwf	((c:___awdiv@divisor+1)),c
 17225  002712  6E2A               	movlw	low(0Ah)
 17226  002714  0E0A               	movwf	((c:___awdiv@divisor)),c
 17227  002716  6E29               	call	___awdiv	;wreg free
 17228  002718  ECB7  F017         	movff	0+?___awdiv,(c:dispLCD_num@div)
 17229  00271C  C027  F03E         	movff	1+?___awdiv,(c:dispLCD_num@div+1)
 17230  002720  C028  F03F         	goto	l5222
 17231  002724  EF94  F013         	line	223
 17232                           ;dispLCD4vias.c: 223:     }
 17233                           	
 17234                           l527:
 17235  002728                     	line	216
 17236                           	
 17237                           l5222:
 17238  002728                     ;dispLCD4vias.c: 216:     while( div >= 1 )
 17239                           	btfsc	((c:dispLCD_num@div+1)),c,7
 17240  002728  BE3F               	goto	u3590
 17241  00272A  EFA1  F013         	movf	((c:dispLCD_num@div+1)),c,w
 17242  00272E  503F               	bnz	u3591
 17243  002730  E106               	decf	((c:dispLCD_num@div)),c,w
 17244  002732  043E               	btfsc	status,0
 17245  002734  B0D8               	goto	u3591
 17246  002736  EF9F  F013         	goto	u3590
 17247  00273A  EFA1  F013         
 17248                           u3591:
 17249  00273E                     	goto	l5216
 17250  00273E  EF6C  F013         u3590:
 17251  002742                     	goto	l5228
 17252  002742  EFAB  F013         	
 17253                           l531:
 17254  002746                     	line	225
 17255                           ;dispLCD4vias.c: 225:     while( tam > (size+sinal) && tam > 1 )
 17256                           	goto	l5228
 17257  002746  EFAB  F013         	
 17258                           l533:
 17259  00274A                     	line	227
 17260                           	
 17261                           l5224:
 17262  00274A                     ;dispLCD4vias.c: 226:     {;dispLCD4vias.c: 227:         dispLCD_dataReg(' ');
 17263                           	movlw	(020h)&0ffh
 17264  00274A  0E20               	
 17265                           	call	_dispLCD_dataReg
 17266  00274C  EC9B  F01E         	line	228
 17267                           	
 17268                           l5226:
 17269  002750                     ;dispLCD4vias.c: 228:         --tam;
 17270                           	decf	((c:dispLCD_num@tam)),c
 17271  002750  0635               	goto	l5228
 17272  002752  EFAB  F013         	line	229
 17273                           ;dispLCD4vias.c: 229:     }
 17274                           	
 17275                           l532:
 17276  002756                     	line	225
 17277                           	
 17278                           l5228:
 17279  002756                     ;dispLCD4vias.c: 225:     while( tam > (size+sinal) && tam > 1 )
 17280                           	movf	((c:dispLCD_num@tam)),c,w
 17281  002756  5035               	movwf	(??_dispLCD_num+0+0)&0ffh,c
 17282  002758  6E36               	clrf	(??_dispLCD_num+0+0+1)&0ffh,c
 17283  00275A  6A37               
 17284                           	movf	((c:dispLCD_num@sinal)),c,w
 17285  00275C  503D               	movff	(c:dispLCD_num@size),??_dispLCD_num+2+0
 17286  00275E  C03C  F038         	clrf	(??_dispLCD_num+2+0+1)&0ffh,c
 17287  002762  6A39               	addwf	(??_dispLCD_num+2+0),c
 17288  002764  2638               	movlw	0
 17289  002766  0E00               	addwfc	(??_dispLCD_num+2+1),c
 17290  002768  2239               		movf	(??_dispLCD_num+0+0),c,w
 17291  00276A  5036               	subwf	(??_dispLCD_num+2+0),c,w
 17292  00276C  5C38               	movf	(??_dispLCD_num+2+1),c,w
 17293  00276E  5039               	xorlw	80h
 17294  002770  0A80               	movwf	(??_dispLCD_num+4+0)&0ffh,c
 17295  002772  6E3A               	movf	(??_dispLCD_num+0+1),c,w
 17296  002774  5037               	xorlw	80h
 17297  002776  0A80               	subwfb	(??_dispLCD_num+4+0)&0ffh,c,w
 17298  002778  583A               	btfsc	status,0
 17299  00277A  B0D8               	goto	u3601
 17300  00277C  EFC2  F013         	goto	u3600
 17301  002780  EFC4  F013         
 17302                           u3601:
 17303  002784                     	goto	l5232
 17304  002784  EFD0  F013         u3600:
 17305  002788                     	
 17306                           l5230:
 17307  002788                     		movlw	02h-0
 17308  002788  0E02               	cpfslt	((c:dispLCD_num@tam)),c
 17309  00278A  6035               	goto	u3611
 17310  00278C  EFCA  F013         	goto	u3610
 17311  002790  EFCC  F013         
 17312                           u3611:
 17313  002794                     	goto	l5224
 17314  002794  EFA5  F013         u3610:
 17315  002798                     	goto	l5232
 17316  002798  EFD0  F013         	
 17317                           l535:
 17318  00279C                     	goto	l5232
 17319  00279C  EFD0  F013         	
 17320                           l536:
 17321  0027A0                     	line	231
 17322                           	
 17323                           l5232:
 17324  0027A0                     ;dispLCD4vias.c: 231:     if( sinal )
 17325                           	movf	((c:dispLCD_num@sinal)),c,w
 17326  0027A0  503D               	btfsc	status,2
 17327  0027A2  B4D8               	goto	u3621
 17328  0027A4  EFD6  F013         	goto	u3620
 17329  0027A8  EFD8  F013         u3621:
 17330  0027AC                     	goto	l538
 17331  0027AC  EFDD  F013         u3620:
 17332  0027B0                     	line	232
 17333                           	
 17334                           l5234:
 17335  0027B0                     ;dispLCD4vias.c: 232:         dispLCD_dataReg('-');
 17336                           	movlw	(02Dh)&0ffh
 17337  0027B0  0E2D               	
 17338                           	call	_dispLCD_dataReg
 17339  0027B2  EC9B  F01E         	goto	l538
 17340  0027B6  EFDD  F013         	
 17341                           l537:
 17342  0027BA                     	line	234
 17343                           ;dispLCD4vias.c: 234:     do
 17344                           	
 17345                           l538:
 17346  0027BA                     	line	236
 17347                           ;dispLCD4vias.c: 235:     {;dispLCD4vias.c: 236:         dispLCD_dataReg( (num / div) + 
                                 '0' );
 17348                           	movff	(c:dispLCD_num@num),(c:___awdiv@dividend)
 17349  0027BA  C033  F027         	movff	(c:dispLCD_num@num+1),(c:___awdiv@dividend+1)
 17350  0027BE  C034  F028         	movff	(c:dispLCD_num@div),(c:___awdiv@divisor)
 17351  0027C2  C03E  F029         	movff	(c:dispLCD_num@div+1),(c:___awdiv@divisor+1)
 17352  0027C6  C03F  F02A         	call	___awdiv	;wreg free
 17353  0027CA  ECB7  F017         	movf	(0+?___awdiv),c,w
 17354  0027CE  5027               	addlw	low(030h)
 17355  0027D0  0F30               	
 17356                           	call	_dispLCD_dataReg
 17357  0027D2  EC9B  F01E         	line	237
 17358                           ;dispLCD4vias.c: 237:         num = num % div;
 17359                           	movff	(c:dispLCD_num@num),(c:___awmod@dividend)
 17360  0027D6  C033  F027         	movff	(c:dispLCD_num@num+1),(c:___awmod@dividend+1)
 17361  0027DA  C034  F028         	movff	(c:dispLCD_num@div),(c:___awmod@divisor)
 17362  0027DE  C03E  F029         	movff	(c:dispLCD_num@div+1),(c:___awmod@divisor+1)
 17363  0027E2  C03F  F02A         	call	___awmod	;wreg free
 17364  0027E6  EC12  F019         	movff	0+?___awmod,(c:dispLCD_num@num)
 17365  0027EA  C027  F033         	movff	1+?___awmod,(c:dispLCD_num@num+1)
 17366  0027EE  C028  F034         	line	238
 17367                           ;dispLCD4vias.c: 238:         div/=10;
 17368                           	movff	(c:dispLCD_num@div),(c:___awdiv@dividend)
 17369  0027F2  C03E  F027         	movff	(c:dispLCD_num@div+1),(c:___awdiv@dividend+1)
 17370  0027F6  C03F  F028         	movlw	high(0Ah)
 17371  0027FA  0E00               	movwf	((c:___awdiv@divisor+1)),c
 17372  0027FC  6E2A               	movlw	low(0Ah)
 17373  0027FE  0E0A               	movwf	((c:___awdiv@divisor)),c
 17374  002800  6E29               	call	___awdiv	;wreg free
 17375  002802  ECB7  F017         	movff	0+?___awdiv,(c:dispLCD_num@div)
 17376  002806  C027  F03E         	movff	1+?___awdiv,(c:dispLCD_num@div+1)
 17377  00280A  C028  F03F         	line	239
 17378                           	
 17379                           l5236:
 17380  00280E                     ;dispLCD4vias.c: 239:     }
 17381                           	btfsc	((c:dispLCD_num@div+1)),c,7
 17382  00280E  BE3F               	goto	u3630
 17383  002810  EF14  F014         	movf	((c:dispLCD_num@div+1)),c,w
 17384  002814  503F               	bnz	u3631
 17385  002816  E106               	decf	((c:dispLCD_num@div)),c,w
 17386  002818  043E               	btfsc	status,0
 17387  00281A  B0D8               	goto	u3631
 17388  00281C  EF12  F014         	goto	u3630
 17389  002820  EF14  F014         
 17390                           u3631:
 17391  002824                     	goto	l538
 17392  002824  EFDD  F013         u3630:
 17393  002828                     	goto	l540
 17394  002828  EF16  F014         	
 17395                           l539:
 17396  00282C                     	line	241
 17397                           	
 17398                           l540:
 17399  00282C                     	return	;funcret
 17400  00282C  0012               	opt stack 0
 17401                           GLOBAL	__end_of_dispLCD_num
 17402                           	__end_of_dispLCD_num:
 17403  00282E                     	signat	_dispLCD_num,16505
 17404                           	global	_manipula_atuadores_init
 17405                           
 17406 ;; *************** function _manipula_atuadores_init *****************
 17407 ;; Defined at:
 17408 ;;		line 137 in file "fifo.c"
 17409 ;; Parameters:    Size  Location     Type
 17410 ;;  aux             1    wreg     unsigned char 
 17411 ;; Auto vars:     Size  Location     Type
 17412 ;;  aux             1    4[COMRAM] unsigned char 
 17413 ;;  mask            1    5[COMRAM] unsigned char 
 17414 ;;  atuador         1    3[COMRAM] unsigned char 
 17415 ;; Return value:  Size  Location     Type
 17416 ;;                  1    wreg      void 
 17417 ;; Registers used:
 17418 ;;		wreg, status,2, status,0, cstack
 17419 ;; Tracked objects:
 17420 ;;		On entry : 0/0
 17421 ;;		On exit  : 0/0
 17422 ;;		Unchanged: 0/0
 17423 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17424 ;;      Params:         0       0       0       0       0       0       0       0       0       0
 17425 ;;      Locals:         3       0       0       0       0       0       0       0       0       0
 17426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0
 17427 ;;      Totals:         3       0       0       0       0       0       0       0       0       0
 17428 ;;Total ram usage:        3 bytes
 17429 ;; Hardware stack levels used:    1
 17430 ;; Hardware stack levels required when called:    3
 17431 ;; This function calls:
 17432 ;;		_alt_atuador
 17433 ;; This function is called by:
 17434 ;;		_main
 17435 ;; This function uses a non-reentrant model
 17436 ;;
 17437                           psect	text24,class=CODE,space=0,reloc=2,group=0
 17438                           	file	"fifo.c"
 17439                           	line	137
 17440                           global __ptext24
 17441                           __ptext24:
 17442  003916                     psect	text24
 17443                           	file	"fifo.c"
 17444                           	line	137
 17445                           	global	__size_of_manipula_atuadores_init
 17446                           	__size_of_manipula_atuadores_init	equ	__end_of_manipula_atuadores_init-_manipula_atuado
                                 res_init
 17447  0000                     	
 17448                           _manipula_atuadores_init:
 17449  003916                     ;incstack = 0
 17450                           	opt	stack 27
 17451                           ;manipula_atuadores_init@aux stored from wreg
 17452                           	movwf	((c:manipula_atuadores_init@aux)),c
 17453  003916  6E2B               	line	139
 17454                           	
 17455                           l5576:
 17456  003918                     ;fifo.c: 137: void manipula_atuadores_init(char aux);fifo.c: 138: {;fifo.c: 139:     cha
                                 r mask = 0x08;
 17457                           	movlw	low(08h)
 17458  003918  0E08               	movwf	((c:manipula_atuadores_init@mask)),c
 17459  00391A  6E2C               	line	140
 17460                           ;fifo.c: 140:     char atuador = 0x41;
 17461                           	movlw	low(041h)
 17462  00391C  0E41               	movwf	((c:manipula_atuadores_init@atuador)),c
 17463  00391E  6E2A               	line	142
 17464                           	
 17465                           l5578:
 17466  003920                     ;fifo.c: 142:     if(aux ==0xFF)
 17467                           		incf	((c:manipula_atuadores_init@aux)),c,w
 17468  003920  282B               	btfss	status,2
 17469  003922  A4D8               	goto	u3961
 17470  003924  EF96  F01C         	goto	u3960
 17471  003928  EF98  F01C         
 17472                           u3961:
 17473  00392C                     	goto	l5590
 17474  00392C  EFB2  F01C         u3960:
 17475  003930                     	goto	l711
 17476  003930  EFBE  F01C         	line	145
 17477                           	
 17478                           l5580:
 17479  003934                     ;fifo.c: 143:     {;fifo.c: 145:     }
 17480                           	goto	l711
 17481  003934  EFBE  F01C         	line	146
 17482                           ;fifo.c: 146:     else
 17483                           	
 17484                           l705:
 17485  003938                     	line	147
 17486                           ;fifo.c: 147:         while(mask)
 17487                           	goto	l5590
 17488  003938  EFB2  F01C         	
 17489                           l708:
 17490  00393C                     	line	150
 17491                           	
 17492                           l5582:
 17493  00393C                     ;fifo.c: 148:         {;fifo.c: 150:             if(aux & mask)
 17494                           	movf	((c:manipula_atuadores_init@aux)),c,w
 17495  00393C  502B               	andwf	((c:manipula_atuadores_init@mask)),c,w
 17496  00393E  142C               	iorlw	0
 17497  003940  0900               	btfsc	status,2
 17498  003942  B4D8               	goto	u3971
 17499  003944  EFA6  F01C         	goto	u3970
 17500  003948  EFA8  F01C         u3971:
 17501  00394C                     	goto	l5586
 17502  00394C  EFAD  F01C         u3970:
 17503  003950                     	line	152
 17504                           	
 17505                           l5584:
 17506  003950                     ;fifo.c: 151:             {;fifo.c: 152:                 alt_atuador(atuador);
 17507                           	movf	((c:manipula_atuadores_init@atuador)),c,w
 17508  003950  502A               	
 17509                           	call	_alt_atuador
 17510  003952  EC94  F01A         	goto	l5586
 17511  003956  EFAD  F01C         	line	153
 17512                           ;fifo.c: 153:             }
 17513                           	
 17514                           l709:
 17515  00395A                     	line	154
 17516                           	
 17517                           l5586:
 17518  00395A                     ;fifo.c: 154:             atuador++;
 17519                           	incf	((c:manipula_atuadores_init@atuador)),c
 17520  00395A  2A2A               	line	155
 17521                           	
 17522                           l5588:
 17523  00395C                     ;fifo.c: 155:             mask >>= 1;
 17524                           	bcf status,0
 17525  00395C  90D8               	rrcf	((c:manipula_atuadores_init@mask)),c
 17526  00395E  322C               
 17527                           	goto	l5590
 17528  003960  EFB2  F01C         	line	156
 17529                           ;fifo.c: 156:         }
 17530                           	
 17531                           l707:
 17532  003964                     	line	147
 17533                           	
 17534                           l5590:
 17535  003964                     ;fifo.c: 147:         while(mask)
 17536                           	movf	((c:manipula_atuadores_init@mask)),c,w
 17537  003964  502C               	btfss	status,2
 17538  003966  A4D8               	goto	u3981
 17539  003968  EFB8  F01C         	goto	u3980
 17540  00396C  EFBA  F01C         u3981:
 17541  003970                     	goto	l5582
 17542  003970  EF9E  F01C         u3980:
 17543  003974                     	goto	l711
 17544  003974  EFBE  F01C         	
 17545                           l710:
 17546  003978                     	goto	l711
 17547  003978  EFBE  F01C         	line	156
 17548                           ;fifo.c: 156:         }
 17549                           	
 17550                           l706:
 17551  00397C                     	line	157
 17552                           	
 17553                           l711:
 17554  00397C                     	return	;funcret
 17555  00397C  0012               	opt stack 0
 17556                           GLOBAL	__end_of_manipula_atuadores_init
 17557                           	__end_of_manipula_atuadores_init:
 17558  00397E                     	signat	_manipula_atuadores_init,4217
 17559                           	global	_ler_sensor
 17560                           
 17561 ;; *************** function _ler_sensor *****************
 17562 ;; Defined at:
 17563 ;;		line 68 in file "atuadores.c"
 17564 ;; Parameters:    Size  Location     Type
 17565 ;;  passo           1    wreg     unsigned char 
 17566 ;;  ptr             2    0[COMRAM] PTR unsigned char 
 17567 ;;		 -> main@vetorIn(1), 
 17568 ;; Auto vars:     Size  Location     Type
 17569 ;;  passo           1    4[COMRAM] unsigned char 
 17570 ;; Return value:  Size  Location     Type
 17571 ;;                  1    wreg      unsigned char 
 17572 ;; Registers used:
 17573 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17574 ;; Tracked objects:
 17575 ;;		On entry : 0/0
 17576 ;;		On exit  : 0/0
 17577 ;;		Unchanged: 0/0
 17578 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17579 ;;      Params:         2       0       0       0       0       0       0       0       0       0
 17580 ;;      Locals:         1       0       0       0       0       0       0       0       0       0
 17581 ;;      Temps:          2       0       0       0       0       0       0       0       0       0
 17582 ;;      Totals:         5       0       0       0       0       0       0       0       0       0
 17583 ;;Total ram usage:        5 bytes
 17584 ;; Hardware stack levels used:    1
 17585 ;; Hardware stack levels required when called:    2
 17586 ;; This function calls:
 17587 ;;		Nothing
 17588 ;; This function is called by:
 17589 ;;		_main
 17590 ;; This function uses a non-reentrant model
 17591 ;;
 17592                           psect	text25,class=CODE,space=0,reloc=2,group=0
 17593                           	file	"atuadores.c"
 17594                           	line	68
 17595                           global __ptext25
 17596                           __ptext25:
 17597  002AEA                     psect	text25
 17598                           	file	"atuadores.c"
 17599                           	line	68
 17600                           	global	__size_of_ler_sensor
 17601                           	__size_of_ler_sensor	equ	__end_of_ler_sensor-_ler_sensor
 17602  0000                     	
 17603                           _ler_sensor:
 17604  002AEA                     ;incstack = 0
 17605                           	opt	stack 28
 17606                           ;ler_sensor@passo stored from wreg
 17607                           	movwf	((c:ler_sensor@passo)),c
 17608  002AEA  6E2B               	line	70
 17609                           	
 17610                           l5956:
 17611  002AEC                     ;atuadores.c: 68: char ler_sensor(char passo, char* ptr);atuadores.c: 69: {;atuadores.c:
                                  70:     switch (passo)
 17612                           	goto	l6014
 17613  002AEC  EFE1  F015         	line	72
 17614                           ;atuadores.c: 71:     {;atuadores.c: 72:         case 'A': return(*ptr & 0x02); break;
 17615                           	
 17616                           l463:
 17617  002AF0                     	
 17618                           l5958:
 17619  002AF0                     	movff	(c:ler_sensor@ptr),fsr2l
 17620  002AF0  C027  FFD9         	movff	(c:ler_sensor@ptr+1),fsr2h
 17621  002AF4  C028  FFDA         	movf	indf2,w
 17622  002AF8  50DF               	andlw	low(02h)
 17623  002AFA  0B02               	goto	l464
 17624  002AFC  EF0E  F016         	
 17625                           l5960:
 17626  002B00                     	goto	l464
 17627  002B00  EF0E  F016         	
 17628                           l5962:
 17629  002B04                     	goto	l464
 17630  002B04  EF0E  F016         	line	73
 17631                           ;atuadores.c: 73:         case 'a': return(*ptr & 0x01); break;
 17632                           	
 17633                           l466:
 17634  002B08                     	
 17635                           l5964:
 17636  002B08                     	movff	(c:ler_sensor@ptr),fsr2l
 17637  002B08  C027  FFD9         	movff	(c:ler_sensor@ptr+1),fsr2h
 17638  002B0C  C028  FFDA         	movf	indf2,w
 17639  002B10  50DF               	andlw	low(01h)
 17640  002B12  0B01               	goto	l464
 17641  002B14  EF0E  F016         	
 17642                           l5966:
 17643  002B18                     	goto	l464
 17644  002B18  EF0E  F016         	
 17645                           l5968:
 17646  002B1C                     	goto	l464
 17647  002B1C  EF0E  F016         	line	74
 17648                           ;atuadores.c: 74:         case 'B': return(*ptr & 0x08); break;
 17649                           	
 17650                           l467:
 17651  002B20                     	
 17652                           l5970:
 17653  002B20                     	movff	(c:ler_sensor@ptr),fsr2l
 17654  002B20  C027  FFD9         	movff	(c:ler_sensor@ptr+1),fsr2h
 17655  002B24  C028  FFDA         	movf	indf2,w
 17656  002B28  50DF               	andlw	low(08h)
 17657  002B2A  0B08               	goto	l464
 17658  002B2C  EF0E  F016         	
 17659                           l5972:
 17660  002B30                     	goto	l464
 17661  002B30  EF0E  F016         	
 17662                           l5974:
 17663  002B34                     	goto	l464
 17664  002B34  EF0E  F016         	line	75
 17665                           ;atuadores.c: 75:         case 'b': return(*ptr & 0x04); break;
 17666                           	
 17667                           l468:
 17668  002B38                     	
 17669                           l5976:
 17670  002B38                     	movff	(c:ler_sensor@ptr),fsr2l
 17671  002B38  C027  FFD9         	movff	(c:ler_sensor@ptr+1),fsr2h
 17672  002B3C  C028  FFDA         	movf	indf2,w
 17673  002B40  50DF               	andlw	low(04h)
 17674  002B42  0B04               	goto	l464
 17675  002B44  EF0E  F016         	
 17676                           l5978:
 17677  002B48                     	goto	l464
 17678  002B48  EF0E  F016         	
 17679                           l5980:
 17680  002B4C                     	goto	l464
 17681  002B4C  EF0E  F016         	line	76
 17682                           ;atuadores.c: 76:         case 'C': return(*ptr & 0x20); break;
 17683                           	
 17684                           l469:
 17685  002B50                     	
 17686                           l5982:
 17687  002B50                     	movff	(c:ler_sensor@ptr),fsr2l
 17688  002B50  C027  FFD9         	movff	(c:ler_sensor@ptr+1),fsr2h
 17689  002B54  C028  FFDA         	movf	indf2,w
 17690  002B58  50DF               	andlw	low(020h)
 17691  002B5A  0B20               	goto	l464
 17692  002B5C  EF0E  F016         	
 17693                           l5984:
 17694  002B60                     	goto	l464
 17695  002B60  EF0E  F016         	
 17696                           l5986:
 17697  002B64                     	goto	l464
 17698  002B64  EF0E  F016         	line	77
 17699                           ;atuadores.c: 77:         case 'c': return(*ptr & 0x10); break;
 17700                           	
 17701                           l470:
 17702  002B68                     	
 17703                           l5988:
 17704  002B68                     	movff	(c:ler_sensor@ptr),fsr2l
 17705  002B68  C027  FFD9         	movff	(c:ler_sensor@ptr+1),fsr2h
 17706  002B6C  C028  FFDA         	movf	indf2,w
 17707  002B70  50DF               	andlw	low(010h)
 17708  002B72  0B10               	goto	l464
 17709  002B74  EF0E  F016         	
 17710                           l5990:
 17711  002B78                     	goto	l464
 17712  002B78  EF0E  F016         	
 17713                           l5992:
 17714  002B7C                     	goto	l464
 17715  002B7C  EF0E  F016         	line	78
 17716                           ;atuadores.c: 78:         case 'D': return(*ptr & 0x80); break;
 17717                           	
 17718                           l471:
 17719  002B80                     	
 17720                           l5994:
 17721  002B80                     	movff	(c:ler_sensor@ptr),fsr2l
 17722  002B80  C027  FFD9         	movff	(c:ler_sensor@ptr+1),fsr2h
 17723  002B84  C028  FFDA         	movf	indf2,w
 17724  002B88  50DF               	andlw	low(080h)
 17725  002B8A  0B80               	goto	l464
 17726  002B8C  EF0E  F016         	
 17727                           l5996:
 17728  002B90                     	goto	l464
 17729  002B90  EF0E  F016         	
 17730                           l5998:
 17731  002B94                     	goto	l464
 17732  002B94  EF0E  F016         	line	79
 17733                           ;atuadores.c: 79:         case 'd': return(*ptr & 0x40); break;
 17734                           	
 17735                           l472:
 17736  002B98                     	
 17737                           l6000:
 17738  002B98                     	movff	(c:ler_sensor@ptr),fsr2l
 17739  002B98  C027  FFD9         	movff	(c:ler_sensor@ptr+1),fsr2h
 17740  002B9C  C028  FFDA         	movf	indf2,w
 17741  002BA0  50DF               	andlw	low(040h)
 17742  002BA2  0B40               	goto	l464
 17743  002BA4  EF0E  F016         	
 17744                           l6002:
 17745  002BA8                     	goto	l464
 17746  002BA8  EF0E  F016         	
 17747                           l6004:
 17748  002BAC                     	goto	l464
 17749  002BAC  EF0E  F016         	line	80
 17750                           ;atuadores.c: 80:         default: return( 0 ); break;
 17751                           	
 17752                           l473:
 17753  002BB0                     	
 17754                           l6006:
 17755  002BB0                     	movlw	(0)&0ffh
 17756  002BB0  0E00               	goto	l464
 17757  002BB2  EF0E  F016         	
 17758                           l6008:
 17759  002BB6                     	goto	l464
 17760  002BB6  EF0E  F016         	
 17761                           l6010:
 17762  002BBA                     	goto	l464
 17763  002BBA  EF0E  F016         	line	81
 17764                           	
 17765                           l6012:
 17766  002BBE                     ;atuadores.c: 81:     }
 17767                           	goto	l464
 17768  002BBE  EF0E  F016         	
 17769                           l462:
 17770  002BC2                     	
 17771                           l6014:
 17772  002BC2                     	movf	((c:ler_sensor@passo)),c,w
 17773  002BC2  502B               	movwf	(??_ler_sensor+0+0)&0ffh,c
 17774  002BC4  6E29               	clrf	(??_ler_sensor+0+0+1)&0ffh,c
 17775  002BC6  6A2A               
 17776                           	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
 17777                           ; Switch size 1, requested type "space"
 17778                           ; Number of cases is 1, Range of values is 0 to 0
 17779                           ; switch strategies available:
 17780                           ; Name         Instructions Cycles
 17781                           ; simple_byte            4     3 (average)
 17782                           ;	Chosen strategy is simple_byte
 17783                           
 17784                           	movf ??_ler_sensor+0+1,c,w
 17785  002BC8  502A               	xorlw	0^0	; case 0
 17786  002BCA  0A00               	skipnz
 17787  002BCC  B4D8               	goto	l7848
 17788  002BCE  EFEB  F015         	goto	l6006
 17789  002BD2  EFD8  F015         	
 17790                           l7848:
 17791  002BD6                     ; Switch size 1, requested type "space"
 17792                           ; Number of cases is 8, Range of values is 65 to 100
 17793                           ; switch strategies available:
 17794                           ; Name         Instructions Cycles
 17795                           ; simple_byte           25    13 (average)
 17796                           ;	Chosen strategy is simple_byte
 17797                           
 17798                           	movf ??_ler_sensor+0+0,c,w
 17799  002BD6  5029               	xorlw	65^0	; case 65
 17800  002BD8  0A41               	skipnz
 17801  002BDA  B4D8               	goto	l5958
 17802  002BDC  EF78  F015         	xorlw	66^65	; case 66
 17803  002BE0  0A03               	skipnz
 17804  002BE2  B4D8               	goto	l5970
 17805  002BE4  EF90  F015         	xorlw	67^66	; case 67
 17806  002BE8  0A01               	skipnz
 17807  002BEA  B4D8               	goto	l5982
 17808  002BEC  EFA8  F015         	xorlw	68^67	; case 68
 17809  002BF0  0A07               	skipnz
 17810  002BF2  B4D8               	goto	l5994
 17811  002BF4  EFC0  F015         	xorlw	97^68	; case 97
 17812  002BF8  0A25               	skipnz
 17813  002BFA  B4D8               	goto	l5964
 17814  002BFC  EF84  F015         	xorlw	98^97	; case 98
 17815  002C00  0A03               	skipnz
 17816  002C02  B4D8               	goto	l5976
 17817  002C04  EF9C  F015         	xorlw	99^98	; case 99
 17818  002C08  0A01               	skipnz
 17819  002C0A  B4D8               	goto	l5988
 17820  002C0C  EFB4  F015         	xorlw	100^99	; case 100
 17821  002C10  0A07               	skipnz
 17822  002C12  B4D8               	goto	l6000
 17823  002C14  EFCC  F015         	goto	l6006
 17824  002C18  EFD8  F015         
 17825                           	
 17826                           l465:
 17827  002C1C                     	line	83
 17828                           	
 17829                           l464:
 17830  002C1C                     	return	;funcret
 17831  002C1C  0012               	opt stack 0
 17832                           GLOBAL	__end_of_ler_sensor
 17833                           	__end_of_ler_sensor:
 17834  002C1E                     	signat	_ler_sensor,8313
 17835                           	global	_init_atuadores
 17836                           
 17837 ;; *************** function _init_atuadores *****************
 17838 ;; Defined at:
 17839 ;;		line 103 in file "fifo.c"
 17840 ;; Parameters:    Size  Location     Type
 17841 ;;		None
 17842 ;; Auto vars:     Size  Location     Type
 17843 ;;		None
 17844 ;; Return value:  Size  Location     Type
 17845 ;;                  1    wreg      void 
 17846 ;; Registers used:
 17847 ;;		None
 17848 ;; Tracked objects:
 17849 ;;		On entry : 0/0
 17850 ;;		On exit  : 0/0
 17851 ;;		Unchanged: 0/0
 17852 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17853 ;;      Params:         0       0       0       0       0       0       0       0       0       0
 17854 ;;      Locals:         0       0       0       0       0       0       0       0       0       0
 17855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0
 17856 ;;      Totals:         0       0       0       0       0       0       0       0       0       0
 17857 ;;Total ram usage:        0 bytes
 17858 ;; Hardware stack levels used:    1
 17859 ;; Hardware stack levels required when called:    2
 17860 ;; This function calls:
 17861 ;;		Nothing
 17862 ;; This function is called by:
 17863 ;;		_main
 17864 ;; This function uses a non-reentrant model
 17865 ;;
 17866                           psect	text26,class=CODE,space=0,reloc=2,group=0
 17867                           	file	"fifo.c"
 17868                           	line	103
 17869                           global __ptext26
 17870                           __ptext26:
 17871  004382                     psect	text26
 17872                           	file	"fifo.c"
 17873                           	line	103
 17874                           	global	__size_of_init_atuadores
 17875                           	__size_of_init_atuadores	equ	__end_of_init_atuadores-_init_atuadores
 17876  0000                     	
 17877                           _init_atuadores:
 17878  004382                     ;incstack = 0
 17879                           	opt	stack 28
 17880                           	line	105
 17881                           	
 17882                           l5556:
 17883  004382                     ;fifo.c: 105:     atuador.A = 0;
 17884                           	bcf	((c:_atuador)),c,0
 17885  004382  9013               	line	106
 17886                           ;fifo.c: 106:     atuador.B = 0;
 17887                           	bcf	((c:_atuador)),c,1
 17888  004384  9213               	line	107
 17889                           ;fifo.c: 107:     atuador.C = 0;
 17890                           	bcf	((c:_atuador)),c,2
 17891  004386  9413               	line	108
 17892                           ;fifo.c: 108:     atuador.D = 0;
 17893                           	bcf	((c:_atuador)),c,3
 17894  004388  9613               	line	109
 17895                           	
 17896                           l693:
 17897  00438A                     	return	;funcret
 17898  00438A  0012               	opt stack 0
 17899                           GLOBAL	__end_of_init_atuadores
 17900                           	__end_of_init_atuadores:
 17901  00438C                     	signat	_init_atuadores,89
 17902                           	global	_initSerialIO
 17903                           
 17904 ;; *************** function _initSerialIO *****************
 17905 ;; Defined at:
 17906 ;;		line 89 in file "serialIO.c"
 17907 ;; Parameters:    Size  Location     Type
 17908 ;;  ptrIn           2    0[COMRAM] PTR unsigned char 
 17909 ;;		 -> main@vetorIn(1), 
 17910 ;;  ptrOut          2    2[COMRAM] PTR unsigned char 
 17911 ;;		 -> main@vetorOut(1), 
 17912 ;;  length          1    4[COMRAM] unsigned char 
 17913 ;; Auto vars:     Size  Location     Type
 17914 ;;		None
 17915 ;; Return value:  Size  Location     Type
 17916 ;;                  1    wreg      void 
 17917 ;; Registers used:
 17918 ;;		wreg, status,2, status,0
 17919 ;; Tracked objects:
 17920 ;;		On entry : 0/0
 17921 ;;		On exit  : 0/0
 17922 ;;		Unchanged: 0/0
 17923 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17924 ;;      Params:         5       0       0       0       0       0       0       0       0       0
 17925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0
 17926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0
 17927 ;;      Totals:         5       0       0       0       0       0       0       0       0       0
 17928 ;;Total ram usage:        5 bytes
 17929 ;; Hardware stack levels used:    1
 17930 ;; Hardware stack levels required when called:    2
 17931 ;; This function calls:
 17932 ;;		Nothing
 17933 ;; This function is called by:
 17934 ;;		_main
 17935 ;; This function uses a non-reentrant model
 17936 ;;
 17937                           psect	text27,class=CODE,space=0,reloc=2,group=0
 17938                           	file	"serialIO.c"
 17939                           	line	89
 17940                           global __ptext27
 17941                           __ptext27:
 17942  0040B6                     psect	text27
 17943                           	file	"serialIO.c"
 17944                           	line	89
 17945                           	global	__size_of_initSerialIO
 17946                           	__size_of_initSerialIO	equ	__end_of_initSerialIO-_initSerialIO
 17947  0000                     	
 17948                           _initSerialIO:
 17949  0040B6                     ;incstack = 0
 17950                           	opt	stack 28
 17951                           	line	91
 17952                           	
 17953                           l5524:
 17954  0040B6                     ;serialIO.c: 89: void initSerialIO( char * ptrIn, char * ptrOut, unsigned char length );
                                 serialIO.c: 90: {;serialIO.c: 91:     ADCON1 = 0xFF;
 17955                           	setf	((c:4033)),c	;volatile
 17956  0040B6  68C1               	line	93
 17957                           	
 17958                           l5526:
 17959  0040B8                     ;serialIO.c: 93:     ptrSerialIn = ptrIn;
 17960                           		movff	(c:initSerialIO@ptrIn),(c:_ptrSerialIn)
 17961  0040B8  C027  F00B         	movff	(c:initSerialIO@ptrIn+1),(c:_ptrSerialIn+1)
 17962  0040BC  C028  F00C         
 17963                           	line	94
 17964                           ;serialIO.c: 94:     ptrSerialOut = ptrOut;
 17965                           		movff	(c:initSerialIO@ptrOut),(c:_ptrSerialOut)
 17966  0040C0  C029  F009         	movff	(c:initSerialIO@ptrOut+1),(c:_ptrSerialOut+1)
 17967  0040C4  C02A  F00A         
 17968                           	line	95
 17969                           	
 17970                           l5528:
 17971  0040C8                     ;serialIO.c: 95:     lenSerialIO = length;
 17972                           	movff	(c:initSerialIO@length),(c:_lenSerialIO)
 17973  0040C8  C02B  F012         	line	97
 17974                           	
 17975                           l5530:
 17976  0040CC                     ;serialIO.c: 97:     PORTAbits.RA3 = 0;
 17977                           	bcf	((c:3968)),c,3	;volatile
 17978  0040CC  9680               	line	99
 17979                           	
 17980                           l5532:
 17981  0040CE                     ;serialIO.c: 99:     TRISAbits.TRISA3 = 0;
 17982                           	bcf	((c:3986)),c,3	;volatile
 17983  0040CE  9692               	line	102
 17984                           	
 17985                           l5534:
 17986  0040D0                     ;serialIO.c: 102:     PORTAbits.RA2 = 0;
 17987                           	bcf	((c:3968)),c,2	;volatile
 17988  0040D0  9480               	line	104
 17989                           	
 17990                           l5536:
 17991  0040D2                     ;serialIO.c: 104:     TRISAbits.TRISA2 = 0;
 17992                           	bcf	((c:3986)),c,2	;volatile
 17993  0040D2  9492               	line	107
 17994                           	
 17995                           l5538:
 17996  0040D4                     ;serialIO.c: 107:     PORTAbits.RA0 = 0;
 17997                           	bcf	((c:3968)),c,0	;volatile
 17998  0040D4  9080               	line	109
 17999                           	
 18000                           l5540:
 18001  0040D6                     ;serialIO.c: 109:     TRISAbits.TRISA0 = 0;
 18002                           	bcf	((c:3986)),c,0	;volatile
 18003  0040D6  9092               	line	112
 18004                           	
 18005                           l5542:
 18006  0040D8                     ;serialIO.c: 112:     PORTAbits.RA1 = 0;
 18007                           	bcf	((c:3968)),c,1	;volatile
 18008  0040D8  9280               	line	114
 18009                           	
 18010                           l5544:
 18011  0040DA                     ;serialIO.c: 114:     TRISAbits.TRISA1 = 1;
 18012                           	bsf	((c:3986)),c,1	;volatile
 18013  0040DA  8292               	line	117
 18014                           	
 18015                           l5546:
 18016  0040DC                     ;serialIO.c: 117:     SERIALIO.CLK = 0;
 18017                           	bcf	((c:3968)),c,2	;volatile
 18018  0040DC  9480               	line	118
 18019                           	
 18020                           l5548:
 18021  0040DE                     ;serialIO.c: 118:     SERIALIO.OUT = 0;
 18022                           	bcf	((c:3968)),c,0	;volatile
 18023  0040DE  9080               	line	119
 18024                           	
 18025                           l5550:
 18026  0040E0                     ;serialIO.c: 119:     SERIALIO.SHLD = 1;
 18027                           	bsf	((c:3968)),c,3	;volatile
 18028  0040E0  8680               	line	120
 18029                           	
 18030                           l940:
 18031  0040E2                     	return	;funcret
 18032  0040E2  0012               	opt stack 0
 18033                           GLOBAL	__end_of_initSerialIO
 18034                           	__end_of_initSerialIO:
 18035  0040E4                     	signat	_initSerialIO,12409
 18036                           	global	_getContCiclos
 18037                           
 18038 ;; *************** function _getContCiclos *****************
 18039 ;; Defined at:
 18040 ;;		line 49 in file "fifo.c"
 18041 ;; Parameters:    Size  Location     Type
 18042 ;;		None
 18043 ;; Auto vars:     Size  Location     Type
 18044 ;;		None
 18045 ;; Return value:  Size  Location     Type
 18046 ;;                  2    0[COMRAM] unsigned int 
 18047 ;; Registers used:
 18048 ;;		None
 18049 ;; Tracked objects:
 18050 ;;		On entry : 0/0
 18051 ;;		On exit  : 0/0
 18052 ;;		Unchanged: 0/0
 18053 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18054 ;;      Params:         2       0       0       0       0       0       0       0       0       0
 18055 ;;      Locals:         0       0       0       0       0       0       0       0       0       0
 18056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0
 18057 ;;      Totals:         2       0       0       0       0       0       0       0       0       0
 18058 ;;Total ram usage:        2 bytes
 18059 ;; Hardware stack levels used:    1
 18060 ;; Hardware stack levels required when called:    2
 18061 ;; This function calls:
 18062 ;;		Nothing
 18063 ;; This function is called by:
 18064 ;;		_main
 18065 ;; This function uses a non-reentrant model
 18066 ;;
 18067                           psect	text28,class=CODE,space=0,reloc=2,group=0
 18068                           	file	"fifo.c"
 18069                           	line	49
 18070                           global __ptext28
 18071                           __ptext28:
 18072  00438C                     psect	text28
 18073                           	file	"fifo.c"
 18074                           	line	49
 18075                           	global	__size_of_getContCiclos
 18076                           	__size_of_getContCiclos	equ	__end_of_getContCiclos-_getContCiclos
 18077  0000                     	
 18078                           _getContCiclos:
 18079  00438C                     ;incstack = 0
 18080                           	opt	stack 28
 18081                           	line	51
 18082                           	
 18083                           l5896:
 18084  00438C                     ;fifo.c: 51:     return(cont_ciclos);
 18085                           	movff	(c:_cont_ciclos),(c:?_getContCiclos)
 18086  00438C  C00D  F027         	movff	(c:_cont_ciclos+1),(c:?_getContCiclos+1)
 18087  004390  C00E  F028         	line	52
 18088                           	
 18089                           l663:
 18090  004394                     	return	;funcret
 18091  004394  0012               	opt stack 0
 18092                           GLOBAL	__end_of_getContCiclos
 18093                           	__end_of_getContCiclos:
 18094  004396                     	signat	_getContCiclos,90
 18095                           	global	_getCiclos
 18096                           
 18097 ;; *************** function _getCiclos *****************
 18098 ;; Defined at:
 18099 ;;		line 41 in file "fifo.c"
 18100 ;; Parameters:    Size  Location     Type
 18101 ;;		None
 18102 ;; Auto vars:     Size  Location     Type
 18103 ;;  aux             2    2[COMRAM] int 
 18104 ;; Return value:  Size  Location     Type
 18105 ;;                  2    0[COMRAM] unsigned int 
 18106 ;; Registers used:
 18107 ;;		wreg, status,2, status,0
 18108 ;; Tracked objects:
 18109 ;;		On entry : 0/0
 18110 ;;		On exit  : 0/0
 18111 ;;		Unchanged: 0/0
 18112 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18113 ;;      Params:         2       0       0       0       0       0       0       0       0       0
 18114 ;;      Locals:         2       0       0       0       0       0       0       0       0       0
 18115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0
 18116 ;;      Totals:         4       0       0       0       0       0       0       0       0       0
 18117 ;;Total ram usage:        4 bytes
 18118 ;; Hardware stack levels used:    1
 18119 ;; Hardware stack levels required when called:    2
 18120 ;; This function calls:
 18121 ;;		Nothing
 18122 ;; This function is called by:
 18123 ;;		_main
 18124 ;; This function uses a non-reentrant model
 18125 ;;
 18126                           psect	text29,class=CODE,space=0,reloc=2,group=0
 18127                           	line	41
 18128                           global __ptext29
 18129                           __ptext29:
 18130  0041AE                     psect	text29
 18131                           	file	"fifo.c"
 18132                           	line	41
 18133                           	global	__size_of_getCiclos
 18134                           	__size_of_getCiclos	equ	__end_of_getCiclos-_getCiclos
 18135  0000                     	
 18136                           _getCiclos:
 18137  0041AE                     ;incstack = 0
 18138                           	opt	stack 28
 18139                           	line	43
 18140                           	
 18141                           l6026:
 18142  0041AE                     ;fifo.c: 43:     int aux = fila[1];
 18143                           	movff	0+((c:_fila)+01h),(c:getCiclos@aux)
 18144  0041AE  C016  F029         	clrf	((c:getCiclos@aux+1)),c
 18145  0041B2  6A2A               	line	44
 18146                           	
 18147                           l6028:
 18148  0041B4                     ;fifo.c: 44:     aux <<= 8;
 18149                           	movf	((c:getCiclos@aux)),c,w
 18150  0041B4  5029               	movwf	((c:getCiclos@aux+1)),c
 18151  0041B6  6E2A               	clrf	((c:getCiclos@aux)),c
 18152  0041B8  6A29               	line	45
 18153                           	
 18154                           l6030:
 18155  0041BA                     ;fifo.c: 45:     aux +=fila[0];
 18156                           	movf	((c:_fila)),c,w
 18157  0041BA  5015               	addwf	((c:getCiclos@aux)),c
 18158  0041BC  2629               	movlw	0
 18159  0041BE  0E00               	addwfc	((c:getCiclos@aux+1)),c
 18160  0041C0  222A               	line	46
 18161                           	
 18162                           l6032:
 18163  0041C2                     ;fifo.c: 46:     return(aux);
 18164                           	movff	(c:getCiclos@aux),(c:?_getCiclos)
 18165  0041C2  C029  F027         	movff	(c:getCiclos@aux+1),(c:?_getCiclos+1)
 18166  0041C6  C02A  F028         	goto	l660
 18167  0041CA  EFE7  F020         	
 18168                           l6034:
 18169  0041CE                     	line	47
 18170                           	
 18171                           l660:
 18172  0041CE                     	return	;funcret
 18173  0041CE  0012               	opt stack 0
 18174                           GLOBAL	__end_of_getCiclos
 18175                           	__end_of_getCiclos:
 18176  0041D0                     	signat	_getCiclos,90
 18177                           	global	_formatar_receitas
 18178                           
 18179 ;; *************** function _formatar_receitas *****************
 18180 ;; Defined at:
 18181 ;;		line 100 in file "eeprom.c"
 18182 ;; Parameters:    Size  Location     Type
 18183 ;;		None
 18184 ;; Auto vars:     Size  Location     Type
 18185 ;;  i               1    2[COMRAM] unsigned char 
 18186 ;; Return value:  Size  Location     Type
 18187 ;;                  1    wreg      void 
 18188 ;; Registers used:
 18189 ;;		wreg, status,2, status,0, cstack
 18190 ;; Tracked objects:
 18191 ;;		On entry : 0/0
 18192 ;;		On exit  : 0/0
 18193 ;;		Unchanged: 0/0
 18194 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18195 ;;      Params:         0       0       0       0       0       0       0       0       0       0
 18196 ;;      Locals:         1       0       0       0       0       0       0       0       0       0
 18197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0
 18198 ;;      Totals:         1       0       0       0       0       0       0       0       0       0
 18199 ;;Total ram usage:        1 bytes
 18200 ;; Hardware stack levels used:    1
 18201 ;; Hardware stack levels required when called:    3
 18202 ;; This function calls:
 18203 ;;		_EEPROM_write
 18204 ;; This function is called by:
 18205 ;;		_main
 18206 ;; This function uses a non-reentrant model
 18207 ;;
 18208                           psect	text30,class=CODE,space=0,reloc=2,group=0
 18209                           	file	"eeprom.c"
 18210                           	line	100
 18211                           global __ptext30
 18212                           __ptext30:
 18213  0041F2                     psect	text30
 18214                           	file	"eeprom.c"
 18215                           	line	100
 18216                           	global	__size_of_formatar_receitas
 18217                           	__size_of_formatar_receitas	equ	__end_of_formatar_receitas-_formatar_receitas
 18218  0000                     	
 18219                           _formatar_receitas:
 18220  0041F2                     ;incstack = 0
 18221                           	opt	stack 27
 18222                           	line	102
 18223                           	
 18224                           l6092:
 18225  0041F2                     ;eeprom.c: 102:     for( char i = 0;i<256;i++)
 18226                           	movlw	low(0)
 18227  0041F2  0E00               	movwf	((c:formatar_receitas@i)),c
 18228  0041F4  6E29               	goto	l6096
 18229  0041F6  EFFF  F020         	
 18230                           l6094:
 18231  0041FA                     	goto	l619
 18232  0041FA  EF07  F021         	
 18233                           l617:
 18234  0041FE                     	line	103
 18235                           	
 18236                           l6096:
 18237  0041FE                     ;eeprom.c: 103:            EEPROM_write(i,0);
 18238                           	movlw	low(0)
 18239  0041FE  0E00               	movwf	((c:EEPROM_write@data)),c
 18240  004200  6E27               	movf	((c:formatar_receitas@i)),c,w
 18241  004202  5029               	
 18242                           	call	_EEPROM_write
 18243  004204  ECF9  F01F         	
 18244                           l6098:
 18245  004208                     	incf	((c:formatar_receitas@i)),c
 18246  004208  2A29               	goto	l6096
 18247  00420A  EFFF  F020         	
 18248                           l618:
 18249  00420E                     	line	105
 18250                           	
 18251                           l619:
 18252  00420E                     	return	;funcret
 18253  00420E  0012               	opt stack 0
 18254                           GLOBAL	__end_of_formatar_receitas
 18255                           	__end_of_formatar_receitas:
 18256  004210                     	signat	_formatar_receitas,89
 18257                           	global	_fifo_tam
 18258                           
 18259 ;; *************** function _fifo_tam *****************
 18260 ;; Defined at:
 18261 ;;		line 317 in file "fifo.c"
 18262 ;; Parameters:    Size  Location     Type
 18263 ;;		None
 18264 ;; Auto vars:     Size  Location     Type
 18265 ;;		None
 18266 ;; Return value:  Size  Location     Type
 18267 ;;                  1    wreg      unsigned char 
 18268 ;; Registers used:
 18269 ;;		wreg
 18270 ;; Tracked objects:
 18271 ;;		On entry : 0/0
 18272 ;;		On exit  : 0/0
 18273 ;;		Unchanged: 0/0
 18274 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18275 ;;      Params:         0       0       0       0       0       0       0       0       0       0
 18276 ;;      Locals:         0       0       0       0       0       0       0       0       0       0
 18277 ;;      Temps:          0       0       0       0       0       0       0       0       0       0
 18278 ;;      Totals:         0       0       0       0       0       0       0       0       0       0
 18279 ;;Total ram usage:        0 bytes
 18280 ;; Hardware stack levels used:    1
 18281 ;; Hardware stack levels required when called:    2
 18282 ;; This function calls:
 18283 ;;		Nothing
 18284 ;; This function is called by:
 18285 ;;		_main
 18286 ;; This function uses a non-reentrant model
 18287 ;;
 18288                           psect	text31,class=CODE,space=0,reloc=2,group=0
 18289                           	file	"fifo.c"
 18290                           	line	317
 18291                           global __ptext31
 18292                           __ptext31:
 18293  0043A8                     psect	text31
 18294                           	file	"fifo.c"
 18295                           	line	317
 18296                           	global	__size_of_fifo_tam
 18297                           	__size_of_fifo_tam	equ	__end_of_fifo_tam-_fifo_tam
 18298  0000                     	
 18299                           _fifo_tam:
 18300  0043A8                     ;incstack = 0
 18301                           	opt	stack 28
 18302                           	line	319
 18303                           	
 18304                           l5838:
 18305  0043A8                     ;fifo.c: 319:     return( 18 );
 18306                           	movlw	(012h)&0ffh
 18307  0043A8  0E12               	goto	l794
 18308  0043AA  EFD7  F021         	
 18309                           l5840:
 18310  0043AE                     	line	320
 18311                           	
 18312                           l794:
 18313  0043AE                     	return	;funcret
 18314  0043AE  0012               	opt stack 0
 18315                           GLOBAL	__end_of_fifo_tam
 18316                           	__end_of_fifo_tam:
 18317  0043B0                     	signat	_fifo_tam,89
 18318                           	global	_fifo_print
 18319                           
 18320 ;; *************** function _fifo_print *****************
 18321 ;; Defined at:
 18322 ;;		line 342 in file "fifo.c"
 18323 ;; Parameters:    Size  Location     Type
 18324 ;;		None
 18325 ;; Auto vars:     Size  Location     Type
 18326 ;;  comando         1   16[COMRAM] unsigned char 
 18327 ;;  atraso          1   15[COMRAM] unsigned char 
 18328 ;;  i               1   14[COMRAM] unsigned char 
 18329 ;;  indPrint        1   13[COMRAM] unsigned char 
 18330 ;;  completar       1   12[COMRAM] unsigned char 
 18331 ;; Return value:  Size  Location     Type
 18332 ;;                  1    wreg      void 
 18333 ;; Registers used:
 18334 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18335 ;; Tracked objects:
 18336 ;;		On entry : 0/0
 18337 ;;		On exit  : 0/0
 18338 ;;		Unchanged: 0/0
 18339 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18340 ;;      Params:         0       0       0       0       0       0       0       0       0       0
 18341 ;;      Locals:         7       0       0       0       0       0       0       0       0       0
 18342 ;;      Temps:          2       0       0       0       0       0       0       0       0       0
 18343 ;;      Totals:         9       0       0       0       0       0       0       0       0       0
 18344 ;;Total ram usage:        9 bytes
 18345 ;; Hardware stack levels used:    1
 18346 ;; Hardware stack levels required when called:    4
 18347 ;; This function calls:
 18348 ;;		___awdiv
 18349 ;;		___awmod
 18350 ;;		_decodifica
 18351 ;;		_dispLCD_dataReg
 18352 ;;		_dispLCD_lincol
 18353 ;; This function is called by:
 18354 ;;		_main
 18355 ;; This function uses a non-reentrant model
 18356 ;;
 18357                           psect	text32,class=CODE,space=0,reloc=2,group=0
 18358                           	line	342
 18359                           global __ptext32
 18360                           __ptext32:
 18361  00219A                     psect	text32
 18362                           	file	"fifo.c"
 18363                           	line	342
 18364                           	global	__size_of_fifo_print
 18365                           	__size_of_fifo_print	equ	__end_of_fifo_print-_fifo_print
 18366  0000                     	
 18367                           _fifo_print:
 18368  00219A                     ;incstack = 0
 18369                           	opt	stack 26
 18370                           	line	344
 18371                           	
 18372                           l5632:
 18373  00219A                     ;fifo.c: 344:     char completar = 0;
 18374                           	movlw	low(0)
 18375  00219A  0E00               	movwf	((c:fifo_print@completar)),c
 18376  00219C  6E33               	line	345
 18377                           ;fifo.c: 345:     char comando = 0;
 18378                           	movlw	low(0)
 18379  00219E  0E00               	movwf	((c:fifo_print@comando)),c
 18380  0021A0  6E37               	line	346
 18381                           ;fifo.c: 346:     char atraso = 0;
 18382                           	movlw	low(0)
 18383  0021A2  0E00               	movwf	((c:fifo_print@atraso)),c
 18384  0021A4  6E36               	line	347
 18385                           ;fifo.c: 347:     char i = 0;
 18386                           	movlw	low(0)
 18387  0021A6  0E00               	movwf	((c:fifo_print@i)),c
 18388  0021A8  6E35               	line	348
 18389                           	
 18390                           l5634:
 18391  0021AA                     ;fifo.c: 348:     char indPrint = ind_print;
 18392                           	movff	(c:_ind_print),(c:fifo_print@indPrint)
 18393  0021AA  C05C  F034         	line	350
 18394                           	
 18395                           l5636:
 18396  0021AE                     ;fifo.c: 350:     dispLCD_lincol(0, 0);
 18397                           	movlw	low(0)
 18398  0021AE  0E00               	movwf	((c:dispLCD_lincol@col)),c
 18399  0021B0  6E29               	movlw	(0)&0ffh
 18400  0021B2  0E00               	
 18401                           	call	_dispLCD_lincol
 18402  0021B4  EC8D  F01D         	goto	l5638
 18403  0021B8  EFDE  F010         	line	351
 18404                           ;fifo.c: 351:     do
 18405                           	
 18406                           l808:
 18407  0021BC                     	line	353
 18408                           	
 18409                           l5638:
 18410  0021BC                     ;fifo.c: 352:     {;fifo.c: 353:         if( completar )
 18411                           	movf	((c:fifo_print@completar)),c,w
 18412  0021BC  5033               	btfsc	status,2
 18413  0021BE  B4D8               	goto	u4041
 18414  0021C0  EFE4  F010         	goto	u4040
 18415  0021C4  EFE6  F010         u4041:
 18416  0021C8                     	goto	l5644
 18417  0021C8  EFEC  F010         u4040:
 18418  0021CC                     	line	355
 18419                           	
 18420                           l5640:
 18421  0021CC                     ;fifo.c: 354:         {;fifo.c: 355:             dispLCD_dataReg(' ');
 18422                           	movlw	(020h)&0ffh
 18423  0021CC  0E20               	
 18424                           	call	_dispLCD_dataReg
 18425  0021CE  EC9B  F01E         	line	356
 18426                           	
 18427                           l5642:
 18428  0021D2                     ;fifo.c: 356:             ++i;
 18429                           	incf	((c:fifo_print@i)),c
 18430  0021D2  2A35               	line	357
 18431                           ;fifo.c: 357:         }
 18432                           	goto	l5758
 18433  0021D4  EF6A  F012         	line	358
 18434                           ;fifo.c: 358:         else
 18435                           	
 18436                           l809:
 18437  0021D8                     	line	360
 18438                           	
 18439                           l5644:
 18440  0021D8                     ;fifo.c: 359:         {;fifo.c: 360:             comando = fila[indPrint++];
 18441                           	movf	((c:fifo_print@indPrint)),c,w
 18442  0021D8  5034               	mullw	01h
 18443  0021DA  0D01               	movlw	low(_fila)
 18444  0021DC  0E15               	addwf	(prodl),c,w
 18445  0021DE  24F3               	movwf	c:fsr2l
 18446  0021E0  6ED9               	movlw	high(_fila)
 18447  0021E2  0E00               	addwfc	prod+1,w
 18448  0021E4  20F4               	movwf	1+c:fsr2l
 18449  0021E6  6EDA               	movf	indf2,w
 18450  0021E8  50DF               	movwf	((c:fifo_print@comando)),c
 18451  0021EA  6E37               	
 18452                           l5646:
 18453  0021EC                     	incf	((c:fifo_print@indPrint)),c
 18454  0021EC  2A34               	line	362
 18455                           	
 18456                           l5648:
 18457  0021EE                     ;fifo.c: 362:             if( comando == 0 )
 18458                           	movf	((c:fifo_print@comando)),c,w
 18459  0021EE  5037               	btfss	status,2
 18460  0021F0  A4D8               	goto	u4051
 18461  0021F2  EFFD  F010         	goto	u4050
 18462  0021F6  EFFF  F010         u4051:
 18463  0021FA                     	goto	l5652
 18464  0021FA  EF03  F011         u4050:
 18465  0021FE                     	line	363
 18466                           	
 18467                           l5650:
 18468  0021FE                     ;fifo.c: 363:                 completar = 1;
 18469                           	movlw	low(01h)
 18470  0021FE  0E01               	movwf	((c:fifo_print@completar)),c
 18471  002200  6E33               	goto	l5758
 18472  002202  EF6A  F012         	line	364
 18473                           ;fifo.c: 364:             else if ( comando <= 0x64 )
 18474                           	
 18475                           l811:
 18476  002206                     	
 18477                           l5652:
 18478  002206                     		movlw	065h-0
 18479  002206  0E65               	cpfslt	((c:fifo_print@comando)),c
 18480  002208  6037               	goto	u4061
 18481  00220A  EF09  F011         	goto	u4060
 18482  00220E  EF0B  F011         
 18483                           u4061:
 18484  002212                     	goto	l5684
 18485  002212  EF62  F011         u4060:
 18486  002216                     	line	366
 18487                           	
 18488                           l5654:
 18489  002216                     ;fifo.c: 365:             {;fifo.c: 366:                 atraso = comando;
 18490                           	movff	(c:fifo_print@comando),(c:fifo_print@atraso)
 18491  002216  C037  F036         	line	367
 18492                           	
 18493                           l5656:
 18494  00221A                     ;fifo.c: 367:                 if( atraso >= 100 )
 18495                           		movlw	064h-1
 18496  00221A  0E63               	cpfsgt	((c:fifo_print@atraso)),c
 18497  00221C  6436               	goto	u4071
 18498  00221E  EF13  F011         	goto	u4070
 18499  002222  EF15  F011         
 18500                           u4071:
 18501  002226                     	goto	l5670
 18502  002226  EF34  F011         u4070:
 18503  00222A                     	line	369
 18504                           	
 18505                           l5658:
 18506  00222A                     ;fifo.c: 368:                 {;fifo.c: 369:                     dispLCD_dataReg('1');
 18507                           	movlw	(031h)&0ffh
 18508  00222A  0E31               	
 18509                           	call	_dispLCD_dataReg
 18510  00222C  EC9B  F01E         	line	370
 18511                           	
 18512                           l5660:
 18513  002230                     ;fifo.c: 370:                     ++i;
 18514                           	incf	((c:fifo_print@i)),c
 18515  002230  2A35               	line	371
 18516                           	
 18517                           l5662:
 18518  002232                     ;fifo.c: 371:                     atraso %= 100;
 18519                           	movff	(c:fifo_print@atraso),(c:___awmod@dividend)
 18520  002232  C036  F027         	clrf	((c:___awmod@dividend+1)),c
 18521  002236  6A28               	movlw	high(064h)
 18522  002238  0E00               	movwf	((c:___awmod@divisor+1)),c
 18523  00223A  6E2A               	movlw	low(064h)
 18524  00223C  0E64               	movwf	((c:___awmod@divisor)),c
 18525  00223E  6E29               	call	___awmod	;wreg free
 18526  002240  EC12  F019         	movf	(0+?___awmod),c,w
 18527  002244  5027               	movwf	((c:fifo_print@atraso)),c
 18528  002246  6E36               	line	372
 18529                           	
 18530                           l5664:
 18531  002248                     ;fifo.c: 372:                     if(atraso < 10)
 18532                           		movlw	0Ah-0
 18533  002248  0E0A               	cpfslt	((c:fifo_print@atraso)),c
 18534  00224A  6036               	goto	u4081
 18535  00224C  EF2A  F011         	goto	u4080
 18536  002250  EF2C  F011         
 18537                           u4081:
 18538  002254                     	goto	l5670
 18539  002254  EF34  F011         u4080:
 18540  002258                     	line	374
 18541                           	
 18542                           l5666:
 18543  002258                     ;fifo.c: 373:                     {;fifo.c: 374:                         dispLCD_dataReg
                                 ('0');
 18544                           	movlw	(030h)&0ffh
 18545  002258  0E30               	
 18546                           	call	_dispLCD_dataReg
 18547  00225A  EC9B  F01E         	line	375
 18548                           	
 18549                           l5668:
 18550  00225E                     ;fifo.c: 375:                         ++i;
 18551                           	incf	((c:fifo_print@i)),c
 18552  00225E  2A35               	goto	l5670
 18553  002260  EF34  F011         	line	376
 18554                           ;fifo.c: 376:                     }
 18555                           	
 18556                           l815:
 18557  002264                     	goto	l5670
 18558  002264  EF34  F011         	line	377
 18559                           ;fifo.c: 377:                 }
 18560                           	
 18561                           l814:
 18562  002268                     	line	378
 18563                           	
 18564                           l5670:
 18565  002268                     ;fifo.c: 378:                 if( atraso >= 10 )
 18566                           		movlw	0Ah-1
 18567  002268  0E09               	cpfsgt	((c:fifo_print@atraso)),c
 18568  00226A  6436               	goto	u4091
 18569  00226C  EF3A  F011         	goto	u4090
 18570  002270  EF3C  F011         
 18571                           u4091:
 18572  002274                     	goto	l5678
 18573  002274  EF57  F011         u4090:
 18574  002278                     	line	380
 18575                           	
 18576                           l5672:
 18577  002278                     ;fifo.c: 379:                 {;fifo.c: 380:                     dispLCD_dataReg(atraso/
                                 10 + '0');
 18578                           	movff	(c:fifo_print@atraso),(c:___awdiv@dividend)
 18579  002278  C036  F027         	clrf	((c:___awdiv@dividend+1)),c
 18580  00227C  6A28               	movlw	high(0Ah)
 18581  00227E  0E00               	movwf	((c:___awdiv@divisor+1)),c
 18582  002280  6E2A               	movlw	low(0Ah)
 18583  002282  0E0A               	movwf	((c:___awdiv@divisor)),c
 18584  002284  6E29               	call	___awdiv	;wreg free
 18585  002286  ECB7  F017         	movf	(0+?___awdiv),c,w
 18586  00228A  5027               	addlw	low(030h)
 18587  00228C  0F30               	
 18588                           	call	_dispLCD_dataReg
 18589  00228E  EC9B  F01E         	line	381
 18590                           	
 18591                           l5674:
 18592  002292                     ;fifo.c: 381:                     ++i;
 18593                           	incf	((c:fifo_print@i)),c
 18594  002292  2A35               	line	382
 18595                           	
 18596                           l5676:
 18597  002294                     ;fifo.c: 382:                     atraso %= 10;
 18598                           	movff	(c:fifo_print@atraso),(c:___awmod@dividend)
 18599  002294  C036  F027         	clrf	((c:___awmod@dividend+1)),c
 18600  002298  6A28               	movlw	high(0Ah)
 18601  00229A  0E00               	movwf	((c:___awmod@divisor+1)),c
 18602  00229C  6E2A               	movlw	low(0Ah)
 18603  00229E  0E0A               	movwf	((c:___awmod@divisor)),c
 18604  0022A0  6E29               	call	___awmod	;wreg free
 18605  0022A2  EC12  F019         	movf	(0+?___awmod),c,w
 18606  0022A6  5027               	movwf	((c:fifo_print@atraso)),c
 18607  0022A8  6E36               	goto	l5678
 18608  0022AA  EF57  F011         	line	383
 18609                           ;fifo.c: 383:                 }
 18610                           	
 18611                           l816:
 18612  0022AE                     	line	385
 18613                           	
 18614                           l5678:
 18615  0022AE                     ;fifo.c: 385:                 dispLCD_dataReg(atraso + '0');
 18616                           	movf	((c:fifo_print@atraso)),c,w
 18617  0022AE  5036               	addlw	low(030h)
 18618  0022B0  0F30               	
 18619                           	call	_dispLCD_dataReg
 18620  0022B2  EC9B  F01E         	line	386
 18621                           	
 18622                           l5680:
 18623  0022B6                     ;fifo.c: 386:                 ++i;
 18624                           	incf	((c:fifo_print@i)),c
 18625  0022B6  2A35               	line	388
 18626                           ;fifo.c: 388:                 dispLCD_dataReg('%');
 18627                           	movlw	(025h)&0ffh
 18628  0022B8  0E25               	
 18629                           	call	_dispLCD_dataReg
 18630  0022BA  EC9B  F01E         	line	389
 18631                           	
 18632                           l5682:
 18633  0022BE                     ;fifo.c: 389:                 ++i;
 18634                           	incf	((c:fifo_print@i)),c
 18635  0022BE  2A35               	line	390
 18636                           ;fifo.c: 390:             }
 18637                           	goto	l5758
 18638  0022C0  EF6A  F012         	line	392
 18639                           ;fifo.c: 392:             else if( comando > 0x64 && comando <= 0xDC)
 18640                           	
 18641                           l813:
 18642  0022C4                     	
 18643                           l5684:
 18644  0022C4                     		movlw	065h-1
 18645  0022C4  0E64               	cpfsgt	((c:fifo_print@comando)),c
 18646  0022C6  6437               	goto	u4101
 18647  0022C8  EF68  F011         	goto	u4100
 18648  0022CC  EF6A  F011         
 18649                           u4101:
 18650  0022D0                     	goto	l5720
 18651  0022D0  EFCF  F011         u4100:
 18652  0022D4                     	
 18653                           l5686:
 18654  0022D4                     		movlw	0DDh-0
 18655  0022D4  0EDD               	cpfslt	((c:fifo_print@comando)),c
 18656  0022D6  6037               	goto	u4111
 18657  0022D8  EF70  F011         	goto	u4110
 18658  0022DC  EF72  F011         
 18659                           u4111:
 18660  0022E0                     	goto	l5720
 18661  0022E0  EFCF  F011         u4110:
 18662  0022E4                     	line	394
 18663                           	
 18664                           l5688:
 18665  0022E4                     ;fifo.c: 393:             {;fifo.c: 394:                 decodifica(&comando);
 18666                           		movlw	low(fifo_print@comando)
 18667  0022E4  0E37               	movwf	((c:decodifica@d)),c
 18668  0022E6  6E27               	movlw	high(fifo_print@comando)
 18669  0022E8  0E00               	movwf	((c:decodifica@d+1)),c
 18670  0022EA  6E28               
 18671                           	call	_decodifica	;wreg free
 18672  0022EC  ECCB  F014         	line	395
 18673                           	
 18674                           l5690:
 18675  0022F0                     ;fifo.c: 395:                 atraso = comando;
 18676                           	movff	(c:fifo_print@comando),(c:fifo_print@atraso)
 18677  0022F0  C037  F036         	line	397
 18678                           	
 18679                           l5692:
 18680  0022F4                     ;fifo.c: 397:                 if( atraso >= 100 )
 18681                           		movlw	064h-1
 18682  0022F4  0E63               	cpfsgt	((c:fifo_print@atraso)),c
 18683  0022F6  6436               	goto	u4121
 18684  0022F8  EF80  F011         	goto	u4120
 18685  0022FC  EF82  F011         
 18686                           u4121:
 18687  002300                     	goto	l5706
 18688  002300  EFA1  F011         u4120:
 18689  002304                     	line	399
 18690                           	
 18691                           l5694:
 18692  002304                     ;fifo.c: 398:                 {;fifo.c: 399:                     dispLCD_dataReg('1');
 18693                           	movlw	(031h)&0ffh
 18694  002304  0E31               	
 18695                           	call	_dispLCD_dataReg
 18696  002306  EC9B  F01E         	line	400
 18697                           	
 18698                           l5696:
 18699  00230A                     ;fifo.c: 400:                     ++i;
 18700                           	incf	((c:fifo_print@i)),c
 18701  00230A  2A35               	line	401
 18702                           	
 18703                           l5698:
 18704  00230C                     ;fifo.c: 401:                     atraso %= 100;
 18705                           	movff	(c:fifo_print@atraso),(c:___awmod@dividend)
 18706  00230C  C036  F027         	clrf	((c:___awmod@dividend+1)),c
 18707  002310  6A28               	movlw	high(064h)
 18708  002312  0E00               	movwf	((c:___awmod@divisor+1)),c
 18709  002314  6E2A               	movlw	low(064h)
 18710  002316  0E64               	movwf	((c:___awmod@divisor)),c
 18711  002318  6E29               	call	___awmod	;wreg free
 18712  00231A  EC12  F019         	movf	(0+?___awmod),c,w
 18713  00231E  5027               	movwf	((c:fifo_print@atraso)),c
 18714  002320  6E36               	line	402
 18715                           	
 18716                           l5700:
 18717  002322                     ;fifo.c: 402:                     if(atraso < 10)
 18718                           		movlw	0Ah-0
 18719  002322  0E0A               	cpfslt	((c:fifo_print@atraso)),c
 18720  002324  6036               	goto	u4131
 18721  002326  EF97  F011         	goto	u4130
 18722  00232A  EF99  F011         
 18723                           u4131:
 18724  00232E                     	goto	l5706
 18725  00232E  EFA1  F011         u4130:
 18726  002332                     	line	404
 18727                           	
 18728                           l5702:
 18729  002332                     ;fifo.c: 403:                     {;fifo.c: 404:                         dispLCD_dataReg
                                 ('0');
 18730                           	movlw	(030h)&0ffh
 18731  002332  0E30               	
 18732                           	call	_dispLCD_dataReg
 18733  002334  EC9B  F01E         	line	405
 18734                           	
 18735                           l5704:
 18736  002338                     ;fifo.c: 405:                         ++i;
 18737                           	incf	((c:fifo_print@i)),c
 18738  002338  2A35               	goto	l5706
 18739  00233A  EFA1  F011         	line	406
 18740                           ;fifo.c: 406:                     }
 18741                           	
 18742                           l820:
 18743  00233E                     	goto	l5706
 18744  00233E  EFA1  F011         	line	407
 18745                           ;fifo.c: 407:                 }
 18746                           	
 18747                           l819:
 18748  002342                     	line	408
 18749                           	
 18750                           l5706:
 18751  002342                     ;fifo.c: 408:                 if( atraso >= 10 )
 18752                           		movlw	0Ah-1
 18753  002342  0E09               	cpfsgt	((c:fifo_print@atraso)),c
 18754  002344  6436               	goto	u4141
 18755  002346  EFA7  F011         	goto	u4140
 18756  00234A  EFA9  F011         
 18757                           u4141:
 18758  00234E                     	goto	l5714
 18759  00234E  EFC4  F011         u4140:
 18760  002352                     	line	410
 18761                           	
 18762                           l5708:
 18763  002352                     ;fifo.c: 409:                 {;fifo.c: 410:                     dispLCD_dataReg(atraso/
                                 10 + '0');
 18764                           	movff	(c:fifo_print@atraso),(c:___awdiv@dividend)
 18765  002352  C036  F027         	clrf	((c:___awdiv@dividend+1)),c
 18766  002356  6A28               	movlw	high(0Ah)
 18767  002358  0E00               	movwf	((c:___awdiv@divisor+1)),c
 18768  00235A  6E2A               	movlw	low(0Ah)
 18769  00235C  0E0A               	movwf	((c:___awdiv@divisor)),c
 18770  00235E  6E29               	call	___awdiv	;wreg free
 18771  002360  ECB7  F017         	movf	(0+?___awdiv),c,w
 18772  002364  5027               	addlw	low(030h)
 18773  002366  0F30               	
 18774                           	call	_dispLCD_dataReg
 18775  002368  EC9B  F01E         	line	411
 18776                           	
 18777                           l5710:
 18778  00236C                     ;fifo.c: 411:                     ++i;
 18779                           	incf	((c:fifo_print@i)),c
 18780  00236C  2A35               	line	412
 18781                           	
 18782                           l5712:
 18783  00236E                     ;fifo.c: 412:                     atraso %= 10;
 18784                           	movff	(c:fifo_print@atraso),(c:___awmod@dividend)
 18785  00236E  C036  F027         	clrf	((c:___awmod@dividend+1)),c
 18786  002372  6A28               	movlw	high(0Ah)
 18787  002374  0E00               	movwf	((c:___awmod@divisor+1)),c
 18788  002376  6E2A               	movlw	low(0Ah)
 18789  002378  0E0A               	movwf	((c:___awmod@divisor)),c
 18790  00237A  6E29               	call	___awmod	;wreg free
 18791  00237C  EC12  F019         	movf	(0+?___awmod),c,w
 18792  002380  5027               	movwf	((c:fifo_print@atraso)),c
 18793  002382  6E36               	goto	l5714
 18794  002384  EFC4  F011         	line	413
 18795                           ;fifo.c: 413:                 }
 18796                           	
 18797                           l821:
 18798  002388                     	line	415
 18799                           	
 18800                           l5714:
 18801  002388                     ;fifo.c: 415:                 dispLCD_dataReg(atraso + '0');
 18802                           	movf	((c:fifo_print@atraso)),c,w
 18803  002388  5036               	addlw	low(030h)
 18804  00238A  0F30               	
 18805                           	call	_dispLCD_dataReg
 18806  00238C  EC9B  F01E         	line	416
 18807                           	
 18808                           l5716:
 18809  002390                     ;fifo.c: 416:                 ++i;
 18810                           	incf	((c:fifo_print@i)),c
 18811  002390  2A35               	line	418
 18812                           ;fifo.c: 418:                 dispLCD_dataReg('s');
 18813                           	movlw	(073h)&0ffh
 18814  002392  0E73               	
 18815                           	call	_dispLCD_dataReg
 18816  002394  EC9B  F01E         	line	419
 18817                           	
 18818                           l5718:
 18819  002398                     ;fifo.c: 419:                 ++i;
 18820                           	incf	((c:fifo_print@i)),c
 18821  002398  2A35               	line	420
 18822                           ;fifo.c: 420:             }
 18823                           	goto	l5758
 18824  00239A  EF6A  F012         	line	421
 18825                           ;fifo.c: 421:             else if( comando > 0xDC && comando < 0xFE )
 18826                           	
 18827                           l818:
 18828  00239E                     	
 18829                           l5720:
 18830  00239E                     		movlw	0DDh-1
 18831  00239E  0EDC               	cpfsgt	((c:fifo_print@comando)),c
 18832  0023A0  6437               	goto	u4151
 18833  0023A2  EFD5  F011         	goto	u4150
 18834  0023A6  EFD7  F011         
 18835                           u4151:
 18836  0023AA                     	goto	l5744
 18837  0023AA  EF44  F012         u4150:
 18838  0023AE                     	
 18839                           l5722:
 18840  0023AE                     		movlw	0FEh-0
 18841  0023AE  0EFE               	cpfslt	((c:fifo_print@comando)),c
 18842  0023B0  6037               	goto	u4161
 18843  0023B2  EFDD  F011         	goto	u4160
 18844  0023B6  EFDF  F011         
 18845                           u4161:
 18846  0023BA                     	goto	l5744
 18847  0023BA  EF44  F012         u4160:
 18848  0023BE                     	line	423
 18849                           	
 18850                           l5724:
 18851  0023BE                     ;fifo.c: 422:             {;fifo.c: 423:                 decodifica(&comando);
 18852                           		movlw	low(fifo_print@comando)
 18853  0023BE  0E37               	movwf	((c:decodifica@d)),c
 18854  0023C0  6E27               	movlw	high(fifo_print@comando)
 18855  0023C2  0E00               	movwf	((c:decodifica@d+1)),c
 18856  0023C4  6E28               
 18857                           	call	_decodifica	;wreg free
 18858  0023C6  ECCB  F014         	line	424
 18859                           ;fifo.c: 424:                 switch( comando )
 18860                           	goto	l5742
 18861  0023CA  EF15  F012         	line	426
 18862                           ;fifo.c: 425:                 {;fifo.c: 426:                     case 'A':
 18863                           	
 18864                           l825:
 18865  0023CE                     	goto	l5726
 18866  0023CE  EFF5  F011         	line	427
 18867                           ;fifo.c: 427:                     case 'B':
 18868                           	
 18869                           l826:
 18870  0023D2                     	goto	l5726
 18871  0023D2  EFF5  F011         	line	428
 18872                           ;fifo.c: 428:                     case 'C':
 18873                           	
 18874                           l827:
 18875  0023D6                     	goto	l5726
 18876  0023D6  EFF5  F011         	line	429
 18877                           ;fifo.c: 429:                     case 'D':
 18878                           	
 18879                           l828:
 18880  0023DA                     	goto	l5726
 18881  0023DA  EFF5  F011         	line	430
 18882                           ;fifo.c: 430:                     case 'a':
 18883                           	
 18884                           l829:
 18885  0023DE                     	goto	l5726
 18886  0023DE  EFF5  F011         	line	431
 18887                           ;fifo.c: 431:                     case 'b':
 18888                           	
 18889                           l830:
 18890  0023E2                     	goto	l5726
 18891  0023E2  EFF5  F011         	line	432
 18892                           ;fifo.c: 432:                     case 'c':
 18893                           	
 18894                           l831:
 18895  0023E6                     	goto	l5726
 18896  0023E6  EFF5  F011         	line	433
 18897                           ;fifo.c: 433:                     case 'd':
 18898                           	
 18899                           l832:
 18900  0023EA                     	line	434
 18901                           	
 18902                           l5726:
 18903  0023EA                     ;fifo.c: 434:                                 dispLCD_dataReg( comando & ~0x20 );
 18904                           	movf	((c:fifo_print@comando)),c,w
 18905  0023EA  5037               	andlw	low(0DFh)
 18906  0023EC  0BDF               	
 18907                           	call	_dispLCD_dataReg
 18908  0023EE  EC9B  F01E         	line	435
 18909                           	
 18910                           l5728:
 18911  0023F2                     ;fifo.c: 435:                                 ++i;
 18912                           	incf	((c:fifo_print@i)),c
 18913  0023F2  2A35               	line	436
 18914                           	
 18915                           l5730:
 18916  0023F4                     ;fifo.c: 436:                                 dispLCD_dataReg( comando & 0x20 ? '-': '+'
                                  );
 18917                           	
 18918                           	btfsc	((c:fifo_print@comando)),c,(5)&7
 18919  0023F4  BA37               	goto	u4171
 18920  0023F6  EFFF  F011         	goto	u4170
 18921  0023FA  EF01  F012         u4171:
 18922  0023FE                     	goto	l5734
 18923  0023FE  EF07  F012         u4170:
 18924  002402                     	
 18925                           l5732:
 18926  002402                     	movlw	high(02Bh)
 18927  002402  0E00               	movwf	((c:_fifo_print$1046+1)),c
 18928  002404  6E32               	movlw	low(02Bh)
 18929  002406  0E2B               	movwf	((c:_fifo_print$1046)),c
 18930  002408  6E31               	goto	l5736
 18931  00240A  EF0D  F012         	
 18932                           l834:
 18933  00240E                     	
 18934                           l5734:
 18935  00240E                     	movlw	high(02Dh)
 18936  00240E  0E00               	movwf	((c:_fifo_print$1046+1)),c
 18937  002410  6E32               	movlw	low(02Dh)
 18938  002412  0E2D               	movwf	((c:_fifo_print$1046)),c
 18939  002414  6E31               	goto	l5736
 18940  002416  EF0D  F012         	
 18941                           l836:
 18942  00241A                     	
 18943                           l5736:
 18944  00241A                     	movf	((c:_fifo_print$1046)),c,w
 18945  00241A  5031               	
 18946                           	call	_dispLCD_dataReg
 18947  00241C  EC9B  F01E         	line	437
 18948                           	
 18949                           l5738:
 18950  002420                     ;fifo.c: 437:                                 ++i;
 18951                           	incf	((c:fifo_print@i)),c
 18952  002420  2A35               	line	438
 18953                           ;fifo.c: 438:                                 break;
 18954                           	goto	l5758
 18955  002422  EF6A  F012         	line	439
 18956                           	
 18957                           l5740:
 18958  002426                     ;fifo.c: 439:                 }
 18959                           	goto	l5758
 18960  002426  EF6A  F012         	
 18961                           l824:
 18962  00242A                     	
 18963                           l5742:
 18964  00242A                     	movf	((c:fifo_print@comando)),c,w
 18965  00242A  5037               	movwf	(??_fifo_print+0+0)&0ffh,c
 18966  00242C  6E2F               	clrf	(??_fifo_print+0+0+1)&0ffh,c
 18967  00242E  6A30               
 18968                           	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
 18969                           ; Switch size 1, requested type "space"
 18970                           ; Number of cases is 1, Range of values is 0 to 0
 18971                           ; switch strategies available:
 18972                           ; Name         Instructions Cycles
 18973                           ; simple_byte            4     3 (average)
 18974                           ;	Chosen strategy is simple_byte
 18975                           
 18976                           	movf ??_fifo_print+0+1,c,w
 18977  002430  5030               	xorlw	0^0	; case 0
 18978  002432  0A00               	skipnz
 18979  002434  B4D8               	goto	l7850
 18980  002436  EF1F  F012         	goto	l5758
 18981  00243A  EF6A  F012         	
 18982                           l7850:
 18983  00243E                     ; Switch size 1, requested type "space"
 18984                           ; Number of cases is 8, Range of values is 65 to 100
 18985                           ; switch strategies available:
 18986                           ; Name         Instructions Cycles
 18987                           ; simple_byte           25    13 (average)
 18988                           ;	Chosen strategy is simple_byte
 18989                           
 18990                           	movf ??_fifo_print+0+0,c,w
 18991  00243E  502F               	xorlw	65^0	; case 65
 18992  002440  0A41               	skipnz
 18993  002442  B4D8               	goto	l5726
 18994  002444  EFF5  F011         	xorlw	66^65	; case 66
 18995  002448  0A03               	skipnz
 18996  00244A  B4D8               	goto	l5726
 18997  00244C  EFF5  F011         	xorlw	67^66	; case 67
 18998  002450  0A01               	skipnz
 18999  002452  B4D8               	goto	l5726
 19000  002454  EFF5  F011         	xorlw	68^67	; case 68
 19001  002458  0A07               	skipnz
 19002  00245A  B4D8               	goto	l5726
 19003  00245C  EFF5  F011         	xorlw	97^68	; case 97
 19004  002460  0A25               	skipnz
 19005  002462  B4D8               	goto	l5726
 19006  002464  EFF5  F011         	xorlw	98^97	; case 98
 19007  002468  0A03               	skipnz
 19008  00246A  B4D8               	goto	l5726
 19009  00246C  EFF5  F011         	xorlw	99^98	; case 99
 19010  002470  0A01               	skipnz
 19011  002472  B4D8               	goto	l5726
 19012  002474  EFF5  F011         	xorlw	100^99	; case 100
 19013  002478  0A07               	skipnz
 19014  00247A  B4D8               	goto	l5726
 19015  00247C  EFF5  F011         	goto	l5758
 19016  002480  EF6A  F012         
 19017                           	
 19018                           l837:
 19019  002484                     	line	440
 19020                           ;fifo.c: 440:             }
 19021                           	goto	l5758
 19022  002484  EF6A  F012         	line	441
 19023                           ;fifo.c: 441:             else
 19024                           	
 19025                           l823:
 19026  002488                     	line	443
 19027                           	
 19028                           l5744:
 19029  002488                     ;fifo.c: 442:             {;fifo.c: 443:                 if(comando == 0xFE)
 19030                           		movlw	254
 19031  002488  0EFE               	xorwf	((c:fifo_print@comando)),c,w
 19032  00248A  1837               	btfss	status,2
 19033  00248C  A4D8               	goto	u4181
 19034  00248E  EF4B  F012         	goto	u4180
 19035  002492  EF4D  F012         
 19036                           u4181:
 19037  002496                     	goto	l5758
 19038  002496  EF6A  F012         u4180:
 19039  00249A                     	line	445
 19040                           	
 19041                           l5746:
 19042  00249A                     ;fifo.c: 444:                 {;fifo.c: 445:                     decodifica(&comando);
 19043                           		movlw	low(fifo_print@comando)
 19044  00249A  0E37               	movwf	((c:decodifica@d)),c
 19045  00249C  6E27               	movlw	high(fifo_print@comando)
 19046  00249E  0E00               	movwf	((c:decodifica@d+1)),c
 19047  0024A0  6E28               
 19048                           	call	_decodifica	;wreg free
 19049  0024A2  ECCB  F014         	line	446
 19050                           	
 19051                           l5748:
 19052  0024A6                     ;fifo.c: 446:                     atraso = comando;
 19053                           	movff	(c:fifo_print@comando),(c:fifo_print@atraso)
 19054  0024A6  C037  F036         	line	448
 19055                           	
 19056                           l5750:
 19057  0024AA                     ;fifo.c: 448:                     dispLCD_dataReg(atraso + '0');
 19058                           	movf	((c:fifo_print@atraso)),c,w
 19059  0024AA  5036               	addlw	low(030h)
 19060  0024AC  0F30               	
 19061                           	call	_dispLCD_dataReg
 19062  0024AE  EC9B  F01E         	line	449
 19063                           	
 19064                           l5752:
 19065  0024B2                     ;fifo.c: 449:                     ++i;
 19066                           	incf	((c:fifo_print@i)),c
 19067  0024B2  2A35               	line	451
 19068                           	
 19069                           l5754:
 19070  0024B4                     ;fifo.c: 451:                     dispLCD_dataReg('%');
 19071                           	movlw	(025h)&0ffh
 19072  0024B4  0E25               	
 19073                           	call	_dispLCD_dataReg
 19074  0024B6  EC9B  F01E         	line	452
 19075                           	
 19076                           l5756:
 19077  0024BA                     ;fifo.c: 452:                     ++i;
 19078                           	incf	((c:fifo_print@i)),c
 19079  0024BA  2A35               	goto	l5758
 19080  0024BC  EF6A  F012         	line	453
 19081                           ;fifo.c: 453:                 }
 19082                           	
 19083                           l839:
 19084  0024C0                     	goto	l5758
 19085  0024C0  EF6A  F012         	line	454
 19086                           ;fifo.c: 454:             }
 19087                           	
 19088                           l838:
 19089  0024C4                     	goto	l5758
 19090  0024C4  EF6A  F012         	
 19091                           l822:
 19092  0024C8                     	goto	l5758
 19093  0024C8  EF6A  F012         	
 19094                           l817:
 19095  0024CC                     	goto	l5758
 19096  0024CC  EF6A  F012         	
 19097                           l812:
 19098  0024D0                     	goto	l5758
 19099  0024D0  EF6A  F012         	line	455
 19100                           ;fifo.c: 455:         }
 19101                           	
 19102                           l810:
 19103  0024D4                     	line	456
 19104                           	
 19105                           l5758:
 19106  0024D4                     ;fifo.c: 456:     }
 19107                           		movlw	015h-1
 19108  0024D4  0E14               	cpfsgt	((c:fifo_print@i)),c
 19109  0024D6  6435               	goto	u4191
 19110  0024D8  EF70  F012         	goto	u4190
 19111  0024DC  EF72  F012         
 19112                           u4191:
 19113  0024E0                     	goto	l5638
 19114  0024E0  EFDE  F010         u4190:
 19115  0024E4                     	goto	l841
 19116  0024E4  EF74  F012         	
 19117                           l840:
 19118  0024E8                     	line	458
 19119                           	
 19120                           l841:
 19121  0024E8                     	return	;funcret
 19122  0024E8  0012               	opt stack 0
 19123                           GLOBAL	__end_of_fifo_print
 19124                           	__end_of_fifo_print:
 19125  0024EA                     	signat	_fifo_print,89
 19126                           	global	___awmod
 19127                           
 19128 ;; *************** function ___awmod *****************
 19129 ;; Defined at:
 19130 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awmod.c"
 19131 ;; Parameters:    Size  Location     Type
 19132 ;;  dividend        2    0[COMRAM] int 
 19133 ;;  divisor         2    2[COMRAM] int 
 19134 ;; Auto vars:     Size  Location     Type
 19135 ;;  sign            1    5[COMRAM] unsigned char 
 19136 ;;  counter         1    4[COMRAM] unsigned char 
 19137 ;; Return value:  Size  Location     Type
 19138 ;;                  2    0[COMRAM] int 
 19139 ;; Registers used:
 19140 ;;		wreg, status,2, status,0
 19141 ;; Tracked objects:
 19142 ;;		On entry : 0/0
 19143 ;;		On exit  : 0/0
 19144 ;;		Unchanged: 0/0
 19145 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19146 ;;      Params:         4       0       0       0       0       0       0       0       0       0
 19147 ;;      Locals:         2       0       0       0       0       0       0       0       0       0
 19148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0
 19149 ;;      Totals:         6       0       0       0       0       0       0       0       0       0
 19150 ;;Total ram usage:        6 bytes
 19151 ;; Hardware stack levels used:    1
 19152 ;; Hardware stack levels required when called:    2
 19153 ;; This function calls:
 19154 ;;		Nothing
 19155 ;; This function is called by:
 19156 ;;		_main
 19157 ;;		_dispLCD_num
 19158 ;;		_fifo_print
 19159 ;; This function uses a non-reentrant model
 19160 ;;
 19161                           psect	text33,class=CODE,space=0,reloc=2,group=1
 19162                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awmod.c"
 19163                           	line	7
 19164                           global __ptext33
 19165                           __ptext33:
 19166  003224                     psect	text33
 19167                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awmod.c"
 19168                           	line	7
 19169                           	global	__size_of___awmod
 19170                           	__size_of___awmod	equ	__end_of___awmod-___awmod
 19171  0000                     	
 19172                           ___awmod:
 19173  003224                     ;incstack = 0
 19174                           	opt	stack 26
 19175                           	line	12
 19176                           	
 19177                           l5100:
 19178  003224                     	movlw	low(0)
 19179  003224  0E00               	movwf	((c:___awmod@sign)),c
 19180  003226  6E2C               	line	13
 19181                           	
 19182                           l5102:
 19183  003228                     	btfsc	((c:___awmod@dividend+1)),c,7
 19184  003228  BE28               	goto	u3350
 19185  00322A  EF1B  F019         	goto	u3351
 19186  00322E  EF19  F019         
 19187                           u3351:
 19188  003232                     	goto	l5108
 19189  003232  EF23  F019         u3350:
 19190  003236                     	line	14
 19191                           	
 19192                           l5104:
 19193  003236                     	negf	((c:___awmod@dividend)),c
 19194  003236  6C27               	comf	((c:___awmod@dividend+1)),c
 19195  003238  1E28               	btfsc	status,0
 19196  00323A  B0D8               	incf	((c:___awmod@dividend+1)),c
 19197  00323C  2A28               	line	15
 19198                           	
 19199                           l5106:
 19200  00323E                     	movlw	low(01h)
 19201  00323E  0E01               	movwf	((c:___awmod@sign)),c
 19202  003240  6E2C               	goto	l5108
 19203  003242  EF23  F019         	line	16
 19204                           	
 19205                           l1461:
 19206  003246                     	line	17
 19207                           	
 19208                           l5108:
 19209  003246                     	btfsc	((c:___awmod@divisor+1)),c,7
 19210  003246  BE2A               	goto	u3360
 19211  003248  EF2A  F019         	goto	u3361
 19212  00324C  EF28  F019         
 19213                           u3361:
 19214  003250                     	goto	l5112
 19215  003250  EF30  F019         u3360:
 19216  003254                     	line	18
 19217                           	
 19218                           l5110:
 19219  003254                     	negf	((c:___awmod@divisor)),c
 19220  003254  6C29               	comf	((c:___awmod@divisor+1)),c
 19221  003256  1E2A               	btfsc	status,0
 19222  003258  B0D8               	incf	((c:___awmod@divisor+1)),c
 19223  00325A  2A2A               	goto	l5112
 19224  00325C  EF30  F019         	
 19225                           l1462:
 19226  003260                     	line	19
 19227                           	
 19228                           l5112:
 19229  003260                     	movf	((c:___awmod@divisor)),c,w
 19230  003260  5029               iorwf	((c:___awmod@divisor+1)),c,w
 19231  003262  102A               	btfsc	status,2
 19232  003264  B4D8               	goto	u3371
 19233  003266  EF37  F019         	goto	u3370
 19234  00326A  EF39  F019         
 19235                           u3371:
 19236  00326E                     	goto	l5128
 19237  00326E  EF69  F019         u3370:
 19238  003272                     	line	20
 19239                           	
 19240                           l5114:
 19241  003272                     	movlw	low(01h)
 19242  003272  0E01               	movwf	((c:___awmod@counter)),c
 19243  003274  6E2B               	line	21
 19244                           	goto	l5118
 19245  003276  EF43  F019         	
 19246                           l1465:
 19247  00327A                     	line	22
 19248                           	
 19249                           l5116:
 19250  00327A                     	bcf	status,0
 19251  00327A  90D8               	rlcf	((c:___awmod@divisor)),c
 19252  00327C  3629               	rlcf	((c:___awmod@divisor+1)),c
 19253  00327E  362A               	line	23
 19254                           	incf	((c:___awmod@counter)),c
 19255  003280  2A2B               	goto	l5118
 19256  003282  EF43  F019         	line	24
 19257                           	
 19258                           l1464:
 19259  003286                     	line	21
 19260                           	
 19261                           l5118:
 19262  003286                     	
 19263                           	btfss	((c:___awmod@divisor+1)),c,(15)&7
 19264  003286  AE2A               	goto	u3381
 19265  003288  EF48  F019         	goto	u3380
 19266  00328C  EF4A  F019         u3381:
 19267  003290                     	goto	l5116
 19268  003290  EF3D  F019         u3380:
 19269  003294                     	goto	l5120
 19270  003294  EF4E  F019         	
 19271                           l1466:
 19272  003298                     	goto	l5120
 19273  003298  EF4E  F019         	line	25
 19274                           	
 19275                           l1467:
 19276  00329C                     	line	26
 19277                           	
 19278                           l5120:
 19279  00329C                     		movf	((c:___awmod@divisor)),c,w
 19280  00329C  5029               	subwf	((c:___awmod@dividend)),c,w
 19281  00329E  5C27               	movf	((c:___awmod@divisor+1)),c,w
 19282  0032A0  502A               	subwfb	((c:___awmod@dividend+1)),c,w
 19283  0032A2  5828               	btfss	status,0
 19284  0032A4  A0D8               	goto	u3391
 19285  0032A6  EF57  F019         	goto	u3390
 19286  0032AA  EF59  F019         
 19287                           u3391:
 19288  0032AE                     	goto	l5124
 19289  0032AE  EF5F  F019         u3390:
 19290  0032B2                     	line	27
 19291                           	
 19292                           l5122:
 19293  0032B2                     	movf	((c:___awmod@divisor)),c,w
 19294  0032B2  5029               	subwf	((c:___awmod@dividend)),c
 19295  0032B4  5E27               	movf	((c:___awmod@divisor+1)),c,w
 19296  0032B6  502A               	subwfb	((c:___awmod@dividend+1)),c
 19297  0032B8  5A28               
 19298                           	goto	l5124
 19299  0032BA  EF5F  F019         	
 19300                           l1468:
 19301  0032BE                     	line	28
 19302                           	
 19303                           l5124:
 19304  0032BE                     	bcf	status,0
 19305  0032BE  90D8               	rrcf	((c:___awmod@divisor+1)),c
 19306  0032C0  322A               	rrcf	((c:___awmod@divisor)),c
 19307  0032C2  3229               	line	29
 19308                           	
 19309                           l5126:
 19310  0032C4                     	decfsz	((c:___awmod@counter)),c
 19311  0032C4  2E2B               	
 19312                           	goto	l5120
 19313  0032C6  EF4E  F019         	goto	l5128
 19314  0032CA  EF69  F019         	
 19315                           l1469:
 19316  0032CE                     	goto	l5128
 19317  0032CE  EF69  F019         	line	30
 19318                           	
 19319                           l1463:
 19320  0032D2                     	line	31
 19321                           	
 19322                           l5128:
 19323  0032D2                     	movf	((c:___awmod@sign)),c,w
 19324  0032D2  502C               	btfsc	status,2
 19325  0032D4  B4D8               	goto	u3401
 19326  0032D6  EF6F  F019         	goto	u3400
 19327  0032DA  EF71  F019         u3401:
 19328  0032DE                     	goto	l5132
 19329  0032DE  EF77  F019         u3400:
 19330  0032E2                     	line	32
 19331                           	
 19332                           l5130:
 19333  0032E2                     	negf	((c:___awmod@dividend)),c
 19334  0032E2  6C27               	comf	((c:___awmod@dividend+1)),c
 19335  0032E4  1E28               	btfsc	status,0
 19336  0032E6  B0D8               	incf	((c:___awmod@dividend+1)),c
 19337  0032E8  2A28               	goto	l5132
 19338  0032EA  EF77  F019         	
 19339                           l1470:
 19340  0032EE                     	line	33
 19341                           	
 19342                           l5132:
 19343  0032EE                     	movff	(c:___awmod@dividend),(c:?___awmod)
 19344  0032EE  C027  F027         	movff	(c:___awmod@dividend+1),(c:?___awmod+1)
 19345  0032F2  C028  F028         	goto	l1471
 19346  0032F6  EF7D  F019         	
 19347                           l5134:
 19348  0032FA                     	line	34
 19349                           	
 19350                           l1471:
 19351  0032FA                     	return	;funcret
 19352  0032FA  0012               	opt stack 0
 19353                           GLOBAL	__end_of___awmod
 19354                           	__end_of___awmod:
 19355  0032FC                     	signat	___awmod,8314
 19356                           	global	_fifo_indicePrint_inc
 19357                           
 19358 ;; *************** function _fifo_indicePrint_inc *****************
 19359 ;; Defined at:
 19360 ;;		line 322 in file "fifo.c"
 19361 ;; Parameters:    Size  Location     Type
 19362 ;;		None
 19363 ;; Auto vars:     Size  Location     Type
 19364 ;;		None
 19365 ;; Return value:  Size  Location     Type
 19366 ;;                  1    wreg      void 
 19367 ;; Registers used:
 19368 ;;		wreg, status,2, status,0
 19369 ;; Tracked objects:
 19370 ;;		On entry : 0/0
 19371 ;;		On exit  : 0/0
 19372 ;;		Unchanged: 0/0
 19373 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19374 ;;      Params:         0       0       0       0       0       0       0       0       0       0
 19375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0
 19376 ;;      Temps:          7       0       0       0       0       0       0       0       0       0
 19377 ;;      Totals:         7       0       0       0       0       0       0       0       0       0
 19378 ;;Total ram usage:        7 bytes
 19379 ;; Hardware stack levels used:    1
 19380 ;; Hardware stack levels required when called:    2
 19381 ;; This function calls:
 19382 ;;		Nothing
 19383 ;; This function is called by:
 19384 ;;		_main
 19385 ;; This function uses a non-reentrant model
 19386 ;;
 19387                           psect	text34,class=CODE,space=0,reloc=2,group=0
 19388                           	file	"fifo.c"
 19389                           	line	322
 19390                           global __ptext34
 19391                           __ptext34:
 19392  003AB4                     psect	text34
 19393                           	file	"fifo.c"
 19394                           	line	322
 19395                           	global	__size_of_fifo_indicePrint_inc
 19396                           	__size_of_fifo_indicePrint_inc	equ	__end_of_fifo_indicePrint_inc-_fifo_indicePrint_inc

 19397  0000                     	
 19398                           _fifo_indicePrint_inc:
 19399  003AB4                     ;incstack = 0
 19400                           	opt	stack 28
 19401                           	line	324
 19402                           	
 19403                           l5806:
 19404  003AB4                     ;fifo.c: 324:     if( ind_print < 18 -1 )
 19405                           		movlw	011h-0
 19406  003AB4  0E11               	cpfslt	((c:_ind_print)),c
 19407  003AB6  605C               	goto	u4251
 19408  003AB8  EF60  F01D         	goto	u4250
 19409  003ABC  EF62  F01D         
 19410                           u4251:
 19411  003AC0                     	goto	l5814
 19412  003AC0  EF88  F01D         u4250:
 19413  003AC4                     	line	326
 19414                           	
 19415                           l5808:
 19416  003AC4                     ;fifo.c: 325:     {;fifo.c: 326:         if( ind_print < ind_fila-1 )
 19417                           	movlw	low(-1)
 19418  003AC4  0EFF               	movwf	(??_fifo_indicePrint_inc+0+0)&0ffh,c
 19419  003AC6  6E27               	movlw	high(-1)
 19420  003AC8  0EFF               	movwf	1+(??_fifo_indicePrint_inc+0+0)&0ffh,c
 19421  003ACA  6E28               	movf	((c:_ind_fila)),c,w
 19422  003ACC  505D               	movwf	(??_fifo_indicePrint_inc+2+0)&0ffh,c
 19423  003ACE  6E29               	clrf	(??_fifo_indicePrint_inc+2+0+1)&0ffh,c
 19424  003AD0  6A2A               
 19425                           	movf	(??_fifo_indicePrint_inc+0+0),c,w
 19426  003AD2  5027               	addwf	(??_fifo_indicePrint_inc+2+0),c
 19427  003AD4  2629               	movf	(??_fifo_indicePrint_inc+0+1),c,w
 19428  003AD6  5028               	addwfc	(??_fifo_indicePrint_inc+2+1),c
 19429  003AD8  222A               	movf	((c:_ind_print)),c,w
 19430  003ADA  505C               	movwf	(??_fifo_indicePrint_inc+4+0)&0ffh,c
 19431  003ADC  6E2B               	clrf	(??_fifo_indicePrint_inc+4+0+1)&0ffh,c
 19432  003ADE  6A2C               
 19433                           		movf	(??_fifo_indicePrint_inc+2+0),c,w
 19434  003AE0  5029               	subwf	(??_fifo_indicePrint_inc+4+0),c,w
 19435  003AE2  5C2B               	movf	(??_fifo_indicePrint_inc+4+1),c,w
 19436  003AE4  502C               	xorlw	80h
 19437  003AE6  0A80               	movwf	(??_fifo_indicePrint_inc+6+0)&0ffh,c
 19438  003AE8  6E2D               	movf	(??_fifo_indicePrint_inc+2+1),c,w
 19439  003AEA  502A               	xorlw	80h
 19440  003AEC  0A80               	subwfb	(??_fifo_indicePrint_inc+6+0)&0ffh,c,w
 19441  003AEE  582D               	btfsc	status,0
 19442  003AF0  B0D8               	goto	u4261
 19443  003AF2  EF7D  F01D         	goto	u4260
 19444  003AF6  EF7F  F01D         
 19445                           u4261:
 19446  003AFA                     	goto	l5812
 19447  003AFA  EF82  F01D         u4260:
 19448  003AFE                     	line	327
 19449                           	
 19450                           l5810:
 19451  003AFE                     ;fifo.c: 327:             ind_print++;
 19452                           	incf	((c:_ind_print)),c
 19453  003AFE  2A5C               	goto	l801
 19454  003B00  EF8C  F01D         	line	328
 19455                           ;fifo.c: 328:         else
 19456                           	
 19457                           l798:
 19458  003B04                     	line	329
 19459                           	
 19460                           l5812:
 19461  003B04                     ;fifo.c: 329:             ind_print = ind_fila-1;
 19462                           	decf	((c:_ind_fila)),c,w
 19463  003B04  045D               	movwf	((c:_ind_print)),c
 19464  003B06  6E5C               	goto	l801
 19465  003B08  EF8C  F01D         	
 19466                           l799:
 19467  003B0C                     	line	330
 19468                           ;fifo.c: 330:     }
 19469                           	goto	l801
 19470  003B0C  EF8C  F01D         	line	331
 19471                           ;fifo.c: 331:     else
 19472                           	
 19473                           l797:
 19474  003B10                     	line	332
 19475                           	
 19476                           l5814:
 19477  003B10                     ;fifo.c: 332:         ind_print = 18 -1;
 19478                           	movlw	low(011h)
 19479  003B10  0E11               	movwf	((c:_ind_print)),c
 19480  003B12  6E5C               	goto	l801
 19481  003B14  EF8C  F01D         	
 19482                           l800:
 19483  003B18                     	line	333
 19484                           	
 19485                           l801:
 19486  003B18                     	return	;funcret
 19487  003B18  0012               	opt stack 0
 19488                           GLOBAL	__end_of_fifo_indicePrint_inc
 19489                           	__end_of_fifo_indicePrint_inc:
 19490  003B1A                     	signat	_fifo_indicePrint_inc,89
 19491                           	global	_fifo_indicePrint_dec
 19492                           
 19493 ;; *************** function _fifo_indicePrint_dec *****************
 19494 ;; Defined at:
 19495 ;;		line 334 in file "fifo.c"
 19496 ;; Parameters:    Size  Location     Type
 19497 ;;		None
 19498 ;; Auto vars:     Size  Location     Type
 19499 ;;		None
 19500 ;; Return value:  Size  Location     Type
 19501 ;;                  1    wreg      void 
 19502 ;; Registers used:
 19503 ;;		wreg, status,2, status,0
 19504 ;; Tracked objects:
 19505 ;;		On entry : 0/0
 19506 ;;		On exit  : 0/0
 19507 ;;		Unchanged: 0/0
 19508 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19509 ;;      Params:         0       0       0       0       0       0       0       0       0       0
 19510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0
 19511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0
 19512 ;;      Totals:         0       0       0       0       0       0       0       0       0       0
 19513 ;;Total ram usage:        0 bytes
 19514 ;; Hardware stack levels used:    1
 19515 ;; Hardware stack levels required when called:    2
 19516 ;; This function calls:
 19517 ;;		Nothing
 19518 ;; This function is called by:
 19519 ;;		_main
 19520 ;; This function uses a non-reentrant model
 19521 ;;
 19522                           psect	text35,class=CODE,space=0,reloc=2,group=0
 19523                           	line	334
 19524                           global __ptext35
 19525                           __ptext35:
 19526  0042B0                     psect	text35
 19527                           	file	"fifo.c"
 19528                           	line	334
 19529                           	global	__size_of_fifo_indicePrint_dec
 19530                           	__size_of_fifo_indicePrint_dec	equ	__end_of_fifo_indicePrint_dec-_fifo_indicePrint_dec

 19531  0000                     	
 19532                           _fifo_indicePrint_dec:
 19533  0042B0                     ;incstack = 0
 19534                           	opt	stack 28
 19535                           	line	336
 19536                           	
 19537                           l5816:
 19538  0042B0                     ;fifo.c: 336:     if( ind_print > 2 )
 19539                           		movlw	03h-1
 19540  0042B0  0E02               	cpfsgt	((c:_ind_print)),c
 19541  0042B2  645C               	goto	u4271
 19542  0042B4  EF5E  F021         	goto	u4270
 19543  0042B8  EF60  F021         
 19544                           u4271:
 19545  0042BC                     	goto	l805
 19546  0042BC  EF63  F021         u4270:
 19547  0042C0                     	line	337
 19548                           	
 19549                           l5818:
 19550  0042C0                     ;fifo.c: 337:         ind_print--;
 19551                           	decf	((c:_ind_print)),c
 19552  0042C0  065C               	goto	l805
 19553  0042C2  EF63  F021         	
 19554                           l804:
 19555  0042C6                     	line	338
 19556                           	
 19557                           l805:
 19558  0042C6                     	return	;funcret
 19559  0042C6  0012               	opt stack 0
 19560                           GLOBAL	__end_of_fifo_indicePrint_dec
 19561                           	__end_of_fifo_indicePrint_dec:
 19562  0042C8                     	signat	_fifo_indicePrint_dec,89
 19563                           	global	_fifo_indice
 19564                           
 19565 ;; *************** function _fifo_indice *****************
 19566 ;; Defined at:
 19567 ;;		line 307 in file "fifo.c"
 19568 ;; Parameters:    Size  Location     Type
 19569 ;;		None
 19570 ;; Auto vars:     Size  Location     Type
 19571 ;;		None
 19572 ;; Return value:  Size  Location     Type
 19573 ;;                  1    wreg      unsigned char 
 19574 ;; Registers used:
 19575 ;;		wreg, status,2
 19576 ;; Tracked objects:
 19577 ;;		On entry : 0/0
 19578 ;;		On exit  : 0/0
 19579 ;;		Unchanged: 0/0
 19580 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19581 ;;      Params:         0       0       0       0       0       0       0       0       0       0
 19582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0
 19583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0
 19584 ;;      Totals:         0       0       0       0       0       0       0       0       0       0
 19585 ;;Total ram usage:        0 bytes
 19586 ;; Hardware stack levels used:    1
 19587 ;; Hardware stack levels required when called:    2
 19588 ;; This function calls:
 19589 ;;		Nothing
 19590 ;; This function is called by:
 19591 ;;		_main
 19592 ;; This function uses a non-reentrant model
 19593 ;;
 19594                           psect	text36,class=CODE,space=0,reloc=2,group=0
 19595                           	line	307
 19596                           global __ptext36
 19597                           __ptext36:
 19598  0043B0                     psect	text36
 19599                           	file	"fifo.c"
 19600                           	line	307
 19601                           	global	__size_of_fifo_indice
 19602                           	__size_of_fifo_indice	equ	__end_of_fifo_indice-_fifo_indice
 19603  0000                     	
 19604                           _fifo_indice:
 19605  0043B0                     ;incstack = 0
 19606                           	opt	stack 28
 19607                           	line	309
 19608                           	
 19609                           l5820:
 19610  0043B0                     ;fifo.c: 309:     return ( ind_fila );
 19611                           	movf	((c:_ind_fila)),c,w
 19612  0043B0  505D               	goto	l788
 19613  0043B2  EFDB  F021         	
 19614                           l5822:
 19615  0043B6                     	line	310
 19616                           	
 19617                           l788:
 19618  0043B6                     	return	;funcret
 19619  0043B6  0012               	opt stack 0
 19620                           GLOBAL	__end_of_fifo_indice
 19621                           	__end_of_fifo_indice:
 19622  0043B8                     	signat	_fifo_indice,89
 19623                           	global	_fifo_disponivel
 19624                           
 19625 ;; *************** function _fifo_disponivel *****************
 19626 ;; Defined at:
 19627 ;;		line 312 in file "fifo.c"
 19628 ;; Parameters:    Size  Location     Type
 19629 ;;		None
 19630 ;; Auto vars:     Size  Location     Type
 19631 ;;		None
 19632 ;; Return value:  Size  Location     Type
 19633 ;;                  1    wreg      unsigned char 
 19634 ;; Registers used:
 19635 ;;		wreg, status,2, status,0
 19636 ;; Tracked objects:
 19637 ;;		On entry : 0/0
 19638 ;;		On exit  : 0/0
 19639 ;;		Unchanged: 0/0
 19640 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19641 ;;      Params:         0       0       0       0       0       0       0       0       0       0
 19642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0
 19643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0
 19644 ;;      Totals:         0       0       0       0       0       0       0       0       0       0
 19645 ;;Total ram usage:        0 bytes
 19646 ;; Hardware stack levels used:    1
 19647 ;; Hardware stack levels required when called:    2
 19648 ;; This function calls:
 19649 ;;		Nothing
 19650 ;; This function is called by:
 19651 ;;		_main
 19652 ;; This function uses a non-reentrant model
 19653 ;;
 19654                           psect	text37,class=CODE,space=0,reloc=2,group=0
 19655                           	line	312
 19656                           global __ptext37
 19657                           __ptext37:
 19658  00427C                     psect	text37
 19659                           	file	"fifo.c"
 19660                           	line	312
 19661                           	global	__size_of_fifo_disponivel
 19662                           	__size_of_fifo_disponivel	equ	__end_of_fifo_disponivel-_fifo_disponivel
 19663  0000                     	
 19664                           _fifo_disponivel:
 19665  00427C                     ;incstack = 0
 19666                           	opt	stack 28
 19667                           	line	314
 19668                           	
 19669                           l5802:
 19670  00427C                     ;fifo.c: 314:     return( ind_fila < 18 );
 19671                           		movlw	012h-1
 19672  00427C  0E11               	cpfsgt	((c:_ind_fila)),c
 19673  00427E  645D               	goto	u4231
 19674  004280  EF44  F021         	goto	u4230
 19675  004284  EF47  F021         
 19676                           u4231:
 19677  004288                     	movlw	1
 19678  004288  0E01               	goto	u4240
 19679  00428A  EF48  F021         u4230:
 19680  00428E                     	movlw	0
 19681  00428E  0E00               u4240:
 19682  004290                     	goto	l791
 19683  004290  EF4A  F021         	
 19684                           l5804:
 19685  004294                     	line	315
 19686                           	
 19687                           l791:
 19688  004294                     	return	;funcret
 19689  004294  0012               	opt stack 0
 19690                           GLOBAL	__end_of_fifo_disponivel
 19691                           	__end_of_fifo_disponivel:
 19692  004296                     	signat	_fifo_disponivel,89
 19693                           	global	_fifo_delete
 19694                           
 19695 ;; *************** function _fifo_delete *****************
 19696 ;; Defined at:
 19697 ;;		line 183 in file "fifo.c"
 19698 ;; Parameters:    Size  Location     Type
 19699 ;;		None
 19700 ;; Auto vars:     Size  Location     Type
 19701 ;;		None
 19702 ;; Return value:  Size  Location     Type
 19703 ;;                  1    wreg      void 
 19704 ;; Registers used:
 19705 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19706 ;; Tracked objects:
 19707 ;;		On entry : 0/0
 19708 ;;		On exit  : 0/0
 19709 ;;		Unchanged: 0/0
 19710 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19711 ;;      Params:         0       0       0       0       0       0       0       0       0       0
 19712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0
 19713 ;;      Temps:          2       0       0       0       0       0       0       0       0       0
 19714 ;;      Totals:         2       0       0       0       0       0       0       0       0       0
 19715 ;;Total ram usage:        2 bytes
 19716 ;; Hardware stack levels used:    1
 19717 ;; Hardware stack levels required when called:    5
 19718 ;; This function calls:
 19719 ;;		_alt_atuador
 19720 ;;		_codifica
 19721 ;;		_decodifica
 19722 ;;		_fifo_alinharPrint
 19723 ;; This function is called by:
 19724 ;;		_main
 19725 ;; This function uses a non-reentrant model
 19726 ;;
 19727                           psect	text38,class=CODE,space=0,reloc=2,group=0
 19728                           	line	183
 19729                           global __ptext38
 19730                           __ptext38:
 19731  0033B8                     psect	text38
 19732                           	file	"fifo.c"
 19733                           	line	183
 19734                           	global	__size_of_fifo_delete
 19735                           	__size_of_fifo_delete	equ	__end_of_fifo_delete-_fifo_delete
 19736  0000                     	
 19737                           _fifo_delete:
 19738  0033B8                     ;incstack = 0
 19739                           	opt	stack 25
 19740                           	line	185
 19741                           	
 19742                           l5824:
 19743  0033B8                     ;fifo.c: 185:     if(ind_fila)
 19744                           	movf	((c:_ind_fila)),c,w
 19745  0033B8  505D               	btfsc	status,2
 19746  0033BA  B4D8               	goto	u4281
 19747  0033BC  EFE2  F019         	goto	u4280
 19748  0033C0  EFE4  F019         u4281:
 19749  0033C4                     	goto	l5836
 19750  0033C4  EF35  F01A         u4280:
 19751  0033C8                     	line	187
 19752                           	
 19753                           l5826:
 19754  0033C8                     ;fifo.c: 186:     {;fifo.c: 187:         if(ind_fila > 2)
 19755                           		movlw	03h-1
 19756  0033C8  0E02               	cpfsgt	((c:_ind_fila)),c
 19757  0033CA  645D               	goto	u4291
 19758  0033CC  EFEA  F019         	goto	u4290
 19759  0033D0  EFEC  F019         
 19760                           u4291:
 19761  0033D4                     	goto	l5830
 19762  0033D4  EFEF  F019         u4290:
 19763  0033D8                     	line	188
 19764                           	
 19765                           l5828:
 19766  0033D8                     ;fifo.c: 188:             ind_fila--;
 19767                           	decf	((c:_ind_fila)),c
 19768  0033D8  065D               	goto	l5830
 19769  0033DA  EFEF  F019         	
 19770                           l729:
 19771  0033DE                     	line	189
 19772                           	
 19773                           l5830:
 19774  0033DE                     ;fifo.c: 189:         if(fila[ind_fila] > 0xDC)
 19775                           	movf	((c:_ind_fila)),c,w
 19776  0033DE  505D               	mullw	01h
 19777  0033E0  0D01               	movlw	low(_fila)
 19778  0033E2  0E15               	addwf	(prodl),c,w
 19779  0033E4  24F3               	movwf	c:fsr2l
 19780  0033E6  6ED9               	movlw	high(_fila)
 19781  0033E8  0E00               	addwfc	prod+1,w
 19782  0033EA  20F4               	movwf	1+c:fsr2l
 19783  0033EC  6EDA               		movlw	0DDh-1
 19784  0033EE  0EDC               	cpfsgt	indf2
 19785  0033F0  64DF               	goto	u4301
 19786  0033F2  EFFD  F019         	goto	u4300
 19787  0033F6  EFFF  F019         
 19788                           u4301:
 19789  0033FA                     	goto	l5834
 19790  0033FA  EF29  F01A         u4300:
 19791  0033FE                     	line	191
 19792                           	
 19793                           l5832:
 19794  0033FE                     ;fifo.c: 190:         {;fifo.c: 191:             decodifica(&fila[ind_fila]);
 19795                           	movf	((c:_ind_fila)),c,w
 19796  0033FE  505D               	mullw	01h
 19797  003400  0D01               	movlw	low(_fila)
 19798  003402  0E15               	addwf	(prodl),c,w
 19799  003404  24F3               	movwf	((c:decodifica@d)),c
 19800  003406  6E27               	movlw	high(_fila)
 19801  003408  0E00               	addwfc	prod+1,w
 19802  00340A  20F4               	movwf	1+((c:decodifica@d)),c
 19803  00340C  6E28               	call	_decodifica	;wreg free
 19804  00340E  ECCB  F014         	line	192
 19805                           ;fifo.c: 192:             alt_atuador(fila[ind_fila] & ~0x20);
 19806                           	movf	((c:_ind_fila)),c,w
 19807  003412  505D               	mullw	01h
 19808  003414  0D01               	movlw	low(_fila)
 19809  003416  0E15               	addwf	(prodl),c,w
 19810  003418  24F3               	movwf	c:fsr2l
 19811  00341A  6ED9               	movlw	high(_fila)
 19812  00341C  0E00               	addwfc	prod+1,w
 19813  00341E  20F4               	movwf	1+c:fsr2l
 19814  003420  6EDA               	movf	indf2,w
 19815  003422  50DF               	andlw	low(0DFh)
 19816  003424  0BDF               	
 19817                           	call	_alt_atuador
 19818  003426  EC94  F01A         	line	193
 19819                           ;fifo.c: 193:             codifica('a',fila[ind_fila]);
 19820                           	movf	((c:_ind_fila)),c,w
 19821  00342A  505D               	mullw	01h
 19822  00342C  0D01               	movlw	low(_fila)
 19823  00342E  0E15               	addwf	(prodl),c,w
 19824  003430  24F3               	movwf	c:fsr2l
 19825  003432  6ED9               	movlw	high(_fila)
 19826  003434  0E00               	addwfc	prod+1,w
 19827  003436  20F4               	movwf	1+c:fsr2l
 19828  003438  6EDA               	movf	indf2,w
 19829  00343A  50DF               	movwf	(??_fifo_delete+0+0)&0ffh,c
 19830  00343C  6E36               	clrf	(??_fifo_delete+0+0+1)&0ffh,c
 19831  00343E  6A37               
 19832                           	movff	??_fifo_delete+0+0,(c:codifica@dado)
 19833  003440  C036  F027         	movff	??_fifo_delete+0+1,(c:codifica@dado+1)
 19834  003444  C037  F028         	movlw	(061h)&0ffh
 19835  003448  0E61               	
 19836                           	call	_codifica
 19837  00344A  EC17  F014         	goto	l5834
 19838  00344E  EF29  F01A         	line	194
 19839                           ;fifo.c: 194:         }
 19840                           	
 19841                           l730:
 19842  003452                     	line	195
 19843                           	
 19844                           l5834:
 19845  003452                     ;fifo.c: 195:         fila[ind_fila] = 0;
 19846                           	movf	((c:_ind_fila)),c,w
 19847  003452  505D               	mullw	01h
 19848  003454  0D01               	movlw	low(_fila)
 19849  003456  0E15               	addwf	(prodl),c,w
 19850  003458  24F3               	movwf	c:fsr2l
 19851  00345A  6ED9               	movlw	high(_fila)
 19852  00345C  0E00               	addwfc	prod+1,w
 19853  00345E  20F4               	movwf	1+c:fsr2l
 19854  003460  6EDA               	movlw	low(0)
 19855  003462  0E00               	movwf	indf2
 19856  003464  6EDF               	goto	l5836
 19857  003466  EF35  F01A         	line	196
 19858                           ;fifo.c: 196:     }
 19859                           	
 19860                           l728:
 19861  00346A                     	line	197
 19862                           	
 19863                           l5836:
 19864  00346A                     ;fifo.c: 197:     fifo_alinharPrint();
 19865                           	call	_fifo_alinharPrint	;wreg free
 19866  00346A  ECA9  F016         	line	198
 19867                           	
 19868                           l731:
 19869  00346E                     	return	;funcret
 19870  00346E  0012               	opt stack 0
 19871                           GLOBAL	__end_of_fifo_delete
 19872                           	__end_of_fifo_delete:
 19873  003470                     	signat	_fifo_delete,89
 19874                           	global	_decodifica
 19875                           
 19876 ;; *************** function _decodifica *****************
 19877 ;; Defined at:
 19878 ;;		line 228 in file "fifo.c"
 19879 ;; Parameters:    Size  Location     Type
 19880 ;;  d               2    0[COMRAM] PTR unsigned char 
 19881 ;;		 -> printExec@passo(1), fifo_print@comando(1), fila(18), main@vetor_aux(16), 
 19882 ;;		 -> main@auxPasso(1), 
 19883 ;; Auto vars:     Size  Location     Type
 19884 ;;		None
 19885 ;; Return value:  Size  Location     Type
 19886 ;;                  1    wreg      void 
 19887 ;; Registers used:
 19888 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19889 ;; Tracked objects:
 19890 ;;		On entry : 0/0
 19891 ;;		On exit  : 0/0
 19892 ;;		Unchanged: 0/0
 19893 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19894 ;;      Params:         2       0       0       0       0       0       0       0       0       0
 19895 ;;      Locals:         0       0       0       0       0       0       0       0       0       0
 19896 ;;      Temps:          2       0       0       0       0       0       0       0       0       0
 19897 ;;      Totals:         4       0       0       0       0       0       0       0       0       0
 19898 ;;Total ram usage:        4 bytes
 19899 ;; Hardware stack levels used:    1
 19900 ;; Hardware stack levels required when called:    2
 19901 ;; This function calls:
 19902 ;;		Nothing
 19903 ;; This function is called by:
 19904 ;;		_main
 19905 ;;		_fifo_delete
 19906 ;;		_fifo_print
 19907 ;;		_printExec
 19908 ;; This function uses a non-reentrant model
 19909 ;;
 19910                           psect	text39,class=CODE,space=0,reloc=2,group=0
 19911                           	line	228
 19912                           global __ptext39
 19913                           __ptext39:
 19914  002996                     psect	text39
 19915                           	file	"fifo.c"
 19916                           	line	228
 19917                           	global	__size_of_decodifica
 19918                           	__size_of_decodifica	equ	__end_of_decodifica-_decodifica
 19919  0000                     	
 19920                           _decodifica:
 19921  002996                     ;incstack = 0
 19922                           	opt	stack 27
 19923                           	line	230
 19924                           	
 19925                           l5136:
 19926  002996                     ;fifo.c: 228: void decodifica( unsigned char *d );fifo.c: 229: {;fifo.c: 230:     if( *d
                                  <= 100 )
 19927                           	movff	(c:decodifica@d),fsr2l
 19928  002996  C027  FFD9         	movff	(c:decodifica@d+1),fsr2h
 19929  00299A  C028  FFDA         		movlw	065h-0
 19930  00299E  0E65               	cpfslt	indf2
 19931  0029A0  60DF               	goto	u3411
 19932  0029A2  EFD5  F014         	goto	u3410
 19933  0029A6  EFD7  F014         
 19934                           u3411:
 19935  0029AA                     	goto	l5140
 19936  0029AA  EFDB  F014         u3410:
 19937  0029AE                     	goto	l768
 19938  0029AE  EF74  F015         	line	233
 19939                           	
 19940                           l5138:
 19941  0029B2                     ;fifo.c: 231:     {;fifo.c: 233:     }
 19942                           	goto	l768
 19943  0029B2  EF74  F015         	line	234
 19944                           ;fifo.c: 234:     else if( *d <= 220 )
 19945                           	
 19946                           l753:
 19947  0029B6                     	
 19948                           l5140:
 19949  0029B6                     	movff	(c:decodifica@d),fsr2l
 19950  0029B6  C027  FFD9         	movff	(c:decodifica@d+1),fsr2h
 19951  0029BA  C028  FFDA         		movlw	0DDh-0
 19952  0029BE  0EDD               	cpfslt	indf2
 19953  0029C0  60DF               	goto	u3421
 19954  0029C2  EFE5  F014         	goto	u3420
 19955  0029C6  EFE7  F014         
 19956                           u3421:
 19957  0029CA                     	goto	l5164
 19958  0029CA  EF3B  F015         u3420:
 19959  0029CE                     	line	236
 19960                           	
 19961                           l5142:
 19962  0029CE                     ;fifo.c: 235:     {;fifo.c: 236:         *d -= 0x64;
 19963                           	movff	(c:decodifica@d),fsr2l
 19964  0029CE  C027  FFD9         	movff	(c:decodifica@d+1),fsr2h
 19965  0029D2  C028  FFDA         	movlw	064h
 19966  0029D6  0E64               	subwf	indf2
 19967  0029D8  5EDF               	line	237
 19968                           ;fifo.c: 237:     } else
 19969                           	goto	l768
 19970  0029DA  EF74  F015         	
 19971                           l755:
 19972  0029DE                     	line	239
 19973                           ;fifo.c: 238:     {;fifo.c: 239:         switch( *d )
 19974                           	goto	l5164
 19975  0029DE  EF3B  F015         	line	241
 19976                           ;fifo.c: 240:         {;fifo.c: 241:             case 221: *d = 'A'; break;
 19977                           	
 19978                           l758:
 19979  0029E2                     	
 19980                           l5144:
 19981  0029E2                     	movff	(c:decodifica@d),fsr2l
 19982  0029E2  C027  FFD9         	movff	(c:decodifica@d+1),fsr2h
 19983  0029E6  C028  FFDA         	movlw	low(041h)
 19984  0029EA  0E41               	movwf	indf2
 19985  0029EC  6EDF               	goto	l768
 19986  0029EE  EF74  F015         	line	242
 19987                           ;fifo.c: 242:             case 222: *d = 'a'; break;
 19988                           	
 19989                           l760:
 19990  0029F2                     	
 19991                           l5146:
 19992  0029F2                     	movff	(c:decodifica@d),fsr2l
 19993  0029F2  C027  FFD9         	movff	(c:decodifica@d+1),fsr2h
 19994  0029F6  C028  FFDA         	movlw	low(061h)
 19995  0029FA  0E61               	movwf	indf2
 19996  0029FC  6EDF               	goto	l768
 19997  0029FE  EF74  F015         	line	243
 19998                           ;fifo.c: 243:             case 223: *d = 'B'; break;
 19999                           	
 20000                           l761:
 20001  002A02                     	
 20002                           l5148:
 20003  002A02                     	movff	(c:decodifica@d),fsr2l
 20004  002A02  C027  FFD9         	movff	(c:decodifica@d+1),fsr2h
 20005  002A06  C028  FFDA         	movlw	low(042h)
 20006  002A0A  0E42               	movwf	indf2
 20007  002A0C  6EDF               	goto	l768
 20008  002A0E  EF74  F015         	line	244
 20009                           ;fifo.c: 244:             case 224: *d = 'b'; break;
 20010                           	
 20011                           l762:
 20012  002A12                     	
 20013                           l5150:
 20014  002A12                     	movff	(c:decodifica@d),fsr2l
 20015  002A12  C027  FFD9         	movff	(c:decodifica@d+1),fsr2h
 20016  002A16  C028  FFDA         	movlw	low(062h)
 20017  002A1A  0E62               	movwf	indf2
 20018  002A1C  6EDF               	goto	l768
 20019  002A1E  EF74  F015         	line	245
 20020                           ;fifo.c: 245:             case 225: *d = 'C'; break;
 20021                           	
 20022                           l763:
 20023  002A22                     	
 20024                           l5152:
 20025  002A22                     	movff	(c:decodifica@d),fsr2l
 20026  002A22  C027  FFD9         	movff	(c:decodifica@d+1),fsr2h
 20027  002A26  C028  FFDA         	movlw	low(043h)
 20028  002A2A  0E43               	movwf	indf2
 20029  002A2C  6EDF               	goto	l768
 20030  002A2E  EF74  F015         	line	246
 20031                           ;fifo.c: 246:             case 226: *d = 'c'; break;
 20032                           	
 20033                           l764:
 20034  002A32                     	
 20035                           l5154:
 20036  002A32                     	movff	(c:decodifica@d),fsr2l
 20037  002A32  C027  FFD9         	movff	(c:decodifica@d+1),fsr2h
 20038  002A36  C028  FFDA         	movlw	low(063h)
 20039  002A3A  0E63               	movwf	indf2
 20040  002A3C  6EDF               	goto	l768
 20041  002A3E  EF74  F015         	line	247
 20042                           ;fifo.c: 247:             case 227: *d = 'D'; break;
 20043                           	
 20044                           l765:
 20045  002A42                     	
 20046                           l5156:
 20047  002A42                     	movff	(c:decodifica@d),fsr2l
 20048  002A42  C027  FFD9         	movff	(c:decodifica@d+1),fsr2h
 20049  002A46  C028  FFDA         	movlw	low(044h)
 20050  002A4A  0E44               	movwf	indf2
 20051  002A4C  6EDF               	goto	l768
 20052  002A4E  EF74  F015         	line	248
 20053                           ;fifo.c: 248:             case 228: *d = 'd'; break;
 20054                           	
 20055                           l766:
 20056  002A52                     	
 20057                           l5158:
 20058  002A52                     	movff	(c:decodifica@d),fsr2l
 20059  002A52  C027  FFD9         	movff	(c:decodifica@d+1),fsr2h
 20060  002A56  C028  FFDA         	movlw	low(064h)
 20061  002A5A  0E64               	movwf	indf2
 20062  002A5C  6EDF               	goto	l768
 20063  002A5E  EF74  F015         	line	249
 20064                           ;fifo.c: 249:             case 254: *d = 0 ; break;
 20065                           	
 20066                           l767:
 20067  002A62                     	
 20068                           l5160:
 20069  002A62                     	movff	(c:decodifica@d),fsr2l
 20070  002A62  C027  FFD9         	movff	(c:decodifica@d+1),fsr2h
 20071  002A66  C028  FFDA         	movlw	low(0)
 20072  002A6A  0E00               	movwf	indf2
 20073  002A6C  6EDF               	goto	l768
 20074  002A6E  EF74  F015         	line	250
 20075                           	
 20076                           l5162:
 20077  002A72                     ;fifo.c: 250:         }
 20078                           	goto	l768
 20079  002A72  EF74  F015         	
 20080                           l757:
 20081  002A76                     	
 20082                           l5164:
 20083  002A76                     	movff	(c:decodifica@d),fsr2l
 20084  002A76  C027  FFD9         	movff	(c:decodifica@d+1),fsr2h
 20085  002A7A  C028  FFDA         	movf	indf2,w
 20086  002A7E  50DF               	movwf	(??_decodifica+0+0)&0ffh,c
 20087  002A80  6E29               	clrf	(??_decodifica+0+0+1)&0ffh,c
 20088  002A82  6A2A               
 20089                           	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
 20090                           ; Switch size 1, requested type "space"
 20091                           ; Number of cases is 1, Range of values is 0 to 0
 20092                           ; switch strategies available:
 20093                           ; Name         Instructions Cycles
 20094                           ; simple_byte            4     3 (average)
 20095                           ;	Chosen strategy is simple_byte
 20096                           
 20097                           	movf ??_decodifica+0+1,c,w
 20098  002A84  502A               	xorlw	0^0	; case 0
 20099  002A86  0A00               	skipnz
 20100  002A88  B4D8               	goto	l7852
 20101  002A8A  EF49  F015         	goto	l768
 20102  002A8E  EF74  F015         	
 20103                           l7852:
 20104  002A92                     ; Switch size 1, requested type "space"
 20105                           ; Number of cases is 9, Range of values is 221 to 254
 20106                           ; switch strategies available:
 20107                           ; Name         Instructions Cycles
 20108                           ; simple_byte           28    15 (average)
 20109                           ;	Chosen strategy is simple_byte
 20110                           
 20111                           	movf ??_decodifica+0+0,c,w
 20112  002A92  5029               	xorlw	221^0	; case 221
 20113  002A94  0ADD               	skipnz
 20114  002A96  B4D8               	goto	l5144
 20115  002A98  EFF1  F014         	xorlw	222^221	; case 222
 20116  002A9C  0A03               	skipnz
 20117  002A9E  B4D8               	goto	l5146
 20118  002AA0  EFF9  F014         	xorlw	223^222	; case 223
 20119  002AA4  0A01               	skipnz
 20120  002AA6  B4D8               	goto	l5148
 20121  002AA8  EF01  F015         	xorlw	224^223	; case 224
 20122  002AAC  0A3F               	skipnz
 20123  002AAE  B4D8               	goto	l5150
 20124  002AB0  EF09  F015         	xorlw	225^224	; case 225
 20125  002AB4  0A01               	skipnz
 20126  002AB6  B4D8               	goto	l5152
 20127  002AB8  EF11  F015         	xorlw	226^225	; case 226
 20128  002ABC  0A03               	skipnz
 20129  002ABE  B4D8               	goto	l5154
 20130  002AC0  EF19  F015         	xorlw	227^226	; case 227
 20131  002AC4  0A01               	skipnz
 20132  002AC6  B4D8               	goto	l5156
 20133  002AC8  EF21  F015         	xorlw	228^227	; case 228
 20134  002ACC  0A07               	skipnz
 20135  002ACE  B4D8               	goto	l5158
 20136  002AD0  EF29  F015         	xorlw	254^228	; case 254
 20137  002AD4  0A1A               	skipnz
 20138  002AD6  B4D8               	goto	l5160
 20139  002AD8  EF31  F015         	goto	l768
 20140  002ADC  EF74  F015         
 20141                           	
 20142                           l759:
 20143  002AE0                     	goto	l768
 20144  002AE0  EF74  F015         	line	251
 20145                           ;fifo.c: 251:     }
 20146                           	
 20147                           l756:
 20148  002AE4                     	goto	l768
 20149  002AE4  EF74  F015         	
 20150                           l754:
 20151  002AE8                     	line	252
 20152                           	
 20153                           l768:
 20154  002AE8                     	return	;funcret
 20155  002AE8  0012               	opt stack 0
 20156                           GLOBAL	__end_of_decodifica
 20157                           	__end_of_decodifica:
 20158  002AEA                     	signat	_decodifica,4217
 20159                           	global	_alt_atuador
 20160                           
 20161 ;; *************** function _alt_atuador *****************
 20162 ;; Defined at:
 20163 ;;		line 92 in file "fifo.c"
 20164 ;; Parameters:    Size  Location     Type
 20165 ;;  tecla           1    wreg     unsigned char 
 20166 ;; Auto vars:     Size  Location     Type
 20167 ;;  tecla           1    2[COMRAM] unsigned char 
 20168 ;; Return value:  Size  Location     Type
 20169 ;;                  1    wreg      void 
 20170 ;; Registers used:
 20171 ;;		wreg, status,2, status,0
 20172 ;; Tracked objects:
 20173 ;;		On entry : 0/0
 20174 ;;		On exit  : 0/0
 20175 ;;		Unchanged: 0/0
 20176 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20177 ;;      Params:         0       0       0       0       0       0       0       0       0       0
 20178 ;;      Locals:         1       0       0       0       0       0       0       0       0       0
 20179 ;;      Temps:          2       0       0       0       0       0       0       0       0       0
 20180 ;;      Totals:         3       0       0       0       0       0       0       0       0       0
 20181 ;;Total ram usage:        3 bytes
 20182 ;; Hardware stack levels used:    1
 20183 ;; Hardware stack levels required when called:    2
 20184 ;; This function calls:
 20185 ;;		Nothing
 20186 ;; This function is called by:
 20187 ;;		_main
 20188 ;;		_manipula_atuadores_init
 20189 ;;		_fifo_delete
 20190 ;; This function uses a non-reentrant model
 20191 ;;
 20192                           psect	text40,class=CODE,space=0,reloc=2,group=0
 20193                           	line	92
 20194                           global __ptext40
 20195                           __ptext40:
 20196  003528                     psect	text40
 20197                           	file	"fifo.c"
 20198                           	line	92
 20199                           	global	__size_of_alt_atuador
 20200                           	__size_of_alt_atuador	equ	__end_of_alt_atuador-_alt_atuador
 20201  0000                     	
 20202                           _alt_atuador:
 20203  003528                     ;incstack = 0
 20204                           	opt	stack 27
 20205                           ;alt_atuador@tecla stored from wreg
 20206                           	movwf	((c:alt_atuador@tecla)),c
 20207  003528  6E29               	line	94
 20208                           	
 20209                           l5170:
 20210  00352A                     ;fifo.c: 92: void alt_atuador( char tecla );fifo.c: 93: {;fifo.c: 94:     switch(tecla)

 20211                           	goto	l5174
 20212  00352A  EFC5  F01A         	line	96
 20213                           ;fifo.c: 95:     {;fifo.c: 96:         case 'A': atuador.A = atuador.A ^ 1; break;
 20214                           	
 20215                           l685:
 20216  00352E                     	btfss	((c:_atuador)),c,0
 20217  00352E  A013               	goto	u3431
 20218  003530  EF9C  F01A         	goto	u3430
 20219  003534  EF9F  F01A         u3431:
 20220  003538                     	bsf	((c:_atuador)),c,0
 20221  003538  8013               	goto	u3445
 20222  00353A  EFA0  F01A         u3430:
 20223  00353E                     	bcf	((c:_atuador)),c,0
 20224  00353E  9013               u3445:
 20225  003540                     	goto	l690
 20226  003540  EFE2  F01A         	line	97
 20227                           ;fifo.c: 97:         case 'B': atuador.B = atuador.B ^ 1; break;
 20228                           	
 20229                           l687:
 20230  003544                     	btfss	((c:_atuador)),c,1
 20231  003544  A213               	goto	u3451
 20232  003546  EFA7  F01A         	goto	u3450
 20233  00354A  EFAA  F01A         u3451:
 20234  00354E                     	bsf	((c:_atuador)),c,1
 20235  00354E  8213               	goto	u3465
 20236  003550  EFAB  F01A         u3450:
 20237  003554                     	bcf	((c:_atuador)),c,1
 20238  003554  9213               u3465:
 20239  003556                     	goto	l690
 20240  003556  EFE2  F01A         	line	98
 20241                           ;fifo.c: 98:         case 'C': atuador.C = atuador.C ^ 1; break;
 20242                           	
 20243                           l688:
 20244  00355A                     	btfss	((c:_atuador)),c,2
 20245  00355A  A413               	goto	u3471
 20246  00355C  EFB2  F01A         	goto	u3470
 20247  003560  EFB5  F01A         u3471:
 20248  003564                     	bsf	((c:_atuador)),c,2
 20249  003564  8413               	goto	u3485
 20250  003566  EFB6  F01A         u3470:
 20251  00356A                     	bcf	((c:_atuador)),c,2
 20252  00356A  9413               u3485:
 20253  00356C                     	goto	l690
 20254  00356C  EFE2  F01A         	line	99
 20255                           ;fifo.c: 99:         case 'D': atuador.D = atuador.D ^ 1; break;
 20256                           	
 20257                           l689:
 20258  003570                     	btfss	((c:_atuador)),c,3
 20259  003570  A613               	goto	u3491
 20260  003572  EFBD  F01A         	goto	u3490
 20261  003576  EFC0  F01A         u3491:
 20262  00357A                     	bsf	((c:_atuador)),c,3
 20263  00357A  8613               	goto	u3505
 20264  00357C  EFC1  F01A         u3490:
 20265  003580                     	bcf	((c:_atuador)),c,3
 20266  003580  9613               u3505:
 20267  003582                     	goto	l690
 20268  003582  EFE2  F01A         	line	100
 20269                           	
 20270                           l5172:
 20271  003586                     ;fifo.c: 100:     }
 20272                           	goto	l690
 20273  003586  EFE2  F01A         	
 20274                           l684:
 20275  00358A                     	
 20276                           l5174:
 20277  00358A                     	movf	((c:alt_atuador@tecla)),c,w
 20278  00358A  5029               	movwf	(??_alt_atuador+0+0)&0ffh,c
 20279  00358C  6E27               	clrf	(??_alt_atuador+0+0+1)&0ffh,c
 20280  00358E  6A28               
 20281                           	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
 20282                           ; Switch size 1, requested type "space"
 20283                           ; Number of cases is 1, Range of values is 0 to 0
 20284                           ; switch strategies available:
 20285                           ; Name         Instructions Cycles
 20286                           ; simple_byte            4     3 (average)
 20287                           ;	Chosen strategy is simple_byte
 20288                           
 20289                           	movf ??_alt_atuador+0+1,c,w
 20290  003590  5028               	xorlw	0^0	; case 0
 20291  003592  0A00               	skipnz
 20292  003594  B4D8               	goto	l7854
 20293  003596  EFCF  F01A         	goto	l690
 20294  00359A  EFE2  F01A         	
 20295                           l7854:
 20296  00359E                     ; Switch size 1, requested type "space"
 20297                           ; Number of cases is 4, Range of values is 65 to 68
 20298                           ; switch strategies available:
 20299                           ; Name         Instructions Cycles
 20300                           ; simple_byte           13     7 (average)
 20301                           ;	Chosen strategy is simple_byte
 20302                           
 20303                           	movf ??_alt_atuador+0+0,c,w
 20304  00359E  5027               	xorlw	65^0	; case 65
 20305  0035A0  0A41               	skipnz
 20306  0035A2  B4D8               	goto	l685
 20307  0035A4  EF97  F01A         	xorlw	66^65	; case 66
 20308  0035A8  0A03               	skipnz
 20309  0035AA  B4D8               	goto	l687
 20310  0035AC  EFA2  F01A         	xorlw	67^66	; case 67
 20311  0035B0  0A01               	skipnz
 20312  0035B2  B4D8               	goto	l688
 20313  0035B4  EFAD  F01A         	xorlw	68^67	; case 68
 20314  0035B8  0A07               	skipnz
 20315  0035BA  B4D8               	goto	l689
 20316  0035BC  EFB8  F01A         	goto	l690
 20317  0035C0  EFE2  F01A         
 20318                           	
 20319                           l686:
 20320  0035C4                     	line	101
 20321                           	
 20322                           l690:
 20323  0035C4                     	return	;funcret
 20324  0035C4  0012               	opt stack 0
 20325                           GLOBAL	__end_of_alt_atuador
 20326                           	__end_of_alt_atuador:
 20327  0035C6                     	signat	_alt_atuador,4217
 20328                           	global	_fifo_adrs
 20329                           
 20330 ;; *************** function _fifo_adrs *****************
 20331 ;; Defined at:
 20332 ;;		line 178 in file "fifo.c"
 20333 ;; Parameters:    Size  Location     Type
 20334 ;;		None
 20335 ;; Auto vars:     Size  Location     Type
 20336 ;;		None
 20337 ;; Return value:  Size  Location     Type
 20338 ;;                  2    0[COMRAM] PTR unsigned char 
 20339 ;; Registers used:
 20340 ;;		wreg, status,2, status,0
 20341 ;; Tracked objects:
 20342 ;;		On entry : 0/0
 20343 ;;		On exit  : 0/0
 20344 ;;		Unchanged: 0/0
 20345 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20346 ;;      Params:         2       0       0       0       0       0       0       0       0       0
 20347 ;;      Locals:         0       0       0       0       0       0       0       0       0       0
 20348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0
 20349 ;;      Totals:         2       0       0       0       0       0       0       0       0       0
 20350 ;;Total ram usage:        2 bytes
 20351 ;; Hardware stack levels used:    1
 20352 ;; Hardware stack levels required when called:    2
 20353 ;; This function calls:
 20354 ;;		Nothing
 20355 ;; This function is called by:
 20356 ;;		_main
 20357 ;; This function uses a non-reentrant model
 20358 ;;
 20359                           psect	text41,class=CODE,space=0,reloc=2,group=0
 20360                           	line	178
 20361                           global __ptext41
 20362                           __ptext41:
 20363  004360                     psect	text41
 20364                           	file	"fifo.c"
 20365                           	line	178
 20366                           	global	__size_of_fifo_adrs
 20367                           	__size_of_fifo_adrs	equ	__end_of_fifo_adrs-_fifo_adrs
 20368  0000                     	
 20369                           _fifo_adrs:
 20370  004360                     ;incstack = 0
 20371                           	opt	stack 28
 20372                           	line	180
 20373                           	
 20374                           l5904:
 20375  004360                     ;fifo.c: 180:     return fila;
 20376                           		movlw	low(_fila)
 20377  004360  0E15               	movwf	((c:?_fifo_adrs)),c
 20378  004362  6E27               	movlw	high(_fila)
 20379  004364  0E00               	movwf	((c:?_fifo_adrs+1)),c
 20380  004366  6E28               
 20381                           	goto	l725
 20382  004368  EFB6  F021         	
 20383                           l5906:
 20384  00436C                     	line	181
 20385                           	
 20386                           l725:
 20387  00436C                     	return	;funcret
 20388  00436C  0012               	opt stack 0
 20389                           GLOBAL	__end_of_fifo_adrs
 20390                           	__end_of_fifo_adrs:
 20391  00436E                     	signat	_fifo_adrs,90
 20392                           	global	_fifo_add_tempo
 20393                           
 20394 ;; *************** function _fifo_add_tempo *****************
 20395 ;; Defined at:
 20396 ;;		line 269 in file "fifo.c"
 20397 ;; Parameters:    Size  Location     Type
 20398 ;;  t               1    wreg     const unsigned char 
 20399 ;; Auto vars:     Size  Location     Type
 20400 ;;  t               1   15[COMRAM] const unsigned char 
 20401 ;; Return value:  Size  Location     Type
 20402 ;;                  1    wreg      void 
 20403 ;; Registers used:
 20404 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20405 ;; Tracked objects:
 20406 ;;		On entry : 0/0
 20407 ;;		On exit  : 0/0
 20408 ;;		Unchanged: 0/0
 20409 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20410 ;;      Params:         0       0       0       0       0       0       0       0       0       0
 20411 ;;      Locals:         1       0       0       0       0       0       0       0       0       0
 20412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0
 20413 ;;      Totals:         1       0       0       0       0       0       0       0       0       0
 20414 ;;Total ram usage:        1 bytes
 20415 ;; Hardware stack levels used:    1
 20416 ;; Hardware stack levels required when called:    5
 20417 ;; This function calls:
 20418 ;;		_codifica
 20419 ;;		_fifo_alinharPrint
 20420 ;; This function is called by:
 20421 ;;		_main
 20422 ;; This function uses a non-reentrant model
 20423 ;;
 20424                           psect	text42,class=CODE,space=0,reloc=2,group=0
 20425                           	line	269
 20426                           global __ptext42
 20427                           __ptext42:
 20428  00397E                     psect	text42
 20429                           	file	"fifo.c"
 20430                           	line	269
 20431                           	global	__size_of_fifo_add_tempo
 20432                           	__size_of_fifo_add_tempo	equ	__end_of_fifo_add_tempo-_fifo_add_tempo
 20433  0000                     	
 20434                           _fifo_add_tempo:
 20435  00397E                     ;incstack = 0
 20436                           	opt	stack 25
 20437                           ;fifo_add_tempo@t stored from wreg
 20438                           	movwf	((c:fifo_add_tempo@t)),c
 20439  00397E  6E36               	line	271
 20440                           	
 20441                           l5604:
 20442  003980                     ;fifo.c: 269: void fifo_add_tempo(const char t);fifo.c: 270: {;fifo.c: 271:     if(ind_f
                                 ila < 18)
 20443                           		movlw	012h-0
 20444  003980  0E12               	cpfslt	((c:_ind_fila)),c
 20445  003982  605D               	goto	u4001
 20446  003984  EFC6  F01C         	goto	u4000
 20447  003988  EFC8  F01C         
 20448                           u4001:
 20449  00398C                     	goto	l5616
 20450  00398C  EFF0  F01C         u4000:
 20451  003990                     	line	273
 20452                           	
 20453                           l5606:
 20454  003990                     ;fifo.c: 272:     {;fifo.c: 273:         if(t)
 20455                           	movf	((c:fifo_add_tempo@t)),c,w
 20456  003990  5036               	btfsc	status,2
 20457  003992  B4D8               	goto	u4011
 20458  003994  EFCE  F01C         	goto	u4010
 20459  003998  EFD0  F01C         u4011:
 20460  00399C                     	goto	l5616
 20461  00399C  EFF0  F01C         u4010:
 20462  0039A0                     	line	275
 20463                           	
 20464                           l5608:
 20465  0039A0                     ;fifo.c: 274:         {;fifo.c: 275:             codifica('t', &t);
 20466                           		movlw	low(fifo_add_tempo@t)
 20467  0039A0  0E36               	movwf	((c:codifica@dado)),c
 20468  0039A2  6E27               	movlw	high(fifo_add_tempo@t)
 20469  0039A4  0E00               	movwf	((c:codifica@dado+1)),c
 20470  0039A6  6E28               
 20471                           	movlw	(074h)&0ffh
 20472  0039A8  0E74               	
 20473                           	call	_codifica
 20474  0039AA  EC17  F014         	line	276
 20475                           	
 20476                           l5610:
 20477  0039AE                     ;fifo.c: 276:             fila[ind_fila] = t;
 20478                           	movf	((c:_ind_fila)),c,w
 20479  0039AE  505D               	mullw	01h
 20480  0039B0  0D01               	movlw	low(_fila)
 20481  0039B2  0E15               	addwf	(prodl),c,w
 20482  0039B4  24F3               	movwf	c:fsr2l
 20483  0039B6  6ED9               	movlw	high(_fila)
 20484  0039B8  0E00               	addwfc	prod+1,w
 20485  0039BA  20F4               	movwf	1+c:fsr2l
 20486  0039BC  6EDA               	movff	(c:fifo_add_tempo@t),indf2
 20487  0039BE  C036  FFDF         
 20488                           	line	277
 20489                           	
 20490                           l5612:
 20491  0039C2                     ;fifo.c: 277:             ind_fila++;
 20492                           	incf	((c:_ind_fila)),c
 20493  0039C2  2A5D               	line	278
 20494                           	
 20495                           l5614:
 20496  0039C4                     ;fifo.c: 278:             fila[ind_fila] = 0;
 20497                           	movf	((c:_ind_fila)),c,w
 20498  0039C4  505D               	mullw	01h
 20499  0039C6  0D01               	movlw	low(_fila)
 20500  0039C8  0E15               	addwf	(prodl),c,w
 20501  0039CA  24F3               	movwf	c:fsr2l
 20502  0039CC  6ED9               	movlw	high(_fila)
 20503  0039CE  0E00               	addwfc	prod+1,w
 20504  0039D0  20F4               	movwf	1+c:fsr2l
 20505  0039D2  6EDA               	movlw	low(0)
 20506  0039D4  0E00               	movwf	indf2
 20507  0039D6  6EDF               	goto	l5616
 20508  0039D8  EFF0  F01C         	line	279
 20509                           ;fifo.c: 279:         }
 20510                           	
 20511                           l777:
 20512  0039DC                     	goto	l5616
 20513  0039DC  EFF0  F01C         	line	280
 20514                           ;fifo.c: 280:     }
 20515                           	
 20516                           l776:
 20517  0039E0                     	line	281
 20518                           	
 20519                           l5616:
 20520  0039E0                     ;fifo.c: 281:     fifo_alinharPrint();
 20521                           	call	_fifo_alinharPrint	;wreg free
 20522  0039E0  ECA9  F016         	line	282
 20523                           	
 20524                           l778:
 20525  0039E4                     	return	;funcret
 20526  0039E4  0012               	opt stack 0
 20527                           GLOBAL	__end_of_fifo_add_tempo
 20528                           	__end_of_fifo_add_tempo:
 20529  0039E6                     	signat	_fifo_add_tempo,4217
 20530                           	global	_fifo_add_control
 20531                           
 20532 ;; *************** function _fifo_add_control *****************
 20533 ;; Defined at:
 20534 ;;		line 284 in file "fifo.c"
 20535 ;; Parameters:    Size  Location     Type
 20536 ;;  c               1    wreg     const unsigned char 
 20537 ;; Auto vars:     Size  Location     Type
 20538 ;;  c               1   15[COMRAM] const unsigned char 
 20539 ;; Return value:  Size  Location     Type
 20540 ;;                  1    wreg      void 
 20541 ;; Registers used:
 20542 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20543 ;; Tracked objects:
 20544 ;;		On entry : 0/0
 20545 ;;		On exit  : 0/0
 20546 ;;		Unchanged: 0/0
 20547 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20548 ;;      Params:         0       0       0       0       0       0       0       0       0       0
 20549 ;;      Locals:         1       0       0       0       0       0       0       0       0       0
 20550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0
 20551 ;;      Totals:         1       0       0       0       0       0       0       0       0       0
 20552 ;;Total ram usage:        1 bytes
 20553 ;; Hardware stack levels used:    1
 20554 ;; Hardware stack levels required when called:    5
 20555 ;; This function calls:
 20556 ;;		_codifica
 20557 ;;		_fifo_alinharPrint
 20558 ;; This function is called by:
 20559 ;;		_main
 20560 ;; This function uses a non-reentrant model
 20561 ;;
 20562                           psect	text43,class=CODE,space=0,reloc=2,group=0
 20563                           	line	284
 20564                           global __ptext43
 20565                           __ptext43:
 20566  003C3E                     psect	text43
 20567                           	file	"fifo.c"
 20568                           	line	284
 20569                           	global	__size_of_fifo_add_control
 20570                           	__size_of_fifo_add_control	equ	__end_of_fifo_add_control-_fifo_add_control
 20571  0000                     	
 20572                           _fifo_add_control:
 20573  003C3E                     ;incstack = 0
 20574                           	opt	stack 25
 20575                           ;fifo_add_control@c stored from wreg
 20576                           	movwf	((c:fifo_add_control@c)),c
 20577  003C3E  6E36               	line	286
 20578                           	
 20579                           l5592:
 20580  003C40                     ;fifo.c: 284: void fifo_add_control(const char c);fifo.c: 285: {;fifo.c: 286:     if(ind
                                 _fila < 18)
 20581                           		movlw	012h-0
 20582  003C40  0E12               	cpfslt	((c:_ind_fila)),c
 20583  003C42  605D               	goto	u3991
 20584  003C44  EF26  F01E         	goto	u3990
 20585  003C48  EF28  F01E         
 20586                           u3991:
 20587  003C4C                     	goto	l5602
 20588  003C4C  EF46  F01E         u3990:
 20589  003C50                     	line	290
 20590                           	
 20591                           l5594:
 20592  003C50                     ;fifo.c: 287:     {;fifo.c: 290:             codifica('p', &c);
 20593                           		movlw	low(fifo_add_control@c)
 20594  003C50  0E36               	movwf	((c:codifica@dado)),c
 20595  003C52  6E27               	movlw	high(fifo_add_control@c)
 20596  003C54  0E00               	movwf	((c:codifica@dado+1)),c
 20597  003C56  6E28               
 20598                           	movlw	(070h)&0ffh
 20599  003C58  0E70               	
 20600                           	call	_codifica
 20601  003C5A  EC17  F014         	line	291
 20602                           	
 20603                           l5596:
 20604  003C5E                     ;fifo.c: 291:             fila[ind_fila] = c;
 20605                           	movf	((c:_ind_fila)),c,w
 20606  003C5E  505D               	mullw	01h
 20607  003C60  0D01               	movlw	low(_fila)
 20608  003C62  0E15               	addwf	(prodl),c,w
 20609  003C64  24F3               	movwf	c:fsr2l
 20610  003C66  6ED9               	movlw	high(_fila)
 20611  003C68  0E00               	addwfc	prod+1,w
 20612  003C6A  20F4               	movwf	1+c:fsr2l
 20613  003C6C  6EDA               	movff	(c:fifo_add_control@c),indf2
 20614  003C6E  C036  FFDF         
 20615                           	line	292
 20616                           	
 20617                           l5598:
 20618  003C72                     ;fifo.c: 292:             ind_fila++;
 20619                           	incf	((c:_ind_fila)),c
 20620  003C72  2A5D               	line	293
 20621                           	
 20622                           l5600:
 20623  003C74                     ;fifo.c: 293:             fila[ind_fila] = 0;
 20624                           	movf	((c:_ind_fila)),c,w
 20625  003C74  505D               	mullw	01h
 20626  003C76  0D01               	movlw	low(_fila)
 20627  003C78  0E15               	addwf	(prodl),c,w
 20628  003C7A  24F3               	movwf	c:fsr2l
 20629  003C7C  6ED9               	movlw	high(_fila)
 20630  003C7E  0E00               	addwfc	prod+1,w
 20631  003C80  20F4               	movwf	1+c:fsr2l
 20632  003C82  6EDA               	movlw	low(0)
 20633  003C84  0E00               	movwf	indf2
 20634  003C86  6EDF               	goto	l5602
 20635  003C88  EF46  F01E         	line	295
 20636                           ;fifo.c: 295:     }
 20637                           	
 20638                           l781:
 20639  003C8C                     	line	296
 20640                           	
 20641                           l5602:
 20642  003C8C                     ;fifo.c: 296:     fifo_alinharPrint();
 20643                           	call	_fifo_alinharPrint	;wreg free
 20644  003C8C  ECA9  F016         	line	297
 20645                           	
 20646                           l782:
 20647  003C90                     	return	;funcret
 20648  003C90  0012               	opt stack 0
 20649                           GLOBAL	__end_of_fifo_add_control
 20650                           	__end_of_fifo_add_control:
 20651  003C92                     	signat	_fifo_add_control,4217
 20652                           	global	_fifo_add_ciclo
 20653                           
 20654 ;; *************** function _fifo_add_ciclo *****************
 20655 ;; Defined at:
 20656 ;;		line 299 in file "fifo.c"
 20657 ;; Parameters:    Size  Location     Type
 20658 ;;  ciclos          2    0[COMRAM] unsigned int 
 20659 ;; Auto vars:     Size  Location     Type
 20660 ;;		None
 20661 ;; Return value:  Size  Location     Type
 20662 ;;                  1    wreg      void 
 20663 ;; Registers used:
 20664 ;;		wreg, status,2
 20665 ;; Tracked objects:
 20666 ;;		On entry : 0/0
 20667 ;;		On exit  : 0/0
 20668 ;;		Unchanged: 0/0
 20669 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20670 ;;      Params:         2       0       0       0       0       0       0       0       0       0
 20671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0
 20672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0
 20673 ;;      Totals:         2       0       0       0       0       0       0       0       0       0
 20674 ;;Total ram usage:        2 bytes
 20675 ;; Hardware stack levels used:    1
 20676 ;; Hardware stack levels required when called:    2
 20677 ;; This function calls:
 20678 ;;		Nothing
 20679 ;; This function is called by:
 20680 ;;		_main
 20681 ;; This function uses a non-reentrant model
 20682 ;;
 20683                           psect	text44,class=CODE,space=0,reloc=2,group=0
 20684                           	line	299
 20685                           global __ptext44
 20686                           __ptext44:
 20687  004396                     psect	text44
 20688                           	file	"fifo.c"
 20689                           	line	299
 20690                           	global	__size_of_fifo_add_ciclo
 20691                           	__size_of_fifo_add_ciclo	equ	__end_of_fifo_add_ciclo-_fifo_add_ciclo
 20692  0000                     	
 20693                           _fifo_add_ciclo:
 20694  004396                     ;incstack = 0
 20695                           	opt	stack 28
 20696                           	line	301
 20697                           	
 20698                           l5908:
 20699  004396                     ;fifo.c: 299: void fifo_add_ciclo(unsigned int ciclos);fifo.c: 300: {;fifo.c: 301:     f
                                 ila[0] = ciclos & 0x00ff;
 20700                           	movff	(c:fifo_add_ciclo@ciclos),(c:_fila)
 20701  004396  C027  F015         	line	302
 20702                           	
 20703                           l5910:
 20704  00439A                     ;fifo.c: 302:     fila[1] = ciclos >> 8;
 20705                           	movf	((c:fifo_add_ciclo@ciclos+1)),c,w
 20706  00439A  5028               	movwf	(0+((c:_fila)+01h)),c
 20707  00439C  6E16               	line	303
 20708                           	
 20709                           l785:
 20710  00439E                     	return	;funcret
 20711  00439E  0012               	opt stack 0
 20712                           GLOBAL	__end_of_fifo_add_ciclo
 20713                           	__end_of_fifo_add_ciclo:
 20714  0043A0                     	signat	_fifo_add_ciclo,4217
 20715                           	global	_fifo_add
 20716                           
 20717 ;; *************** function _fifo_add *****************
 20718 ;; Defined at:
 20719 ;;		line 254 in file "fifo.c"
 20720 ;; Parameters:    Size  Location     Type
 20721 ;;  passo           1    wreg     const unsigned char 
 20722 ;; Auto vars:     Size  Location     Type
 20723 ;;  passo           1   15[COMRAM] const unsigned char 
 20724 ;; Return value:  Size  Location     Type
 20725 ;;                  1    wreg      void 
 20726 ;; Registers used:
 20727 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20728 ;; Tracked objects:
 20729 ;;		On entry : 0/0
 20730 ;;		On exit  : 0/0
 20731 ;;		Unchanged: 0/0
 20732 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20733 ;;      Params:         0       0       0       0       0       0       0       0       0       0
 20734 ;;      Locals:         1       0       0       0       0       0       0       0       0       0
 20735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0
 20736 ;;      Totals:         1       0       0       0       0       0       0       0       0       0
 20737 ;;Total ram usage:        1 bytes
 20738 ;; Hardware stack levels used:    1
 20739 ;; Hardware stack levels required when called:    5
 20740 ;; This function calls:
 20741 ;;		_codifica
 20742 ;;		_fifo_alinharPrint
 20743 ;; This function is called by:
 20744 ;;		_main
 20745 ;; This function uses a non-reentrant model
 20746 ;;
 20747                           psect	text45,class=CODE,space=0,reloc=2,group=0
 20748                           	line	254
 20749                           global __ptext45
 20750                           __ptext45:
 20751  0039E6                     psect	text45
 20752                           	file	"fifo.c"
 20753                           	line	254
 20754                           	global	__size_of_fifo_add
 20755                           	__size_of_fifo_add	equ	__end_of_fifo_add-_fifo_add
 20756  0000                     	
 20757                           _fifo_add:
 20758  0039E6                     ;incstack = 0
 20759                           	opt	stack 25
 20760                           ;fifo_add@passo stored from wreg
 20761                           	movwf	((c:fifo_add@passo)),c
 20762  0039E6  6E36               	line	256
 20763                           	
 20764                           l5618:
 20765  0039E8                     ;fifo.c: 254: void fifo_add(const char passo);fifo.c: 255: {;fifo.c: 256:     if(ind_fil
                                 a < 18)
 20766                           		movlw	012h-0
 20767  0039E8  0E12               	cpfslt	((c:_ind_fila)),c
 20768  0039EA  605D               	goto	u4021
 20769  0039EC  EFFA  F01C         	goto	u4020
 20770  0039F0  EFFC  F01C         
 20771                           u4021:
 20772  0039F4                     	goto	l5630
 20773  0039F4  EF24  F01D         u4020:
 20774  0039F8                     	line	258
 20775                           	
 20776                           l5620:
 20777  0039F8                     ;fifo.c: 257:     {;fifo.c: 258:         if(passo)
 20778                           	movf	((c:fifo_add@passo)),c,w
 20779  0039F8  5036               	btfsc	status,2
 20780  0039FA  B4D8               	goto	u4031
 20781  0039FC  EF02  F01D         	goto	u4030
 20782  003A00  EF04  F01D         u4031:
 20783  003A04                     	goto	l5630
 20784  003A04  EF24  F01D         u4030:
 20785  003A08                     	line	260
 20786                           	
 20787                           l5622:
 20788  003A08                     ;fifo.c: 259:         {;fifo.c: 260:             codifica('a', &passo);
 20789                           		movlw	low(fifo_add@passo)
 20790  003A08  0E36               	movwf	((c:codifica@dado)),c
 20791  003A0A  6E27               	movlw	high(fifo_add@passo)
 20792  003A0C  0E00               	movwf	((c:codifica@dado+1)),c
 20793  003A0E  6E28               
 20794                           	movlw	(061h)&0ffh
 20795  003A10  0E61               	
 20796                           	call	_codifica
 20797  003A12  EC17  F014         	line	261
 20798                           	
 20799                           l5624:
 20800  003A16                     ;fifo.c: 261:             fila[ind_fila] = passo;
 20801                           	movf	((c:_ind_fila)),c,w
 20802  003A16  505D               	mullw	01h
 20803  003A18  0D01               	movlw	low(_fila)
 20804  003A1A  0E15               	addwf	(prodl),c,w
 20805  003A1C  24F3               	movwf	c:fsr2l
 20806  003A1E  6ED9               	movlw	high(_fila)
 20807  003A20  0E00               	addwfc	prod+1,w
 20808  003A22  20F4               	movwf	1+c:fsr2l
 20809  003A24  6EDA               	movff	(c:fifo_add@passo),indf2
 20810  003A26  C036  FFDF         
 20811                           	line	262
 20812                           	
 20813                           l5626:
 20814  003A2A                     ;fifo.c: 262:             ind_fila++;
 20815                           	incf	((c:_ind_fila)),c
 20816  003A2A  2A5D               	line	263
 20817                           	
 20818                           l5628:
 20819  003A2C                     ;fifo.c: 263:             fila[ind_fila] = 0;
 20820                           	movf	((c:_ind_fila)),c,w
 20821  003A2C  505D               	mullw	01h
 20822  003A2E  0D01               	movlw	low(_fila)
 20823  003A30  0E15               	addwf	(prodl),c,w
 20824  003A32  24F3               	movwf	c:fsr2l
 20825  003A34  6ED9               	movlw	high(_fila)
 20826  003A36  0E00               	addwfc	prod+1,w
 20827  003A38  20F4               	movwf	1+c:fsr2l
 20828  003A3A  6EDA               	movlw	low(0)
 20829  003A3C  0E00               	movwf	indf2
 20830  003A3E  6EDF               	goto	l5630
 20831  003A40  EF24  F01D         	line	264
 20832                           ;fifo.c: 264:         }
 20833                           	
 20834                           l772:
 20835  003A44                     	goto	l5630
 20836  003A44  EF24  F01D         	line	265
 20837                           ;fifo.c: 265:     }
 20838                           	
 20839                           l771:
 20840  003A48                     	line	266
 20841                           	
 20842                           l5630:
 20843  003A48                     ;fifo.c: 266:      fifo_alinharPrint();
 20844                           	call	_fifo_alinharPrint	;wreg free
 20845  003A48  ECA9  F016         	line	267
 20846                           	
 20847                           l773:
 20848  003A4C                     	return	;funcret
 20849  003A4C  0012               	opt stack 0
 20850                           GLOBAL	__end_of_fifo_add
 20851                           	__end_of_fifo_add:
 20852  003A4E                     	signat	_fifo_add,4217
 20853                           	global	_fifo_alinharPrint
 20854                           
 20855 ;; *************** function _fifo_alinharPrint *****************
 20856 ;; Defined at:
 20857 ;;		line 482 in file "fifo.c"
 20858 ;; Parameters:    Size  Location     Type
 20859 ;;		None
 20860 ;; Auto vars:     Size  Location     Type
 20861 ;;  aux             1   14[COMRAM] unsigned char 
 20862 ;;  i               1   13[COMRAM] unsigned char 
 20863 ;;  cont            1   12[COMRAM] unsigned char 
 20864 ;; Return value:  Size  Location     Type
 20865 ;;                  1    wreg      void 
 20866 ;; Registers used:
 20867 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20868 ;; Tracked objects:
 20869 ;;		On entry : 0/0
 20870 ;;		On exit  : 0/0
 20871 ;;		Unchanged: 0/0
 20872 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20873 ;;      Params:         0       0       0       0       0       0       0       0       0       0
 20874 ;;      Locals:         3       0       0       0       0       0       0       0       0       0
 20875 ;;      Temps:          1       0       0       0       0       0       0       0       0       0
 20876 ;;      Totals:         4       0       0       0       0       0       0       0       0       0
 20877 ;;Total ram usage:        4 bytes
 20878 ;; Hardware stack levels used:    1
 20879 ;; Hardware stack levels required when called:    4
 20880 ;; This function calls:
 20881 ;;		_dignum_tam
 20882 ;; This function is called by:
 20883 ;;		_fifo_delete
 20884 ;;		_fifo_add
 20885 ;;		_fifo_add_tempo
 20886 ;;		_fifo_add_control
 20887 ;; This function uses a non-reentrant model
 20888 ;;
 20889                           psect	text46,class=CODE,space=0,reloc=2,group=0
 20890                           	line	482
 20891                           global __ptext46
 20892                           __ptext46:
 20893  002D52                     psect	text46
 20894                           	file	"fifo.c"
 20895                           	line	482
 20896                           	global	__size_of_fifo_alinharPrint
 20897                           	__size_of_fifo_alinharPrint	equ	__end_of_fifo_alinharPrint-_fifo_alinharPrint
 20898  0000                     	
 20899                           _fifo_alinharPrint:
 20900  002D52                     ;incstack = 0
 20901                           	opt	stack 25
 20902                           	line	486
 20903                           	
 20904                           l5308:
 20905  002D52                     ;fifo.c: 484:     unsigned char i;;fifo.c: 485:     unsigned char aux;;fifo.c: 486:     
                                 unsigned char cont = 0;
 20906                           	movlw	low(0)
 20907  002D52  0E00               	movwf	((c:fifo_alinharPrint@cont)),c
 20908  002D54  6E33               	line	488
 20909                           	
 20910                           l5310:
 20911  002D56                     ;fifo.c: 488:     for( i=ind_fila-1; i>=2; i-- )
 20912                           	decf	((c:_ind_fila)),c,w
 20913  002D56  045D               	movwf	((c:fifo_alinharPrint@i)),c
 20914  002D58  6E34               	
 20915                           l5312:
 20916  002D5A                     		movlw	02h-0
 20917  002D5A  0E02               	cpfslt	((c:fifo_alinharPrint@i)),c
 20918  002D5C  6034               	goto	u3661
 20919  002D5E  EFB3  F016         	goto	u3660
 20920  002D62  EFB5  F016         
 20921                           u3661:
 20922  002D66                     	goto	l5316
 20923  002D66  EFB9  F016         u3660:
 20924  002D6A                     	goto	l864
 20925  002D6A  EF34  F017         	
 20926                           l5314:
 20927  002D6E                     	goto	l864
 20928  002D6E  EF34  F017         	
 20929                           l856:
 20930  002D72                     	line	490
 20931                           	
 20932                           l5316:
 20933  002D72                     ;fifo.c: 489:     {;fifo.c: 490:         aux = fila[i];
 20934                           	movf	((c:fifo_alinharPrint@i)),c,w
 20935  002D72  5034               	mullw	01h
 20936  002D74  0D01               	movlw	low(_fila)
 20937  002D76  0E15               	addwf	(prodl),c,w
 20938  002D78  24F3               	movwf	c:fsr2l
 20939  002D7A  6ED9               	movlw	high(_fila)
 20940  002D7C  0E00               	addwfc	prod+1,w
 20941  002D7E  20F4               	movwf	1+c:fsr2l
 20942  002D80  6EDA               	movf	indf2,w
 20943  002D82  50DF               	movwf	((c:fifo_alinharPrint@aux)),c
 20944  002D84  6E35               	line	491
 20945                           	
 20946                           l5318:
 20947  002D86                     ;fifo.c: 491:         if( aux <= 0x64 )
 20948                           		movlw	065h-0
 20949  002D86  0E65               	cpfslt	((c:fifo_alinharPrint@aux)),c
 20950  002D88  6035               	goto	u3671
 20951  002D8A  EFC9  F016         	goto	u3670
 20952  002D8E  EFCB  F016         
 20953                           u3671:
 20954  002D92                     	goto	l5322
 20955  002D92  EFD5  F016         u3670:
 20956  002D96                     	line	492
 20957                           	
 20958                           l5320:
 20959  002D96                     ;fifo.c: 492:             cont += dignum_tam( aux )+1;
 20960                           	movff	(c:fifo_alinharPrint@aux),(c:dignum_tam@num)
 20961  002D96  C035  F02F         	clrf	((c:dignum_tam@num+1)),c
 20962  002D9A  6A30               	call	_dignum_tam	;wreg free
 20963  002D9C  ECE9  F01E         	movwf	(??_fifo_alinharPrint+0+0)&0ffh,c
 20964  002DA0  6E32               	incf	((??_fifo_alinharPrint+0+0)),c,w
 20965  002DA2  2832               	addwf	((c:fifo_alinharPrint@cont)),c
 20966  002DA4  2633               	goto	l5322
 20967  002DA6  EFD5  F016         	
 20968                           l858:
 20969  002DAA                     	line	494
 20970                           	
 20971                           l5322:
 20972  002DAA                     ;fifo.c: 494:         if( aux > 0x64 && aux <= 0xDC )
 20973                           		movlw	065h-1
 20974  002DAA  0E64               	cpfsgt	((c:fifo_alinharPrint@aux)),c
 20975  002DAC  6435               	goto	u3681
 20976  002DAE  EFDB  F016         	goto	u3680
 20977  002DB2  EFDD  F016         
 20978                           u3681:
 20979  002DB6                     	goto	l5328
 20980  002DB6  EFF2  F016         u3680:
 20981  002DBA                     	
 20982                           l5324:
 20983  002DBA                     		movlw	0DDh-0
 20984  002DBA  0EDD               	cpfslt	((c:fifo_alinharPrint@aux)),c
 20985  002DBC  6035               	goto	u3691
 20986  002DBE  EFE3  F016         	goto	u3690
 20987  002DC2  EFE5  F016         
 20988                           u3691:
 20989  002DC6                     	goto	l5328
 20990  002DC6  EFF2  F016         u3690:
 20991  002DCA                     	line	495
 20992                           	
 20993                           l5326:
 20994  002DCA                     ;fifo.c: 495:             cont += dignum_tam( aux - 0x64 )+1;
 20995                           	movlw	low(-100)
 20996  002DCA  0E9C               	addwf	((c:fifo_alinharPrint@aux)),c,w
 20997  002DCC  2435               	movwf	((c:dignum_tam@num)),c
 20998  002DCE  6E2F               	clrf	1+((c:dignum_tam@num)),c
 20999  002DD0  6A30               	movlw	high(-100)
 21000  002DD2  0EFF               	addwfc	1+((c:dignum_tam@num)),c
 21001  002DD4  2230               	call	_dignum_tam	;wreg free
 21002  002DD6  ECE9  F01E         	movwf	(??_fifo_alinharPrint+0+0)&0ffh,c
 21003  002DDA  6E32               	incf	((??_fifo_alinharPrint+0+0)),c,w
 21004  002DDC  2832               	addwf	((c:fifo_alinharPrint@cont)),c
 21005  002DDE  2633               	goto	l5328
 21006  002DE0  EFF2  F016         	
 21007                           l859:
 21008  002DE4                     	line	497
 21009                           	
 21010                           l5328:
 21011  002DE4                     ;fifo.c: 497:         if( aux > 0xDC && aux < 0xFE )
 21012                           		movlw	0DDh-1
 21013  002DE4  0EDC               	cpfsgt	((c:fifo_alinharPrint@aux)),c
 21014  002DE6  6435               	goto	u3701
 21015  002DE8  EFF8  F016         	goto	u3700
 21016  002DEC  EFFA  F016         
 21017                           u3701:
 21018  002DF0                     	goto	l860
 21019  002DF0  EF04  F017         u3700:
 21020  002DF4                     	
 21021                           l5330:
 21022  002DF4                     		movlw	0FEh-0
 21023  002DF4  0EFE               	cpfslt	((c:fifo_alinharPrint@aux)),c
 21024  002DF6  6035               	goto	u3711
 21025  002DF8  EF00  F017         	goto	u3710
 21026  002DFC  EF02  F017         
 21027                           u3711:
 21028  002E00                     	goto	l860
 21029  002E00  EF04  F017         u3710:
 21030  002E04                     	line	498
 21031                           	
 21032                           l5332:
 21033  002E04                     ;fifo.c: 498:             cont += 2;
 21034                           	movlw	(02h)&0ffh
 21035  002E04  0E02               	addwf	((c:fifo_alinharPrint@cont)),c
 21036  002E06  2633               	
 21037                           l860:
 21038  002E08                     	line	500
 21039                           ;fifo.c: 500:         if( aux == 0xFE )
 21040                           		movlw	254
 21041  002E08  0EFE               	xorwf	((c:fifo_alinharPrint@aux)),c,w
 21042  002E0A  1835               	btfss	status,2
 21043  002E0C  A4D8               	goto	u3721
 21044  002E0E  EF0B  F017         	goto	u3720
 21045  002E12  EF0D  F017         
 21046                           u3721:
 21047  002E16                     	goto	l5336
 21048  002E16  EF17  F017         u3720:
 21049  002E1A                     	line	501
 21050                           	
 21051                           l5334:
 21052  002E1A                     ;fifo.c: 501:             cont += dignum_tam( aux )+1;
 21053                           	movff	(c:fifo_alinharPrint@aux),(c:dignum_tam@num)
 21054  002E1A  C035  F02F         	clrf	((c:dignum_tam@num+1)),c
 21055  002E1E  6A30               	call	_dignum_tam	;wreg free
 21056  002E20  ECE9  F01E         	movwf	(??_fifo_alinharPrint+0+0)&0ffh,c
 21057  002E24  6E32               	incf	((??_fifo_alinharPrint+0+0)),c,w
 21058  002E26  2832               	addwf	((c:fifo_alinharPrint@cont)),c
 21059  002E28  2633               	goto	l5336
 21060  002E2A  EF17  F017         	
 21061                           l861:
 21062  002E2E                     	line	503
 21063                           	
 21064                           l5336:
 21065  002E2E                     ;fifo.c: 503:         if( cont > 20 )
 21066                           		movlw	015h-1
 21067  002E2E  0E14               	cpfsgt	((c:fifo_alinharPrint@cont)),c
 21068  002E30  6433               	goto	u3731
 21069  002E32  EF1D  F017         	goto	u3730
 21070  002E36  EF1F  F017         
 21071                           u3731:
 21072  002E3A                     	goto	l862
 21073  002E3A  EF25  F017         u3730:
 21074  002E3E                     	goto	l864
 21075  002E3E  EF34  F017         	line	505
 21076                           	
 21077                           l5338:
 21078  002E42                     ;fifo.c: 504:         {;fifo.c: 505:             break;
 21079                           	goto	l864
 21080  002E42  EF34  F017         	line	506
 21081                           	
 21082                           l5340:
 21083  002E46                     ;fifo.c: 506:         }
 21084                           	goto	l5342
 21085  002E46  EF29  F017         	line	507
 21086                           ;fifo.c: 507:         else
 21087                           	
 21088                           l862:
 21089  002E4A                     	line	508
 21090                           ;fifo.c: 508:             ind_print = i;
 21091                           	movff	(c:fifo_alinharPrint@i),(c:_ind_print)
 21092  002E4A  C034  F05C         	goto	l5342
 21093  002E4E  EF29  F017         	
 21094                           l863:
 21095  002E52                     	line	509
 21096                           	
 21097                           l5342:
 21098  002E52                     ;fifo.c: 509:     }
 21099                           	decf	((c:fifo_alinharPrint@i)),c
 21100  002E52  0634               	
 21101                           l5344:
 21102  002E54                     		movlw	02h-0
 21103  002E54  0E02               	cpfslt	((c:fifo_alinharPrint@i)),c
 21104  002E56  6034               	goto	u3741
 21105  002E58  EF30  F017         	goto	u3740
 21106  002E5C  EF32  F017         
 21107                           u3741:
 21108  002E60                     	goto	l5316
 21109  002E60  EFB9  F016         u3740:
 21110  002E64                     	goto	l864
 21111  002E64  EF34  F017         	
 21112                           l857:
 21113  002E68                     	line	510
 21114                           	
 21115                           l864:
 21116  002E68                     	return	;funcret
 21117  002E68  0012               	opt stack 0
 21118                           GLOBAL	__end_of_fifo_alinharPrint
 21119                           	__end_of_fifo_alinharPrint:
 21120  002E6A                     	signat	_fifo_alinharPrint,89
 21121                           	global	_dignum_tam
 21122                           
 21123 ;; *************** function _dignum_tam *****************
 21124 ;; Defined at:
 21125 ;;		line 470 in file "fifo.c"
 21126 ;; Parameters:    Size  Location     Type
 21127 ;;  num             2    8[COMRAM] int 
 21128 ;; Auto vars:     Size  Location     Type
 21129 ;;  tam             1   10[COMRAM] unsigned char 
 21130 ;; Return value:  Size  Location     Type
 21131 ;;                  1    wreg      unsigned char 
 21132 ;; Registers used:
 21133 ;;		wreg, status,2, status,0, cstack
 21134 ;; Tracked objects:
 21135 ;;		On entry : 0/0
 21136 ;;		On exit  : 0/0
 21137 ;;		Unchanged: 0/0
 21138 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21139 ;;      Params:         2       0       0       0       0       0       0       0       0       0
 21140 ;;      Locals:         1       0       0       0       0       0       0       0       0       0
 21141 ;;      Temps:          0       0       0       0       0       0       0       0       0       0
 21142 ;;      Totals:         3       0       0       0       0       0       0       0       0       0
 21143 ;;Total ram usage:        3 bytes
 21144 ;; Hardware stack levels used:    1
 21145 ;; Hardware stack levels required when called:    3
 21146 ;; This function calls:
 21147 ;;		___awdiv
 21148 ;; This function is called by:
 21149 ;;		_fifo_alinharPrint
 21150 ;;		_printExec
 21151 ;; This function uses a non-reentrant model
 21152 ;;
 21153                           psect	text47,class=CODE,space=0,reloc=2,group=0
 21154                           	line	470
 21155                           global __ptext47
 21156                           __ptext47:
 21157  003DD2                     psect	text47
 21158                           	file	"fifo.c"
 21159                           	line	470
 21160                           	global	__size_of_dignum_tam
 21161                           	__size_of_dignum_tam	equ	__end_of_dignum_tam-_dignum_tam
 21162  0000                     	
 21163                           _dignum_tam:
 21164  003DD2                     ;incstack = 0
 21165                           	opt	stack 26
 21166                           	line	472
 21167                           	
 21168                           l5060:
 21169  003DD2                     ;fifo.c: 470: unsigned char dignum_tam(int num);fifo.c: 471: {;fifo.c: 472:     unsigned
                                  char tam = 0;
 21170                           	movlw	low(0)
 21171  003DD2  0E00               	movwf	((c:dignum_tam@tam)),c
 21172  003DD4  6E31               	line	474
 21173                           ;fifo.c: 474:     while(num != 0)
 21174                           	goto	l5066
 21175  003DD6  EFFE  F01E         	
 21176                           l851:
 21177  003DDA                     	line	476
 21178                           	
 21179                           l5062:
 21180  003DDA                     ;fifo.c: 475:     {;fifo.c: 476:         num /= 10;
 21181                           	movff	(c:dignum_tam@num),(c:___awdiv@dividend)
 21182  003DDA  C02F  F027         	movff	(c:dignum_tam@num+1),(c:___awdiv@dividend+1)
 21183  003DDE  C030  F028         	movlw	high(0Ah)
 21184  003DE2  0E00               	movwf	((c:___awdiv@divisor+1)),c
 21185  003DE4  6E2A               	movlw	low(0Ah)
 21186  003DE6  0E0A               	movwf	((c:___awdiv@divisor)),c
 21187  003DE8  6E29               	call	___awdiv	;wreg free
 21188  003DEA  ECB7  F017         	movff	0+?___awdiv,(c:dignum_tam@num)
 21189  003DEE  C027  F02F         	movff	1+?___awdiv,(c:dignum_tam@num+1)
 21190  003DF2  C028  F030         	line	477
 21191                           	
 21192                           l5064:
 21193  003DF6                     ;fifo.c: 477:         tam++;
 21194                           	incf	((c:dignum_tam@tam)),c
 21195  003DF6  2A31               	goto	l5066
 21196  003DF8  EFFE  F01E         	line	478
 21197                           ;fifo.c: 478:     }
 21198                           	
 21199                           l850:
 21200  003DFC                     	line	474
 21201                           	
 21202                           l5066:
 21203  003DFC                     ;fifo.c: 474:     while(num != 0)
 21204                           	movf	((c:dignum_tam@num)),c,w
 21205  003DFC  502F               iorwf	((c:dignum_tam@num+1)),c,w
 21206  003DFE  1030               	btfss	status,2
 21207  003E00  A4D8               	goto	u3281
 21208  003E02  EF05  F01F         	goto	u3280
 21209  003E06  EF07  F01F         
 21210                           u3281:
 21211  003E0A                     	goto	l5062
 21212  003E0A  EFED  F01E         u3280:
 21213  003E0E                     	goto	l5068
 21214  003E0E  EF09  F01F         	
 21215                           l852:
 21216  003E12                     	line	479
 21217                           	
 21218                           l5068:
 21219  003E12                     ;fifo.c: 479:     return ( tam );
 21220                           	movf	((c:dignum_tam@tam)),c,w
 21221  003E12  5031               	goto	l853
 21222  003E14  EF0C  F01F         	
 21223                           l5070:
 21224  003E18                     	line	480
 21225                           	
 21226                           l853:
 21227  003E18                     	return	;funcret
 21228  003E18  0012               	opt stack 0
 21229                           GLOBAL	__end_of_dignum_tam
 21230                           	__end_of_dignum_tam:
 21231  003E1A                     	signat	_dignum_tam,4217
 21232                           	global	___awdiv
 21233                           
 21234 ;; *************** function ___awdiv *****************
 21235 ;; Defined at:
 21236 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awdiv.c"
 21237 ;; Parameters:    Size  Location     Type
 21238 ;;  dividend        2    0[COMRAM] int 
 21239 ;;  divisor         2    2[COMRAM] int 
 21240 ;; Auto vars:     Size  Location     Type
 21241 ;;  quotient        2    6[COMRAM] int 
 21242 ;;  sign            1    5[COMRAM] unsigned char 
 21243 ;;  counter         1    4[COMRAM] unsigned char 
 21244 ;; Return value:  Size  Location     Type
 21245 ;;                  2    0[COMRAM] int 
 21246 ;; Registers used:
 21247 ;;		wreg, status,2, status,0
 21248 ;; Tracked objects:
 21249 ;;		On entry : 0/0
 21250 ;;		On exit  : 0/0
 21251 ;;		Unchanged: 0/0
 21252 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21253 ;;      Params:         4       0       0       0       0       0       0       0       0       0
 21254 ;;      Locals:         4       0       0       0       0       0       0       0       0       0
 21255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0
 21256 ;;      Totals:         8       0       0       0       0       0       0       0       0       0
 21257 ;;Total ram usage:        8 bytes
 21258 ;; Hardware stack levels used:    1
 21259 ;; Hardware stack levels required when called:    2
 21260 ;; This function calls:
 21261 ;;		Nothing
 21262 ;; This function is called by:
 21263 ;;		_dispLCD_num
 21264 ;;		_fifo_print
 21265 ;;		_dignum_tam
 21266 ;; This function uses a non-reentrant model
 21267 ;;
 21268                           psect	text48,class=CODE,space=0,reloc=2,group=1
 21269                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awdiv.c"
 21270                           	line	7
 21271                           global __ptext48
 21272                           __ptext48:
 21273  002F6E                     psect	text48
 21274                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awdiv.c"
 21275                           	line	7
 21276                           	global	__size_of___awdiv
 21277                           	__size_of___awdiv	equ	__end_of___awdiv-___awdiv
 21278  0000                     	
 21279                           ___awdiv:
 21280  002F6E                     ;incstack = 0
 21281                           	opt	stack 26
 21282                           	line	13
 21283                           	
 21284                           l4966:
 21285  002F6E                     	movlw	low(0)
 21286  002F6E  0E00               	movwf	((c:___awdiv@sign)),c
 21287  002F70  6E2C               	line	14
 21288                           	
 21289                           l4968:
 21290  002F72                     	btfsc	((c:___awdiv@divisor+1)),c,7
 21291  002F72  BE2A               	goto	u3210
 21292  002F74  EFC0  F017         	goto	u3211
 21293  002F78  EFBE  F017         
 21294                           u3211:
 21295  002F7C                     	goto	l4974
 21296  002F7C  EFC8  F017         u3210:
 21297  002F80                     	line	15
 21298                           	
 21299                           l4970:
 21300  002F80                     	negf	((c:___awdiv@divisor)),c
 21301  002F80  6C29               	comf	((c:___awdiv@divisor+1)),c
 21302  002F82  1E2A               	btfsc	status,0
 21303  002F84  B0D8               	incf	((c:___awdiv@divisor+1)),c
 21304  002F86  2A2A               	line	16
 21305                           	
 21306                           l4972:
 21307  002F88                     	movlw	low(01h)
 21308  002F88  0E01               	movwf	((c:___awdiv@sign)),c
 21309  002F8A  6E2C               	goto	l4974
 21310  002F8C  EFC8  F017         	line	17
 21311                           	
 21312                           l1448:
 21313  002F90                     	line	18
 21314                           	
 21315                           l4974:
 21316  002F90                     	btfsc	((c:___awdiv@dividend+1)),c,7
 21317  002F90  BE28               	goto	u3220
 21318  002F92  EFCF  F017         	goto	u3221
 21319  002F96  EFCD  F017         
 21320                           u3221:
 21321  002F9A                     	goto	l4980
 21322  002F9A  EFD7  F017         u3220:
 21323  002F9E                     	line	19
 21324                           	
 21325                           l4976:
 21326  002F9E                     	negf	((c:___awdiv@dividend)),c
 21327  002F9E  6C27               	comf	((c:___awdiv@dividend+1)),c
 21328  002FA0  1E28               	btfsc	status,0
 21329  002FA2  B0D8               	incf	((c:___awdiv@dividend+1)),c
 21330  002FA4  2A28               	line	20
 21331                           	
 21332                           l4978:
 21333  002FA6                     	movlw	(01h)&0ffh
 21334  002FA6  0E01               	xorwf	((c:___awdiv@sign)),c
 21335  002FA8  1A2C               	goto	l4980
 21336  002FAA  EFD7  F017         	line	21
 21337                           	
 21338                           l1449:
 21339  002FAE                     	line	22
 21340                           	
 21341                           l4980:
 21342  002FAE                     	movlw	high(0)
 21343  002FAE  0E00               	movwf	((c:___awdiv@quotient+1)),c
 21344  002FB0  6E2E               	movlw	low(0)
 21345  002FB2  0E00               	movwf	((c:___awdiv@quotient)),c
 21346  002FB4  6E2D               	line	23
 21347                           	
 21348                           l4982:
 21349  002FB6                     	movf	((c:___awdiv@divisor)),c,w
 21350  002FB6  5029               iorwf	((c:___awdiv@divisor+1)),c,w
 21351  002FB8  102A               	btfsc	status,2
 21352  002FBA  B4D8               	goto	u3231
 21353  002FBC  EFE2  F017         	goto	u3230
 21354  002FC0  EFE4  F017         
 21355                           u3231:
 21356  002FC4                     	goto	l5002
 21357  002FC4  EF18  F018         u3230:
 21358  002FC8                     	line	24
 21359                           	
 21360                           l4984:
 21361  002FC8                     	movlw	low(01h)
 21362  002FC8  0E01               	movwf	((c:___awdiv@counter)),c
 21363  002FCA  6E2B               	line	25
 21364                           	goto	l4988
 21365  002FCC  EFEE  F017         	
 21366                           l1452:
 21367  002FD0                     	line	26
 21368                           	
 21369                           l4986:
 21370  002FD0                     	bcf	status,0
 21371  002FD0  90D8               	rlcf	((c:___awdiv@divisor)),c
 21372  002FD2  3629               	rlcf	((c:___awdiv@divisor+1)),c
 21373  002FD4  362A               	line	27
 21374                           	incf	((c:___awdiv@counter)),c
 21375  002FD6  2A2B               	goto	l4988
 21376  002FD8  EFEE  F017         	line	28
 21377                           	
 21378                           l1451:
 21379  002FDC                     	line	25
 21380                           	
 21381                           l4988:
 21382  002FDC                     	
 21383                           	btfss	((c:___awdiv@divisor+1)),c,(15)&7
 21384  002FDC  AE2A               	goto	u3241
 21385  002FDE  EFF3  F017         	goto	u3240
 21386  002FE2  EFF5  F017         u3241:
 21387  002FE6                     	goto	l4986
 21388  002FE6  EFE8  F017         u3240:
 21389  002FEA                     	goto	l4990
 21390  002FEA  EFF9  F017         	
 21391                           l1453:
 21392  002FEE                     	goto	l4990
 21393  002FEE  EFF9  F017         	line	29
 21394                           	
 21395                           l1454:
 21396  002FF2                     	line	30
 21397                           	
 21398                           l4990:
 21399  002FF2                     	bcf	status,0
 21400  002FF2  90D8               	rlcf	((c:___awdiv@quotient)),c
 21401  002FF4  362D               	rlcf	((c:___awdiv@quotient+1)),c
 21402  002FF6  362E               	line	31
 21403                           	
 21404                           l4992:
 21405  002FF8                     		movf	((c:___awdiv@divisor)),c,w
 21406  002FF8  5029               	subwf	((c:___awdiv@dividend)),c,w
 21407  002FFA  5C27               	movf	((c:___awdiv@divisor+1)),c,w
 21408  002FFC  502A               	subwfb	((c:___awdiv@dividend+1)),c,w
 21409  002FFE  5828               	btfss	status,0
 21410  003000  A0D8               	goto	u3251
 21411  003002  EF05  F018         	goto	u3250
 21412  003006  EF07  F018         
 21413                           u3251:
 21414  00300A                     	goto	l4998
 21415  00300A  EF0E  F018         u3250:
 21416  00300E                     	line	32
 21417                           	
 21418                           l4994:
 21419  00300E                     	movf	((c:___awdiv@divisor)),c,w
 21420  00300E  5029               	subwf	((c:___awdiv@dividend)),c
 21421  003010  5E27               	movf	((c:___awdiv@divisor+1)),c,w
 21422  003012  502A               	subwfb	((c:___awdiv@dividend+1)),c
 21423  003014  5A28               
 21424                           	line	33
 21425                           	
 21426                           l4996:
 21427  003016                     	bsf	(0+(0/8)+(c:___awdiv@quotient)),c,(0)&7
 21428  003016  802D               	goto	l4998
 21429  003018  EF0E  F018         	line	34
 21430                           	
 21431                           l1455:
 21432  00301C                     	line	35
 21433                           	
 21434                           l4998:
 21435  00301C                     	bcf	status,0
 21436  00301C  90D8               	rrcf	((c:___awdiv@divisor+1)),c
 21437  00301E  322A               	rrcf	((c:___awdiv@divisor)),c
 21438  003020  3229               	line	36
 21439                           	
 21440                           l5000:
 21441  003022                     	decfsz	((c:___awdiv@counter)),c
 21442  003022  2E2B               	
 21443                           	goto	l4990
 21444  003024  EFF9  F017         	goto	l5002
 21445  003028  EF18  F018         	
 21446                           l1456:
 21447  00302C                     	goto	l5002
 21448  00302C  EF18  F018         	line	37
 21449                           	
 21450                           l1450:
 21451  003030                     	line	38
 21452                           	
 21453                           l5002:
 21454  003030                     	movf	((c:___awdiv@sign)),c,w
 21455  003030  502C               	btfsc	status,2
 21456  003032  B4D8               	goto	u3261
 21457  003034  EF1E  F018         	goto	u3260
 21458  003038  EF20  F018         u3261:
 21459  00303C                     	goto	l5006
 21460  00303C  EF26  F018         u3260:
 21461  003040                     	line	39
 21462                           	
 21463                           l5004:
 21464  003040                     	negf	((c:___awdiv@quotient)),c
 21465  003040  6C2D               	comf	((c:___awdiv@quotient+1)),c
 21466  003042  1E2E               	btfsc	status,0
 21467  003044  B0D8               	incf	((c:___awdiv@quotient+1)),c
 21468  003046  2A2E               	goto	l5006
 21469  003048  EF26  F018         	
 21470                           l1457:
 21471  00304C                     	line	40
 21472                           	
 21473                           l5006:
 21474  00304C                     	movff	(c:___awdiv@quotient),(c:?___awdiv)
 21475  00304C  C02D  F027         	movff	(c:___awdiv@quotient+1),(c:?___awdiv+1)
 21476  003050  C02E  F028         	goto	l1458
 21477  003054  EF2C  F018         	
 21478                           l5008:
 21479  003058                     	line	41
 21480                           	
 21481                           l1458:
 21482  003058                     	return	;funcret
 21483  003058  0012               	opt stack 0
 21484                           GLOBAL	__end_of___awdiv
 21485                           	__end_of___awdiv:
 21486  00305A                     	signat	___awdiv,8314
 21487                           	global	_codifica
 21488                           
 21489 ;; *************** function _codifica *****************
 21490 ;; Defined at:
 21491 ;;		line 200 in file "fifo.c"
 21492 ;; Parameters:    Size  Location     Type
 21493 ;;  tipo            1    wreg     unsigned char 
 21494 ;;  dado            2    0[COMRAM] PTR unsigned char 
 21495 ;;		 -> fifo_add_control@c(1), fifo_add_tempo@t(1), fifo_add@passo(1), RAM(2047), 
 21496 ;; Auto vars:     Size  Location     Type
 21497 ;;  tipo            1    4[COMRAM] unsigned char 
 21498 ;; Return value:  Size  Location     Type
 21499 ;;                  1    wreg      void 
 21500 ;; Registers used:
 21501 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 21502 ;; Tracked objects:
 21503 ;;		On entry : 0/0
 21504 ;;		On exit  : 0/0
 21505 ;;		Unchanged: 0/0
 21506 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21507 ;;      Params:         2       0       0       0       0       0       0       0       0       0
 21508 ;;      Locals:         1       0       0       0       0       0       0       0       0       0
 21509 ;;      Temps:          2       0       0       0       0       0       0       0       0       0
 21510 ;;      Totals:         5       0       0       0       0       0       0       0       0       0
 21511 ;;Total ram usage:        5 bytes
 21512 ;; Hardware stack levels used:    1
 21513 ;; Hardware stack levels required when called:    2
 21514 ;; This function calls:
 21515 ;;		Nothing
 21516 ;; This function is called by:
 21517 ;;		_fifo_delete
 21518 ;;		_fifo_add
 21519 ;;		_fifo_add_tempo
 21520 ;;		_fifo_add_control
 21521 ;; This function uses a non-reentrant model
 21522 ;;
 21523                           psect	text49,class=CODE,space=0,reloc=2,group=0
 21524                           	file	"fifo.c"
 21525                           	line	200
 21526                           global __ptext49
 21527                           __ptext49:
 21528  00282E                     psect	text49
 21529                           	file	"fifo.c"
 21530                           	line	200
 21531                           	global	__size_of_codifica
 21532                           	__size_of_codifica	equ	__end_of_codifica-_codifica
 21533  0000                     	
 21534                           _codifica:
 21535  00282E                     ;incstack = 0
 21536                           	opt	stack 27
 21537                           ;codifica@tipo stored from wreg
 21538                           	movwf	((c:codifica@tipo)),c
 21539  00282E  6E2B               	line	202
 21540                           	
 21541                           l5268:
 21542  002830                     ;fifo.c: 200: void codifica( unsigned char tipo, unsigned char *dado );fifo.c: 201: {;fi
                                 fo.c: 202:     switch( tipo )
 21543                           	goto	l5298
 21544  002830  EFB1  F014         	line	204
 21545                           ;fifo.c: 203:     {;fifo.c: 204:         case 'p': if(*dado == 0)
 21546                           	
 21547                           l735:
 21548  002834                     	
 21549                           l5270:
 21550  002834                     	movff	(c:codifica@dado),fsr2l
 21551  002834  C027  FFD9         	movff	(c:codifica@dado+1),fsr2h
 21552  002838  C028  FFDA         	movf	indf2,w
 21553  00283C  50DF               	btfss	status,2
 21554  00283E  A4D8               	goto	u3651
 21555  002840  EF24  F014         	goto	u3650
 21556  002844  EF26  F014         u3651:
 21557  002848                     	goto	l750
 21558  002848  EFCA  F014         u3650:
 21559  00284C                     	line	205
 21560                           	
 21561                           l5272:
 21562  00284C                     ;fifo.c: 205:                        *dado = 254;
 21563                           	movff	(c:codifica@dado),fsr2l
 21564  00284C  C027  FFD9         	movff	(c:codifica@dado+1),fsr2h
 21565  002850  C028  FFDA         	movlw	low(0FEh)
 21566  002854  0EFE               	movwf	indf2
 21567  002856  6EDF               	goto	l750
 21568  002858  EFCA  F014         	
 21569                           l736:
 21570  00285C                     	line	206
 21571                           ;fifo.c: 206:                         break;
 21572                           	goto	l750
 21573  00285C  EFCA  F014         	line	208
 21574                           ;fifo.c: 208:         case 't': *dado += 0x64; break;
 21575                           	
 21576                           l738:
 21577  002860                     	
 21578                           l5274:
 21579  002860                     	movff	(c:codifica@dado),fsr2l
 21580  002860  C027  FFD9         	movff	(c:codifica@dado+1),fsr2h
 21581  002864  C028  FFDA         	movlw	064h
 21582  002868  0E64               	addwf	indf2
 21583  00286A  26DF               	goto	l750
 21584  00286C  EFCA  F014         	line	209
 21585                           ;fifo.c: 209:         case 'a':
 21586                           	
 21587                           l739:
 21588  002870                     	line	211
 21589                           ;fifo.c: 211:         switch( *dado )
 21590                           	goto	l5294
 21591  002870  EF7C  F014         	line	213
 21592                           ;fifo.c: 212:         {;fifo.c: 213:             case 'A': *dado = 221; break;
 21593                           	
 21594                           l741:
 21595  002874                     	
 21596                           l5276:
 21597  002874                     	movff	(c:codifica@dado),fsr2l
 21598  002874  C027  FFD9         	movff	(c:codifica@dado+1),fsr2h
 21599  002878  C028  FFDA         	movlw	low(0DDh)
 21600  00287C  0EDD               	movwf	indf2
 21601  00287E  6EDF               	goto	l750
 21602  002880  EFCA  F014         	line	214
 21603                           ;fifo.c: 214:             case 'a': *dado = 222; break;
 21604                           	
 21605                           l743:
 21606  002884                     	
 21607                           l5278:
 21608  002884                     	movff	(c:codifica@dado),fsr2l
 21609  002884  C027  FFD9         	movff	(c:codifica@dado+1),fsr2h
 21610  002888  C028  FFDA         	movlw	low(0DEh)
 21611  00288C  0EDE               	movwf	indf2
 21612  00288E  6EDF               	goto	l750
 21613  002890  EFCA  F014         	line	215
 21614                           ;fifo.c: 215:             case 'B': *dado = 223; break;
 21615                           	
 21616                           l744:
 21617  002894                     	
 21618                           l5280:
 21619  002894                     	movff	(c:codifica@dado),fsr2l
 21620  002894  C027  FFD9         	movff	(c:codifica@dado+1),fsr2h
 21621  002898  C028  FFDA         	movlw	low(0DFh)
 21622  00289C  0EDF               	movwf	indf2
 21623  00289E  6EDF               	goto	l750
 21624  0028A0  EFCA  F014         	line	216
 21625                           ;fifo.c: 216:             case 'b': *dado = 224; break;
 21626                           	
 21627                           l745:
 21628  0028A4                     	
 21629                           l5282:
 21630  0028A4                     	movff	(c:codifica@dado),fsr2l
 21631  0028A4  C027  FFD9         	movff	(c:codifica@dado+1),fsr2h
 21632  0028A8  C028  FFDA         	movlw	low(0E0h)
 21633  0028AC  0EE0               	movwf	indf2
 21634  0028AE  6EDF               	goto	l750
 21635  0028B0  EFCA  F014         	line	217
 21636                           ;fifo.c: 217:             case 'C': *dado = 225; break;
 21637                           	
 21638                           l746:
 21639  0028B4                     	
 21640                           l5284:
 21641  0028B4                     	movff	(c:codifica@dado),fsr2l
 21642  0028B4  C027  FFD9         	movff	(c:codifica@dado+1),fsr2h
 21643  0028B8  C028  FFDA         	movlw	low(0E1h)
 21644  0028BC  0EE1               	movwf	indf2
 21645  0028BE  6EDF               	goto	l750
 21646  0028C0  EFCA  F014         	line	218
 21647                           ;fifo.c: 218:             case 'c': *dado = 226; break;
 21648                           	
 21649                           l747:
 21650  0028C4                     	
 21651                           l5286:
 21652  0028C4                     	movff	(c:codifica@dado),fsr2l
 21653  0028C4  C027  FFD9         	movff	(c:codifica@dado+1),fsr2h
 21654  0028C8  C028  FFDA         	movlw	low(0E2h)
 21655  0028CC  0EE2               	movwf	indf2
 21656  0028CE  6EDF               	goto	l750
 21657  0028D0  EFCA  F014         	line	219
 21658                           ;fifo.c: 219:             case 'D': *dado = 227; break;
 21659                           	
 21660                           l748:
 21661  0028D4                     	
 21662                           l5288:
 21663  0028D4                     	movff	(c:codifica@dado),fsr2l
 21664  0028D4  C027  FFD9         	movff	(c:codifica@dado+1),fsr2h
 21665  0028D8  C028  FFDA         	movlw	low(0E3h)
 21666  0028DC  0EE3               	movwf	indf2
 21667  0028DE  6EDF               	goto	l750
 21668  0028E0  EFCA  F014         	line	220
 21669                           ;fifo.c: 220:             case 'd': *dado = 228; break;
 21670                           	
 21671                           l749:
 21672  0028E4                     	
 21673                           l5290:
 21674  0028E4                     	movff	(c:codifica@dado),fsr2l
 21675  0028E4  C027  FFD9         	movff	(c:codifica@dado+1),fsr2h
 21676  0028E8  C028  FFDA         	movlw	low(0E4h)
 21677  0028EC  0EE4               	movwf	indf2
 21678  0028EE  6EDF               	goto	l750
 21679  0028F0  EFCA  F014         	line	221
 21680                           	
 21681                           l5292:
 21682  0028F4                     ;fifo.c: 221:         }
 21683                           	goto	l750
 21684  0028F4  EFCA  F014         	
 21685                           l740:
 21686  0028F8                     	
 21687                           l5294:
 21688  0028F8                     	movff	(c:codifica@dado),fsr2l
 21689  0028F8  C027  FFD9         	movff	(c:codifica@dado+1),fsr2h
 21690  0028FC  C028  FFDA         	movf	indf2,w
 21691  002900  50DF               	movwf	(??_codifica+0+0)&0ffh,c
 21692  002902  6E29               	clrf	(??_codifica+0+0+1)&0ffh,c
 21693  002904  6A2A               
 21694                           	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
 21695                           ; Switch size 1, requested type "space"
 21696                           ; Number of cases is 1, Range of values is 0 to 0
 21697                           ; switch strategies available:
 21698                           ; Name         Instructions Cycles
 21699                           ; simple_byte            4     3 (average)
 21700                           ;	Chosen strategy is simple_byte
 21701                           
 21702                           	movf ??_codifica+0+1,c,w
 21703  002906  502A               	xorlw	0^0	; case 0
 21704  002908  0A00               	skipnz
 21705  00290A  B4D8               	goto	l7856
 21706  00290C  EF8A  F014         	goto	l750
 21707  002910  EFCA  F014         	
 21708                           l7856:
 21709  002914                     ; Switch size 1, requested type "space"
 21710                           ; Number of cases is 8, Range of values is 65 to 100
 21711                           ; switch strategies available:
 21712                           ; Name         Instructions Cycles
 21713                           ; simple_byte           25    13 (average)
 21714                           ;	Chosen strategy is simple_byte
 21715                           
 21716                           	movf ??_codifica+0+0,c,w
 21717  002914  5029               	xorlw	65^0	; case 65
 21718  002916  0A41               	skipnz
 21719  002918  B4D8               	goto	l5276
 21720  00291A  EF3A  F014         	xorlw	66^65	; case 66
 21721  00291E  0A03               	skipnz
 21722  002920  B4D8               	goto	l5280
 21723  002922  EF4A  F014         	xorlw	67^66	; case 67
 21724  002926  0A01               	skipnz
 21725  002928  B4D8               	goto	l5284
 21726  00292A  EF5A  F014         	xorlw	68^67	; case 68
 21727  00292E  0A07               	skipnz
 21728  002930  B4D8               	goto	l5288
 21729  002932  EF6A  F014         	xorlw	97^68	; case 97
 21730  002936  0A25               	skipnz
 21731  002938  B4D8               	goto	l5278
 21732  00293A  EF42  F014         	xorlw	98^97	; case 98
 21733  00293E  0A03               	skipnz
 21734  002940  B4D8               	goto	l5282
 21735  002942  EF52  F014         	xorlw	99^98	; case 99
 21736  002946  0A01               	skipnz
 21737  002948  B4D8               	goto	l5286
 21738  00294A  EF62  F014         	xorlw	100^99	; case 100
 21739  00294E  0A07               	skipnz
 21740  002950  B4D8               	goto	l5290
 21741  002952  EF72  F014         	goto	l750
 21742  002956  EFCA  F014         
 21743                           	
 21744                           l742:
 21745  00295A                     	line	223
 21746                           ;fifo.c: 223:         break;
 21747                           	goto	l750
 21748  00295A  EFCA  F014         	line	225
 21749                           	
 21750                           l5296:
 21751  00295E                     ;fifo.c: 225:     }
 21752                           	goto	l750
 21753  00295E  EFCA  F014         	
 21754                           l734:
 21755  002962                     	
 21756                           l5298:
 21757  002962                     	movf	((c:codifica@tipo)),c,w
 21758  002962  502B               	movwf	(??_codifica+0+0)&0ffh,c
 21759  002964  6E29               	clrf	(??_codifica+0+0+1)&0ffh,c
 21760  002966  6A2A               
 21761                           	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
 21762                           ; Switch size 1, requested type "space"
 21763                           ; Number of cases is 1, Range of values is 0 to 0
 21764                           ; switch strategies available:
 21765                           ; Name         Instructions Cycles
 21766                           ; simple_byte            4     3 (average)
 21767                           ;	Chosen strategy is simple_byte
 21768                           
 21769                           	movf ??_codifica+0+1,c,w
 21770  002968  502A               	xorlw	0^0	; case 0
 21771  00296A  0A00               	skipnz
 21772  00296C  B4D8               	goto	l7858
 21773  00296E  EFBB  F014         	goto	l750
 21774  002972  EFCA  F014         	
 21775                           l7858:
 21776  002976                     ; Switch size 1, requested type "space"
 21777                           ; Number of cases is 3, Range of values is 97 to 116
 21778                           ; switch strategies available:
 21779                           ; Name         Instructions Cycles
 21780                           ; simple_byte           10     6 (average)
 21781                           ;	Chosen strategy is simple_byte
 21782                           
 21783                           	movf ??_codifica+0+0,c,w
 21784  002976  5029               	xorlw	97^0	; case 97
 21785  002978  0A61               	skipnz
 21786  00297A  B4D8               	goto	l5294
 21787  00297C  EF7C  F014         	xorlw	112^97	; case 112
 21788  002980  0A11               	skipnz
 21789  002982  B4D8               	goto	l5270
 21790  002984  EF1A  F014         	xorlw	116^112	; case 116
 21791  002988  0A04               	skipnz
 21792  00298A  B4D8               	goto	l5274
 21793  00298C  EF30  F014         	goto	l750
 21794  002990  EFCA  F014         
 21795                           	
 21796                           l737:
 21797  002994                     	line	226
 21798                           	
 21799                           l750:
 21800  002994                     	return	;funcret
 21801  002994  0012               	opt stack 0
 21802                           GLOBAL	__end_of_codifica
 21803                           	__end_of_codifica:
 21804  002996                     	signat	_codifica,8313
 21805                           	global	_dispLCD_str
 21806                           
 21807 ;; *************** function _dispLCD_str *****************
 21808 ;; Defined at:
 21809 ;;		line 250 in file "dispLCD4vias.c"
 21810 ;; Parameters:    Size  Location     Type
 21811 ;;  str             2    7[COMRAM] PTR const unsigned char 
 21812 ;;		 -> STR_27(78), STR_26(62), STR_15(81), STR_4(83), 
 21813 ;; Auto vars:     Size  Location     Type
 21814 ;;  c               1   10[COMRAM] unsigned char 
 21815 ;;  lin             1    9[COMRAM] unsigned char 
 21816 ;; Return value:  Size  Location     Type
 21817 ;;                  1    wreg      void 
 21818 ;; Registers used:
 21819 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21820 ;; Tracked objects:
 21821 ;;		On entry : 0/0
 21822 ;;		On exit  : 0/0
 21823 ;;		Unchanged: 0/0
 21824 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21825 ;;      Params:         2       0       0       0       0       0       0       0       0       0
 21826 ;;      Locals:         2       0       0       0       0       0       0       0       0       0
 21827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0
 21828 ;;      Totals:         4       0       0       0       0       0       0       0       0       0
 21829 ;;Total ram usage:        4 bytes
 21830 ;; Hardware stack levels used:    1
 21831 ;; Hardware stack levels required when called:    4
 21832 ;; This function calls:
 21833 ;;		_dispLCD_dataReg
 21834 ;;		_dispLCD_lincol
 21835 ;; This function is called by:
 21836 ;;		_main
 21837 ;; This function uses a non-reentrant model
 21838 ;;
 21839                           psect	text50,class=CODE,space=0,reloc=2,group=0
 21840                           	file	"dispLCD4vias.c"
 21841                           	line	250
 21842                           global __ptext50
 21843                           __ptext50:
 21844  0038AC                     psect	text50
 21845                           	file	"dispLCD4vias.c"
 21846                           	line	250
 21847                           	global	__size_of_dispLCD_str
 21848                           	__size_of_dispLCD_str	equ	__end_of_dispLCD_str-_dispLCD_str
 21849  0000                     	
 21850                           _dispLCD_str:
 21851  0038AC                     ;incstack = 0
 21852                           	opt	stack 26
 21853                           	line	252
 21854                           	
 21855                           l6036:
 21856  0038AC                     ;dispLCD4vias.c: 250: void dispLCD_str( const char * str );dispLCD4vias.c: 251: {;dispLC
                                 D4vias.c: 252:     char lin = 0;
 21857                           	movlw	low(0)
 21858  0038AC  0E00               	movwf	((c:dispLCD_str@lin)),c
 21859  0038AE  6E30               	line	254
 21860                           	
 21861                           l6038:
 21862  0038B0                     ;dispLCD4vias.c: 253:     char c;;dispLCD4vias.c: 254:     dispLCD_lincol(0,0);
 21863                           	movlw	low(0)
 21864  0038B0  0E00               	movwf	((c:dispLCD_lincol@col)),c
 21865  0038B2  6E29               	movlw	(0)&0ffh
 21866  0038B4  0E00               	
 21867                           	call	_dispLCD_lincol
 21868  0038B6  EC8D  F01D         	line	256
 21869                           ;dispLCD4vias.c: 256:     while( c = *str )
 21870                           	goto	l6048
 21871  0038BA  EF79  F01C         	
 21872                           l547:
 21873  0038BE                     	line	258
 21874                           	
 21875                           l6040:
 21876  0038BE                     ;dispLCD4vias.c: 257:     {;dispLCD4vias.c: 258:         if( c != '\n' )
 21877                           		movlw	10
 21878  0038BE  0E0A               	xorwf	((c:dispLCD_str@c)),c,w
 21879  0038C0  1831               	btfsc	status,2
 21880  0038C2  B4D8               	goto	u4431
 21881  0038C4  EF66  F01C         	goto	u4430
 21882  0038C8  EF68  F01C         
 21883                           u4431:
 21884  0038CC                     	goto	l6044
 21885  0038CC  EF6D  F01C         u4430:
 21886  0038D0                     	line	259
 21887                           	
 21888                           l6042:
 21889  0038D0                     ;dispLCD4vias.c: 259:             dispLCD_dataReg( c );
 21890                           	movf	((c:dispLCD_str@c)),c,w
 21891  0038D0  5031               	
 21892                           	call	_dispLCD_dataReg
 21893  0038D2  EC9B  F01E         	goto	l6046
 21894  0038D6  EF75  F01C         	line	260
 21895                           ;dispLCD4vias.c: 260:         else
 21896                           	
 21897                           l548:
 21898  0038DA                     	line	261
 21899                           	
 21900                           l6044:
 21901  0038DA                     ;dispLCD4vias.c: 261:             dispLCD_lincol(++lin,0);
 21902                           	movlw	low(0)
 21903  0038DA  0E00               	movwf	((c:dispLCD_lincol@col)),c
 21904  0038DC  6E29               	incf	((c:dispLCD_str@lin)),c
 21905  0038DE  2A30               	movf	((c:dispLCD_str@lin)),c,w
 21906  0038E0  5030               	
 21907                           	call	_dispLCD_lincol
 21908  0038E2  EC8D  F01D         	goto	l6046
 21909  0038E6  EF75  F01C         	
 21910                           l549:
 21911  0038EA                     	line	262
 21912                           	
 21913                           l6046:
 21914  0038EA                     ;dispLCD4vias.c: 262:         ++str;
 21915                           	infsnz	((c:dispLCD_str@str)),c
 21916  0038EA  4A2E               	incf	((c:dispLCD_str@str+1)),c
 21917  0038EC  2A2F               	goto	l6048
 21918  0038EE  EF79  F01C         	line	263
 21919                           ;dispLCD4vias.c: 263:     }
 21920                           	
 21921                           l546:
 21922  0038F2                     	line	256
 21923                           	
 21924                           l6048:
 21925  0038F2                     ;dispLCD4vias.c: 256:     while( c = *str )
 21926                           	movff	(c:dispLCD_str@str),tblptrl
 21927  0038F2  C02E  FFF6         	movff	(c:dispLCD_str@str+1),tblptrh
 21928  0038F6  C02F  FFF7         	if	0	;tblptru may be non-zero
 21929  0038FA                     	clrf	tblptru
 21931  0038FA                     	if	0	;tblptru may be non-zero
 21932  0038FA                     	global __mediumconst
 21933                           movlw	low highword(__mediumconst)
 21936  0038FA                     	tblrd	*
 21937  0038FA  0008               	
 21938                           	movff	tablat,(c:dispLCD_str@c)
 21939  0038FC  CFF5 F031          	movf	((c:dispLCD_str@c)),c,w
 21940  003900  5031               	btfss	status,2
 21941  003902  A4D8               	goto	u4441
 21942  003904  EF86  F01C         	goto	u4440
 21943  003908  EF88  F01C         u4441:
 21944  00390C                     	goto	l6040
 21945  00390C  EF5F  F01C         u4440:
 21946  003910                     	goto	l551
 21947  003910  EF8A  F01C         	
 21948                           l550:
 21949  003914                     	line	264
 21950                           	
 21951                           l551:
 21952  003914                     	return	;funcret
 21953  003914  0012               	opt stack 0
 21954                           GLOBAL	__end_of_dispLCD_str
 21955                           	__end_of_dispLCD_str:
 21956  003916                     	signat	_dispLCD_str,4217
 21957                           	global	_dispLCD_init
 21958                           
 21959 ;; *************** function _dispLCD_init *****************
 21960 ;; Defined at:
 21961 ;;		line 165 in file "dispLCD4vias.c"
 21962 ;; Parameters:    Size  Location     Type
 21963 ;;		None
 21964 ;; Auto vars:     Size  Location     Type
 21965 ;;		None
 21966 ;; Return value:  Size  Location     Type
 21967 ;;                  1    wreg      void 
 21968 ;; Registers used:
 21969 ;;		wreg, status,2, status,0, cstack
 21970 ;; Tracked objects:
 21971 ;;		On entry : 0/0
 21972 ;;		On exit  : 0/0
 21973 ;;		Unchanged: 0/0
 21974 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21975 ;;      Params:         0       0       0       0       0       0       0       0       0       0
 21976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0
 21977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0
 21978 ;;      Totals:         0       0       0       0       0       0       0       0       0       0
 21979 ;;Total ram usage:        0 bytes
 21980 ;; Hardware stack levels used:    1
 21981 ;; Hardware stack levels required when called:    3
 21982 ;; This function calls:
 21983 ;;		_delay
 21984 ;;		_dispLCD_instReg
 21985 ;; This function is called by:
 21986 ;;		_main
 21987 ;; This function uses a non-reentrant model
 21988 ;;
 21989                           psect	text51,class=CODE,space=0,reloc=2,group=0
 21990                           	line	165
 21991                           global __ptext51
 21992                           __ptext51:
 21993  003F54                     psect	text51
 21994                           	file	"dispLCD4vias.c"
 21995                           	line	165
 21996                           	global	__size_of_dispLCD_init
 21997                           	__size_of_dispLCD_init	equ	__end_of_dispLCD_init-_dispLCD_init
 21998  0000                     	
 21999                           _dispLCD_init:
 22000  003F54                     ;incstack = 0
 22001                           	opt	stack 27
 22002                           	line	167
 22003                           	
 22004                           l5486:
 22005  003F54                     ;dispLCD4vias.c: 167:     ADCON1 = 0xFF;
 22006                           	setf	((c:4033)),c	;volatile
 22007  003F54  68C1               	line	170
 22008                           ;dispLCD4vias.c: 170:     TRISBbits.TRISB2 = 0;
 22009                           	bcf	((c:3987)),c,2	;volatile
 22010  003F56  9493               	line	171
 22011                           ;dispLCD4vias.c: 171:     TRISBbits.TRISB3 = 0;
 22012                           	bcf	((c:3987)),c,3	;volatile
 22013  003F58  9693               	line	172
 22014                           ;dispLCD4vias.c: 172:     TRISBbits.TRISB4 = 0;
 22015                           	bcf	((c:3987)),c,4	;volatile
 22016  003F5A  9893               	line	173
 22017                           ;dispLCD4vias.c: 173:     TRISBbits.TRISB5 = 0;
 22018                           	bcf	((c:3987)),c,5	;volatile
 22019  003F5C  9A93               	line	175
 22020                           ;dispLCD4vias.c: 175:     TRISBbits.TRISB6 = 0;
 22021                           	bcf	((c:3987)),c,6	;volatile
 22022  003F5E  9C93               	line	176
 22023                           ;dispLCD4vias.c: 176:     TRISBbits.TRISB7 = 0;
 22024                           	bcf	((c:3987)),c,7	;volatile
 22025  003F60  9E93               	line	178
 22026                           ;dispLCD4vias.c: 178:     LCDbits.EN = 1;
 22027                           	bsf	((c:3978)),c,7	;volatile
 22028  003F62  8E8A               	line	179
 22029                           	
 22030                           l5488:
 22031  003F64                     ;dispLCD4vias.c: 179:     delay(5);
 22032                           	movlw	high(05h)
 22033  003F64  0E00               	movwf	((c:delay@t+1)),c
 22034  003F66  6E28               	movlw	low(05h)
 22035  003F68  0E05               	movwf	((c:delay@t)),c
 22036  003F6A  6E27               	call	_delay	;wreg free
 22037  003F6C  EC12  F020         	line	180
 22038                           ;dispLCD4vias.c: 180:     dispLCD_instReg( 0x20|0x00|0x08);
 22039                           	movlw	(028h)&0ffh
 22040  003F70  0E28               	
 22041                           	call	_dispLCD_instReg
 22042  003F72  EC35  F017         	line	181
 22043                           ;dispLCD4vias.c: 181:     dispLCD_instReg( 0x08|0x04|0x00|0x00 );
 22044                           	movlw	(0Ch)&0ffh
 22045  003F76  0E0C               	
 22046                           	call	_dispLCD_instReg
 22047  003F78  EC35  F017         	line	182
 22048                           ;dispLCD4vias.c: 182:     dispLCD_instReg( 0x01 );
 22049                           	movlw	(01h)&0ffh
 22050  003F7C  0E01               	
 22051                           	call	_dispLCD_instReg
 22052  003F7E  EC35  F017         	line	183
 22053                           ;dispLCD4vias.c: 183:     dispLCD_instReg( 0x02 );
 22054                           	movlw	(02h)&0ffh
 22055  003F82  0E02               	
 22056                           	call	_dispLCD_instReg
 22057  003F84  EC35  F017         	line	184
 22058                           	
 22059                           l517:
 22060  003F88                     	return	;funcret
 22061  003F88  0012               	opt stack 0
 22062                           GLOBAL	__end_of_dispLCD_init
 22063                           	__end_of_dispLCD_init:
 22064  003F8A                     	signat	_dispLCD_init,89
 22065                           	global	_dispLCD_clr
 22066                           
 22067 ;; *************** function _dispLCD_clr *****************
 22068 ;; Defined at:
 22069 ;;		line 244 in file "dispLCD4vias.c"
 22070 ;; Parameters:    Size  Location     Type
 22071 ;;		None
 22072 ;; Auto vars:     Size  Location     Type
 22073 ;;		None
 22074 ;; Return value:  Size  Location     Type
 22075 ;;                  1    wreg      void 
 22076 ;; Registers used:
 22077 ;;		wreg, status,2, status,0, cstack
 22078 ;; Tracked objects:
 22079 ;;		On entry : 0/0
 22080 ;;		On exit  : 0/0
 22081 ;;		Unchanged: 0/0
 22082 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22083 ;;      Params:         0       0       0       0       0       0       0       0       0       0
 22084 ;;      Locals:         0       0       0       0       0       0       0       0       0       0
 22085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0
 22086 ;;      Totals:         0       0       0       0       0       0       0       0       0       0
 22087 ;;Total ram usage:        0 bytes
 22088 ;; Hardware stack levels used:    1
 22089 ;; Hardware stack levels required when called:    3
 22090 ;; This function calls:
 22091 ;;		_dispLCD_instReg
 22092 ;; This function is called by:
 22093 ;;		_main
 22094 ;; This function uses a non-reentrant model
 22095 ;;
 22096                           psect	text52,class=CODE,space=0,reloc=2,group=0
 22097                           	line	244
 22098                           global __ptext52
 22099                           __ptext52:
 22100  0043B8                     psect	text52
 22101                           	file	"dispLCD4vias.c"
 22102                           	line	244
 22103                           	global	__size_of_dispLCD_clr
 22104                           	__size_of_dispLCD_clr	equ	__end_of_dispLCD_clr-_dispLCD_clr
 22105  0000                     	
 22106                           _dispLCD_clr:
 22107  0043B8                     ;incstack = 0
 22108                           	opt	stack 27
 22109                           	line	246
 22110                           	
 22111                           l5764:
 22112  0043B8                     ;dispLCD4vias.c: 246:     dispLCD_instReg(0x01);
 22113                           	movlw	(01h)&0ffh
 22114  0043B8  0E01               	
 22115                           	call	_dispLCD_instReg
 22116  0043BA  EC35  F017         	line	247
 22117                           	
 22118                           l543:
 22119  0043BE                     	return	;funcret
 22120  0043BE  0012               	opt stack 0
 22121                           GLOBAL	__end_of_dispLCD_clr
 22122                           	__end_of_dispLCD_clr:
 22123  0043C0                     	signat	_dispLCD_clr,89
 22124                           	global	_dispLCD
 22125                           
 22126 ;; *************** function _dispLCD *****************
 22127 ;; Defined at:
 22128 ;;		line 187 in file "dispLCD4vias.c"
 22129 ;; Parameters:    Size  Location     Type
 22130 ;;  lin             1    wreg     unsigned char 
 22131 ;;  col             1    7[COMRAM] unsigned char 
 22132 ;;  str             2    8[COMRAM] PTR const unsigned char 
 22133 ;;		 -> STR_32(21), STR_31(21), STR_30(21), STR_29(2), 
 22134 ;;		 -> STR_28(2), STR_25(21), STR_24(21), STR_23(21), 
 22135 ;;		 -> STR_22(21), STR_21(21), STR_20(8), STR_19(21), 
 22136 ;;		 -> STR_18(21), STR_17(21), STR_16(21), STR_14(21), 
 22137 ;;		 -> STR_13(21), STR_12(2), STR_11(2), STR_10(21), 
 22138 ;;		 -> STR_9(21), STR_8(21), STR_7(21), STR_6(21), 
 22139 ;;		 -> STR_5(21), STR_3(21), STR_2(2), STR_1(2), 
 22140 ;; Auto vars:     Size  Location     Type
 22141 ;;  lin             1   11[COMRAM] unsigned char 
 22142 ;;  pos             1   10[COMRAM] unsigned char 
 22143 ;; Return value:  Size  Location     Type
 22144 ;;                  1    wreg      void 
 22145 ;; Registers used:
 22146 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 22147 ;; Tracked objects:
 22148 ;;		On entry : 0/0
 22149 ;;		On exit  : 0/0
 22150 ;;		Unchanged: 0/0
 22151 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22152 ;;      Params:         3       0       0       0       0       0       0       0       0       0
 22153 ;;      Locals:         2       0       0       0       0       0       0       0       0       0
 22154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0
 22155 ;;      Totals:         5       0       0       0       0       0       0       0       0       0
 22156 ;;Total ram usage:        5 bytes
 22157 ;; Hardware stack levels used:    1
 22158 ;; Hardware stack levels required when called:    4
 22159 ;; This function calls:
 22160 ;;		_dispLCD_dataReg
 22161 ;;		_dispLCD_lincol
 22162 ;; This function is called by:
 22163 ;;		_main
 22164 ;; This function uses a non-reentrant model
 22165 ;;
 22166                           psect	text53,class=CODE,space=0,reloc=2,group=0
 22167                           	line	187
 22168                           global __ptext53
 22169                           __ptext53:
 22170  003CE6                     psect	text53
 22171                           	file	"dispLCD4vias.c"
 22172                           	line	187
 22173                           	global	__size_of_dispLCD
 22174                           	__size_of_dispLCD	equ	__end_of_dispLCD-_dispLCD
 22175  0000                     	
 22176                           _dispLCD:
 22177  003CE6                     ;incstack = 0
 22178                           	opt	stack 26
 22179                           ;dispLCD@lin stored from wreg
 22180                           	movwf	((c:dispLCD@lin)),c
 22181  003CE6  6E32               	line	189
 22182                           	
 22183                           l5766:
 22184  003CE8                     ;dispLCD4vias.c: 187: void dispLCD( unsigned char lin, unsigned char col, const char * s
                                 tr );dispLCD4vias.c: 188: {;dispLCD4vias.c: 189:     char pos = col;
 22185                           	movff	(c:dispLCD@col),(c:dispLCD@pos)
 22186  003CE8  C02E  F031         	line	190
 22187                           	
 22188                           l5768:
 22189  003CEC                     ;dispLCD4vias.c: 190:     dispLCD_lincol( lin, col );
 22190                           	movff	(c:dispLCD@col),(c:dispLCD_lincol@col)
 22191  003CEC  C02E  F029         	movf	((c:dispLCD@lin)),c,w
 22192  003CF0  5032               	
 22193                           	call	_dispLCD_lincol
 22194  003CF2  EC8D  F01D         	line	192
 22195                           ;dispLCD4vias.c: 192:     while( *str )
 22196                           	goto	l5776
 22197  003CF6  EF8A  F01E         	
 22198                           l521:
 22199  003CFA                     	line	194
 22200                           	
 22201                           l5770:
 22202  003CFA                     ;dispLCD4vias.c: 193:     {;dispLCD4vias.c: 194:         dispLCD_dataReg( *str );
 22203                           	movff	(c:dispLCD@str),tblptrl
 22204  003CFA  C02F  FFF6         	movff	(c:dispLCD@str+1),tblptrh
 22205  003CFE  C030  FFF7         	if	0	;tblptru may be non-zero
 22206  003D02                     	clrf	tblptru
 22208  003D02                     	if	0	;tblptru may be non-zero
 22209  003D02                     	global __mediumconst
 22210                           movlw	low highword(__mediumconst)
 22213  003D02                     	tblrd	*
 22214  003D02  0008               	
 22215                           	movf	tablat,w
 22216  003D04  50F5               	
 22217                           	call	_dispLCD_dataReg
 22218  003D06  EC9B  F01E         	line	195
 22219                           	
 22220                           l5772:
 22221  003D0A                     ;dispLCD4vias.c: 195:         ++str;
 22222                           	infsnz	((c:dispLCD@str)),c
 22223  003D0A  4A2F               	incf	((c:dispLCD@str+1)),c
 22224  003D0C  2A30               	line	196
 22225                           	
 22226                           l5774:
 22227  003D0E                     ;dispLCD4vias.c: 196:         ++pos;
 22228                           	incf	((c:dispLCD@pos)),c
 22229  003D0E  2A31               	goto	l5776
 22230  003D10  EF8A  F01E         	line	197
 22231                           ;dispLCD4vias.c: 197:     }
 22232                           	
 22233                           l520:
 22234  003D14                     	line	192
 22235                           	
 22236                           l5776:
 22237  003D14                     ;dispLCD4vias.c: 192:     while( *str )
 22238                           	movff	(c:dispLCD@str),tblptrl
 22239  003D14  C02F  FFF6         	movff	(c:dispLCD@str+1),tblptrh
 22240  003D18  C030  FFF7         	if	0	;tblptru may be non-zero
 22241  003D1C                     	clrf	tblptru
 22243  003D1C                     	if	0	;tblptru may be non-zero
 22244  003D1C                     	global __mediumconst
 22245                           movlw	low highword(__mediumconst)
 22248  003D1C                     	tblrd	*
 22249  003D1C  0008               	
 22250                           	movf	tablat,w
 22251  003D1E  50F5               	iorlw	0
 22252  003D20  0900               	btfss	status,2
 22253  003D22  A4D8               	goto	u4201
 22254  003D24  EF96  F01E         	goto	u4200
 22255  003D28  EF98  F01E         u4201:
 22256  003D2C                     	goto	l5770
 22257  003D2C  EF7D  F01E         u4200:
 22258  003D30                     	goto	l523
 22259  003D30  EF9A  F01E         	
 22260                           l522:
 22261  003D34                     	line	198
 22262                           	
 22263                           l523:
 22264  003D34                     	return	;funcret
 22265  003D34  0012               	opt stack 0
 22266                           GLOBAL	__end_of_dispLCD
 22267                           	__end_of_dispLCD:
 22268  003D36                     	signat	_dispLCD,12409
 22269                           	global	_dispLCD_lincol
 22270                           
 22271 ;; *************** function _dispLCD_lincol *****************
 22272 ;; Defined at:
 22273 ;;		line 150 in file "dispLCD4vias.c"
 22274 ;; Parameters:    Size  Location     Type
 22275 ;;  lin             1    wreg     unsigned char 
 22276 ;;  col             1    2[COMRAM] unsigned char 
 22277 ;; Auto vars:     Size  Location     Type
 22278 ;;  lin             1    5[COMRAM] unsigned char 
 22279 ;;  aux             1    6[COMRAM] unsigned char 
 22280 ;; Return value:  Size  Location     Type
 22281 ;;                  1    wreg      void 
 22282 ;; Registers used:
 22283 ;;		wreg, status,2, status,0, cstack
 22284 ;; Tracked objects:
 22285 ;;		On entry : 0/0
 22286 ;;		On exit  : 0/0
 22287 ;;		Unchanged: 0/0
 22288 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22289 ;;      Params:         1       0       0       0       0       0       0       0       0       0
 22290 ;;      Locals:         2       0       0       0       0       0       0       0       0       0
 22291 ;;      Temps:          2       0       0       0       0       0       0       0       0       0
 22292 ;;      Totals:         5       0       0       0       0       0       0       0       0       0
 22293 ;;Total ram usage:        5 bytes
 22294 ;; Hardware stack levels used:    1
 22295 ;; Hardware stack levels required when called:    3
 22296 ;; This function calls:
 22297 ;;		_dispLCD_instReg
 22298 ;; This function is called by:
 22299 ;;		_main
 22300 ;;		_dispLCD
 22301 ;;		_dispLCD_num
 22302 ;;		_dispLCD_str
 22303 ;;		_fifo_print
 22304 ;;		_printExec
 22305 ;; This function uses a non-reentrant model
 22306 ;;
 22307                           psect	text54,class=CODE,space=0,reloc=2,group=0
 22308                           	line	150
 22309                           global __ptext54
 22310                           __ptext54:
 22311  003B1A                     psect	text54
 22312                           	file	"dispLCD4vias.c"
 22313                           	line	150
 22314                           	global	__size_of_dispLCD_lincol
 22315                           	__size_of_dispLCD_lincol	equ	__end_of_dispLCD_lincol-_dispLCD_lincol
 22316  0000                     	
 22317                           _dispLCD_lincol:
 22318  003B1A                     ;incstack = 0
 22319                           	opt	stack 25
 22320                           ;dispLCD_lincol@lin stored from wreg
 22321                           	movwf	((c:dispLCD_lincol@lin)),c
 22322  003B1A  6E2C               	line	152
 22323                           	
 22324                           l5016:
 22325  003B1C                     ;dispLCD4vias.c: 150: void dispLCD_lincol( unsigned char lin, unsigned char col);dispLCD
                                 4vias.c: 151: {;dispLCD4vias.c: 152:     char aux = 0x00;
 22326                           	movlw	low(0)
 22327  003B1C  0E00               	movwf	((c:dispLCD_lincol@aux)),c
 22328  003B1E  6E2D               	line	154
 22329                           ;dispLCD4vias.c: 154:     switch(lin)
 22330                           	goto	l5026
 22331  003B20  EFA0  F01D         	line	156
 22332                           ;dispLCD4vias.c: 155:     {;dispLCD4vias.c: 156:         case 1: aux = 0x40; break;
 22333                           	
 22334                           l510:
 22335  003B24                     	
 22336                           l5018:
 22337  003B24                     	movlw	low(040h)
 22338  003B24  0E40               	movwf	((c:dispLCD_lincol@aux)),c
 22339  003B26  6E2D               	goto	l5028
 22340  003B28  EFB9  F01D         	line	157
 22341                           ;dispLCD4vias.c: 157:         case 2: aux = 0x14; break;
 22342                           	
 22343                           l512:
 22344  003B2C                     	
 22345                           l5020:
 22346  003B2C                     	movlw	low(014h)
 22347  003B2C  0E14               	movwf	((c:dispLCD_lincol@aux)),c
 22348  003B2E  6E2D               	goto	l5028
 22349  003B30  EFB9  F01D         	line	158
 22350                           ;dispLCD4vias.c: 158:         case 3: aux = 0x54; break;
 22351                           	
 22352                           l513:
 22353  003B34                     	
 22354                           l5022:
 22355  003B34                     	movlw	low(054h)
 22356  003B34  0E54               	movwf	((c:dispLCD_lincol@aux)),c
 22357  003B36  6E2D               	goto	l5028
 22358  003B38  EFB9  F01D         	line	159
 22359                           	
 22360                           l5024:
 22361  003B3C                     ;dispLCD4vias.c: 159:     }
 22362                           	goto	l5028
 22363  003B3C  EFB9  F01D         	
 22364                           l509:
 22365  003B40                     	
 22366                           l5026:
 22367  003B40                     	movf	((c:dispLCD_lincol@lin)),c,w
 22368  003B40  502C               	movwf	(??_dispLCD_lincol+0+0)&0ffh,c
 22369  003B42  6E2A               	clrf	(??_dispLCD_lincol+0+0+1)&0ffh,c
 22370  003B44  6A2B               
 22371                           	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
 22372                           ; Switch size 1, requested type "space"
 22373                           ; Number of cases is 1, Range of values is 0 to 0
 22374                           ; switch strategies available:
 22375                           ; Name         Instructions Cycles
 22376                           ; simple_byte            4     3 (average)
 22377                           ;	Chosen strategy is simple_byte
 22378                           
 22379                           	movf ??_dispLCD_lincol+0+1,c,w
 22380  003B46  502B               	xorlw	0^0	; case 0
 22381  003B48  0A00               	skipnz
 22382  003B4A  B4D8               	goto	l7860
 22383  003B4C  EFAA  F01D         	goto	l5028
 22384  003B50  EFB9  F01D         	
 22385                           l7860:
 22386  003B54                     ; Switch size 1, requested type "space"
 22387                           ; Number of cases is 3, Range of values is 1 to 3
 22388                           ; switch strategies available:
 22389                           ; Name         Instructions Cycles
 22390                           ; simple_byte           10     6 (average)
 22391                           ;	Chosen strategy is simple_byte
 22392                           
 22393                           	movf ??_dispLCD_lincol+0+0,c,w
 22394  003B54  502A               	xorlw	1^0	; case 1
 22395  003B56  0A01               	skipnz
 22396  003B58  B4D8               	goto	l5018
 22397  003B5A  EF92  F01D         	xorlw	2^1	; case 2
 22398  003B5E  0A03               	skipnz
 22399  003B60  B4D8               	goto	l5020
 22400  003B62  EF96  F01D         	xorlw	3^2	; case 3
 22401  003B66  0A01               	skipnz
 22402  003B68  B4D8               	goto	l5022
 22403  003B6A  EF9A  F01D         	goto	l5028
 22404  003B6E  EFB9  F01D         
 22405                           	
 22406                           l511:
 22407  003B72                     	line	161
 22408                           	
 22409                           l5028:
 22410  003B72                     ;dispLCD4vias.c: 161:     dispLCD_instReg( (0x80+(aux + (col + 0x00) & 0x7F)) );
 22411                           	movf	((c:dispLCD_lincol@aux)),c,w
 22412  003B72  502D               	addwf	((c:dispLCD_lincol@col)),c,w
 22413  003B74  2429               	andlw	low(07Fh)
 22414  003B76  0B7F               	addlw	low(080h)
 22415  003B78  0F80               	
 22416                           	call	_dispLCD_instReg
 22417  003B7A  EC35  F017         	line	162
 22418                           	
 22419                           l514:
 22420  003B7E                     	return	;funcret
 22421  003B7E  0012               	opt stack 0
 22422                           GLOBAL	__end_of_dispLCD_lincol
 22423                           	__end_of_dispLCD_lincol:
 22424  003B80                     	signat	_dispLCD_lincol,8313
 22425                           	global	_dispLCD_instReg
 22426                           
 22427 ;; *************** function _dispLCD_instReg *****************
 22428 ;; Defined at:
 22429 ;;		line 101 in file "dispLCD4vias.c"
 22430 ;; Parameters:    Size  Location     Type
 22431 ;;  i               1    wreg     unsigned char 
 22432 ;; Auto vars:     Size  Location     Type
 22433 ;;  i               1    1[COMRAM] unsigned char 
 22434 ;; Return value:  Size  Location     Type
 22435 ;;                  1    wreg      void 
 22436 ;; Registers used:
 22437 ;;		wreg, status,2, status,0
 22438 ;; Tracked objects:
 22439 ;;		On entry : 0/0
 22440 ;;		On exit  : 0/0
 22441 ;;		Unchanged: 0/0
 22442 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22443 ;;      Params:         0       0       0       0       0       0       0       0       0       0
 22444 ;;      Locals:         1       0       0       0       0       0       0       0       0       0
 22445 ;;      Temps:          1       0       0       0       0       0       0       0       0       0
 22446 ;;      Totals:         2       0       0       0       0       0       0       0       0       0
 22447 ;;Total ram usage:        2 bytes
 22448 ;; Hardware stack levels used:    1
 22449 ;; Hardware stack levels required when called:    2
 22450 ;; This function calls:
 22451 ;;		Nothing
 22452 ;; This function is called by:
 22453 ;;		_dispLCD_lincol
 22454 ;;		_dispLCD_init
 22455 ;;		_dispLCD_clr
 22456 ;; This function uses a non-reentrant model
 22457 ;;
 22458                           psect	text55,class=CODE,space=0,reloc=2,group=0
 22459                           	line	101
 22460                           global __ptext55
 22461                           __ptext55:
 22462  002E6A                     psect	text55
 22463                           	file	"dispLCD4vias.c"
 22464                           	line	101
 22465                           	global	__size_of_dispLCD_instReg
 22466                           	__size_of_dispLCD_instReg	equ	__end_of_dispLCD_instReg-_dispLCD_instReg
 22467  0000                     	
 22468                           _dispLCD_instReg:
 22469  002E6A                     ;incstack = 0
 22470                           	opt	stack 25
 22471                           ;dispLCD_instReg@i stored from wreg
 22472                           	movwf	((c:dispLCD_instReg@i)),c
 22473  002E6A  6E28               	line	103
 22474                           	
 22475                           l4924:
 22476  002E6C                     ;dispLCD4vias.c: 101: void dispLCD_instReg( unsigned char i );dispLCD4vias.c: 102: {;dis
                                 pLCD4vias.c: 103:     LCDbits.RS = 0;
 22477                           	bcf	((c:3978)),c,6	;volatile
 22478  002E6C  9C8A               	line	104
 22479                           	
 22480                           l4926:
 22481  002E6E                     ;dispLCD4vias.c: 104:     LCDbits.BUS = (i>>4);
 22482                           	movff	(c:dispLCD_instReg@i),??_dispLCD_instReg+0+0
 22483  002E6E  C028  F027         	swapf	(??_dispLCD_instReg+0+0),c
 22484  002E72  3A27               	movlw	(0ffh shr 4) & 0ffh
 22485  002E74  0E0F               	andwf	(??_dispLCD_instReg+0+0),c
 22486  002E76  1627               	rlncf	(??_dispLCD_instReg+0+0),c
 22487  002E78  4627               	rlncf	(??_dispLCD_instReg+0+0),c
 22488  002E7A  4627               	movf	((c:3978)),c,w	;volatile
 22489  002E7C  508A               	xorwf	(??_dispLCD_instReg+0+0),c,w
 22490  002E7E  1827               	andlw	not (((1<<4)-1)<<2)
 22491  002E80  0BC3               	xorwf	(??_dispLCD_instReg+0+0),c,w
 22492  002E82  1827               	movwf	((c:3978)),c	;volatile
 22493  002E84  6E8A               	line	106
 22494                           	
 22495                           l4928:
 22496  002E86                     ;dispLCD4vias.c: 106:     LCDbits.EN = 0;
 22497                           	bcf	((c:3978)),c,7	;volatile
 22498  002E86  9E8A               	line	107
 22499                           ;dispLCD4vias.c: 107:     if( i == 0x01 || i == 0x02 )
 22500                           		decf	((c:dispLCD_instReg@i)),c,w
 22501  002E88  0428               	btfsc	status,2
 22502  002E8A  B4D8               	goto	u3161
 22503  002E8C  EF4A  F017         	goto	u3160
 22504  002E90  EF4C  F017         
 22505                           u3161:
 22506  002E94                     	goto	l4932
 22507  002E94  EF57  F017         u3160:
 22508  002E98                     	
 22509                           l4930:
 22510  002E98                     		movlw	2
 22511  002E98  0E02               	xorwf	((c:dispLCD_instReg@i)),c,w
 22512  002E9A  1828               	btfss	status,2
 22513  002E9C  A4D8               	goto	u3171
 22514  002E9E  EF53  F017         	goto	u3170
 22515  002EA2  EF55  F017         
 22516                           u3171:
 22517  002EA6                     	goto	l4934
 22518  002EA6  EF60  F017         u3170:
 22519  002EAA                     	goto	l4932
 22520  002EAA  EF57  F017         	
 22521                           l496:
 22522  002EAE                     	line	108
 22523                           	
 22524                           l4932:
 22525  002EAE                     ;dispLCD4vias.c: 108:         _delay((unsigned long)((2)*(20000000/4000.0)));
 22526                           	opt asmopt_push
 22527                           opt asmopt_off
 22528                           movlw	13
 22529  002EAE  0E0D               movwf	(??_dispLCD_instReg+0+0)&0ffh,c,f
 22530  002EB0  6E27               	movlw	252
 22531  002EB2  0EFC               u6127:
 22532  002EB4                     decfsz	wreg,f
 22533  002EB4  2EE8               	bra	u6127
 22534  002EB6  D7FE               	decfsz	(??_dispLCD_instReg+0+0)&0ffh,c,f
 22535  002EB8  2E27               	bra	u6127
 22536  002EBA  D7FC               opt asmopt_pop
 22537                           
 22538                           	goto	l4936
 22539  002EBC  EF66  F017         	line	109
 22540                           ;dispLCD4vias.c: 109:     else
 22541                           	
 22542                           l494:
 22543  002EC0                     	line	110
 22544                           	
 22545                           l4934:
 22546  002EC0                     ;dispLCD4vias.c: 110:         _delay((unsigned long)((40)*(20000000/4000000.0)));
 22547                           	opt asmopt_push
 22548                           opt asmopt_off
 22549                           	movlw	66
 22550  002EC0  0E42               u6137:
 22551  002EC2                     decfsz	wreg,f
 22552  002EC2  2EE8               	bra	u6137
 22553  002EC4  D7FE               	nop2
 22554  002EC6  D000               opt asmopt_pop
 22555                           
 22556                           	goto	l4936
 22557  002EC8  EF66  F017         	
 22558                           l497:
 22559  002ECC                     	line	111
 22560                           	
 22561                           l4936:
 22562  002ECC                     ;dispLCD4vias.c: 111:     LCDbits.EN = 1;
 22563                           	bsf	((c:3978)),c,7	;volatile
 22564  002ECC  8E8A               	line	114
 22565                           	
 22566                           l4938:
 22567  002ECE                     ;dispLCD4vias.c: 114:     if( (i & 0xF0) == (0x20 | 0x00) )
 22568                           	movf	((c:dispLCD_instReg@i)),c,w
 22569  002ECE  5028               	andlw	low(0F0h)
 22570  002ED0  0BF0               	xorlw	020h
 22571  002ED2  0A20               	btfss	status,2
 22572  002ED4  A4D8               	goto	u3181
 22573  002ED6  EF6F  F017         	goto	u3180
 22574  002EDA  EF71  F017         u3181:
 22575  002EDE                     	goto	l4950
 22576  002EDE  EF86  F017         u3180:
 22577  002EE2                     	line	116
 22578                           	
 22579                           l4940:
 22580  002EE2                     ;dispLCD4vias.c: 115:     {;dispLCD4vias.c: 116:         LCDbits.RS = 0;
 22581                           	bcf	((c:3978)),c,6	;volatile
 22582  002EE2  9C8A               	line	117
 22583                           	
 22584                           l4942:
 22585  002EE4                     ;dispLCD4vias.c: 117:         LCDbits.BUS = i>>4;
 22586                           	movff	(c:dispLCD_instReg@i),??_dispLCD_instReg+0+0
 22587  002EE4  C028  F027         	swapf	(??_dispLCD_instReg+0+0),c
 22588  002EE8  3A27               	movlw	(0ffh shr 4) & 0ffh
 22589  002EEA  0E0F               	andwf	(??_dispLCD_instReg+0+0),c
 22590  002EEC  1627               	rlncf	(??_dispLCD_instReg+0+0),c
 22591  002EEE  4627               	rlncf	(??_dispLCD_instReg+0+0),c
 22592  002EF0  4627               	movf	((c:3978)),c,w	;volatile
 22593  002EF2  508A               	xorwf	(??_dispLCD_instReg+0+0),c,w
 22594  002EF4  1827               	andlw	not (((1<<4)-1)<<2)
 22595  002EF6  0BC3               	xorwf	(??_dispLCD_instReg+0+0),c,w
 22596  002EF8  1827               	movwf	((c:3978)),c	;volatile
 22597  002EFA  6E8A               	line	118
 22598                           	
 22599                           l4944:
 22600  002EFC                     ;dispLCD4vias.c: 118:         LCDbits.EN = 0;
 22601                           	bcf	((c:3978)),c,7	;volatile
 22602  002EFC  9E8A               	line	119
 22603                           	
 22604                           l4946:
 22605  002EFE                     ;dispLCD4vias.c: 119:         _delay((unsigned long)((40)*(20000000/4000000.0)));
 22606                           	opt asmopt_push
 22607                           opt asmopt_off
 22608                           	movlw	66
 22609  002EFE  0E42               u6147:
 22610  002F00                     decfsz	wreg,f
 22611  002F00  2EE8               	bra	u6147
 22612  002F02  D7FE               	nop2
 22613  002F04  D000               opt asmopt_pop
 22614                           
 22615                           	line	120
 22616                           	
 22617                           l4948:
 22618  002F06                     ;dispLCD4vias.c: 120:         LCDbits.EN = 1;
 22619                           	bsf	((c:3978)),c,7	;volatile
 22620  002F06  8E8A               	goto	l4950
 22621  002F08  EF86  F017         	line	121
 22622                           ;dispLCD4vias.c: 121:     }
 22623                           	
 22624                           l498:
 22625  002F0C                     	line	123
 22626                           	
 22627                           l4950:
 22628  002F0C                     ;dispLCD4vias.c: 123:     LCDbits.RS = 0;
 22629                           	bcf	((c:3978)),c,6	;volatile
 22630  002F0C  9C8A               	line	124
 22631                           	
 22632                           l4952:
 22633  002F0E                     ;dispLCD4vias.c: 124:     LCDbits.BUS = i & 0x0F;
 22634                           	movff	(c:dispLCD_instReg@i),??_dispLCD_instReg+0+0
 22635  002F0E  C028  F027         	movlw	0Fh
 22636  002F12  0E0F               	andwf	(??_dispLCD_instReg+0+0),c
 22637  002F14  1627               	rlncf	(??_dispLCD_instReg+0+0),c
 22638  002F16  4627               	rlncf	(??_dispLCD_instReg+0+0),c
 22639  002F18  4627               	movf	((c:3978)),c,w	;volatile
 22640  002F1A  508A               	xorwf	(??_dispLCD_instReg+0+0),c,w
 22641  002F1C  1827               	andlw	not (((1<<4)-1)<<2)
 22642  002F1E  0BC3               	xorwf	(??_dispLCD_instReg+0+0),c,w
 22643  002F20  1827               	movwf	((c:3978)),c	;volatile
 22644  002F22  6E8A               	line	125
 22645                           	
 22646                           l4954:
 22647  002F24                     ;dispLCD4vias.c: 125:     LCDbits.EN = 0;
 22648                           	bcf	((c:3978)),c,7	;volatile
 22649  002F24  9E8A               	line	126
 22650                           	
 22651                           l4956:
 22652  002F26                     ;dispLCD4vias.c: 126:     if( i == 0x01 || i == 0x02 )
 22653                           		decf	((c:dispLCD_instReg@i)),c,w
 22654  002F26  0428               	btfsc	status,2
 22655  002F28  B4D8               	goto	u3191
 22656  002F2A  EF99  F017         	goto	u3190
 22657  002F2E  EF9B  F017         
 22658                           u3191:
 22659  002F32                     	goto	l4960
 22660  002F32  EFA6  F017         u3190:
 22661  002F36                     	
 22662                           l4958:
 22663  002F36                     		movlw	2
 22664  002F36  0E02               	xorwf	((c:dispLCD_instReg@i)),c,w
 22665  002F38  1828               	btfss	status,2
 22666  002F3A  A4D8               	goto	u3201
 22667  002F3C  EFA2  F017         	goto	u3200
 22668  002F40  EFA4  F017         
 22669                           u3201:
 22670  002F44                     	goto	l4962
 22671  002F44  EFAF  F017         u3200:
 22672  002F48                     	goto	l4960
 22673  002F48  EFA6  F017         	
 22674                           l501:
 22675  002F4C                     	line	127
 22676                           	
 22677                           l4960:
 22678  002F4C                     ;dispLCD4vias.c: 127:         _delay((unsigned long)((2)*(20000000/4000.0)));
 22679                           	opt asmopt_push
 22680                           opt asmopt_off
 22681                           movlw	13
 22682  002F4C  0E0D               movwf	(??_dispLCD_instReg+0+0)&0ffh,c,f
 22683  002F4E  6E27               	movlw	252
 22684  002F50  0EFC               u6157:
 22685  002F52                     decfsz	wreg,f
 22686  002F52  2EE8               	bra	u6157
 22687  002F54  D7FE               	decfsz	(??_dispLCD_instReg+0+0)&0ffh,c,f
 22688  002F56  2E27               	bra	u6157
 22689  002F58  D7FC               opt asmopt_pop
 22690                           
 22691                           	goto	l4964
 22692  002F5A  EFB5  F017         	line	128
 22693                           ;dispLCD4vias.c: 128:     else
 22694                           	
 22695                           l499:
 22696  002F5E                     	line	129
 22697                           	
 22698                           l4962:
 22699  002F5E                     ;dispLCD4vias.c: 129:         _delay((unsigned long)((40)*(20000000/4000000.0)));
 22700                           	opt asmopt_push
 22701                           opt asmopt_off
 22702                           	movlw	66
 22703  002F5E  0E42               u6167:
 22704  002F60                     decfsz	wreg,f
 22705  002F60  2EE8               	bra	u6167
 22706  002F62  D7FE               	nop2
 22707  002F64  D000               opt asmopt_pop
 22708                           
 22709                           	goto	l4964
 22710  002F66  EFB5  F017         	
 22711                           l502:
 22712  002F6A                     	line	130
 22713                           	
 22714                           l4964:
 22715  002F6A                     ;dispLCD4vias.c: 130:     LCDbits.EN = 1;
 22716                           	bsf	((c:3978)),c,7	;volatile
 22717  002F6A  8E8A               	line	131
 22718                           	
 22719                           l503:
 22720  002F6C                     	return	;funcret
 22721  002F6C  0012               	opt stack 0
 22722                           GLOBAL	__end_of_dispLCD_instReg
 22723                           	__end_of_dispLCD_instReg:
 22724  002F6E                     	signat	_dispLCD_instReg,4217
 22725                           	global	_dispLCD_dataReg
 22726                           
 22727 ;; *************** function _dispLCD_dataReg *****************
 22728 ;; Defined at:
 22729 ;;		line 134 in file "dispLCD4vias.c"
 22730 ;; Parameters:    Size  Location     Type
 22731 ;;  d               1    wreg     unsigned char 
 22732 ;; Auto vars:     Size  Location     Type
 22733 ;;  d               1    1[COMRAM] unsigned char 
 22734 ;; Return value:  Size  Location     Type
 22735 ;;                  1    wreg      void 
 22736 ;; Registers used:
 22737 ;;		wreg, status,2, status,0
 22738 ;; Tracked objects:
 22739 ;;		On entry : 0/0
 22740 ;;		On exit  : 0/0
 22741 ;;		Unchanged: 0/0
 22742 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22743 ;;      Params:         0       0       0       0       0       0       0       0       0       0
 22744 ;;      Locals:         1       0       0       0       0       0       0       0       0       0
 22745 ;;      Temps:          1       0       0       0       0       0       0       0       0       0
 22746 ;;      Totals:         2       0       0       0       0       0       0       0       0       0
 22747 ;;Total ram usage:        2 bytes
 22748 ;; Hardware stack levels used:    1
 22749 ;; Hardware stack levels required when called:    2
 22750 ;; This function calls:
 22751 ;;		Nothing
 22752 ;; This function is called by:
 22753 ;;		_main
 22754 ;;		_dispLCD
 22755 ;;		_dispLCD_num
 22756 ;;		_dispLCD_str
 22757 ;;		_fifo_print
 22758 ;;		_printExec
 22759 ;; This function uses a non-reentrant model
 22760 ;;
 22761                           psect	text56,class=CODE,space=0,reloc=2,group=0
 22762                           	line	134
 22763                           global __ptext56
 22764                           __ptext56:
 22765  003D36                     psect	text56
 22766                           	file	"dispLCD4vias.c"
 22767                           	line	134
 22768                           	global	__size_of_dispLCD_dataReg
 22769                           	__size_of_dispLCD_dataReg	equ	__end_of_dispLCD_dataReg-_dispLCD_dataReg
 22770  0000                     	
 22771                           _dispLCD_dataReg:
 22772  003D36                     ;incstack = 0
 22773                           	opt	stack 26
 22774                           ;dispLCD_dataReg@d stored from wreg
 22775                           	movwf	((c:dispLCD_dataReg@d)),c
 22776  003D36  6E28               	line	136
 22777                           	
 22778                           l5034:
 22779  003D38                     ;dispLCD4vias.c: 134: void dispLCD_dataReg( unsigned char d );dispLCD4vias.c: 135: {;dis
                                 pLCD4vias.c: 136:     LCDbits.RS = 1;
 22780                           	bsf	((c:3978)),c,6	;volatile
 22781  003D38  8C8A               	line	137
 22782                           	
 22783                           l5036:
 22784  003D3A                     ;dispLCD4vias.c: 137:     LCDbits.BUS = d >> 4;
 22785                           	movff	(c:dispLCD_dataReg@d),??_dispLCD_dataReg+0+0
 22786  003D3A  C028  F027         	swapf	(??_dispLCD_dataReg+0+0),c
 22787  003D3E  3A27               	movlw	(0ffh shr 4) & 0ffh
 22788  003D40  0E0F               	andwf	(??_dispLCD_dataReg+0+0),c
 22789  003D42  1627               	rlncf	(??_dispLCD_dataReg+0+0),c
 22790  003D44  4627               	rlncf	(??_dispLCD_dataReg+0+0),c
 22791  003D46  4627               	movf	((c:3978)),c,w	;volatile
 22792  003D48  508A               	xorwf	(??_dispLCD_dataReg+0+0),c,w
 22793  003D4A  1827               	andlw	not (((1<<4)-1)<<2)
 22794  003D4C  0BC3               	xorwf	(??_dispLCD_dataReg+0+0),c,w
 22795  003D4E  1827               	movwf	((c:3978)),c	;volatile
 22796  003D50  6E8A               	line	138
 22797                           	
 22798                           l5038:
 22799  003D52                     ;dispLCD4vias.c: 138:     LCDbits.EN = 0;
 22800                           	bcf	((c:3978)),c,7	;volatile
 22801  003D52  9E8A               	line	139
 22802                           	
 22803                           l5040:
 22804  003D54                     ;dispLCD4vias.c: 139:     _delay((unsigned long)((40)*(20000000/4000000.0)));
 22805                           	opt asmopt_push
 22806                           opt asmopt_off
 22807                           	movlw	66
 22808  003D54  0E42               u6177:
 22809  003D56                     decfsz	wreg,f
 22810  003D56  2EE8               	bra	u6177
 22811  003D58  D7FE               	nop2
 22812  003D5A  D000               opt asmopt_pop
 22813                           
 22814                           	line	140
 22815                           	
 22816                           l5042:
 22817  003D5C                     ;dispLCD4vias.c: 140:     LCDbits.EN = 1;
 22818                           	bsf	((c:3978)),c,7	;volatile
 22819  003D5C  8E8A               	line	142
 22820                           	
 22821                           l5044:
 22822  003D5E                     ;dispLCD4vias.c: 142:     LCDbits.RS = 1;
 22823                           	bsf	((c:3978)),c,6	;volatile
 22824  003D5E  8C8A               	line	143
 22825                           	
 22826                           l5046:
 22827  003D60                     ;dispLCD4vias.c: 143:     LCDbits.BUS = d & 0x0F;
 22828                           	movff	(c:dispLCD_dataReg@d),??_dispLCD_dataReg+0+0
 22829  003D60  C028  F027         	movlw	0Fh
 22830  003D64  0E0F               	andwf	(??_dispLCD_dataReg+0+0),c
 22831  003D66  1627               	rlncf	(??_dispLCD_dataReg+0+0),c
 22832  003D68  4627               	rlncf	(??_dispLCD_dataReg+0+0),c
 22833  003D6A  4627               	movf	((c:3978)),c,w	;volatile
 22834  003D6C  508A               	xorwf	(??_dispLCD_dataReg+0+0),c,w
 22835  003D6E  1827               	andlw	not (((1<<4)-1)<<2)
 22836  003D70  0BC3               	xorwf	(??_dispLCD_dataReg+0+0),c,w
 22837  003D72  1827               	movwf	((c:3978)),c	;volatile
 22838  003D74  6E8A               	line	144
 22839                           	
 22840                           l5048:
 22841  003D76                     ;dispLCD4vias.c: 144:     LCDbits.EN = 0;
 22842                           	bcf	((c:3978)),c,7	;volatile
 22843  003D76  9E8A               	line	145
 22844                           ;dispLCD4vias.c: 145:     _delay((unsigned long)((40)*(20000000/4000000.0)));
 22845                           	opt asmopt_push
 22846                           opt asmopt_off
 22847                           	movlw	66
 22848  003D78  0E42               u6187:
 22849  003D7A                     decfsz	wreg,f
 22850  003D7A  2EE8               	bra	u6187
 22851  003D7C  D7FE               	nop2
 22852  003D7E  D000               opt asmopt_pop
 22853                           
 22854                           	line	146
 22855                           	
 22856                           l5050:
 22857  003D80                     ;dispLCD4vias.c: 146:     LCDbits.EN = 1;
 22858                           	bsf	((c:3978)),c,7	;volatile
 22859  003D80  8E8A               	line	147
 22860                           	
 22861                           l506:
 22862  003D82                     	return	;funcret
 22863  003D82  0012               	opt stack 0
 22864                           GLOBAL	__end_of_dispLCD_dataReg
 22865                           	__end_of_dispLCD_dataReg:
 22866  003D84                     	signat	_dispLCD_dataReg,4217
 22867                           	global	_dignum_conc
 22868                           
 22869 ;; *************** function _dignum_conc *****************
 22870 ;; Defined at:
 22871 ;;		line 460 in file "fifo.c"
 22872 ;; Parameters:    Size  Location     Type
 22873 ;;  dig             1    wreg     unsigned char 
 22874 ;;  ptrNum          2    6[COMRAM] PTR unsigned int 
 22875 ;;		 -> main@ciclos(2), main@num(2), 
 22876 ;; Auto vars:     Size  Location     Type
 22877 ;;  dig             1   12[COMRAM] unsigned char 
 22878 ;; Return value:  Size  Location     Type
 22879 ;;                  1    wreg      void 
 22880 ;; Registers used:
 22881 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22882 ;; Tracked objects:
 22883 ;;		On entry : 0/0
 22884 ;;		On exit  : 0/0
 22885 ;;		Unchanged: 0/0
 22886 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22887 ;;      Params:         2       0       0       0       0       0       0       0       0       0
 22888 ;;      Locals:         1       0       0       0       0       0       0       0       0       0
 22889 ;;      Temps:          4       0       0       0       0       0       0       0       0       0
 22890 ;;      Totals:         7       0       0       0       0       0       0       0       0       0
 22891 ;;Total ram usage:        7 bytes
 22892 ;; Hardware stack levels used:    1
 22893 ;; Hardware stack levels required when called:    3
 22894 ;; This function calls:
 22895 ;;		___wmul
 22896 ;; This function is called by:
 22897 ;;		_main
 22898 ;; This function uses a non-reentrant model
 22899 ;;
 22900                           psect	text57,class=CODE,space=0,reloc=2,group=0
 22901                           	file	"fifo.c"
 22902                           	line	460
 22903                           global __ptext57
 22904                           __ptext57:
 22905  003D84                     psect	text57
 22906                           	file	"fifo.c"
 22907                           	line	460
 22908                           	global	__size_of_dignum_conc
 22909                           	__size_of_dignum_conc	equ	__end_of_dignum_conc-_dignum_conc
 22910  0000                     	
 22911                           _dignum_conc:
 22912  003D84                     ;incstack = 0
 22913                           	opt	stack 27
 22914                           ;dignum_conc@dig stored from wreg
 22915                           	movwf	((c:dignum_conc@dig)),c
 22916  003D84  6E33               	line	462
 22917                           	
 22918                           l5898:
 22919  003D86                     ;fifo.c: 460: void dignum_conc(char dig, unsigned int * ptrNum );fifo.c: 461: {;fifo.c: 
                                 462:     *ptrNum = (*ptrNum * 10) + (dig - '0');
 22920                           	movlw	low(0FFD0h)
 22921  003D86  0ED0               	movwf	(??_dignum_conc+0+0)&0ffh,c
 22922  003D88  6E2F               	movlw	high(0FFD0h)
 22923  003D8A  0EFF               	movwf	1+(??_dignum_conc+0+0)&0ffh,c
 22924  003D8C  6E30               	movff	(c:dignum_conc@ptrNum),fsr2l
 22925  003D8E  C02D  FFD9         	movff	(c:dignum_conc@ptrNum+1),fsr2h
 22926  003D92  C02E  FFDA         	movff	postinc2,(c:___wmul@multiplier)
 22927  003D96  CFDE F027          	movff	postdec2,(c:___wmul@multiplier+1)
 22928  003D9A  CFDD F028          	movlw	high(0Ah)
 22929  003D9E  0E00               	movwf	((c:___wmul@multiplicand+1)),c
 22930  003DA0  6E2A               	movlw	low(0Ah)
 22931  003DA2  0E0A               	movwf	((c:___wmul@multiplicand)),c
 22932  003DA4  6E29               	call	___wmul	;wreg free
 22933  003DA6  EC89  F020         	movf	((c:dignum_conc@dig)),c,w
 22934  003DAA  5033               	movwf	(??_dignum_conc+2+0)&0ffh,c
 22935  003DAC  6E31               	clrf	(??_dignum_conc+2+0+1)&0ffh,c
 22936  003DAE  6A32               
 22937                           	movf	(0+?___wmul),c,w
 22938  003DB0  5027               	addwf	(??_dignum_conc+2+0),c
 22939  003DB2  2631               	movf	(1+?___wmul),c,w
 22940  003DB4  5028               	addwfc	(??_dignum_conc+2+1),c
 22941  003DB6  2232               	movf	(??_dignum_conc+0+0),c,w
 22942  003DB8  502F               	addwf	(??_dignum_conc+2+0),c
 22943  003DBA  2631               	movf	(??_dignum_conc+0+1),c,w
 22944  003DBC  5030               	addwfc	(??_dignum_conc+2+1),c
 22945  003DBE  2232               	movff	(c:dignum_conc@ptrNum),fsr2l
 22946  003DC0  C02D  FFD9         	movff	(c:dignum_conc@ptrNum+1),fsr2h
 22947  003DC4  C02E  FFDA         	movff	??_dignum_conc+2+0,postinc2
 22948  003DC8  C031  FFDE         	movff	??_dignum_conc+2+1,postdec2
 22949  003DCC  C032  FFDD         
 22950                           	line	463
 22951                           	
 22952                           l844:
 22953  003DD0                     	return	;funcret
 22954  003DD0  0012               	opt stack 0
 22955                           GLOBAL	__end_of_dignum_conc
 22956                           	__end_of_dignum_conc:
 22957  003DD2                     	signat	_dignum_conc,8313
 22958                           	global	___wmul
 22959                           
 22960 ;; *************** function ___wmul *****************
 22961 ;; Defined at:
 22962 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul16.c"
 22963 ;; Parameters:    Size  Location     Type
 22964 ;;  multiplier      2    0[COMRAM] unsigned int 
 22965 ;;  multiplicand    2    2[COMRAM] unsigned int 
 22966 ;; Auto vars:     Size  Location     Type
 22967 ;;  product         2    4[COMRAM] unsigned int 
 22968 ;; Return value:  Size  Location     Type
 22969 ;;                  2    0[COMRAM] unsigned int 
 22970 ;; Registers used:
 22971 ;;		wreg, status,2, status,0, prodl, prodh
 22972 ;; Tracked objects:
 22973 ;;		On entry : 0/0
 22974 ;;		On exit  : 0/0
 22975 ;;		Unchanged: 0/0
 22976 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22977 ;;      Params:         4       0       0       0       0       0       0       0       0       0
 22978 ;;      Locals:         2       0       0       0       0       0       0       0       0       0
 22979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0
 22980 ;;      Totals:         6       0       0       0       0       0       0       0       0       0
 22981 ;;Total ram usage:        6 bytes
 22982 ;; Hardware stack levels used:    1
 22983 ;; Hardware stack levels required when called:    2
 22984 ;; This function calls:
 22985 ;;		Nothing
 22986 ;; This function is called by:
 22987 ;;		_main
 22988 ;;		_dignum_conc
 22989 ;; This function uses a non-reentrant model
 22990 ;;
 22991                           psect	text58,class=CODE,space=0,reloc=2,group=1
 22992                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul16.c"
 22993                           	line	15
 22994                           global __ptext58
 22995                           __ptext58:
 22996  004112                     psect	text58
 22997                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul16.c"
 22998                           	line	15
 22999                           	global	__size_of___wmul
 23000                           	__size_of___wmul	equ	__end_of___wmul-___wmul
 23001  0000                     	
 23002                           ___wmul:
 23003  004112                     ;incstack = 0
 23004                           	opt	stack 27
 23005                           	line	37
 23006                           	
 23007                           l5458:
 23008  004112                     	movf	((c:___wmul@multiplier)),c,w
 23009  004112  5027               	mulwf	((c:___wmul@multiplicand)),c
 23010  004114  0229               	movff	prodl,(c:___wmul@product)
 23011  004116  CFF3 F02B          	movff	prodh,(c:___wmul@product+1)
 23012  00411A  CFF4 F02C          	line	38
 23013                           	movf	((c:___wmul@multiplier)),c,w
 23014  00411E  5027               	mulwf	(0+((c:___wmul@multiplicand)+01h)),c
 23015  004120  022A               	movf	(prodl),c,w
 23016  004122  50F3               	addwf	((c:___wmul@product+1)),c
 23017  004124  262C               
 23018                           	line	39
 23019                           	movf	(0+((c:___wmul@multiplier)+01h)),c,w
 23020  004126  5028               	mulwf	((c:___wmul@multiplicand)),c
 23021  004128  0229               	movf	(prodl),c,w
 23022  00412A  50F3               	addwf	((c:___wmul@product+1)),c
 23023  00412C  262C               
 23024                           	line	52
 23025                           	
 23026                           l5460:
 23027  00412E                     	movff	(c:___wmul@product),(c:?___wmul)
 23028  00412E  C02B  F027         	movff	(c:___wmul@product+1),(c:?___wmul+1)
 23029  004132  C02C  F028         	goto	l1227
 23030  004136  EF9D  F020         	
 23031                           l5462:
 23032  00413A                     	line	53
 23033                           	
 23034                           l1227:
 23035  00413A                     	return	;funcret
 23036  00413A  0012               	opt stack 0
 23037                           GLOBAL	__end_of___wmul
 23038                           	__end_of___wmul:
 23039  00413C                     	signat	___wmul,8314
 23040                           	global	_dignum_apagar
 23041                           
 23042 ;; *************** function _dignum_apagar *****************
 23043 ;; Defined at:
 23044 ;;		line 465 in file "fifo.c"
 23045 ;; Parameters:    Size  Location     Type
 23046 ;;  ptrNum          2    7[COMRAM] PTR unsigned int 
 23047 ;;		 -> main@ciclos(2), main@num(2), 
 23048 ;; Auto vars:     Size  Location     Type
 23049 ;;		None
 23050 ;; Return value:  Size  Location     Type
 23051 ;;                  1    wreg      void 
 23052 ;; Registers used:
 23053 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23054 ;; Tracked objects:
 23055 ;;		On entry : 0/0
 23056 ;;		On exit  : 0/0
 23057 ;;		Unchanged: 0/0
 23058 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23059 ;;      Params:         2       0       0       0       0       0       0       0       0       0
 23060 ;;      Locals:         0       0       0       0       0       0       0       0       0       0
 23061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0
 23062 ;;      Totals:         2       0       0       0       0       0       0       0       0       0
 23063 ;;Total ram usage:        2 bytes
 23064 ;; Hardware stack levels used:    1
 23065 ;; Hardware stack levels required when called:    3
 23066 ;; This function calls:
 23067 ;;		___lwdiv
 23068 ;; This function is called by:
 23069 ;;		_main
 23070 ;; This function uses a non-reentrant model
 23071 ;;
 23072                           psect	text59,class=CODE,space=0,reloc=2,group=0
 23073                           	file	"fifo.c"
 23074                           	line	465
 23075                           global __ptext59
 23076                           __ptext59:
 23077  0040E4                     psect	text59
 23078                           	file	"fifo.c"
 23079                           	line	465
 23080                           	global	__size_of_dignum_apagar
 23081                           	__size_of_dignum_apagar	equ	__end_of_dignum_apagar-_dignum_apagar
 23082  0000                     	
 23083                           _dignum_apagar:
 23084  0040E4                     ;incstack = 0
 23085                           	opt	stack 27
 23086                           	line	467
 23087                           	
 23088                           l5900:
 23089  0040E4                     ;fifo.c: 465: void dignum_apagar(unsigned int * ptrNum );fifo.c: 466: {;fifo.c: 467:    
                                  *ptrNum /= 10;
 23090                           	movff	(c:dignum_apagar@ptrNum),fsr2l
 23091  0040E4  C02E  FFD9         	movff	(c:dignum_apagar@ptrNum+1),fsr2h
 23092  0040E8  C02F  FFDA         	movff	postinc2,(c:___lwdiv@dividend)
 23093  0040EC  CFDE F027          	movff	postdec2,(c:___lwdiv@dividend+1)
 23094  0040F0  CFDD F028          	movlw	high(0Ah)
 23095  0040F4  0E00               	movwf	((c:___lwdiv@divisor+1)),c
 23096  0040F6  6E2A               	movlw	low(0Ah)
 23097  0040F8  0E0A               	movwf	((c:___lwdiv@divisor)),c
 23098  0040FA  6E29               	call	___lwdiv	;wreg free
 23099  0040FC  EC2A  F01B         	movff	(c:dignum_apagar@ptrNum),fsr2l
 23100  004100  C02E  FFD9         	movff	(c:dignum_apagar@ptrNum+1),fsr2h
 23101  004104  C02F  FFDA         	movff	0+?___lwdiv,postinc2
 23102  004108  C027  FFDE         	movff	1+?___lwdiv,postdec2
 23103  00410C  C028  FFDD         
 23104                           	line	468
 23105                           	
 23106                           l847:
 23107  004110                     	return	;funcret
 23108  004110  0012               	opt stack 0
 23109                           GLOBAL	__end_of_dignum_apagar
 23110                           	__end_of_dignum_apagar:
 23111  004112                     	signat	_dignum_apagar,4217
 23112                           	global	___lwdiv
 23113                           
 23114 ;; *************** function ___lwdiv *****************
 23115 ;; Defined at:
 23116 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\lwdiv.c"
 23117 ;; Parameters:    Size  Location     Type
 23118 ;;  dividend        2    0[COMRAM] unsigned int 
 23119 ;;  divisor         2    2[COMRAM] unsigned int 
 23120 ;; Auto vars:     Size  Location     Type
 23121 ;;  quotient        2    4[COMRAM] unsigned int 
 23122 ;;  counter         1    6[COMRAM] unsigned char 
 23123 ;; Return value:  Size  Location     Type
 23124 ;;                  2    0[COMRAM] unsigned int 
 23125 ;; Registers used:
 23126 ;;		wreg, status,2, status,0
 23127 ;; Tracked objects:
 23128 ;;		On entry : 0/0
 23129 ;;		On exit  : 0/0
 23130 ;;		Unchanged: 0/0
 23131 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23132 ;;      Params:         4       0       0       0       0       0       0       0       0       0
 23133 ;;      Locals:         3       0       0       0       0       0       0       0       0       0
 23134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0
 23135 ;;      Totals:         7       0       0       0       0       0       0       0       0       0
 23136 ;;Total ram usage:        7 bytes
 23137 ;; Hardware stack levels used:    1
 23138 ;; Hardware stack levels required when called:    2
 23139 ;; This function calls:
 23140 ;;		Nothing
 23141 ;; This function is called by:
 23142 ;;		_dignum_apagar
 23143 ;; This function uses a non-reentrant model
 23144 ;;
 23145                           psect	text60,class=CODE,space=0,reloc=2,group=1
 23146                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\lwdiv.c"
 23147                           	line	7
 23148                           global __ptext60
 23149                           __ptext60:
 23150  003654                     psect	text60
 23151                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\lwdiv.c"
 23152                           	line	7
 23153                           	global	__size_of___lwdiv
 23154                           	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
 23155  0000                     	
 23156                           ___lwdiv:
 23157  003654                     ;incstack = 0
 23158                           	opt	stack 27
 23159                           	line	13
 23160                           	
 23161                           l5464:
 23162  003654                     	movlw	high(0)
 23163  003654  0E00               	movwf	((c:___lwdiv@quotient+1)),c
 23164  003656  6E2C               	movlw	low(0)
 23165  003658  0E00               	movwf	((c:___lwdiv@quotient)),c
 23166  00365A  6E2B               	line	14
 23167                           	
 23168                           l5466:
 23169  00365C                     	movf	((c:___lwdiv@divisor)),c,w
 23170  00365C  5029               iorwf	((c:___lwdiv@divisor+1)),c,w
 23171  00365E  102A               	btfsc	status,2
 23172  003660  B4D8               	goto	u3901
 23173  003662  EF35  F01B         	goto	u3900
 23174  003666  EF37  F01B         
 23175                           u3901:
 23176  00366A                     	goto	l1718
 23177  00366A  EF69  F01B         u3900:
 23178  00366E                     	line	15
 23179                           	
 23180                           l5468:
 23181  00366E                     	movlw	low(01h)
 23182  00366E  0E01               	movwf	((c:___lwdiv@counter)),c
 23183  003670  6E2D               	line	16
 23184                           	goto	l5472
 23185  003672  EF41  F01B         	
 23186                           l1720:
 23187  003676                     	line	17
 23188                           	
 23189                           l5470:
 23190  003676                     	bcf	status,0
 23191  003676  90D8               	rlcf	((c:___lwdiv@divisor)),c
 23192  003678  3629               	rlcf	((c:___lwdiv@divisor+1)),c
 23193  00367A  362A               	line	18
 23194                           	incf	((c:___lwdiv@counter)),c
 23195  00367C  2A2D               	goto	l5472
 23196  00367E  EF41  F01B         	line	19
 23197                           	
 23198                           l1719:
 23199  003682                     	line	16
 23200                           	
 23201                           l5472:
 23202  003682                     	
 23203                           	btfss	((c:___lwdiv@divisor+1)),c,(15)&7
 23204  003682  AE2A               	goto	u3911
 23205  003684  EF46  F01B         	goto	u3910
 23206  003688  EF48  F01B         u3911:
 23207  00368C                     	goto	l5470
 23208  00368C  EF3B  F01B         u3910:
 23209  003690                     	goto	l5474
 23210  003690  EF4C  F01B         	
 23211                           l1721:
 23212  003694                     	goto	l5474
 23213  003694  EF4C  F01B         	line	20
 23214                           	
 23215                           l1722:
 23216  003698                     	line	21
 23217                           	
 23218                           l5474:
 23219  003698                     	bcf	status,0
 23220  003698  90D8               	rlcf	((c:___lwdiv@quotient)),c
 23221  00369A  362B               	rlcf	((c:___lwdiv@quotient+1)),c
 23222  00369C  362C               	line	22
 23223                           	
 23224                           l5476:
 23225  00369E                     		movf	((c:___lwdiv@divisor)),c,w
 23226  00369E  5029               	subwf	((c:___lwdiv@dividend)),c,w
 23227  0036A0  5C27               	movf	((c:___lwdiv@divisor+1)),c,w
 23228  0036A2  502A               	subwfb	((c:___lwdiv@dividend+1)),c,w
 23229  0036A4  5828               	btfss	status,0
 23230  0036A6  A0D8               	goto	u3921
 23231  0036A8  EF58  F01B         	goto	u3920
 23232  0036AC  EF5A  F01B         
 23233                           u3921:
 23234  0036B0                     	goto	l5482
 23235  0036B0  EF61  F01B         u3920:
 23236  0036B4                     	line	23
 23237                           	
 23238                           l5478:
 23239  0036B4                     	movf	((c:___lwdiv@divisor)),c,w
 23240  0036B4  5029               	subwf	((c:___lwdiv@dividend)),c
 23241  0036B6  5E27               	movf	((c:___lwdiv@divisor+1)),c,w
 23242  0036B8  502A               	subwfb	((c:___lwdiv@dividend+1)),c
 23243  0036BA  5A28               
 23244                           	line	24
 23245                           	
 23246                           l5480:
 23247  0036BC                     	bsf	(0+(0/8)+(c:___lwdiv@quotient)),c,(0)&7
 23248  0036BC  802B               	goto	l5482
 23249  0036BE  EF61  F01B         	line	25
 23250                           	
 23251                           l1723:
 23252  0036C2                     	line	26
 23253                           	
 23254                           l5482:
 23255  0036C2                     	bcf	status,0
 23256  0036C2  90D8               	rrcf	((c:___lwdiv@divisor+1)),c
 23257  0036C4  322A               	rrcf	((c:___lwdiv@divisor)),c
 23258  0036C6  3229               	line	27
 23259                           	
 23260                           l5484:
 23261  0036C8                     	decfsz	((c:___lwdiv@counter)),c
 23262  0036C8  2E2D               	
 23263                           	goto	l5474
 23264  0036CA  EF4C  F01B         	goto	l1718
 23265  0036CE  EF69  F01B         	
 23266                           l1724:
 23267  0036D2                     	line	28
 23268                           	
 23269                           l1718:
 23270  0036D2                     	line	29
 23271                           	movff	(c:___lwdiv@quotient),(c:?___lwdiv)
 23272  0036D2  C02B  F027         	movff	(c:___lwdiv@quotient+1),(c:?___lwdiv+1)
 23273  0036D6  C02C  F028         	line	30
 23274                           	
 23275                           l1725:
 23276  0036DA                     	return	;funcret
 23277  0036DA  0012               	opt stack 0
 23278                           GLOBAL	__end_of___lwdiv
 23279                           	__end_of___lwdiv:
 23280  0036DC                     	signat	___lwdiv,8314
 23281                           	global	_deletar_receita
 23282                           
 23283 ;; *************** function _deletar_receita *****************
 23284 ;; Defined at:
 23285 ;;		line 77 in file "eeprom.c"
 23286 ;; Parameters:    Size  Location     Type
 23287 ;;  receita         1    wreg     unsigned char 
 23288 ;; Auto vars:     Size  Location     Type
 23289 ;;  receita         1    6[COMRAM] unsigned char 
 23290 ;;  i               1    7[COMRAM] unsigned char 
 23291 ;;  aux             2    4[COMRAM] int 
 23292 ;; Return value:  Size  Location     Type
 23293 ;;                  1    wreg      void 
 23294 ;; Registers used:
 23295 ;;		wreg, status,2, status,0, cstack
 23296 ;; Tracked objects:
 23297 ;;		On entry : 0/0
 23298 ;;		On exit  : 0/0
 23299 ;;		Unchanged: 0/0
 23300 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23301 ;;      Params:         0       0       0       0       0       0       0       0       0       0
 23302 ;;      Locals:         4       0       0       0       0       0       0       0       0       0
 23303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0
 23304 ;;      Totals:         4       0       0       0       0       0       0       0       0       0
 23305 ;;Total ram usage:        4 bytes
 23306 ;; Hardware stack levels used:    1
 23307 ;; Hardware stack levels required when called:    3
 23308 ;; This function calls:
 23309 ;;		_EEPROM_write
 23310 ;;		_end_receita
 23311 ;; This function is called by:
 23312 ;;		_main
 23313 ;; This function uses a non-reentrant model
 23314 ;;
 23315                           psect	text61,class=CODE,space=0,reloc=2,group=0
 23316                           	file	"eeprom.c"
 23317                           	line	77
 23318                           global __ptext61
 23319                           __ptext61:
 23320  003C92                     psect	text61
 23321                           	file	"eeprom.c"
 23322                           	line	77
 23323                           	global	__size_of_deletar_receita
 23324                           	__size_of_deletar_receita	equ	__end_of_deletar_receita-_deletar_receita
 23325  0000                     	
 23326                           _deletar_receita:
 23327  003C92                     ;incstack = 0
 23328                           	opt	stack 27
 23329                           ;deletar_receita@receita stored from wreg
 23330                           	movwf	((c:deletar_receita@receita)),c
 23331  003C92  6E2D               	line	80
 23332                           	
 23333                           l6078:
 23334  003C94                     ;eeprom.c: 77: void deletar_receita (char receita);eeprom.c: 78: {;eeprom.c: 79:    int 
                                 aux;;eeprom.c: 80:    aux = end_receita(receita);
 23335                           	movff	(c:deletar_receita@receita),(c:end_receita@x)
 23336  003C94  C02D  F027         	clrf	((c:end_receita@x+1)),c
 23337  003C98  6A28               	call	_end_receita	;wreg free
 23338  003C9A  ECB2  F020         	movff	0+?_end_receita,(c:deletar_receita@aux)
 23339  003C9E  C027  F02B         	movff	1+?_end_receita,(c:deletar_receita@aux+1)
 23340  003CA2  C028  F02C         	line	81
 23341                           	
 23342                           l6080:
 23343  003CA6                     ;eeprom.c: 81:    for( char i=0 ; i<16; i++)
 23344                           	movlw	low(0)
 23345  003CA6  0E00               	movwf	((c:deletar_receita@i)),c
 23346  003CA8  6E2E               	
 23347                           l6082:
 23348  003CAA                     		movlw	010h-1
 23349  003CAA  0E0F               	cpfsgt	((c:deletar_receita@i)),c
 23350  003CAC  642E               	goto	u4491
 23351  003CAE  EF5B  F01E         	goto	u4490
 23352  003CB2  EF5D  F01E         
 23353                           u4491:
 23354  003CB6                     	goto	l6086
 23355  003CB6  EF61  F01E         u4490:
 23356  003CBA                     	goto	l606
 23357  003CBA  EF72  F01E         	
 23358                           l6084:
 23359  003CBE                     	goto	l606
 23360  003CBE  EF72  F01E         	
 23361                           l604:
 23362  003CC2                     	line	82
 23363                           	
 23364                           l6086:
 23365  003CC2                     ;eeprom.c: 82:         EEPROM_write((aux+i),0);
 23366                           	movlw	low(0)
 23367  003CC2  0E00               	movwf	((c:EEPROM_write@data)),c
 23368  003CC4  6E27               	movf	((c:deletar_receita@i)),c,w
 23369  003CC6  502E               	addwf	((c:deletar_receita@aux)),c,w
 23370  003CC8  242B               	
 23371                           	call	_EEPROM_write
 23372  003CCA  ECF9  F01F         	
 23373                           l6088:
 23374  003CCE                     	incf	((c:deletar_receita@i)),c
 23375  003CCE  2A2E               	
 23376                           l6090:
 23377  003CD0                     		movlw	010h-1
 23378  003CD0  0E0F               	cpfsgt	((c:deletar_receita@i)),c
 23379  003CD2  642E               	goto	u4501
 23380  003CD4  EF6E  F01E         	goto	u4500
 23381  003CD8  EF70  F01E         
 23382                           u4501:
 23383  003CDC                     	goto	l6086
 23384  003CDC  EF61  F01E         u4500:
 23385  003CE0                     	goto	l606
 23386  003CE0  EF72  F01E         	
 23387                           l605:
 23388  003CE4                     	line	83
 23389                           	
 23390                           l606:
 23391  003CE4                     	return	;funcret
 23392  003CE4  0012               	opt stack 0
 23393                           GLOBAL	__end_of_deletar_receita
 23394                           	__end_of_deletar_receita:
 23395  003CE6                     	signat	_deletar_receita,4217
 23396                           	global	_EEPROM_write
 23397                           
 23398 ;; *************** function _EEPROM_write *****************
 23399 ;; Defined at:
 23400 ;;		line 24 in file "eeprom.c"
 23401 ;; Parameters:    Size  Location     Type
 23402 ;;  addr            1    wreg     unsigned char 
 23403 ;;  data            1    0[COMRAM] unsigned char 
 23404 ;; Auto vars:     Size  Location     Type
 23405 ;;  addr            1    1[COMRAM] unsigned char 
 23406 ;; Return value:  Size  Location     Type
 23407 ;;                  1    wreg      void 
 23408 ;; Registers used:
 23409 ;;		wreg, status,2
 23410 ;; Tracked objects:
 23411 ;;		On entry : 0/0
 23412 ;;		On exit  : 0/0
 23413 ;;		Unchanged: 0/0
 23414 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23415 ;;      Params:         1       0       0       0       0       0       0       0       0       0
 23416 ;;      Locals:         1       0       0       0       0       0       0       0       0       0
 23417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0
 23418 ;;      Totals:         2       0       0       0       0       0       0       0       0       0
 23419 ;;Total ram usage:        2 bytes
 23420 ;; Hardware stack levels used:    1
 23421 ;; Hardware stack levels required when called:    2
 23422 ;; This function calls:
 23423 ;;		Nothing
 23424 ;; This function is called by:
 23425 ;;		_salvar_receita
 23426 ;;		_salvar_dado
 23427 ;;		_deletar_receita
 23428 ;;		_formatar_receitas
 23429 ;; This function uses a non-reentrant model
 23430 ;;
 23431                           psect	text62,class=CODE,space=0,reloc=2,group=0
 23432                           	line	24
 23433                           global __ptext62
 23434                           __ptext62:
 23435  003FF2                     psect	text62
 23436                           	file	"eeprom.c"
 23437                           	line	24
 23438                           	global	__size_of_EEPROM_write
 23439                           	__size_of_EEPROM_write	equ	__end_of_EEPROM_write-_EEPROM_write
 23440  0000                     	
 23441                           _EEPROM_write:
 23442  003FF2                     ;incstack = 0
 23443                           	opt	stack 27
 23444                           ;EEPROM_write@addr stored from wreg
 23445                           	movwf	((c:EEPROM_write@addr)),c
 23446  003FF2  6E28               	line	26
 23447                           	
 23448                           l5248:
 23449  003FF4                     ;eeprom.c: 24: void EEPROM_write( unsigned char addr, unsigned char data );eeprom.c: 25:
                                  {;eeprom.c: 26:     INTCONbits.GIE = 0;
 23450                           	bcf	((c:4082)),c,7	;volatile
 23451  003FF4  9EF2               	line	27
 23452                           	
 23453                           l5250:
 23454  003FF6                     ;eeprom.c: 27:     EEADR = addr;
 23455                           	movff	(c:EEPROM_write@addr),(c:4009)	;volatile
 23456  003FF6  C028  FFA9         	line	28
 23457                           	
 23458                           l5252:
 23459  003FFA                     ;eeprom.c: 28:     EEDATA = data;
 23460                           	movff	(c:EEPROM_write@data),(c:4008)	;volatile
 23461  003FFA  C027  FFA8         	line	29
 23462                           	
 23463                           l5254:
 23464  003FFE                     ;eeprom.c: 29:     EECON1bits.EEPGD = 0;
 23465                           	bcf	((c:4006)),c,7	;volsfr
 23466  003FFE  9EA6               	line	30
 23467                           	
 23468                           l5256:
 23469  004000                     ;eeprom.c: 30:     EECON1bits.WREN = 1;
 23470                           	bsf	((c:4006)),c,2	;volsfr
 23471  004000  84A6               	line	31
 23472                           	
 23473                           l5258:
 23474  004002                     ;eeprom.c: 31:     EECON2 = 0x55;
 23475                           	movlw	low(055h)
 23476  004002  0E55               	movwf	((c:4007)),c	;volsfr
 23477  004004  6EA7               	line	32
 23478                           	
 23479                           l5260:
 23480  004006                     ;eeprom.c: 32:     EECON2 = 0xAA;
 23481                           	movlw	low(0AAh)
 23482  004006  0EAA               	movwf	((c:4007)),c	;volsfr
 23483  004008  6EA7               	line	33
 23484                           	
 23485                           l5262:
 23486  00400A                     ;eeprom.c: 33:     EECON1bits.WR = 1;
 23487                           	bsf	((c:4006)),c,1	;volsfr
 23488  00400A  82A6               	line	35
 23489                           ;eeprom.c: 35:     while( EECON1bits.WR );
 23490                           	goto	l579
 23491  00400C  EF08  F020         	
 23492                           l580:
 23493  004010                     	
 23494                           l579:
 23495  004010                     	btfsc	((c:4006)),c,1	;volsfr
 23496  004010  B2A6               	goto	u3641
 23497  004012  EF0D  F020         	goto	u3640
 23498  004016  EF0F  F020         u3641:
 23499  00401A                     	goto	l579
 23500  00401A  EF08  F020         u3640:
 23501  00401E                     	
 23502                           l581:
 23503  00401E                     	line	37
 23504                           ;eeprom.c: 37:     EECON1bits.WREN = 0;
 23505                           	bcf	((c:4006)),c,2	;volsfr
 23506  00401E  94A6               	line	38
 23507                           ;eeprom.c: 38:     INTCONbits.GIE = 1;
 23508                           	bsf	((c:4082)),c,7	;volatile
 23509  004020  8EF2               	line	39
 23510                           	
 23511                           l582:
 23512  004022                     	return	;funcret
 23513  004022  0012               	opt stack 0
 23514                           GLOBAL	__end_of_EEPROM_write
 23515                           	__end_of_EEPROM_write:
 23516  004024                     	signat	_EEPROM_write,8313
 23517                           	global	_buscar_receita
 23518                           
 23519 ;; *************** function _buscar_receita *****************
 23520 ;; Defined at:
 23521 ;;		line 55 in file "eeprom.c"
 23522 ;; Parameters:    Size  Location     Type
 23523 ;;  adrs            1    wreg     unsigned char 
 23524 ;;  data            2    6[COMRAM] PTR unsigned char 
 23525 ;;		 -> main@vetor_aux(16), 
 23526 ;; Auto vars:     Size  Location     Type
 23527 ;;  adrs            1   10[COMRAM] unsigned char 
 23528 ;;  i               1   11[COMRAM] unsigned char 
 23529 ;;  aux             2    8[COMRAM] int 
 23530 ;; Return value:  Size  Location     Type
 23531 ;;                  1    wreg      void 
 23532 ;; Registers used:
 23533 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23534 ;; Tracked objects:
 23535 ;;		On entry : 0/0
 23536 ;;		On exit  : 0/0
 23537 ;;		Unchanged: 0/0
 23538 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23539 ;;      Params:         2       0       0       0       0       0       0       0       0       0
 23540 ;;      Locals:         4       0       0       0       0       0       0       0       0       0
 23541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0
 23542 ;;      Totals:         6       0       0       0       0       0       0       0       0       0
 23543 ;;Total ram usage:        6 bytes
 23544 ;; Hardware stack levels used:    1
 23545 ;; Hardware stack levels required when called:    3
 23546 ;; This function calls:
 23547 ;;		_EEPROM_read
 23548 ;;		_end_receita
 23549 ;; This function is called by:
 23550 ;;		_main
 23551 ;; This function uses a non-reentrant model
 23552 ;;
 23553                           psect	text63,class=CODE,space=0,reloc=2,group=0
 23554                           	line	55
 23555                           global __ptext63
 23556                           __ptext63:
 23557  003BE0                     psect	text63
 23558                           	file	"eeprom.c"
 23559                           	line	55
 23560                           	global	__size_of_buscar_receita
 23561                           	__size_of_buscar_receita	equ	__end_of_buscar_receita-_buscar_receita
 23562  0000                     	
 23563                           _buscar_receita:
 23564  003BE0                     ;incstack = 0
 23565                           	opt	stack 27
 23566                           ;buscar_receita@adrs stored from wreg
 23567                           	movwf	((c:buscar_receita@adrs)),c
 23568  003BE0  6E31               	line	58
 23569                           	
 23570                           l6064:
 23571  003BE2                     ;eeprom.c: 55: void buscar_receita (char adrs, unsigned char * data );eeprom.c: 56: {;ee
                                 prom.c: 57:     int aux;;eeprom.c: 58:     aux = end_receita(adrs);
 23572                           	movff	(c:buscar_receita@adrs),(c:end_receita@x)
 23573  003BE2  C031  F027         	clrf	((c:end_receita@x+1)),c
 23574  003BE6  6A28               	call	_end_receita	;wreg free
 23575  003BE8  ECB2  F020         	movff	0+?_end_receita,(c:buscar_receita@aux)
 23576  003BEC  C027  F02F         	movff	1+?_end_receita,(c:buscar_receita@aux+1)
 23577  003BF0  C028  F030         	line	59
 23578                           	
 23579                           l6066:
 23580  003BF4                     ;eeprom.c: 59:     for( char i=0; i<16; i++ )
 23581                           	movlw	low(0)
 23582  003BF4  0E00               	movwf	((c:buscar_receita@i)),c
 23583  003BF6  6E32               	
 23584                           l6068:
 23585  003BF8                     		movlw	010h-1
 23586  003BF8  0E0F               	cpfsgt	((c:buscar_receita@i)),c
 23587  003BFA  6432               	goto	u4471
 23588  003BFC  EF02  F01E         	goto	u4470
 23589  003C00  EF04  F01E         
 23590                           u4471:
 23591  003C04                     	goto	l6072
 23592  003C04  EF08  F01E         u4470:
 23593  003C08                     	goto	l595
 23594  003C08  EF1E  F01E         	
 23595                           l6070:
 23596  003C0C                     	goto	l595
 23597  003C0C  EF1E  F01E         	
 23598                           l593:
 23599  003C10                     	line	60
 23600                           	
 23601                           l6072:
 23602  003C10                     ;eeprom.c: 60:        *(data+i) = EEPROM_read(aux+i);
 23603                           	movf	((c:buscar_receita@i)),c,w
 23604  003C10  5032               	addwf	((c:buscar_receita@data)),c,w
 23605  003C12  242D               	movwf	c:fsr2l
 23606  003C14  6ED9               	movlw	0
 23607  003C16  0E00               	addwfc	((c:buscar_receita@data+1)),c,w
 23608  003C18  202E               	movwf	1+c:fsr2l
 23609  003C1A  6EDA               	movf	((c:buscar_receita@i)),c,w
 23610  003C1C  5032               	addwf	((c:buscar_receita@aux)),c,w
 23611  003C1E  242F               	
 23612                           	call	_EEPROM_read
 23613  003C20  ECA7  F021         	movwf	indf2,c
 23614  003C24  6EDF               
 23615                           	
 23616                           l6074:
 23617  003C26                     	incf	((c:buscar_receita@i)),c
 23618  003C26  2A32               	
 23619                           l6076:
 23620  003C28                     		movlw	010h-1
 23621  003C28  0E0F               	cpfsgt	((c:buscar_receita@i)),c
 23622  003C2A  6432               	goto	u4481
 23623  003C2C  EF1A  F01E         	goto	u4480
 23624  003C30  EF1C  F01E         
 23625                           u4481:
 23626  003C34                     	goto	l6072
 23627  003C34  EF08  F01E         u4480:
 23628  003C38                     	goto	l595
 23629  003C38  EF1E  F01E         	
 23630                           l594:
 23631  003C3C                     	line	61
 23632                           	
 23633                           l595:
 23634  003C3C                     	return	;funcret
 23635  003C3C  0012               	opt stack 0
 23636                           GLOBAL	__end_of_buscar_receita
 23637                           	__end_of_buscar_receita:
 23638  003C3E                     	signat	_buscar_receita,8313
 23639                           	global	_buscar_dado
 23640                           
 23641 ;; *************** function _buscar_dado *****************
 23642 ;; Defined at:
 23643 ;;		line 70 in file "eeprom.c"
 23644 ;; Parameters:    Size  Location     Type
 23645 ;;  adrs            1    wreg     unsigned char 
 23646 ;;  col             1    6[COMRAM] unsigned char 
 23647 ;;  data            2    7[COMRAM] PTR unsigned char 
 23648 ;;		 -> main@init_cond(1), 
 23649 ;; Auto vars:     Size  Location     Type
 23650 ;;  adrs            1   11[COMRAM] unsigned char 
 23651 ;;  aux             2    9[COMRAM] int 
 23652 ;; Return value:  Size  Location     Type
 23653 ;;                  1    wreg      void 
 23654 ;; Registers used:
 23655 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23656 ;; Tracked objects:
 23657 ;;		On entry : 0/0
 23658 ;;		On exit  : 0/0
 23659 ;;		Unchanged: 0/0
 23660 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23661 ;;      Params:         3       0       0       0       0       0       0       0       0       0
 23662 ;;      Locals:         3       0       0       0       0       0       0       0       0       0
 23663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0
 23664 ;;      Totals:         6       0       0       0       0       0       0       0       0       0
 23665 ;;Total ram usage:        6 bytes
 23666 ;; Hardware stack levels used:    1
 23667 ;; Hardware stack levels required when called:    3
 23668 ;; This function calls:
 23669 ;;		_EEPROM_read
 23670 ;;		_end_receita
 23671 ;; This function is called by:
 23672 ;;		_main
 23673 ;; This function uses a non-reentrant model
 23674 ;;
 23675                           psect	text64,class=CODE,space=0,reloc=2,group=0
 23676                           	line	70
 23677                           global __ptext64
 23678                           __ptext64:
 23679  00413C                     psect	text64
 23680                           	file	"eeprom.c"
 23681                           	line	70
 23682                           	global	__size_of_buscar_dado
 23683                           	__size_of_buscar_dado	equ	__end_of_buscar_dado-_buscar_dado
 23684  0000                     	
 23685                           _buscar_dado:
 23686  00413C                     ;incstack = 0
 23687                           	opt	stack 27
 23688                           ;buscar_dado@adrs stored from wreg
 23689                           	movwf	((c:buscar_dado@adrs)),c
 23690  00413C  6E32               	line	73
 23691                           	
 23692                           l5572:
 23693  00413E                     ;eeprom.c: 70: void buscar_dado (char adrs, char col, unsigned char *data);eeprom.c: 71:
                                  {;eeprom.c: 72:     int aux;;eeprom.c: 73:     aux = end_receita(adrs);
 23694                           	movff	(c:buscar_dado@adrs),(c:end_receita@x)
 23695  00413E  C032  F027         	clrf	((c:end_receita@x+1)),c
 23696  004142  6A28               	call	_end_receita	;wreg free
 23697  004144  ECB2  F020         	movff	0+?_end_receita,(c:buscar_dado@aux)
 23698  004148  C027  F030         	movff	1+?_end_receita,(c:buscar_dado@aux+1)
 23699  00414C  C028  F031         	line	74
 23700                           	
 23701                           l5574:
 23702  004150                     ;eeprom.c: 74:     *data = EEPROM_read((aux+col));
 23703                           	movf	((c:buscar_dado@col)),c,w
 23704  004150  502D               	addwf	((c:buscar_dado@aux)),c,w
 23705  004152  2430               	
 23706                           	call	_EEPROM_read
 23707  004154  ECA7  F021         	movff	(c:buscar_dado@data),fsr2l
 23708  004158  C02E  FFD9         	movff	(c:buscar_dado@data+1),fsr2h
 23709  00415C  C02F  FFDA         	movwf	indf2,c
 23710  004160  6EDF               
 23711                           	line	75
 23712                           	
 23713                           l601:
 23714  004162                     	return	;funcret
 23715  004162  0012               	opt stack 0
 23716                           GLOBAL	__end_of_buscar_dado
 23717                           	__end_of_buscar_dado:
 23718  004164                     	signat	_buscar_dado,12409
 23719                           	global	_end_receita
 23720                           
 23721 ;; *************** function _end_receita *****************
 23722 ;; Defined at:
 23723 ;;		line 41 in file "eeprom.c"
 23724 ;; Parameters:    Size  Location     Type
 23725 ;;  x               2    0[COMRAM] int 
 23726 ;; Auto vars:     Size  Location     Type
 23727 ;;		None
 23728 ;; Return value:  Size  Location     Type
 23729 ;;                  2    0[COMRAM] int 
 23730 ;; Registers used:
 23731 ;;		wreg, status,2, status,0
 23732 ;; Tracked objects:
 23733 ;;		On entry : 0/0
 23734 ;;		On exit  : 0/0
 23735 ;;		Unchanged: 0/0
 23736 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23737 ;;      Params:         2       0       0       0       0       0       0       0       0       0
 23738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0
 23739 ;;      Temps:          2       0       0       0       0       0       0       0       0       0
 23740 ;;      Totals:         4       0       0       0       0       0       0       0       0       0
 23741 ;;Total ram usage:        4 bytes
 23742 ;; Hardware stack levels used:    1
 23743 ;; Hardware stack levels required when called:    2
 23744 ;; This function calls:
 23745 ;;		Nothing
 23746 ;; This function is called by:
 23747 ;;		_salvar_receita
 23748 ;;		_buscar_receita
 23749 ;;		_salvar_dado
 23750 ;;		_buscar_dado
 23751 ;;		_deletar_receita
 23752 ;;		_receita_livre
 23753 ;; This function uses a non-reentrant model
 23754 ;;
 23755                           psect	text65,class=CODE,space=0,reloc=2,group=0
 23756                           	line	41
 23757                           global __ptext65
 23758                           __ptext65:
 23759  004164                     psect	text65
 23760                           	file	"eeprom.c"
 23761                           	line	41
 23762                           	global	__size_of_end_receita
 23763                           	__size_of_end_receita	equ	__end_of_end_receita-_end_receita
 23764  0000                     	
 23765                           _end_receita:
 23766  004164                     ;incstack = 0
 23767                           	opt	stack 27
 23768                           	line	43
 23769                           	
 23770                           l5264:
 23771  004164                     ;eeprom.c: 41: int end_receita (int x);eeprom.c: 42: {;eeprom.c: 43:     return(x*16);
 23772                           	movff	(c:end_receita@x),??_end_receita+0+0
 23773  004164  C027  F029         	movff	(c:end_receita@x+1),??_end_receita+0+0+1
 23774  004168  C028  F02A         	swapf	(??_end_receita+0+0),c
 23775  00416C  3A29               	swapf	(??_end_receita+0+1),c
 23776  00416E  3A2A               	movlw	0f0h
 23777  004170  0EF0               	andwf	(??_end_receita+0+1),c
 23778  004172  162A               	movf	(??_end_receita+0+0),c,w
 23779  004174  5029               	andlw	0fh
 23780  004176  0B0F               	iorwf	(??_end_receita+0+1),c
 23781  004178  122A               	movlw	0f0h
 23782  00417A  0EF0               	andwf	(??_end_receita+0+0),c
 23783  00417C  1629               	movff	??_end_receita+0+0,(c:?_end_receita)
 23784  00417E  C029  F027         	movff	??_end_receita+0+1,(c:?_end_receita+1)
 23785  004182  C02A  F028         	goto	l585
 23786  004186  EFC5  F020         	
 23787                           l5266:
 23788  00418A                     	line	44
 23789                           	
 23790                           l585:
 23791  00418A                     	return	;funcret
 23792  00418A  0012               	opt stack 0
 23793                           GLOBAL	__end_of_end_receita
 23794                           	__end_of_end_receita:
 23795  00418C                     	signat	_end_receita,4218
 23796                           	global	_EEPROM_read
 23797                           
 23798 ;; *************** function _EEPROM_read *****************
 23799 ;; Defined at:
 23800 ;;		line 14 in file "eeprom.c"
 23801 ;; Parameters:    Size  Location     Type
 23802 ;;  addr            1    wreg     unsigned char 
 23803 ;; Auto vars:     Size  Location     Type
 23804 ;;  addr            1    0[COMRAM] unsigned char 
 23805 ;; Return value:  Size  Location     Type
 23806 ;;                  1    wreg      unsigned char 
 23807 ;; Registers used:
 23808 ;;		wreg, status,2
 23809 ;; Tracked objects:
 23810 ;;		On entry : 0/0
 23811 ;;		On exit  : 0/0
 23812 ;;		Unchanged: 0/0
 23813 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23814 ;;      Params:         0       0       0       0       0       0       0       0       0       0
 23815 ;;      Locals:         1       0       0       0       0       0       0       0       0       0
 23816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0
 23817 ;;      Totals:         1       0       0       0       0       0       0       0       0       0
 23818 ;;Total ram usage:        1 bytes
 23819 ;; Hardware stack levels used:    1
 23820 ;; Hardware stack levels required when called:    2
 23821 ;; This function calls:
 23822 ;;		Nothing
 23823 ;; This function is called by:
 23824 ;;		_buscar_receita
 23825 ;;		_buscar_dado
 23826 ;;		_receita_livre
 23827 ;; This function uses a non-reentrant model
 23828 ;;
 23829                           psect	text66,class=CODE,space=0,reloc=2,group=0
 23830                           	line	14
 23831                           global __ptext66
 23832                           __ptext66:
 23833  00434E                     psect	text66
 23834                           	file	"eeprom.c"
 23835                           	line	14
 23836                           	global	__size_of_EEPROM_read
 23837                           	__size_of_EEPROM_read	equ	__end_of_EEPROM_read-_EEPROM_read
 23838  0000                     	
 23839                           _EEPROM_read:
 23840  00434E                     ;incstack = 0
 23841                           	opt	stack 27
 23842                           ;EEPROM_read@addr stored from wreg
 23843                           	movwf	((c:EEPROM_read@addr)),c
 23844  00434E  6E27               	line	17
 23845                           	
 23846                           l5238:
 23847  004350                     ;eeprom.c: 14: char EEPROM_read( unsigned char addr );eeprom.c: 15: {;eeprom.c: 17:     
                                 EEADR = addr;
 23848                           	movff	(c:EEPROM_read@addr),(c:4009)	;volatile
 23849  004350  C027  FFA9         	line	18
 23850                           	
 23851                           l5240:
 23852  004354                     ;eeprom.c: 18:     EECON1bits.EEPGD = 0;
 23853                           	bcf	((c:4006)),c,7	;volsfr
 23854  004354  9EA6               	line	19
 23855                           	
 23856                           l5242:
 23857  004356                     ;eeprom.c: 19:     EECON1bits.RD = 1;
 23858                           	bsf	((c:4006)),c,0	;volsfr
 23859  004356  80A6               	line	20
 23860                           	
 23861                           l5244:
 23862  004358                     ;eeprom.c: 20:     return( EEDATA );
 23863                           	movf	((c:4008)),c,w	;volatile
 23864  004358  50A8               	goto	l576
 23865  00435A  EFAF  F021         	
 23866                           l5246:
 23867  00435E                     	line	22
 23868                           	
 23869                           l576:
 23870  00435E                     	return	;funcret
 23871  00435E  0012               	opt stack 0
 23872                           GLOBAL	__end_of_EEPROM_read
 23873                           	__end_of_EEPROM_read:
 23874  004360                     	signat	_EEPROM_read,4217
 23875                           	global	_addIndicePassos
 23876                           
 23877 ;; *************** function _addIndicePassos *****************
 23878 ;; Defined at:
 23879 ;;		line 19 in file "fifo.c"
 23880 ;; Parameters:    Size  Location     Type
 23881 ;;		None
 23882 ;; Auto vars:     Size  Location     Type
 23883 ;;		None
 23884 ;; Return value:  Size  Location     Type
 23885 ;;                  1    wreg      void 
 23886 ;; Registers used:
 23887 ;;		wreg, status,2, status,0
 23888 ;; Tracked objects:
 23889 ;;		On entry : 0/0
 23890 ;;		On exit  : 0/0
 23891 ;;		Unchanged: 0/0
 23892 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23893 ;;      Params:         0       0       0       0       0       0       0       0       0       0
 23894 ;;      Locals:         0       0       0       0       0       0       0       0       0       0
 23895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0
 23896 ;;      Totals:         0       0       0       0       0       0       0       0       0       0
 23897 ;;Total ram usage:        0 bytes
 23898 ;; Hardware stack levels used:    1
 23899 ;; Hardware stack levels required when called:    2
 23900 ;; This function calls:
 23901 ;;		Nothing
 23902 ;; This function is called by:
 23903 ;;		_main
 23904 ;; This function uses a non-reentrant model
 23905 ;;
 23906                           psect	text67,class=CODE,space=0,reloc=2,group=0
 23907                           	file	"fifo.c"
 23908                           	line	19
 23909                           global __ptext67
 23910                           __ptext67:
 23911  004296                     psect	text67
 23912                           	file	"fifo.c"
 23913                           	line	19
 23914                           	global	__size_of_addIndicePassos
 23915                           	__size_of_addIndicePassos	equ	__end_of_addIndicePassos-_addIndicePassos
 23916  0000                     	
 23917                           _addIndicePassos:
 23918  004296                     ;incstack = 0
 23919                           	opt	stack 28
 23920                           	line	21
 23921                           	
 23922                           l6020:
 23923  004296                     ;fifo.c: 21:     if(indice_passos < ind_fila)
 23924                           		movf	((c:_ind_fila)),c,w
 23925  004296  505D               	subwf	((c:_indice_passos)),c,w
 23926  004298  5C5B               	btfsc	status,0
 23927  00429A  B0D8               	goto	u4421
 23928  00429C  EF52  F021         	goto	u4420
 23929  0042A0  EF54  F021         
 23930                           u4421:
 23931  0042A4                     	goto	l647
 23932  0042A4  EF57  F021         u4420:
 23933  0042A8                     	line	22
 23934                           	
 23935                           l6022:
 23936  0042A8                     ;fifo.c: 22:         indice_passos++;
 23937                           	incf	((c:_indice_passos)),c
 23938  0042A8  2A5B               	goto	l647
 23939  0042AA  EF57  F021         	
 23940                           l646:
 23941  0042AE                     	line	23
 23942                           	
 23943                           l647:
 23944  0042AE                     	return	;funcret
 23945  0042AE  0012               	opt stack 0
 23946                           GLOBAL	__end_of_addIndicePassos
 23947                           	__end_of_addIndicePassos:
 23948  0042B0                     	signat	_addIndicePassos,89
 23949                           	global	_addContCiclos
 23950                           
 23951 ;; *************** function _addContCiclos *****************
 23952 ;; Defined at:
 23953 ;;		line 59 in file "fifo.c"
 23954 ;; Parameters:    Size  Location     Type
 23955 ;;		None
 23956 ;; Auto vars:     Size  Location     Type
 23957 ;;		None
 23958 ;; Return value:  Size  Location     Type
 23959 ;;                  1    wreg      void 
 23960 ;; Registers used:
 23961 ;;		status,2, status,0
 23962 ;; Tracked objects:
 23963 ;;		On entry : 0/0
 23964 ;;		On exit  : 0/0
 23965 ;;		Unchanged: 0/0
 23966 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23967 ;;      Params:         0       0       0       0       0       0       0       0       0       0
 23968 ;;      Locals:         0       0       0       0       0       0       0       0       0       0
 23969 ;;      Temps:          0       0       0       0       0       0       0       0       0       0
 23970 ;;      Totals:         0       0       0       0       0       0       0       0       0       0
 23971 ;;Total ram usage:        0 bytes
 23972 ;; Hardware stack levels used:    1
 23973 ;; Hardware stack levels required when called:    2
 23974 ;; This function calls:
 23975 ;;		Nothing
 23976 ;; This function is called by:
 23977 ;;		_main
 23978 ;; This function uses a non-reentrant model
 23979 ;;
 23980                           psect	text68,class=CODE,space=0,reloc=2,group=0
 23981                           	line	59
 23982                           global __ptext68
 23983                           __ptext68:
 23984  0043CC                     psect	text68
 23985                           	file	"fifo.c"
 23986                           	line	59
 23987                           	global	__size_of_addContCiclos
 23988                           	__size_of_addContCiclos	equ	__end_of_addContCiclos-_addContCiclos
 23989  0000                     	
 23990                           _addContCiclos:
 23991  0043CC                     ;incstack = 0
 23992                           	opt	stack 28
 23993                           	line	61
 23994                           	
 23995                           l6024:
 23996  0043CC                     ;fifo.c: 61:     cont_ciclos++;
 23997                           	infsnz	((c:_cont_ciclos)),c
 23998  0043CC  4A0D               	incf	((c:_cont_ciclos+1)),c
 23999  0043CE  2A0E               	line	62
 24000                           	
 24001                           l669:
 24002  0043D0                     	return	;funcret
 24003  0043D0  0012               	opt stack 0
 24004                           GLOBAL	__end_of_addContCiclos
 24005                           	__end_of_addContCiclos:
 24006  0043D2                     	signat	_addContCiclos,89
 24007                           	global	___lmul
 24008                           
 24009 ;; *************** function ___lmul *****************
 24010 ;; Defined at:
 24011 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul32.c"
 24012 ;; Parameters:    Size  Location     Type
 24013 ;;  multiplier      4    0[COMRAM] unsigned long 
 24014 ;;  multiplicand    4    4[COMRAM] unsigned long 
 24015 ;; Auto vars:     Size  Location     Type
 24016 ;;  product         4    8[COMRAM] unsigned long 
 24017 ;; Return value:  Size  Location     Type
 24018 ;;                  4    0[COMRAM] unsigned long 
 24019 ;; Registers used:
 24020 ;;		wreg, status,2, status,0
 24021 ;; Tracked objects:
 24022 ;;		On entry : 0/0
 24023 ;;		On exit  : 0/0
 24024 ;;		Unchanged: 0/0
 24025 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24026 ;;      Params:         8       0       0       0       0       0       0       0       0       0
 24027 ;;      Locals:         4       0       0       0       0       0       0       0       0       0
 24028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0
 24029 ;;      Totals:        12       0       0       0       0       0       0       0       0       0
 24030 ;;Total ram usage:       12 bytes
 24031 ;; Hardware stack levels used:    1
 24032 ;; Hardware stack levels required when called:    2
 24033 ;; This function calls:
 24034 ;;		Nothing
 24035 ;; This function is called by:
 24036 ;;		_main
 24037 ;; This function uses a non-reentrant model
 24038 ;;
 24039                           psect	text69,class=CODE,space=0,reloc=2,group=1
 24040                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul32.c"
 24041                           	line	15
 24042                           global __ptext69
 24043                           __ptext69:
 24044  0037CE                     psect	text69
 24045                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul32.c"
 24046                           	line	15
 24047                           	global	__size_of___lmul
 24048                           	__size_of___lmul	equ	__end_of___lmul-___lmul
 24049  0000                     	
 24050                           ___lmul:
 24051  0037CE                     ;incstack = 0
 24052                           	opt	stack 28
 24053                           	line	119
 24054                           	
 24055                           l6118:
 24056  0037CE                     	movlw	low(0)
 24057  0037CE  0E00               	movwf	((c:___lmul@product)),c
 24058  0037D0  6E2F               	movlw	high(0)
 24059  0037D2  0E00               	movwf	((c:___lmul@product+1)),c
 24060  0037D4  6E30               	movlw	low highword(0)
 24061  0037D6  0E00               	movwf	((c:___lmul@product+2)),c
 24062  0037D8  6E31               	movlw	high highword(0)
 24063  0037DA  0E00               	movwf	((c:___lmul@product+3)),c
 24064  0037DC  6E32               	goto	l6120
 24065  0037DE  EFF1  F01B         	line	120
 24066                           	
 24067                           l1236:
 24068  0037E2                     	line	121
 24069                           	
 24070                           l6120:
 24071  0037E2                     	
 24072                           	btfss	((c:___lmul@multiplier)),c,(0)&7
 24073  0037E2  A027               	goto	u4581
 24074  0037E4  EFF6  F01B         	goto	u4580
 24075  0037E8  EFF8  F01B         u4581:
 24076  0037EC                     	goto	l6124
 24077  0037EC  EF02  F01C         u4580:
 24078  0037F0                     	line	122
 24079                           	
 24080                           l6122:
 24081  0037F0                     	movf	((c:___lmul@multiplicand)),c,w
 24082  0037F0  502B               	addwf	((c:___lmul@product)),c
 24083  0037F2  262F               	movf	((c:___lmul@multiplicand+1)),c,w
 24084  0037F4  502C               	addwfc	((c:___lmul@product+1)),c
 24085  0037F6  2230               	movf	((c:___lmul@multiplicand+2)),c,w
 24086  0037F8  502D               	addwfc	((c:___lmul@product+2)),c
 24087  0037FA  2231               	movf	((c:___lmul@multiplicand+3)),c,w
 24088  0037FC  502E               	addwfc	((c:___lmul@product+3)),c
 24089  0037FE  2232               	goto	l6124
 24090  003800  EF02  F01C         	
 24091                           l1237:
 24092  003804                     	line	123
 24093                           	
 24094                           l6124:
 24095  003804                     	bcf	status,0
 24096  003804  90D8               	rlcf	((c:___lmul@multiplicand)),c
 24097  003806  362B               	rlcf	((c:___lmul@multiplicand+1)),c
 24098  003808  362C               	rlcf	((c:___lmul@multiplicand+2)),c
 24099  00380A  362D               	rlcf	((c:___lmul@multiplicand+3)),c
 24100  00380C  362E               	line	124
 24101                           	
 24102                           l6126:
 24103  00380E                     	bcf	status,0
 24104  00380E  90D8               	rrcf	((c:___lmul@multiplier+3)),c
 24105  003810  322A               	rrcf	((c:___lmul@multiplier+2)),c
 24106  003812  3229               	rrcf	((c:___lmul@multiplier+1)),c
 24107  003814  3228               	rrcf	((c:___lmul@multiplier)),c
 24108  003816  3227               	line	125
 24109                           	movf	((c:___lmul@multiplier)),c,w
 24110  003818  5027               iorwf	((c:___lmul@multiplier+1)),c,w
 24111  00381A  1028               iorwf	((c:___lmul@multiplier+2)),c,w
 24112  00381C  1029               iorwf	((c:___lmul@multiplier+3)),c,w
 24113  00381E  102A               	btfss	status,2
 24114  003820  A4D8               	goto	u4591
 24115  003822  EF15  F01C         	goto	u4590
 24116  003826  EF17  F01C         
 24117                           u4591:
 24118  00382A                     	goto	l6120
 24119  00382A  EFF1  F01B         u4590:
 24120  00382E                     	
 24121                           l1238:
 24122  00382E                     	line	128
 24123                           	movff	(c:___lmul@product),(c:?___lmul)
 24124  00382E  C02F  F027         	movff	(c:___lmul@product+1),(c:?___lmul+1)
 24125  003832  C030  F028         	movff	(c:___lmul@product+2),(c:?___lmul+2)
 24126  003836  C031  F029         	movff	(c:___lmul@product+3),(c:?___lmul+3)
 24127  00383A  C032  F02A         	line	129
 24128                           	
 24129                           l1239:
 24130  00383E                     	return	;funcret
 24131  00383E  0012               	opt stack 0
 24132                           GLOBAL	__end_of___lmul
 24133                           	__end_of___lmul:
 24134  003840                     	signat	___lmul,8316
 24135                           	global	___aldiv
 24136                           
 24137 ;; *************** function ___aldiv *****************
 24138 ;; Defined at:
 24139 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\aldiv.c"
 24140 ;; Parameters:    Size  Location     Type
 24141 ;;  dividend        4   12[COMRAM] long 
 24142 ;;  divisor         4   16[COMRAM] long 
 24143 ;; Auto vars:     Size  Location     Type
 24144 ;;  quotient        4   22[COMRAM] long 
 24145 ;;  sign            1   21[COMRAM] unsigned char 
 24146 ;;  counter         1   20[COMRAM] unsigned char 
 24147 ;; Return value:  Size  Location     Type
 24148 ;;                  4   12[COMRAM] long 
 24149 ;; Registers used:
 24150 ;;		wreg, status,2, status,0
 24151 ;; Tracked objects:
 24152 ;;		On entry : 0/0
 24153 ;;		On exit  : 0/0
 24154 ;;		Unchanged: 0/0
 24155 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24156 ;;      Params:         8       0       0       0       0       0       0       0       0       0
 24157 ;;      Locals:         6       0       0       0       0       0       0       0       0       0
 24158 ;;      Temps:          0       0       0       0       0       0       0       0       0       0
 24159 ;;      Totals:        14       0       0       0       0       0       0       0       0       0
 24160 ;;Total ram usage:       14 bytes
 24161 ;; Hardware stack levels used:    1
 24162 ;; Hardware stack levels required when called:    2
 24163 ;; This function calls:
 24164 ;;		Nothing
 24165 ;; This function is called by:
 24166 ;;		_main
 24167 ;; This function uses a non-reentrant model
 24168 ;;
 24169                           psect	text70,class=CODE,space=0,reloc=2,group=1
 24170                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\aldiv.c"
 24171                           	line	7
 24172                           global __ptext70
 24173                           __ptext70:
 24174  002C1E                     psect	text70
 24175                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\aldiv.c"
 24176                           	line	7
 24177                           	global	__size_of___aldiv
 24178                           	__size_of___aldiv	equ	__end_of___aldiv-___aldiv
 24179  0000                     	
 24180                           ___aldiv:
 24181  002C1E                     ;incstack = 0
 24182                           	opt	stack 28
 24183                           	line	13
 24184                           	
 24185                           l6128:
 24186  002C1E                     	movlw	low(0)
 24187  002C1E  0E00               	movwf	((c:___aldiv@sign)),c
 24188  002C20  6E3C               	line	14
 24189                           	
 24190                           l6130:
 24191  002C22                     	btfsc	((c:___aldiv@divisor+3)),c,7
 24192  002C22  BE3A               	goto	u4600
 24193  002C24  EF18  F016         	goto	u4601
 24194  002C28  EF16  F016         
 24195                           u4601:
 24196  002C2C                     	goto	l6136
 24197  002C2C  EF24  F016         u4600:
 24198  002C30                     	line	15
 24199                           	
 24200                           l6132:
 24201  002C30                     	comf	((c:___aldiv@divisor+3)),c
 24202  002C30  1E3A               	comf	((c:___aldiv@divisor+2)),c
 24203  002C32  1E39               	comf	((c:___aldiv@divisor+1)),c
 24204  002C34  1E38               	negf	((c:___aldiv@divisor)),c
 24205  002C36  6C37               	movlw	0
 24206  002C38  0E00               	addwfc	((c:___aldiv@divisor+1)),c
 24207  002C3A  2238               	addwfc	((c:___aldiv@divisor+2)),c
 24208  002C3C  2239               	addwfc	((c:___aldiv@divisor+3)),c
 24209  002C3E  223A               	line	16
 24210                           	
 24211                           l6134:
 24212  002C40                     	movlw	low(01h)
 24213  002C40  0E01               	movwf	((c:___aldiv@sign)),c
 24214  002C42  6E3C               	goto	l6136
 24215  002C44  EF24  F016         	line	17
 24216                           	
 24217                           l1296:
 24218  002C48                     	line	18
 24219                           	
 24220                           l6136:
 24221  002C48                     	btfsc	((c:___aldiv@dividend+3)),c,7
 24222  002C48  BE36               	goto	u4610
 24223  002C4A  EF2B  F016         	goto	u4611
 24224  002C4E  EF29  F016         
 24225                           u4611:
 24226  002C52                     	goto	l6142
 24227  002C52  EF37  F016         u4610:
 24228  002C56                     	line	19
 24229                           	
 24230                           l6138:
 24231  002C56                     	comf	((c:___aldiv@dividend+3)),c
 24232  002C56  1E36               	comf	((c:___aldiv@dividend+2)),c
 24233  002C58  1E35               	comf	((c:___aldiv@dividend+1)),c
 24234  002C5A  1E34               	negf	((c:___aldiv@dividend)),c
 24235  002C5C  6C33               	movlw	0
 24236  002C5E  0E00               	addwfc	((c:___aldiv@dividend+1)),c
 24237  002C60  2234               	addwfc	((c:___aldiv@dividend+2)),c
 24238  002C62  2235               	addwfc	((c:___aldiv@dividend+3)),c
 24239  002C64  2236               	line	20
 24240                           	
 24241                           l6140:
 24242  002C66                     	movlw	(01h)&0ffh
 24243  002C66  0E01               	xorwf	((c:___aldiv@sign)),c
 24244  002C68  1A3C               	goto	l6142
 24245  002C6A  EF37  F016         	line	21
 24246                           	
 24247                           l1297:
 24248  002C6E                     	line	22
 24249                           	
 24250                           l6142:
 24251  002C6E                     	movlw	low(0)
 24252  002C6E  0E00               	movwf	((c:___aldiv@quotient)),c
 24253  002C70  6E3D               	movlw	high(0)
 24254  002C72  0E00               	movwf	((c:___aldiv@quotient+1)),c
 24255  002C74  6E3E               	movlw	low highword(0)
 24256  002C76  0E00               	movwf	((c:___aldiv@quotient+2)),c
 24257  002C78  6E3F               	movlw	high highword(0)
 24258  002C7A  0E00               	movwf	((c:___aldiv@quotient+3)),c
 24259  002C7C  6E40               	line	23
 24260                           	
 24261                           l6144:
 24262  002C7E                     	movf	((c:___aldiv@divisor)),c,w
 24263  002C7E  5037               iorwf	((c:___aldiv@divisor+1)),c,w
 24264  002C80  1038               iorwf	((c:___aldiv@divisor+2)),c,w
 24265  002C82  1039               iorwf	((c:___aldiv@divisor+3)),c,w
 24266  002C84  103A               	btfsc	status,2
 24267  002C86  B4D8               	goto	u4621
 24268  002C88  EF48  F016         	goto	u4620
 24269  002C8C  EF4A  F016         
 24270                           u4621:
 24271  002C90                     	goto	l6164
 24272  002C90  EF8C  F016         u4620:
 24273  002C94                     	line	24
 24274                           	
 24275                           l6146:
 24276  002C94                     	movlw	low(01h)
 24277  002C94  0E01               	movwf	((c:___aldiv@counter)),c
 24278  002C96  6E3B               	line	25
 24279                           	goto	l6150
 24280  002C98  EF56  F016         	
 24281                           l1300:
 24282  002C9C                     	line	26
 24283                           	
 24284                           l6148:
 24285  002C9C                     	bcf	status,0
 24286  002C9C  90D8               	rlcf	((c:___aldiv@divisor)),c
 24287  002C9E  3637               	rlcf	((c:___aldiv@divisor+1)),c
 24288  002CA0  3638               	rlcf	((c:___aldiv@divisor+2)),c
 24289  002CA2  3639               	rlcf	((c:___aldiv@divisor+3)),c
 24290  002CA4  363A               	line	27
 24291                           	incf	((c:___aldiv@counter)),c
 24292  002CA6  2A3B               	goto	l6150
 24293  002CA8  EF56  F016         	line	28
 24294                           	
 24295                           l1299:
 24296  002CAC                     	line	25
 24297                           	
 24298                           l6150:
 24299  002CAC                     	
 24300                           	btfss	((c:___aldiv@divisor+3)),c,(31)&7
 24301  002CAC  AE3A               	goto	u4631
 24302  002CAE  EF5B  F016         	goto	u4630
 24303  002CB2  EF5D  F016         u4631:
 24304  002CB6                     	goto	l6148
 24305  002CB6  EF4E  F016         u4630:
 24306  002CBA                     	goto	l6152
 24307  002CBA  EF61  F016         	
 24308                           l1301:
 24309  002CBE                     	goto	l6152
 24310  002CBE  EF61  F016         	line	29
 24311                           	
 24312                           l1302:
 24313  002CC2                     	line	30
 24314                           	
 24315                           l6152:
 24316  002CC2                     	bcf	status,0
 24317  002CC2  90D8               	rlcf	((c:___aldiv@quotient)),c
 24318  002CC4  363D               	rlcf	((c:___aldiv@quotient+1)),c
 24319  002CC6  363E               	rlcf	((c:___aldiv@quotient+2)),c
 24320  002CC8  363F               	rlcf	((c:___aldiv@quotient+3)),c
 24321  002CCA  3640               	line	31
 24322                           	
 24323                           l6154:
 24324  002CCC                     		movf	((c:___aldiv@divisor)),c,w
 24325  002CCC  5037               	subwf	((c:___aldiv@dividend)),c,w
 24326  002CCE  5C33               	movf	((c:___aldiv@divisor+1)),c,w
 24327  002CD0  5038               	subwfb	((c:___aldiv@dividend+1)),c,w
 24328  002CD2  5834               	movf	((c:___aldiv@divisor+2)),c,w
 24329  002CD4  5039               	subwfb	((c:___aldiv@dividend+2)),c,w
 24330  002CD6  5835               	movf	((c:___aldiv@divisor+3)),c,w
 24331  002CD8  503A               	subwfb	((c:___aldiv@dividend+3)),c,w
 24332  002CDA  5836               	btfss	status,0
 24333  002CDC  A0D8               	goto	u4641
 24334  002CDE  EF73  F016         	goto	u4640
 24335  002CE2  EF75  F016         
 24336                           u4641:
 24337  002CE6                     	goto	l6160
 24338  002CE6  EF80  F016         u4640:
 24339  002CEA                     	line	32
 24340                           	
 24341                           l6156:
 24342  002CEA                     	movf	((c:___aldiv@divisor)),c,w
 24343  002CEA  5037               	subwf	((c:___aldiv@dividend)),c
 24344  002CEC  5E33               	movf	((c:___aldiv@divisor+1)),c,w
 24345  002CEE  5038               	subwfb	((c:___aldiv@dividend+1)),c
 24346  002CF0  5A34               	movf	((c:___aldiv@divisor+2)),c,w
 24347  002CF2  5039               	subwfb	((c:___aldiv@dividend+2)),c
 24348  002CF4  5A35               	movf	((c:___aldiv@divisor+3)),c,w
 24349  002CF6  503A               	subwfb	((c:___aldiv@dividend+3)),c
 24350  002CF8  5A36               	line	33
 24351                           	
 24352                           l6158:
 24353  002CFA                     	bsf	(0+(0/8)+(c:___aldiv@quotient)),c,(0)&7
 24354  002CFA  803D               	goto	l6160
 24355  002CFC  EF80  F016         	line	34
 24356                           	
 24357                           l1303:
 24358  002D00                     	line	35
 24359                           	
 24360                           l6160:
 24361  002D00                     	bcf	status,0
 24362  002D00  90D8               	rrcf	((c:___aldiv@divisor+3)),c
 24363  002D02  323A               	rrcf	((c:___aldiv@divisor+2)),c
 24364  002D04  3239               	rrcf	((c:___aldiv@divisor+1)),c
 24365  002D06  3238               	rrcf	((c:___aldiv@divisor)),c
 24366  002D08  3237               	line	36
 24367                           	
 24368                           l6162:
 24369  002D0A                     	decfsz	((c:___aldiv@counter)),c
 24370  002D0A  2E3B               	
 24371                           	goto	l6152
 24372  002D0C  EF61  F016         	goto	l6164
 24373  002D10  EF8C  F016         	
 24374                           l1304:
 24375  002D14                     	goto	l6164
 24376  002D14  EF8C  F016         	line	37
 24377                           	
 24378                           l1298:
 24379  002D18                     	line	38
 24380                           	
 24381                           l6164:
 24382  002D18                     	movf	((c:___aldiv@sign)),c,w
 24383  002D18  503C               	btfsc	status,2
 24384  002D1A  B4D8               	goto	u4651
 24385  002D1C  EF92  F016         	goto	u4650
 24386  002D20  EF94  F016         u4651:
 24387  002D24                     	goto	l6168
 24388  002D24  EF9E  F016         u4650:
 24389  002D28                     	line	39
 24390                           	
 24391                           l6166:
 24392  002D28                     	comf	((c:___aldiv@quotient+3)),c
 24393  002D28  1E40               	comf	((c:___aldiv@quotient+2)),c
 24394  002D2A  1E3F               	comf	((c:___aldiv@quotient+1)),c
 24395  002D2C  1E3E               	negf	((c:___aldiv@quotient)),c
 24396  002D2E  6C3D               	movlw	0
 24397  002D30  0E00               	addwfc	((c:___aldiv@quotient+1)),c
 24398  002D32  223E               	addwfc	((c:___aldiv@quotient+2)),c
 24399  002D34  223F               	addwfc	((c:___aldiv@quotient+3)),c
 24400  002D36  2240               	goto	l6168
 24401  002D38  EF9E  F016         	
 24402                           l1305:
 24403  002D3C                     	line	40
 24404                           	
 24405                           l6168:
 24406  002D3C                     	movff	(c:___aldiv@quotient),(c:?___aldiv)
 24407  002D3C  C03D  F033         	movff	(c:___aldiv@quotient+1),(c:?___aldiv+1)
 24408  002D40  C03E  F034         	movff	(c:___aldiv@quotient+2),(c:?___aldiv+2)
 24409  002D44  C03F  F035         	movff	(c:___aldiv@quotient+3),(c:?___aldiv+3)
 24410  002D48  C040  F036         	goto	l1306
 24411  002D4C  EFA8  F016         	
 24412                           l6170:
 24413  002D50                     	line	41
 24414                           	
 24415                           l1306:
 24416  002D50                     	return	;funcret
 24417  002D50  0012               	opt stack 0
 24418                           GLOBAL	__end_of___aldiv
 24419                           	__end_of___aldiv:
 24420  002D52                     	signat	___aldiv,8316
 24421                           	global	_MCP4725
 24422                           
 24423 ;; *************** function _MCP4725 *****************
 24424 ;; Defined at:
 24425 ;;		line 35 in file "MCP4725.c"
 24426 ;; Parameters:    Size  Location     Type
 24427 ;;  Vout            2   26[COMRAM] unsigned int 
 24428 ;; Auto vars:     Size  Location     Type
 24429 ;;		None
 24430 ;; Return value:  Size  Location     Type
 24431 ;;                  1    wreg      void 
 24432 ;; Registers used:
 24433 ;;		wreg, status,2, status,0, cstack
 24434 ;; Tracked objects:
 24435 ;;		On entry : 0/0
 24436 ;;		On exit  : 0/0
 24437 ;;		Unchanged: 0/0
 24438 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24439 ;;      Params:         2       0       0       0       0       0       0       0       0       0
 24440 ;;      Locals:         0       0       0       0       0       0       0       0       0       0
 24441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0
 24442 ;;      Totals:         2       0       0       0       0       0       0       0       0       0
 24443 ;;Total ram usage:        2 bytes
 24444 ;; Hardware stack levels used:    1
 24445 ;; Hardware stack levels required when called:    4
 24446 ;; This function calls:
 24447 ;;		_I2C_stop
 24448 ;;		_dac_init
 24449 ;;		_dac_write
 24450 ;;		_delay
 24451 ;; This function is called by:
 24452 ;;		_main
 24453 ;; This function uses a non-reentrant model
 24454 ;;
 24455                           psect	text71,class=CODE,space=0,reloc=2,group=0
 24456                           	file	"MCP4725.c"
 24457                           	line	35
 24458                           global __ptext71
 24459                           __ptext71:
 24460  0041D0                     psect	text71
 24461                           	file	"MCP4725.c"
 24462                           	line	35
 24463                           	global	__size_of_MCP4725
 24464                           	__size_of_MCP4725	equ	__end_of_MCP4725-_MCP4725
 24465  0000                     	
 24466                           _MCP4725:
 24467  0041D0                     ;incstack = 0
 24468                           	opt	stack 26
 24469                           	line	37
 24470                           	
 24471                           l5516:
 24472  0041D0                     ;MCP4725.c: 35: void MCP4725 (unsigned int Vout);MCP4725.c: 36: {;MCP4725.c: 37:     dac
                                 _init();
 24473                           	call	_dac_init	;wreg free
 24474  0041D0  EC50  F01F         	line	38
 24475                           ;MCP4725.c: 38:     dac_write(Vout);
 24476                           	movff	(c:MCP4725@Vout),(c:dac_write@code)
 24477  0041D4  C041  F02A         	movff	(c:MCP4725@Vout+1),(c:dac_write@code+1)
 24478  0041D8  C042  F02B         	call	_dac_write	;wreg free
 24479  0041DC  EC0D  F01F         	line	39
 24480                           	
 24481                           l5518:
 24482  0041E0                     ;MCP4725.c: 39:     I2C_stop();
 24483                           	call	_I2C_stop	;wreg free
 24484  0041E0  EC7C  F021         	line	40
 24485                           	
 24486                           l5520:
 24487  0041E4                     ;MCP4725.c: 40:     delay(1);
 24488                           	movlw	high(01h)
 24489  0041E4  0E00               	movwf	((c:delay@t+1)),c
 24490  0041E6  6E28               	movlw	low(01h)
 24491  0041E8  0E01               	movwf	((c:delay@t)),c
 24492  0041EA  6E27               	call	_delay	;wreg free
 24493  0041EC  EC12  F020         	line	41
 24494                           	
 24495                           l902:
 24496  0041F0                     	return	;funcret
 24497  0041F0  0012               	opt stack 0
 24498                           GLOBAL	__end_of_MCP4725
 24499                           	__end_of_MCP4725:
 24500  0041F2                     	signat	_MCP4725,4217
 24501                           	global	_dac_write
 24502                           
 24503 ;; *************** function _dac_write *****************
 24504 ;; Defined at:
 24505 ;;		line 25 in file "MCP4725.c"
 24506 ;; Parameters:    Size  Location     Type
 24507 ;;  code            2    3[COMRAM] unsigned int 
 24508 ;; Auto vars:     Size  Location     Type
 24509 ;;		None
 24510 ;; Return value:  Size  Location     Type
 24511 ;;                  1    wreg      void 
 24512 ;; Registers used:
 24513 ;;		wreg, status,2, status,0, cstack
 24514 ;; Tracked objects:
 24515 ;;		On entry : 0/0
 24516 ;;		On exit  : 0/0
 24517 ;;		Unchanged: 0/0
 24518 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24519 ;;      Params:         2       0       0       0       0       0       0       0       0       0
 24520 ;;      Locals:         0       0       0       0       0       0       0       0       0       0
 24521 ;;      Temps:          3       0       0       0       0       0       0       0       0       0
 24522 ;;      Totals:         5       0       0       0       0       0       0       0       0       0
 24523 ;;Total ram usage:        5 bytes
 24524 ;; Hardware stack levels used:    1
 24525 ;; Hardware stack levels required when called:    3
 24526 ;; This function calls:
 24527 ;;		_I2C_ack_receive
 24528 ;;		_I2C_tx
 24529 ;;		_delay
 24530 ;; This function is called by:
 24531 ;;		_MCP4725
 24532 ;;		_MCP4725X
 24533 ;; This function uses a non-reentrant model
 24534 ;;
 24535                           psect	text72,class=CODE,space=0,reloc=2,group=0
 24536                           	line	25
 24537                           global __ptext72
 24538                           __ptext72:
 24539  003E1A                     psect	text72
 24540                           	file	"MCP4725.c"
 24541                           	line	25
 24542                           	global	__size_of_dac_write
 24543                           	__size_of_dac_write	equ	__end_of_dac_write-_dac_write
 24544  0000                     	
 24545                           _dac_write:
 24546  003E1A                     ;incstack = 0
 24547                           	opt	stack 26
 24548                           	line	27
 24549                           	
 24550                           l5368:
 24551  003E1A                     ;MCP4725.c: 25: void dac_write ( unsigned int code );MCP4725.c: 26: {;MCP4725.c: 27:    
                                  I2C_tx( code >> 4 );
 24552                           	movff	(c:dac_write@code),??_dac_write+0+0
 24553  003E1A  C02A  F02C         	movff	(c:dac_write@code+1),??_dac_write+0+0+1
 24554  003E1E  C02B  F02D         	movlw	04h
 24555  003E22  0E04               	movwf	(??_dac_write+2+0)&0ffh,c
 24556  003E24  6E2E               u3755:
 24557  003E26                     	bcf	status,0
 24558  003E26  90D8               	rrcf	(??_dac_write+0+1),c
 24559  003E28  322D               	rrcf	(??_dac_write+0+0),c
 24560  003E2A  322C               	decfsz	(??_dac_write+2+0)&0ffh,c
 24561  003E2C  2E2E               	goto	u3755
 24562  003E2E  EF13  F01F         	movf	(??_dac_write+0+0),c,w
 24563  003E32  502C               	
 24564                           	call	_I2C_tx
 24565  003E34  EC08  F021         	line	28
 24566                           	
 24567                           l5370:
 24568  003E38                     ;MCP4725.c: 28:     I2C_ack_receive();
 24569                           	call	_I2C_ack_receive	;wreg free
 24570  003E38  EC70  F021         	line	29
 24571                           	
 24572                           l5372:
 24573  003E3C                     ;MCP4725.c: 29:     delay(1);
 24574                           	movlw	high(01h)
 24575  003E3C  0E00               	movwf	((c:delay@t+1)),c
 24576  003E3E  6E28               	movlw	low(01h)
 24577  003E40  0E01               	movwf	((c:delay@t)),c
 24578  003E42  6E27               	call	_delay	;wreg free
 24579  003E44  EC12  F020         	line	30
 24580                           	
 24581                           l5374:
 24582  003E48                     ;MCP4725.c: 30:     I2C_tx( code << 4);
 24583                           	swapf	((c:dac_write@code)),c,w
 24584  003E48  382A               	andlw	(0ffh shl 4) & 0ffh
 24585  003E4A  0BF0               	
 24586                           	call	_I2C_tx
 24587  003E4C  EC08  F021         	line	31
 24588                           	
 24589                           l5376:
 24590  003E50                     ;MCP4725.c: 31:     I2C_ack_receive();
 24591                           	call	_I2C_ack_receive	;wreg free
 24592  003E50  EC70  F021         	line	32
 24593                           ;MCP4725.c: 32:     delay(1);
 24594                           	movlw	high(01h)
 24595  003E54  0E00               	movwf	((c:delay@t+1)),c
 24596  003E56  6E28               	movlw	low(01h)
 24597  003E58  0E01               	movwf	((c:delay@t)),c
 24598  003E5A  6E27               	call	_delay	;wreg free
 24599  003E5C  EC12  F020         	line	33
 24600                           	
 24601                           l899:
 24602  003E60                     	return	;funcret
 24603  003E60  0012               	opt stack 0
 24604                           GLOBAL	__end_of_dac_write
 24605                           	__end_of_dac_write:
 24606  003E62                     	signat	_dac_write,4217
 24607                           	global	_dac_init
 24608                           
 24609 ;; *************** function _dac_init *****************
 24610 ;; Defined at:
 24611 ;;		line 13 in file "MCP4725.c"
 24612 ;; Parameters:    Size  Location     Type
 24613 ;;		None
 24614 ;; Auto vars:     Size  Location     Type
 24615 ;;		None
 24616 ;; Return value:  Size  Location     Type
 24617 ;;                  1    wreg      void 
 24618 ;; Registers used:
 24619 ;;		wreg, status,2, status,0, cstack
 24620 ;; Tracked objects:
 24621 ;;		On entry : 0/0
 24622 ;;		On exit  : 0/0
 24623 ;;		Unchanged: 0/0
 24624 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24625 ;;      Params:         0       0       0       0       0       0       0       0       0       0
 24626 ;;      Locals:         0       0       0       0       0       0       0       0       0       0
 24627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0
 24628 ;;      Totals:         0       0       0       0       0       0       0       0       0       0
 24629 ;;Total ram usage:        0 bytes
 24630 ;; Hardware stack levels used:    1
 24631 ;; Hardware stack levels required when called:    3
 24632 ;; This function calls:
 24633 ;;		_I2C_ack_receive
 24634 ;;		_I2C_start
 24635 ;;		_I2C_tx
 24636 ;;		_delay
 24637 ;; This function is called by:
 24638 ;;		_MCP4725
 24639 ;;		_MCP4725X
 24640 ;; This function uses a non-reentrant model
 24641 ;;
 24642                           psect	text73,class=CODE,space=0,reloc=2,group=0
 24643                           	line	13
 24644                           global __ptext73
 24645                           __ptext73:
 24646  003EA0                     psect	text73
 24647                           	file	"MCP4725.c"
 24648                           	line	13
 24649                           	global	__size_of_dac_init
 24650                           	__size_of_dac_init	equ	__end_of_dac_init-_dac_init
 24651  0000                     	
 24652                           _dac_init:
 24653  003EA0                     ;incstack = 0
 24654                           	opt	stack 26
 24655                           	line	15
 24656                           	
 24657                           l5354:
 24658  003EA0                     ;MCP4725.c: 15:     I2C_start();
 24659                           	call	_I2C_start	;wreg free
 24660  003EA0  EC64  F021         	line	16
 24661                           	
 24662                           l5356:
 24663  003EA4                     ;MCP4725.c: 16:     delay(1);
 24664                           	movlw	high(01h)
 24665  003EA4  0E00               	movwf	((c:delay@t+1)),c
 24666  003EA6  6E28               	movlw	low(01h)
 24667  003EA8  0E01               	movwf	((c:delay@t)),c
 24668  003EAA  6E27               	call	_delay	;wreg free
 24669  003EAC  EC12  F020         	line	17
 24670                           	
 24671                           l5358:
 24672  003EB0                     ;MCP4725.c: 17:     I2C_tx( 0b11000000 );
 24673                           	movlw	(0C0h)&0ffh
 24674  003EB0  0EC0               	
 24675                           	call	_I2C_tx
 24676  003EB2  EC08  F021         	line	18
 24677                           	
 24678                           l5360:
 24679  003EB6                     ;MCP4725.c: 18:     I2C_ack_receive();
 24680                           	call	_I2C_ack_receive	;wreg free
 24681  003EB6  EC70  F021         	line	19
 24682                           	
 24683                           l5362:
 24684  003EBA                     ;MCP4725.c: 19:     delay(1);
 24685                           	movlw	high(01h)
 24686  003EBA  0E00               	movwf	((c:delay@t+1)),c
 24687  003EBC  6E28               	movlw	low(01h)
 24688  003EBE  0E01               	movwf	((c:delay@t)),c
 24689  003EC0  6E27               	call	_delay	;wreg free
 24690  003EC2  EC12  F020         	line	20
 24691                           ;MCP4725.c: 20:     I2C_tx( 0b01100000 );
 24692                           	movlw	(060h)&0ffh
 24693  003EC6  0E60               	
 24694                           	call	_I2C_tx
 24695  003EC8  EC08  F021         	line	21
 24696                           	
 24697                           l5364:
 24698  003ECC                     ;MCP4725.c: 21:     I2C_ack_receive();
 24699                           	call	_I2C_ack_receive	;wreg free
 24700  003ECC  EC70  F021         	line	22
 24701                           	
 24702                           l5366:
 24703  003ED0                     ;MCP4725.c: 22:     delay(1);
 24704                           	movlw	high(01h)
 24705  003ED0  0E00               	movwf	((c:delay@t+1)),c
 24706  003ED2  6E28               	movlw	low(01h)
 24707  003ED4  0E01               	movwf	((c:delay@t)),c
 24708  003ED6  6E27               	call	_delay	;wreg free
 24709  003ED8  EC12  F020         	line	23
 24710                           	
 24711                           l896:
 24712  003EDC                     	return	;funcret
 24713  003EDC  0012               	opt stack 0
 24714                           GLOBAL	__end_of_dac_init
 24715                           	__end_of_dac_init:
 24716  003EDE                     	signat	_dac_init,89
 24717                           	global	_delay
 24718                           
 24719 ;; *************** function _delay *****************
 24720 ;; Defined at:
 24721 ;;		line 10 in file "delay.c"
 24722 ;; Parameters:    Size  Location     Type
 24723 ;;  t               2    0[COMRAM] unsigned int 
 24724 ;; Auto vars:     Size  Location     Type
 24725 ;;		None
 24726 ;; Return value:  Size  Location     Type
 24727 ;;                  1    wreg      void 
 24728 ;; Registers used:
 24729 ;;		wreg, status,2, status,0
 24730 ;; Tracked objects:
 24731 ;;		On entry : 0/0
 24732 ;;		On exit  : 0/0
 24733 ;;		Unchanged: 0/0
 24734 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24735 ;;      Params:         2       0       0       0       0       0       0       0       0       0
 24736 ;;      Locals:         0       0       0       0       0       0       0       0       0       0
 24737 ;;      Temps:          1       0       0       0       0       0       0       0       0       0
 24738 ;;      Totals:         3       0       0       0       0       0       0       0       0       0
 24739 ;;Total ram usage:        3 bytes
 24740 ;; Hardware stack levels used:    1
 24741 ;; Hardware stack levels required when called:    2
 24742 ;; This function calls:
 24743 ;;		Nothing
 24744 ;; This function is called by:
 24745 ;;		_main
 24746 ;;		_dispLCD_init
 24747 ;;		_dac_init
 24748 ;;		_dac_write
 24749 ;;		_MCP4725
 24750 ;;		_MCP4725X
 24751 ;; This function uses a non-reentrant model
 24752 ;;
 24753                           psect	text74,class=CODE,space=0,reloc=2,group=0
 24754                           	file	"delay.c"
 24755                           	line	10
 24756                           global __ptext74
 24757                           __ptext74:
 24758  004024                     psect	text74
 24759                           	file	"delay.c"
 24760                           	line	10
 24761                           	global	__size_of_delay
 24762                           	__size_of_delay	equ	__end_of_delay-_delay
 24763  0000                     	
 24764                           _delay:
 24765  004024                     ;incstack = 0
 24766                           	opt	stack 27
 24767                           	line	12
 24768                           	
 24769                           l5010:
 24770  004024                     ;delay.c: 10: void delay( unsigned int t );delay.c: 11: {;delay.c: 12:     while( t )
 24771                           	goto	l478
 24772  004024  EF1F  F020         	
 24773                           l479:
 24774  004028                     	line	14
 24775                           	
 24776                           l5012:
 24777  004028                     ;delay.c: 13:     {;delay.c: 14:         _delay((unsigned long)((1)*(20000000/4000.0)));
                                 
 24778                           	opt asmopt_push
 24779                           opt asmopt_off
 24780                           movlw	7
 24781  004028  0E07               movwf	(??_delay+0+0)&0ffh,c,f
 24782  00402A  6E29               	movlw	125
 24783  00402C  0E7D               u6197:
 24784  00402E                     decfsz	wreg,f
 24785  00402E  2EE8               	bra	u6197
 24786  004030  D7FE               	decfsz	(??_delay+0+0)&0ffh,c,f
 24787  004032  2E29               	bra	u6197
 24788  004034  D7FC               	nop
 24789  004036  F000               opt asmopt_pop
 24790                           
 24791                           	line	15
 24792                           	
 24793                           l5014:
 24794  004038                     ;delay.c: 15:         --t;
 24795                           	decf	((c:delay@t)),c
 24796  004038  0627               	btfss	status,0
 24797  00403A  A0D8               	decf	((c:delay@t+1)),c
 24798  00403C  0628               	line	16
 24799                           ;delay.c: 16:     }
 24800                           	
 24801                           l478:
 24802  00403E                     	line	12
 24803                           ;delay.c: 12:     while( t )
 24804                           	movf	((c:delay@t)),c,w
 24805  00403E  5027               iorwf	((c:delay@t+1)),c,w
 24806  004040  1028               	btfss	status,2
 24807  004042  A4D8               	goto	u3271
 24808  004044  EF26  F020         	goto	u3270
 24809  004048  EF28  F020         
 24810                           u3271:
 24811  00404C                     	goto	l5012
 24812  00404C  EF14  F020         u3270:
 24813  004050                     	goto	l481
 24814  004050  EF2A  F020         	
 24815                           l480:
 24816  004054                     	line	17
 24817                           	
 24818                           l481:
 24819  004054                     	return	;funcret
 24820  004054  0012               	opt stack 0
 24821                           GLOBAL	__end_of_delay
 24822                           	__end_of_delay:
 24823  004056                     	signat	_delay,4217
 24824                           	global	_I2C_tx
 24825                           
 24826 ;; *************** function _I2C_tx *****************
 24827 ;; Defined at:
 24828 ;;		line 36 in file "spi_i2c.c"
 24829 ;; Parameters:    Size  Location     Type
 24830 ;;  b               1    wreg     unsigned char 
 24831 ;; Auto vars:     Size  Location     Type
 24832 ;;  b               1    0[COMRAM] unsigned char 
 24833 ;; Return value:  Size  Location     Type
 24834 ;;                  1    wreg      void 
 24835 ;; Registers used:
 24836 ;;		wreg
 24837 ;; Tracked objects:
 24838 ;;		On entry : 0/0
 24839 ;;		On exit  : 0/0
 24840 ;;		Unchanged: 0/0
 24841 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24842 ;;      Params:         0       0       0       0       0       0       0       0       0       0
 24843 ;;      Locals:         1       0       0       0       0       0       0       0       0       0
 24844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0
 24845 ;;      Totals:         1       0       0       0       0       0       0       0       0       0
 24846 ;;Total ram usage:        1 bytes
 24847 ;; Hardware stack levels used:    1
 24848 ;; Hardware stack levels required when called:    2
 24849 ;; This function calls:
 24850 ;;		Nothing
 24851 ;; This function is called by:
 24852 ;;		_dac_init
 24853 ;;		_dac_write
 24854 ;; This function uses a non-reentrant model
 24855 ;;
 24856                           psect	text75,class=CODE,space=0,reloc=2,group=0
 24857                           	file	"spi_i2c.c"
 24858                           	line	36
 24859                           global __ptext75
 24860                           __ptext75:
 24861  004210                     psect	text75
 24862                           	file	"spi_i2c.c"
 24863                           	line	36
 24864                           	global	__size_of_I2C_tx
 24865                           	__size_of_I2C_tx	equ	__end_of_I2C_tx-_I2C_tx
 24866  0000                     	
 24867                           _I2C_tx:
 24868  004210                     ;incstack = 0
 24869                           	opt	stack 26
 24870                           ;I2C_tx@b stored from wreg
 24871                           	movwf	((c:I2C_tx@b)),c
 24872  004210  6E27               	line	38
 24873                           	
 24874                           l5074:
 24875  004212                     ;spi_i2c.c: 36: void I2C_tx( unsigned char b );spi_i2c.c: 37: {;spi_i2c.c: 38:     SSPBU
                                 F = b;
 24876                           	movff	(c:I2C_tx@b),(c:4041)	;volatile
 24877  004212  C027  FFC9         	line	39
 24878                           ;spi_i2c.c: 39:     while( SSPSTATbits.BF );
 24879                           	goto	l975
 24880  004216  EF0D  F021         	
 24881                           l976:
 24882  00421A                     	
 24883                           l975:
 24884  00421A                     	btfsc	((c:4039)),c,0	;volatile
 24885  00421A  B0C7               	goto	u3301
 24886  00421C  EF12  F021         	goto	u3300
 24887  004220  EF14  F021         u3301:
 24888  004224                     	goto	l975
 24889  004224  EF0D  F021         u3300:
 24890  004228                     	goto	l978
 24891  004228  EF16  F021         	
 24892                           l977:
 24893  00422C                     	line	40
 24894                           	
 24895                           l978:
 24896  00422C                     	return	;funcret
 24897  00422C  0012               	opt stack 0
 24898                           GLOBAL	__end_of_I2C_tx
 24899                           	__end_of_I2C_tx:
 24900  00422E                     	signat	_I2C_tx,4217
 24901                           	global	_I2C_start
 24902                           
 24903 ;; *************** function _I2C_start *****************
 24904 ;; Defined at:
 24905 ;;		line 22 in file "spi_i2c.c"
 24906 ;; Parameters:    Size  Location     Type
 24907 ;;		None
 24908 ;; Auto vars:     Size  Location     Type
 24909 ;;		None
 24910 ;; Return value:  Size  Location     Type
 24911 ;;                  1    wreg      void 
 24912 ;; Registers used:
 24913 ;;		None
 24914 ;; Tracked objects:
 24915 ;;		On entry : 0/0
 24916 ;;		On exit  : 0/0
 24917 ;;		Unchanged: 0/0
 24918 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24919 ;;      Params:         0       0       0       0       0       0       0       0       0       0
 24920 ;;      Locals:         0       0       0       0       0       0       0       0       0       0
 24921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0
 24922 ;;      Totals:         0       0       0       0       0       0       0       0       0       0
 24923 ;;Total ram usage:        0 bytes
 24924 ;; Hardware stack levels used:    1
 24925 ;; Hardware stack levels required when called:    2
 24926 ;; This function calls:
 24927 ;;		Nothing
 24928 ;; This function is called by:
 24929 ;;		_dac_init
 24930 ;; This function uses a non-reentrant model
 24931 ;;
 24932                           psect	text76,class=CODE,space=0,reloc=2,group=0
 24933                           	line	22
 24934                           global __ptext76
 24935                           __ptext76:
 24936  0042C8                     psect	text76
 24937                           	file	"spi_i2c.c"
 24938                           	line	22
 24939                           	global	__size_of_I2C_start
 24940                           	__size_of_I2C_start	equ	__end_of_I2C_start-_I2C_start
 24941  0000                     	
 24942                           _I2C_start:
 24943  0042C8                     ;incstack = 0
 24944                           	opt	stack 26
 24945                           	line	24
 24946                           	
 24947                           l5072:
 24948  0042C8                     ;spi_i2c.c: 24:     SSPCON2bits.SEN = 1;
 24949                           	bsf	((c:4037)),c,0	;volatile
 24950  0042C8  80C5               	line	25
 24951                           ;spi_i2c.c: 25:     while( !PIR1bits.SSPIF );
 24952                           	goto	l960
 24953  0042CA  EF67  F021         	
 24954                           l961:
 24955  0042CE                     	
 24956                           l960:
 24957  0042CE                     	btfss	((c:3998)),c,3	;volatile
 24958  0042CE  A69E               	goto	u3291
 24959  0042D0  EF6C  F021         	goto	u3290
 24960  0042D4  EF6E  F021         u3291:
 24961  0042D8                     	goto	l960
 24962  0042D8  EF67  F021         u3290:
 24963  0042DC                     	
 24964                           l962:
 24965  0042DC                     	line	26
 24966                           ;spi_i2c.c: 26:     PIR1bits.SSPIF = 0;
 24967                           	bcf	((c:3998)),c,3	;volatile
 24968  0042DC  969E               	line	27
 24969                           	
 24970                           l963:
 24971  0042DE                     	return	;funcret
 24972  0042DE  0012               	opt stack 0
 24973                           GLOBAL	__end_of_I2C_start
 24974                           	__end_of_I2C_start:
 24975  0042E0                     	signat	_I2C_start,89
 24976                           	global	_I2C_ack_receive
 24977                           
 24978 ;; *************** function _I2C_ack_receive *****************
 24979 ;; Defined at:
 24980 ;;		line 56 in file "spi_i2c.c"
 24981 ;; Parameters:    Size  Location     Type
 24982 ;;		None
 24983 ;; Auto vars:     Size  Location     Type
 24984 ;;		None
 24985 ;; Return value:  Size  Location     Type
 24986 ;;                  1    wreg      void 
 24987 ;; Registers used:
 24988 ;;		None
 24989 ;; Tracked objects:
 24990 ;;		On entry : 0/0
 24991 ;;		On exit  : 0/0
 24992 ;;		Unchanged: 0/0
 24993 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24994 ;;      Params:         0       0       0       0       0       0       0       0       0       0
 24995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0
 24996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0
 24997 ;;      Totals:         0       0       0       0       0       0       0       0       0       0
 24998 ;;Total ram usage:        0 bytes
 24999 ;; Hardware stack levels used:    1
 25000 ;; Hardware stack levels required when called:    2
 25001 ;; This function calls:
 25002 ;;		Nothing
 25003 ;; This function is called by:
 25004 ;;		_dac_init
 25005 ;;		_dac_write
 25006 ;; This function uses a non-reentrant model
 25007 ;;
 25008                           psect	text77,class=CODE,space=0,reloc=2,group=0
 25009                           	line	56
 25010                           global __ptext77
 25011                           __ptext77:
 25012  0042E0                     psect	text77
 25013                           	file	"spi_i2c.c"
 25014                           	line	56
 25015                           	global	__size_of_I2C_ack_receive
 25016                           	__size_of_I2C_ack_receive	equ	__end_of_I2C_ack_receive-_I2C_ack_receive
 25017  0000                     	
 25018                           _I2C_ack_receive:
 25019  0042E0                     ;incstack = 0
 25020                           	opt	stack 26
 25021                           	line	58
 25022                           	
 25023                           l5076:
 25024  0042E0                     ;spi_i2c.c: 58:     while( SSPCON2bits.ACKSTAT );
 25025                           	goto	l996
 25026  0042E0  EF72  F021         	
 25027                           l997:
 25028  0042E4                     	
 25029                           l996:
 25030  0042E4                     	btfsc	((c:4037)),c,6	;volatile
 25031  0042E4  BCC5               	goto	u3311
 25032  0042E6  EF77  F021         	goto	u3310
 25033  0042EA  EF79  F021         u3311:
 25034  0042EE                     	goto	l996
 25035  0042EE  EF72  F021         u3310:
 25036  0042F2                     	goto	l999
 25037  0042F2  EF7B  F021         	
 25038                           l998:
 25039  0042F6                     	line	60
 25040                           	
 25041                           l999:
 25042  0042F6                     	return	;funcret
 25043  0042F6  0012               	opt stack 0
 25044                           GLOBAL	__end_of_I2C_ack_receive
 25045                           	__end_of_I2C_ack_receive:
 25046  0042F8                     	signat	_I2C_ack_receive,89
 25047                           	global	_I2C_stop
 25048                           
 25049 ;; *************** function _I2C_stop *****************
 25050 ;; Defined at:
 25051 ;;		line 41 in file "spi_i2c.c"
 25052 ;; Parameters:    Size  Location     Type
 25053 ;;		None
 25054 ;; Auto vars:     Size  Location     Type
 25055 ;;		None
 25056 ;; Return value:  Size  Location     Type
 25057 ;;                  1    wreg      void 
 25058 ;; Registers used:
 25059 ;;		None
 25060 ;; Tracked objects:
 25061 ;;		On entry : 0/0
 25062 ;;		On exit  : 0/0
 25063 ;;		Unchanged: 0/0
 25064 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25065 ;;      Params:         0       0       0       0       0       0       0       0       0       0
 25066 ;;      Locals:         0       0       0       0       0       0       0       0       0       0
 25067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0
 25068 ;;      Totals:         0       0       0       0       0       0       0       0       0       0
 25069 ;;Total ram usage:        0 bytes
 25070 ;; Hardware stack levels used:    1
 25071 ;; Hardware stack levels required when called:    2
 25072 ;; This function calls:
 25073 ;;		Nothing
 25074 ;; This function is called by:
 25075 ;;		_MCP4725
 25076 ;;		_MCP4725X
 25077 ;; This function uses a non-reentrant model
 25078 ;;
 25079                           psect	text78,class=CODE,space=0,reloc=2,group=0
 25080                           	line	41
 25081                           global __ptext78
 25082                           __ptext78:
 25083  0042F8                     psect	text78
 25084                           	file	"spi_i2c.c"
 25085                           	line	41
 25086                           	global	__size_of_I2C_stop
 25087                           	__size_of_I2C_stop	equ	__end_of_I2C_stop-_I2C_stop
 25088  0000                     	
 25089                           _I2C_stop:
 25090  0042F8                     ;incstack = 0
 25091                           	opt	stack 27
 25092                           	line	43
 25093                           	
 25094                           l5378:
 25095  0042F8                     ;spi_i2c.c: 43:     SSPCON2bits.PEN = 1;
 25096                           	bsf	((c:4037)),c,2	;volatile
 25097  0042F8  84C5               	line	44
 25098                           ;spi_i2c.c: 44:     while( !PIR1bits.SSPIF );
 25099                           	goto	l981
 25100  0042FA  EF7F  F021         	
 25101                           l982:
 25102  0042FE                     	
 25103                           l981:
 25104  0042FE                     	btfss	((c:3998)),c,3	;volatile
 25105  0042FE  A69E               	goto	u3761
 25106  004300  EF84  F021         	goto	u3760
 25107  004304  EF86  F021         u3761:
 25108  004308                     	goto	l981
 25109  004308  EF7F  F021         u3760:
 25110  00430C                     	
 25111                           l983:
 25112  00430C                     	line	45
 25113                           ;spi_i2c.c: 45:     PIR1bits.SSPIF = 0;
 25114                           	bcf	((c:3998)),c,3	;volatile
 25115  00430C  969E               	line	46
 25116                           	
 25117                           l984:
 25118  00430E                     	return	;funcret
 25119  00430E  0012               	opt stack 0
 25120                           GLOBAL	__end_of_I2C_stop
 25121                           	__end_of_I2C_stop:
 25122  004310                     	signat	_I2C_stop,89
 25123                           	global	_I2C_init
 25124                           
 25125 ;; *************** function _I2C_init *****************
 25126 ;; Defined at:
 25127 ;;		line 12 in file "spi_i2c.c"
 25128 ;; Parameters:    Size  Location     Type
 25129 ;;  freq            4   13[COMRAM] unsigned long 
 25130 ;; Auto vars:     Size  Location     Type
 25131 ;;		None
 25132 ;; Return value:  Size  Location     Type
 25133 ;;                  1    wreg      void 
 25134 ;; Registers used:
 25135 ;;		wreg, status,2, status,0, cstack
 25136 ;; Tracked objects:
 25137 ;;		On entry : 0/0
 25138 ;;		On exit  : 0/0
 25139 ;;		Unchanged: 0/0
 25140 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25141 ;;      Params:         4       0       0       0       0       0       0       0       0       0
 25142 ;;      Locals:         0       0       0       0       0       0       0       0       0       0
 25143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0
 25144 ;;      Totals:         4       0       0       0       0       0       0       0       0       0
 25145 ;;Total ram usage:        4 bytes
 25146 ;; Hardware stack levels used:    1
 25147 ;; Hardware stack levels required when called:    3
 25148 ;; This function calls:
 25149 ;;		___lldiv
 25150 ;; This function is called by:
 25151 ;;		_main
 25152 ;; This function uses a non-reentrant model
 25153 ;;
 25154                           psect	text79,class=CODE,space=0,reloc=2,group=0
 25155                           	line	12
 25156                           global __ptext79
 25157                           __ptext79:
 25158  003F1A                     psect	text79
 25159                           	file	"spi_i2c.c"
 25160                           	line	12
 25161                           	global	__size_of_I2C_init
 25162                           	__size_of_I2C_init	equ	__end_of_I2C_init-_I2C_init
 25163  0000                     	
 25164                           _I2C_init:
 25165  003F1A                     ;incstack = 0
 25166                           	opt	stack 27
 25167                           	line	14
 25168                           	
 25169                           l5506:
 25170  003F1A                     ;spi_i2c.c: 12: void I2C_init( unsigned long freq );spi_i2c.c: 13: {;spi_i2c.c: 14:     
                                 TRISBbits.TRISB0 = 1;
 25171                           	bsf	((c:3987)),c,0	;volatile
 25172  003F1A  8093               	line	15
 25173                           ;spi_i2c.c: 15:     TRISBbits.TRISB1 = 1;
 25174                           	bsf	((c:3987)),c,1	;volatile
 25175  003F1C  8293               	line	16
 25176                           	
 25177                           l5508:
 25178  003F1E                     ;spi_i2c.c: 16:     SSPCON1bits.SSPM = 0x8;
 25179                           	movf	((c:4038)),c,w	;volatile
 25180  003F1E  50C6               	andlw	not (((1<<4)-1)<<0)
 25181  003F20  0BF0               	iorlw	(08h & ((1<<4)-1))<<0
 25182  003F22  0908               	movwf	((c:4038)),c	;volatile
 25183  003F24  6EC6               	line	17
 25184                           	
 25185                           l5510:
 25186  003F26                     ;spi_i2c.c: 17:     SSPADD = ((20000000>>2) / (freq))-1;
 25187                           	movlw	low(04C4B40h)
 25188  003F26  0E40               	movwf	((c:___lldiv@dividend)),c
 25189  003F28  6E27               	movlw	high(04C4B40h)
 25190  003F2A  0E4B               	movwf	((c:___lldiv@dividend+1)),c
 25191  003F2C  6E28               	movlw	low highword(04C4B40h)
 25192  003F2E  0E4C               	movwf	((c:___lldiv@dividend+2)),c
 25193  003F30  6E29               	movlw	high highword(04C4B40h)
 25194  003F32  0E00               	movwf	((c:___lldiv@dividend+3)),c
 25195  003F34  6E2A               	movff	(c:I2C_init@freq),(c:___lldiv@divisor)
 25196  003F36  C034  F02B         	movff	(c:I2C_init@freq+1),(c:___lldiv@divisor+1)
 25197  003F3A  C035  F02C         	movff	(c:I2C_init@freq+2),(c:___lldiv@divisor+2)
 25198  003F3E  C036  F02D         	movff	(c:I2C_init@freq+3),(c:___lldiv@divisor+3)
 25199  003F42  C037  F02E         	call	___lldiv	;wreg free
 25200  003F46  EC38  F01A         	decf	(0+?___lldiv),c,w
 25201  003F4A  0427               	movwf	((c:4040)),c	;volatile
 25202  003F4C  6EC8               	line	18
 25203                           	
 25204                           l5512:
 25205  003F4E                     ;spi_i2c.c: 18:     SSPSTATbits.SMP = 1;
 25206                           	bsf	((c:4039)),c,7	;volatile
 25207  003F4E  8EC7               	line	19
 25208                           	
 25209                           l5514:
 25210  003F50                     ;spi_i2c.c: 19:     SSPCON1bits.SSPEN = 1;
 25211                           	bsf	((c:4038)),c,5	;volatile
 25212  003F50  8AC6               	line	20
 25213                           	
 25214                           l957:
 25215  003F52                     	return	;funcret
 25216  003F52  0012               	opt stack 0
 25217                           GLOBAL	__end_of_I2C_init
 25218                           	__end_of_I2C_init:
 25219  003F54                     	signat	_I2C_init,4217
 25220                           	global	___lldiv
 25221                           
 25222 ;; *************** function ___lldiv *****************
 25223 ;; Defined at:
 25224 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\__lldiv.c"
 25225 ;; Parameters:    Size  Location     Type
 25226 ;;  dividend        4    0[COMRAM] unsigned long 
 25227 ;;  divisor         4    4[COMRAM] unsigned long 
 25228 ;; Auto vars:     Size  Location     Type
 25229 ;;  quotient        4    8[COMRAM] unsigned long 
 25230 ;;  counter         1   12[COMRAM] unsigned char 
 25231 ;; Return value:  Size  Location     Type
 25232 ;;                  4    0[COMRAM] unsigned long 
 25233 ;; Registers used:
 25234 ;;		wreg, status,2, status,0
 25235 ;; Tracked objects:
 25236 ;;		On entry : 0/0
 25237 ;;		On exit  : 0/0
 25238 ;;		Unchanged: 0/0
 25239 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25240 ;;      Params:         8       0       0       0       0       0       0       0       0       0
 25241 ;;      Locals:         5       0       0       0       0       0       0       0       0       0
 25242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0
 25243 ;;      Totals:        13       0       0       0       0       0       0       0       0       0
 25244 ;;Total ram usage:       13 bytes
 25245 ;; Hardware stack levels used:    1
 25246 ;; Hardware stack levels required when called:    2
 25247 ;; This function calls:
 25248 ;;		Nothing
 25249 ;; This function is called by:
 25250 ;;		_I2C_init
 25251 ;;		_initEUSART
 25252 ;; This function uses a non-reentrant model
 25253 ;;
 25254                           psect	text80,class=CODE,space=0,reloc=2,group=1
 25255                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\__lldiv.c"
 25256                           	line	7
 25257                           global __ptext80
 25258                           __ptext80:
 25259  003470                     psect	text80
 25260                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\__lldiv.c"
 25261                           	line	7
 25262                           	global	__size_of___lldiv
 25263                           	__size_of___lldiv	equ	__end_of___lldiv-___lldiv
 25264  0000                     	
 25265                           ___lldiv:
 25266  003470                     ;incstack = 0
 25267                           	opt	stack 26
 25268                           	line	13
 25269                           	
 25270                           l5078:
 25271  003470                     	movlw	low(0)
 25272  003470  0E00               	movwf	((c:___lldiv@quotient)),c
 25273  003472  6E2F               	movlw	high(0)
 25274  003474  0E00               	movwf	((c:___lldiv@quotient+1)),c
 25275  003476  6E30               	movlw	low highword(0)
 25276  003478  0E00               	movwf	((c:___lldiv@quotient+2)),c
 25277  00347A  6E31               	movlw	high highword(0)
 25278  00347C  0E00               	movwf	((c:___lldiv@quotient+3)),c
 25279  00347E  6E32               	line	14
 25280                           	
 25281                           l5080:
 25282  003480                     	movf	((c:___lldiv@divisor)),c,w
 25283  003480  502B               iorwf	((c:___lldiv@divisor+1)),c,w
 25284  003482  102C               iorwf	((c:___lldiv@divisor+2)),c,w
 25285  003484  102D               iorwf	((c:___lldiv@divisor+3)),c,w
 25286  003486  102E               	btfsc	status,2
 25287  003488  B4D8               	goto	u3321
 25288  00348A  EF49  F01A         	goto	u3320
 25289  00348E  EF4B  F01A         
 25290                           u3321:
 25291  003492                     	goto	l1254
 25292  003492  EF8B  F01A         u3320:
 25293  003496                     	line	15
 25294                           	
 25295                           l5082:
 25296  003496                     	movlw	low(01h)
 25297  003496  0E01               	movwf	((c:___lldiv@counter)),c
 25298  003498  6E33               	line	16
 25299                           	goto	l5086
 25300  00349A  EF57  F01A         	
 25301                           l1256:
 25302  00349E                     	line	17
 25303                           	
 25304                           l5084:
 25305  00349E                     	bcf	status,0
 25306  00349E  90D8               	rlcf	((c:___lldiv@divisor)),c
 25307  0034A0  362B               	rlcf	((c:___lldiv@divisor+1)),c
 25308  0034A2  362C               	rlcf	((c:___lldiv@divisor+2)),c
 25309  0034A4  362D               	rlcf	((c:___lldiv@divisor+3)),c
 25310  0034A6  362E               	line	18
 25311                           	incf	((c:___lldiv@counter)),c
 25312  0034A8  2A33               	goto	l5086
 25313  0034AA  EF57  F01A         	line	19
 25314                           	
 25315                           l1255:
 25316  0034AE                     	line	16
 25317                           	
 25318                           l5086:
 25319  0034AE                     	
 25320                           	btfss	((c:___lldiv@divisor+3)),c,(31)&7
 25321  0034AE  AE2E               	goto	u3331
 25322  0034B0  EF5C  F01A         	goto	u3330
 25323  0034B4  EF5E  F01A         u3331:
 25324  0034B8                     	goto	l5084
 25325  0034B8  EF4F  F01A         u3330:
 25326  0034BC                     	goto	l5088
 25327  0034BC  EF62  F01A         	
 25328                           l1257:
 25329  0034C0                     	goto	l5088
 25330  0034C0  EF62  F01A         	line	20
 25331                           	
 25332                           l1258:
 25333  0034C4                     	line	21
 25334                           	
 25335                           l5088:
 25336  0034C4                     	bcf	status,0
 25337  0034C4  90D8               	rlcf	((c:___lldiv@quotient)),c
 25338  0034C6  362F               	rlcf	((c:___lldiv@quotient+1)),c
 25339  0034C8  3630               	rlcf	((c:___lldiv@quotient+2)),c
 25340  0034CA  3631               	rlcf	((c:___lldiv@quotient+3)),c
 25341  0034CC  3632               	line	22
 25342                           	
 25343                           l5090:
 25344  0034CE                     		movf	((c:___lldiv@divisor)),c,w
 25345  0034CE  502B               	subwf	((c:___lldiv@dividend)),c,w
 25346  0034D0  5C27               	movf	((c:___lldiv@divisor+1)),c,w
 25347  0034D2  502C               	subwfb	((c:___lldiv@dividend+1)),c,w
 25348  0034D4  5828               	movf	((c:___lldiv@divisor+2)),c,w
 25349  0034D6  502D               	subwfb	((c:___lldiv@dividend+2)),c,w
 25350  0034D8  5829               	movf	((c:___lldiv@divisor+3)),c,w
 25351  0034DA  502E               	subwfb	((c:___lldiv@dividend+3)),c,w
 25352  0034DC  582A               	btfss	status,0
 25353  0034DE  A0D8               	goto	u3341
 25354  0034E0  EF74  F01A         	goto	u3340
 25355  0034E4  EF76  F01A         
 25356                           u3341:
 25357  0034E8                     	goto	l5096
 25358  0034E8  EF81  F01A         u3340:
 25359  0034EC                     	line	23
 25360                           	
 25361                           l5092:
 25362  0034EC                     	movf	((c:___lldiv@divisor)),c,w
 25363  0034EC  502B               	subwf	((c:___lldiv@dividend)),c
 25364  0034EE  5E27               	movf	((c:___lldiv@divisor+1)),c,w
 25365  0034F0  502C               	subwfb	((c:___lldiv@dividend+1)),c
 25366  0034F2  5A28               	movf	((c:___lldiv@divisor+2)),c,w
 25367  0034F4  502D               	subwfb	((c:___lldiv@dividend+2)),c
 25368  0034F6  5A29               	movf	((c:___lldiv@divisor+3)),c,w
 25369  0034F8  502E               	subwfb	((c:___lldiv@dividend+3)),c
 25370  0034FA  5A2A               	line	24
 25371                           	
 25372                           l5094:
 25373  0034FC                     	bsf	(0+(0/8)+(c:___lldiv@quotient)),c,(0)&7
 25374  0034FC  802F               	goto	l5096
 25375  0034FE  EF81  F01A         	line	25
 25376                           	
 25377                           l1259:
 25378  003502                     	line	26
 25379                           	
 25380                           l5096:
 25381  003502                     	bcf	status,0
 25382  003502  90D8               	rrcf	((c:___lldiv@divisor+3)),c
 25383  003504  322E               	rrcf	((c:___lldiv@divisor+2)),c
 25384  003506  322D               	rrcf	((c:___lldiv@divisor+1)),c
 25385  003508  322C               	rrcf	((c:___lldiv@divisor)),c
 25386  00350A  322B               	line	27
 25387                           	
 25388                           l5098:
 25389  00350C                     	decfsz	((c:___lldiv@counter)),c
 25390  00350C  2E33               	
 25391                           	goto	l5088
 25392  00350E  EF62  F01A         	goto	l1254
 25393  003512  EF8B  F01A         	
 25394                           l1260:
 25395  003516                     	line	28
 25396                           	
 25397                           l1254:
 25398  003516                     	line	29
 25399                           	movff	(c:___lldiv@quotient),(c:?___lldiv)
 25400  003516  C02F  F027         	movff	(c:___lldiv@quotient+1),(c:?___lldiv+1)
 25401  00351A  C030  F028         	movff	(c:___lldiv@quotient+2),(c:?___lldiv+2)
 25402  00351E  C031  F029         	movff	(c:___lldiv@quotient+3),(c:?___lldiv+3)
 25403  003522  C032  F02A         	line	30
 25404                           	
 25405                           l1261:
 25406  003526                     	return	;funcret
 25407  003526  0012               	opt stack 0
 25408                           GLOBAL	__end_of___lldiv
 25409                           	__end_of___lldiv:
 25410  003528                     	signat	___lldiv,8316
 25411                           	global	_irq
 25412                           
 25413 ;; *************** function _irq *****************
 25414 ;; Defined at:
 25415 ;;		line 58 in file "main.c"
 25416 ;; Parameters:    Size  Location     Type
 25417 ;;		None
 25418 ;; Auto vars:     Size  Location     Type
 25419 ;;		None
 25420 ;; Return value:  Size  Location     Type
 25421 ;;                  1    wreg      void 
 25422 ;; Registers used:
 25423 ;;		wreg, status,2, status,0, cstack
 25424 ;; Tracked objects:
 25425 ;;		On entry : 0/0
 25426 ;;		On exit  : 0/0
 25427 ;;		Unchanged: 0/0
 25428 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25429 ;;      Params:         0       0       0       0       0       0       0       0       0       0
 25430 ;;      Locals:         0       0       0       0       0       0       0       0       0       0
 25431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0
 25432 ;;      Totals:         0       0       0       0       0       0       0       0       0       0
 25433 ;;Total ram usage:        0 bytes
 25434 ;; Hardware stack levels used:    1
 25435 ;; Hardware stack levels required when called:    1
 25436 ;; This function calls:
 25437 ;;		_intt1_1ms
 25438 ;; This function is called by:
 25439 ;;		Interrupt level 2
 25440 ;; This function uses a non-reentrant model
 25441 ;;
 25442                           psect	intcode,class=CODE,space=0,reloc=2
 25443                           global __pintcode
 25444                           __pintcode:
 25445  000008                     psect	intcode
 25446                           	file	"main.c"
 25447                           	line	58
 25448                           	global	__size_of_irq
 25449                           	__size_of_irq	equ	__end_of_irq-_irq
 25450  0000                     	
 25451                           _irq:
 25452  000008                     ;incstack = 0
 25453                           	opt	stack 25
 25454                           	bsf int$flags,1,c ;set compiler interrupt flag (level 2)
 25455  000008  825E               	global	int_func
 25456                           	call	int_func,f	;refresh shadow registers
 25457  00000A  ED43  F020         psect	intcode_body,class=CODE,space=0,reloc=2
 25458                           global __pintcode_body
 25459                           __pintcode_body:
 25460  004086                     int_func:
 25461  004086                     
 25462                           	pop	; remove dummy address from shadow register refresh
 25463  004086  0006               	line	60
 25464                           	
 25465                           i2l3154:
 25466  004088                     ;main.c: 60:     INTCONbits.GIE = 0;
 25467                           	bcf	((c:4082)),c,7	;volatile
 25468  004088  9EF2               	line	61
 25469                           ;main.c: 61:     if(PIR1bits.TMR1IF && PIE1bits.TMR1IE)
 25470                           	btfss	((c:3998)),c,0	;volatile
 25471  00408A  A09E               	goto	i2u152_41
 25472  00408C  EF4A  F020         	goto	i2u152_40
 25473  004090  EF4C  F020         i2u152_41:
 25474  004094                     	goto	i2l3162
 25475  004094  EF58  F020         i2u152_40:
 25476  004098                     	
 25477                           i2l3156:
 25478  004098                     	btfss	((c:3997)),c,0	;volatile
 25479  004098  A09D               	goto	i2u153_41
 25480  00409A  EF51  F020         	goto	i2u153_40
 25481  00409E  EF53  F020         i2u153_41:
 25482  0040A2                     	goto	i2l3162
 25483  0040A2  EF58  F020         i2u153_40:
 25484  0040A6                     	line	63
 25485                           	
 25486                           i2l3158:
 25487  0040A6                     ;main.c: 62:     {;main.c: 63:         PIR1bits.TMR1IF = 0;
 25488                           	bcf	((c:3998)),c,0	;volatile
 25489  0040A6  909E               	line	65
 25490                           	
 25491                           i2l3160:
 25492  0040A8                     ;main.c: 65:         intt1_1ms();
 25493                           	call	_intt1_1ms	;wreg free
 25494  0040A8  ECDF  F01F         	goto	i2l3162
 25495  0040AC  EF58  F020         	line	66
 25496                           ;main.c: 66:     }
 25497                           	
 25498                           i2l151:
 25499  0040B0                     	line	67
 25500                           	
 25501                           i2l3162:
 25502  0040B0                     ;main.c: 67:     INTCONbits.GIE = 1;
 25503                           	bsf	((c:4082)),c,7	;volatile
 25504  0040B0  8EF2               	line	68
 25505                           	
 25506                           i2l152:
 25507  0040B2                     	bcf int$flags,1,c ;clear compiler interrupt flag (level 2)
 25508  0040B2  925E               	retfie f
 25509  0040B4  0011               	opt stack 0
 25510                           GLOBAL	__end_of_irq
 25511                           	__end_of_irq:
 25512  0040B6                     	signat	_irq,89
 25513                           	global	_intt1_1ms
 25514                           
 25515 ;; *************** function _intt1_1ms *****************
 25516 ;; Defined at:
 25517 ;;		line 5 in file "timer1.c"
 25518 ;; Parameters:    Size  Location     Type
 25519 ;;		None
 25520 ;; Auto vars:     Size  Location     Type
 25521 ;;		None
 25522 ;; Return value:  Size  Location     Type
 25523 ;;                  1    wreg      void 
 25524 ;; Registers used:
 25525 ;;		wreg, status,2, status,0
 25526 ;; Tracked objects:
 25527 ;;		On entry : 0/0
 25528 ;;		On exit  : 0/0
 25529 ;;		Unchanged: 0/0
 25530 ;; Data sizes:     COMRAM  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25531 ;;      Params:         0       0       0       0       0       0       0       0       0       0
 25532 ;;      Locals:         0       0       0       0       0       0       0       0       0       0
 25533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0
 25534 ;;      Totals:         0       0       0       0       0       0       0       0       0       0
 25535 ;;Total ram usage:        0 bytes
 25536 ;; Hardware stack levels used:    1
 25537 ;; This function calls:
 25538 ;;		Nothing
 25539 ;; This function is called by:
 25540 ;;		_irq
 25541 ;; This function uses a non-reentrant model
 25542 ;;
 25543                           psect	text82,class=CODE,space=0,reloc=2,group=0
 25544                           	file	"timer1.c"
 25545                           	line	5
 25546                           global __ptext82
 25547                           __ptext82:
 25548  003FBE                     psect	text82
 25549                           	file	"timer1.c"
 25550                           	line	5
 25551                           	global	__size_of_intt1_1ms
 25552                           	__size_of_intt1_1ms	equ	__end_of_intt1_1ms-_intt1_1ms
 25553  0000                     	
 25554                           _intt1_1ms:
 25555  003FBE                     ;incstack = 0
 25556                           	opt	stack 25
 25557                           	line	7
 25558                           	
 25559                           i2l2462:
 25560  003FBE                     ;timer1.c: 7:     TMR1H = ((65536-625)>>8) & 0x00FF;
 25561                           	movlw	low(0FDh)
 25562  003FBE  0EFD               	movwf	((c:4047)),c	;volatile
 25563  003FC0  6ECF               	line	8
 25564                           ;timer1.c: 8:     TMR1L = (65536-625) & 0x00FF;
 25565                           	movlw	low(08Fh)
 25566  003FC2  0E8F               	movwf	((c:4046)),c	;volatile
 25567  003FC4  6ECE               	line	10
 25568                           	
 25569                           i2l2464:
 25570  003FC6                     ;timer1.c: 10:     if(t1cont)
 25571                           	movf	((c:_t1cont)),c,w
 25572  003FC6  5001               iorwf	((c:_t1cont+1)),c,w
 25573  003FC8  1002               iorwf	((c:_t1cont+2)),c,w
 25574  003FCA  1003               iorwf	((c:_t1cont+3)),c,w
 25575  003FCC  1004               	btfsc	status,2
 25576  003FCE  B4D8               	goto	i2u78_41
 25577  003FD0  EFEC  F01F         	goto	i2u78_40
 25578  003FD4  EFEE  F01F         
 25579                           i2u78_41:
 25580  003FD8                     	goto	i2l1061
 25581  003FD8  EFF5  F01F         i2u78_40:
 25582  003FDC                     	line	11
 25583                           	
 25584                           i2l2466:
 25585  003FDC                     ;timer1.c: 11:         --t1cont;
 25586                           	decf	((c:_t1cont)),c
 25587  003FDC  0601               	movlw	0
 25588  003FDE  0E00               	subwfb	((c:_t1cont+1)),c
 25589  003FE0  5A02               	subwfb	((c:_t1cont+2)),c
 25590  003FE2  5A03               	subwfb	((c:_t1cont+3)),c
 25591  003FE4  5A04               	goto	i2l1063
 25592  003FE6  EFF8  F01F         	line	12
 25593                           ;timer1.c: 12:     else
 25594                           	
 25595                           i2l1061:
 25596  003FEA                     	line	13
 25597                           ;timer1.c: 13:         T1CONbits.TMR1ON = 0;
 25598                           	bcf	((c:4045)),c,0	;volatile
 25599  003FEA  90CD               	goto	i2l1063
 25600  003FEC  EFF8  F01F         	
 25601                           i2l1062:
 25602  003FF0                     	line	14
 25603                           	
 25604                           i2l1063:
 25605  003FF0                     	return	;funcret
 25606  003FF0  0012               	opt stack 0
 25607                           GLOBAL	__end_of_intt1_1ms
 25608                           	__end_of_intt1_1ms:
 25609  003FF2                     	signat	_intt1_1ms,89
 25610                           psect	mediumconst
 25611                           	db 0	; dummy byte at the end
 25612  007FFF  00                 	global	__mediumconst
 25613                           	GLOBAL	__activetblptr
 25614                           __activetblptr	EQU	2
 25615  0000                     	psect	intsave_regs,class=BIGRAM,space=1,noexec
 25616                           	file ""
 25617                           	line	0
 25618                           psect	text83,class=CODE,space=0,reloc=2,group=0
 25619                           global __ptext83
 25620                           __ptext83:
 25621  000000                     fp__wifi_init:
 25622  000000                     	file ""
 25623                           	line	0
 25624                           psect	text83
 25625                           fp__initEUSART:
 25626  000000                     	file ""
 25627                           	line	0
 25628                           psect	text83
 25629                           fp__salvar_receita:
 25630  000000                     	file ""
 25631                           	line	0
 25632                           psect	text83
 25633                           fp__dispLCD_num:
 25634  000000                     	file ""
 25635                           	line	0
 25636                           psect	text83
 25637                           fp__formatar_receitas:
 25638  000000                     	file ""
 25639                           	line	0
 25640                           psect	text83
 25641                           fp__dispLCD_str:
 25642  000000                     	file ""
 25643                           	line	0
 25644                           psect	text83
 25645                           fp__dispLCD_init:
 25646  000000                     	file ""
 25647                           	line	0
 25648                           psect	text83
 25649                           fp__dispLCD_clr:
 25650  000000                     	file ""
 25651                           	line	0
 25652                           psect	text83
 25653                           fp__dispLCD:
 25654  000000                     	file ""
 25655                           	line	0
 25656                           psect	text83
 25657                           fp__deletar_receita:
 25658  000000                     	file ""
 25659                           	line	0
 25660                           psect	text83
 25661                           fp__buscar_receita:
 25662  000000                     	PSECT	rparam,class=COMRAM,space=1,noexec
 25663                           	GLOBAL	__Lrparam
 25664                           	FNCONF	rparam,??,?
 25665                           	GLOBAL	___rparam_used
 25666                           	___rparam_used EQU 1
 25667  0000                     	GLOBAL	___param_bank
 25668                           	___param_bank EQU 0
 25669  0000                     GLOBAL	__Lparam, __Hparam
 25670                           GLOBAL	__Lrparam, __Hrparam
 25671                           __Lparam	EQU	__Lrparam
 25672  0000                     __Hparam	EQU	__Hrparam
 25673  0000                            psect   temp,common,ovrld,class=COMRAM,space=1
 25674                           	global	btemp
 25675                           btemp:
 25676  00005E                     	ds	1
 25677  00005E                     	global	int$flags
 25678                           	int$flags	set btemp
 25679  0000                     	global	wtemp8
 25680                           	wtemp8 set btemp+1
 25681  0000                     	global	ttemp5
 25682                           	ttemp5 set btemp+1
 25683  0000                     	global	ttemp6
 25684                           	ttemp6 set btemp+4
 25685  0000                     	global	ttemp7
 25686                           	ttemp7 set btemp+8
 25687  0000                     	end


Data Sizes:
    Strings     958
    Constant    0
    Data        135
    BSS         40
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     32      93
    BANK0h          101     93      95
    BANK0l           57      0      52
    BANK1           256      0      60
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    S85$3$0	PTR unsigned char  size(2) Largest target is 0

    S145$1$0	PTR const unsigned char  size(2) Largest target is 40
		 -> STR_46(CODE[14]), STR_45(CODE[9]), STR_44(CODE[15]), STR_43(CODE[40]), 
		 -> STR_42(CODE[21]), STR_41(CODE[14]), STR_40(CODE[15]), STR_39(CODE[18]), 
		 -> STR_38(CODE[11]), STR_37(CODE[11]), Wifi_connect@str(COMRAM[40]), STR_36(CODE[14]), 
		 -> STR_35(CODE[14]), STR_34(CODE[14]), STR_33(CODE[14]), 

    S145$2$0	PTR unsigned char  size(2) Largest target is 0

    S145$4$1	PTR const unsigned char  size(2) Largest target is 0

    S145$4$0	PTR const unsigned char  size(2) Largest target is 0

    S1648$7$1	PTR const unsigned char  size(2) Largest target is 0

    S1648$7$0	PTR const unsigned char  size(2) Largest target is 0

    S85$0$1	PTR unsigned char  size(2) Largest target is 18
		 -> fila(COMRAM[18]), 

    S85$1$1	PTR unsigned char  size(2) Largest target is 16
		 -> main@vetor_aux(BANK0h[16]), 

    S29$1$0	PTR const unsigned char  size(2) Largest target is 83
		 -> STR_27(CODE[78]), STR_26(CODE[62]), STR_15(CODE[81]), STR_4(CODE[83]), 

    S29$2$2	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_32(CODE[21]), STR_31(CODE[21]), STR_30(CODE[21]), STR_29(CODE[2]), 
		 -> STR_28(CODE[2]), STR_25(CODE[21]), STR_24(CODE[21]), STR_23(CODE[21]), 
		 -> STR_22(CODE[21]), STR_21(CODE[21]), STR_20(CODE[8]), STR_19(CODE[21]), 
		 -> STR_18(CODE[21]), STR_17(CODE[21]), STR_16(CODE[21]), STR_14(CODE[21]), 
		 -> STR_13(CODE[21]), STR_12(CODE[2]), STR_11(CODE[2]), STR_10(CODE[21]), 
		 -> STR_9(CODE[21]), STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), 
		 -> STR_5(CODE[21]), STR_3(CODE[21]), STR_2(CODE[2]), STR_1(CODE[2]), 

    S1648eusartT$search_string	PTR FTN(PTR const unsigned char ,PTR const unsigned char ,)int  size(2) Largest target is 2
		 -> search(), 

    eusart.search_string	PTR FTN(PTR const unsigned char ,PTR const unsigned char ,)int  size(2) Largest target is 2
		 -> search(), 

    S1648eusartT$init	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> initEUSART(), 

    eusart.init	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> initEUSART(), 

    S1648eusartT$txSTATUS	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> txStatusEUSART(), 

    eusart.txSTATUS	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> txStatusEUSART(), 

    S1648eusartT$tx	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> txEUSART(), 

    eusart.tx	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> txEUSART(), 

    S1648eusartT$rxResetERROR	PTR FTN()void  size(2) Largest target is 1
		 -> rxResetErrorEUSART(), 

    eusart.rxResetERROR	PTR FTN()void  size(2) Largest target is 1
		 -> rxResetErrorEUSART(), 

    S1648eusartT$rxERROR	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> rxErrorEUSART(), 

    eusart.rxERROR	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> rxErrorEUSART(), 

    S1648eusartT$rxSTATUS	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> rxStatusEUSART(), 

    eusart.rxSTATUS	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> rxStatusEUSART(), 

    S1648eusartT$rx	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> rxEUSART(), 

    eusart.rx	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> rxEUSART(), 

    initSerialIO@ptrOut	PTR unsigned char  size(2) Largest target is 1
		 -> main@vetorOut(BANK0h[1]), 

    initSerialIO@ptrIn	PTR unsigned char  size(2) Largest target is 1
		 -> main@vetorIn(BANK0h[1]), 

    ptrSerialOut	PTR unsigned char  size(2) Largest target is 1
		 -> NULL(NULL[0]), main@vetorOut(BANK0h[1]), 

    ptrSerialIn	PTR unsigned char  size(2) Largest target is 1
		 -> NULL(NULL[0]), main@vetorIn(BANK0h[1]), 

    dignum_apagar@ptrNum	PTR unsigned int  size(2) Largest target is 2
		 -> main@ciclos(BANK0h[2]), main@num(BANK0h[2]), 

    dignum_conc@ptrNum	PTR unsigned int  size(2) Largest target is 2
		 -> main@ciclos(BANK0h[2]), main@num(BANK0h[2]), 

    decodifica@d	PTR unsigned char  size(2) Largest target is 18
		 -> printExec@passo(COMRAM[1]), fifo_print@comando(COMRAM[1]), fila(COMRAM[18]), main@vetor_aux(BANK0h[16]), 
		 -> main@auxPasso(BANK0h[1]), 

    codifica@dado	PTR unsigned char  size(2) Largest target is 2047
		 -> fifo_add_control@c(COMRAM[1]), fifo_add_tempo@t(COMRAM[1]), fifo_add@passo(COMRAM[1]), RAM(DATA[2047]), 

    salva_atuadores_init@pt	PTR unsigned char  size(2) Largest target is 4
		 -> salva_atuadores_init@condi_init(COMRAM[4]), 

    buscar_dado@data	PTR unsigned char  size(2) Largest target is 1
		 -> main@init_cond(BANK0h[1]), 

    buscar_receita@data	PTR unsigned char  size(2) Largest target is 16
		 -> main@vetor_aux(BANK0h[16]), 

    salvar_receita@data	PTR unsigned char  size(2) Largest target is 18
		 -> fila(COMRAM[18]), 

    dispLCD_str@str	PTR const unsigned char  size(2) Largest target is 83
		 -> STR_27(CODE[78]), STR_26(CODE[62]), STR_15(CODE[81]), STR_4(CODE[83]), 

    dispLCD@str	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_32(CODE[21]), STR_31(CODE[21]), STR_30(CODE[21]), STR_29(CODE[2]), 
		 -> STR_28(CODE[2]), STR_25(CODE[21]), STR_24(CODE[21]), STR_23(CODE[21]), 
		 -> STR_22(CODE[21]), STR_21(CODE[21]), STR_20(CODE[8]), STR_19(CODE[21]), 
		 -> STR_18(CODE[21]), STR_17(CODE[21]), STR_16(CODE[21]), STR_14(CODE[21]), 
		 -> STR_13(CODE[21]), STR_12(CODE[2]), STR_11(CODE[2]), STR_10(CODE[21]), 
		 -> STR_9(CODE[21]), STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), 
		 -> STR_5(CODE[21]), STR_3(CODE[21]), STR_2(CODE[2]), STR_1(CODE[2]), 

    ler_sensor@ptr	PTR unsigned char  size(2) Largest target is 1
		 -> main@vetorIn(BANK0h[1]), 

    set_passo@ptr	PTR unsigned char  size(2) Largest target is 1
		 -> main@vetorOut(BANK0h[1]), 

    sp__fifo_adrs	PTR unsigned char  size(2) Largest target is 18
		 -> fila(COMRAM[18]), 

    main@ptr_664	PTR unsigned char  size(2) Largest target is 16
		 -> main@vetor_aux(BANK0h[16]), 

    main@ptr_645	PTR unsigned char  size(2) Largest target is 16
		 -> main@vetor_aux(BANK0h[16]), 

    main@pt	PTR unsigned char  size(2) Largest target is 16
		 -> main@vetor_aux(BANK0h[16]), 

    main@ptr	PTR unsigned char  size(2) Largest target is 20
		 -> main@lema(BANK0h[20]), 

    S145$cipsend	PTR FTN()void  size(2) Largest target is 1
		 -> Wifi_cipsend(), 

    wifi.cipsend	PTR FTN()void  size(2) Largest target is 1
		 -> Wifi_cipsend(), 

    S145$config_servidor	PTR FTN()void  size(2) Largest target is 1
		 -> Wifi_config_servidor(), 

    wifi.config_servidor	PTR FTN()void  size(2) Largest target is 1
		 -> Wifi_config_servidor(), 

    S145$scan	PTR FTN()void  size(2) Largest target is 1
		 -> Wifi_scan(), 

    wifi.scan	PTR FTN()void  size(2) Largest target is 1
		 -> Wifi_scan(), 

    S145$autoconnect	PTR FTN()void  size(2) Largest target is 1
		 -> Wifi_autoconnect(), 

    wifi.autoconnect	PTR FTN()void  size(2) Largest target is 1
		 -> Wifi_autoconnect(), 

    S145$ip	PTR FTN()void  size(2) Largest target is 1
		 -> Wifi_ip(), 

    wifi.ip	PTR FTN()void  size(2) Largest target is 1
		 -> Wifi_ip(), 

    S145$connect	PTR FTN(PTR const unsigned char ,PTR const unsigned char ,)void  size(2) Largest target is 1
		 -> Wifi_connect(), 

    wifi.connect	PTR FTN(PTR const unsigned char ,PTR const unsigned char ,)void  size(2) Largest target is 1
		 -> Wifi_connect(), 

    S145$mode	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Wifi_mode(), 

    wifi.mode	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Wifi_mode(), 

    S145$receive	PTR FTN(PTR unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> wifi_receive(), 

    wifi.receive	PTR FTN(PTR unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> wifi_receive(), 

    S145$send	PTR FTN(PTR const unsigned char ,)void  size(2) Largest target is 1
		 -> wifi_send(), 

    wifi.send	PTR FTN(PTR const unsigned char ,)void  size(2) Largest target is 1
		 -> wifi_send(), 

    S145$init	PTR FTN(long ,)void  size(2) Largest target is 1
		 -> wifi_init(), 

    wifi.init	PTR FTN(long ,)void  size(2) Largest target is 1
		 -> wifi_init(), 

    S85$formatar	PTR FTN()void  size(2) Largest target is 1
		 -> formatar_receitas(), 

    EEPROM.formatar	PTR FTN()void  size(2) Largest target is 1
		 -> formatar_receitas(), 

    S85$livre	PTR FTN(PTR unsigned char ,)void  size(2) Largest target is 1
		 -> receita_livre(), 

    EEPROM.livre	PTR FTN(PTR unsigned char ,)void  size(2) Largest target is 1
		 -> receita_livre(), 

    S85$deletar	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> deletar_receita(), 

    EEPROM.deletar	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> deletar_receita(), 

    S85$buscar	PTR FTN(unsigned char ,PTR unsigned char ,)void  size(2) Largest target is 1
		 -> buscar_receita(), 

    EEPROM.buscar	PTR FTN(unsigned char ,PTR unsigned char ,)void  size(2) Largest target is 1
		 -> buscar_receita(), 

    S85$salvar	PTR FTN(unsigned char ,PTR unsigned char ,)void  size(2) Largest target is 1
		 -> salvar_receita(), 

    EEPROM.salvar	PTR FTN(unsigned char ,PTR unsigned char ,)void  size(2) Largest target is 1
		 -> salvar_receita(), 

    S29$clr	PTR FTN()void  size(2) Largest target is 1
		 -> dispLCD_clr(), 

    IHM.clr	PTR FTN()void  size(2) Largest target is 1
		 -> dispLCD_clr(), 

    S29$printv	PTR FTN(unsigned char ,unsigned char ,int ,unsigned char ,)void  size(2) Largest target is 1
		 -> dispLCD_num(), 

    IHM.printv	PTR FTN(unsigned char ,unsigned char ,int ,unsigned char ,)void  size(2) Largest target is 1
		 -> dispLCD_num(), 

    S29$printpos	PTR FTN(unsigned char ,unsigned char ,PTR const unsigned char ,)void  size(2) Largest target is 1
		 -> dispLCD(), 

    IHM.printpos	PTR FTN(unsigned char ,unsigned char ,PTR const unsigned char ,)void  size(2) Largest target is 1
		 -> dispLCD(), 

    S29$print	PTR FTN(PTR const unsigned char ,)void  size(2) Largest target is 1
		 -> dispLCD_str(), 

    IHM.print	PTR FTN(PTR const unsigned char ,)void  size(2) Largest target is 1
		 -> dispLCD_str(), 

    S29$init	PTR FTN()void  size(2) Largest target is 1
		 -> dispLCD_init(), 

    IHM.init	PTR FTN()void  size(2) Largest target is 1
		 -> dispLCD_init(), 


Critical Paths under _main in COMRAM

    _main->_printExec
    _wifi_init->_initEUSART
    _initEUSART->___lldiv
    _teclado_borda->_teclado_scan
    _setT1->___wmul
    _serialIOscan->_serialIObyteShift
    _salvar_receita->___awmod
    _salvar_dado->___awmod
    _salva_atuadores_init->_ler_atuador
    _printExec->_dispLCD_num
    _posAtual->_fifo_lerPos
    _dispLCD_num->_dignum_tam
    _manipula_atuadores_init->_alt_atuador
    _formatar_receitas->_EEPROM_write
    _fifo_print->___awdiv
    _fifo_delete->_fifo_alinharPrint
    _fifo_add_tempo->_fifo_alinharPrint
    _fifo_add_control->_fifo_alinharPrint
    _fifo_add->_fifo_alinharPrint
    _fifo_alinharPrint->_dignum_tam
    _dignum_tam->___awdiv
    _dispLCD_str->_dispLCD_lincol
    _dispLCD_init->_delay
    _dispLCD_clr->_dispLCD_instReg
    _dispLCD->_dispLCD_lincol
    _dispLCD_lincol->_dispLCD_instReg
    _dignum_conc->___wmul
    _dignum_apagar->___lwdiv
    _deletar_receita->_end_receita
    _buscar_receita->___awmod
    _buscar_dado->___awmod
    ___aldiv->___lmul
    _MCP4725->___aldiv
    _dac_write->_delay
    _dac_init->_delay
    _I2C_init->___lldiv

Critical Paths under _irq in COMRAM

    None.

Critical Paths under _main in BANK0h

    None.

Critical Paths under _irq in BANK0h

    None.

Critical Paths under _main in BANK0l

    None.

Critical Paths under _irq in BANK0l

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _irq in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _irq in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _irq in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _irq in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _irq in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _irq in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _irq in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                96    96      0   74765
                                             30 COMRAM     2     2      0
                                              0 BANK0h    93    93      0
                           _I2C_init
                            _MCP4725
                            ___aldiv
                            ___awmod
                             ___lmul
                             ___wmul
                      _addContCiclos
                    _addIndicePassos
                        _alt_atuador
                        _buscar_dado
                     _buscar_receita *
                         _decodifica
                              _delay
                    _deletar_receita *
                      _dignum_apagar
                        _dignum_conc
                            _dispLCD *
                        _dispLCD_clr *
                    _dispLCD_dataReg
                       _dispLCD_init
                     _dispLCD_lincol
                        _dispLCD_num *
                        _dispLCD_str *
                           _fifo_add
                     _fifo_add_ciclo
                   _fifo_add_control
                     _fifo_add_tempo
                          _fifo_adrs
                        _fifo_delete
                    _fifo_disponivel
                        _fifo_indice
               _fifo_indicePrint_dec
               _fifo_indicePrint_inc
                        _fifo_lerPos
                         _fifo_print
                           _fifo_tam
                  _formatar_receitas *
                          _getCiclos
                      _getContCiclos
                    _getIndicePassos
                       _initSerialIO
                     _init_atuadores
                        _ler_atuador
                         _ler_sensor
            _manipula_atuadores_init
                          _printExec
                    _resetContCiclos
                  _resetIndicePassos
               _salva_atuadores_init
                        _salvar_dado
                     _salvar_receita *
                       _serialIOscan
                              _setT1
                          _set_passo
                           _statusT1
                      _teclado_borda
                       _teclado_init
                        _timer1_init
                          _wifi_init
 ---------------------------------------------------------------------------------
 (1) _wifi_init                                            4     0      4     639
                                             21 COMRAM     4     0      4
                         _initEUSART *
 ---------------------------------------------------------------------------------
 (2) _initEUSART                                           8     4      4     541
                                             13 COMRAM     8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (1) _timer1_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _teclado_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _teclado_borda                                        2     2      0     296
                                              5 COMRAM     2     2      0
                       _teclado_scan
 ---------------------------------------------------------------------------------
 (2) _teclado_scan                                         5     5      0     204
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (1) _statusT1                                             4     0      4       0
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _set_passo                                            5     3      2     274
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _setT1                                                4     0      4     478
                                              6 COMRAM     4     0      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _serialIOscan                                         6     6      0     205
                                              3 COMRAM     6     6      0
                  _serialIObyteShift
                       _serialIOload
 ---------------------------------------------------------------------------------
 (2) _serialIOload                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _serialIObyteShift                                    3     3      0     114
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _salvar_receita                                       6     4      2    1089
                                              6 COMRAM     6     4      2
                       _EEPROM_write
                            ___awmod (ARG)
                        _end_receita
                          _fifo_adrs (ARG)
 ---------------------------------------------------------------------------------
 (1) _salvar_dado                                          5     3      2    1219
                                              6 COMRAM     5     3      2
                       _EEPROM_write
                            ___awmod (ARG)
                        _end_receita
 ---------------------------------------------------------------------------------
 (1) _salva_atuadores_init                                 8     8      0     235
                                              3 COMRAM     8     8      0
                        _ler_atuador
 ---------------------------------------------------------------------------------
 (2) _ler_atuador                                          3     3      0      22
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _resetIndicePassos                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _resetContCiclos                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _printExec                                            5     4      1   12960
                                             25 COMRAM     5     4      1
                         _decodifica
                         _dignum_tam
                    _dispLCD_dataReg
                     _dispLCD_lincol
                        _dispLCD_num
                           _posAtual
 ---------------------------------------------------------------------------------
 (2) _posAtual                                             2     2      0      68
                                              1 COMRAM     2     2      0
                        _fifo_lerPos
                    _getIndicePassos
 ---------------------------------------------------------------------------------
 (3) _getIndicePassos                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _fifo_lerPos                                          1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _dispLCD_num                                         14    10      4    7167
                                             11 COMRAM    14    10      4
                            ___awdiv
                            ___awmod
                         _dignum_tam (ARG)
                    _dispLCD_dataReg
                     _dispLCD_lincol
                        _fifo_indice (ARG)
                           _fifo_tam (ARG)
                      _getContCiclos (ARG)
                    _getIndicePassos (ARG)
 ---------------------------------------------------------------------------------
 (1) _manipula_atuadores_init                              3     3      0     136
                                              3 COMRAM     3     3      0
                        _alt_atuador
 ---------------------------------------------------------------------------------
 (1) _ler_sensor                                           5     3      2     274
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _init_atuadores                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initSerialIO                                         5     0      5     294
                                              0 COMRAM     5     0      5
 ---------------------------------------------------------------------------------
 (1) _getContCiclos                                        2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _getCiclos                                            4     2      2      25
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _formatar_receitas                                    1     1      0     372
                                              2 COMRAM     1     1      0
                       _EEPROM_write
 ---------------------------------------------------------------------------------
 (1) _fifo_tam                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _fifo_print                                           9     9      0    7013
                                              8 COMRAM     9     9      0
                            ___awdiv
                            ___awmod
                         _decodifica
                    _dispLCD_dataReg
                     _dispLCD_lincol
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    1968
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _fifo_indicePrint_inc                                 7     7      0       0
                                              0 COMRAM     7     7      0
 ---------------------------------------------------------------------------------
 (1) _fifo_indicePrint_dec                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _fifo_indice                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _fifo_disponivel                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _fifo_delete                                          2     2      0    4395
                                             15 COMRAM     2     2      0
                        _alt_atuador
                           _codifica
                         _decodifica
                  _fifo_alinharPrint
 ---------------------------------------------------------------------------------
 (2) _decodifica                                           4     2      2    1426
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _alt_atuador                                          3     3      0      22
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _fifo_adrs                                            2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _fifo_add_tempo                                       1     1      0    3035
                                             15 COMRAM     1     1      0
                           _codifica
                  _fifo_alinharPrint
 ---------------------------------------------------------------------------------
 (1) _fifo_add_control                                     1     1      0    3013
                                             15 COMRAM     1     1      0
                           _codifica
                  _fifo_alinharPrint
 ---------------------------------------------------------------------------------
 (1) _fifo_add_ciclo                                       2     0      2     120
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _fifo_add                                             1     1      0    3035
                                             15 COMRAM     1     1      0
                           _codifica
                  _fifo_alinharPrint
 ---------------------------------------------------------------------------------
 (2) _fifo_alinharPrint                                    4     4      0    2357
                                             11 COMRAM     4     4      0
                         _dignum_tam
 ---------------------------------------------------------------------------------
 (2) _dignum_tam                                           3     1      2    2041
                                              8 COMRAM     3     1      2
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1364
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _codifica                                             5     3      2     590
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _dispLCD_str                                          4     2      2    1733
                                              7 COMRAM     4     2      2
                    _dispLCD_dataReg
                     _dispLCD_lincol
 ---------------------------------------------------------------------------------
 (1) _dispLCD_init                                         0     0      0    1415
                              _delay
                    _dispLCD_instReg
 ---------------------------------------------------------------------------------
 (1) _dispLCD_clr                                          0     0      0     176
                    _dispLCD_instReg
 ---------------------------------------------------------------------------------
 (1) _dispLCD                                              5     2      3    4971
                                              7 COMRAM     5     2      3
                    _dispLCD_dataReg
                     _dispLCD_lincol
 ---------------------------------------------------------------------------------
 (3) _dispLCD_lincol                                       5     4      1    1386
                                              2 COMRAM     5     4      1
                    _dispLCD_instReg
 ---------------------------------------------------------------------------------
 (4) _dispLCD_instReg                                      2     2      0     176
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _dispLCD_dataReg                                      2     2      0      44
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _dignum_conc                                          7     5      2     757
                                              6 COMRAM     7     5      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     463
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _dignum_apagar                                        2     0      2     540
                                              7 COMRAM     2     0      2
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     268
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _deletar_receita                                      4     4      0     939
                                              4 COMRAM     4     4      0
                       _EEPROM_write
                        _end_receita
 ---------------------------------------------------------------------------------
 (2) _EEPROM_write                                         2     1      1     348
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _buscar_receita                                       6     4      2     763
                                              6 COMRAM     6     4      2
                        _EEPROM_read
                            ___awmod (ARG)
                        _end_receita
 ---------------------------------------------------------------------------------
 (1) _buscar_dado                                          6     3      3     893
                                              6 COMRAM     6     3      3
                        _EEPROM_read
                            ___awmod (ARG)
                        _end_receita
 ---------------------------------------------------------------------------------
 (2) _end_receita                                          4     2      2     478
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _EEPROM_read                                          1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _addIndicePassos                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _addContCiclos                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              12     4      8     370
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) ___aldiv                                             14     6      8     452
                                             12 COMRAM    14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _MCP4725                                              2     0      2    4207
                                             26 COMRAM     2     0      2
                           _I2C_stop
                            ___aldiv (ARG)
                             ___lmul (ARG)
                           _dac_init
                          _dac_write
                              _delay
 ---------------------------------------------------------------------------------
 (2) _dac_write                                            5     3      2    1533
                                              3 COMRAM     5     3      2
                    _I2C_ack_receive
                             _I2C_tx
                              _delay
 ---------------------------------------------------------------------------------
 (2) _dac_init                                             0     0      0    1261
                    _I2C_ack_receive
                          _I2C_start
                             _I2C_tx
                              _delay
 ---------------------------------------------------------------------------------
 (2) _delay                                                3     1      2    1239
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _I2C_tx                                               1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _I2C_start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_ack_receive                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_init                                             4     0      4     564
                                             13 COMRAM     4     0      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     466
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _irq                                                  0     0      0       0
                          _intt1_1ms
 ---------------------------------------------------------------------------------
 (6) _intt1_1ms                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_init
     ___lldiv
   _MCP4725
     _I2C_stop
     ___aldiv (ARG)
       ___lmul (ARG)
     ___lmul (ARG)
     _dac_init (ARG)
       _I2C_ack_receive
       _I2C_start
       _I2C_tx
       _delay
     _dac_write (ARG)
       _I2C_ack_receive
       _I2C_tx
       _delay
     _delay (ARG)
   ___aldiv
     ___lmul (ARG)
   ___awmod
   ___lmul
   ___wmul
   _addContCiclos
   _addIndicePassos
   _alt_atuador
   _buscar_dado
     _EEPROM_read
     ___awmod (ARG)
     _end_receita (ARG)
   _buscar_receita *
     _EEPROM_read
     ___awmod (ARG)
     _end_receita (ARG)
   _decodifica *
   _delay *
   _deletar_receita *
     _EEPROM_write
     _end_receita
   _dignum_apagar *
     ___lwdiv
   _dignum_conc *
     ___wmul
   _dispLCD *
     _dispLCD_dataReg
     _dispLCD_lincol
       _dispLCD_instReg
   _dispLCD_clr *
     _dispLCD_instReg
   _dispLCD_dataReg *
   _dispLCD_init *
     _delay
     _dispLCD_instReg
   _dispLCD_lincol *
     _dispLCD_instReg
   _dispLCD_num *
     ___awdiv
     ___awmod
     _dignum_tam (ARG)
       ___awdiv
     _dispLCD_dataReg (ARG)
     _dispLCD_lincol (ARG)
       _dispLCD_instReg
     _fifo_indice (ARG)
     _fifo_tam (ARG)
     _getContCiclos (ARG)
     _getIndicePassos (ARG)
   _dispLCD_str *
     _dispLCD_dataReg
     _dispLCD_lincol
       _dispLCD_instReg
   _fifo_add *
     _codifica
     _fifo_alinharPrint
       _dignum_tam
         ___awdiv
   _fifo_add_ciclo *
   _fifo_add_control *
     _codifica
     _fifo_alinharPrint
       _dignum_tam
         ___awdiv
   _fifo_add_tempo *
     _codifica
     _fifo_alinharPrint
       _dignum_tam
         ___awdiv
   _fifo_adrs *
   _fifo_delete *
     _alt_atuador
     _codifica
     _decodifica
     _fifo_alinharPrint
       _dignum_tam
         ___awdiv
   _fifo_disponivel *
   _fifo_indice *
   _fifo_indicePrint_dec *
   _fifo_indicePrint_inc *
   _fifo_lerPos *
   _fifo_print *
     ___awdiv
     ___awmod
     _decodifica
     _dispLCD_dataReg
     _dispLCD_lincol
       _dispLCD_instReg
   _fifo_tam *
   _formatar_receitas *
     _EEPROM_write
   _getCiclos *
   _getContCiclos *
   _getIndicePassos *
   _initSerialIO *
   _init_atuadores *
   _ler_atuador *
   _ler_sensor *
   _manipula_atuadores_init *
     _alt_atuador
   _printExec *
     _decodifica
     _dignum_tam
       ___awdiv
     _dispLCD_dataReg
     _dispLCD_lincol
       _dispLCD_instReg
     _dispLCD_num
       ___awdiv
       ___awmod
       _dignum_tam (ARG)
         ___awdiv
       _dispLCD_dataReg (ARG)
       _dispLCD_lincol (ARG)
         _dispLCD_instReg
       _fifo_indice (ARG)
       _fifo_tam (ARG)
       _getContCiclos (ARG)
       _getIndicePassos (ARG)
     _posAtual
       _fifo_lerPos
       _getIndicePassos
   _resetContCiclos *
   _resetIndicePassos *
   _salva_atuadores_init *
     _ler_atuador
   _salvar_dado *
     _EEPROM_write
     ___awmod (ARG)
     _end_receita (ARG)
   _salvar_receita *
     _EEPROM_write
     ___awmod (ARG)
     _end_receita (ARG)
     _fifo_adrs (ARG)
   _serialIOscan *
     _serialIObyteShift
     _serialIOload
   _setT1 *
     ___wmul (ARG)
   _set_passo *
   _statusT1 *
   _teclado_borda *
     _teclado_scan
   _teclado_init *
   _timer1_init *
   _wifi_init *
     _initEUSART *
       ___lldiv

 _irq (ROOT)
   _intt1_1ms

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMh            765      0       0      23        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      21        0.0%
BANK7              100      0       0      22        0.0%
BITBANK6           100      0       0      19        0.0%
BANK6              100      0       0      20        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      17        0.0%
BITBANK4           100      0       0      14        0.0%
BANK4              100      0       0      15        0.0%
BITBANK3           100      0       0      12        0.0%
BANK3              100      0       0      13        0.0%
BITBANK2           100      0       0      10        0.0%
BANK2              100      0       0      11        0.0%
BITBANK1           100      0       0       8        0.0%
BANK1              100      0      3C       9       23.4%
BIGRAMl             98      0       0      24        0.0%
BANK0h              65     5D      5F       6       94.1%
BITBANK0h           65      0       0       4        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     20      5D       1       98.9%
BITBANK0l           39      0       0       5        0.0%
BANK0l              39      0      34       7       91.2%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     12C      18        0.0%
DATA                 0      0     12C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Tue Nov 16 16:01:43 2021

              ??_fifo_add_control 0036                     dac_write@code 002A  
                ??_fifo_add_tempo 0036     __size_of_fifo_indicePrint_dec 0018  
   __size_of_fifo_indicePrint_inc 0066                                 _d 0014  
                     _SSPSTATbits 000FC7                      ___awdiv@sign 002C  
         __end_of_dispLCD_dataReg 3D84               ___wmul@multiplicand 0029  
                     __CFG_BORV$3 000000                      printExec@col 0043  
                    printExec@ind 0040                    salvar_dado@col 002D  
                    __CFG_CP0$OFF 000000                    salvar_dado@aux 002F  
                    __CFG_CP1$OFF 000000                __size_of_I2C_start 0018  
                    __CFG_CP2$OFF 000000                      __CFG_CP3$OFF 000000  
                             l200 060E                               l201 0540  
                             l210 05A2                               l202 0510  
                             l203 0514                               l300 0ECE  
                             l220 06E0                               l212 05EC  
                             l204 0518                               l221 06C4  
                             l205 051C                               l310 0F5E  
                             l302 0F02                               l230 07B2  
                             l222 0712                               l214 0604  
                             l206 0520                               l311 0F68  
                             l231 07F2                               l223 06CC  
                             l215 063C                               l207 0524  
                             l400 1A9E                               l320 0FFA  
                             l304 0F10                               l240 0944  
                             l232 085A                               l224 06D4  
                             l216 064A                               l208 0528  
                             l401 1AD0                               l305 1064  
                             l321 1004                               l313 0F9E  
                             l241 0948                               l233 080E  
                             l225 0716                               l217 0690  
                             l209 052C                               l161 00A8  
                             l162 1D46                               l410 1CAC  
                             l402 1B52                               l330 1142  
                             l322 100E                               l306 0F1A  
                             l250 09BA                               l242 0996  
                             l234 0844                               l226 0784  
                             l218 06B4                               l170 0182  
                             l411 1CDC                               l403 1AEC  
                             l323 1068                               l315 0FAC  
                             l243 0C8E                               l251 09BE  
                             l235 0876                               l227 076A  
                             l219 06B8                               l171 01D2  
                             l163 00AC                               l420 1EFA  
                             l172 1E92                               l412 1CF6  
                             l404 1B3C                               l340 118E  
                             l332 1126                               l324 10C4  
                             l316 0FB6                               l308 0F50  
                             l260 0C4A                               l252 09C2  
                             l244 09A2                               l236 08DE  
                             l228 07AE                               l180 02D0  
                             l164 00C8                               l501 2F4C  
                             l413 1CFA                               l405 1BC8  
                             l325 11AE                               l341 1192  
                             l261 0B38                               l253 09C6  
                             l245 09A6                               l237 0892  
                             l229 0772                               l181 02D4  
                             l173 01F0                               l165 014A  
                             l502 2F6A                               l510 3B24  
                             l430 200E                               l422 1EF2  
                             l414 1D28                               l406 1BEC  
                             l350 14A8                               l342 119A  
                             l334 1132                               l326 10D0  
                             l318 0FEC                               l262 0C46  
                             l270 0B60                               l254 0A8A  
                             l246 09AA                               l238 08C8  
                             l190 0368                               l182 031C  
                             l166 00E4                               l503 2F6C  
                             l511 3B72                               l415 212A  
                             l431 2032                               l423 1EFE  
                             l407 1BF0                               l351 146E  
                             l335 1218                               l343 11A2  
                             l327 10D4                               l255 0C58  
                             l263 0B78                               l271 0B64  
                             l247 09AE                               l239 0920  
                             l191 03B2                               l183 0340  
                             l167 0134                               l512 3B2C  
                             l520 3D14                               l440 2118  
                             l432 2036                               l424 1F8A  
                             l416 1E9A                               l408 1C56  
                             l360 156C                               l352 14E2  
                             l344 121C                               l336 1146  
                             l328 10D8                               l280 0D04  
                             l272 0BDA                               l264 0B48  
                             l256 0A96                               l248 09B2  
                             l192 0452                               l184 0344  
                             l176 0272                               l168 0166  
                             l601 4162                               l513 3B34  
                             l521 3CFA                               l417 218E  
                             l433 205E                               l409 1CB4  
                             l361 1586                               l353 1476  
                             l345 122A                               l337 1154  
                             l329 10DC                               l281 0D84  
                             l265 0B4C                               l257 0AEA  
                             l249 09B6                               l193 0620  
                             l185 0374                               l177 0240  
                             l169 01E8                               l506 3D82  
                             l514 3B7E                               l522 3D34  
                             l530 2708                               l450 3060  
                             l442 210A                               l434 2062  
                             l426 1F24                               l418 1E9E  
                             l370 1688                               l362 158A  
                             l354 147E                               l346 12D4  
                             l338 1162                               l274 0C24  
                             l266 0B50                               l194 045E  
                             l186 0350                               l178 028E  
                             l523 3D34                               l531 2746  
                             l451 313E                               l443 2122  
                             l435 2078                               l427 200A  
                             l419 1EB0                               l371 168C  
                             l363 15F0                               l355 1486  
                             l347 12E0                               l339 1180  
                             l291 0E62                               l283 0DDE  
                             l267 0B54                               l259 0ACC  
                             l195 04B2                               l187 03AE  
                             l179 02AC                               l604 3CC2  
                             l540 282C                               l532 2756  
                             l700 362C                               l452 3070  
                             l444 2192                               l436 2080  
                             l428 1FE0                               l380 182E  
                             l372 1706                               l364 161E  
                             l356 14A0                               l348 142A  
                             l276 0C3C                               l268 0B58  
                             l188 0358                               l605 3CE4  
                             l509 3B40                               l517 3F88  
                             l533 274A                               l701 364C  
                             l453 3080                               l445 2196  
                             l437 20A8                               l429 2006  
                             l381 186E                               l373 169A  
                             l365 167C                               l357 14E6  
                             l349 1462                               l293 0E70  
                             l285 0DEC                               l277 0C74  
                             l269 0B5C                               l197 0494  
                             l189 0360                               l606 3CE4  
                             l550 3914                               l462 2BC2  
                             l470 2B68                               l710 3978  
                             l526 26BE                               l702 3652  
                             l454 3090                               l446 2196  
                             l438 20B6                               l390 18E0  
                             l382 18BC                               l374 16A2  
                             l366 1674                               l358 1544  
                             l278 0D00                               l198 0612  
                             l543 43BE                               l551 3914  
                             l471 2B80                               l463 2AF0  
                             l711 397C                               l535 279C  
                             l527 2728                               l455 30A0  
                             l439 20BA                               l383 1980  
                             l391 18E4                               l375 170A  
                             l367 16BC                               l359 153C  
                             l295 0EA4                               l287 0E20  
                             l279 0C82                               l199 0500  
                             l480 4054                               l800 3B18  
                             l472 2B98                               l464 2C1C  
                             l536 27A0                               l528 26D8  
                             l456 30B0                               l392 18E8  
                             l384 18C8                               l376 17BA  
                             l368 1680                               l481 4054  
                             l801 3B18                               l617 41FE  
                             l465 2C1C                               l473 2BB0  
                             l705 3938                               l537 27BA  
                             l529 2704                               l449 30E4  
                             l457 30C0                               l393 18EC  
                             l385 18CC                               l377 1840  
                             l369 1684                               l297 0EB2  
                             l289 0E2E                               l546 38F2  
                             l730 3452                               l810 24D4  
                             l618 420E                               l466 2B08  
                             l706 397C                               l538 27BA  
                             l458 30D0                               l394 19F2  
                             l386 18D0                               l378 1826  
                             l298 0EC2                               l547 38BE  
                             l731 346E                               l811 2206  
                             l619 420E                               l467 2B20  
                             l707 3964                               l539 282C  
                             l459 313E                               l395 1954  
                             l387 18D4                               l379 186A  
                             l299 101A                               l580 4010  
                             l548 38DA                               l740 28F8  
                             l804 42C6                               l812 24D0  
                             l820 233E                               l660 41CE  
                             l468 2B38                               l708 393C  
                             l396 19F6                               l388 18D8  
                             l581 401E                               l549 38EA  
                             l741 2874                               l725 436C  
                             l805 42C6                               l821 2388  
                             l813 22C4                               l469 2B50  
                             l709 395A                               l397 1A32  
                             l389 18DC                               l478 403E  
                             l902 41F0                               l646 42AE  
                             l582 4022                               l494 2EC0  
                             l734 2962                               l742 295A  
                             l750 2994                               l822 24C8  
                             l830 23E2                               l814 2268  
                             l654 43A6                               l590 3BDE  
                             l398 1AB4                               l479 4028  
                             l647 42AE                               l743 2884  
                             l735 2834                               l823 2488  
                             l831 23E6                               l815 2264  
                             l663 4394                               l719 427A  
                             l399 1A4E                               l576 435E  
                             l496 2EAE                               l744 2894  
                             l736 285C                               l760 29F2  
                             l728 346A                               l840 24E8  
                             l824 242A                               l832 23EA  
                             l816 22AE                               l808 21BC  
                             l680 3350                               l585 418A  
                             l593 3C10                               l497 2ECC  
                             l737 2994                               l745 28A4  
                             l761 2A02                               l753 29B6  
                             l729 33DE                               l841 24E8  
                             l817 24CC                               l825 23CE  
                             l809 21D8                               l657 43CA  
                             l681 336A                               l594 3C3C  
                             l498 2F0C                               l746 28B4  
                             l738 2860                               l850 3DFC  
                             l690 35C4                               l754 2AE8  
                             l762 2A12                               l834 240E  
                             l826 23D2                               l818 239E  
                             l666 4380                               l674 337C  
                             l930 3AAA                               l922 43C4  
                             l595 3C3C                               l579 4010  
                             l499 2F5E                               l747 28C4  
                             l739 2870                               l851 3DDA  
                             l771 3A48                               l763 2A22  
                             l755 29DE                               l827 23D6  
                             l819 2342                               l675 3302  
                             l931 3AB2                               l844 3DD0  
                             l748 28D4                               l852 3E12  
                             l860 2E08                               l772 3A44  
                             l684 358A                               l756 2AE4  
                             l764 2A32                               l836 241A  
                             l828 23DA                               l940 40E2  
                             l676 33B6                               l588 3BB0  
                             l669 43D0                               l749 28E4  
                             l853 3E18                               l861 2E2E  
                             l773 3A4C                               l781 3C8C  
                             l685 352E                               l757 2A76  
                             l765 2A42                               l837 2484  
                             l829 23DE                               l693 438A  
                             l677 33B6                               l589 3BDE  
                             l925 3A9A                               l862 2E4A  
                             l782 3C90                               l686 35C4  
                             l766 2A52                               l758 29E2  
                             l838 24C4                               l870 255A  
                             l678 331C                               l598 41AC  
                             l926 3A5C                               l934 37B2  
                             l847 4110                               l863 2E52  
                             l687 3544                               l759 2AE0  
                             l767 2A62                               l791 4294  
                             l839 24C0                               l871 2534  
                             l679 3336                               l927 3A78  
                             l935 376C                               l960 42CE  
                             l856 2D72                               l864 2E68  
                             l776 39E0                               l688 355A  
                             l768 2AE8                               l872 268A  
                             l880 2630                               l928 3A7A  
                             l936 37C8                               l961 42CE  
                             l857 2E68                               l785 439E  
                             l777 39DC                               l689 3570  
                             l881 2682                               l873 25CC  
                             l929 3A90                               l937 37CC  
                             l962 42DC                               l858 2DAA  
                             l778 39E4                               l794 43AE  
                             l882 267E                               l874 25A6  
                             l698 3638                               l963 42DE  
                             l859 2DE4                               l867 4260  
                             l875 2686                               l883 268A  
                             l699 360A                               l788 43B6  
                             l876 263A                               l957 3F52  
                             l981 42FE                               l797 3B10  
                             l982 42FE                               l798 3B04  
                             l878 2624                               l983 430C  
                             l975 421A                               l799 3B0C  
                             l984 430E                               l976 421A  
                             l896 3EDC                               l977 422C  
                             l978 422C                               l899 3E60  
                             l996 42E4                               l997 42E4  
                             l998 42F6                               l999 42F6  
                    __CFG_CPB$OFF 000000                               _IHM 0051  
                    __CFG_CPD$OFF 000000                      __CFG_BOR$OFF 000000  
              deletar_receita@aux 002B                               _irq 0008  
         __size_of_buscar_receita 005E                 fp__buscar_receita 0000  
         __end_of_dispLCD_instReg 2F6E                      ___awmod@sign 002C  
                             prod 000FF3                               tosl 000FFD  
                             wreg 000FE8                      __CFG_FOSC$HS 000000  
                 __end_of_MCP4725 41F2                   salvar_dado@data 002E  
                 salvar_dado@adrs 0031                  alt_atuador@tecla 0029  
                    __CFG_LVP$OFF 000000                      ?_buscar_dado 002D  
                    __CFG_WDT$OFF 000000                              l1020 321C  
                            l1021 3198                              l1022 3206  
                            l1030 3E9E                              l1014 4376  
                            l1023 31F0                              l1024 3222  
                            l1019 3160                              l1300 2C9C  
                            l1301 2CBE                              l1029 3E94  
                            l1302 2CC2                              l1303 2D00  
                            l1304 2D14                              l1072 434C  
                            l1305 2D3C                              l1137 38AA  
                            l1306 2D50                              l1066 4246  
                            l1227 413A                              l1260 3516  
                            l1236 37E2                              l1261 3526  
                            l1237 3804                              l1069 433A  
                            l1254 3516                              l1238 382E  
                            l1255 34AE                              l1239 383E  
                            l1175 4084                              l1256 349E  
                            l1257 34C0                              l1258 34C4  
                            l1450 3030                              l1259 3502  
                            l1451 2FDC                              l1452 2FD0  
                            l1453 2FEE                              l1461 3246  
                            l1454 2FF2                              l1470 32EE  
                            l1462 3260                              l1455 301C  
                            l1471 32FA                              l1463 32D2  
                            l1296 2C48                              l1720 3676  
                            l1456 302C                              l5000 3022  
                            l1448 2F90                              l1464 3286  
                            l1297 2C6E                              l1721 3694  
                            l1457 304C                              l1449 2FAE  
                            l1465 327A                              l5010 4024  
                            l1298 2D18                              l1722 3698  
                            l1458 3058                              l5002 3030  
                            l1466 3298                              l1299 2CAC  
                            l1723 36C2                              l1467 329C  
                            l5012 4028                              l1724 36D2  
                            l5020 3B2C                              l5004 3040  
                            l1468 32BE                              l5100 3224  
                            l1725 36DA                              l1469 32CE  
                            l5014 4038                              l1718 36D2  
                            l5022 3B34                              l5006 304C  
                            l5110 3254                              l5102 3228  
                            l1719 3682                              l5040 3D54  
                            l5024 3B3C                              l5016 3B1C  
                            l5008 3058                              l5120 329C  
                            l5112 3260                              l5104 3236  
                            l6000 2B98                              l5050 3D80  
                            l5042 3D5C                              l5034 3D38  
                            l5018 3B24                              l5026 3B40  
                            l5130 32E2                              l5122 32B2  
                            l5114 3272                              l5106 323E  
                            l6010 2BBA                              l6002 2BA8  
                            l5210 26BE                              l6020 4296  
                            l5044 3D5E                              l5036 3D3A  
                            l5028 3B72                              l5060 3DD2  
                            l5140 29B6                              l5132 32EE  
                            l5124 32BE                              l5116 327A  
                            l5108 3246                              l6012 2BBE  
                            l6004 2BAC                              l5220 2708  
                            l5212 26C8                              l5204 268E  
                            l5052 43A0                              l6022 42A8  
                            l5046 3D60                              l5038 3D52  
                            l5070 3E18                              l5062 3DDA  
                            l5310 2D56                              l5150 2A12  
                            l5142 29CE                              l5134 32FA  
                            l5126 32C4                              l5118 3286  
                            l6030 41BA                              l6006 2BB0  
                            l6014 2BC2                              l5230 2788  
                            l5222 2728                              l5214 26D0  
                            l5206 26A2                              l5054 43A6  
                            l5080 3480                              l5072 42C8  
                            l6120 37E2                              l6024 43CC  
                            l5240 4354                              l5048 3D76  
                            l6040 38BE                              l5064 3DF6  
                            l5320 2D96                              l5312 2D5A  
                            l5160 2A62                              l5152 2A22  
                            l5144 29E2                              l5136 2996  
                            l5128 32D2                              l6032 41C2  
                            l6008 2BB6                              l5232 27A0  
                            l5224 274A                              l5216 26D8  
                            l5208 26B2                              l5056 4264  
                            l5400 3148                              l7000 2074  
                            l6200 0090                              l5090 34CE  
                            l5082 3496                              l5074 4212  
                            l6130 2C22                              l6122 37F0  
                            l5242 4356                              l5250 3FF6  
                            l6042 38D0                              l5066 3DFC  
                            l5330 2DF4                              l5322 2DAA  
                            l5314 2D6E                              l5170 352A  
                            l5162 2A72                              l5154 2A32  
                            l5146 29F2                              l5138 29B2  
                            l6034 41CE                              l6026 41AE  
                            l5234 27B0                              l5226 2750  
                            l5218 26FE                              l5058 427A  
                            l6050 3B82                              l5410 3194  
                            l5402 315C                              l7010 20BA  
                            l7002 2080                              l6210 00C4  
                            l6202 0098                              l5092 34EC  
                            l5084 349E                              l5076 42E0  
                            l6140 2C66                              l6132 2C30  
                            l6124 3804                              l5244 4358  
                            l5260 4006                              l5252 3FFA  
                            l6044 38DA                              l6036 38AC  
                            l5068 3E12                              l5340 2E46  
                            l5332 2E04                              l5324 2DBA  
                            l5316 2D72                              l5308 2D52  
                            l5172 3586                              l5156 2A42  
                            l5148 2A02                              l5164 2A76  
                            l6028 41B4                              l5236 280E  
                            l5228 2756                              l5180 32FE  
                            l6060 3BC8                              l6052 3B94  
                            l5420 3206                              l5412 3198  
                            l5404 3160                              l5500 4240  
                            l7012 20CA                              l7020 2118  
                            l7004 209E                              l6300 0358  
                            l6220 0110                              l6212 00C8  
                            l6204 00A0                              l5094 34FC  
                            l5086 34AE                              l5078 3470  
                            l5510 3F26                              l6150 2CAC  
                            l6142 2C6E                              l6134 2C40  
                            l6126 380E                              l6118 37CE  
                            l5246 435E                              l5238 4350  
                            l6070 3C0C                              l5262 400A  
                            l5254 3FFE                              l6046 38EA  
                            l6038 38B0                              l5270 2834  
                            l5342 2E52                              l5334 2E1A  
                            l5326 2DCA                              l5318 2D86  
                            l5174 358A                              l5158 2A52  
                            l5350 425A                              l5190 336A  
                            l5182 3318                              l6062 3BCA  
                            l6054 3B98                              l5422 3208  
                            l5414 31C4                              l5406 317C  
                            l5502 4242                              l7022 2126  
                            l7014 20F0                              l7006 20A8  
                            l6310 03B2                              l6302 0360  
                            l6222 011C                              l6214 00CC  
                            l6230 014A                              l6206 00AC  
                            l5096 3502                              l5088 34C4  
                            l5512 3F4E                              l5360 3EB6  
                            l5520 41E4                              l6160 2D00  
                            l6152 2CC2                              l6144 2C7E  
                            l6136 2C48                              l6128 2C1E  
                            l5264 4164                              l6072 3C10  
                            l6064 3BE2                              l5256 4000  
                            l5248 3FF4                              l6080 3CA6  
                            l6048 38F2                              l5280 2894  
                            l5272 284C                              l5344 2E54  
                            l5336 2E2E                              l5328 2DE4  
                            l5600 3C74                              l5352 4260  
                            l5192 3370                              l5184 3332  
                            l6056 3BAC                              l5416 31F0  
                            l5408 3180                              l5424 321C  
                            l5504 4244                              l5440 3898  
                            l7016 210A                              l7008 20AC  
                            l7024 212A                              l6400 0772  
                            l6320 0416                              l6312 03C4  
                            l6304 0368                              l6240 017E  
                            l6232 014E                              l6224 0120  
                            l6216 00E0                              l6208 00B0  
                            l5098 350C                              l5514 3F50  
                            l5506 3F1A                              l5362 3EBA  
                            l5354 3EA0                              l5370 3E38  
                            l6170 2D50                              l6162 2D0A  
                            l6154 2CCC                              l6146 2C94  
                            l6138 2C56                              l5266 418A  
                            l6074 3C26                              l6066 3BF4  
                            l5258 4002                              l6090 3CD0  
                            l6082 3CAA                              l5290 28E4  
                            l5282 28A4                              l5274 2860  
                            l5338 2E42                              l5602 3C8C  
                            l5610 39AE                              l5530 40CC  
                            l5346 424A                              l5194 3374  
                            l5186 334C                              l6058 3BB0  
                            l5426 3222                              l5418 31F2  
                            l5450 38A2                              l5442 389A  
                            l5434 3840                              l5522 4056  
                            l7018 210E                              l6410 07D0  
                            l6402 0776                              l6330 0494  
                            l6322 0448                              l6314 03CC  
                            l6306 0370                              l6250 01D2  
                            l6242 0182                              l6234 0162  
                            l6226 0134                              l6218 00E4  
                            l5508 3F1E                              l5364 3ECC  
                            l5356 3EA4                              l5372 3E3C  
                            l5516 41D0                              l6156 2CEA  
                            l6148 2C9C                              l6164 2D18  
                            l6076 3C28                              l6068 3BF8  
                            l6084 3CBE                              l5460 412E  
                            l5292 28F4                              l5284 28B4  
                            l5276 2874                              l5268 2830  
                            l5620 39F8                              l5612 39C2  
                            l5604 3980                              l5700 2322  
                            l6092 41F2                              l5540 40D6  
                            l5532 40CE                              l5524 40B6  
                            l5348 424E                              l5196 3378  
                            l5188 3366                              l5380 43C0  
                            l5452 38A4                              l5444 389C  
                            l5436 3842                              l6500 0AD8  
                            l6420 07F6                              l6412 07D4  
                            l6404 0780                              l6340 04EE  
                            l6332 04A0                              l6324 0452  
                            l6316 03F4                              l6308 0374  
                            l6260 022E                              l6252 01D4  
                            l6244 01AE                              l6236 0166  
                            l6228 0136                              l6180 0052  
                            l6172 0012                              l5366 3ED0  
                            l5358 3EB0                              l5374 3E48  
                            l5518 41E0                              l6166 2D28  
                            l6158 2CFA                              l6086 3CC2  
                            l6078 3C94                              l5470 3676  
                            l5462 413A                              l5286 28C4  
                            l5278 2884                              l5294 28F8  
                            l5622 3A08                              l5630 3A48  
                            l5614 39C4                              l5606 3990  
                            l5710 236C                              l5702 2332  
                            l6094 41FA                              l5550 40E0  
                            l5542 40D8                              l5534 40D0  
                            l5526 40B8                              l5198 337C  
                            l5390 3A90                              l5382 3A50  
                            l5454 38A6                              l5446 389E  
                            l5438 3896                              l6510 0B38  
                            l6502 0AEA                              l6430 0830  
                            l6422 080A                              l6414 07DA  
                            l6406 0784                              l6350 05A2  
                            l6342 0500                              l6334 04B2  
                            l6326 045E                              l6318 03FE  
                            l6270 025C                              l6262 0234  
                            l6246 01BA                              l6238 016A  
                            l6254 01E8                              l6190 0068  
                            l6182 0058                              l6174 0016  
                            l5376 3E50                              l5368 3E1A  
                            l6168 2D3C                              l6088 3CCE  
                            l5480 36BC                              l5472 3682  
                            l5464 3654                              l5296 295E  
                            l5288 28D4                              l5624 3A16  
                            l5608 39A0                              l5616 39E0  
                            l5712 236E                              l5704 2338  
                            l5720 239E                              l5640 21CC  
                            l5632 219A                              l6096 41FE  
                            l5544 40DA                              l5536 40D2  
                            l5528 40C8                              l5800 3652  
                            l5384 3A5E                              l5392 3A9A  
                            l5552 4328                              l5560 3E6A  
                            l5456 38A8                              l5448 38A0  
                            l6600 0F02                              l6520 0C06  
                            l6512 0B64                              l6504 0B02  
                            l6440 0872                              l6432 0844  
                            l6424 080E                              l6416 07EE  
                            l6408 07B2                              l6360 0616  
                            l6352 05CE                              l6344 052C  
                            l6336 04CA                              l6328 0476  
                            l6280 02AC                              l6272 0268  
                            l6264 0240                              l6256 01F0  
                            l6248 01BE                              l6192 006C  
                            l6184 005C                              l6176 001A  
                            l5378 42F8                              l5482 36C2  
                            l5474 3698                              l5466 365C  
                            l5458 4112                              l4930 2E98  
                            l5298 2962                              l5626 3A2A  
                            l5618 39E8                              l5802 427C  
                            l5810 3AFE                              l5730 23F4  
                            l5722 23AE                              l5714 2388  
                            l5706 2342                              l5650 21FE  
                            l5642 21D2                              l5634 21AA  
                            l6098 4208                              l5546 40DC  
                            l5538 40D4                              l5394 3AAC  
                            l5386 3A72                              l5554 433C  
                            l5570 3E9E                              l5562 3E70  
                            l5490 436E                              l6610 0F5E  
                            l6602 0F10                              l6522 0C24  
                            l6514 0B74                              l6506 0B1A  
                            l6530 0C58                              l6450 08A4  
                            l6442 0876                              l6434 0846  
                            l6426 0820                              l6418 07F2  
                            l6370 064E                              l6354 05EC  
                            l6346 053C                              l6338 04E2  
                            l6362 0620                              l6290 0312  
                            l6282 02C6                              l6266 024A  
                            l6274 0272                              l6258 021C  
                            l6194 0084                              l6186 0060  
                            l6178 003E                              l5572 413E  
                            l5484 36C8                              l5476 369E  
                            l5468 366E                              l5900 40E4  
                            l4940 2EE2                              l4932 2EAE  
                            l4924 2E6C                              l5628 3A2C  
                            l5804 4294                              l5820 43B0  
                            l5812 3B04                              l5740 2426  
                            l5732 2402                              l5724 23BE  
                            l5716 2390                              l5708 2352  
                            l5660 2230                              l5652 2206  
                            l5644 21D8                              l5636 21AE  
                            l5548 40DE                              l5556 4382  
                            l5580 3934                              l5396 3AB2  
                            l5388 3A88                              l5564 3E80  
                            l5492 422E                              l6700 1304  
                            l6620 0FB6                              l6612 0F68  
                            l6604 0F1A                              l6532 0C74  
                            l6524 0C3C                              l6516 0B78  
                            l6508 0B26                              l6540 0C8E  
                            l6452 08B0                              l6444 087A  
                            l6460 08DE                              l6428 082C  
                            l6436 085A                              l6380 06AA  
                            l6372 0660                              l6364 063C  
                            l6356 0604                              l6348 0540  
                            l6292 031C                              l6284 02D4  
                            l6276 028E                              l6268 0258  
                            l6196 0088                              l6188 0064  
                            l5574 4150                              l5478 36B4  
                            l4942 2EE4                              l4950 2F0C  
                            l4934 2EC0                              l4926 2E6E  
                            l5486 3F54                              l5910 439A  
                            l5830 33DE                              l5822 43B6  
                            l5814 3B10                              l5806 3AB4  
                            l5750 24AA                              l5734 240E  
                            l5726 23EA                              l5742 242A  
                            l5718 2398                              l5662 2232  
                            l5670 2268                              l5654 2216  
                            l5646 21EC                              l5638 21BC  
                            l5582 393C                              l5590 3964  
                            l5902 418E                              l5398 3140  
                            l5566 3E90                              l5558 3E62  
                            l5494 4230                              l6710 137A  
                            l6702 1330                              l6630 100E  
                            l6622 0FDE                              l6614 0F90  
                            l6606 0F42                              l6550 0D84  
                            l6542 0D04                              l6534 0C78  
                            l6518 0BDA                              l6526 0C4A  
                            l6470 0948                              l6462 0902  
                            l6454 08B4                              l6446 088E  
                            l6438 085E                              l6390 06DC  
                            l6382 06B8                              l6374 0672  
                            l6366 0640                              l6358 0612  
                            l6294 0336                              l6286 02D8  
                            l6278 02A2                              l6198 008C  
                            l4960 2F4C                              l4952 2F0E  
                            l4944 2EFC                              l4936 2ECC  
                            l4928 2E86                              l5488 3F64  
                            l5592 3C40                              l5904 4360  
                            l5832 33FE                              l5824 33B8  
                            l5816 42B0                              l5808 3AC4  
                            l5752 24B2                              l5736 241A  
                            l5728 23F2                              l5744 2488  
                            l5680 22B6                              l5672 2278  
                            l5664 2248                              l5656 221A  
                            l5648 21EE                              l5840 43AE  
                            l5584 3950                              l5576 3918  
                            l5920 37AC                              l5912 375C  
                            l5568 3E98                              l5496 4234  
                            l6800 1728                              l6720 1440  
                            l6712 13B4                              l6704 133A  
                            l6640 108E                              l6632 1016  
                            l6624 0FEC                              l6616 0F9E  
                            l6608 0F50                              l6560 0DEC  
                            l6552 0DB0                              l6544 0D22  
                            l6536 0C82                              l6528 0C4E  
                            l6480 09EA                              l6472 0966  
                            l6464 0916                              l6456 08C8  
                            l6448 0892                              l6384 06C4  
                            l6392 06E0                              l6376 0686  
                            l6368 064A                              l6296 0344  
                            l6288 02FE                              ?_irq 0027  
                            l4962 2F5E                              l4954 2F24  
                            l4946 2EFE                              l4938 2ECE  
                            l5770 3CFA                              l4970 2F80  
                            l5594 3C50                              l5906 436C  
                            l5834 3452                              l5826 33C8  
                            l5818 42C0                              l5754 24B4  
                            l5746 249A                              l5738 2420  
                            l5690 22F0                              l5682 22BE  
                            l5674 2292                              l5666 2258  
                            l5658 222A                              l5586 395A  
                            l5578 3920                              l5850 252E  
                            l5842 24EC                              l5922 37B2  
                            l5914 3760                              l5930 305C  
                            l5498 423E                              l6810 17F4  
                            l6802 1754                              l6730 1486  
                            l6722 1462                              l6714 13EE  
                            l6706 1344                              l6650 1110  
                            l6642 10BA                              l6626 0FFA  
                            l6618 0FAC                              l6634 101A  
                            l6570 0E2E                              l6562 0DF2  
                            l6554 0DBA                              l6546 0D4E  
                            l6538 0C8A                              l6490 0A80  
                            l6482 09F2                              l6474 098C  
                            l6466 0920                              l6458 08CA  
                            l6394 0716                              l6386 06CC  
                            l6378 0690                              l6298 0350  
                            l4964 2F6A                              l4956 2F26  
                            l4948 2F06                              l5772 3D0A  
                            l5764 43B8                              l4980 2FAE  
                            l4972 2F88                              l5908 4396  
                            l5596 3C5E                              l5828 33D8  
                            l5836 346A                              l5756 24BA  
                            l5748 24A6                              l5692 22F4  
                            l5676 2294                              l5668 225E  
                            l5684 22C4                              l5588 395C  
                            l5860 257A                              l5852 2534  
                            l5844 24F4                              l5780 35D6  
                            l5924 37C8                              l5916 3764  
                            l5940 30A0                              l5932 3060  
                            l6900 1BBE                              l6820 183C  
                            l6812 181A                              l6804 17B0  
                            l6740 14EE                              l6732 1498  
                            l6724 146E                              l6708 134E  
                            l6716 142A                              l6660 1154  
                            l6652 1132                              l6644 10C4  
                            l6636 1068                              l6628 1004  
                            l6580 0E70                              l6572 0E34  
                            l6564 0DFC                              l6556 0DD0  
                            l6548 0D7A                              l6492 0A8A  
                            l6484 0A2C                              l6476 0996  
                            l6468 093A                              l6396 075E  
                            l6388 06D4                              l4958 2F36  
                            l5774 3D0E                              l5766 3CE8  
                            l4990 2FF2                              l4982 2FB6  
                            l4974 2F90                              l4966 2F6E  
                            l5598 3C72                              l5694 2304  
                            l5686 22D4                              l5678 22AE  
                            l5758 24D4                              l5838 43A8  
                            l5862 2586                              l5870 25CC  
                            l5854 2550                              l5846 2504  
                            l5926 43C6                              l5790 3622  
                            l5782 35F6                              l5918 376C  
                            l5942 30B0                              l5934 3070  
                            l5950 30E4                              l6910 1C4C  
                            l6902 1BC8                              l6830 18BC  
                            l6814 1826                              l6822 1840  
                            l6806 17BA                              l6742 14FE  
                            l6750 1544                              l6734 14A4  
                            l6726 1476                              l6718 143C  
                            l6670 1184                              l6662 1158  
                            l6654 1138                              l6646 10DC  
                            l6638 1070                              l6590 0EB2  
                            l6582 0E76                              l6574 0E3E  
                            l6566 0E12                              l6558 0DDE  
                            l6494 0A96                              l6486 0A36  
                            l6478 09C6                              l6398 076A  
                            l5776 3D14                              l5768 3CEC  
                            l4992 2FF8                              l4984 2FC8  
                            l4976 2F9E                              l4968 2F72  
                            l5696 230A                              l5688 22E4  
                            l5960 2B00                              l5880 260A  
                            l5872 25DC                              l5864 25A0  
                            l5848 2514                              l5856 255A  
                            l5928 4378                              l5792 362C  
                            l5784 35FE                              l5944 30C0  
                            l5936 3080                              l6920 1C8C  
                            l6912 1C56                              l6904 1BE2  
                            l6840 1972                              l6832 18EC  
                            l6824 186E                              l6816 182E  
                            l6808 17C8                              l6760 158A  
                            l6752 1556                              l6744 150E  
                            l6728 147E                              l6736 14A8  
                            l6672 1192                              l6664 1162  
                            l6656 1146                              l6648 10F0  
                            l6680 11AE                              l6592 0EB8  
                            l6584 0E80                              l6576 0E54  
                            l6568 0E20                              l6496 0AAE  
                            l6488 0A4E                              l4994 300E  
                            l4986 2FD0                              l4978 2FA6  
                            l5698 230C                              l5970 2B20  
                            l5962 2B04                              l5890 264C  
                            l5882 2618                              l5874 25EC  
                            l5866 25A6                              l5858 256A  
                            l5794 3630                              l5786 3602  
                            l5778 35C6                              l5946 30D0  
                            l5938 3090                              l6930 1CDC  
                            l6922 1CA4                              l6914 1C5E  
                            l6906 1BF0                              l6850 1A1A  
                            l6842 197C                              l6834 190C  
                            l6826 188C                              l6818 1832  
                            l6770 1614                              l6762 15B6  
                            l6754 1562                              l6746 151C  
                            l6738 14E6                              l6690 1290  
                            l6682 121C                              l6674 119A  
                            l6666 1176                              l6658 114A  
                            l6594 0EC2                              l6586 0E96  
                            l6578 0E62                              l6498 0ACC  
                            l4996 3016                              l4988 2FDC  
                            l5980 2B4C                              l5972 2B30  
                            l5964 2B08                              l5956 2AEC  
                            l5892 2658                              l5884 2624  
                            l5876 25F8                              l5868 25C2  
                            l5788 360A                              l5796 3638  
                            l5948 30E0                              l6940 1D28  
                            l6932 1CEE                              l6916 1C6E  
                            l6924 1CB4                              l6908 1C1C  
                            l6860 1A4E                              l6852 1A2E  
                            l6836 194A                              l6844 1980  
                            l6828 18B2                              l6780 1654  
                            l6772 161E                              l6764 15E6  
                            l6756 156C                              l6748 1534  
                            l6692 12CA                              l6684 1220  
                            l6676 11A2                              l6668 1180  
                            l6596 0ECE                              l6588 0EA4  
                            l7820 06F4                              l4998 301C  
                            l5990 2B78                              l5982 2B50  
                            l5974 2B34                              l5966 2B18  
                            l5958 2AF0                              l5894 2674  
                            l5886 2630                              l5878 2602  
                            l5798 364C                              l6942 1D34  
                            l6934 1CFA                              l6926 1CC6  
                            l6918 1C7E                              l6870 1AA0  
                            l6862 1A7A                              l6854 1A32  
                            l6846 19F6                              l6838 1954  
                            l6790 16A2                              l6782 166C  
                            l6774 1626                              l6766 15F0  
                            l6758 157E                              l6694 12D4  
                            l6686 122A                              l7830 11C2  
                            l6678 11AA                              l6598 0EF4  
                            l7822 0798                              l6950 1E92  
                            l5896 438C                              l5992 2B7C  
                            l5984 2B60                              l5976 2B38  
                            l5968 2B1C                              l5888 263A  
                            l6960 1ECC                              l6952 1E9E  
                            l7840 1D5C                              l6944 1D3A  
                            l6936 1D00                              l6928 1CD2  
                            l6880 1AD4                              l6864 1A86  
                            l6856 1A36                              l6872 1AB4  
                            l6848 1A14                              l6792 16AE  
                            l6784 168C                              l6776 1636  
                            l6768 15F6                              l7832 14BC  
                            l6696 12E0                              l6688 1256  
                            l7824 0B94                              l7816 0388  
                            l5898 3D86                              l7850 243E  
                            l5994 2B80                              l5986 2B64  
                            l5978 2B48                              l7842 2140  
                            l6970 1F24                              l6962 1EDE  
                            l6954 1EA6                              l6946 1D42  
                            l6938 1D1E                              l6890 1B28  
                            l6882 1AE8                              l6874 1AB8  
                            l6866 1A8A                              l6858 1A4A  
                            l7834 16D0                              l6794 16B8  
                            l6786 1690                              l6778 1646  
                            l6698 12F2                              l7826 0CA2  
                            l7818 055C                              l7860 3B54  
                            l7852 2A92                              l5996 2B90  
                            l5988 2B68                              l7844 30F8  
                            l6980 1FAA                              l6972 1F30  
                            l6964 1EF2                              l6956 1EB0  
                            l6892 1B3C                              l6884 1AEC  
                            l6876 1ACC                              l6868 1A9E  
                            l7836 1854                              l6788 169A  
                            l6796 16BC                              l7828 102E  
                            l6948 1D46                              l7854 359E  
                            l5998 2B94                              l7846 3390  
                            l6990 200E                              l6982 1FAE  
                            l6974 1F80                              l6966 1EFE  
                            l6958 1EBC                              l6894 1B3E  
                            l6886 1B18                              l6878 1AD0  
                            l7838 1994                              l6798 170A  
                            l7856 2914                              l7848 2BD6  
                            l6992 2028                              l6984 1FD6  
                            l6976 1F8A                              l6968 1F0E  
                            l6888 1B24                              l6896 1B52  
                            l7858 2976                              l6994 2036  
                            l6978 1F9A                              l6986 1FE0  
                            l6898 1BAA                              l6996 2054  
                            l6988 1FFC                              l6998 2062  
         __end_of_getIndicePassos 43A8                              STR_1 7FFD  
                            STR_2 7DC1                              STR_3 7DED  
                            STR_4 7C41                              STR_5 7F28  
                            STR_6 7EAA                              STR_7 7EFE  
                            STR_8 7E95                              STR_9 7E41  
                            u3200 2F48                              u4000 3990  
                            u3201 2F44                              u4001 398C  
                            u3210 2F80                              u4010 39A0  
                            u3211 2F7C                              u4011 399C  
                            u3300 4228                              u3220 2F9E  
                            u4020 39F8                              u4100 22D4  
                            u3301 4224                              u3221 2F9A  
                            u4021 39F4                              u4101 22D0  
                            u3310 42F2                              u3230 2FC8  
                            u4030 3A08                              u4110 22E4  
                            u3311 42EE                              u3231 2FC4  
                            u4031 3A04                              u4111 22E0  
                            u3320 3496                              u3160 2E98  
                            u4200 3D30                              u3240 2FEA  
                            u3400 32E2                              u4120 2304  
                            u4040 21CC                              u5000 08DA  
                            u3321 3492                              u3161 2E94  
                            u4201 3D2C                              u3241 2FE6  
                            u3401 32DE                              u4121 2300  
                            u4041 21C8                              u5001 08D6  
                            u3330 34BC                              u3170 2EAA  
                            u3250 300E                              u3410 29AE  
                            u4130 2332                              u4050 21FE  
                            u4210 3622                              u5010 093A  
                            u3331 34B8                              u3171 2EA6  
                            u3251 300A                              u3411 29AA  
                            u4131 232E                              u4051 21FA  
                            u4211 361E                              u5011 0936  
                            u3340 34EC                              u3180 2EE2  
                            u3260 3040                              u3420 29CE  
                            u4300 33FE                              u4140 2352  
                            u4060 2216                              u4220 3648  
                            u5100 0B1A                              u3341 34E8  
                            u3181 2EDE                              u3261 303C  
                            u3421 29CA                              u4301 33FA  
                            u4141 234E                              u4061 2212  
                            u4221 3644                              u5101 0B16  
                            u3270 4050                              u3190 2F36  
                            u3430 353E                              u4230 428E  
                            u3350 3236                              u4150 23AE  
                            u4070 222A                              u4310 2504  
                            u3510 3312                              u5110 0C06  
                            u3271 404C                              u3191 2F32  
                            u3431 3538                              u4231 4288  
                            u3351 3232                              u4151 23AA  
                            u4071 2226                              u4311 2500  
                            u3511 330C                              u5111 0C02  
                            u3280 3E0E                              u4240 4290  
                            u3360 3254                              u4160 23BE  
                            u4080 2258                              u3600 2788  
                            u4400 264C                              u4320 2514  
                            u3520 332C                              u5200 0E96  
                            u5120 0C70                              u3281 3E0A  
                            u3505 3582                              u3361 3250  
                            u4161 23BA                              u4081 2254  
                            u3601 2784                              u4401 2648  
                            u4321 2510                              u3521 3326  
                            u5201 0E92                              u5121 0C6C  
                            u3290 42DC                              u3450 3554  
                            u4250 3AC4                              u3370 3272  
                            u4170 2402                              u4090 2278  
                            u3610 2798                              u4330 252E  
                            u3530 3346                              u4410 37C4  
                            u5210 0EF4                              u5050 0A4E  
                            u3291 42D8                              u3451 354E  
                            u4251 3AC0                              u3371 326E  
                            u4171 23FE                              u4091 2274  
                            u3611 2794                              u4331 252A  
                            u3531 3340                              u4411 37C0  
                            u5211 0EF0                              u5051 0A4A  
                            u4420 42A8                              u4500 3CE0  
                            u3700 2DF4                              u4260 3AFE  
                            u3380 3294                              u4180 249A  
                            u3620 27B0                              u4340 256A  
                            u3540 3360                              u3516 3314  
                            u5220 0F42                              u5028 0952  
                            u4421 42A4                              u4501 3CDC  
                            u3701 2DF0                              u3445 3540  
                            u4261 3AFA                              u3381 3290  
                            u4181 2496                              u3621 27AC  
                            u4341 2566                              u3541 335A  
                            u5221 0F3E                              u5029 0966  
                            u4430 38D0                              u3710 2E04  
                            u3470 356A                              u4270 42C0  
                            u3390 32B2                              u4190 24E4  
                            u3630 2828                              u3550 269E  
                            u4350 257A                              u3526 332E  
                            u5230 0F90                              u5070 0AAE  
                            u5038 0978                              u4431 38CC  
                            u3711 2E00                              u3471 3564  
                            u4271 42BC                              u3391 32AE  
                            u4191 24E0                              u3631 2824  
                            u3551 2698                              u4351 2576  
                            u5231 0F8C                              u5071 0AAA  
                            u5039 098C                              u4600 2C30  
                            u3640 401E                              u4440 3910  
                            u3720 2E1A                              u4280 33C8  
                            u3560 26A0                              u4360 25A0  
                            u3536 3348                              u3800 3158  
                            u5400 143C                              u5240 0FDE  
                            u5080 0AC8                              u5048 09FC  
                            u4601 2C2C                              u3641 401A  
                            u4441 390C                              u3721 2E16  
                            u3465 3556                              u4281 33C4  
                            u4361 259C                              u3801 3154  
                            u5401 1438                              u5241 0FDA  
                            u5081 0AC4                              u5049 0A2C  
                            u4610 2C56                              u3650 284C  
                            u3730 2E3E                              u3490 3580  
                            u4290 33D8                              u3570 26B2  
                            u4370 25DC                              u3546 3362  
                            u4450 3BA8                              u5330 12F2  
                            u5170 0DD0                              u5138 0D0E  
                            u5090 0B02                              u4611 2C52  
                            u3651 2848                              u3731 2E3A  
                            u3491 357A                              u4291 33D4  
                            u3571 26AE                              u4371 25D8  
                            u4451 3BA4                              u5331 12EE  
                            u5171 0DCC                              u5139 0D22  
                            u5091 0AFE                              u4620 2C94  
                            u3900 366E                              u3740 2E64  
                            u3660 2D6A                              u3580 26FE  
                            u4380 25EC                              u4460 3BDA  
                            u3820 3190                              u5420 1498  
                            u5340 1304                              u5308 1234  
                            u5180 0E12                              u5148 0D2C  
                            u5068 0A58                              u4700 0146  
                            u4621 2C90                              u3901 366A  
                            u3741 2E60                              u3661 2D66  
                            u3485 356C                              u3581 26FA  
                            u4381 25E8                              u4461 3BD6  
                            u3821 318C                              u5421 1494  
                            u5341 1300                              u5309 1256  
                            u5181 0E0E                              u5149 0D4E  
                            u5069 0A80                              u4701 0142  
                            u4630 2CBA                              u4470 3C08  
                            u3910 3690                              u3670 2D96  
                            u3590 2742                              u4390 2618  
                            u3814 3172                              u5510 1636  
                            u5430 14FE                              u5318 1260  
                            u5270 10F0                              u5190 0E54  
                            u5158 0D58                              u4710 015E  
                            u4631 2CB6                              u4471 3C04  
                            u3911 368C                              u6127 2EB4  
                            u3671 2D92                              u3591 273E  
                            u4391 2614                              u3815 316E  
                            u5511 1632                              u5431 14FA  
                            u5319 1290                              u5271 10EC  
                            u5191 0E50                              u5159 0D7A  
                            u4711 015A                              u3760 430C  
                            u4640 2CEA                              u4480 3C38  
                            u3920 36B4                              u3680 2DBA  
                            u3840 31C4                              u5520 1646  
                            u5440 150E                              u5328 129A  
                            u5280 1110                              u5168 0D8E  
                            u4720 017A                              u3761 4308  
                            u4641 2CE6                              u4481 3C34  
                            u3921 36B0                              u6137 2EC2  
                            u3681 2DB6                              u3841 31C0  
                            u5521 1642                              u5441 150A  
                            u5329 12CA                              u5281 110C  
                            u5169 0DB0                              u4721 0176  
                            u4650 2D28                              u4490 3CBA  
                            u3690 2DCA                              u3770 3A72  
                            u3850 3202                              u3834 31AA  
                            u5530 166C                              u5450 1534  
                            u5418 144A                              u5290 1176  
                            u5258 107A                              u4810 0336  
                            u3755 3E26                              u4651 2D24  
                            u4491 3CB6                              u6147 2F00  
                            u3691 2DC6                              u3771 3A6E  
                            u3851 31FE                              u3835 31A6  
                            u5531 1668                              u5451 1530  
                            u5419 145E                              u5291 1172  
                            u5259 108E                              u4811 0332  
                            u4580 37F0                              u3780 3A88  
                            u3860 3218                              u3940 3E80  
                            u5700 1AC8                              u5508 1600  
                            u5460 1556                              u5268 1098  
                            u4900 0638                              u4740 01CE  
                            u4660 00C0                              u4581 37EC  
                            u6157 2F52                              u3781 3A84  
                            u3861 3214                              u3941 3E7C  
                            u5701 1AC4                              u5509 1614  
                            u5461 1552                              u5269 10BA  
                            u4901 0634                              u4741 01CA  
                            u4661 00BC                              u4590 382E  
                            u3790 3AAA                              u3950 3E90  
                            u5710 1AE4                              u5470 157E  
                            u5358 130E                              u4910 06AA  
                            u4830 0416                              u4750 01E4  
                            u4670 00DC                              u4591 382A  
                            u6167 2F60                              u3791 3AA6  
                            u3951 3E8C                              u5711 1AE0  
                            u5471 157A                              u5359 1330  
                            u4911 06A6                              u4831 0412  
                            u4751 01E0                              u4671 00D8  
                            u3960 3930                              u5800 1C6E  
                            u5608 1878                              u5368 1358  
                            u4808 02EA                              u6177 3D56  
                            u3961 392C                              u5801 1C6A  
                            u5609 188C                              u5369 137A  
                            u4809 02FE                              u3970 3950  
                            u3938 4070                              u5810 1C7E  
                            u5730 1B38                              u5650 1A2A  
                            u5618 189E                              u5378 1384  
                            u4930 07EA                              u4850 0476  
                            u4738 018C                              u4690 0130  
                            u6187 3D7A                              u3971 394C  
                            u3939 4084                              u5811 1C7A  
                            u5731 1B34                              u5651 1A26  
                            u5619 18B2                              u5379 13B4  
                            u4931 07E6                              u4851 0472  
                            u4771 0226                              u4739 01AE  
                            u4691 012C                              u3980 3974  
                            u5900 1F20                              u5820 1CA4  
                            u5740 1B4E                              u5660 1A46  
                            u5628 1912                              u5548 1714  
                            u5388 13BE                              u4940 0806  
                            u4860 0490                              u4828 03D6  
                            u4780 028A                              u6197 402E  
                            u3981 3970                              u5901 1F1C  
                            u5821 1CA0                              u5741 1B4A  
                            u5661 1A42                              u5629 194A  
                            u5549 1728                              u5389 13EE  
                            u4941 0802                              u4861 048C  
                            u4829 03F4                              u4781 0286  
                            u3990 3C50                              u5910 1F9A  
                            u5830 1CC6                              u5638 195E  
                            u5558 1732                              u5398 13F8  
                            u4950 0840                              u4870 04CA  
                            u4790 02C6                              u3991 3C4C  
                            u3895 3864                              u5911 1F96  
                            u5831 1CC2                              u5639 1972  
                            u5559 1754                              u5399 1426  
                            u4951 083C                              u4871 04C6  
                            u4791 02C2                              u5920 1FAA  
                            u5840 1CEE                              u5728 1AF6  
                            u5680 1A9A                              u5648 1A00  
                            u5568 175E                              u5488 1594  
                            u4960 0856                              u4928 07BC  
                            u4880 04E2                              u4848 0420  
                            u4768 01FA                              u4688 00EE  
                            u5921 1FA6                              u5841 1CEA  
                            u5729 1B18                              u5681 1A96  
                            u5649 1A14                              u5569 1784  
                            u5489 15B6                              u4961 0852  
                            u4929 07D0                              u4881 04DE  
                            u4849 0448                              u4769 021C  
                            u4689 0110                              u5930 2028  
                            u5770 1BE2                              u5690 1AB0  
                            u5578 178E                              u5498 15C0  
                            u4970 086E                              u4890 05CE  
                            u5931 2024                              u5771 1BDE  
                            u5691 1AAC                              u5579 17B0  
                            u5499 15E6                              u4971 086A  
                            u4891 05CA                              u5940 2054  
                            u5860 1ECC                              u5588 17CE  
                            u4980 088A                              u5941 2050  
                            u5861 1EC8                              u5589 17F4  
                            u4981 0886                              u5950 2074  
                            u5870 1EDE                              u5758 1B5C  
                            u5678 1A58                              u5598 1806  
                            u4990 08C4                              u5951 2070  
                            u5871 1EDA                              u5759 1B7E  
                            u5679 1A7A                              u5599 181A  
                            u4991 08C0                              u5960 209E  
                            u5880 1EEE                              u5768 1B88  
                            u5961 209A                              u5881 1EEA  
                            u5769 1BAA                              u5970 20CA  
                            u5890 1F0E                              u5858 1D0A  
                            u5971 20C6                              u5891 1F0A  
                            u5859 1D1E                              u5980 20F0  
                            u5788 1BFA                              u5981 20EC  
                            u5789 1C1C                              u5990 2106  
                            u5798 1C26                              u5991 2102  
                            u5799 1C4C                      __CFG_PWRT$ON 000000  
                     main@ptr_645 00B6                       main@ptr_664 00B8  
                            _fila 0015                              _main 0012  
                    fp__wifi_init 0000                              _wifi 0128  
                            fsr2h 000FDA                              indf1 000FE7  
                            indf2 000FDF                              fsr1l 000FE1  
                            fsr2l 000FD9                              btemp 005E  
                  ?_addContCiclos 0027                  __end_of_I2C_init 3F54  
                            prodh 000FF4                              prodl 000FF3  
                     main@vetorIn 00AD                              start 000E  
         __size_of_salvar_receita 0060                 fp__salvar_receita 0000  
                __end_of_I2C_stop 4310                     __CFG_IESO$OFF 000000  
               _formatar_receitas 41F2                      ___param_bank 000000  
                    ?_ler_atuador 0027                    printExec@passo 0044  
              ?_formatar_receitas 0027      __end_of_salva_atuadores_init 3654  
                           ??_irq 0027                     __CFG_PLLDIV$5 000000  
                 _addIndicePassos 4296                    __CFG_CCP2MX$ON 000000  
            __end_of_EEPROM_write 4024                      main@auxPasso 00BA  
                 __end_of___aldiv 2D52                             ?_main 0027  
                 __end_of___awdiv 305A                             _EEADR 000FA9  
                           STR_10 7D5C                             STR_11 7FFD  
                           STR_12 7DC1                             STR_20 7FF5  
                           STR_13 7E17                             STR_21 7E02  
                           STR_30 7E56                             STR_14 7E2C  
                           STR_22 7DC3                             STR_23 7F3D  
                           STR_31 7DD8                             STR_15 7C94  
                           STR_40 7F64                             STR_32 7F13  
                           STR_16 7EBF                             STR_24 7DAE  
                           STR_41 7F9E                             STR_33 7F90  
                           STR_25 7EE9                             STR_17 7E6B  
                           STR_34 7FAC                             STR_18 7E80  
                           STR_42 7D99                             STR_26 7D33  
                           STR_35 7FBA                             STR_19 7ED4  
                           STR_43 7D71                             STR_27 7CE5  
                           STR_28 7FFD                             STR_36 7F82  
                           STR_44 7F73                   __end_of___awmod 32FC  
                           STR_29 7DC1                             STR_45 7FEC  
                           STR_37 7FD6                             STR_38 7FE1  
                           STR_46 7FC8                             STR_39 7F52  
                 __end_of___lldiv 3528                   ___awdiv@divisor 0029  
             ??_formatar_receitas 0029                   __end_of___lwdiv 36DC  
                           i2l151 40B0                             i2l152 40B2  
                 ___awdiv@counter 002B                             _RCREG 000FAE  
                           _TMR1H 000FCF                             _TMR1L 000FCE  
                           _PORTD 000F83                     __CFG_USBDIV$1 000000  
                           _TRISD 000F95                             _TXREG 000FAD  
__size_of_manipula_atuadores_init 0068                     __CFG_WRT0$OFF 000000  
                   __CFG_WRT1$OFF 000000                     __CFG_WRT2$OFF 000000  
             ___lmul@multiplicand 002B                     __CFG_WRT3$OFF 000000  
                 __end_of_dispLCD 3D36                    _txStatusEUSART 000000  
                  __CFG_EBTR0$OFF 000000                    __CFG_FCMEN$OFF 000000  
                  __CFG_EBTR1$OFF 000000                    __CFG_EBTR2$OFF 000000  
                  __CFG_EBTR3$OFF 000000                     __CFG_WRTB$OFF 000000  
                   __CFG_WRTC$OFF 000000                     __CFG_WRTD$OFF 000000  
               ??_fifo_disponivel 0027             __end_of_teclado_borda 3EA0  
                  __CFG_EBTRB$OFF 000000                             _delay 4024  
                           _setT1 4328                   salvar_receita@i 0032  
                           main@i 00A1                             main@j 00A2  
                           pclath 000FFA                             tablat 000FF5  
                 _I2C_ack_receive 42E0                             plusw1 000FE3  
                           plusw2 000FDB                      main@vetorOut 00AE  
                           ttemp5 005F                             ttemp6 0062  
                           ttemp7 0066                             status 000FD8  
               __end_of_I2C_start 42E0                             wtemp8 005F  
                  __CFG_ICPRT$OFF 000000         __end_of_formatar_receitas 4210  
                 EEPROM_read@addr 0027                     _indice_passos 005B  
            __end_of_dispLCD_init 3F8A                    __CFG_MCLRE$OFF 000000  
            __size_of_EEPROM_read 0012                   __initialization 36DC  
                    __end_of_main 219A                  ?_dispLCD_dataReg 0027  
                          ??_main 0045                         ??_MCP4725 0043  
                   __activetblptr 000002                     ?_initSerialIO 0027  
            __size_of_dispLCD_clr 0008              __size_of_dispLCD_num 01A2  
            __size_of_dispLCD_str 006A              __size_of_alt_atuador 009E  
                ?_dispLCD_instReg 0027                            ?_delay 0027  
                    ?_salvar_dado 002D                            _ADCON1 000FC1  
                          ?_setT1 002D                            _EEDATA 000FA8  
                          _EECON2 000FA7                  ___awdiv@dividend 0027  
                          _I2C_tx 4210              __size_of_dignum_conc 004E  
                          _EEPROM 0047                  ?_getIndicePassos 0027  
                          i2l1061 3FEA                            i2l1062 3FF0  
                          i2l1063 3FF0                            i2l3160 40A8  
                          i2l3162 40B0                            i2l3154 4088  
                          i2l3156 4098                            i2l2462 3FBE  
                          i2l3158 40A6                            i2l2464 3FC6  
                          i2l2466 3FDC              __size_of_fifo_delete 00B8  
                __end_of_dac_init 3EDE                   ??_addContCiclos 0027  
            __size_of_end_receita 0028              __size_of_fifo_indice 0008  
            __size_of_fifo_lerPos 001A                            _SSPADD 000FC8  
                          _SSPBUF 000FC9                     main@init_cond 00B2  
                 ler_sensor@passo 002B                  __end_of_codifica 2996  
                  __CFG_XINST$OFF 000000                  __end_of_fifo_add 3A4E  
                __end_of_fifo_tam 43B0           __end_of_addIndicePassos 42B0  
                _Wifi_autoconnect 000000                            _t1cont 0001  
                          ___lmul 37CE                         ??___aldiv 003B  
                          ___wmul 4112                         ??___awdiv 002B  
                       ??___awmod 002B                            _ciclos 000F  
                       ??___lldiv 002F                 _fifo_alinharPrint 2D52  
                    ?_timer1_init 0027                         ??___lwdiv 002B  
                          _eusart 00D1                            delay@t 0027  
                          clear_0 3748                            _search 000000  
                ___awdiv@quotient 002D                            _teclas 00E1  
                 ___awmod@divisor 0029                ?_fifo_alinharPrint 0027  
                       ??_dispLCD 0031                   ___awmod@counter 002B  
                  ??_initSerialIO 002C                            main@pt 009D  
                    __pdataBANK0l 00BD                    _buscar_receita 3BE0  
                __end_of_posAtual 4262                            setT1@c 002D  
                    __pdataCOMRAM 0047                      __mediumconst 7C40  
                       ?_I2C_init 0034                            tblptrh 000FF7  
                          tblptrl 000FF6               ??_fifo_alinharPrint 0032  
                          tblptru 000FF8                         ?_I2C_stop 0027  
         __end_of_I2C_ack_receive 42F8             __end_of_getContCiclos 4396  
            _Wifi_config_servidor 000000                     main@vetor_aux 0076  
                __end_of_statusT1 434E            salva_atuadores_init@pt 002E  
            _salva_atuadores_init 35C6                        __accesstop 0060  
         __end_of__initialization 374E              __size_of_buscar_dado 0028  
                 __CFG_PBADEN$OFF 000000          __size_of_deletar_receita 0054  
              fp__deletar_receita 0000                 _serialIObyteShift 3A4E  
                  _salvar_receita 3B80        __size_of_formatar_receitas 001E  
         __size_of_dispLCD_lincol 0066                     ___rparam_used 000001  
                  __pcstackBANK0h 0060                ?_serialIObyteShift 0027  
              __size_of_dac_write 0048         __end_of_fifo_alinharPrint 2E6A  
                  __pcstackCOMRAM 0027             __size_of_EEPROM_write 0032  
        __size_of_resetContCiclos 000A                      __pidataBANK1 3EDE  
                   __end_of_delay 4056                     __end_of_setT1 433C  
               fifo_add_control@c 0036              __size_of_ler_atuador 00BC  
             ??_serialIObyteShift 0027            __end_of_buscar_receita 3C3E  
              __size_of_getCiclos 0022           _manipula_atuadores_init 3916  
       __size_of_fifo_add_control 0054                 initSerialIO@ptrIn 0027  
              __size_of_fifo_adrs 000E                           I2C_tx@b 0027  
                      ??_I2C_init 0038      __end_of_fifo_indicePrint_dec 42C8  
                      ??_I2C_stop 0027      __end_of_fifo_indicePrint_inc 3B1A  
                         ??_delay 0029                           ??_setT1 0031  
              teclado_borda@tecla 002D                           ?_I2C_tx 0027  
           ?_salva_atuadores_init 0027             __size_of_dispLCD_init 0036  
       __end_of_serialIObyteShift 3AB4            __end_of_salvar_receita 3BE0  
                      _decodifica 2996                     ?_teclado_init 0027  
                   ?_teclado_scan 0027                __size_of_intt1_1ms 0034  
                    _EEPROM_write 3FF2                  teclado_borda@aux 002C  
           __end_of_dignum_apagar 4112                  ?_addIndicePassos 0027  
                  main@contPassos 0074                           ?___lmul 0027  
                         ?___wmul 0027                   _fifo_disponivel 427C  
                  ___lmul@product 002F           serialIObyteShift@dataIn 0027  
                 ?_buscar_receita 002D                        _dignum_tam 3DD2  
              __size_of_set_passo 00E6                           _MCP4725 41D0  
                       ?_dac_init 0027                        _fifo_print 219A  
              __size_of_printExec 01A2                           _LCDbits 000F8A  
                    _dispLCD_init 3F54                __size_of_wifi_init 0030  
                ?_I2C_ack_receive 0027                 __end_of_dac_write 3E62  
                         i2u78_40 3FDC                           i2u78_41 3FD8  
                       ?_codifica 0027                         ?_fifo_add 0027  
                       ?_fifo_tam 0027                   __size_of_I2C_tx 001E  
            __size_of_salvar_dado 0022                    ??_teclado_init 0027  
                  ??_teclado_scan 0027                   __CFG_VREGEN$OFF 000000  
                 ?_salvar_receita 002D                     ?_serialIOload 0027  
                   ?_serialIOscan 0027                        _initEUSART 3840  
               __end_of_getCiclos 41D0              __end_of_initSerialIO 40E4  
                     posAtual@ind 0028                  EEPROM_write@addr 0028  
                EEPROM_write@data 0027                           __Hparam 0000  
               __end_of_fifo_adrs 436E                         ?_posAtual 0027  
                         __Lparam 0000                         _I2C_start 42C8  
      __size_of_fifo_alinharPrint 0118                           _Wifi_ip 000000  
               ??_deletar_receita 002B                           ___aldiv 2C1E  
                         ___awdiv 2F6E                   __size_of___lmul 0072  
                         ___awmod 3224                        _ler_sensor 2AEA  
                         ___lldiv 3470                   __size_of___wmul 002A  
         __size_of_init_atuadores 000A                           ___lwdiv 3654  
                       ?_statusT1 0027            deletar_receita@receita 002D  
       ??_manipula_atuadores_init 002A                   __CFG_STVREN$OFF 000000  
                         __pcinit 36DC                           __ramtop 0800  
                         _dispLCD 3CE6              __size_of_timer1_init 001A  
                         __ptext0 0012                           __ptext1 4056  
                         __ptext2 3840                           __ptext3 422E  
                         __ptext4 436E                           __ptext5 3E62  
                         __ptext6 3140                           __ptext7 433C  
                         __ptext8 305A                           __ptext9 4328  
                   teclado_scan@c 002B                     teclado_scan@l 002A  
                      ??_dac_init 002A                 __end_of_intt1_1ms 3FF2  
               ??_resetContCiclos 0027                           _atuador 0013  
         __size_of_fifo_add_ciclo 000A                         _T1CONbits 000FCD  
                    __size_of_irq 40AE           __size_of_fifo_add_tempo 0068  
                ___awmod@dividend 0027                 salvar_receita@aux 002F  
                ___aldiv@dividend 0033                   _fifo_print$1046 0031  
                   _receita_livre 000000                        ??_codifica 0029  
          ??_salva_atuadores_init 002A                        ??_fifo_add 0036  
                      ??_fifo_tam 0027                           main@aux 0075  
                         main@num 00B4                           main@ptr 009F  
                  __pintcode_body 4086              end_of_initialization 374E  
                  ??_serialIOload 0027                    ??_serialIOscan 002A  
      __size_of_serialIObyteShift 0066                       ?_decodifica 0027  
                   __Lmediumconst 7C40                           int_func 4086  
                  dispLCD_num@col 0032                    dispLCD_num@div 003E  
                  dispLCD_num@lin 003B                    dispLCD_num@tam 0035  
                  dispLCD_num@num 0033                    _dispLCD_lincol 3B1A  
                   ??_EEPROM_read 0027                 __end_of_set_passo 3140  
                  dispLCD_str@lin 0030                    dispLCD_str@str 002E  
                      dispLCD@col 002E                   ___lldiv@divisor 002B  
                      dispLCD@lin 0032                        dispLCD@pos 0031  
                      dispLCD@str 002F           __end_of_fifo_disponivel 4296  
               __end_of_printExec 268C                   ___lldiv@counter 0033  
                      ??_posAtual 0028                        ?_I2C_start 0027  
               __end_of_wifi_init 4086                      I2C_init@freq 0034  
                       _RCSTAbits 000FAB              _fifo_indicePrint_dec 42B0  
                ___aldiv@quotient 003D              _fifo_indicePrint_inc 3AB4  
                         postdec1 000FE5                           postdec2 000FDD  
                         postinc0 000FEE                           postinc2 000FDE  
          __size_of_teclado_borda 003E                fifo_alinharPrint@i 0034  
                      ??_statusT1 002B                     ??_dispLCD_clr 0029  
                   ??_dispLCD_num 0036                     ??_dispLCD_str 0030  
                   ??_alt_atuador 0027                       ?_dignum_tam 002F  
                       _PORTAbits 000F80                  _fifo_add_control 3C3E  
            fp__formatar_receitas 0000                       ?_fifo_print 0027  
                      fp__dispLCD 0000                     ??_dignum_conc 002F  
                       _TRISAbits 000F92                         _TRISBbits 000F93  
        __size_of_dispLCD_dataReg 004E                     ??_fifo_delete 0036  
                   ??_end_receita 0029                     ??_fifo_indice 0027  
                   ??_fifo_lerPos 0027                 __size_of_I2C_init 003A  
               __size_of_I2C_stop 0018                     _teclaAnterior 0011  
 __end_of_manipula_atuadores_init 397E            __end_of_dispLCD_lincol 3B80  
                  __end_of_I2C_tx 422E    manipula_atuadores_init@atuador 002A  
        __size_of_dispLCD_instReg 0104                        main@ciclos 00B0  
                     ?_initEUSART 0034                         _TXSTAbits 000FAC  
             dignum_apagar@ptrNum 002E                        main@estado 00BB  
           __end_of_addContCiclos 43D2          __size_of_getIndicePassos 0008  
           ?_fifo_indicePrint_dec 0027             ?_fifo_indicePrint_inc 0027  
                     wifi_init@br 003C               __end_of_EEPROM_read 4360  
                     ?_ler_sensor 0027                     __pidataBANK0l 3F8A  
                  __end_of___lmul 3840                    __end_of___wmul 413C  
                   __pidataCOMRAM 4310                       _BAUDCTLbits 000FB8  
                  set_passo@passo 002B              __end_of_teclado_init 4378  
            __end_of_teclado_scan 3224               __size_of_decodifica 0154  
             start_initialization 36DC               __end_of_dispLCD_clr 43C0  
                   posAtual@passo 0029               __end_of_dispLCD_num 282E  
             __end_of_dispLCD_str 3916               __end_of_alt_atuador 35C6  
                     __end_of_irq 40B6                     _teclado_borda 3E62  
                   ??_buscar_dado 0030                          ??_I2C_tx 0027  
           __size_of_initSerialIO 002E                   fifo_add_tempo@t 0036  
                 ?_dispLCD_lincol 0029               __end_of_dignum_conc 3DD2  
              initSerialIO@length 002B               __size_of_dignum_tam 0048  
             __end_of_fifo_delete 3470                initSerialIO@ptrOut 0029  
             __end_of_end_receita 418C               __end_of_fifo_indice 43B8  
             __end_of_fifo_lerPos 427C               __size_of_fifo_print 0350  
                ?_fifo_disponivel 0027                 dispLCD_lincol@col 0029  
               dispLCD_lincol@aux 002D                 dispLCD_lincol@lin 002C  
                     ??_I2C_start 0027                   main@meAtuadores 00AF  
                   ??_ler_atuador 0027                  ??_buscar_receita 002F  
                        ??___lmul 002F                          ??___wmul 002B  
                  _init_atuadores 4382            __size_of_getContCiclos 000A  
                     __pdataBANK1 0100                         _Wifi_mode 000000  
                       _Wifi_scan 000000                  __CFG_LPT1OSC$OFF 000000  
            __end_of_serialIOload 43C6              __end_of_serialIOscan 37CE  
                        ?_MCP4725 0041                    _fifo_add_ciclo 4396  
                ler_atuador@tecla 0029                       __pbssBANK0h 00F1  
                    _initSerialIO 40B6               __size_of_initEUSART 006C  
                  _fifo_add_tempo 397E                       __pbssCOMRAM 0001  
               __size_of_dac_init 003E                  ??_salvar_receita 002F  
                  ?_teclado_borda 0027               __size_of_ler_sensor 0134  
               __size_of_codifica 0168                 __size_of_fifo_add 0068  
                       _dac_write 3E1A                 __size_of_fifo_tam 0008  
                 _deletar_receita 3C92                 ??_dispLCD_dataReg 0027  
                     _EEPROM_read 434E               __end_of_buscar_dado 4164  
          ??_fifo_indicePrint_dec 0027            ??_fifo_indicePrint_inc 0027  
                ___lwdiv@dividend 0027            __end_of_init_atuadores 438C  
                 _resetContCiclos 4378                         _getCiclos 41AE  
               ??_dispLCD_instReg 0027                         __pintcode 0008  
                   __pmediumconst 7C40                          ?___aldiv 0033  
                        ?___awdiv 0027                 __size_of_posAtual 001A  
                        ?___awmod 0027                          ?___lldiv 0027  
                        ?___lwdiv 0027                         _fifo_adrs 4360  
                   serialIOscan@i 002F                     serialIOscan@j 002E  
          __end_of_fifo_add_ciclo 43A0                       _dispLCD_clr 43B8  
                     _dispLCD_num 268C                       _dispLCD_str 38AC  
               ??_getIndicePassos 0027            __end_of_fifo_add_tempo 39E6  
                        ?_dispLCD 002E                       _alt_atuador 3528  
             __end_of_ler_atuador 33B8                 __size_of_statusT1 0012  
        __size_of_addIndicePassos 001A                         _ind_print 005C  
                   _rxErrorEUSART 000000                          _I2C_init 3F1A  
        serialIObyteShift@dataBit 0029                          _I2C_stop 42F8  
          __size_of_dignum_apagar 002E                       _dignum_conc 3D84  
        serialIObyteShift@dataOut 0028                         _intt1_1ms 3FBE  
                   ??_salvar_dado 002F                  ___lwdiv@quotient 002B  
                   _getContCiclos 438C                    __size_of_delay 0032  
                     _fifo_delete 33B8                    __size_of_setT1 0014  
                     _end_receita 4164                       _fifo_indice 43B0  
                     _fifo_lerPos 4262                        ?_dac_write 002A  
                    ??_decodifica 0029                 teclado_scan@tecla 0029  
                 ___aldiv@divisor 0037                   ___aldiv@counter 003B  
                  ___wmul@product 002B          __size_of_I2C_ack_receive 0018  
        __end_of_fifo_add_control 3C92                          _PIE1bits 000F9D  
                        i2u152_40 4098                          i2u152_41 4094  
                        i2u153_40 40A6                          i2u153_41 40A2  
                        _PIR1bits 000F9E                   ?_init_atuadores 0027  
                        _SERIALIO 000F80                        ?_getCiclos 0027  
                       _set_passo 305A                  __CFG_WDTPS$32768 000000  
           __size_of_teclado_init 000A             __size_of_teclado_scan 00E4  
                       main@F3472 00F2                         main@F3474 00F1  
                       main@F3498 00BD                    dignum_conc@dig 0033  
                   ??_timer1_init 0027                        ?_fifo_adrs 0027  
                       _printExec 24EA                    _printExec$1068 0041  
                dispLCD_dataReg@d 0028                          _SPBRbits 000099  
                 ?_fifo_add_ciclo 0027                         _wifi_init 4056  
                       _wifi_send 000000                      ??_dignum_tam 0031  
                     _cont_ciclos 000D                   ?_fifo_add_tempo 0027  
                       main@i_642 009C                         main@i_636 00A3  
                       main@i_654 00A5                         main@i_657 00A7  
                       main@i_690 00AB                         main@i_687 00A9  
               ___wmul@multiplier 0027                         main@j_637 00A4  
                       main@j_655 00A6                         main@j_658 00A8  
                       main@j_691 00AC                initEUSART@baudRate 0034  
                       main@j_688 00AA               fifo_print@completar 0033  
                deletar_receita@i 002E                      ??_fifo_print 002F  
              __end_of_decodifica 2AEA                  __size_of_MCP4725 0022  
                       main@botao 00B3                       _lenSerialIO 0012  
                 ??_teclado_borda 002C                         main@tecla 00BC  
         __end_of_deletar_receita 3CE6                        ?_intt1_1ms 0027  
                  ?_getContCiclos 0027                 _resetIndicePassos 43C6  
               ___lmul@multiplier 0027                         copy_data0 36F0  
                       copy_data1 3710                         copy_data2 3730  
                     _buscar_dado 413C     __size_of_salva_atuadores_init 008E  
              ?_resetIndicePassos 0027           __end_of_resetContCiclos 4382  
                    ??_initEUSART 0038                      _teclado_init 436E  
             __end_of_salvar_dado 41AE                      _teclado_scan 3140  
                      _EECON1bits 000FA6                __end_of_dignum_tam 3E1A  
             ??_resetIndicePassos 0027                          __Hrparam 0000  
                   _dignum_apagar 40E4                     ler_sensor@ptr 0027  
              __end_of_fifo_print 24EA                          __Lrparam 0000  
        ?_manipula_atuadores_init 0027                        ?_set_passo 0027  
           __size_of_serialIOload 0006             __size_of_serialIOscan 0072  
                    getCiclos@aux 0029                  dispLCD_instReg@i 0028  
                     _ler_atuador 32FC                      ??_ler_sensor 0029  
                      ?_printExec 0040                  __size_of___aldiv 0134  
                __size_of___awdiv 00EC                  __size_of___awmod 00D8  
                __size_of___lldiv 00B8                        ?_wifi_init 003C  
                __size_of___lwdiv 0088                   fp__dispLCD_init 0000  
              buscar_receita@data 002D                buscar_receita@adrs 0031  
                dispLCD_num@sinal 003D             fifo_alinharPrint@cont 0033  
     manipula_atuadores_init@mask 002C                          _dac_init 3EA0  
                __size_of_dispLCD 0050               __end_of_timer1_init 4248  
                  _rxStatusEUSART 000000                __end_of_initEUSART 38AC  
       __end_of_resetIndicePassos 43CC                       decodifica@d 0027  
                        _main$670 008C                          _main$646 0086  
                        _main$671 008E                          _main$672 0090  
                        _main$673 0092                          _main$665 0088  
                        _main$674 0094                          _main$675 0096  
                        _main$676 0098                          _main$669 008A  
                        _main$678 009A                  ??_dispLCD_lincol 002A  
                 ___lwdiv@divisor 0029                   ___lwdiv@counter 002D  
                        _codifica 282E                          __ptext10 375C  
                        __ptext11 43C0                          __ptext20 4248  
                        __ptext12 3A4E                          __ptext21 43A0  
                        __ptext13 3B80                          __ptext30 41F2  
                        __ptext22 4262                          __ptext14 418C  
                        __ptext31 43A8                          __ptext23 268C  
                        __ptext15 35C6                          __ptext40 3528  
                        __ptext32 219A                          __ptext24 3916  
                        __ptext16 32FC                          __ptext41 4360  
                        __ptext33 3224                          __ptext25 2AEA  
                        __ptext17 43C6                          __ptext50 38AC  
                        __ptext42 397E                          __ptext34 3AB4  
                        __ptext26 4382                          __ptext18 4378  
                        __ptext51 3F54                          __ptext43 3C3E  
                        __ptext35 42B0                          __ptext27 40B6  
                        __ptext19 24EA                          __ptext60 3654  
                        __ptext52 43B8                          __ptext44 4396  
                        __ptext36 43B0                          __ptext28 438C  
                        __ptext61 3C92                          __ptext53 3CE6  
                        __ptext45 39E6                          __ptext37 427C  
                        __ptext29 41AE                          __ptext70 2C1E  
                        __ptext62 3FF2                          __ptext54 3B1A  
                        __ptext46 2D52                          __ptext38 33B8  
                        __ptext71 41D0                          __ptext63 3BE0  
                        __ptext55 2E6A                          __ptext47 3DD2  
                        __ptext39 2996                          __ptext80 3470  
                        __ptext72 3E1A                          __ptext64 413C  
                        __ptext56 3D36                          __ptext48 2F6E  
                        __ptext73 3EA0                          __ptext65 4164  
                        __ptext57 3D84                          __ptext49 282E  
                        __ptext82 3FBE                          __ptext74 4024  
                        __ptext66 434E                          __ptext58 4112  
                        __ptext83 0000                          __ptext75 4210  
                        __ptext67 4296                          __ptext59 40E4  
                        __ptext76 42C8                          __ptext68 43CC  
                        __ptext77 42E0                          __ptext69 37CE  
                        __ptext78 42F8                          __ptext79 3F1A  
                        _fifo_add 39E6                 ??_addIndicePassos 0027  
                        _fifo_tam 43A8                          _ind_fila 005D  
                     ??_dac_write 002C                __end_of_ler_sensor 2C1E  
                        _rxEUSART 000000                     ?_EEPROM_write 0027  
                    _serialIOload 43C0                      _serialIOscan 375C  
              _rxResetErrorEUSART 000000                     __size_of_main 2188  
                        _txEUSART 000000                salvar_receita@data 002D  
              salvar_receita@adrs 0031                    ?_dignum_apagar 002E  
                        _posAtual 4248                      dispLCD_str@c 0031  
                     ??_getCiclos 0029                 ??_I2C_ack_receive 0027  
                        int$flags 005E                       ??_fifo_adrs 0029  
              fifo_print@indPrint 0034                     fifo_add@passo 0036  
                        _statusT1 433C                       MCP4725@Vout 0041  
                   dignum_tam@tam 0031                     dignum_tam@num 002F  
                        main@lema 0060                      _Wifi_cipsend 000000  
                    _Wifi_connect 000000             __CFG_CPUDIV$OSC1_PLL2 000000  
                    set_passo@ptr 0027    salva_atuadores_init@condi_init 002A  
                 ??_getContCiclos 0029                        _INTCONbits 000FF2  
               Wifi_connect@F3276 0100                     ?_dispLCD_init 0027  
          __size_of_addContCiclos 0006                      codifica@dado 0027  
                 _dispLCD_dataReg 3D36                      codifica@tipo 002B  
                     ??_intt1_1ms 0027                  ?_deletar_receita 0027  
              formatar_receitas@i 0029                   buscar_dado@data 002E  
                 buscar_dado@adrs 0032                       _salvar_dado 418C  
                  fp__dispLCD_clr 0000                    fp__dispLCD_num 0000  
                  fp__dispLCD_str 0000                 buscar_receita@aux 002F  
                 dispLCD_num@size 003C              fifo_alinharPrint@aux 0035  
      manipula_atuadores_init@aux 002B                   _dispLCD_instReg 2E6A  
                        intlevel2 0000                    ??_EEPROM_write 0028  
                ?_resetContCiclos 0027                  ___lldiv@dividend 0027  
                    ?_EEPROM_read 0027                   _getIndicePassos 43A0  
               dignum_conc@ptrNum 002D                       ??_set_passo 0029  
               fifo_print@comando 0037                       ??_printExec 0041  
        salva_atuadores_init@F108 0005                       _timer1_init 422E  
                     ??_wifi_init 0040                      _ptrSerialOut 0009  
                    ?_dispLCD_clr 0027                      ?_dispLCD_num 0032  
                    ?_dispLCD_str 002E          __size_of_fifo_disponivel 001A  
                    ?_alt_atuador 0027          salva_atuadores_init@dado 0030  
                  buscar_dado@col 002D                    buscar_dado@aux 0030  
            fifo_add_ciclo@ciclos 0027          salva_atuadores_init@mask 0031  
                  ??_dispLCD_init 002A                  ___lldiv@quotient 002F  
      __size_of_resetIndicePassos 0006                      ___aldiv@sign 003C  
                    ?_dignum_conc 002D                       _SSPCON1bits 000FC6  
                    end_receita@x 0027                       _SSPCON2bits 000FC5  
                fifo_print@atraso 0036                      ?_fifo_delete 0027  
                     _ptrSerialIn 000B                      fifo_lerPos@i 0027  
                    ?_end_receita 0027                      _wifi_receive 000000  
                    ?_fifo_indice 0027                      ?_fifo_lerPos 0027  
                 buscar_receita@i 0032                  ??_init_atuadores 0027  
                 ??_dignum_apagar 0030                 ?_fifo_add_control 0027  
                   _addContCiclos 43CC                  ??_fifo_add_ciclo 0029  
                     fifo_print@i 0035                     fp__initEUSART 0000  
