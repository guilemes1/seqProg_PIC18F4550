

Microchip Technology PIC18 LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Fri Dec 03 16:33:59 2021

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC18F4550 Definitions
    37                           ; 
    38  0000                     fsr0 equ 0FE9h
    39  0000                     fsr0h equ 0FEAh
    40  0000                     fsr0l equ 0FE9h
    41  0000                     fsr1 equ 0FE1h
    42  0000                     fsr1h equ 0FE2h
    43  0000                     fsr1l equ 0FE1h
    44  0000                     fsr2 equ 0FD9h
    45  0000                     fsr2h equ 0FDAh
    46  0000                     fsr2l equ 0FD9h
    47  0000                     indf0 equ 0FEFh
    48  0000                     indf1 equ 0FE7h
    49  0000                     indf2 equ 0FDFh
    50  0000                     intcon equ 0FF2h
    51  0000                     nvmcon equ 00h
    52  0000                     pcl equ 0FF9h
    53  0000                     pclath equ 0FFAh
    54  0000                     pclatu equ 0FFBh
    55  0000                     plusw0 equ 0FEBh
    56  0000                     plusw1 equ 0FE3h
    57  0000                     plusw2 equ 0FDBh
    58  0000                     postdec0 equ 0FEDh
    59  0000                     postdec1 equ 0FE5h
    60  0000                     postdec2 equ 0FDDh
    61  0000                     postinc0 equ 0FEEh
    62  0000                     postinc1 equ 0FE6h
    63  0000                     postinc2 equ 0FDEh
    64  0000                     preinc0 equ 0FECh
    65  0000                     preinc1 equ 0FE4h
    66  0000                     preinc2 equ 0FDCh
    67  0000                     prod equ 0FF3h
    68  0000                     prodh equ 0FF4h
    69  0000                     prodl equ 0FF3h
    70  0000                     status equ 0FD8h
    71  0000                     tablat equ 0FF5h
    72  0000                     tblptr equ 0FF6h
    73  0000                     tblptrh equ 0FF7h
    74  0000                     tblptrl equ 0FF6h
    75  0000                     tblptru equ 0FF8h
    76  0000                     tosl equ 0FFDh
    77  0000                     wreg equ 0FE8h
    78  0000                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc   macro
    64                           	bcf	status,0
    65                           endm
    66  0000                     setc   macro
    67                           	bsf	status,0
    68                           endm
    69  0000                     clrz   macro
    70                           	bcf	status,2
    71                           endm
    72  0000                     setz   macro
    73                           	bsf	status,2
    74                           endm
    75  0000                     skipnz macro
    76                           	btfsc	status,2
    77                           endm
    78  0000                     skipz  macro
    79                           	btfss	status,2
    80                           endm
    81  0000                     skipnc macro
    82                           	btfsc	status,0
    83                           endm
    84  0000                     skipc  macro
    85                           	btfss	status,0
    86                           endm
    87  0000                     pushw macro
    88                           	movwf postinc1
    89                           endm
    90  0000                     pushf macro arg1
    91                           	movff arg1, postinc1
    92                           endm
    93  0000                     popw macro
    94                           	movf postdec1,f
    95                           	movf indf1,w
    96                           endm
    97  0000                     popf macro arg1
    98                           	movf postdec1,f
    99                           	movff indf1,arg1
   100                           endm
   101  0000                     popfc macro arg1
   102                           	movff plusw1,arg1
   103                           	decfsz fsr1,f
   104                           endm
   105  0000                     	global	__ramtop
   106                           	global	__accesstop
   107                           # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   108                           SPPDATA equ 0F62h ;# 
   109  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   110                           SPPCFG equ 0F63h ;# 
   111  0000                     # 151 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   112                           SPPEPS equ 0F64h ;# 
   113  0000                     # 225 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   114                           SPPCON equ 0F65h ;# 
   115  0000                     # 251 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   116                           UFRM equ 0F66h ;# 
   117  0000                     # 258 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   118                           UFRML equ 0F66h ;# 
   119  0000                     # 336 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   120                           UFRMH equ 0F67h ;# 
   121  0000                     # 376 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   122                           UIR equ 0F68h ;# 
   123  0000                     # 432 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   124                           UIE equ 0F69h ;# 
   125  0000                     # 488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   126                           UEIR equ 0F6Ah ;# 
   127  0000                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   128                           UEIE equ 0F6Bh ;# 
   129  0000                     # 590 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   130                           USTAT equ 0F6Ch ;# 
   131  0000                     # 650 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   132                           UCON equ 0F6Dh ;# 
   133  0000                     # 701 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   134                           UADDR equ 0F6Eh ;# 
   135  0000                     # 765 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   136                           UCFG equ 0F6Fh ;# 
   137  0000                     # 844 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   138                           UEP0 equ 0F70h ;# 
   139  0000                     # 952 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   140                           UEP1 equ 0F71h ;# 
   141  0000                     # 1060 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   142                           UEP2 equ 0F72h ;# 
   143  0000                     # 1168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   144                           UEP3 equ 0F73h ;# 
   145  0000                     # 1276 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   146                           UEP4 equ 0F74h ;# 
   147  0000                     # 1384 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   148                           UEP5 equ 0F75h ;# 
   149  0000                     # 1492 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   150                           UEP6 equ 0F76h ;# 
   151  0000                     # 1600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   152                           UEP7 equ 0F77h ;# 
   153  0000                     # 1708 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   154                           UEP8 equ 0F78h ;# 
   155  0000                     # 1784 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   156                           UEP9 equ 0F79h ;# 
   157  0000                     # 1860 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   158                           UEP10 equ 0F7Ah ;# 
   159  0000                     # 1936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   160                           UEP11 equ 0F7Bh ;# 
   161  0000                     # 2012 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   162                           UEP12 equ 0F7Ch ;# 
   163  0000                     # 2088 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   164                           UEP13 equ 0F7Dh ;# 
   165  0000                     # 2164 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   166                           UEP14 equ 0F7Eh ;# 
   167  0000                     # 2240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   168                           UEP15 equ 0F7Fh ;# 
   169  0000                     # 2316 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   170                           PORTA equ 0F80h ;# 
   171  0000                     # 2455 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   172                           PORTB equ 0F81h ;# 
   173  0000                     # 2565 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   174                           PORTC equ 0F82h ;# 
   175  0000                     # 2707 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   176                           PORTD equ 0F83h ;# 
   177  0000                     # 2828 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   178                           PORTE equ 0F84h ;# 
   179  0000                     # 2975 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   180                           LATA equ 0F89h ;# 
   181  0000                     # 3075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   182                           LATB equ 0F8Ah ;# 
   183  0000                     # 3187 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   184                           LATC equ 0F8Bh ;# 
   185  0000                     # 3265 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   186                           LATD equ 0F8Ch ;# 
   187  0000                     # 3377 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   188                           LATE equ 0F8Dh ;# 
   189  0000                     # 3429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   190                           TRISA equ 0F92h ;# 
   191  0000                     # 3434 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   192                           DDRA equ 0F92h ;# 
   193  0000                     # 3627 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   194                           TRISB equ 0F93h ;# 
   195  0000                     # 3632 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   196                           DDRB equ 0F93h ;# 
   197  0000                     # 3849 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   198                           TRISC equ 0F94h ;# 
   199  0000                     # 3854 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   200                           DDRC equ 0F94h ;# 
   201  0000                     # 4003 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   202                           TRISD equ 0F95h ;# 
   203  0000                     # 4008 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   204                           DDRD equ 0F95h ;# 
   205  0000                     # 4225 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   206                           TRISE equ 0F96h ;# 
   207  0000                     # 4230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   208                           DDRE equ 0F96h ;# 
   209  0000                     # 4327 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   210                           OSCTUNE equ 0F9Bh ;# 
   211  0000                     # 4386 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   212                           PIE1 equ 0F9Dh ;# 
   213  0000                     # 4470 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   214                           PIR1 equ 0F9Eh ;# 
   215  0000                     # 4554 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   216                           IPR1 equ 0F9Fh ;# 
   217  0000                     # 4638 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   218                           PIE2 equ 0FA0h ;# 
   219  0000                     # 4709 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   220                           PIR2 equ 0FA1h ;# 
   221  0000                     # 4780 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   222                           IPR2 equ 0FA2h ;# 
   223  0000                     # 4851 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   224                           EECON1 equ 0FA6h ;# 
   225  0000                     # 4917 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   226                           EECON2 equ 0FA7h ;# 
   227  0000                     # 4924 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   228                           EEDATA equ 0FA8h ;# 
   229  0000                     # 4931 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   230                           EEADR equ 0FA9h ;# 
   231  0000                     # 4938 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   232                           RCSTA equ 0FABh ;# 
   233  0000                     # 4943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   234                           RCSTA1 equ 0FABh ;# 
   235  0000                     # 5148 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   236                           TXSTA equ 0FACh ;# 
   237  0000                     # 5153 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   238                           TXSTA1 equ 0FACh ;# 
   239  0000                     # 5404 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   240                           TXREG equ 0FADh ;# 
   241  0000                     # 5409 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   242                           TXREG1 equ 0FADh ;# 
   243  0000                     # 5416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   244                           RCREG equ 0FAEh ;# 
   245  0000                     # 5421 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   246                           RCREG1 equ 0FAEh ;# 
   247  0000                     # 5428 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   248                           SPBRG equ 0FAFh ;# 
   249  0000                     # 5433 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   250                           SPBRG1 equ 0FAFh ;# 
   251  0000                     # 5440 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   252                           SPBRGH equ 0FB0h ;# 
   253  0000                     # 5447 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   254                           T3CON equ 0FB1h ;# 
   255  0000                     # 5568 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   256                           TMR3 equ 0FB2h ;# 
   257  0000                     # 5575 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   258                           TMR3L equ 0FB2h ;# 
   259  0000                     # 5582 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   260                           TMR3H equ 0FB3h ;# 
   261  0000                     # 5589 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   262                           CMCON equ 0FB4h ;# 
   263  0000                     # 5679 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   264                           CVRCON equ 0FB5h ;# 
   265  0000                     # 5764 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   266                           ECCP1AS equ 0FB6h ;# 
   267  0000                     # 5769 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   268                           CCP1AS equ 0FB6h ;# 
   269  0000                     # 5926 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   270                           ECCP1DEL equ 0FB7h ;# 
   271  0000                     # 5931 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   272                           CCP1DEL equ 0FB7h ;# 
   273  0000                     # 6064 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   274                           BAUDCON equ 0FB8h ;# 
   275  0000                     # 6069 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   276                           BAUDCTL equ 0FB8h ;# 
   277  0000                     # 6244 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   278                           CCP2CON equ 0FBAh ;# 
   279  0000                     # 6308 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   280                           CCPR2 equ 0FBBh ;# 
   281  0000                     # 6315 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   282                           CCPR2L equ 0FBBh ;# 
   283  0000                     # 6322 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   284                           CCPR2H equ 0FBCh ;# 
   285  0000                     # 6329 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   286                           CCP1CON equ 0FBDh ;# 
   287  0000                     # 6334 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   288                           ECCP1CON equ 0FBDh ;# 
   289  0000                     # 6491 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   290                           CCPR1 equ 0FBEh ;# 
   291  0000                     # 6498 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   292                           CCPR1L equ 0FBEh ;# 
   293  0000                     # 6505 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   294                           CCPR1H equ 0FBFh ;# 
   295  0000                     # 6512 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   296                           ADCON2 equ 0FC0h ;# 
   297  0000                     # 6583 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   298                           ADCON1 equ 0FC1h ;# 
   299  0000                     # 6668 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   300                           ADCON0 equ 0FC2h ;# 
   301  0000                     # 6787 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   302                           ADRES equ 0FC3h ;# 
   303  0000                     # 6794 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   304                           ADRESL equ 0FC3h ;# 
   305  0000                     # 6801 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   306                           ADRESH equ 0FC4h ;# 
   307  0000                     # 6808 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   308                           SSPCON2 equ 0FC5h ;# 
   309  0000                     # 6870 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   310                           SSPCON1 equ 0FC6h ;# 
   311  0000                     # 6940 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   312                           SSPSTAT equ 0FC7h ;# 
   313  0000                     # 7188 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   314                           SSPADD equ 0FC8h ;# 
   315  0000                     # 7195 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   316                           SSPBUF equ 0FC9h ;# 
   317  0000                     # 7202 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   318                           T2CON equ 0FCAh ;# 
   319  0000                     # 7300 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   320                           PR2 equ 0FCBh ;# 
   321  0000                     # 7305 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   322                           MEMCON equ 0FCBh ;# 
   323  0000                     # 7410 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   324                           TMR2 equ 0FCCh ;# 
   325  0000                     # 7417 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   326                           T1CON equ 0FCDh ;# 
   327  0000                     # 7520 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   328                           TMR1 equ 0FCEh ;# 
   329  0000                     # 7527 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   330                           TMR1L equ 0FCEh ;# 
   331  0000                     # 7534 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   332                           TMR1H equ 0FCFh ;# 
   333  0000                     # 7541 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   334                           RCON equ 0FD0h ;# 
   335  0000                     # 7690 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   336                           WDTCON equ 0FD1h ;# 
   337  0000                     # 7718 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   338                           HLVDCON equ 0FD2h ;# 
   339  0000                     # 7723 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   340                           LVDCON equ 0FD2h ;# 
   341  0000                     # 7988 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   342                           OSCCON equ 0FD3h ;# 
   343  0000                     # 8071 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   344                           T0CON equ 0FD5h ;# 
   345  0000                     # 8141 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   346                           TMR0 equ 0FD6h ;# 
   347  0000                     # 8148 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   348                           TMR0L equ 0FD6h ;# 
   349  0000                     # 8155 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   350                           TMR0H equ 0FD7h ;# 
   351  0000                     # 8162 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   352                           STATUS equ 0FD8h ;# 
   353  0000                     # 8233 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   354                           FSR2 equ 0FD9h ;# 
   355  0000                     # 8240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   356                           FSR2L equ 0FD9h ;# 
   357  0000                     # 8247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   358                           FSR2H equ 0FDAh ;# 
   359  0000                     # 8254 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   360                           PLUSW2 equ 0FDBh ;# 
   361  0000                     # 8261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   362                           PREINC2 equ 0FDCh ;# 
   363  0000                     # 8268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   364                           POSTDEC2 equ 0FDDh ;# 
   365  0000                     # 8275 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   366                           POSTINC2 equ 0FDEh ;# 
   367  0000                     # 8282 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   368                           INDF2 equ 0FDFh ;# 
   369  0000                     # 8289 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   370                           BSR equ 0FE0h ;# 
   371  0000                     # 8296 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   372                           FSR1 equ 0FE1h ;# 
   373  0000                     # 8303 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   374                           FSR1L equ 0FE1h ;# 
   375  0000                     # 8310 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   376                           FSR1H equ 0FE2h ;# 
   377  0000                     # 8317 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   378                           PLUSW1 equ 0FE3h ;# 
   379  0000                     # 8324 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   380                           PREINC1 equ 0FE4h ;# 
   381  0000                     # 8331 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   382                           POSTDEC1 equ 0FE5h ;# 
   383  0000                     # 8338 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   384                           POSTINC1 equ 0FE6h ;# 
   385  0000                     # 8345 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   386                           INDF1 equ 0FE7h ;# 
   387  0000                     # 8352 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   388                           WREG equ 0FE8h ;# 
   389  0000                     # 8359 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   390                           FSR0 equ 0FE9h ;# 
   391  0000                     # 8366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   392                           FSR0L equ 0FE9h ;# 
   393  0000                     # 8373 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   394                           FSR0H equ 0FEAh ;# 
   395  0000                     # 8380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   396                           PLUSW0 equ 0FEBh ;# 
   397  0000                     # 8387 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   398                           PREINC0 equ 0FECh ;# 
   399  0000                     # 8394 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   400                           POSTDEC0 equ 0FEDh ;# 
   401  0000                     # 8401 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   402                           POSTINC0 equ 0FEEh ;# 
   403  0000                     # 8408 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   404                           INDF0 equ 0FEFh ;# 
   405  0000                     # 8415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   406                           INTCON3 equ 0FF0h ;# 
   407  0000                     # 8507 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   408                           INTCON2 equ 0FF1h ;# 
   409  0000                     # 8584 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   410                           INTCON equ 0FF2h ;# 
   411  0000                     # 8701 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   412                           PROD equ 0FF3h ;# 
   413  0000                     # 8708 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   414                           PRODL equ 0FF3h ;# 
   415  0000                     # 8715 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   416                           PRODH equ 0FF4h ;# 
   417  0000                     # 8722 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   418                           TABLAT equ 0FF5h ;# 
   419  0000                     # 8731 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   420                           TBLPTR equ 0FF6h ;# 
   421  0000                     # 8738 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   422                           TBLPTRL equ 0FF6h ;# 
   423  0000                     # 8745 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   424                           TBLPTRH equ 0FF7h ;# 
   425  0000                     # 8752 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   426                           TBLPTRU equ 0FF8h ;# 
   427  0000                     # 8761 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   428                           PCLAT equ 0FF9h ;# 
   429  0000                     # 8768 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   430                           PC equ 0FF9h ;# 
   431  0000                     # 8775 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   432                           PCL equ 0FF9h ;# 
   433  0000                     # 8782 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   434                           PCLATH equ 0FFAh ;# 
   435  0000                     # 8789 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   436                           PCLATU equ 0FFBh ;# 
   437  0000                     # 8796 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   438                           STKPTR equ 0FFCh ;# 
   439  0000                     # 8872 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   440                           TOS equ 0FFDh ;# 
   441  0000                     # 8879 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   442                           TOSL equ 0FFDh ;# 
   443  0000                     # 8886 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   444                           TOSH equ 0FFEh ;# 
   445  0000                     # 8893 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   446                           TOSU equ 0FFFh ;# 
   447  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   448                           SPPDATA equ 0F62h ;# 
   449  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   450                           SPPCFG equ 0F63h ;# 
   451  0000                     # 151 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   452                           SPPEPS equ 0F64h ;# 
   453  0000                     # 225 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   454                           SPPCON equ 0F65h ;# 
   455  0000                     # 251 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   456                           UFRM equ 0F66h ;# 
   457  0000                     # 258 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   458                           UFRML equ 0F66h ;# 
   459  0000                     # 336 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   460                           UFRMH equ 0F67h ;# 
   461  0000                     # 376 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   462                           UIR equ 0F68h ;# 
   463  0000                     # 432 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   464                           UIE equ 0F69h ;# 
   465  0000                     # 488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   466                           UEIR equ 0F6Ah ;# 
   467  0000                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   468                           UEIE equ 0F6Bh ;# 
   469  0000                     # 590 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   470                           USTAT equ 0F6Ch ;# 
   471  0000                     # 650 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   472                           UCON equ 0F6Dh ;# 
   473  0000                     # 701 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   474                           UADDR equ 0F6Eh ;# 
   475  0000                     # 765 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   476                           UCFG equ 0F6Fh ;# 
   477  0000                     # 844 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   478                           UEP0 equ 0F70h ;# 
   479  0000                     # 952 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   480                           UEP1 equ 0F71h ;# 
   481  0000                     # 1060 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   482                           UEP2 equ 0F72h ;# 
   483  0000                     # 1168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   484                           UEP3 equ 0F73h ;# 
   485  0000                     # 1276 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   486                           UEP4 equ 0F74h ;# 
   487  0000                     # 1384 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   488                           UEP5 equ 0F75h ;# 
   489  0000                     # 1492 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   490                           UEP6 equ 0F76h ;# 
   491  0000                     # 1600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   492                           UEP7 equ 0F77h ;# 
   493  0000                     # 1708 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   494                           UEP8 equ 0F78h ;# 
   495  0000                     # 1784 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   496                           UEP9 equ 0F79h ;# 
   497  0000                     # 1860 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   498                           UEP10 equ 0F7Ah ;# 
   499  0000                     # 1936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   500                           UEP11 equ 0F7Bh ;# 
   501  0000                     # 2012 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   502                           UEP12 equ 0F7Ch ;# 
   503  0000                     # 2088 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   504                           UEP13 equ 0F7Dh ;# 
   505  0000                     # 2164 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   506                           UEP14 equ 0F7Eh ;# 
   507  0000                     # 2240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   508                           UEP15 equ 0F7Fh ;# 
   509  0000                     # 2316 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   510                           PORTA equ 0F80h ;# 
   511  0000                     # 2455 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   512                           PORTB equ 0F81h ;# 
   513  0000                     # 2565 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   514                           PORTC equ 0F82h ;# 
   515  0000                     # 2707 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   516                           PORTD equ 0F83h ;# 
   517  0000                     # 2828 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   518                           PORTE equ 0F84h ;# 
   519  0000                     # 2975 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   520                           LATA equ 0F89h ;# 
   521  0000                     # 3075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   522                           LATB equ 0F8Ah ;# 
   523  0000                     # 3187 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   524                           LATC equ 0F8Bh ;# 
   525  0000                     # 3265 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   526                           LATD equ 0F8Ch ;# 
   527  0000                     # 3377 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   528                           LATE equ 0F8Dh ;# 
   529  0000                     # 3429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   530                           TRISA equ 0F92h ;# 
   531  0000                     # 3434 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   532                           DDRA equ 0F92h ;# 
   533  0000                     # 3627 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   534                           TRISB equ 0F93h ;# 
   535  0000                     # 3632 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   536                           DDRB equ 0F93h ;# 
   537  0000                     # 3849 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   538                           TRISC equ 0F94h ;# 
   539  0000                     # 3854 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   540                           DDRC equ 0F94h ;# 
   541  0000                     # 4003 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   542                           TRISD equ 0F95h ;# 
   543  0000                     # 4008 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   544                           DDRD equ 0F95h ;# 
   545  0000                     # 4225 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   546                           TRISE equ 0F96h ;# 
   547  0000                     # 4230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   548                           DDRE equ 0F96h ;# 
   549  0000                     # 4327 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   550                           OSCTUNE equ 0F9Bh ;# 
   551  0000                     # 4386 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   552                           PIE1 equ 0F9Dh ;# 
   553  0000                     # 4470 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   554                           PIR1 equ 0F9Eh ;# 
   555  0000                     # 4554 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   556                           IPR1 equ 0F9Fh ;# 
   557  0000                     # 4638 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   558                           PIE2 equ 0FA0h ;# 
   559  0000                     # 4709 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   560                           PIR2 equ 0FA1h ;# 
   561  0000                     # 4780 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   562                           IPR2 equ 0FA2h ;# 
   563  0000                     # 4851 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   564                           EECON1 equ 0FA6h ;# 
   565  0000                     # 4917 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   566                           EECON2 equ 0FA7h ;# 
   567  0000                     # 4924 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   568                           EEDATA equ 0FA8h ;# 
   569  0000                     # 4931 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   570                           EEADR equ 0FA9h ;# 
   571  0000                     # 4938 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   572                           RCSTA equ 0FABh ;# 
   573  0000                     # 4943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   574                           RCSTA1 equ 0FABh ;# 
   575  0000                     # 5148 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   576                           TXSTA equ 0FACh ;# 
   577  0000                     # 5153 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   578                           TXSTA1 equ 0FACh ;# 
   579  0000                     # 5404 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   580                           TXREG equ 0FADh ;# 
   581  0000                     # 5409 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   582                           TXREG1 equ 0FADh ;# 
   583  0000                     # 5416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   584                           RCREG equ 0FAEh ;# 
   585  0000                     # 5421 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   586                           RCREG1 equ 0FAEh ;# 
   587  0000                     # 5428 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   588                           SPBRG equ 0FAFh ;# 
   589  0000                     # 5433 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   590                           SPBRG1 equ 0FAFh ;# 
   591  0000                     # 5440 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   592                           SPBRGH equ 0FB0h ;# 
   593  0000                     # 5447 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   594                           T3CON equ 0FB1h ;# 
   595  0000                     # 5568 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   596                           TMR3 equ 0FB2h ;# 
   597  0000                     # 5575 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   598                           TMR3L equ 0FB2h ;# 
   599  0000                     # 5582 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   600                           TMR3H equ 0FB3h ;# 
   601  0000                     # 5589 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   602                           CMCON equ 0FB4h ;# 
   603  0000                     # 5679 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   604                           CVRCON equ 0FB5h ;# 
   605  0000                     # 5764 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   606                           ECCP1AS equ 0FB6h ;# 
   607  0000                     # 5769 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   608                           CCP1AS equ 0FB6h ;# 
   609  0000                     # 5926 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   610                           ECCP1DEL equ 0FB7h ;# 
   611  0000                     # 5931 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   612                           CCP1DEL equ 0FB7h ;# 
   613  0000                     # 6064 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   614                           BAUDCON equ 0FB8h ;# 
   615  0000                     # 6069 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   616                           BAUDCTL equ 0FB8h ;# 
   617  0000                     # 6244 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   618                           CCP2CON equ 0FBAh ;# 
   619  0000                     # 6308 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   620                           CCPR2 equ 0FBBh ;# 
   621  0000                     # 6315 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   622                           CCPR2L equ 0FBBh ;# 
   623  0000                     # 6322 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   624                           CCPR2H equ 0FBCh ;# 
   625  0000                     # 6329 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   626                           CCP1CON equ 0FBDh ;# 
   627  0000                     # 6334 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   628                           ECCP1CON equ 0FBDh ;# 
   629  0000                     # 6491 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   630                           CCPR1 equ 0FBEh ;# 
   631  0000                     # 6498 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   632                           CCPR1L equ 0FBEh ;# 
   633  0000                     # 6505 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   634                           CCPR1H equ 0FBFh ;# 
   635  0000                     # 6512 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   636                           ADCON2 equ 0FC0h ;# 
   637  0000                     # 6583 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   638                           ADCON1 equ 0FC1h ;# 
   639  0000                     # 6668 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   640                           ADCON0 equ 0FC2h ;# 
   641  0000                     # 6787 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   642                           ADRES equ 0FC3h ;# 
   643  0000                     # 6794 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   644                           ADRESL equ 0FC3h ;# 
   645  0000                     # 6801 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   646                           ADRESH equ 0FC4h ;# 
   647  0000                     # 6808 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   648                           SSPCON2 equ 0FC5h ;# 
   649  0000                     # 6870 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   650                           SSPCON1 equ 0FC6h ;# 
   651  0000                     # 6940 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   652                           SSPSTAT equ 0FC7h ;# 
   653  0000                     # 7188 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   654                           SSPADD equ 0FC8h ;# 
   655  0000                     # 7195 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   656                           SSPBUF equ 0FC9h ;# 
   657  0000                     # 7202 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   658                           T2CON equ 0FCAh ;# 
   659  0000                     # 7300 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   660                           PR2 equ 0FCBh ;# 
   661  0000                     # 7305 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   662                           MEMCON equ 0FCBh ;# 
   663  0000                     # 7410 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   664                           TMR2 equ 0FCCh ;# 
   665  0000                     # 7417 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   666                           T1CON equ 0FCDh ;# 
   667  0000                     # 7520 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   668                           TMR1 equ 0FCEh ;# 
   669  0000                     # 7527 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   670                           TMR1L equ 0FCEh ;# 
   671  0000                     # 7534 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   672                           TMR1H equ 0FCFh ;# 
   673  0000                     # 7541 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   674                           RCON equ 0FD0h ;# 
   675  0000                     # 7690 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   676                           WDTCON equ 0FD1h ;# 
   677  0000                     # 7718 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   678                           HLVDCON equ 0FD2h ;# 
   679  0000                     # 7723 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   680                           LVDCON equ 0FD2h ;# 
   681  0000                     # 7988 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   682                           OSCCON equ 0FD3h ;# 
   683  0000                     # 8071 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   684                           T0CON equ 0FD5h ;# 
   685  0000                     # 8141 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   686                           TMR0 equ 0FD6h ;# 
   687  0000                     # 8148 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   688                           TMR0L equ 0FD6h ;# 
   689  0000                     # 8155 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   690                           TMR0H equ 0FD7h ;# 
   691  0000                     # 8162 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   692                           STATUS equ 0FD8h ;# 
   693  0000                     # 8233 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   694                           FSR2 equ 0FD9h ;# 
   695  0000                     # 8240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   696                           FSR2L equ 0FD9h ;# 
   697  0000                     # 8247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   698                           FSR2H equ 0FDAh ;# 
   699  0000                     # 8254 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   700                           PLUSW2 equ 0FDBh ;# 
   701  0000                     # 8261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   702                           PREINC2 equ 0FDCh ;# 
   703  0000                     # 8268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   704                           POSTDEC2 equ 0FDDh ;# 
   705  0000                     # 8275 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   706                           POSTINC2 equ 0FDEh ;# 
   707  0000                     # 8282 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   708                           INDF2 equ 0FDFh ;# 
   709  0000                     # 8289 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   710                           BSR equ 0FE0h ;# 
   711  0000                     # 8296 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   712                           FSR1 equ 0FE1h ;# 
   713  0000                     # 8303 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   714                           FSR1L equ 0FE1h ;# 
   715  0000                     # 8310 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   716                           FSR1H equ 0FE2h ;# 
   717  0000                     # 8317 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   718                           PLUSW1 equ 0FE3h ;# 
   719  0000                     # 8324 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   720                           PREINC1 equ 0FE4h ;# 
   721  0000                     # 8331 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   722                           POSTDEC1 equ 0FE5h ;# 
   723  0000                     # 8338 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   724                           POSTINC1 equ 0FE6h ;# 
   725  0000                     # 8345 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   726                           INDF1 equ 0FE7h ;# 
   727  0000                     # 8352 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   728                           WREG equ 0FE8h ;# 
   729  0000                     # 8359 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   730                           FSR0 equ 0FE9h ;# 
   731  0000                     # 8366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   732                           FSR0L equ 0FE9h ;# 
   733  0000                     # 8373 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   734                           FSR0H equ 0FEAh ;# 
   735  0000                     # 8380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   736                           PLUSW0 equ 0FEBh ;# 
   737  0000                     # 8387 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   738                           PREINC0 equ 0FECh ;# 
   739  0000                     # 8394 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   740                           POSTDEC0 equ 0FEDh ;# 
   741  0000                     # 8401 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   742                           POSTINC0 equ 0FEEh ;# 
   743  0000                     # 8408 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   744                           INDF0 equ 0FEFh ;# 
   745  0000                     # 8415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   746                           INTCON3 equ 0FF0h ;# 
   747  0000                     # 8507 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   748                           INTCON2 equ 0FF1h ;# 
   749  0000                     # 8584 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   750                           INTCON equ 0FF2h ;# 
   751  0000                     # 8701 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   752                           PROD equ 0FF3h ;# 
   753  0000                     # 8708 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   754                           PRODL equ 0FF3h ;# 
   755  0000                     # 8715 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   756                           PRODH equ 0FF4h ;# 
   757  0000                     # 8722 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   758                           TABLAT equ 0FF5h ;# 
   759  0000                     # 8731 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   760                           TBLPTR equ 0FF6h ;# 
   761  0000                     # 8738 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   762                           TBLPTRL equ 0FF6h ;# 
   763  0000                     # 8745 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   764                           TBLPTRH equ 0FF7h ;# 
   765  0000                     # 8752 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   766                           TBLPTRU equ 0FF8h ;# 
   767  0000                     # 8761 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   768                           PCLAT equ 0FF9h ;# 
   769  0000                     # 8768 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   770                           PC equ 0FF9h ;# 
   771  0000                     # 8775 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   772                           PCL equ 0FF9h ;# 
   773  0000                     # 8782 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   774                           PCLATH equ 0FFAh ;# 
   775  0000                     # 8789 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   776                           PCLATU equ 0FFBh ;# 
   777  0000                     # 8796 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   778                           STKPTR equ 0FFCh ;# 
   779  0000                     # 8872 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   780                           TOS equ 0FFDh ;# 
   781  0000                     # 8879 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   782                           TOSL equ 0FFDh ;# 
   783  0000                     # 8886 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   784                           TOSH equ 0FFEh ;# 
   785  0000                     # 8893 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   786                           TOSU equ 0FFFh ;# 
   787  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   788                           SPPDATA equ 0F62h ;# 
   789  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   790                           SPPCFG equ 0F63h ;# 
   791  0000                     # 151 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   792                           SPPEPS equ 0F64h ;# 
   793  0000                     # 225 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   794                           SPPCON equ 0F65h ;# 
   795  0000                     # 251 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   796                           UFRM equ 0F66h ;# 
   797  0000                     # 258 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   798                           UFRML equ 0F66h ;# 
   799  0000                     # 336 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   800                           UFRMH equ 0F67h ;# 
   801  0000                     # 376 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   802                           UIR equ 0F68h ;# 
   803  0000                     # 432 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   804                           UIE equ 0F69h ;# 
   805  0000                     # 488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   806                           UEIR equ 0F6Ah ;# 
   807  0000                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   808                           UEIE equ 0F6Bh ;# 
   809  0000                     # 590 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   810                           USTAT equ 0F6Ch ;# 
   811  0000                     # 650 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   812                           UCON equ 0F6Dh ;# 
   813  0000                     # 701 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   814                           UADDR equ 0F6Eh ;# 
   815  0000                     # 765 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   816                           UCFG equ 0F6Fh ;# 
   817  0000                     # 844 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   818                           UEP0 equ 0F70h ;# 
   819  0000                     # 952 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   820                           UEP1 equ 0F71h ;# 
   821  0000                     # 1060 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   822                           UEP2 equ 0F72h ;# 
   823  0000                     # 1168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   824                           UEP3 equ 0F73h ;# 
   825  0000                     # 1276 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   826                           UEP4 equ 0F74h ;# 
   827  0000                     # 1384 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   828                           UEP5 equ 0F75h ;# 
   829  0000                     # 1492 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   830                           UEP6 equ 0F76h ;# 
   831  0000                     # 1600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   832                           UEP7 equ 0F77h ;# 
   833  0000                     # 1708 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   834                           UEP8 equ 0F78h ;# 
   835  0000                     # 1784 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   836                           UEP9 equ 0F79h ;# 
   837  0000                     # 1860 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   838                           UEP10 equ 0F7Ah ;# 
   839  0000                     # 1936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   840                           UEP11 equ 0F7Bh ;# 
   841  0000                     # 2012 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   842                           UEP12 equ 0F7Ch ;# 
   843  0000                     # 2088 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   844                           UEP13 equ 0F7Dh ;# 
   845  0000                     # 2164 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   846                           UEP14 equ 0F7Eh ;# 
   847  0000                     # 2240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   848                           UEP15 equ 0F7Fh ;# 
   849  0000                     # 2316 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   850                           PORTA equ 0F80h ;# 
   851  0000                     # 2455 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   852                           PORTB equ 0F81h ;# 
   853  0000                     # 2565 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   854                           PORTC equ 0F82h ;# 
   855  0000                     # 2707 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   856                           PORTD equ 0F83h ;# 
   857  0000                     # 2828 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   858                           PORTE equ 0F84h ;# 
   859  0000                     # 2975 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   860                           LATA equ 0F89h ;# 
   861  0000                     # 3075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   862                           LATB equ 0F8Ah ;# 
   863  0000                     # 3187 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   864                           LATC equ 0F8Bh ;# 
   865  0000                     # 3265 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   866                           LATD equ 0F8Ch ;# 
   867  0000                     # 3377 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   868                           LATE equ 0F8Dh ;# 
   869  0000                     # 3429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   870                           TRISA equ 0F92h ;# 
   871  0000                     # 3434 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   872                           DDRA equ 0F92h ;# 
   873  0000                     # 3627 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   874                           TRISB equ 0F93h ;# 
   875  0000                     # 3632 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   876                           DDRB equ 0F93h ;# 
   877  0000                     # 3849 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   878                           TRISC equ 0F94h ;# 
   879  0000                     # 3854 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   880                           DDRC equ 0F94h ;# 
   881  0000                     # 4003 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   882                           TRISD equ 0F95h ;# 
   883  0000                     # 4008 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   884                           DDRD equ 0F95h ;# 
   885  0000                     # 4225 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   886                           TRISE equ 0F96h ;# 
   887  0000                     # 4230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   888                           DDRE equ 0F96h ;# 
   889  0000                     # 4327 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   890                           OSCTUNE equ 0F9Bh ;# 
   891  0000                     # 4386 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   892                           PIE1 equ 0F9Dh ;# 
   893  0000                     # 4470 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   894                           PIR1 equ 0F9Eh ;# 
   895  0000                     # 4554 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   896                           IPR1 equ 0F9Fh ;# 
   897  0000                     # 4638 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   898                           PIE2 equ 0FA0h ;# 
   899  0000                     # 4709 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   900                           PIR2 equ 0FA1h ;# 
   901  0000                     # 4780 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   902                           IPR2 equ 0FA2h ;# 
   903  0000                     # 4851 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   904                           EECON1 equ 0FA6h ;# 
   905  0000                     # 4917 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   906                           EECON2 equ 0FA7h ;# 
   907  0000                     # 4924 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   908                           EEDATA equ 0FA8h ;# 
   909  0000                     # 4931 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   910                           EEADR equ 0FA9h ;# 
   911  0000                     # 4938 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   912                           RCSTA equ 0FABh ;# 
   913  0000                     # 4943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   914                           RCSTA1 equ 0FABh ;# 
   915  0000                     # 5148 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   916                           TXSTA equ 0FACh ;# 
   917  0000                     # 5153 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   918                           TXSTA1 equ 0FACh ;# 
   919  0000                     # 5404 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   920                           TXREG equ 0FADh ;# 
   921  0000                     # 5409 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   922                           TXREG1 equ 0FADh ;# 
   923  0000                     # 5416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   924                           RCREG equ 0FAEh ;# 
   925  0000                     # 5421 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   926                           RCREG1 equ 0FAEh ;# 
   927  0000                     # 5428 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   928                           SPBRG equ 0FAFh ;# 
   929  0000                     # 5433 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   930                           SPBRG1 equ 0FAFh ;# 
   931  0000                     # 5440 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   932                           SPBRGH equ 0FB0h ;# 
   933  0000                     # 5447 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   934                           T3CON equ 0FB1h ;# 
   935  0000                     # 5568 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   936                           TMR3 equ 0FB2h ;# 
   937  0000                     # 5575 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   938                           TMR3L equ 0FB2h ;# 
   939  0000                     # 5582 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   940                           TMR3H equ 0FB3h ;# 
   941  0000                     # 5589 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   942                           CMCON equ 0FB4h ;# 
   943  0000                     # 5679 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   944                           CVRCON equ 0FB5h ;# 
   945  0000                     # 5764 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   946                           ECCP1AS equ 0FB6h ;# 
   947  0000                     # 5769 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   948                           CCP1AS equ 0FB6h ;# 
   949  0000                     # 5926 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   950                           ECCP1DEL equ 0FB7h ;# 
   951  0000                     # 5931 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   952                           CCP1DEL equ 0FB7h ;# 
   953  0000                     # 6064 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   954                           BAUDCON equ 0FB8h ;# 
   955  0000                     # 6069 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   956                           BAUDCTL equ 0FB8h ;# 
   957  0000                     # 6244 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   958                           CCP2CON equ 0FBAh ;# 
   959  0000                     # 6308 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   960                           CCPR2 equ 0FBBh ;# 
   961  0000                     # 6315 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   962                           CCPR2L equ 0FBBh ;# 
   963  0000                     # 6322 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   964                           CCPR2H equ 0FBCh ;# 
   965  0000                     # 6329 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   966                           CCP1CON equ 0FBDh ;# 
   967  0000                     # 6334 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   968                           ECCP1CON equ 0FBDh ;# 
   969  0000                     # 6491 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   970                           CCPR1 equ 0FBEh ;# 
   971  0000                     # 6498 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   972                           CCPR1L equ 0FBEh ;# 
   973  0000                     # 6505 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   974                           CCPR1H equ 0FBFh ;# 
   975  0000                     # 6512 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   976                           ADCON2 equ 0FC0h ;# 
   977  0000                     # 6583 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   978                           ADCON1 equ 0FC1h ;# 
   979  0000                     # 6668 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   980                           ADCON0 equ 0FC2h ;# 
   981  0000                     # 6787 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   982                           ADRES equ 0FC3h ;# 
   983  0000                     # 6794 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   984                           ADRESL equ 0FC3h ;# 
   985  0000                     # 6801 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   986                           ADRESH equ 0FC4h ;# 
   987  0000                     # 6808 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   988                           SSPCON2 equ 0FC5h ;# 
   989  0000                     # 6870 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   990                           SSPCON1 equ 0FC6h ;# 
   991  0000                     # 6940 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   992                           SSPSTAT equ 0FC7h ;# 
   993  0000                     # 7188 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   994                           SSPADD equ 0FC8h ;# 
   995  0000                     # 7195 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   996                           SSPBUF equ 0FC9h ;# 
   997  0000                     # 7202 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   998                           T2CON equ 0FCAh ;# 
   999  0000                     # 7300 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1000                           PR2 equ 0FCBh ;# 
  1001  0000                     # 7305 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1002                           MEMCON equ 0FCBh ;# 
  1003  0000                     # 7410 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1004                           TMR2 equ 0FCCh ;# 
  1005  0000                     # 7417 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1006                           T1CON equ 0FCDh ;# 
  1007  0000                     # 7520 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1008                           TMR1 equ 0FCEh ;# 
  1009  0000                     # 7527 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1010                           TMR1L equ 0FCEh ;# 
  1011  0000                     # 7534 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1012                           TMR1H equ 0FCFh ;# 
  1013  0000                     # 7541 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1014                           RCON equ 0FD0h ;# 
  1015  0000                     # 7690 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1016                           WDTCON equ 0FD1h ;# 
  1017  0000                     # 7718 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1018                           HLVDCON equ 0FD2h ;# 
  1019  0000                     # 7723 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1020                           LVDCON equ 0FD2h ;# 
  1021  0000                     # 7988 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1022                           OSCCON equ 0FD3h ;# 
  1023  0000                     # 8071 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1024                           T0CON equ 0FD5h ;# 
  1025  0000                     # 8141 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1026                           TMR0 equ 0FD6h ;# 
  1027  0000                     # 8148 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1028                           TMR0L equ 0FD6h ;# 
  1029  0000                     # 8155 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1030                           TMR0H equ 0FD7h ;# 
  1031  0000                     # 8162 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1032                           STATUS equ 0FD8h ;# 
  1033  0000                     # 8233 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1034                           FSR2 equ 0FD9h ;# 
  1035  0000                     # 8240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1036                           FSR2L equ 0FD9h ;# 
  1037  0000                     # 8247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1038                           FSR2H equ 0FDAh ;# 
  1039  0000                     # 8254 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1040                           PLUSW2 equ 0FDBh ;# 
  1041  0000                     # 8261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1042                           PREINC2 equ 0FDCh ;# 
  1043  0000                     # 8268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1044                           POSTDEC2 equ 0FDDh ;# 
  1045  0000                     # 8275 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1046                           POSTINC2 equ 0FDEh ;# 
  1047  0000                     # 8282 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1048                           INDF2 equ 0FDFh ;# 
  1049  0000                     # 8289 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1050                           BSR equ 0FE0h ;# 
  1051  0000                     # 8296 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1052                           FSR1 equ 0FE1h ;# 
  1053  0000                     # 8303 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1054                           FSR1L equ 0FE1h ;# 
  1055  0000                     # 8310 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1056                           FSR1H equ 0FE2h ;# 
  1057  0000                     # 8317 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1058                           PLUSW1 equ 0FE3h ;# 
  1059  0000                     # 8324 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1060                           PREINC1 equ 0FE4h ;# 
  1061  0000                     # 8331 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1062                           POSTDEC1 equ 0FE5h ;# 
  1063  0000                     # 8338 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1064                           POSTINC1 equ 0FE6h ;# 
  1065  0000                     # 8345 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1066                           INDF1 equ 0FE7h ;# 
  1067  0000                     # 8352 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1068                           WREG equ 0FE8h ;# 
  1069  0000                     # 8359 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1070                           FSR0 equ 0FE9h ;# 
  1071  0000                     # 8366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1072                           FSR0L equ 0FE9h ;# 
  1073  0000                     # 8373 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1074                           FSR0H equ 0FEAh ;# 
  1075  0000                     # 8380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1076                           PLUSW0 equ 0FEBh ;# 
  1077  0000                     # 8387 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1078                           PREINC0 equ 0FECh ;# 
  1079  0000                     # 8394 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1080                           POSTDEC0 equ 0FEDh ;# 
  1081  0000                     # 8401 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1082                           POSTINC0 equ 0FEEh ;# 
  1083  0000                     # 8408 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1084                           INDF0 equ 0FEFh ;# 
  1085  0000                     # 8415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1086                           INTCON3 equ 0FF0h ;# 
  1087  0000                     # 8507 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1088                           INTCON2 equ 0FF1h ;# 
  1089  0000                     # 8584 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1090                           INTCON equ 0FF2h ;# 
  1091  0000                     # 8701 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1092                           PROD equ 0FF3h ;# 
  1093  0000                     # 8708 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1094                           PRODL equ 0FF3h ;# 
  1095  0000                     # 8715 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1096                           PRODH equ 0FF4h ;# 
  1097  0000                     # 8722 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1098                           TABLAT equ 0FF5h ;# 
  1099  0000                     # 8731 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1100                           TBLPTR equ 0FF6h ;# 
  1101  0000                     # 8738 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1102                           TBLPTRL equ 0FF6h ;# 
  1103  0000                     # 8745 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1104                           TBLPTRH equ 0FF7h ;# 
  1105  0000                     # 8752 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1106                           TBLPTRU equ 0FF8h ;# 
  1107  0000                     # 8761 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1108                           PCLAT equ 0FF9h ;# 
  1109  0000                     # 8768 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1110                           PC equ 0FF9h ;# 
  1111  0000                     # 8775 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1112                           PCL equ 0FF9h ;# 
  1113  0000                     # 8782 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1114                           PCLATH equ 0FFAh ;# 
  1115  0000                     # 8789 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1116                           PCLATU equ 0FFBh ;# 
  1117  0000                     # 8796 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1118                           STKPTR equ 0FFCh ;# 
  1119  0000                     # 8872 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1120                           TOS equ 0FFDh ;# 
  1121  0000                     # 8879 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1122                           TOSL equ 0FFDh ;# 
  1123  0000                     # 8886 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1124                           TOSH equ 0FFEh ;# 
  1125  0000                     # 8893 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1126                           TOSU equ 0FFFh ;# 
  1127  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1128                           SPPDATA equ 0F62h ;# 
  1129  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1130                           SPPCFG equ 0F63h ;# 
  1131  0000                     # 151 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1132                           SPPEPS equ 0F64h ;# 
  1133  0000                     # 225 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1134                           SPPCON equ 0F65h ;# 
  1135  0000                     # 251 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1136                           UFRM equ 0F66h ;# 
  1137  0000                     # 258 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1138                           UFRML equ 0F66h ;# 
  1139  0000                     # 336 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1140                           UFRMH equ 0F67h ;# 
  1141  0000                     # 376 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1142                           UIR equ 0F68h ;# 
  1143  0000                     # 432 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1144                           UIE equ 0F69h ;# 
  1145  0000                     # 488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1146                           UEIR equ 0F6Ah ;# 
  1147  0000                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1148                           UEIE equ 0F6Bh ;# 
  1149  0000                     # 590 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1150                           USTAT equ 0F6Ch ;# 
  1151  0000                     # 650 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1152                           UCON equ 0F6Dh ;# 
  1153  0000                     # 701 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1154                           UADDR equ 0F6Eh ;# 
  1155  0000                     # 765 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1156                           UCFG equ 0F6Fh ;# 
  1157  0000                     # 844 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1158                           UEP0 equ 0F70h ;# 
  1159  0000                     # 952 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1160                           UEP1 equ 0F71h ;# 
  1161  0000                     # 1060 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1162                           UEP2 equ 0F72h ;# 
  1163  0000                     # 1168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1164                           UEP3 equ 0F73h ;# 
  1165  0000                     # 1276 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1166                           UEP4 equ 0F74h ;# 
  1167  0000                     # 1384 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1168                           UEP5 equ 0F75h ;# 
  1169  0000                     # 1492 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1170                           UEP6 equ 0F76h ;# 
  1171  0000                     # 1600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1172                           UEP7 equ 0F77h ;# 
  1173  0000                     # 1708 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1174                           UEP8 equ 0F78h ;# 
  1175  0000                     # 1784 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1176                           UEP9 equ 0F79h ;# 
  1177  0000                     # 1860 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1178                           UEP10 equ 0F7Ah ;# 
  1179  0000                     # 1936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1180                           UEP11 equ 0F7Bh ;# 
  1181  0000                     # 2012 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1182                           UEP12 equ 0F7Ch ;# 
  1183  0000                     # 2088 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1184                           UEP13 equ 0F7Dh ;# 
  1185  0000                     # 2164 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1186                           UEP14 equ 0F7Eh ;# 
  1187  0000                     # 2240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1188                           UEP15 equ 0F7Fh ;# 
  1189  0000                     # 2316 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1190                           PORTA equ 0F80h ;# 
  1191  0000                     # 2455 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1192                           PORTB equ 0F81h ;# 
  1193  0000                     # 2565 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1194                           PORTC equ 0F82h ;# 
  1195  0000                     # 2707 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1196                           PORTD equ 0F83h ;# 
  1197  0000                     # 2828 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1198                           PORTE equ 0F84h ;# 
  1199  0000                     # 2975 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1200                           LATA equ 0F89h ;# 
  1201  0000                     # 3075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1202                           LATB equ 0F8Ah ;# 
  1203  0000                     # 3187 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1204                           LATC equ 0F8Bh ;# 
  1205  0000                     # 3265 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1206                           LATD equ 0F8Ch ;# 
  1207  0000                     # 3377 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1208                           LATE equ 0F8Dh ;# 
  1209  0000                     # 3429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1210                           TRISA equ 0F92h ;# 
  1211  0000                     # 3434 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1212                           DDRA equ 0F92h ;# 
  1213  0000                     # 3627 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1214                           TRISB equ 0F93h ;# 
  1215  0000                     # 3632 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1216                           DDRB equ 0F93h ;# 
  1217  0000                     # 3849 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1218                           TRISC equ 0F94h ;# 
  1219  0000                     # 3854 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1220                           DDRC equ 0F94h ;# 
  1221  0000                     # 4003 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1222                           TRISD equ 0F95h ;# 
  1223  0000                     # 4008 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1224                           DDRD equ 0F95h ;# 
  1225  0000                     # 4225 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1226                           TRISE equ 0F96h ;# 
  1227  0000                     # 4230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1228                           DDRE equ 0F96h ;# 
  1229  0000                     # 4327 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1230                           OSCTUNE equ 0F9Bh ;# 
  1231  0000                     # 4386 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1232                           PIE1 equ 0F9Dh ;# 
  1233  0000                     # 4470 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1234                           PIR1 equ 0F9Eh ;# 
  1235  0000                     # 4554 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1236                           IPR1 equ 0F9Fh ;# 
  1237  0000                     # 4638 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1238                           PIE2 equ 0FA0h ;# 
  1239  0000                     # 4709 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1240                           PIR2 equ 0FA1h ;# 
  1241  0000                     # 4780 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1242                           IPR2 equ 0FA2h ;# 
  1243  0000                     # 4851 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1244                           EECON1 equ 0FA6h ;# 
  1245  0000                     # 4917 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1246                           EECON2 equ 0FA7h ;# 
  1247  0000                     # 4924 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1248                           EEDATA equ 0FA8h ;# 
  1249  0000                     # 4931 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1250                           EEADR equ 0FA9h ;# 
  1251  0000                     # 4938 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1252                           RCSTA equ 0FABh ;# 
  1253  0000                     # 4943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1254                           RCSTA1 equ 0FABh ;# 
  1255  0000                     # 5148 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1256                           TXSTA equ 0FACh ;# 
  1257  0000                     # 5153 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1258                           TXSTA1 equ 0FACh ;# 
  1259  0000                     # 5404 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1260                           TXREG equ 0FADh ;# 
  1261  0000                     # 5409 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1262                           TXREG1 equ 0FADh ;# 
  1263  0000                     # 5416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1264                           RCREG equ 0FAEh ;# 
  1265  0000                     # 5421 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1266                           RCREG1 equ 0FAEh ;# 
  1267  0000                     # 5428 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1268                           SPBRG equ 0FAFh ;# 
  1269  0000                     # 5433 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1270                           SPBRG1 equ 0FAFh ;# 
  1271  0000                     # 5440 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1272                           SPBRGH equ 0FB0h ;# 
  1273  0000                     # 5447 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1274                           T3CON equ 0FB1h ;# 
  1275  0000                     # 5568 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1276                           TMR3 equ 0FB2h ;# 
  1277  0000                     # 5575 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1278                           TMR3L equ 0FB2h ;# 
  1279  0000                     # 5582 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1280                           TMR3H equ 0FB3h ;# 
  1281  0000                     # 5589 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1282                           CMCON equ 0FB4h ;# 
  1283  0000                     # 5679 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1284                           CVRCON equ 0FB5h ;# 
  1285  0000                     # 5764 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1286                           ECCP1AS equ 0FB6h ;# 
  1287  0000                     # 5769 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1288                           CCP1AS equ 0FB6h ;# 
  1289  0000                     # 5926 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1290                           ECCP1DEL equ 0FB7h ;# 
  1291  0000                     # 5931 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1292                           CCP1DEL equ 0FB7h ;# 
  1293  0000                     # 6064 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1294                           BAUDCON equ 0FB8h ;# 
  1295  0000                     # 6069 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1296                           BAUDCTL equ 0FB8h ;# 
  1297  0000                     # 6244 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1298                           CCP2CON equ 0FBAh ;# 
  1299  0000                     # 6308 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1300                           CCPR2 equ 0FBBh ;# 
  1301  0000                     # 6315 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1302                           CCPR2L equ 0FBBh ;# 
  1303  0000                     # 6322 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1304                           CCPR2H equ 0FBCh ;# 
  1305  0000                     # 6329 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1306                           CCP1CON equ 0FBDh ;# 
  1307  0000                     # 6334 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1308                           ECCP1CON equ 0FBDh ;# 
  1309  0000                     # 6491 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1310                           CCPR1 equ 0FBEh ;# 
  1311  0000                     # 6498 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1312                           CCPR1L equ 0FBEh ;# 
  1313  0000                     # 6505 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1314                           CCPR1H equ 0FBFh ;# 
  1315  0000                     # 6512 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1316                           ADCON2 equ 0FC0h ;# 
  1317  0000                     # 6583 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1318                           ADCON1 equ 0FC1h ;# 
  1319  0000                     # 6668 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1320                           ADCON0 equ 0FC2h ;# 
  1321  0000                     # 6787 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1322                           ADRES equ 0FC3h ;# 
  1323  0000                     # 6794 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1324                           ADRESL equ 0FC3h ;# 
  1325  0000                     # 6801 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1326                           ADRESH equ 0FC4h ;# 
  1327  0000                     # 6808 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1328                           SSPCON2 equ 0FC5h ;# 
  1329  0000                     # 6870 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1330                           SSPCON1 equ 0FC6h ;# 
  1331  0000                     # 6940 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1332                           SSPSTAT equ 0FC7h ;# 
  1333  0000                     # 7188 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1334                           SSPADD equ 0FC8h ;# 
  1335  0000                     # 7195 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1336                           SSPBUF equ 0FC9h ;# 
  1337  0000                     # 7202 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1338                           T2CON equ 0FCAh ;# 
  1339  0000                     # 7300 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1340                           PR2 equ 0FCBh ;# 
  1341  0000                     # 7305 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1342                           MEMCON equ 0FCBh ;# 
  1343  0000                     # 7410 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1344                           TMR2 equ 0FCCh ;# 
  1345  0000                     # 7417 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1346                           T1CON equ 0FCDh ;# 
  1347  0000                     # 7520 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1348                           TMR1 equ 0FCEh ;# 
  1349  0000                     # 7527 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1350                           TMR1L equ 0FCEh ;# 
  1351  0000                     # 7534 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1352                           TMR1H equ 0FCFh ;# 
  1353  0000                     # 7541 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1354                           RCON equ 0FD0h ;# 
  1355  0000                     # 7690 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1356                           WDTCON equ 0FD1h ;# 
  1357  0000                     # 7718 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1358                           HLVDCON equ 0FD2h ;# 
  1359  0000                     # 7723 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1360                           LVDCON equ 0FD2h ;# 
  1361  0000                     # 7988 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1362                           OSCCON equ 0FD3h ;# 
  1363  0000                     # 8071 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1364                           T0CON equ 0FD5h ;# 
  1365  0000                     # 8141 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1366                           TMR0 equ 0FD6h ;# 
  1367  0000                     # 8148 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1368                           TMR0L equ 0FD6h ;# 
  1369  0000                     # 8155 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1370                           TMR0H equ 0FD7h ;# 
  1371  0000                     # 8162 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1372                           STATUS equ 0FD8h ;# 
  1373  0000                     # 8233 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1374                           FSR2 equ 0FD9h ;# 
  1375  0000                     # 8240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1376                           FSR2L equ 0FD9h ;# 
  1377  0000                     # 8247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1378                           FSR2H equ 0FDAh ;# 
  1379  0000                     # 8254 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1380                           PLUSW2 equ 0FDBh ;# 
  1381  0000                     # 8261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1382                           PREINC2 equ 0FDCh ;# 
  1383  0000                     # 8268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1384                           POSTDEC2 equ 0FDDh ;# 
  1385  0000                     # 8275 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1386                           POSTINC2 equ 0FDEh ;# 
  1387  0000                     # 8282 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1388                           INDF2 equ 0FDFh ;# 
  1389  0000                     # 8289 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1390                           BSR equ 0FE0h ;# 
  1391  0000                     # 8296 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1392                           FSR1 equ 0FE1h ;# 
  1393  0000                     # 8303 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1394                           FSR1L equ 0FE1h ;# 
  1395  0000                     # 8310 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1396                           FSR1H equ 0FE2h ;# 
  1397  0000                     # 8317 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1398                           PLUSW1 equ 0FE3h ;# 
  1399  0000                     # 8324 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1400                           PREINC1 equ 0FE4h ;# 
  1401  0000                     # 8331 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1402                           POSTDEC1 equ 0FE5h ;# 
  1403  0000                     # 8338 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1404                           POSTINC1 equ 0FE6h ;# 
  1405  0000                     # 8345 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1406                           INDF1 equ 0FE7h ;# 
  1407  0000                     # 8352 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1408                           WREG equ 0FE8h ;# 
  1409  0000                     # 8359 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1410                           FSR0 equ 0FE9h ;# 
  1411  0000                     # 8366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1412                           FSR0L equ 0FE9h ;# 
  1413  0000                     # 8373 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1414                           FSR0H equ 0FEAh ;# 
  1415  0000                     # 8380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1416                           PLUSW0 equ 0FEBh ;# 
  1417  0000                     # 8387 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1418                           PREINC0 equ 0FECh ;# 
  1419  0000                     # 8394 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1420                           POSTDEC0 equ 0FEDh ;# 
  1421  0000                     # 8401 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1422                           POSTINC0 equ 0FEEh ;# 
  1423  0000                     # 8408 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1424                           INDF0 equ 0FEFh ;# 
  1425  0000                     # 8415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1426                           INTCON3 equ 0FF0h ;# 
  1427  0000                     # 8507 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1428                           INTCON2 equ 0FF1h ;# 
  1429  0000                     # 8584 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1430                           INTCON equ 0FF2h ;# 
  1431  0000                     # 8701 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1432                           PROD equ 0FF3h ;# 
  1433  0000                     # 8708 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1434                           PRODL equ 0FF3h ;# 
  1435  0000                     # 8715 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1436                           PRODH equ 0FF4h ;# 
  1437  0000                     # 8722 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1438                           TABLAT equ 0FF5h ;# 
  1439  0000                     # 8731 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1440                           TBLPTR equ 0FF6h ;# 
  1441  0000                     # 8738 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1442                           TBLPTRL equ 0FF6h ;# 
  1443  0000                     # 8745 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1444                           TBLPTRH equ 0FF7h ;# 
  1445  0000                     # 8752 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1446                           TBLPTRU equ 0FF8h ;# 
  1447  0000                     # 8761 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1448                           PCLAT equ 0FF9h ;# 
  1449  0000                     # 8768 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1450                           PC equ 0FF9h ;# 
  1451  0000                     # 8775 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1452                           PCL equ 0FF9h ;# 
  1453  0000                     # 8782 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1454                           PCLATH equ 0FFAh ;# 
  1455  0000                     # 8789 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1456                           PCLATU equ 0FFBh ;# 
  1457  0000                     # 8796 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1458                           STKPTR equ 0FFCh ;# 
  1459  0000                     # 8872 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1460                           TOS equ 0FFDh ;# 
  1461  0000                     # 8879 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1462                           TOSL equ 0FFDh ;# 
  1463  0000                     # 8886 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1464                           TOSH equ 0FFEh ;# 
  1465  0000                     # 8893 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1466                           TOSU equ 0FFFh ;# 
  1467  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1468                           SPPDATA equ 0F62h ;# 
  1469  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1470                           SPPCFG equ 0F63h ;# 
  1471  0000                     # 151 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1472                           SPPEPS equ 0F64h ;# 
  1473  0000                     # 225 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1474                           SPPCON equ 0F65h ;# 
  1475  0000                     # 251 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1476                           UFRM equ 0F66h ;# 
  1477  0000                     # 258 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1478                           UFRML equ 0F66h ;# 
  1479  0000                     # 336 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1480                           UFRMH equ 0F67h ;# 
  1481  0000                     # 376 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1482                           UIR equ 0F68h ;# 
  1483  0000                     # 432 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1484                           UIE equ 0F69h ;# 
  1485  0000                     # 488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1486                           UEIR equ 0F6Ah ;# 
  1487  0000                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1488                           UEIE equ 0F6Bh ;# 
  1489  0000                     # 590 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1490                           USTAT equ 0F6Ch ;# 
  1491  0000                     # 650 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1492                           UCON equ 0F6Dh ;# 
  1493  0000                     # 701 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1494                           UADDR equ 0F6Eh ;# 
  1495  0000                     # 765 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1496                           UCFG equ 0F6Fh ;# 
  1497  0000                     # 844 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1498                           UEP0 equ 0F70h ;# 
  1499  0000                     # 952 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1500                           UEP1 equ 0F71h ;# 
  1501  0000                     # 1060 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1502                           UEP2 equ 0F72h ;# 
  1503  0000                     # 1168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1504                           UEP3 equ 0F73h ;# 
  1505  0000                     # 1276 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1506                           UEP4 equ 0F74h ;# 
  1507  0000                     # 1384 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1508                           UEP5 equ 0F75h ;# 
  1509  0000                     # 1492 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1510                           UEP6 equ 0F76h ;# 
  1511  0000                     # 1600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1512                           UEP7 equ 0F77h ;# 
  1513  0000                     # 1708 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1514                           UEP8 equ 0F78h ;# 
  1515  0000                     # 1784 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1516                           UEP9 equ 0F79h ;# 
  1517  0000                     # 1860 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1518                           UEP10 equ 0F7Ah ;# 
  1519  0000                     # 1936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1520                           UEP11 equ 0F7Bh ;# 
  1521  0000                     # 2012 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1522                           UEP12 equ 0F7Ch ;# 
  1523  0000                     # 2088 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1524                           UEP13 equ 0F7Dh ;# 
  1525  0000                     # 2164 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1526                           UEP14 equ 0F7Eh ;# 
  1527  0000                     # 2240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1528                           UEP15 equ 0F7Fh ;# 
  1529  0000                     # 2316 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1530                           PORTA equ 0F80h ;# 
  1531  0000                     # 2455 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1532                           PORTB equ 0F81h ;# 
  1533  0000                     # 2565 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1534                           PORTC equ 0F82h ;# 
  1535  0000                     # 2707 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1536                           PORTD equ 0F83h ;# 
  1537  0000                     # 2828 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1538                           PORTE equ 0F84h ;# 
  1539  0000                     # 2975 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1540                           LATA equ 0F89h ;# 
  1541  0000                     # 3075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1542                           LATB equ 0F8Ah ;# 
  1543  0000                     # 3187 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1544                           LATC equ 0F8Bh ;# 
  1545  0000                     # 3265 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1546                           LATD equ 0F8Ch ;# 
  1547  0000                     # 3377 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1548                           LATE equ 0F8Dh ;# 
  1549  0000                     # 3429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1550                           TRISA equ 0F92h ;# 
  1551  0000                     # 3434 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1552                           DDRA equ 0F92h ;# 
  1553  0000                     # 3627 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1554                           TRISB equ 0F93h ;# 
  1555  0000                     # 3632 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1556                           DDRB equ 0F93h ;# 
  1557  0000                     # 3849 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1558                           TRISC equ 0F94h ;# 
  1559  0000                     # 3854 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1560                           DDRC equ 0F94h ;# 
  1561  0000                     # 4003 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1562                           TRISD equ 0F95h ;# 
  1563  0000                     # 4008 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1564                           DDRD equ 0F95h ;# 
  1565  0000                     # 4225 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1566                           TRISE equ 0F96h ;# 
  1567  0000                     # 4230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1568                           DDRE equ 0F96h ;# 
  1569  0000                     # 4327 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1570                           OSCTUNE equ 0F9Bh ;# 
  1571  0000                     # 4386 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1572                           PIE1 equ 0F9Dh ;# 
  1573  0000                     # 4470 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1574                           PIR1 equ 0F9Eh ;# 
  1575  0000                     # 4554 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1576                           IPR1 equ 0F9Fh ;# 
  1577  0000                     # 4638 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1578                           PIE2 equ 0FA0h ;# 
  1579  0000                     # 4709 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1580                           PIR2 equ 0FA1h ;# 
  1581  0000                     # 4780 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1582                           IPR2 equ 0FA2h ;# 
  1583  0000                     # 4851 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1584                           EECON1 equ 0FA6h ;# 
  1585  0000                     # 4917 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1586                           EECON2 equ 0FA7h ;# 
  1587  0000                     # 4924 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1588                           EEDATA equ 0FA8h ;# 
  1589  0000                     # 4931 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1590                           EEADR equ 0FA9h ;# 
  1591  0000                     # 4938 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1592                           RCSTA equ 0FABh ;# 
  1593  0000                     # 4943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1594                           RCSTA1 equ 0FABh ;# 
  1595  0000                     # 5148 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1596                           TXSTA equ 0FACh ;# 
  1597  0000                     # 5153 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1598                           TXSTA1 equ 0FACh ;# 
  1599  0000                     # 5404 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1600                           TXREG equ 0FADh ;# 
  1601  0000                     # 5409 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1602                           TXREG1 equ 0FADh ;# 
  1603  0000                     # 5416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1604                           RCREG equ 0FAEh ;# 
  1605  0000                     # 5421 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1606                           RCREG1 equ 0FAEh ;# 
  1607  0000                     # 5428 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1608                           SPBRG equ 0FAFh ;# 
  1609  0000                     # 5433 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1610                           SPBRG1 equ 0FAFh ;# 
  1611  0000                     # 5440 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1612                           SPBRGH equ 0FB0h ;# 
  1613  0000                     # 5447 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1614                           T3CON equ 0FB1h ;# 
  1615  0000                     # 5568 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1616                           TMR3 equ 0FB2h ;# 
  1617  0000                     # 5575 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1618                           TMR3L equ 0FB2h ;# 
  1619  0000                     # 5582 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1620                           TMR3H equ 0FB3h ;# 
  1621  0000                     # 5589 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1622                           CMCON equ 0FB4h ;# 
  1623  0000                     # 5679 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1624                           CVRCON equ 0FB5h ;# 
  1625  0000                     # 5764 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1626                           ECCP1AS equ 0FB6h ;# 
  1627  0000                     # 5769 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1628                           CCP1AS equ 0FB6h ;# 
  1629  0000                     # 5926 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1630                           ECCP1DEL equ 0FB7h ;# 
  1631  0000                     # 5931 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1632                           CCP1DEL equ 0FB7h ;# 
  1633  0000                     # 6064 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1634                           BAUDCON equ 0FB8h ;# 
  1635  0000                     # 6069 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1636                           BAUDCTL equ 0FB8h ;# 
  1637  0000                     # 6244 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1638                           CCP2CON equ 0FBAh ;# 
  1639  0000                     # 6308 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1640                           CCPR2 equ 0FBBh ;# 
  1641  0000                     # 6315 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1642                           CCPR2L equ 0FBBh ;# 
  1643  0000                     # 6322 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1644                           CCPR2H equ 0FBCh ;# 
  1645  0000                     # 6329 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1646                           CCP1CON equ 0FBDh ;# 
  1647  0000                     # 6334 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1648                           ECCP1CON equ 0FBDh ;# 
  1649  0000                     # 6491 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1650                           CCPR1 equ 0FBEh ;# 
  1651  0000                     # 6498 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1652                           CCPR1L equ 0FBEh ;# 
  1653  0000                     # 6505 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1654                           CCPR1H equ 0FBFh ;# 
  1655  0000                     # 6512 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1656                           ADCON2 equ 0FC0h ;# 
  1657  0000                     # 6583 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1658                           ADCON1 equ 0FC1h ;# 
  1659  0000                     # 6668 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1660                           ADCON0 equ 0FC2h ;# 
  1661  0000                     # 6787 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1662                           ADRES equ 0FC3h ;# 
  1663  0000                     # 6794 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1664                           ADRESL equ 0FC3h ;# 
  1665  0000                     # 6801 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1666                           ADRESH equ 0FC4h ;# 
  1667  0000                     # 6808 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1668                           SSPCON2 equ 0FC5h ;# 
  1669  0000                     # 6870 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1670                           SSPCON1 equ 0FC6h ;# 
  1671  0000                     # 6940 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1672                           SSPSTAT equ 0FC7h ;# 
  1673  0000                     # 7188 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1674                           SSPADD equ 0FC8h ;# 
  1675  0000                     # 7195 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1676                           SSPBUF equ 0FC9h ;# 
  1677  0000                     # 7202 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1678                           T2CON equ 0FCAh ;# 
  1679  0000                     # 7300 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1680                           PR2 equ 0FCBh ;# 
  1681  0000                     # 7305 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1682                           MEMCON equ 0FCBh ;# 
  1683  0000                     # 7410 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1684                           TMR2 equ 0FCCh ;# 
  1685  0000                     # 7417 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1686                           T1CON equ 0FCDh ;# 
  1687  0000                     # 7520 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1688                           TMR1 equ 0FCEh ;# 
  1689  0000                     # 7527 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1690                           TMR1L equ 0FCEh ;# 
  1691  0000                     # 7534 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1692                           TMR1H equ 0FCFh ;# 
  1693  0000                     # 7541 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1694                           RCON equ 0FD0h ;# 
  1695  0000                     # 7690 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1696                           WDTCON equ 0FD1h ;# 
  1697  0000                     # 7718 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1698                           HLVDCON equ 0FD2h ;# 
  1699  0000                     # 7723 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1700                           LVDCON equ 0FD2h ;# 
  1701  0000                     # 7988 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1702                           OSCCON equ 0FD3h ;# 
  1703  0000                     # 8071 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1704                           T0CON equ 0FD5h ;# 
  1705  0000                     # 8141 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1706                           TMR0 equ 0FD6h ;# 
  1707  0000                     # 8148 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1708                           TMR0L equ 0FD6h ;# 
  1709  0000                     # 8155 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1710                           TMR0H equ 0FD7h ;# 
  1711  0000                     # 8162 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1712                           STATUS equ 0FD8h ;# 
  1713  0000                     # 8233 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1714                           FSR2 equ 0FD9h ;# 
  1715  0000                     # 8240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1716                           FSR2L equ 0FD9h ;# 
  1717  0000                     # 8247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1718                           FSR2H equ 0FDAh ;# 
  1719  0000                     # 8254 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1720                           PLUSW2 equ 0FDBh ;# 
  1721  0000                     # 8261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1722                           PREINC2 equ 0FDCh ;# 
  1723  0000                     # 8268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1724                           POSTDEC2 equ 0FDDh ;# 
  1725  0000                     # 8275 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1726                           POSTINC2 equ 0FDEh ;# 
  1727  0000                     # 8282 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1728                           INDF2 equ 0FDFh ;# 
  1729  0000                     # 8289 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1730                           BSR equ 0FE0h ;# 
  1731  0000                     # 8296 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1732                           FSR1 equ 0FE1h ;# 
  1733  0000                     # 8303 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1734                           FSR1L equ 0FE1h ;# 
  1735  0000                     # 8310 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1736                           FSR1H equ 0FE2h ;# 
  1737  0000                     # 8317 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1738                           PLUSW1 equ 0FE3h ;# 
  1739  0000                     # 8324 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1740                           PREINC1 equ 0FE4h ;# 
  1741  0000                     # 8331 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1742                           POSTDEC1 equ 0FE5h ;# 
  1743  0000                     # 8338 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1744                           POSTINC1 equ 0FE6h ;# 
  1745  0000                     # 8345 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1746                           INDF1 equ 0FE7h ;# 
  1747  0000                     # 8352 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1748                           WREG equ 0FE8h ;# 
  1749  0000                     # 8359 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1750                           FSR0 equ 0FE9h ;# 
  1751  0000                     # 8366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1752                           FSR0L equ 0FE9h ;# 
  1753  0000                     # 8373 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1754                           FSR0H equ 0FEAh ;# 
  1755  0000                     # 8380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1756                           PLUSW0 equ 0FEBh ;# 
  1757  0000                     # 8387 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1758                           PREINC0 equ 0FECh ;# 
  1759  0000                     # 8394 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1760                           POSTDEC0 equ 0FEDh ;# 
  1761  0000                     # 8401 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1762                           POSTINC0 equ 0FEEh ;# 
  1763  0000                     # 8408 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1764                           INDF0 equ 0FEFh ;# 
  1765  0000                     # 8415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1766                           INTCON3 equ 0FF0h ;# 
  1767  0000                     # 8507 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1768                           INTCON2 equ 0FF1h ;# 
  1769  0000                     # 8584 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1770                           INTCON equ 0FF2h ;# 
  1771  0000                     # 8701 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1772                           PROD equ 0FF3h ;# 
  1773  0000                     # 8708 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1774                           PRODL equ 0FF3h ;# 
  1775  0000                     # 8715 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1776                           PRODH equ 0FF4h ;# 
  1777  0000                     # 8722 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1778                           TABLAT equ 0FF5h ;# 
  1779  0000                     # 8731 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1780                           TBLPTR equ 0FF6h ;# 
  1781  0000                     # 8738 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1782                           TBLPTRL equ 0FF6h ;# 
  1783  0000                     # 8745 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1784                           TBLPTRH equ 0FF7h ;# 
  1785  0000                     # 8752 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1786                           TBLPTRU equ 0FF8h ;# 
  1787  0000                     # 8761 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1788                           PCLAT equ 0FF9h ;# 
  1789  0000                     # 8768 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1790                           PC equ 0FF9h ;# 
  1791  0000                     # 8775 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1792                           PCL equ 0FF9h ;# 
  1793  0000                     # 8782 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1794                           PCLATH equ 0FFAh ;# 
  1795  0000                     # 8789 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1796                           PCLATU equ 0FFBh ;# 
  1797  0000                     # 8796 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1798                           STKPTR equ 0FFCh ;# 
  1799  0000                     # 8872 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1800                           TOS equ 0FFDh ;# 
  1801  0000                     # 8879 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1802                           TOSL equ 0FFDh ;# 
  1803  0000                     # 8886 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1804                           TOSH equ 0FFEh ;# 
  1805  0000                     # 8893 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1806                           TOSU equ 0FFFh ;# 
  1807  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1808                           SPPDATA equ 0F62h ;# 
  1809  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1810                           SPPCFG equ 0F63h ;# 
  1811  0000                     # 151 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1812                           SPPEPS equ 0F64h ;# 
  1813  0000                     # 225 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1814                           SPPCON equ 0F65h ;# 
  1815  0000                     # 251 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1816                           UFRM equ 0F66h ;# 
  1817  0000                     # 258 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1818                           UFRML equ 0F66h ;# 
  1819  0000                     # 336 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1820                           UFRMH equ 0F67h ;# 
  1821  0000                     # 376 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1822                           UIR equ 0F68h ;# 
  1823  0000                     # 432 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1824                           UIE equ 0F69h ;# 
  1825  0000                     # 488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1826                           UEIR equ 0F6Ah ;# 
  1827  0000                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1828                           UEIE equ 0F6Bh ;# 
  1829  0000                     # 590 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1830                           USTAT equ 0F6Ch ;# 
  1831  0000                     # 650 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1832                           UCON equ 0F6Dh ;# 
  1833  0000                     # 701 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1834                           UADDR equ 0F6Eh ;# 
  1835  0000                     # 765 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1836                           UCFG equ 0F6Fh ;# 
  1837  0000                     # 844 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1838                           UEP0 equ 0F70h ;# 
  1839  0000                     # 952 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1840                           UEP1 equ 0F71h ;# 
  1841  0000                     # 1060 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1842                           UEP2 equ 0F72h ;# 
  1843  0000                     # 1168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1844                           UEP3 equ 0F73h ;# 
  1845  0000                     # 1276 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1846                           UEP4 equ 0F74h ;# 
  1847  0000                     # 1384 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1848                           UEP5 equ 0F75h ;# 
  1849  0000                     # 1492 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1850                           UEP6 equ 0F76h ;# 
  1851  0000                     # 1600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1852                           UEP7 equ 0F77h ;# 
  1853  0000                     # 1708 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1854                           UEP8 equ 0F78h ;# 
  1855  0000                     # 1784 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1856                           UEP9 equ 0F79h ;# 
  1857  0000                     # 1860 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1858                           UEP10 equ 0F7Ah ;# 
  1859  0000                     # 1936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1860                           UEP11 equ 0F7Bh ;# 
  1861  0000                     # 2012 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1862                           UEP12 equ 0F7Ch ;# 
  1863  0000                     # 2088 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1864                           UEP13 equ 0F7Dh ;# 
  1865  0000                     # 2164 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1866                           UEP14 equ 0F7Eh ;# 
  1867  0000                     # 2240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1868                           UEP15 equ 0F7Fh ;# 
  1869  0000                     # 2316 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1870                           PORTA equ 0F80h ;# 
  1871  0000                     # 2455 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1872                           PORTB equ 0F81h ;# 
  1873  0000                     # 2565 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1874                           PORTC equ 0F82h ;# 
  1875  0000                     # 2707 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1876                           PORTD equ 0F83h ;# 
  1877  0000                     # 2828 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1878                           PORTE equ 0F84h ;# 
  1879  0000                     # 2975 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1880                           LATA equ 0F89h ;# 
  1881  0000                     # 3075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1882                           LATB equ 0F8Ah ;# 
  1883  0000                     # 3187 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1884                           LATC equ 0F8Bh ;# 
  1885  0000                     # 3265 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1886                           LATD equ 0F8Ch ;# 
  1887  0000                     # 3377 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1888                           LATE equ 0F8Dh ;# 
  1889  0000                     # 3429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1890                           TRISA equ 0F92h ;# 
  1891  0000                     # 3434 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1892                           DDRA equ 0F92h ;# 
  1893  0000                     # 3627 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1894                           TRISB equ 0F93h ;# 
  1895  0000                     # 3632 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1896                           DDRB equ 0F93h ;# 
  1897  0000                     # 3849 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1898                           TRISC equ 0F94h ;# 
  1899  0000                     # 3854 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1900                           DDRC equ 0F94h ;# 
  1901  0000                     # 4003 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1902                           TRISD equ 0F95h ;# 
  1903  0000                     # 4008 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1904                           DDRD equ 0F95h ;# 
  1905  0000                     # 4225 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1906                           TRISE equ 0F96h ;# 
  1907  0000                     # 4230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1908                           DDRE equ 0F96h ;# 
  1909  0000                     # 4327 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1910                           OSCTUNE equ 0F9Bh ;# 
  1911  0000                     # 4386 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1912                           PIE1 equ 0F9Dh ;# 
  1913  0000                     # 4470 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1914                           PIR1 equ 0F9Eh ;# 
  1915  0000                     # 4554 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1916                           IPR1 equ 0F9Fh ;# 
  1917  0000                     # 4638 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1918                           PIE2 equ 0FA0h ;# 
  1919  0000                     # 4709 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1920                           PIR2 equ 0FA1h ;# 
  1921  0000                     # 4780 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1922                           IPR2 equ 0FA2h ;# 
  1923  0000                     # 4851 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1924                           EECON1 equ 0FA6h ;# 
  1925  0000                     # 4917 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1926                           EECON2 equ 0FA7h ;# 
  1927  0000                     # 4924 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1928                           EEDATA equ 0FA8h ;# 
  1929  0000                     # 4931 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1930                           EEADR equ 0FA9h ;# 
  1931  0000                     # 4938 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1932                           RCSTA equ 0FABh ;# 
  1933  0000                     # 4943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1934                           RCSTA1 equ 0FABh ;# 
  1935  0000                     # 5148 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1936                           TXSTA equ 0FACh ;# 
  1937  0000                     # 5153 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1938                           TXSTA1 equ 0FACh ;# 
  1939  0000                     # 5404 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1940                           TXREG equ 0FADh ;# 
  1941  0000                     # 5409 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1942                           TXREG1 equ 0FADh ;# 
  1943  0000                     # 5416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1944                           RCREG equ 0FAEh ;# 
  1945  0000                     # 5421 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1946                           RCREG1 equ 0FAEh ;# 
  1947  0000                     # 5428 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1948                           SPBRG equ 0FAFh ;# 
  1949  0000                     # 5433 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1950                           SPBRG1 equ 0FAFh ;# 
  1951  0000                     # 5440 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1952                           SPBRGH equ 0FB0h ;# 
  1953  0000                     # 5447 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1954                           T3CON equ 0FB1h ;# 
  1955  0000                     # 5568 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1956                           TMR3 equ 0FB2h ;# 
  1957  0000                     # 5575 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1958                           TMR3L equ 0FB2h ;# 
  1959  0000                     # 5582 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1960                           TMR3H equ 0FB3h ;# 
  1961  0000                     # 5589 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1962                           CMCON equ 0FB4h ;# 
  1963  0000                     # 5679 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1964                           CVRCON equ 0FB5h ;# 
  1965  0000                     # 5764 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1966                           ECCP1AS equ 0FB6h ;# 
  1967  0000                     # 5769 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1968                           CCP1AS equ 0FB6h ;# 
  1969  0000                     # 5926 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1970                           ECCP1DEL equ 0FB7h ;# 
  1971  0000                     # 5931 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1972                           CCP1DEL equ 0FB7h ;# 
  1973  0000                     # 6064 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1974                           BAUDCON equ 0FB8h ;# 
  1975  0000                     # 6069 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1976                           BAUDCTL equ 0FB8h ;# 
  1977  0000                     # 6244 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1978                           CCP2CON equ 0FBAh ;# 
  1979  0000                     # 6308 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1980                           CCPR2 equ 0FBBh ;# 
  1981  0000                     # 6315 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1982                           CCPR2L equ 0FBBh ;# 
  1983  0000                     # 6322 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1984                           CCPR2H equ 0FBCh ;# 
  1985  0000                     # 6329 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1986                           CCP1CON equ 0FBDh ;# 
  1987  0000                     # 6334 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1988                           ECCP1CON equ 0FBDh ;# 
  1989  0000                     # 6491 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1990                           CCPR1 equ 0FBEh ;# 
  1991  0000                     # 6498 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1992                           CCPR1L equ 0FBEh ;# 
  1993  0000                     # 6505 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1994                           CCPR1H equ 0FBFh ;# 
  1995  0000                     # 6512 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1996                           ADCON2 equ 0FC0h ;# 
  1997  0000                     # 6583 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  1998                           ADCON1 equ 0FC1h ;# 
  1999  0000                     # 6668 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2000                           ADCON0 equ 0FC2h ;# 
  2001  0000                     # 6787 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2002                           ADRES equ 0FC3h ;# 
  2003  0000                     # 6794 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2004                           ADRESL equ 0FC3h ;# 
  2005  0000                     # 6801 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2006                           ADRESH equ 0FC4h ;# 
  2007  0000                     # 6808 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2008                           SSPCON2 equ 0FC5h ;# 
  2009  0000                     # 6870 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2010                           SSPCON1 equ 0FC6h ;# 
  2011  0000                     # 6940 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2012                           SSPSTAT equ 0FC7h ;# 
  2013  0000                     # 7188 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2014                           SSPADD equ 0FC8h ;# 
  2015  0000                     # 7195 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2016                           SSPBUF equ 0FC9h ;# 
  2017  0000                     # 7202 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2018                           T2CON equ 0FCAh ;# 
  2019  0000                     # 7300 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2020                           PR2 equ 0FCBh ;# 
  2021  0000                     # 7305 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2022                           MEMCON equ 0FCBh ;# 
  2023  0000                     # 7410 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2024                           TMR2 equ 0FCCh ;# 
  2025  0000                     # 7417 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2026                           T1CON equ 0FCDh ;# 
  2027  0000                     # 7520 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2028                           TMR1 equ 0FCEh ;# 
  2029  0000                     # 7527 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2030                           TMR1L equ 0FCEh ;# 
  2031  0000                     # 7534 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2032                           TMR1H equ 0FCFh ;# 
  2033  0000                     # 7541 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2034                           RCON equ 0FD0h ;# 
  2035  0000                     # 7690 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2036                           WDTCON equ 0FD1h ;# 
  2037  0000                     # 7718 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2038                           HLVDCON equ 0FD2h ;# 
  2039  0000                     # 7723 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2040                           LVDCON equ 0FD2h ;# 
  2041  0000                     # 7988 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2042                           OSCCON equ 0FD3h ;# 
  2043  0000                     # 8071 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2044                           T0CON equ 0FD5h ;# 
  2045  0000                     # 8141 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2046                           TMR0 equ 0FD6h ;# 
  2047  0000                     # 8148 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2048                           TMR0L equ 0FD6h ;# 
  2049  0000                     # 8155 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2050                           TMR0H equ 0FD7h ;# 
  2051  0000                     # 8162 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2052                           STATUS equ 0FD8h ;# 
  2053  0000                     # 8233 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2054                           FSR2 equ 0FD9h ;# 
  2055  0000                     # 8240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2056                           FSR2L equ 0FD9h ;# 
  2057  0000                     # 8247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2058                           FSR2H equ 0FDAh ;# 
  2059  0000                     # 8254 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2060                           PLUSW2 equ 0FDBh ;# 
  2061  0000                     # 8261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2062                           PREINC2 equ 0FDCh ;# 
  2063  0000                     # 8268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2064                           POSTDEC2 equ 0FDDh ;# 
  2065  0000                     # 8275 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2066                           POSTINC2 equ 0FDEh ;# 
  2067  0000                     # 8282 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2068                           INDF2 equ 0FDFh ;# 
  2069  0000                     # 8289 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2070                           BSR equ 0FE0h ;# 
  2071  0000                     # 8296 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2072                           FSR1 equ 0FE1h ;# 
  2073  0000                     # 8303 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2074                           FSR1L equ 0FE1h ;# 
  2075  0000                     # 8310 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2076                           FSR1H equ 0FE2h ;# 
  2077  0000                     # 8317 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2078                           PLUSW1 equ 0FE3h ;# 
  2079  0000                     # 8324 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2080                           PREINC1 equ 0FE4h ;# 
  2081  0000                     # 8331 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2082                           POSTDEC1 equ 0FE5h ;# 
  2083  0000                     # 8338 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2084                           POSTINC1 equ 0FE6h ;# 
  2085  0000                     # 8345 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2086                           INDF1 equ 0FE7h ;# 
  2087  0000                     # 8352 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2088                           WREG equ 0FE8h ;# 
  2089  0000                     # 8359 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2090                           FSR0 equ 0FE9h ;# 
  2091  0000                     # 8366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2092                           FSR0L equ 0FE9h ;# 
  2093  0000                     # 8373 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2094                           FSR0H equ 0FEAh ;# 
  2095  0000                     # 8380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2096                           PLUSW0 equ 0FEBh ;# 
  2097  0000                     # 8387 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2098                           PREINC0 equ 0FECh ;# 
  2099  0000                     # 8394 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2100                           POSTDEC0 equ 0FEDh ;# 
  2101  0000                     # 8401 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2102                           POSTINC0 equ 0FEEh ;# 
  2103  0000                     # 8408 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2104                           INDF0 equ 0FEFh ;# 
  2105  0000                     # 8415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2106                           INTCON3 equ 0FF0h ;# 
  2107  0000                     # 8507 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2108                           INTCON2 equ 0FF1h ;# 
  2109  0000                     # 8584 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2110                           INTCON equ 0FF2h ;# 
  2111  0000                     # 8701 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2112                           PROD equ 0FF3h ;# 
  2113  0000                     # 8708 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2114                           PRODL equ 0FF3h ;# 
  2115  0000                     # 8715 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2116                           PRODH equ 0FF4h ;# 
  2117  0000                     # 8722 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2118                           TABLAT equ 0FF5h ;# 
  2119  0000                     # 8731 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2120                           TBLPTR equ 0FF6h ;# 
  2121  0000                     # 8738 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2122                           TBLPTRL equ 0FF6h ;# 
  2123  0000                     # 8745 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2124                           TBLPTRH equ 0FF7h ;# 
  2125  0000                     # 8752 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2126                           TBLPTRU equ 0FF8h ;# 
  2127  0000                     # 8761 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2128                           PCLAT equ 0FF9h ;# 
  2129  0000                     # 8768 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2130                           PC equ 0FF9h ;# 
  2131  0000                     # 8775 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2132                           PCL equ 0FF9h ;# 
  2133  0000                     # 8782 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2134                           PCLATH equ 0FFAh ;# 
  2135  0000                     # 8789 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2136                           PCLATU equ 0FFBh ;# 
  2137  0000                     # 8796 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2138                           STKPTR equ 0FFCh ;# 
  2139  0000                     # 8872 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2140                           TOS equ 0FFDh ;# 
  2141  0000                     # 8879 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2142                           TOSL equ 0FFDh ;# 
  2143  0000                     # 8886 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2144                           TOSH equ 0FFEh ;# 
  2145  0000                     # 8893 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2146                           TOSU equ 0FFFh ;# 
  2147  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2148                           SPPDATA equ 0F62h ;# 
  2149  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2150                           SPPCFG equ 0F63h ;# 
  2151  0000                     # 151 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2152                           SPPEPS equ 0F64h ;# 
  2153  0000                     # 225 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2154                           SPPCON equ 0F65h ;# 
  2155  0000                     # 251 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2156                           UFRM equ 0F66h ;# 
  2157  0000                     # 258 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2158                           UFRML equ 0F66h ;# 
  2159  0000                     # 336 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2160                           UFRMH equ 0F67h ;# 
  2161  0000                     # 376 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2162                           UIR equ 0F68h ;# 
  2163  0000                     # 432 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2164                           UIE equ 0F69h ;# 
  2165  0000                     # 488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2166                           UEIR equ 0F6Ah ;# 
  2167  0000                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2168                           UEIE equ 0F6Bh ;# 
  2169  0000                     # 590 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2170                           USTAT equ 0F6Ch ;# 
  2171  0000                     # 650 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2172                           UCON equ 0F6Dh ;# 
  2173  0000                     # 701 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2174                           UADDR equ 0F6Eh ;# 
  2175  0000                     # 765 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2176                           UCFG equ 0F6Fh ;# 
  2177  0000                     # 844 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2178                           UEP0 equ 0F70h ;# 
  2179  0000                     # 952 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2180                           UEP1 equ 0F71h ;# 
  2181  0000                     # 1060 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2182                           UEP2 equ 0F72h ;# 
  2183  0000                     # 1168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2184                           UEP3 equ 0F73h ;# 
  2185  0000                     # 1276 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2186                           UEP4 equ 0F74h ;# 
  2187  0000                     # 1384 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2188                           UEP5 equ 0F75h ;# 
  2189  0000                     # 1492 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2190                           UEP6 equ 0F76h ;# 
  2191  0000                     # 1600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2192                           UEP7 equ 0F77h ;# 
  2193  0000                     # 1708 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2194                           UEP8 equ 0F78h ;# 
  2195  0000                     # 1784 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2196                           UEP9 equ 0F79h ;# 
  2197  0000                     # 1860 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2198                           UEP10 equ 0F7Ah ;# 
  2199  0000                     # 1936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2200                           UEP11 equ 0F7Bh ;# 
  2201  0000                     # 2012 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2202                           UEP12 equ 0F7Ch ;# 
  2203  0000                     # 2088 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2204                           UEP13 equ 0F7Dh ;# 
  2205  0000                     # 2164 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2206                           UEP14 equ 0F7Eh ;# 
  2207  0000                     # 2240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2208                           UEP15 equ 0F7Fh ;# 
  2209  0000                     # 2316 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2210                           PORTA equ 0F80h ;# 
  2211  0000                     # 2455 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2212                           PORTB equ 0F81h ;# 
  2213  0000                     # 2565 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2214                           PORTC equ 0F82h ;# 
  2215  0000                     # 2707 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2216                           PORTD equ 0F83h ;# 
  2217  0000                     # 2828 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2218                           PORTE equ 0F84h ;# 
  2219  0000                     # 2975 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2220                           LATA equ 0F89h ;# 
  2221  0000                     # 3075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2222                           LATB equ 0F8Ah ;# 
  2223  0000                     # 3187 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2224                           LATC equ 0F8Bh ;# 
  2225  0000                     # 3265 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2226                           LATD equ 0F8Ch ;# 
  2227  0000                     # 3377 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2228                           LATE equ 0F8Dh ;# 
  2229  0000                     # 3429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2230                           TRISA equ 0F92h ;# 
  2231  0000                     # 3434 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2232                           DDRA equ 0F92h ;# 
  2233  0000                     # 3627 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2234                           TRISB equ 0F93h ;# 
  2235  0000                     # 3632 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2236                           DDRB equ 0F93h ;# 
  2237  0000                     # 3849 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2238                           TRISC equ 0F94h ;# 
  2239  0000                     # 3854 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2240                           DDRC equ 0F94h ;# 
  2241  0000                     # 4003 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2242                           TRISD equ 0F95h ;# 
  2243  0000                     # 4008 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2244                           DDRD equ 0F95h ;# 
  2245  0000                     # 4225 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2246                           TRISE equ 0F96h ;# 
  2247  0000                     # 4230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2248                           DDRE equ 0F96h ;# 
  2249  0000                     # 4327 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2250                           OSCTUNE equ 0F9Bh ;# 
  2251  0000                     # 4386 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2252                           PIE1 equ 0F9Dh ;# 
  2253  0000                     # 4470 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2254                           PIR1 equ 0F9Eh ;# 
  2255  0000                     # 4554 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2256                           IPR1 equ 0F9Fh ;# 
  2257  0000                     # 4638 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2258                           PIE2 equ 0FA0h ;# 
  2259  0000                     # 4709 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2260                           PIR2 equ 0FA1h ;# 
  2261  0000                     # 4780 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2262                           IPR2 equ 0FA2h ;# 
  2263  0000                     # 4851 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2264                           EECON1 equ 0FA6h ;# 
  2265  0000                     # 4917 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2266                           EECON2 equ 0FA7h ;# 
  2267  0000                     # 4924 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2268                           EEDATA equ 0FA8h ;# 
  2269  0000                     # 4931 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2270                           EEADR equ 0FA9h ;# 
  2271  0000                     # 4938 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2272                           RCSTA equ 0FABh ;# 
  2273  0000                     # 4943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2274                           RCSTA1 equ 0FABh ;# 
  2275  0000                     # 5148 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2276                           TXSTA equ 0FACh ;# 
  2277  0000                     # 5153 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2278                           TXSTA1 equ 0FACh ;# 
  2279  0000                     # 5404 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2280                           TXREG equ 0FADh ;# 
  2281  0000                     # 5409 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2282                           TXREG1 equ 0FADh ;# 
  2283  0000                     # 5416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2284                           RCREG equ 0FAEh ;# 
  2285  0000                     # 5421 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2286                           RCREG1 equ 0FAEh ;# 
  2287  0000                     # 5428 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2288                           SPBRG equ 0FAFh ;# 
  2289  0000                     # 5433 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2290                           SPBRG1 equ 0FAFh ;# 
  2291  0000                     # 5440 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2292                           SPBRGH equ 0FB0h ;# 
  2293  0000                     # 5447 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2294                           T3CON equ 0FB1h ;# 
  2295  0000                     # 5568 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2296                           TMR3 equ 0FB2h ;# 
  2297  0000                     # 5575 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2298                           TMR3L equ 0FB2h ;# 
  2299  0000                     # 5582 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2300                           TMR3H equ 0FB3h ;# 
  2301  0000                     # 5589 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2302                           CMCON equ 0FB4h ;# 
  2303  0000                     # 5679 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2304                           CVRCON equ 0FB5h ;# 
  2305  0000                     # 5764 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2306                           ECCP1AS equ 0FB6h ;# 
  2307  0000                     # 5769 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2308                           CCP1AS equ 0FB6h ;# 
  2309  0000                     # 5926 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2310                           ECCP1DEL equ 0FB7h ;# 
  2311  0000                     # 5931 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2312                           CCP1DEL equ 0FB7h ;# 
  2313  0000                     # 6064 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2314                           BAUDCON equ 0FB8h ;# 
  2315  0000                     # 6069 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2316                           BAUDCTL equ 0FB8h ;# 
  2317  0000                     # 6244 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2318                           CCP2CON equ 0FBAh ;# 
  2319  0000                     # 6308 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2320                           CCPR2 equ 0FBBh ;# 
  2321  0000                     # 6315 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2322                           CCPR2L equ 0FBBh ;# 
  2323  0000                     # 6322 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2324                           CCPR2H equ 0FBCh ;# 
  2325  0000                     # 6329 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2326                           CCP1CON equ 0FBDh ;# 
  2327  0000                     # 6334 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2328                           ECCP1CON equ 0FBDh ;# 
  2329  0000                     # 6491 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2330                           CCPR1 equ 0FBEh ;# 
  2331  0000                     # 6498 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2332                           CCPR1L equ 0FBEh ;# 
  2333  0000                     # 6505 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2334                           CCPR1H equ 0FBFh ;# 
  2335  0000                     # 6512 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2336                           ADCON2 equ 0FC0h ;# 
  2337  0000                     # 6583 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2338                           ADCON1 equ 0FC1h ;# 
  2339  0000                     # 6668 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2340                           ADCON0 equ 0FC2h ;# 
  2341  0000                     # 6787 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2342                           ADRES equ 0FC3h ;# 
  2343  0000                     # 6794 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2344                           ADRESL equ 0FC3h ;# 
  2345  0000                     # 6801 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2346                           ADRESH equ 0FC4h ;# 
  2347  0000                     # 6808 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2348                           SSPCON2 equ 0FC5h ;# 
  2349  0000                     # 6870 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2350                           SSPCON1 equ 0FC6h ;# 
  2351  0000                     # 6940 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2352                           SSPSTAT equ 0FC7h ;# 
  2353  0000                     # 7188 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2354                           SSPADD equ 0FC8h ;# 
  2355  0000                     # 7195 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2356                           SSPBUF equ 0FC9h ;# 
  2357  0000                     # 7202 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2358                           T2CON equ 0FCAh ;# 
  2359  0000                     # 7300 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2360                           PR2 equ 0FCBh ;# 
  2361  0000                     # 7305 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2362                           MEMCON equ 0FCBh ;# 
  2363  0000                     # 7410 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2364                           TMR2 equ 0FCCh ;# 
  2365  0000                     # 7417 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2366                           T1CON equ 0FCDh ;# 
  2367  0000                     # 7520 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2368                           TMR1 equ 0FCEh ;# 
  2369  0000                     # 7527 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2370                           TMR1L equ 0FCEh ;# 
  2371  0000                     # 7534 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2372                           TMR1H equ 0FCFh ;# 
  2373  0000                     # 7541 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2374                           RCON equ 0FD0h ;# 
  2375  0000                     # 7690 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2376                           WDTCON equ 0FD1h ;# 
  2377  0000                     # 7718 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2378                           HLVDCON equ 0FD2h ;# 
  2379  0000                     # 7723 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2380                           LVDCON equ 0FD2h ;# 
  2381  0000                     # 7988 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2382                           OSCCON equ 0FD3h ;# 
  2383  0000                     # 8071 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2384                           T0CON equ 0FD5h ;# 
  2385  0000                     # 8141 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2386                           TMR0 equ 0FD6h ;# 
  2387  0000                     # 8148 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2388                           TMR0L equ 0FD6h ;# 
  2389  0000                     # 8155 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2390                           TMR0H equ 0FD7h ;# 
  2391  0000                     # 8162 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2392                           STATUS equ 0FD8h ;# 
  2393  0000                     # 8233 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2394                           FSR2 equ 0FD9h ;# 
  2395  0000                     # 8240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2396                           FSR2L equ 0FD9h ;# 
  2397  0000                     # 8247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2398                           FSR2H equ 0FDAh ;# 
  2399  0000                     # 8254 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2400                           PLUSW2 equ 0FDBh ;# 
  2401  0000                     # 8261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2402                           PREINC2 equ 0FDCh ;# 
  2403  0000                     # 8268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2404                           POSTDEC2 equ 0FDDh ;# 
  2405  0000                     # 8275 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2406                           POSTINC2 equ 0FDEh ;# 
  2407  0000                     # 8282 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2408                           INDF2 equ 0FDFh ;# 
  2409  0000                     # 8289 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2410                           BSR equ 0FE0h ;# 
  2411  0000                     # 8296 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2412                           FSR1 equ 0FE1h ;# 
  2413  0000                     # 8303 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2414                           FSR1L equ 0FE1h ;# 
  2415  0000                     # 8310 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2416                           FSR1H equ 0FE2h ;# 
  2417  0000                     # 8317 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2418                           PLUSW1 equ 0FE3h ;# 
  2419  0000                     # 8324 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2420                           PREINC1 equ 0FE4h ;# 
  2421  0000                     # 8331 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2422                           POSTDEC1 equ 0FE5h ;# 
  2423  0000                     # 8338 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2424                           POSTINC1 equ 0FE6h ;# 
  2425  0000                     # 8345 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2426                           INDF1 equ 0FE7h ;# 
  2427  0000                     # 8352 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2428                           WREG equ 0FE8h ;# 
  2429  0000                     # 8359 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2430                           FSR0 equ 0FE9h ;# 
  2431  0000                     # 8366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2432                           FSR0L equ 0FE9h ;# 
  2433  0000                     # 8373 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2434                           FSR0H equ 0FEAh ;# 
  2435  0000                     # 8380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2436                           PLUSW0 equ 0FEBh ;# 
  2437  0000                     # 8387 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2438                           PREINC0 equ 0FECh ;# 
  2439  0000                     # 8394 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2440                           POSTDEC0 equ 0FEDh ;# 
  2441  0000                     # 8401 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2442                           POSTINC0 equ 0FEEh ;# 
  2443  0000                     # 8408 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2444                           INDF0 equ 0FEFh ;# 
  2445  0000                     # 8415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2446                           INTCON3 equ 0FF0h ;# 
  2447  0000                     # 8507 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2448                           INTCON2 equ 0FF1h ;# 
  2449  0000                     # 8584 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2450                           INTCON equ 0FF2h ;# 
  2451  0000                     # 8701 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2452                           PROD equ 0FF3h ;# 
  2453  0000                     # 8708 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2454                           PRODL equ 0FF3h ;# 
  2455  0000                     # 8715 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2456                           PRODH equ 0FF4h ;# 
  2457  0000                     # 8722 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2458                           TABLAT equ 0FF5h ;# 
  2459  0000                     # 8731 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2460                           TBLPTR equ 0FF6h ;# 
  2461  0000                     # 8738 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2462                           TBLPTRL equ 0FF6h ;# 
  2463  0000                     # 8745 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2464                           TBLPTRH equ 0FF7h ;# 
  2465  0000                     # 8752 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2466                           TBLPTRU equ 0FF8h ;# 
  2467  0000                     # 8761 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2468                           PCLAT equ 0FF9h ;# 
  2469  0000                     # 8768 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2470                           PC equ 0FF9h ;# 
  2471  0000                     # 8775 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2472                           PCL equ 0FF9h ;# 
  2473  0000                     # 8782 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2474                           PCLATH equ 0FFAh ;# 
  2475  0000                     # 8789 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2476                           PCLATU equ 0FFBh ;# 
  2477  0000                     # 8796 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2478                           STKPTR equ 0FFCh ;# 
  2479  0000                     # 8872 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2480                           TOS equ 0FFDh ;# 
  2481  0000                     # 8879 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2482                           TOSL equ 0FFDh ;# 
  2483  0000                     # 8886 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2484                           TOSH equ 0FFEh ;# 
  2485  0000                     # 8893 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2486                           TOSU equ 0FFFh ;# 
  2487  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2488                           SPPDATA equ 0F62h ;# 
  2489  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2490                           SPPCFG equ 0F63h ;# 
  2491  0000                     # 151 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2492                           SPPEPS equ 0F64h ;# 
  2493  0000                     # 225 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2494                           SPPCON equ 0F65h ;# 
  2495  0000                     # 251 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2496                           UFRM equ 0F66h ;# 
  2497  0000                     # 258 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2498                           UFRML equ 0F66h ;# 
  2499  0000                     # 336 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2500                           UFRMH equ 0F67h ;# 
  2501  0000                     # 376 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2502                           UIR equ 0F68h ;# 
  2503  0000                     # 432 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2504                           UIE equ 0F69h ;# 
  2505  0000                     # 488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2506                           UEIR equ 0F6Ah ;# 
  2507  0000                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2508                           UEIE equ 0F6Bh ;# 
  2509  0000                     # 590 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2510                           USTAT equ 0F6Ch ;# 
  2511  0000                     # 650 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2512                           UCON equ 0F6Dh ;# 
  2513  0000                     # 701 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2514                           UADDR equ 0F6Eh ;# 
  2515  0000                     # 765 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2516                           UCFG equ 0F6Fh ;# 
  2517  0000                     # 844 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2518                           UEP0 equ 0F70h ;# 
  2519  0000                     # 952 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2520                           UEP1 equ 0F71h ;# 
  2521  0000                     # 1060 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2522                           UEP2 equ 0F72h ;# 
  2523  0000                     # 1168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2524                           UEP3 equ 0F73h ;# 
  2525  0000                     # 1276 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2526                           UEP4 equ 0F74h ;# 
  2527  0000                     # 1384 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2528                           UEP5 equ 0F75h ;# 
  2529  0000                     # 1492 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2530                           UEP6 equ 0F76h ;# 
  2531  0000                     # 1600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2532                           UEP7 equ 0F77h ;# 
  2533  0000                     # 1708 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2534                           UEP8 equ 0F78h ;# 
  2535  0000                     # 1784 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2536                           UEP9 equ 0F79h ;# 
  2537  0000                     # 1860 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2538                           UEP10 equ 0F7Ah ;# 
  2539  0000                     # 1936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2540                           UEP11 equ 0F7Bh ;# 
  2541  0000                     # 2012 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2542                           UEP12 equ 0F7Ch ;# 
  2543  0000                     # 2088 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2544                           UEP13 equ 0F7Dh ;# 
  2545  0000                     # 2164 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2546                           UEP14 equ 0F7Eh ;# 
  2547  0000                     # 2240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2548                           UEP15 equ 0F7Fh ;# 
  2549  0000                     # 2316 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2550                           PORTA equ 0F80h ;# 
  2551  0000                     # 2455 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2552                           PORTB equ 0F81h ;# 
  2553  0000                     # 2565 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2554                           PORTC equ 0F82h ;# 
  2555  0000                     # 2707 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2556                           PORTD equ 0F83h ;# 
  2557  0000                     # 2828 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2558                           PORTE equ 0F84h ;# 
  2559  0000                     # 2975 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2560                           LATA equ 0F89h ;# 
  2561  0000                     # 3075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2562                           LATB equ 0F8Ah ;# 
  2563  0000                     # 3187 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2564                           LATC equ 0F8Bh ;# 
  2565  0000                     # 3265 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2566                           LATD equ 0F8Ch ;# 
  2567  0000                     # 3377 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2568                           LATE equ 0F8Dh ;# 
  2569  0000                     # 3429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2570                           TRISA equ 0F92h ;# 
  2571  0000                     # 3434 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2572                           DDRA equ 0F92h ;# 
  2573  0000                     # 3627 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2574                           TRISB equ 0F93h ;# 
  2575  0000                     # 3632 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2576                           DDRB equ 0F93h ;# 
  2577  0000                     # 3849 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2578                           TRISC equ 0F94h ;# 
  2579  0000                     # 3854 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2580                           DDRC equ 0F94h ;# 
  2581  0000                     # 4003 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2582                           TRISD equ 0F95h ;# 
  2583  0000                     # 4008 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2584                           DDRD equ 0F95h ;# 
  2585  0000                     # 4225 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2586                           TRISE equ 0F96h ;# 
  2587  0000                     # 4230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2588                           DDRE equ 0F96h ;# 
  2589  0000                     # 4327 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2590                           OSCTUNE equ 0F9Bh ;# 
  2591  0000                     # 4386 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2592                           PIE1 equ 0F9Dh ;# 
  2593  0000                     # 4470 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2594                           PIR1 equ 0F9Eh ;# 
  2595  0000                     # 4554 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2596                           IPR1 equ 0F9Fh ;# 
  2597  0000                     # 4638 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2598                           PIE2 equ 0FA0h ;# 
  2599  0000                     # 4709 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2600                           PIR2 equ 0FA1h ;# 
  2601  0000                     # 4780 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2602                           IPR2 equ 0FA2h ;# 
  2603  0000                     # 4851 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2604                           EECON1 equ 0FA6h ;# 
  2605  0000                     # 4917 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2606                           EECON2 equ 0FA7h ;# 
  2607  0000                     # 4924 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2608                           EEDATA equ 0FA8h ;# 
  2609  0000                     # 4931 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2610                           EEADR equ 0FA9h ;# 
  2611  0000                     # 4938 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2612                           RCSTA equ 0FABh ;# 
  2613  0000                     # 4943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2614                           RCSTA1 equ 0FABh ;# 
  2615  0000                     # 5148 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2616                           TXSTA equ 0FACh ;# 
  2617  0000                     # 5153 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2618                           TXSTA1 equ 0FACh ;# 
  2619  0000                     # 5404 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2620                           TXREG equ 0FADh ;# 
  2621  0000                     # 5409 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2622                           TXREG1 equ 0FADh ;# 
  2623  0000                     # 5416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2624                           RCREG equ 0FAEh ;# 
  2625  0000                     # 5421 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2626                           RCREG1 equ 0FAEh ;# 
  2627  0000                     # 5428 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2628                           SPBRG equ 0FAFh ;# 
  2629  0000                     # 5433 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2630                           SPBRG1 equ 0FAFh ;# 
  2631  0000                     # 5440 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2632                           SPBRGH equ 0FB0h ;# 
  2633  0000                     # 5447 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2634                           T3CON equ 0FB1h ;# 
  2635  0000                     # 5568 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2636                           TMR3 equ 0FB2h ;# 
  2637  0000                     # 5575 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2638                           TMR3L equ 0FB2h ;# 
  2639  0000                     # 5582 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2640                           TMR3H equ 0FB3h ;# 
  2641  0000                     # 5589 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2642                           CMCON equ 0FB4h ;# 
  2643  0000                     # 5679 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2644                           CVRCON equ 0FB5h ;# 
  2645  0000                     # 5764 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2646                           ECCP1AS equ 0FB6h ;# 
  2647  0000                     # 5769 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2648                           CCP1AS equ 0FB6h ;# 
  2649  0000                     # 5926 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2650                           ECCP1DEL equ 0FB7h ;# 
  2651  0000                     # 5931 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2652                           CCP1DEL equ 0FB7h ;# 
  2653  0000                     # 6064 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2654                           BAUDCON equ 0FB8h ;# 
  2655  0000                     # 6069 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2656                           BAUDCTL equ 0FB8h ;# 
  2657  0000                     # 6244 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2658                           CCP2CON equ 0FBAh ;# 
  2659  0000                     # 6308 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2660                           CCPR2 equ 0FBBh ;# 
  2661  0000                     # 6315 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2662                           CCPR2L equ 0FBBh ;# 
  2663  0000                     # 6322 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2664                           CCPR2H equ 0FBCh ;# 
  2665  0000                     # 6329 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2666                           CCP1CON equ 0FBDh ;# 
  2667  0000                     # 6334 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2668                           ECCP1CON equ 0FBDh ;# 
  2669  0000                     # 6491 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2670                           CCPR1 equ 0FBEh ;# 
  2671  0000                     # 6498 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2672                           CCPR1L equ 0FBEh ;# 
  2673  0000                     # 6505 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2674                           CCPR1H equ 0FBFh ;# 
  2675  0000                     # 6512 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2676                           ADCON2 equ 0FC0h ;# 
  2677  0000                     # 6583 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2678                           ADCON1 equ 0FC1h ;# 
  2679  0000                     # 6668 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2680                           ADCON0 equ 0FC2h ;# 
  2681  0000                     # 6787 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2682                           ADRES equ 0FC3h ;# 
  2683  0000                     # 6794 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2684                           ADRESL equ 0FC3h ;# 
  2685  0000                     # 6801 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2686                           ADRESH equ 0FC4h ;# 
  2687  0000                     # 6808 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2688                           SSPCON2 equ 0FC5h ;# 
  2689  0000                     # 6870 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2690                           SSPCON1 equ 0FC6h ;# 
  2691  0000                     # 6940 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2692                           SSPSTAT equ 0FC7h ;# 
  2693  0000                     # 7188 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2694                           SSPADD equ 0FC8h ;# 
  2695  0000                     # 7195 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2696                           SSPBUF equ 0FC9h ;# 
  2697  0000                     # 7202 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2698                           T2CON equ 0FCAh ;# 
  2699  0000                     # 7300 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2700                           PR2 equ 0FCBh ;# 
  2701  0000                     # 7305 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2702                           MEMCON equ 0FCBh ;# 
  2703  0000                     # 7410 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2704                           TMR2 equ 0FCCh ;# 
  2705  0000                     # 7417 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2706                           T1CON equ 0FCDh ;# 
  2707  0000                     # 7520 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2708                           TMR1 equ 0FCEh ;# 
  2709  0000                     # 7527 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2710                           TMR1L equ 0FCEh ;# 
  2711  0000                     # 7534 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2712                           TMR1H equ 0FCFh ;# 
  2713  0000                     # 7541 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2714                           RCON equ 0FD0h ;# 
  2715  0000                     # 7690 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2716                           WDTCON equ 0FD1h ;# 
  2717  0000                     # 7718 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2718                           HLVDCON equ 0FD2h ;# 
  2719  0000                     # 7723 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2720                           LVDCON equ 0FD2h ;# 
  2721  0000                     # 7988 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2722                           OSCCON equ 0FD3h ;# 
  2723  0000                     # 8071 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2724                           T0CON equ 0FD5h ;# 
  2725  0000                     # 8141 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2726                           TMR0 equ 0FD6h ;# 
  2727  0000                     # 8148 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2728                           TMR0L equ 0FD6h ;# 
  2729  0000                     # 8155 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2730                           TMR0H equ 0FD7h ;# 
  2731  0000                     # 8162 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2732                           STATUS equ 0FD8h ;# 
  2733  0000                     # 8233 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2734                           FSR2 equ 0FD9h ;# 
  2735  0000                     # 8240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2736                           FSR2L equ 0FD9h ;# 
  2737  0000                     # 8247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2738                           FSR2H equ 0FDAh ;# 
  2739  0000                     # 8254 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2740                           PLUSW2 equ 0FDBh ;# 
  2741  0000                     # 8261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2742                           PREINC2 equ 0FDCh ;# 
  2743  0000                     # 8268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2744                           POSTDEC2 equ 0FDDh ;# 
  2745  0000                     # 8275 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2746                           POSTINC2 equ 0FDEh ;# 
  2747  0000                     # 8282 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2748                           INDF2 equ 0FDFh ;# 
  2749  0000                     # 8289 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2750                           BSR equ 0FE0h ;# 
  2751  0000                     # 8296 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2752                           FSR1 equ 0FE1h ;# 
  2753  0000                     # 8303 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2754                           FSR1L equ 0FE1h ;# 
  2755  0000                     # 8310 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2756                           FSR1H equ 0FE2h ;# 
  2757  0000                     # 8317 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2758                           PLUSW1 equ 0FE3h ;# 
  2759  0000                     # 8324 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2760                           PREINC1 equ 0FE4h ;# 
  2761  0000                     # 8331 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2762                           POSTDEC1 equ 0FE5h ;# 
  2763  0000                     # 8338 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2764                           POSTINC1 equ 0FE6h ;# 
  2765  0000                     # 8345 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2766                           INDF1 equ 0FE7h ;# 
  2767  0000                     # 8352 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2768                           WREG equ 0FE8h ;# 
  2769  0000                     # 8359 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2770                           FSR0 equ 0FE9h ;# 
  2771  0000                     # 8366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2772                           FSR0L equ 0FE9h ;# 
  2773  0000                     # 8373 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2774                           FSR0H equ 0FEAh ;# 
  2775  0000                     # 8380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2776                           PLUSW0 equ 0FEBh ;# 
  2777  0000                     # 8387 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2778                           PREINC0 equ 0FECh ;# 
  2779  0000                     # 8394 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2780                           POSTDEC0 equ 0FEDh ;# 
  2781  0000                     # 8401 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2782                           POSTINC0 equ 0FEEh ;# 
  2783  0000                     # 8408 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2784                           INDF0 equ 0FEFh ;# 
  2785  0000                     # 8415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2786                           INTCON3 equ 0FF0h ;# 
  2787  0000                     # 8507 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2788                           INTCON2 equ 0FF1h ;# 
  2789  0000                     # 8584 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2790                           INTCON equ 0FF2h ;# 
  2791  0000                     # 8701 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2792                           PROD equ 0FF3h ;# 
  2793  0000                     # 8708 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2794                           PRODL equ 0FF3h ;# 
  2795  0000                     # 8715 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2796                           PRODH equ 0FF4h ;# 
  2797  0000                     # 8722 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2798                           TABLAT equ 0FF5h ;# 
  2799  0000                     # 8731 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2800                           TBLPTR equ 0FF6h ;# 
  2801  0000                     # 8738 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2802                           TBLPTRL equ 0FF6h ;# 
  2803  0000                     # 8745 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2804                           TBLPTRH equ 0FF7h ;# 
  2805  0000                     # 8752 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2806                           TBLPTRU equ 0FF8h ;# 
  2807  0000                     # 8761 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2808                           PCLAT equ 0FF9h ;# 
  2809  0000                     # 8768 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2810                           PC equ 0FF9h ;# 
  2811  0000                     # 8775 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2812                           PCL equ 0FF9h ;# 
  2813  0000                     # 8782 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2814                           PCLATH equ 0FFAh ;# 
  2815  0000                     # 8789 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2816                           PCLATU equ 0FFBh ;# 
  2817  0000                     # 8796 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2818                           STKPTR equ 0FFCh ;# 
  2819  0000                     # 8872 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2820                           TOS equ 0FFDh ;# 
  2821  0000                     # 8879 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2822                           TOSL equ 0FFDh ;# 
  2823  0000                     # 8886 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2824                           TOSH equ 0FFEh ;# 
  2825  0000                     # 8893 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2826                           TOSU equ 0FFFh ;# 
  2827  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2828                           SPPDATA equ 0F62h ;# 
  2829  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2830                           SPPCFG equ 0F63h ;# 
  2831  0000                     # 151 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2832                           SPPEPS equ 0F64h ;# 
  2833  0000                     # 225 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2834                           SPPCON equ 0F65h ;# 
  2835  0000                     # 251 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2836                           UFRM equ 0F66h ;# 
  2837  0000                     # 258 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2838                           UFRML equ 0F66h ;# 
  2839  0000                     # 336 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2840                           UFRMH equ 0F67h ;# 
  2841  0000                     # 376 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2842                           UIR equ 0F68h ;# 
  2843  0000                     # 432 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2844                           UIE equ 0F69h ;# 
  2845  0000                     # 488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2846                           UEIR equ 0F6Ah ;# 
  2847  0000                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2848                           UEIE equ 0F6Bh ;# 
  2849  0000                     # 590 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2850                           USTAT equ 0F6Ch ;# 
  2851  0000                     # 650 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2852                           UCON equ 0F6Dh ;# 
  2853  0000                     # 701 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2854                           UADDR equ 0F6Eh ;# 
  2855  0000                     # 765 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2856                           UCFG equ 0F6Fh ;# 
  2857  0000                     # 844 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2858                           UEP0 equ 0F70h ;# 
  2859  0000                     # 952 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2860                           UEP1 equ 0F71h ;# 
  2861  0000                     # 1060 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2862                           UEP2 equ 0F72h ;# 
  2863  0000                     # 1168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2864                           UEP3 equ 0F73h ;# 
  2865  0000                     # 1276 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2866                           UEP4 equ 0F74h ;# 
  2867  0000                     # 1384 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2868                           UEP5 equ 0F75h ;# 
  2869  0000                     # 1492 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2870                           UEP6 equ 0F76h ;# 
  2871  0000                     # 1600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2872                           UEP7 equ 0F77h ;# 
  2873  0000                     # 1708 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2874                           UEP8 equ 0F78h ;# 
  2875  0000                     # 1784 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2876                           UEP9 equ 0F79h ;# 
  2877  0000                     # 1860 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2878                           UEP10 equ 0F7Ah ;# 
  2879  0000                     # 1936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2880                           UEP11 equ 0F7Bh ;# 
  2881  0000                     # 2012 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2882                           UEP12 equ 0F7Ch ;# 
  2883  0000                     # 2088 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2884                           UEP13 equ 0F7Dh ;# 
  2885  0000                     # 2164 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2886                           UEP14 equ 0F7Eh ;# 
  2887  0000                     # 2240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2888                           UEP15 equ 0F7Fh ;# 
  2889  0000                     # 2316 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2890                           PORTA equ 0F80h ;# 
  2891  0000                     # 2455 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2892                           PORTB equ 0F81h ;# 
  2893  0000                     # 2565 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2894                           PORTC equ 0F82h ;# 
  2895  0000                     # 2707 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2896                           PORTD equ 0F83h ;# 
  2897  0000                     # 2828 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2898                           PORTE equ 0F84h ;# 
  2899  0000                     # 2975 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2900                           LATA equ 0F89h ;# 
  2901  0000                     # 3075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2902                           LATB equ 0F8Ah ;# 
  2903  0000                     # 3187 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2904                           LATC equ 0F8Bh ;# 
  2905  0000                     # 3265 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2906                           LATD equ 0F8Ch ;# 
  2907  0000                     # 3377 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2908                           LATE equ 0F8Dh ;# 
  2909  0000                     # 3429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2910                           TRISA equ 0F92h ;# 
  2911  0000                     # 3434 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2912                           DDRA equ 0F92h ;# 
  2913  0000                     # 3627 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2914                           TRISB equ 0F93h ;# 
  2915  0000                     # 3632 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2916                           DDRB equ 0F93h ;# 
  2917  0000                     # 3849 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2918                           TRISC equ 0F94h ;# 
  2919  0000                     # 3854 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2920                           DDRC equ 0F94h ;# 
  2921  0000                     # 4003 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2922                           TRISD equ 0F95h ;# 
  2923  0000                     # 4008 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2924                           DDRD equ 0F95h ;# 
  2925  0000                     # 4225 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2926                           TRISE equ 0F96h ;# 
  2927  0000                     # 4230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2928                           DDRE equ 0F96h ;# 
  2929  0000                     # 4327 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2930                           OSCTUNE equ 0F9Bh ;# 
  2931  0000                     # 4386 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2932                           PIE1 equ 0F9Dh ;# 
  2933  0000                     # 4470 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2934                           PIR1 equ 0F9Eh ;# 
  2935  0000                     # 4554 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2936                           IPR1 equ 0F9Fh ;# 
  2937  0000                     # 4638 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2938                           PIE2 equ 0FA0h ;# 
  2939  0000                     # 4709 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2940                           PIR2 equ 0FA1h ;# 
  2941  0000                     # 4780 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2942                           IPR2 equ 0FA2h ;# 
  2943  0000                     # 4851 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2944                           EECON1 equ 0FA6h ;# 
  2945  0000                     # 4917 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2946                           EECON2 equ 0FA7h ;# 
  2947  0000                     # 4924 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2948                           EEDATA equ 0FA8h ;# 
  2949  0000                     # 4931 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2950                           EEADR equ 0FA9h ;# 
  2951  0000                     # 4938 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2952                           RCSTA equ 0FABh ;# 
  2953  0000                     # 4943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2954                           RCSTA1 equ 0FABh ;# 
  2955  0000                     # 5148 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2956                           TXSTA equ 0FACh ;# 
  2957  0000                     # 5153 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2958                           TXSTA1 equ 0FACh ;# 
  2959  0000                     # 5404 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2960                           TXREG equ 0FADh ;# 
  2961  0000                     # 5409 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2962                           TXREG1 equ 0FADh ;# 
  2963  0000                     # 5416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2964                           RCREG equ 0FAEh ;# 
  2965  0000                     # 5421 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2966                           RCREG1 equ 0FAEh ;# 
  2967  0000                     # 5428 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2968                           SPBRG equ 0FAFh ;# 
  2969  0000                     # 5433 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2970                           SPBRG1 equ 0FAFh ;# 
  2971  0000                     # 5440 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2972                           SPBRGH equ 0FB0h ;# 
  2973  0000                     # 5447 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2974                           T3CON equ 0FB1h ;# 
  2975  0000                     # 5568 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2976                           TMR3 equ 0FB2h ;# 
  2977  0000                     # 5575 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2978                           TMR3L equ 0FB2h ;# 
  2979  0000                     # 5582 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2980                           TMR3H equ 0FB3h ;# 
  2981  0000                     # 5589 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2982                           CMCON equ 0FB4h ;# 
  2983  0000                     # 5679 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2984                           CVRCON equ 0FB5h ;# 
  2985  0000                     # 5764 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2986                           ECCP1AS equ 0FB6h ;# 
  2987  0000                     # 5769 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2988                           CCP1AS equ 0FB6h ;# 
  2989  0000                     # 5926 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2990                           ECCP1DEL equ 0FB7h ;# 
  2991  0000                     # 5931 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2992                           CCP1DEL equ 0FB7h ;# 
  2993  0000                     # 6064 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2994                           BAUDCON equ 0FB8h ;# 
  2995  0000                     # 6069 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2996                           BAUDCTL equ 0FB8h ;# 
  2997  0000                     # 6244 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  2998                           CCP2CON equ 0FBAh ;# 
  2999  0000                     # 6308 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3000                           CCPR2 equ 0FBBh ;# 
  3001  0000                     # 6315 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3002                           CCPR2L equ 0FBBh ;# 
  3003  0000                     # 6322 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3004                           CCPR2H equ 0FBCh ;# 
  3005  0000                     # 6329 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3006                           CCP1CON equ 0FBDh ;# 
  3007  0000                     # 6334 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3008                           ECCP1CON equ 0FBDh ;# 
  3009  0000                     # 6491 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3010                           CCPR1 equ 0FBEh ;# 
  3011  0000                     # 6498 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3012                           CCPR1L equ 0FBEh ;# 
  3013  0000                     # 6505 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3014                           CCPR1H equ 0FBFh ;# 
  3015  0000                     # 6512 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3016                           ADCON2 equ 0FC0h ;# 
  3017  0000                     # 6583 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3018                           ADCON1 equ 0FC1h ;# 
  3019  0000                     # 6668 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3020                           ADCON0 equ 0FC2h ;# 
  3021  0000                     # 6787 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3022                           ADRES equ 0FC3h ;# 
  3023  0000                     # 6794 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3024                           ADRESL equ 0FC3h ;# 
  3025  0000                     # 6801 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3026                           ADRESH equ 0FC4h ;# 
  3027  0000                     # 6808 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3028                           SSPCON2 equ 0FC5h ;# 
  3029  0000                     # 6870 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3030                           SSPCON1 equ 0FC6h ;# 
  3031  0000                     # 6940 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3032                           SSPSTAT equ 0FC7h ;# 
  3033  0000                     # 7188 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3034                           SSPADD equ 0FC8h ;# 
  3035  0000                     # 7195 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3036                           SSPBUF equ 0FC9h ;# 
  3037  0000                     # 7202 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3038                           T2CON equ 0FCAh ;# 
  3039  0000                     # 7300 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3040                           PR2 equ 0FCBh ;# 
  3041  0000                     # 7305 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3042                           MEMCON equ 0FCBh ;# 
  3043  0000                     # 7410 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3044                           TMR2 equ 0FCCh ;# 
  3045  0000                     # 7417 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3046                           T1CON equ 0FCDh ;# 
  3047  0000                     # 7520 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3048                           TMR1 equ 0FCEh ;# 
  3049  0000                     # 7527 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3050                           TMR1L equ 0FCEh ;# 
  3051  0000                     # 7534 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3052                           TMR1H equ 0FCFh ;# 
  3053  0000                     # 7541 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3054                           RCON equ 0FD0h ;# 
  3055  0000                     # 7690 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3056                           WDTCON equ 0FD1h ;# 
  3057  0000                     # 7718 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3058                           HLVDCON equ 0FD2h ;# 
  3059  0000                     # 7723 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3060                           LVDCON equ 0FD2h ;# 
  3061  0000                     # 7988 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3062                           OSCCON equ 0FD3h ;# 
  3063  0000                     # 8071 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3064                           T0CON equ 0FD5h ;# 
  3065  0000                     # 8141 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3066                           TMR0 equ 0FD6h ;# 
  3067  0000                     # 8148 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3068                           TMR0L equ 0FD6h ;# 
  3069  0000                     # 8155 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3070                           TMR0H equ 0FD7h ;# 
  3071  0000                     # 8162 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3072                           STATUS equ 0FD8h ;# 
  3073  0000                     # 8233 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3074                           FSR2 equ 0FD9h ;# 
  3075  0000                     # 8240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3076                           FSR2L equ 0FD9h ;# 
  3077  0000                     # 8247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3078                           FSR2H equ 0FDAh ;# 
  3079  0000                     # 8254 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3080                           PLUSW2 equ 0FDBh ;# 
  3081  0000                     # 8261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3082                           PREINC2 equ 0FDCh ;# 
  3083  0000                     # 8268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3084                           POSTDEC2 equ 0FDDh ;# 
  3085  0000                     # 8275 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3086                           POSTINC2 equ 0FDEh ;# 
  3087  0000                     # 8282 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3088                           INDF2 equ 0FDFh ;# 
  3089  0000                     # 8289 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3090                           BSR equ 0FE0h ;# 
  3091  0000                     # 8296 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3092                           FSR1 equ 0FE1h ;# 
  3093  0000                     # 8303 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3094                           FSR1L equ 0FE1h ;# 
  3095  0000                     # 8310 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3096                           FSR1H equ 0FE2h ;# 
  3097  0000                     # 8317 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3098                           PLUSW1 equ 0FE3h ;# 
  3099  0000                     # 8324 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3100                           PREINC1 equ 0FE4h ;# 
  3101  0000                     # 8331 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3102                           POSTDEC1 equ 0FE5h ;# 
  3103  0000                     # 8338 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3104                           POSTINC1 equ 0FE6h ;# 
  3105  0000                     # 8345 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3106                           INDF1 equ 0FE7h ;# 
  3107  0000                     # 8352 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3108                           WREG equ 0FE8h ;# 
  3109  0000                     # 8359 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3110                           FSR0 equ 0FE9h ;# 
  3111  0000                     # 8366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3112                           FSR0L equ 0FE9h ;# 
  3113  0000                     # 8373 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3114                           FSR0H equ 0FEAh ;# 
  3115  0000                     # 8380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3116                           PLUSW0 equ 0FEBh ;# 
  3117  0000                     # 8387 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3118                           PREINC0 equ 0FECh ;# 
  3119  0000                     # 8394 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3120                           POSTDEC0 equ 0FEDh ;# 
  3121  0000                     # 8401 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3122                           POSTINC0 equ 0FEEh ;# 
  3123  0000                     # 8408 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3124                           INDF0 equ 0FEFh ;# 
  3125  0000                     # 8415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3126                           INTCON3 equ 0FF0h ;# 
  3127  0000                     # 8507 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3128                           INTCON2 equ 0FF1h ;# 
  3129  0000                     # 8584 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3130                           INTCON equ 0FF2h ;# 
  3131  0000                     # 8701 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3132                           PROD equ 0FF3h ;# 
  3133  0000                     # 8708 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3134                           PRODL equ 0FF3h ;# 
  3135  0000                     # 8715 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3136                           PRODH equ 0FF4h ;# 
  3137  0000                     # 8722 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3138                           TABLAT equ 0FF5h ;# 
  3139  0000                     # 8731 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3140                           TBLPTR equ 0FF6h ;# 
  3141  0000                     # 8738 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3142                           TBLPTRL equ 0FF6h ;# 
  3143  0000                     # 8745 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3144                           TBLPTRH equ 0FF7h ;# 
  3145  0000                     # 8752 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3146                           TBLPTRU equ 0FF8h ;# 
  3147  0000                     # 8761 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3148                           PCLAT equ 0FF9h ;# 
  3149  0000                     # 8768 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3150                           PC equ 0FF9h ;# 
  3151  0000                     # 8775 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3152                           PCL equ 0FF9h ;# 
  3153  0000                     # 8782 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3154                           PCLATH equ 0FFAh ;# 
  3155  0000                     # 8789 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3156                           PCLATU equ 0FFBh ;# 
  3157  0000                     # 8796 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3158                           STKPTR equ 0FFCh ;# 
  3159  0000                     # 8872 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3160                           TOS equ 0FFDh ;# 
  3161  0000                     # 8879 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3162                           TOSL equ 0FFDh ;# 
  3163  0000                     # 8886 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3164                           TOSH equ 0FFEh ;# 
  3165  0000                     # 8893 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3166                           TOSU equ 0FFFh ;# 
  3167  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3168                           SPPDATA equ 0F62h ;# 
  3169  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3170                           SPPCFG equ 0F63h ;# 
  3171  0000                     # 151 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3172                           SPPEPS equ 0F64h ;# 
  3173  0000                     # 225 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3174                           SPPCON equ 0F65h ;# 
  3175  0000                     # 251 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3176                           UFRM equ 0F66h ;# 
  3177  0000                     # 258 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3178                           UFRML equ 0F66h ;# 
  3179  0000                     # 336 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3180                           UFRMH equ 0F67h ;# 
  3181  0000                     # 376 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3182                           UIR equ 0F68h ;# 
  3183  0000                     # 432 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3184                           UIE equ 0F69h ;# 
  3185  0000                     # 488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3186                           UEIR equ 0F6Ah ;# 
  3187  0000                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3188                           UEIE equ 0F6Bh ;# 
  3189  0000                     # 590 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3190                           USTAT equ 0F6Ch ;# 
  3191  0000                     # 650 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3192                           UCON equ 0F6Dh ;# 
  3193  0000                     # 701 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3194                           UADDR equ 0F6Eh ;# 
  3195  0000                     # 765 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3196                           UCFG equ 0F6Fh ;# 
  3197  0000                     # 844 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3198                           UEP0 equ 0F70h ;# 
  3199  0000                     # 952 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3200                           UEP1 equ 0F71h ;# 
  3201  0000                     # 1060 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3202                           UEP2 equ 0F72h ;# 
  3203  0000                     # 1168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3204                           UEP3 equ 0F73h ;# 
  3205  0000                     # 1276 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3206                           UEP4 equ 0F74h ;# 
  3207  0000                     # 1384 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3208                           UEP5 equ 0F75h ;# 
  3209  0000                     # 1492 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3210                           UEP6 equ 0F76h ;# 
  3211  0000                     # 1600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3212                           UEP7 equ 0F77h ;# 
  3213  0000                     # 1708 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3214                           UEP8 equ 0F78h ;# 
  3215  0000                     # 1784 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3216                           UEP9 equ 0F79h ;# 
  3217  0000                     # 1860 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3218                           UEP10 equ 0F7Ah ;# 
  3219  0000                     # 1936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3220                           UEP11 equ 0F7Bh ;# 
  3221  0000                     # 2012 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3222                           UEP12 equ 0F7Ch ;# 
  3223  0000                     # 2088 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3224                           UEP13 equ 0F7Dh ;# 
  3225  0000                     # 2164 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3226                           UEP14 equ 0F7Eh ;# 
  3227  0000                     # 2240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3228                           UEP15 equ 0F7Fh ;# 
  3229  0000                     # 2316 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3230                           PORTA equ 0F80h ;# 
  3231  0000                     # 2455 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3232                           PORTB equ 0F81h ;# 
  3233  0000                     # 2565 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3234                           PORTC equ 0F82h ;# 
  3235  0000                     # 2707 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3236                           PORTD equ 0F83h ;# 
  3237  0000                     # 2828 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3238                           PORTE equ 0F84h ;# 
  3239  0000                     # 2975 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3240                           LATA equ 0F89h ;# 
  3241  0000                     # 3075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3242                           LATB equ 0F8Ah ;# 
  3243  0000                     # 3187 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3244                           LATC equ 0F8Bh ;# 
  3245  0000                     # 3265 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3246                           LATD equ 0F8Ch ;# 
  3247  0000                     # 3377 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3248                           LATE equ 0F8Dh ;# 
  3249  0000                     # 3429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3250                           TRISA equ 0F92h ;# 
  3251  0000                     # 3434 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3252                           DDRA equ 0F92h ;# 
  3253  0000                     # 3627 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3254                           TRISB equ 0F93h ;# 
  3255  0000                     # 3632 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3256                           DDRB equ 0F93h ;# 
  3257  0000                     # 3849 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3258                           TRISC equ 0F94h ;# 
  3259  0000                     # 3854 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3260                           DDRC equ 0F94h ;# 
  3261  0000                     # 4003 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3262                           TRISD equ 0F95h ;# 
  3263  0000                     # 4008 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3264                           DDRD equ 0F95h ;# 
  3265  0000                     # 4225 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3266                           TRISE equ 0F96h ;# 
  3267  0000                     # 4230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3268                           DDRE equ 0F96h ;# 
  3269  0000                     # 4327 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3270                           OSCTUNE equ 0F9Bh ;# 
  3271  0000                     # 4386 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3272                           PIE1 equ 0F9Dh ;# 
  3273  0000                     # 4470 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3274                           PIR1 equ 0F9Eh ;# 
  3275  0000                     # 4554 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3276                           IPR1 equ 0F9Fh ;# 
  3277  0000                     # 4638 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3278                           PIE2 equ 0FA0h ;# 
  3279  0000                     # 4709 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3280                           PIR2 equ 0FA1h ;# 
  3281  0000                     # 4780 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3282                           IPR2 equ 0FA2h ;# 
  3283  0000                     # 4851 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3284                           EECON1 equ 0FA6h ;# 
  3285  0000                     # 4917 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3286                           EECON2 equ 0FA7h ;# 
  3287  0000                     # 4924 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3288                           EEDATA equ 0FA8h ;# 
  3289  0000                     # 4931 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3290                           EEADR equ 0FA9h ;# 
  3291  0000                     # 4938 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3292                           RCSTA equ 0FABh ;# 
  3293  0000                     # 4943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3294                           RCSTA1 equ 0FABh ;# 
  3295  0000                     # 5148 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3296                           TXSTA equ 0FACh ;# 
  3297  0000                     # 5153 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3298                           TXSTA1 equ 0FACh ;# 
  3299  0000                     # 5404 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3300                           TXREG equ 0FADh ;# 
  3301  0000                     # 5409 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3302                           TXREG1 equ 0FADh ;# 
  3303  0000                     # 5416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3304                           RCREG equ 0FAEh ;# 
  3305  0000                     # 5421 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3306                           RCREG1 equ 0FAEh ;# 
  3307  0000                     # 5428 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3308                           SPBRG equ 0FAFh ;# 
  3309  0000                     # 5433 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3310                           SPBRG1 equ 0FAFh ;# 
  3311  0000                     # 5440 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3312                           SPBRGH equ 0FB0h ;# 
  3313  0000                     # 5447 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3314                           T3CON equ 0FB1h ;# 
  3315  0000                     # 5568 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3316                           TMR3 equ 0FB2h ;# 
  3317  0000                     # 5575 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3318                           TMR3L equ 0FB2h ;# 
  3319  0000                     # 5582 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3320                           TMR3H equ 0FB3h ;# 
  3321  0000                     # 5589 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3322                           CMCON equ 0FB4h ;# 
  3323  0000                     # 5679 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3324                           CVRCON equ 0FB5h ;# 
  3325  0000                     # 5764 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3326                           ECCP1AS equ 0FB6h ;# 
  3327  0000                     # 5769 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3328                           CCP1AS equ 0FB6h ;# 
  3329  0000                     # 5926 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3330                           ECCP1DEL equ 0FB7h ;# 
  3331  0000                     # 5931 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3332                           CCP1DEL equ 0FB7h ;# 
  3333  0000                     # 6064 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3334                           BAUDCON equ 0FB8h ;# 
  3335  0000                     # 6069 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3336                           BAUDCTL equ 0FB8h ;# 
  3337  0000                     # 6244 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3338                           CCP2CON equ 0FBAh ;# 
  3339  0000                     # 6308 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3340                           CCPR2 equ 0FBBh ;# 
  3341  0000                     # 6315 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3342                           CCPR2L equ 0FBBh ;# 
  3343  0000                     # 6322 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3344                           CCPR2H equ 0FBCh ;# 
  3345  0000                     # 6329 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3346                           CCP1CON equ 0FBDh ;# 
  3347  0000                     # 6334 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3348                           ECCP1CON equ 0FBDh ;# 
  3349  0000                     # 6491 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3350                           CCPR1 equ 0FBEh ;# 
  3351  0000                     # 6498 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3352                           CCPR1L equ 0FBEh ;# 
  3353  0000                     # 6505 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3354                           CCPR1H equ 0FBFh ;# 
  3355  0000                     # 6512 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3356                           ADCON2 equ 0FC0h ;# 
  3357  0000                     # 6583 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3358                           ADCON1 equ 0FC1h ;# 
  3359  0000                     # 6668 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3360                           ADCON0 equ 0FC2h ;# 
  3361  0000                     # 6787 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3362                           ADRES equ 0FC3h ;# 
  3363  0000                     # 6794 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3364                           ADRESL equ 0FC3h ;# 
  3365  0000                     # 6801 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3366                           ADRESH equ 0FC4h ;# 
  3367  0000                     # 6808 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3368                           SSPCON2 equ 0FC5h ;# 
  3369  0000                     # 6870 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3370                           SSPCON1 equ 0FC6h ;# 
  3371  0000                     # 6940 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3372                           SSPSTAT equ 0FC7h ;# 
  3373  0000                     # 7188 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3374                           SSPADD equ 0FC8h ;# 
  3375  0000                     # 7195 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3376                           SSPBUF equ 0FC9h ;# 
  3377  0000                     # 7202 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3378                           T2CON equ 0FCAh ;# 
  3379  0000                     # 7300 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3380                           PR2 equ 0FCBh ;# 
  3381  0000                     # 7305 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3382                           MEMCON equ 0FCBh ;# 
  3383  0000                     # 7410 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3384                           TMR2 equ 0FCCh ;# 
  3385  0000                     # 7417 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3386                           T1CON equ 0FCDh ;# 
  3387  0000                     # 7520 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3388                           TMR1 equ 0FCEh ;# 
  3389  0000                     # 7527 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3390                           TMR1L equ 0FCEh ;# 
  3391  0000                     # 7534 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3392                           TMR1H equ 0FCFh ;# 
  3393  0000                     # 7541 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3394                           RCON equ 0FD0h ;# 
  3395  0000                     # 7690 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3396                           WDTCON equ 0FD1h ;# 
  3397  0000                     # 7718 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3398                           HLVDCON equ 0FD2h ;# 
  3399  0000                     # 7723 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3400                           LVDCON equ 0FD2h ;# 
  3401  0000                     # 7988 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3402                           OSCCON equ 0FD3h ;# 
  3403  0000                     # 8071 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3404                           T0CON equ 0FD5h ;# 
  3405  0000                     # 8141 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3406                           TMR0 equ 0FD6h ;# 
  3407  0000                     # 8148 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3408                           TMR0L equ 0FD6h ;# 
  3409  0000                     # 8155 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3410                           TMR0H equ 0FD7h ;# 
  3411  0000                     # 8162 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3412                           STATUS equ 0FD8h ;# 
  3413  0000                     # 8233 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3414                           FSR2 equ 0FD9h ;# 
  3415  0000                     # 8240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3416                           FSR2L equ 0FD9h ;# 
  3417  0000                     # 8247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3418                           FSR2H equ 0FDAh ;# 
  3419  0000                     # 8254 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3420                           PLUSW2 equ 0FDBh ;# 
  3421  0000                     # 8261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3422                           PREINC2 equ 0FDCh ;# 
  3423  0000                     # 8268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3424                           POSTDEC2 equ 0FDDh ;# 
  3425  0000                     # 8275 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3426                           POSTINC2 equ 0FDEh ;# 
  3427  0000                     # 8282 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3428                           INDF2 equ 0FDFh ;# 
  3429  0000                     # 8289 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3430                           BSR equ 0FE0h ;# 
  3431  0000                     # 8296 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3432                           FSR1 equ 0FE1h ;# 
  3433  0000                     # 8303 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3434                           FSR1L equ 0FE1h ;# 
  3435  0000                     # 8310 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3436                           FSR1H equ 0FE2h ;# 
  3437  0000                     # 8317 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3438                           PLUSW1 equ 0FE3h ;# 
  3439  0000                     # 8324 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3440                           PREINC1 equ 0FE4h ;# 
  3441  0000                     # 8331 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3442                           POSTDEC1 equ 0FE5h ;# 
  3443  0000                     # 8338 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3444                           POSTINC1 equ 0FE6h ;# 
  3445  0000                     # 8345 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3446                           INDF1 equ 0FE7h ;# 
  3447  0000                     # 8352 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3448                           WREG equ 0FE8h ;# 
  3449  0000                     # 8359 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3450                           FSR0 equ 0FE9h ;# 
  3451  0000                     # 8366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3452                           FSR0L equ 0FE9h ;# 
  3453  0000                     # 8373 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3454                           FSR0H equ 0FEAh ;# 
  3455  0000                     # 8380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3456                           PLUSW0 equ 0FEBh ;# 
  3457  0000                     # 8387 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3458                           PREINC0 equ 0FECh ;# 
  3459  0000                     # 8394 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3460                           POSTDEC0 equ 0FEDh ;# 
  3461  0000                     # 8401 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3462                           POSTINC0 equ 0FEEh ;# 
  3463  0000                     # 8408 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3464                           INDF0 equ 0FEFh ;# 
  3465  0000                     # 8415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3466                           INTCON3 equ 0FF0h ;# 
  3467  0000                     # 8507 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3468                           INTCON2 equ 0FF1h ;# 
  3469  0000                     # 8584 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3470                           INTCON equ 0FF2h ;# 
  3471  0000                     # 8701 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3472                           PROD equ 0FF3h ;# 
  3473  0000                     # 8708 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3474                           PRODL equ 0FF3h ;# 
  3475  0000                     # 8715 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3476                           PRODH equ 0FF4h ;# 
  3477  0000                     # 8722 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3478                           TABLAT equ 0FF5h ;# 
  3479  0000                     # 8731 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3480                           TBLPTR equ 0FF6h ;# 
  3481  0000                     # 8738 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3482                           TBLPTRL equ 0FF6h ;# 
  3483  0000                     # 8745 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3484                           TBLPTRH equ 0FF7h ;# 
  3485  0000                     # 8752 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3486                           TBLPTRU equ 0FF8h ;# 
  3487  0000                     # 8761 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3488                           PCLAT equ 0FF9h ;# 
  3489  0000                     # 8768 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3490                           PC equ 0FF9h ;# 
  3491  0000                     # 8775 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3492                           PCL equ 0FF9h ;# 
  3493  0000                     # 8782 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3494                           PCLATH equ 0FFAh ;# 
  3495  0000                     # 8789 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3496                           PCLATU equ 0FFBh ;# 
  3497  0000                     # 8796 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3498                           STKPTR equ 0FFCh ;# 
  3499  0000                     # 8872 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3500                           TOS equ 0FFDh ;# 
  3501  0000                     # 8879 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3502                           TOSL equ 0FFDh ;# 
  3503  0000                     # 8886 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3504                           TOSH equ 0FFEh ;# 
  3505  0000                     # 8893 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3506                           TOSU equ 0FFFh ;# 
  3507  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3508                           SPPDATA equ 0F62h ;# 
  3509  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3510                           SPPCFG equ 0F63h ;# 
  3511  0000                     # 151 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3512                           SPPEPS equ 0F64h ;# 
  3513  0000                     # 225 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3514                           SPPCON equ 0F65h ;# 
  3515  0000                     # 251 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3516                           UFRM equ 0F66h ;# 
  3517  0000                     # 258 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3518                           UFRML equ 0F66h ;# 
  3519  0000                     # 336 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3520                           UFRMH equ 0F67h ;# 
  3521  0000                     # 376 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3522                           UIR equ 0F68h ;# 
  3523  0000                     # 432 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3524                           UIE equ 0F69h ;# 
  3525  0000                     # 488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3526                           UEIR equ 0F6Ah ;# 
  3527  0000                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3528                           UEIE equ 0F6Bh ;# 
  3529  0000                     # 590 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3530                           USTAT equ 0F6Ch ;# 
  3531  0000                     # 650 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3532                           UCON equ 0F6Dh ;# 
  3533  0000                     # 701 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3534                           UADDR equ 0F6Eh ;# 
  3535  0000                     # 765 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3536                           UCFG equ 0F6Fh ;# 
  3537  0000                     # 844 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3538                           UEP0 equ 0F70h ;# 
  3539  0000                     # 952 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3540                           UEP1 equ 0F71h ;# 
  3541  0000                     # 1060 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3542                           UEP2 equ 0F72h ;# 
  3543  0000                     # 1168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3544                           UEP3 equ 0F73h ;# 
  3545  0000                     # 1276 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3546                           UEP4 equ 0F74h ;# 
  3547  0000                     # 1384 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3548                           UEP5 equ 0F75h ;# 
  3549  0000                     # 1492 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3550                           UEP6 equ 0F76h ;# 
  3551  0000                     # 1600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3552                           UEP7 equ 0F77h ;# 
  3553  0000                     # 1708 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3554                           UEP8 equ 0F78h ;# 
  3555  0000                     # 1784 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3556                           UEP9 equ 0F79h ;# 
  3557  0000                     # 1860 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3558                           UEP10 equ 0F7Ah ;# 
  3559  0000                     # 1936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3560                           UEP11 equ 0F7Bh ;# 
  3561  0000                     # 2012 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3562                           UEP12 equ 0F7Ch ;# 
  3563  0000                     # 2088 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3564                           UEP13 equ 0F7Dh ;# 
  3565  0000                     # 2164 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3566                           UEP14 equ 0F7Eh ;# 
  3567  0000                     # 2240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3568                           UEP15 equ 0F7Fh ;# 
  3569  0000                     # 2316 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3570                           PORTA equ 0F80h ;# 
  3571  0000                     # 2455 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3572                           PORTB equ 0F81h ;# 
  3573  0000                     # 2565 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3574                           PORTC equ 0F82h ;# 
  3575  0000                     # 2707 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3576                           PORTD equ 0F83h ;# 
  3577  0000                     # 2828 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3578                           PORTE equ 0F84h ;# 
  3579  0000                     # 2975 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3580                           LATA equ 0F89h ;# 
  3581  0000                     # 3075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3582                           LATB equ 0F8Ah ;# 
  3583  0000                     # 3187 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3584                           LATC equ 0F8Bh ;# 
  3585  0000                     # 3265 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3586                           LATD equ 0F8Ch ;# 
  3587  0000                     # 3377 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3588                           LATE equ 0F8Dh ;# 
  3589  0000                     # 3429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3590                           TRISA equ 0F92h ;# 
  3591  0000                     # 3434 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3592                           DDRA equ 0F92h ;# 
  3593  0000                     # 3627 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3594                           TRISB equ 0F93h ;# 
  3595  0000                     # 3632 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3596                           DDRB equ 0F93h ;# 
  3597  0000                     # 3849 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3598                           TRISC equ 0F94h ;# 
  3599  0000                     # 3854 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3600                           DDRC equ 0F94h ;# 
  3601  0000                     # 4003 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3602                           TRISD equ 0F95h ;# 
  3603  0000                     # 4008 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3604                           DDRD equ 0F95h ;# 
  3605  0000                     # 4225 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3606                           TRISE equ 0F96h ;# 
  3607  0000                     # 4230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3608                           DDRE equ 0F96h ;# 
  3609  0000                     # 4327 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3610                           OSCTUNE equ 0F9Bh ;# 
  3611  0000                     # 4386 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3612                           PIE1 equ 0F9Dh ;# 
  3613  0000                     # 4470 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3614                           PIR1 equ 0F9Eh ;# 
  3615  0000                     # 4554 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3616                           IPR1 equ 0F9Fh ;# 
  3617  0000                     # 4638 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3618                           PIE2 equ 0FA0h ;# 
  3619  0000                     # 4709 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3620                           PIR2 equ 0FA1h ;# 
  3621  0000                     # 4780 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3622                           IPR2 equ 0FA2h ;# 
  3623  0000                     # 4851 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3624                           EECON1 equ 0FA6h ;# 
  3625  0000                     # 4917 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3626                           EECON2 equ 0FA7h ;# 
  3627  0000                     # 4924 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3628                           EEDATA equ 0FA8h ;# 
  3629  0000                     # 4931 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3630                           EEADR equ 0FA9h ;# 
  3631  0000                     # 4938 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3632                           RCSTA equ 0FABh ;# 
  3633  0000                     # 4943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3634                           RCSTA1 equ 0FABh ;# 
  3635  0000                     # 5148 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3636                           TXSTA equ 0FACh ;# 
  3637  0000                     # 5153 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3638                           TXSTA1 equ 0FACh ;# 
  3639  0000                     # 5404 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3640                           TXREG equ 0FADh ;# 
  3641  0000                     # 5409 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3642                           TXREG1 equ 0FADh ;# 
  3643  0000                     # 5416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3644                           RCREG equ 0FAEh ;# 
  3645  0000                     # 5421 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3646                           RCREG1 equ 0FAEh ;# 
  3647  0000                     # 5428 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3648                           SPBRG equ 0FAFh ;# 
  3649  0000                     # 5433 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3650                           SPBRG1 equ 0FAFh ;# 
  3651  0000                     # 5440 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3652                           SPBRGH equ 0FB0h ;# 
  3653  0000                     # 5447 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3654                           T3CON equ 0FB1h ;# 
  3655  0000                     # 5568 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3656                           TMR3 equ 0FB2h ;# 
  3657  0000                     # 5575 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3658                           TMR3L equ 0FB2h ;# 
  3659  0000                     # 5582 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3660                           TMR3H equ 0FB3h ;# 
  3661  0000                     # 5589 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3662                           CMCON equ 0FB4h ;# 
  3663  0000                     # 5679 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3664                           CVRCON equ 0FB5h ;# 
  3665  0000                     # 5764 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3666                           ECCP1AS equ 0FB6h ;# 
  3667  0000                     # 5769 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3668                           CCP1AS equ 0FB6h ;# 
  3669  0000                     # 5926 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3670                           ECCP1DEL equ 0FB7h ;# 
  3671  0000                     # 5931 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3672                           CCP1DEL equ 0FB7h ;# 
  3673  0000                     # 6064 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3674                           BAUDCON equ 0FB8h ;# 
  3675  0000                     # 6069 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3676                           BAUDCTL equ 0FB8h ;# 
  3677  0000                     # 6244 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3678                           CCP2CON equ 0FBAh ;# 
  3679  0000                     # 6308 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3680                           CCPR2 equ 0FBBh ;# 
  3681  0000                     # 6315 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3682                           CCPR2L equ 0FBBh ;# 
  3683  0000                     # 6322 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3684                           CCPR2H equ 0FBCh ;# 
  3685  0000                     # 6329 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3686                           CCP1CON equ 0FBDh ;# 
  3687  0000                     # 6334 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3688                           ECCP1CON equ 0FBDh ;# 
  3689  0000                     # 6491 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3690                           CCPR1 equ 0FBEh ;# 
  3691  0000                     # 6498 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3692                           CCPR1L equ 0FBEh ;# 
  3693  0000                     # 6505 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3694                           CCPR1H equ 0FBFh ;# 
  3695  0000                     # 6512 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3696                           ADCON2 equ 0FC0h ;# 
  3697  0000                     # 6583 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3698                           ADCON1 equ 0FC1h ;# 
  3699  0000                     # 6668 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3700                           ADCON0 equ 0FC2h ;# 
  3701  0000                     # 6787 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3702                           ADRES equ 0FC3h ;# 
  3703  0000                     # 6794 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3704                           ADRESL equ 0FC3h ;# 
  3705  0000                     # 6801 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3706                           ADRESH equ 0FC4h ;# 
  3707  0000                     # 6808 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3708                           SSPCON2 equ 0FC5h ;# 
  3709  0000                     # 6870 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3710                           SSPCON1 equ 0FC6h ;# 
  3711  0000                     # 6940 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3712                           SSPSTAT equ 0FC7h ;# 
  3713  0000                     # 7188 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3714                           SSPADD equ 0FC8h ;# 
  3715  0000                     # 7195 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3716                           SSPBUF equ 0FC9h ;# 
  3717  0000                     # 7202 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3718                           T2CON equ 0FCAh ;# 
  3719  0000                     # 7300 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3720                           PR2 equ 0FCBh ;# 
  3721  0000                     # 7305 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3722                           MEMCON equ 0FCBh ;# 
  3723  0000                     # 7410 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3724                           TMR2 equ 0FCCh ;# 
  3725  0000                     # 7417 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3726                           T1CON equ 0FCDh ;# 
  3727  0000                     # 7520 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3728                           TMR1 equ 0FCEh ;# 
  3729  0000                     # 7527 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3730                           TMR1L equ 0FCEh ;# 
  3731  0000                     # 7534 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3732                           TMR1H equ 0FCFh ;# 
  3733  0000                     # 7541 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3734                           RCON equ 0FD0h ;# 
  3735  0000                     # 7690 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3736                           WDTCON equ 0FD1h ;# 
  3737  0000                     # 7718 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3738                           HLVDCON equ 0FD2h ;# 
  3739  0000                     # 7723 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3740                           LVDCON equ 0FD2h ;# 
  3741  0000                     # 7988 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3742                           OSCCON equ 0FD3h ;# 
  3743  0000                     # 8071 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3744                           T0CON equ 0FD5h ;# 
  3745  0000                     # 8141 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3746                           TMR0 equ 0FD6h ;# 
  3747  0000                     # 8148 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3748                           TMR0L equ 0FD6h ;# 
  3749  0000                     # 8155 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3750                           TMR0H equ 0FD7h ;# 
  3751  0000                     # 8162 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3752                           STATUS equ 0FD8h ;# 
  3753  0000                     # 8233 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3754                           FSR2 equ 0FD9h ;# 
  3755  0000                     # 8240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3756                           FSR2L equ 0FD9h ;# 
  3757  0000                     # 8247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3758                           FSR2H equ 0FDAh ;# 
  3759  0000                     # 8254 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3760                           PLUSW2 equ 0FDBh ;# 
  3761  0000                     # 8261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3762                           PREINC2 equ 0FDCh ;# 
  3763  0000                     # 8268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3764                           POSTDEC2 equ 0FDDh ;# 
  3765  0000                     # 8275 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3766                           POSTINC2 equ 0FDEh ;# 
  3767  0000                     # 8282 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3768                           INDF2 equ 0FDFh ;# 
  3769  0000                     # 8289 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3770                           BSR equ 0FE0h ;# 
  3771  0000                     # 8296 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3772                           FSR1 equ 0FE1h ;# 
  3773  0000                     # 8303 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3774                           FSR1L equ 0FE1h ;# 
  3775  0000                     # 8310 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3776                           FSR1H equ 0FE2h ;# 
  3777  0000                     # 8317 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3778                           PLUSW1 equ 0FE3h ;# 
  3779  0000                     # 8324 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3780                           PREINC1 equ 0FE4h ;# 
  3781  0000                     # 8331 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3782                           POSTDEC1 equ 0FE5h ;# 
  3783  0000                     # 8338 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3784                           POSTINC1 equ 0FE6h ;# 
  3785  0000                     # 8345 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3786                           INDF1 equ 0FE7h ;# 
  3787  0000                     # 8352 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3788                           WREG equ 0FE8h ;# 
  3789  0000                     # 8359 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3790                           FSR0 equ 0FE9h ;# 
  3791  0000                     # 8366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3792                           FSR0L equ 0FE9h ;# 
  3793  0000                     # 8373 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3794                           FSR0H equ 0FEAh ;# 
  3795  0000                     # 8380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3796                           PLUSW0 equ 0FEBh ;# 
  3797  0000                     # 8387 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3798                           PREINC0 equ 0FECh ;# 
  3799  0000                     # 8394 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3800                           POSTDEC0 equ 0FEDh ;# 
  3801  0000                     # 8401 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3802                           POSTINC0 equ 0FEEh ;# 
  3803  0000                     # 8408 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3804                           INDF0 equ 0FEFh ;# 
  3805  0000                     # 8415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3806                           INTCON3 equ 0FF0h ;# 
  3807  0000                     # 8507 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3808                           INTCON2 equ 0FF1h ;# 
  3809  0000                     # 8584 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3810                           INTCON equ 0FF2h ;# 
  3811  0000                     # 8701 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3812                           PROD equ 0FF3h ;# 
  3813  0000                     # 8708 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3814                           PRODL equ 0FF3h ;# 
  3815  0000                     # 8715 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3816                           PRODH equ 0FF4h ;# 
  3817  0000                     # 8722 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3818                           TABLAT equ 0FF5h ;# 
  3819  0000                     # 8731 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3820                           TBLPTR equ 0FF6h ;# 
  3821  0000                     # 8738 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3822                           TBLPTRL equ 0FF6h ;# 
  3823  0000                     # 8745 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3824                           TBLPTRH equ 0FF7h ;# 
  3825  0000                     # 8752 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3826                           TBLPTRU equ 0FF8h ;# 
  3827  0000                     # 8761 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3828                           PCLAT equ 0FF9h ;# 
  3829  0000                     # 8768 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3830                           PC equ 0FF9h ;# 
  3831  0000                     # 8775 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3832                           PCL equ 0FF9h ;# 
  3833  0000                     # 8782 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3834                           PCLATH equ 0FFAh ;# 
  3835  0000                     # 8789 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3836                           PCLATU equ 0FFBh ;# 
  3837  0000                     # 8796 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3838                           STKPTR equ 0FFCh ;# 
  3839  0000                     # 8872 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3840                           TOS equ 0FFDh ;# 
  3841  0000                     # 8879 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3842                           TOSL equ 0FFDh ;# 
  3843  0000                     # 8886 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3844                           TOSH equ 0FFEh ;# 
  3845  0000                     # 8893 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
  3846                           TOSU equ 0FFFh ;# 
  3847  0000  ;; Function _receita_livre is unused but had its address taken
  3848                           global _receita_livre
  3849                           _receita_livre equ 0
  3850  0000  ;; Function _rxEUSART is unused but had its address taken
  3851                           global _rxEUSART
  3852                           _rxEUSART equ 0
  3853  0000  ;; Function _rxStatusEUSART is unused but had its address taken
  3854                           global _rxStatusEUSART
  3855                           _rxStatusEUSART equ 0
  3856  0000  ;; Function _rxErrorEUSART is unused but had its address taken
  3857                           global _rxErrorEUSART
  3858                           _rxErrorEUSART equ 0
  3859  0000  ;; Function _rxResetErrorEUSART is unused but had its address taken
  3860                           global _rxResetErrorEUSART
  3861                           _rxResetErrorEUSART equ 0
  3862  0000  ;; Function _txEUSART is unused but had its address taken
  3863                           global _txEUSART
  3864                           _txEUSART equ 0
  3865  0000  ;; Function _txStatusEUSART is unused but had its address taken
  3866                           global _txStatusEUSART
  3867                           _txStatusEUSART equ 0
  3868  0000  ;; Function _initEUSART is unused but had its address taken
  3869                           global _initEUSART
  3870                           _initEUSART equ 0
  3871  0000  ;; Function _search is unused but had its address taken
  3872                           global _search
  3873                           _search equ 0
  3874  0000  ;; Function _wifi_init is unused but had its address taken
  3875                           global _wifi_init
  3876                           _wifi_init equ 0
  3877  0000  ;; Function _wifi_send is unused but had its address taken
  3878                           global _wifi_send
  3879                           _wifi_send equ 0
  3880  0000  ;; Function _wifi_receive is unused but had its address taken
  3881                           global _wifi_receive
  3882                           _wifi_receive equ 0
  3883  0000  ;; Function _Wifi_mode is unused but had its address taken
  3884                           global _Wifi_mode
  3885                           _Wifi_mode equ 0
  3886  0000  ;; Function _Wifi_connect is unused but had its address taken
  3887                           global _Wifi_connect
  3888                           _Wifi_connect equ 0
  3889  0000  ;; Function _Wifi_scan is unused but had its address taken
  3890                           global _Wifi_scan
  3891                           _Wifi_scan equ 0
  3892  0000  ;; Function _Wifi_ip is unused but had its address taken
  3893                           global _Wifi_ip
  3894                           _Wifi_ip equ 0
  3895  0000  ;; Function _Wifi_autoconnect is unused but had its address taken
  3896                           global _Wifi_autoconnect
  3897                           _Wifi_autoconnect equ 0
  3898  0000  ;; Function _Wifi_config_servidor is unused but had its address taken
  3899                           global _Wifi_config_servidor
  3900                           _Wifi_config_servidor equ 0
  3901  0000  ;; Function _Wifi_cipsend is unused but had its address taken
  3902                           global _Wifi_cipsend
  3903                           _Wifi_cipsend equ 0
  3904  0000                     	FNCALL	_main,_I2C_init
  3905                           	FNCALL	_main,_MCP4725
  3906                           	FNCALL	_main,___aldiv
  3907                           	FNCALL	_main,___awmod
  3908                           	FNCALL	_main,___lmul
  3909                           	FNCALL	_main,___wmul
  3910                           	FNCALL	_main,_addContCiclos
  3911                           	FNCALL	_main,_addIndicePassos
  3912                           	FNCALL	_main,_alt_atuador
  3913                           	FNCALL	_main,_buscar_dado
  3914                           	FNCALL	_main,_buscar_receita
  3915                           	FNCALL	_main,_decodifica
  3916                           	FNCALL	_main,_delay
  3917                           	FNCALL	_main,_deletar_receita
  3918                           	FNCALL	_main,_dignum_apagar
  3919                           	FNCALL	_main,_dignum_conc
  3920                           	FNCALL	_main,_dispLCD
  3921                           	FNCALL	_main,_dispLCD_clr
  3922                           	FNCALL	_main,_dispLCD_dataReg
  3923                           	FNCALL	_main,_dispLCD_init
  3924                           	FNCALL	_main,_dispLCD_lincol
  3925                           	FNCALL	_main,_dispLCD_num
  3926                           	FNCALL	_main,_dispLCD_str
  3927                           	FNCALL	_main,_fifo_add
  3928                           	FNCALL	_main,_fifo_add_ciclo
  3929                           	FNCALL	_main,_fifo_add_control
  3930                           	FNCALL	_main,_fifo_add_tempo
  3931                           	FNCALL	_main,_fifo_adrs
  3932                           	FNCALL	_main,_fifo_delete
  3933                           	FNCALL	_main,_fifo_disponivel
  3934                           	FNCALL	_main,_fifo_indice
  3935                           	FNCALL	_main,_fifo_indicePrint_dec
  3936                           	FNCALL	_main,_fifo_indicePrint_inc
  3937                           	FNCALL	_main,_fifo_lerPos
  3938                           	FNCALL	_main,_fifo_print
  3939                           	FNCALL	_main,_fifo_tam
  3940                           	FNCALL	_main,_formatar_receitas
  3941                           	FNCALL	_main,_getCiclos
  3942                           	FNCALL	_main,_getContCiclos
  3943                           	FNCALL	_main,_getIndicePassos
  3944                           	FNCALL	_main,_initSerialIO
  3945                           	FNCALL	_main,_init_atuadores
  3946                           	FNCALL	_main,_ler_atuador
  3947                           	FNCALL	_main,_ler_sensor
  3948                           	FNCALL	_main,_manipula_atuadores_init
  3949                           	FNCALL	_main,_printExec
  3950                           	FNCALL	_main,_resetContCiclos
  3951                           	FNCALL	_main,_resetIndicePassos
  3952                           	FNCALL	_main,_salva_atuadores_init
  3953                           	FNCALL	_main,_salvar_dado
  3954                           	FNCALL	_main,_salvar_receita
  3955                           	FNCALL	_main,_serialIOscan
  3956                           	FNCALL	_main,_setT1
  3957                           	FNCALL	_main,_set_passo
  3958                           	FNCALL	_main,_statusT1
  3959                           	FNCALL	_main,_teclado_borda
  3960                           	FNCALL	_main,_teclado_init
  3961                           	FNCALL	_main,_timer1_init
  3962                           	FNCALL	_teclado_borda,_teclado_scan
  3963                           	FNCALL	_serialIOscan,_serialIObyteShift
  3964                           	FNCALL	_serialIOscan,_serialIOload
  3965                           	FNCALL	_salvar_receita,_EEPROM_write
  3966                           	FNCALL	_salvar_receita,_end_receita
  3967                           	FNCALL	_salvar_dado,_EEPROM_write
  3968                           	FNCALL	_salvar_dado,_end_receita
  3969                           	FNCALL	_salva_atuadores_init,_ler_atuador
  3970                           	FNCALL	_printExec,_decodifica
  3971                           	FNCALL	_printExec,_dignum_tam
  3972                           	FNCALL	_printExec,_dispLCD_dataReg
  3973                           	FNCALL	_printExec,_dispLCD_lincol
  3974                           	FNCALL	_printExec,_dispLCD_num
  3975                           	FNCALL	_printExec,_posAtual
  3976                           	FNCALL	_posAtual,_fifo_lerPos
  3977                           	FNCALL	_posAtual,_getIndicePassos
  3978                           	FNCALL	_dispLCD_num,___awdiv
  3979                           	FNCALL	_dispLCD_num,___awmod
  3980                           	FNCALL	_dispLCD_num,_dispLCD_dataReg
  3981                           	FNCALL	_dispLCD_num,_dispLCD_lincol
  3982                           	FNCALL	_manipula_atuadores_init,_alt_atuador
  3983                           	FNCALL	_formatar_receitas,_EEPROM_write
  3984                           	FNCALL	_fifo_print,___awdiv
  3985                           	FNCALL	_fifo_print,___awmod
  3986                           	FNCALL	_fifo_print,_decodifica
  3987                           	FNCALL	_fifo_print,_dispLCD_dataReg
  3988                           	FNCALL	_fifo_print,_dispLCD_lincol
  3989                           	FNCALL	_fifo_delete,_alt_atuador
  3990                           	FNCALL	_fifo_delete,_codifica
  3991                           	FNCALL	_fifo_delete,_decodifica
  3992                           	FNCALL	_fifo_delete,_fifo_alinharPrint
  3993                           	FNCALL	_fifo_add_tempo,_codifica
  3994                           	FNCALL	_fifo_add_tempo,_fifo_alinharPrint
  3995                           	FNCALL	_fifo_add_control,_codifica
  3996                           	FNCALL	_fifo_add_control,_fifo_alinharPrint
  3997                           	FNCALL	_fifo_add,_codifica
  3998                           	FNCALL	_fifo_add,_fifo_alinharPrint
  3999                           	FNCALL	_fifo_alinharPrint,_dignum_tam
  4000                           	FNCALL	_dignum_tam,___awdiv
  4001                           	FNCALL	_dispLCD_str,_dispLCD_dataReg
  4002                           	FNCALL	_dispLCD_str,_dispLCD_lincol
  4003                           	FNCALL	_dispLCD_init,_delay
  4004                           	FNCALL	_dispLCD_init,_dispLCD_instReg
  4005                           	FNCALL	_dispLCD_clr,_dispLCD_instReg
  4006                           	FNCALL	_dispLCD,_dispLCD_dataReg
  4007                           	FNCALL	_dispLCD,_dispLCD_lincol
  4008                           	FNCALL	_dispLCD_lincol,_dispLCD_instReg
  4009                           	FNCALL	_dignum_conc,___wmul
  4010                           	FNCALL	_dignum_apagar,___lwdiv
  4011                           	FNCALL	_deletar_receita,_EEPROM_write
  4012                           	FNCALL	_deletar_receita,_end_receita
  4013                           	FNCALL	_buscar_receita,_EEPROM_read
  4014                           	FNCALL	_buscar_receita,_end_receita
  4015                           	FNCALL	_buscar_dado,_EEPROM_read
  4016                           	FNCALL	_buscar_dado,_end_receita
  4017                           	FNCALL	_MCP4725,_I2C_stop
  4018                           	FNCALL	_MCP4725,_dac_init
  4019                           	FNCALL	_MCP4725,_dac_write
  4020                           	FNCALL	_MCP4725,_delay
  4021                           	FNCALL	_dac_write,_I2C_ack_receive
  4022                           	FNCALL	_dac_write,_I2C_tx
  4023                           	FNCALL	_dac_write,_delay
  4024                           	FNCALL	_dac_init,_I2C_ack_receive
  4025                           	FNCALL	_dac_init,_I2C_start
  4026                           	FNCALL	_dac_init,_I2C_tx
  4027                           	FNCALL	_dac_init,_delay
  4028                           	FNCALL	_I2C_init,___lldiv
  4029                           	FNROOT	_main
  4030                           	FNCALL	_irq,_intt1_1ms
  4031                           	FNCALL	intlevel2,_irq
  4032                           	global	intlevel2
  4033                           	FNROOT	intlevel2
  4034                           	global	_eusart
  4035                           	global	_indice_passos
  4036                           	global	_ind_print
  4037                           	global	_ind_fila
  4038                           	global	_teclas
  4039                           	global	_IHM
  4040                           	global	_EEPROM
  4041                           	global	Wifi_connect@F3285
  4042                           	global	Wifi_cipsend@F3297
  4043                           	global	main@F3505
  4044                           	global	_wifi
  4045                           psect	idataCOMRAM,class=CODE,space=0,delta=1,noexec
  4046                           global __pidataCOMRAM
  4047                           __pidataCOMRAM:
  4048  0042B6                     	file	"eusart.c"
  4049                           	line	26
  4050                           
  4051                           ;initializer for _eusart
  4052                           		db	low(0)
  4053  0042B6  00                 	db	high(0)
  4054  0042B7  00                 
  4055                           		db	low(0)
  4056  0042B8  00                 	db	high(0)
  4057  0042B9  00                 
  4058                           		db	low(0)
  4059  0042BA  00                 	db	high(0)
  4060  0042BB  00                 
  4061                           		db	low(0)
  4062  0042BC  00                 	db	high(0)
  4063  0042BD  00                 
  4064                           		db	low(0)
  4065  0042BE  00                 	db	high(0)
  4066  0042BF  00                 
  4067                           		db	low(0)
  4068  0042C0  00                 	db	high(0)
  4069  0042C1  00                 
  4070                           		db	low(0)
  4071  0042C2  00                 	db	high(0)
  4072  0042C3  00                 
  4073                           		db	low(0)
  4074  0042C4  00                 	db	high(0)
  4075  0042C5  00                 
  4076                           	file	"fifo.c"
  4077                           	line	16
  4078                           
  4079                           ;initializer for _indice_passos
  4080                           	db	low(02h)
  4081  0042C6  02                 	line	12
  4082                           
  4083                           ;initializer for _ind_print
  4084                           	db	low(02h)
  4085  0042C7  02                 	line	11
  4086                           
  4087                           ;initializer for _ind_fila
  4088                           	db	low(02h)
  4089  0042C8  02                 psect	idataBANK0,class=CODE,space=0,delta=1,noexec
  4090                           global __pidataBANK0
  4091                           __pidataBANK0:
  4092  0040E6                     	file	"teclado.c"
  4093                           	line	50
  4094                           
  4095                           ;initializer for _teclas
  4096                           	db	low(031h)
  4097  0040E6  31                 	db	low(032h)
  4098  0040E7  32                 	db	low(033h)
  4099  0040E8  33                 	db	low(041h)
  4100  0040E9  41                 	db	low(034h)
  4101  0040EA  34                 	db	low(035h)
  4102  0040EB  35                 	db	low(036h)
  4103  0040EC  36                 	db	low(042h)
  4104  0040ED  42                 	db	low(037h)
  4105  0040EE  37                 	db	low(038h)
  4106  0040EF  38                 	db	low(039h)
  4107  0040F0  39                 	db	low(043h)
  4108  0040F1  43                 	db	low(02Ah)
  4109  0040F2  2A                 	db	low(030h)
  4110  0040F3  30                 	db	low(023h)
  4111  0040F4  23                 	db	low(044h)
  4112  0040F5  44                 	file	"./ihm.h"
  4113                           	line	14
  4114                           
  4115                           ;initializer for _IHM
  4116                           		db	low(_dispLCD_init)
  4117  0040F6  10                 	db	high(_dispLCD_init)
  4118  0040F7  3F                 
  4119                           		db	low(_dispLCD_str)
  4120  0040F8  4A                 	db	high(_dispLCD_str)
  4121  0040F9  38                 
  4122                           		db	low(_dispLCD)
  4123  0040FA  DE                 	db	high(_dispLCD)
  4124  0040FB  3C                 
  4125                           		db	low(_dispLCD_num)
  4126  0040FC  84                 	db	high(_dispLCD_num)
  4127  0040FD  26                 
  4128                           		db	low(_dispLCD_clr)
  4129  0040FE  34                 	db	high(_dispLCD_clr)
  4130  0040FF  43                 
  4131                           	file	"./eeprom.h"
  4132                           	line	28
  4133                           
  4134                           ;initializer for _EEPROM
  4135                           		db	low(_salvar_receita)
  4136  004100  1E                 	db	high(_salvar_receita)
  4137  004101  3B                 
  4138                           		db	low(_buscar_receita)
  4139  004102  7E                 	db	high(_buscar_receita)
  4140  004103  3B                 
  4141                           		db	low(_deletar_receita)
  4142  004104  8A                 	db	high(_deletar_receita)
  4143  004105  3C                 
  4144                           		db	low(0)
  4145  004106  00                 	db	high(0)
  4146  004107  00                 
  4147                           		db	low(_formatar_receitas)
  4148  004108  70                 	db	high(_formatar_receitas)
  4149  004109  41                 
  4150                           psect	idataBANK1,class=CODE,space=0,delta=1,noexec
  4151                           global __pidataBANK1
  4152                           __pidataBANK1:
  4153  003BDC                     	file	"wifi.c"
  4154                           	line	78
  4155                           
  4156                           ;initializer for Wifi_connect@F3285
  4157                           	db	low(041h)
  4158  003BDC  41                 	db	low(054h)
  4159  003BDD  54                 	db	low(02Bh)
  4160  003BDE  2B                 	db	low(043h)
  4161  003BDF  43                 	db	low(057h)
  4162  003BE0  57                 	db	low(04Ah)
  4163  003BE1  4A                 	db	low(041h)
  4164  003BE2  41                 	db	low(050h)
  4165  003BE3  50                 	db	low(03Dh)
  4166  003BE4  3D                 	db	low(022h)
  4167  003BE5  22                 	db	low(0)
  4168  003BE6  00                 	db   0
  4169  003BE7  00                 	db   0
  4170  003BE8  00                 	db   0
  4171  003BE9  00                 	db   0
  4172  003BEA  00                 	db   0
  4173  003BEB  00                 	db   0
  4174  003BEC  00                 	db   0
  4175  003BED  00                 	db   0
  4176  003BEE  00                 	db   0
  4177  003BEF  00                 	db   0
  4178  003BF0  00                 	db   0
  4179  003BF1  00                 	db   0
  4180  003BF2  00                 	db   0
  4181  003BF3  00                 	db   0
  4182  003BF4  00                 	db   0
  4183  003BF5  00                 	db   0
  4184  003BF6  00                 	db   0
  4185  003BF7  00                 	db   0
  4186  003BF8  00                 	db   0
  4187  003BF9  00                 	line	144
  4188                           
  4189                           ;initializer for Wifi_cipsend@F3297
  4190                           	db	low(041h)
  4191  003BFA  41                 	db	low(054h)
  4192  003BFB  54                 	db	low(02Bh)
  4193  003BFC  2B                 	db	low(043h)
  4194  003BFD  43                 	db	low(049h)
  4195  003BFE  49                 	db	low(050h)
  4196  003BFF  50                 	db	low(053h)
  4197  003C00  53                 	db	low(045h)
  4198  003C01  45                 	db	low(04Eh)
  4199  003C02  4E                 	db	low(044h)
  4200  003C03  44                 	db	low(03Dh)
  4201  003C04  3D                 	db	low(022h)
  4202  003C05  22                 	db	low(0)
  4203  003C06  00                 	db   0
  4204  003C07  00                 	db   0
  4205  003C08  00                 	db   0
  4206  003C09  00                 	db   0
  4207  003C0A  00                 	db   0
  4208  003C0B  00                 	db   0
  4209  003C0C  00                 	db   0
  4210  003C0D  00                 	file	"main.c"
  4211                           	line	145
  4212                           
  4213                           ;initializer for main@F3505
  4214                           	db	low(04Dh)
  4215  003C0E  4D                 	db	low(075h)
  4216  003C0F  75                 	db	low(06Eh)
  4217  003C10  6E                 	db	low(064h)
  4218  003C11  64                 	db	low(06Fh)
  4219  003C12  6F                 	db	low(020h)
  4220  003C13  20                 	db	low(061h)
  4221  003C14  61                 	db	low(06Fh)
  4222  003C15  6F                 	db	low(020h)
  4223  003C16  20                 	db	low(073h)
  4224  003C17  73                 	db	low(065h)
  4225  003C18  65                 	db	low(075h)
  4226  003C19  75                 	db	low(020h)
  4227  003C1A  20                 	db	low(063h)
  4228  003C1B  63                 	db	low(06Fh)
  4229  003C1C  6F                 	db	low(06Dh)
  4230  003C1D  6D                 	db	low(061h)
  4231  003C1E  61                 	db	low(06Eh)
  4232  003C1F  6E                 	db	low(064h)
  4233  003C20  64                 	db	low(06Fh)
  4234  003C21  6F                 	file	"./wifi.h"
  4235                           	line	38
  4236                           
  4237                           ;initializer for _wifi
  4238                           		db	low(0)
  4239  003C22  00                 	db	high(0)
  4240  003C23  00                 
  4241                           		db	low(0)
  4242  003C24  00                 	db	high(0)
  4243  003C25  00                 
  4244                           		db	low(0)
  4245  003C26  00                 	db	high(0)
  4246  003C27  00                 
  4247                           		db	low(0)
  4248  003C28  00                 	db	high(0)
  4249  003C29  00                 
  4250                           		db	low(0)
  4251  003C2A  00                 	db	high(0)
  4252  003C2B  00                 
  4253                           		db	low(0)
  4254  003C2C  00                 	db	high(0)
  4255  003C2D  00                 
  4256                           		db	low(0)
  4257  003C2E  00                 	db	high(0)
  4258  003C2F  00                 
  4259                           		db	low(0)
  4260  003C30  00                 	db	high(0)
  4261  003C31  00                 
  4262                           		db	low(0)
  4263  003C32  00                 	db	high(0)
  4264  003C33  00                 
  4265                           		db	low(0)
  4266  003C34  00                 	db	high(0)
  4267  003C35  00                 
  4268                           	global	_t1cont
  4269                           	global	salva_atuadores_init@F108
  4270                           	global	_ptrSerialOut
  4271                           	global	_ptrSerialIn
  4272                           	global	_cont_ciclos
  4273                           	global	_teclaAnterior
  4274                           	global	_lenSerialIO
  4275                           	global	_atuador
  4276                           	global	_fila
  4277                           	global	Wifi_cipsend@F3299
  4278                           	global	main@F3480
  4279                           	global	main@F3478
  4280                           	global	_aux
  4281                           	global	_SPBRbits
  4282                           _SPBRbits	set	0xFAF
  4283  0000                     	global	_BAUDCONbits
  4284                           _BAUDCONbits	set	0xFB8
  4285  0000                     	global	_TRISCbits
  4286                           _TRISCbits	set	0xF94
  4287  0000                     	global	_TXSTAbits
  4288                           _TXSTAbits	set	0xFAC
  4289  0000                     	global	_TXREG
  4290                           _TXREG	set	0xFAD
  4291  0000                     	global	_RCSTAbits
  4292                           _RCSTAbits	set	0xFAB
  4293  0000                     	global	_RCREG
  4294                           _RCREG	set	0xFAE
  4295  0000                     	global	_T1CONbits
  4296                           _T1CONbits	set	0xFCD
  4297  0000                     	global	_TMR1L
  4298                           _TMR1L	set	0xFCE
  4299  0000                     	global	_TMR1H
  4300                           _TMR1H	set	0xFCF
  4301  0000                     	global	_TRISD
  4302                           _TRISD	set	0xF95
  4303  0000                     	global	_PORTD
  4304                           _PORTD	set	0xF83
  4305  0000                     	global	_SSPBUF
  4306                           _SSPBUF	set	0xFC9
  4307  0000                     	global	_SSPCON2bits
  4308                           _SSPCON2bits	set	0xFC5
  4309  0000                     	global	_SSPSTATbits
  4310                           _SSPSTATbits	set	0xFC7
  4311  0000                     	global	_SSPADD
  4312                           _SSPADD	set	0xFC8
  4313  0000                     	global	_SSPCON1bits
  4314                           _SSPCON1bits	set	0xFC6
  4315  0000                     	global	_SERIALIO
  4316                           	global	_SERIALIO
  4317                           _SERIALIO  equ     3968
  4318  0000                     	global	_TRISAbits
  4319                           _TRISAbits	set	0xF92
  4320  0000                     	global	_PORTAbits
  4321                           _PORTAbits	set	0xF80
  4322  0000                     	global	_PIE1bits
  4323                           _PIE1bits	set	0xF9D
  4324  0000                     	global	_PIR1bits
  4325                           _PIR1bits	set	0xF9E
  4326  0000                     	global	_EECON2
  4327                           _EECON2	set	0xFA7
  4328  0000                     	global	_INTCONbits
  4329                           _INTCONbits	set	0xFF2
  4330  0000                     	global	_EEDATA
  4331                           _EEDATA	set	0xFA8
  4332  0000                     	global	_EECON1bits
  4333                           _EECON1bits	set	0xFA6
  4334  0000                     	global	_EEADR
  4335                           _EEADR	set	0xFA9
  4336  0000                     	global	_LCDbits
  4337                           	global	_LCDbits
  4338                           _LCDbits  equ     3978
  4339  0000                     	global	_TRISBbits
  4340                           _TRISBbits	set	0xF93
  4341  0000                     	global	_ADCON1
  4342                           _ADCON1	set	0xFC1
  4343  0000                     psect	mediumconst,class=MEDIUMCONST,space=0,reloc=2,noexec
  4344                           global __pmediumconst
  4345                           __pmediumconst:
  4346  007BEA                     	db	0
  4347  007BEA  00                 	
  4348                           STR_4:
  4349  007BEB                     	db	49	;'1'
  4350  007BEB  31                 	db	58	;':'
  4351  007BEC  3A                 	db	32
  4352  007BED  20                 	db	73	;'I'
  4353  007BEE  49                 	db	78	;'N'
  4354  007BEF  4E                 	db	83	;'S'
  4355  007BF0  53                 	db	69	;'E'
  4356  007BF1  45                 	db	82	;'R'
  4357  007BF2  52                 	db	73	;'I'
  4358  007BF3  49                 	db	82	;'R'
  4359  007BF4  52                 	db	32
  4360  007BF5  20                 	db	83	;'S'
  4361  007BF6  53                 	db	69	;'E'
  4362  007BF7  45                 	db	81	;'Q'
  4363  007BF8  51                 	db	85	;'U'
  4364  007BF9  55                 	db	69	;'E'
  4365  007BFA  45                 	db	78	;'N'
  4366  007BFB  4E                 	db	67	;'C'
  4367  007BFC  43                 	db	73	;'I'
  4368  007BFD  49                 	db	65	;'A'
  4369  007BFE  41                 	db	10
  4370  007BFF  0A                 	db	50	;'2'
  4371  007C00  32                 	db	58	;':'
  4372  007C01  3A                 	db	32
  4373  007C02  20                 	db	66	;'B'
  4374  007C03  42                 	db	85	;'U'
  4375  007C04  55                 	db	83	;'S'
  4376  007C05  53                 	db	67	;'C'
  4377  007C06  43                 	db	65	;'A'
  4378  007C07  41                 	db	82	;'R'
  4379  007C08  52                 	db	32
  4380  007C09  20                 	db	83	;'S'
  4381  007C0A  53                 	db	69	;'E'
  4382  007C0B  45                 	db	81	;'Q'
  4383  007C0C  51                 	db	85	;'U'
  4384  007C0D  55                 	db	69	;'E'
  4385  007C0E  45                 	db	78	;'N'
  4386  007C0F  4E                 	db	67	;'C'
  4387  007C10  43                 	db	73	;'I'
  4388  007C11  49                 	db	65	;'A'
  4389  007C12  41                 	db	10
  4390  007C13  0A                 	db	51	;'3'
  4391  007C14  33                 	db	58	;':'
  4392  007C15  3A                 	db	32
  4393  007C16  20                 	db	82	;'R'
  4394  007C17  52                 	db	69	;'E'
  4395  007C18  45                 	db	80	;'P'
  4396  007C19  50                 	db	69	;'E'
  4397  007C1A  45                 	db	84	;'T'
  4398  007C1B  54                 	db	73	;'I'
  4399  007C1C  49                 	db	82	;'R'
  4400  007C1D  52                 	db	32
  4401  007C1E  20                 	db	85	;'U'
  4402  007C1F  55                 	db	76	;'L'
  4403  007C20  4C                 	db	84	;'T'
  4404  007C21  54                 	db	46
  4405  007C22  2E                 	db	32
  4406  007C23  20                 	db	83	;'S'
  4407  007C24  53                 	db	69	;'E'
  4408  007C25  45                 	db	81	;'Q'
  4409  007C26  51                 	db	85	;'U'
  4410  007C27  55                 	db	10
  4411  007C28  0A                 	db	52	;'4'
  4412  007C29  34                 	db	58	;':'
  4413  007C2A  3A                 	db	32
  4414  007C2B  20                 	db	67	;'C'
  4415  007C2C  43                 	db	79	;'O'
  4416  007C2D  4F                 	db	78	;'N'
  4417  007C2E  4E                 	db	70	;'F'
  4418  007C2F  46                 	db	73	;'I'
  4419  007C30  49                 	db	71	;'G'
  4420  007C31  47                 	db	85	;'U'
  4421  007C32  55                 	db	82	;'R'
  4422  007C33  52                 	db	65	;'A'
  4423  007C34  41                 	db	67	;'C'
  4424  007C35  43                 	db	79	;'O'
  4425  007C36  4F                 	db	69	;'E'
  4426  007C37  45                 	db	83	;'S'
  4427  007C38  53                 	db	32
  4428  007C39  20                 	db	32
  4429  007C3A  20                 	db	32
  4430  007C3B  20                 	db	32
  4431  007C3C  20                 	db	0
  4432  007C3D  00                 	
  4433                           STR_15:
  4434  007C3E                     	db	32
  4435  007C3E  20                 	db	69	;'E'
  4436  007C3F  45                 	db	83	;'S'
  4437  007C40  53                 	db	67	;'C'
  4438  007C41  43                 	db	79	;'O'
  4439  007C42  4F                 	db	76	;'L'
  4440  007C43  4C                 	db	72	;'H'
  4441  007C44  48                 	db	65	;'A'
  4442  007C45  41                 	db	32
  4443  007C46  20                 	db	65	;'A'
  4444  007C47  41                 	db	32
  4445  007C48  20                 	db	77	;'M'
  4446  007C49  4D                 	db	69	;'E'
  4447  007C4A  45                 	db	77	;'M'
  4448  007C4B  4D                 	db	79	;'O'
  4449  007C4C  4F                 	db	82	;'R'
  4450  007C4D  52                 	db	73	;'I'
  4451  007C4E  49                 	db	65	;'A'
  4452  007C4F  41                 	db	32
  4453  007C50  20                 	db	10
  4454  007C51  0A                 	db	81	;'Q'
  4455  007C52  51                 	db	85	;'U'
  4456  007C53  55                 	db	69	;'E'
  4457  007C54  45                 	db	32
  4458  007C55  20                 	db	68	;'D'
  4459  007C56  44                 	db	69	;'E'
  4460  007C57  45                 	db	83	;'S'
  4461  007C58  53                 	db	69	;'E'
  4462  007C59  45                 	db	74	;'J'
  4463  007C5A  4A                 	db	65	;'A'
  4464  007C5B  41                 	db	32
  4465  007C5C  20                 	db	69	;'E'
  4466  007C5D  45                 	db	88	;'X'
  4467  007C5E  58                 	db	69	;'E'
  4468  007C5F  45                 	db	67	;'C'
  4469  007C60  43                 	db	85	;'U'
  4470  007C61  55                 	db	84	;'T'
  4471  007C62  54                 	db	65	;'A'
  4472  007C63  41                 	db	82	;'R'
  4473  007C64  52                 	db	10
  4474  007C65  0A                 	db	32
  4475  007C66  20                 	db	48	;'0'
  4476  007C67  30                 	db	32
  4477  007C68  20                 	db	32
  4478  007C69  20                 	db	32
  4479  007C6A  20                 	db	49	;'1'
  4480  007C6B  31                 	db	32
  4481  007C6C  20                 	db	32
  4482  007C6D  20                 	db	32
  4483  007C6E  20                 	db	50	;'2'
  4484  007C6F  32                 	db	32
  4485  007C70  20                 	db	32
  4486  007C71  20                 	db	32
  4487  007C72  20                 	db	51	;'3'
  4488  007C73  33                 	db	32
  4489  007C74  20                 	db	32
  4490  007C75  20                 	db	32
  4491  007C76  20                 	db	52	;'4'
  4492  007C77  34                 	db	32
  4493  007C78  20                 	db	10
  4494  007C79  0A                 	db	32
  4495  007C7A  20                 	db	53	;'5'
  4496  007C7B  35                 	db	32
  4497  007C7C  20                 	db	32
  4498  007C7D  20                 	db	32
  4499  007C7E  20                 	db	54	;'6'
  4500  007C7F  36                 	db	32
  4501  007C80  20                 	db	32
  4502  007C81  20                 	db	32
  4503  007C82  20                 	db	55	;'7'
  4504  007C83  37                 	db	32
  4505  007C84  20                 	db	32
  4506  007C85  20                 	db	32
  4507  007C86  20                 	db	56	;'8'
  4508  007C87  38                 	db	32
  4509  007C88  20                 	db	32
  4510  007C89  20                 	db	32
  4511  007C8A  20                 	db	57	;'9'
  4512  007C8B  39                 	db	32
  4513  007C8C  20                 	db	10
  4514  007C8D  0A                 	db	0
  4515  007C8E  00                 	
  4516                           STR_27:
  4517  007C8F                     	db	32
  4518  007C8F  20                 	db	69	;'E'
  4519  007C90  45                 	db	83	;'S'
  4520  007C91  53                 	db	67	;'C'
  4521  007C92  43                 	db	79	;'O'
  4522  007C93  4F                 	db	76	;'L'
  4523  007C94  4C                 	db	72	;'H'
  4524  007C95  48                 	db	65	;'A'
  4525  007C96  41                 	db	32
  4526  007C97  20                 	db	65	;'A'
  4527  007C98  41                 	db	32
  4528  007C99  20                 	db	77	;'M'
  4529  007C9A  4D                 	db	69	;'E'
  4530  007C9B  45                 	db	77	;'M'
  4531  007C9C  4D                 	db	79	;'O'
  4532  007C9D  4F                 	db	82	;'R'
  4533  007C9E  52                 	db	73	;'I'
  4534  007C9F  49                 	db	65	;'A'
  4535  007CA0  41                 	db	10
  4536  007CA1  0A                 	db	32
  4537  007CA2  20                 	db	81	;'Q'
  4538  007CA3  51                 	db	85	;'U'
  4539  007CA4  55                 	db	69	;'E'
  4540  007CA5  45                 	db	32
  4541  007CA6  20                 	db	68	;'D'
  4542  007CA7  44                 	db	69	;'E'
  4543  007CA8  45                 	db	83	;'S'
  4544  007CA9  53                 	db	69	;'E'
  4545  007CAA  45                 	db	74	;'J'
  4546  007CAB  4A                 	db	65	;'A'
  4547  007CAC  41                 	db	32
  4548  007CAD  20                 	db	83	;'S'
  4549  007CAE  53                 	db	65	;'A'
  4550  007CAF  41                 	db	76	;'L'
  4551  007CB0  4C                 	db	86	;'V'
  4552  007CB1  56                 	db	65	;'A'
  4553  007CB2  41                 	db	82	;'R'
  4554  007CB3  52                 	db	10
  4555  007CB4  0A                 	db	32
  4556  007CB5  20                 	db	48	;'0'
  4557  007CB6  30                 	db	32
  4558  007CB7  20                 	db	32
  4559  007CB8  20                 	db	32
  4560  007CB9  20                 	db	49	;'1'
  4561  007CBA  31                 	db	32
  4562  007CBB  20                 	db	32
  4563  007CBC  20                 	db	32
  4564  007CBD  20                 	db	50	;'2'
  4565  007CBE  32                 	db	32
  4566  007CBF  20                 	db	32
  4567  007CC0  20                 	db	32
  4568  007CC1  20                 	db	51	;'3'
  4569  007CC2  33                 	db	32
  4570  007CC3  20                 	db	32
  4571  007CC4  20                 	db	32
  4572  007CC5  20                 	db	52	;'4'
  4573  007CC6  34                 	db	10
  4574  007CC7  0A                 	db	32
  4575  007CC8  20                 	db	53	;'5'
  4576  007CC9  35                 	db	32
  4577  007CCA  20                 	db	32
  4578  007CCB  20                 	db	32
  4579  007CCC  20                 	db	54	;'6'
  4580  007CCD  36                 	db	32
  4581  007CCE  20                 	db	32
  4582  007CCF  20                 	db	32
  4583  007CD0  20                 	db	55	;'7'
  4584  007CD1  37                 	db	32
  4585  007CD2  20                 	db	32
  4586  007CD3  20                 	db	32
  4587  007CD4  20                 	db	56	;'8'
  4588  007CD5  38                 	db	32
  4589  007CD6  20                 	db	32
  4590  007CD7  20                 	db	32
  4591  007CD8  20                 	db	57	;'9'
  4592  007CD9  39                 	db	32
  4593  007CDA  20                 	db	32
  4594  007CDB  20                 	db	0
  4595  007CDC  00                 	
  4596                           STR_26:
  4597  007CDD                     	db	32
  4598  007CDD  20                 	db	32
  4599  007CDE  20                 	db	32
  4600  007CDF  20                 	db	32
  4601  007CE0  20                 	db	68	;'D'
  4602  007CE1  44                 	db	69	;'E'
  4603  007CE2  45                 	db	83	;'S'
  4604  007CE3  53                 	db	69	;'E'
  4605  007CE4  45                 	db	74	;'J'
  4606  007CE5  4A                 	db	65	;'A'
  4607  007CE6  41                 	db	32
  4608  007CE7  20                 	db	83	;'S'
  4609  007CE8  53                 	db	65	;'A'
  4610  007CE9  41                 	db	76	;'L'
  4611  007CEA  4C                 	db	86	;'V'
  4612  007CEB  56                 	db	65	;'A'
  4613  007CEC  41                 	db	82	;'R'
  4614  007CED  52                 	db	32
  4615  007CEE  20                 	db	32
  4616  007CEF  20                 	db	32
  4617  007CF0  20                 	db	10
  4618  007CF1  0A                 	db	32
  4619  007CF2  20                 	db	32
  4620  007CF3  20                 	db	32
  4621  007CF4  20                 	db	32
  4622  007CF5  20                 	db	32
  4623  007CF6  20                 	db	83	;'S'
  4624  007CF7  53                 	db	69	;'E'
  4625  007CF8  45                 	db	81	;'Q'
  4626  007CF9  51                 	db	85	;'U'
  4627  007CFA  55                 	db	69	;'E'
  4628  007CFB  45                 	db	78	;'N'
  4629  007CFC  4E                 	db	67	;'C'
  4630  007CFD  43                 	db	73	;'I'
  4631  007CFE  49                 	db	65	;'A'
  4632  007CFF  41                 	db	32
  4633  007D00  20                 	db	63	;'?'
  4634  007D01  3F                 	db	32
  4635  007D02  20                 	db	32
  4636  007D03  20                 	db	10
  4637  007D04  0A                 	db	10
  4638  007D05  0A                 	db	35
  4639  007D06  23                 	db	32
  4640  007D07  20                 	db	45
  4641  007D08  2D                 	db	32
  4642  007D09  20                 	db	83	;'S'
  4643  007D0A  53                 	db	73	;'I'
  4644  007D0B  49                 	db	77	;'M'
  4645  007D0C  4D                 	db	32
  4646  007D0D  20                 	db	32
  4647  007D0E  20                 	db	32
  4648  007D0F  20                 	db	32
  4649  007D10  20                 	db	32
  4650  007D11  20                 	db	32
  4651  007D12  20                 	db	42
  4652  007D13  2A                 	db	32
  4653  007D14  20                 	db	45
  4654  007D15  2D                 	db	32
  4655  007D16  20                 	db	78	;'N'
  4656  007D17  4E                 	db	65	;'A'
  4657  007D18  41                 	db	79	;'O'
  4658  007D19  4F                 	db	0
  4659  007D1A  00                 	
  4660                           STR_40:
  4661  007D1B                     	db	65	;'A'
  4662  007D1B  41                 	db	84	;'T'
  4663  007D1C  54                 	db	43
  4664  007D1D  2B                 	db	67	;'C'
  4665  007D1E  43                 	db	87	;'W'
  4666  007D1F  57                 	db	83	;'S'
  4667  007D20  53                 	db	65	;'A'
  4668  007D21  41                 	db	80	;'P'
  4669  007D22  50                 	db	61	;'='
  4670  007D23  3D                 	db	34
  4671  007D24  22                 	db	87	;'W'
  4672  007D25  57                 	db	105	;'i'
  4673  007D26  69                 	db	114	;'r'
  4674  007D27  72                 	db	101	;'e'
  4675  007D28  65                 	db	108	;'l'
  4676  007D29  6C                 	db	101	;'e'
  4677  007D2A  65                 	db	115	;'s'
  4678  007D2B  73                 	db	115	;'s'
  4679  007D2C  73                 	db	34
  4680  007D2D  22                 	db	44
  4681  007D2E  2C                 	db	34
  4682  007D2F  22                 	db	42
  4683  007D30  2A                 	db	42
  4684  007D31  2A                 	db	42
  4685  007D32  2A                 	db	42
  4686  007D33  2A                 	db	42
  4687  007D34  2A                 	db	42
  4688  007D35  2A                 	db	42
  4689  007D36  2A                 	db	42
  4690  007D37  2A                 	db	34
  4691  007D38  22                 	db	44
  4692  007D39  2C                 	db	49	;'1'
  4693  007D3A  31                 	db	44
  4694  007D3B  2C                 	db	50	;'2'
  4695  007D3C  32                 	db	44
  4696  007D3D  2C                 	db	52	;'4'
  4697  007D3E  34                 	db	44
  4698  007D3F  2C                 	db	48	;'0'
  4699  007D40  30                 	db	13
  4700  007D41  0D                 	db	10
  4701  007D42  0A                 	db	0
  4702  007D43  00                 	
  4703                           STR_50:
  4704  007D44                     	db	65	;'A'
  4705  007D44  41                 	db	84	;'T'
  4706  007D45  54                 	db	43
  4707  007D46  2B                 	db	67	;'C'
  4708  007D47  43                 	db	73	;'I'
  4709  007D48  49                 	db	80	;'P'
  4710  007D49  50                 	db	83	;'S'
  4711  007D4A  53                 	db	84	;'T'
  4712  007D4B  54                 	db	65	;'A'
  4713  007D4C  41                 	db	82	;'R'
  4714  007D4D  52                 	db	84	;'T'
  4715  007D4E  54                 	db	61	;'='
  4716  007D4F  3D                 	db	34
  4717  007D50  22                 	db	84	;'T'
  4718  007D51  54                 	db	67	;'C'
  4719  007D52  43                 	db	80	;'P'
  4720  007D53  50                 	db	34
  4721  007D54  22                 	db	44
  4722  007D55  2C                 	db	34
  4723  007D56  22                 	db	49	;'1'
  4724  007D57  31                 	db	57	;'9'
  4725  007D58  39                 	db	50	;'2'
  4726  007D59  32                 	db	46
  4727  007D5A  2E                 	db	49	;'1'
  4728  007D5B  31                 	db	54	;'6'
  4729  007D5C  36                 	db	56	;'8'
  4730  007D5D  38                 	db	46
  4731  007D5E  2E                 	db	52	;'4'
  4732  007D5F  34                 	db	46
  4733  007D60  2E                 	db	49	;'1'
  4734  007D61  31                 	db	34
  4735  007D62  22                 	db	44
  4736  007D63  2C                 	db	34
  4737  007D64  22                 	db	51	;'3'
  4738  007D65  33                 	db	51	;'3'
  4739  007D66  33                 	db	51	;'3'
  4740  007D67  33                 	db	34
  4741  007D68  22                 	db	13
  4742  007D69  0D                 	db	10
  4743  007D6A  0A                 	db	0
  4744  007D6B  00                 	
  4745                           STR_38:
  4746  007D6C                     	db	65	;'A'
  4747  007D6C  41                 	db	84	;'T'
  4748  007D6D  54                 	db	43
  4749  007D6E  2B                 	db	67	;'C'
  4750  007D6F  43                 	db	87	;'W'
  4751  007D70  57                 	db	83	;'S'
  4752  007D71  53                 	db	65	;'A'
  4753  007D72  41                 	db	80	;'P'
  4754  007D73  50                 	db	61	;'='
  4755  007D74  3D                 	db	34
  4756  007D75  22                 	db	84	;'T'
  4757  007D76  54                 	db	67	;'C'
  4758  007D77  43                 	db	67	;'C'
  4759  007D78  43                 	db	34
  4760  007D79  22                 	db	44
  4761  007D7A  2C                 	db	34
  4762  007D7B  22                 	db	56	;'8'
  4763  007D7C  38                 	db	55	;'7'
  4764  007D7D  37                 	db	54	;'6'
  4765  007D7E  36                 	db	53	;'5'
  4766  007D7F  35                 	db	52	;'4'
  4767  007D80  34                 	db	51	;'3'
  4768  007D81  33                 	db	50	;'2'
  4769  007D82  32                 	db	49	;'1'
  4770  007D83  31                 	db	34
  4771  007D84  22                 	db	44
  4772  007D85  2C                 	db	49	;'1'
  4773  007D86  31                 	db	44
  4774  007D87  2C                 	db	50	;'2'
  4775  007D88  32                 	db	44
  4776  007D89  2C                 	db	52	;'4'
  4777  007D8A  34                 	db	44
  4778  007D8B  2C                 	db	48	;'0'
  4779  007D8C  30                 	db	13
  4780  007D8D  0D                 	db	10
  4781  007D8E  0A                 	db	0
  4782  007D8F  00                 	
  4783                           STR_45:
  4784  007D90                     	db	65	;'A'
  4785  007D90  41                 	db	84	;'T'
  4786  007D91  54                 	db	43
  4787  007D92  2B                 	db	67	;'C'
  4788  007D93  43                 	db	73	;'I'
  4789  007D94  49                 	db	80	;'P'
  4790  007D95  50                 	db	83	;'S'
  4791  007D96  53                 	db	69	;'E'
  4792  007D97  45                 	db	82	;'R'
  4793  007D98  52                 	db	86	;'V'
  4794  007D99  56                 	db	69	;'E'
  4795  007D9A  45                 	db	82	;'R'
  4796  007D9B  52                 	db	61	;'='
  4797  007D9C  3D                 	db	49	;'1'
  4798  007D9D  31                 	db	44
  4799  007D9E  2C                 	db	51	;'3'
  4800  007D9F  33                 	db	51	;'3'
  4801  007DA0  33                 	db	51	;'3'
  4802  007DA1  33                 	db	13
  4803  007DA2  0D                 	db	10
  4804  007DA3  0A                 	db	0
  4805  007DA4  00                 	
  4806                           STR_24:
  4807  007DA5                     	db	67	;'C'
  4808  007DA5  43                 	db	105	;'i'
  4809  007DA6  69                 	db	99	;'c'
  4810  007DA7  63                 	db	108	;'l'
  4811  007DA8  6C                 	db	111	;'o'
  4812  007DA9  6F                 	db	115	;'s'
  4813  007DAA  73                 	db	58	;':'
  4814  007DAB  3A                 	db	32
  4815  007DAC  20                 	db	32
  4816  007DAD  20                 	db	32
  4817  007DAE  20                 	db	32
  4818  007DAF  20                 	db	32
  4819  007DB0  20                 	db	32
  4820  007DB1  20                 	db	32
  4821  007DB2  20                 	db	32
  4822  007DB3  20                 	db	32
  4823  007DB4  20                 	db	32
  4824  007DB5  20                 	db	32
  4825  007DB6  20                 	db	32
  4826  007DB7  20                 	db	32
  4827  007DB8  20                 	db	0
  4828  007DB9  00                 	
  4829                           STR_22:
  4830  007DBA                     	db	60	;'<'
  4831  007DBA  3C                 	db	32
  4832  007DBB  20                 	db	32
  4833  007DBC  20                 	db	47
  4834  007DBD  2F                 	db	32
  4835  007DBE  20                 	db	32
  4836  007DBF  20                 	db	62	;'>'
  4837  007DC0  3E                 	db	32
  4838  007DC1  20                 	db	99	;'c'
  4839  007DC2  63                 	db	58	;':'
  4840  007DC3  3A                 	db	32
  4841  007DC4  20                 	db	32
  4842  007DC5  20                 	db	32
  4843  007DC6  20                 	db	32
  4844  007DC7  20                 	db	32
  4845  007DC8  20                 	db	32
  4846  007DC9  20                 	db	32
  4847  007DCA  20                 	db	32
  4848  007DCB  20                 	db	32
  4849  007DCC  20                 	db	32
  4850  007DCD  20                 	db	0
  4851  007DCE  00                 	
  4852                           STR_31:
  4853  007DCF                     	db	32
  4854  007DCF  20                 	db	32
  4855  007DD0  20                 	db	32
  4856  007DD1  20                 	db	32
  4857  007DD2  20                 	db	32
  4858  007DD3  20                 	db	32
  4859  007DD4  20                 	db	32
  4860  007DD5  20                 	db	32
  4861  007DD6  20                 	db	83	;'S'
  4862  007DD7  53                 	db	65	;'A'
  4863  007DD8  41                 	db	76	;'L'
  4864  007DD9  4C                 	db	86	;'V'
  4865  007DDA  56                 	db	65	;'A'
  4866  007DDB  41                 	db	32
  4867  007DDC  20                 	db	32
  4868  007DDD  20                 	db	32
  4869  007DDE  20                 	db	32
  4870  007DDF  20                 	db	32
  4871  007DE0  20                 	db	32
  4872  007DE1  20                 	db	32
  4873  007DE2  20                 	db	0
  4874  007DE3  00                 	
  4875                           STR_3:
  4876  007DE4                     	db	32
  4877  007DE4  20                 	db	32
  4878  007DE5  20                 	db	32
  4879  007DE6  20                 	db	32
  4880  007DE7  20                 	db	32
  4881  007DE8  20                 	db	32
  4882  007DE9  20                 	db	83	;'S'
  4883  007DEA  53                 	db	69	;'E'
  4884  007DEB  45                 	db	71	;'G'
  4885  007DEC  47                 	db	71	;'G'
  4886  007DED  47                 	db	85	;'U'
  4887  007DEE  55                 	db	73	;'I'
  4888  007DEF  49                 	db	84	;'T'
  4889  007DF0  54                 	db	32
  4890  007DF1  20                 	db	32
  4891  007DF2  20                 	db	32
  4892  007DF3  20                 	db	32
  4893  007DF4  20                 	db	32
  4894  007DF5  20                 	db	32
  4895  007DF6  20                 	db	32
  4896  007DF7  20                 	db	0
  4897  007DF8  00                 	
  4898                           STR_21:
  4899  007DF9                     	db	32
  4900  007DF9  20                 	db	32
  4901  007DFA  20                 	db	32
  4902  007DFB  20                 	db	32
  4903  007DFC  20                 	db	32
  4904  007DFD  20                 	db	32
  4905  007DFE  20                 	db	32
  4906  007DFF  20                 	db	91	;'['
  4907  007E00  5B                 	db	32
  4908  007E01  20                 	db	32
  4909  007E02  20                 	db	32
  4910  007E03  20                 	db	32
  4911  007E04  20                 	db	93	;']'
  4912  007E05  5D                 	db	32
  4913  007E06  20                 	db	32
  4914  007E07  20                 	db	32
  4915  007E08  20                 	db	32
  4916  007E09  20                 	db	32
  4917  007E0A  20                 	db	32
  4918  007E0B  20                 	db	32
  4919  007E0C  20                 	db	0
  4920  007E0D  00                 	
  4921                           STR_13:
  4922  007E0E                     	db	32
  4923  007E0E  20                 	db	32
  4924  007E0F  20                 	db	32
  4925  007E10  20                 	db	32
  4926  007E11  20                 	db	32
  4927  007E12  20                 	db	32
  4928  007E13  20                 	db	32
  4929  007E14  20                 	db	68	;'D'
  4930  007E15  44                 	db	69	;'E'
  4931  007E16  45                 	db	76	;'L'
  4932  007E17  4C                 	db	69	;'E'
  4933  007E18  45                 	db	84	;'T'
  4934  007E19  54                 	db	69	;'E'
  4935  007E1A  45                 	db	68	;'D'
  4936  007E1B  44                 	db	32
  4937  007E1C  20                 	db	32
  4938  007E1D  20                 	db	32
  4939  007E1E  20                 	db	32
  4940  007E1F  20                 	db	32
  4941  007E20  20                 	db	32
  4942  007E21  20                 	db	0
  4943  007E22  00                 	
  4944                           STR_14:
  4945  007E23                     	db	32
  4946  007E23  20                 	db	32
  4947  007E24  20                 	db	32
  4948  007E25  20                 	db	32
  4949  007E26  20                 	db	32
  4950  007E27  20                 	db	32
  4951  007E28  20                 	db	32
  4952  007E29  20                 	db	32
  4953  007E2A  20                 	db	77	;'M'
  4954  007E2B  4D                 	db	69	;'E'
  4955  007E2C  45                 	db	77	;'M'
  4956  007E2D  4D                 	db	79	;'O'
  4957  007E2E  4F                 	db	82	;'R'
  4958  007E2F  52                 	db	89	;'Y'
  4959  007E30  59                 	db	32
  4960  007E31  20                 	db	32
  4961  007E32  20                 	db	32
  4962  007E33  20                 	db	32
  4963  007E34  20                 	db	32
  4964  007E35  20                 	db	32
  4965  007E36  20                 	db	0
  4966  007E37  00                 	
  4967                           STR_9:
  4968  007E38                     	db	32
  4969  007E38  20                 	db	32
  4970  007E39  20                 	db	32
  4971  007E3A  20                 	db	32
  4972  007E3B  20                 	db	32
  4973  007E3C  20                 	db	32
  4974  007E3D  20                 	db	77	;'M'
  4975  007E3E  4D                 	db	69	;'E'
  4976  007E3F  45                 	db	77	;'M'
  4977  007E40  4D                 	db	79	;'O'
  4978  007E41  4F                 	db	82	;'R'
  4979  007E42  52                 	db	73	;'I'
  4980  007E43  49                 	db	65	;'A'
  4981  007E44  41                 	db	32
  4982  007E45  20                 	db	63	;'?'
  4983  007E46  3F                 	db	32
  4984  007E47  20                 	db	32
  4985  007E48  20                 	db	32
  4986  007E49  20                 	db	32
  4987  007E4A  20                 	db	32
  4988  007E4B  20                 	db	0
  4989  007E4C  00                 	
  4990                           STR_30:
  4991  007E4D                     	db	32
  4992  007E4D  20                 	db	32
  4993  007E4E  20                 	db	32
  4994  007E4F  20                 	db	32
  4995  007E50  20                 	db	32
  4996  007E51  20                 	db	32
  4997  007E52  20                 	db	83	;'S'
  4998  007E53  53                 	db	69	;'E'
  4999  007E54  45                 	db	81	;'Q'
  5000  007E55  51                 	db	85	;'U'
  5001  007E56  55                 	db	69	;'E'
  5002  007E57  45                 	db	78	;'N'
  5003  007E58  4E                 	db	67	;'C'
  5004  007E59  43                 	db	73	;'I'
  5005  007E5A  49                 	db	65	;'A'
  5006  007E5B  41                 	db	32
  5007  007E5C  20                 	db	32
  5008  007E5D  20                 	db	32
  5009  007E5E  20                 	db	32
  5010  007E5F  20                 	db	32
  5011  007E60  20                 	db	0
  5012  007E61  00                 	
  5013                           STR_17:
  5014  007E62                     	db	32
  5015  007E62  20                 	db	32
  5016  007E63  20                 	db	32
  5017  007E64  20                 	db	32
  5018  007E65  20                 	db	32
  5019  007E66  20                 	db	68	;'D'
  5020  007E67  44                 	db	79	;'O'
  5021  007E68  4F                 	db	32
  5022  007E69  20                 	db	83	;'S'
  5023  007E6A  53                 	db	73	;'I'
  5024  007E6B  49                 	db	83	;'S'
  5025  007E6C  53                 	db	84	;'T'
  5026  007E6D  54                 	db	69	;'E'
  5027  007E6E  45                 	db	77	;'M'
  5028  007E6F  4D                 	db	65	;'A'
  5029  007E70  41                 	db	32
  5030  007E71  20                 	db	32
  5031  007E72  20                 	db	32
  5032  007E73  20                 	db	32
  5033  007E74  20                 	db	32
  5034  007E75  20                 	db	0
  5035  007E76  00                 	
  5036                           STR_18:
  5037  007E77                     	db	32
  5038  007E77  20                 	db	32
  5039  007E78  20                 	db	32
  5040  007E79  20                 	db	65	;'A'
  5041  007E7A  41                 	db	32
  5042  007E7B  20                 	db	32
  5043  007E7C  20                 	db	32
  5044  007E7D  20                 	db	66	;'B'
  5045  007E7E  42                 	db	32
  5046  007E7F  20                 	db	32
  5047  007E80  20                 	db	32
  5048  007E81  20                 	db	67	;'C'
  5049  007E82  43                 	db	32
  5050  007E83  20                 	db	32
  5051  007E84  20                 	db	32
  5052  007E85  20                 	db	68	;'D'
  5053  007E86  44                 	db	32
  5054  007E87  20                 	db	32
  5055  007E88  20                 	db	32
  5056  007E89  20                 	db	32
  5057  007E8A  20                 	db	0
  5058  007E8B  00                 	
  5059                           STR_8:
  5060  007E8C                     	db	32
  5061  007E8C  20                 	db	32
  5062  007E8D  20                 	db	32
  5063  007E8E  20                 	db	68	;'D'
  5064  007E8F  44                 	db	69	;'E'
  5065  007E90  45                 	db	76	;'L'
  5066  007E91  4C                 	db	69	;'E'
  5067  007E92  45                 	db	84	;'T'
  5068  007E93  54                 	db	65	;'A'
  5069  007E94  41                 	db	82	;'R'
  5070  007E95  52                 	db	32
  5071  007E96  20                 	db	84	;'T'
  5072  007E97  54                 	db	79	;'O'
  5073  007E98  4F                 	db	68	;'D'
  5074  007E99  44                 	db	65	;'A'
  5075  007E9A  41                 	db	32
  5076  007E9B  20                 	db	65	;'A'
  5077  007E9C  41                 	db	32
  5078  007E9D  20                 	db	32
  5079  007E9E  20                 	db	32
  5080  007E9F  20                 	db	0
  5081  007EA0  00                 	
  5082                           STR_6:
  5083  007EA1                     	db	50	;'2'
  5084  007EA1  32                 	db	58	;':'
  5085  007EA2  3A                 	db	32
  5086  007EA3  20                 	db	76	;'L'
  5087  007EA4  4C                 	db	73	;'I'
  5088  007EA5  49                 	db	77	;'M'
  5089  007EA6  4D                 	db	80	;'P'
  5090  007EA7  50                 	db	65	;'A'
  5091  007EA8  41                 	db	82	;'R'
  5092  007EA9  52                 	db	32
  5093  007EAA  20                 	db	77	;'M'
  5094  007EAB  4D                 	db	69	;'E'
  5095  007EAC  45                 	db	77	;'M'
  5096  007EAD  4D                 	db	79	;'O'
  5097  007EAE  4F                 	db	82	;'R'
  5098  007EAF  52                 	db	73	;'I'
  5099  007EB0  49                 	db	65	;'A'
  5100  007EB1  41                 	db	32
  5101  007EB2  20                 	db	32
  5102  007EB3  20                 	db	32
  5103  007EB4  20                 	db	0
  5104  007EB5  00                 	
  5105                           STR_16:
  5106  007EB6                     	db	32
  5107  007EB6  20                 	db	32
  5108  007EB7  20                 	db	32
  5109  007EB8  20                 	db	65	;'A'
  5110  007EB9  41                 	db	74	;'J'
  5111  007EBA  4A                 	db	85	;'U'
  5112  007EBB  55                 	db	83	;'S'
  5113  007EBC  53                 	db	84	;'T'
  5114  007EBD  54                 	db	69	;'E'
  5115  007EBE  45                 	db	32
  5116  007EBF  20                 	db	79	;'O'
  5117  007EC0  4F                 	db	32
  5118  007EC1  20                 	db	73	;'I'
  5119  007EC2  49                 	db	78	;'N'
  5120  007EC3  4E                 	db	73	;'I'
  5121  007EC4  49                 	db	67	;'C'
  5122  007EC5  43                 	db	73	;'I'
  5123  007EC6  49                 	db	79	;'O'
  5124  007EC7  4F                 	db	32
  5125  007EC8  20                 	db	32
  5126  007EC9  20                 	db	0
  5127  007ECA  00                 	
  5128                           STR_19:
  5129  007ECB                     	db	32
  5130  007ECB  20                 	db	32
  5131  007ECC  20                 	db	73	;'I'
  5132  007ECD  49                 	db	78	;'N'
  5133  007ECE  4E                 	db	83	;'S'
  5134  007ECF  53                 	db	73	;'I'
  5135  007ED0  49                 	db	82	;'R'
  5136  007ED1  52                 	db	65	;'A'
  5137  007ED2  41                 	db	32
  5138  007ED3  20                 	db	79	;'O'
  5139  007ED4  4F                 	db	83	;'S'
  5140  007ED5  53                 	db	32
  5141  007ED6  20                 	db	80	;'P'
  5142  007ED7  50                 	db	65	;'A'
  5143  007ED8  41                 	db	83	;'S'
  5144  007ED9  53                 	db	83	;'S'
  5145  007EDA  53                 	db	79	;'O'
  5146  007EDB  4F                 	db	83	;'S'
  5147  007EDC  53                 	db	32
  5148  007EDD  20                 	db	32
  5149  007EDE  20                 	db	0
  5150  007EDF  00                 	
  5151                           STR_25:
  5152  007EE0                     	db	48	;'0'
  5153  007EE0  30                 	db	32
  5154  007EE1  20                 	db	45
  5155  007EE2  2D                 	db	32
  5156  007EE3  20                 	db	67	;'C'
  5157  007EE4  43                 	db	105	;'i'
  5158  007EE5  69                 	db	99	;'c'
  5159  007EE6  63                 	db	108	;'l'
  5160  007EE7  6C                 	db	111	;'o'
  5161  007EE8  6F                 	db	32
  5162  007EE9  20                 	db	99	;'c'
  5163  007EEA  63                 	db	111	;'o'
  5164  007EEB  6F                 	db	110	;'n'
  5165  007EEC  6E                 	db	116	;'t'
  5166  007EED  74                 	db	105	;'i'
  5167  007EEE  69                 	db	110	;'n'
  5168  007EEF  6E                 	db	117	;'u'
  5169  007EF0  75                 	db	111	;'o'
  5170  007EF1  6F                 	db	32
  5171  007EF2  20                 	db	32
  5172  007EF3  20                 	db	0
  5173  007EF4  00                 	
  5174                           STR_7:
  5175  007EF5                     	db	32
  5176  007EF5  20                 	db	67	;'C'
  5177  007EF6  43                 	db	69	;'E'
  5178  007EF7  45                 	db	82	;'R'
  5179  007EF8  52                 	db	84	;'T'
  5180  007EF9  54                 	db	69	;'E'
  5181  007EFA  45                 	db	90	;'Z'
  5182  007EFB  5A                 	db	65	;'A'
  5183  007EFC  41                 	db	32
  5184  007EFD  20                 	db	81	;'Q'
  5185  007EFE  51                 	db	85	;'U'
  5186  007EFF  55                 	db	69	;'E'
  5187  007F00  45                 	db	32
  5188  007F01  20                 	db	68	;'D'
  5189  007F02  44                 	db	69	;'E'
  5190  007F03  45                 	db	83	;'S'
  5191  007F04  53                 	db	69	;'E'
  5192  007F05  45                 	db	74	;'J'
  5193  007F06  4A                 	db	65	;'A'
  5194  007F07  41                 	db	32
  5195  007F08  20                 	db	0
  5196  007F09  00                 	
  5197                           STR_32:
  5198  007F0A                     	db	99	;'c'
  5199  007F0A  63                 	db	111	;'o'
  5200  007F0B  6F                 	db	110	;'n'
  5201  007F0C  6E                 	db	102	;'f'
  5202  007F0D  66                 	db	105	;'i'
  5203  007F0E  69                 	db	103	;'g'
  5204  007F0F  67                 	db	32
  5205  007F10  20                 	db	99	;'c'
  5206  007F11  63                 	db	111	;'o'
  5207  007F12  6F                 	db	110	;'n'
  5208  007F13  6E                 	db	116	;'t'
  5209  007F14  74                 	db	114	;'r'
  5210  007F15  72                 	db	108	;'l'
  5211  007F16  6C                 	db	58	;':'
  5212  007F17  3A                 	db	32
  5213  007F18  20                 	db	32
  5214  007F19  20                 	db	32
  5215  007F1A  20                 	db	32
  5216  007F1B  20                 	db	32
  5217  007F1C  20                 	db	37
  5218  007F1D  25                 	db	0
  5219  007F1E  00                 	
  5220                           STR_5:
  5221  007F1F                     	db	49	;'1'
  5222  007F1F  31                 	db	58	;':'
  5223  007F20  3A                 	db	32
  5224  007F21  20                 	db	86	;'V'
  5225  007F22  56                 	db	69	;'E'
  5226  007F23  45                 	db	82	;'R'
  5227  007F24  52                 	db	73	;'I'
  5228  007F25  49                 	db	70	;'F'
  5229  007F26  46                 	db	73	;'I'
  5230  007F27  49                 	db	67	;'C'
  5231  007F28  43                 	db	65	;'A'
  5232  007F29  41                 	db	82	;'R'
  5233  007F2A  52                 	db	32
  5234  007F2B  20                 	db	77	;'M'
  5235  007F2C  4D                 	db	69	;'E'
  5236  007F2D  45                 	db	77	;'M'
  5237  007F2E  4D                 	db	79	;'O'
  5238  007F2F  4F                 	db	82	;'R'
  5239  007F30  52                 	db	73	;'I'
  5240  007F31  49                 	db	65	;'A'
  5241  007F32  41                 	db	0
  5242  007F33  00                 	
  5243                           STR_23:
  5244  007F34                     	db	99	;'c'
  5245  007F34  63                 	db	111	;'o'
  5246  007F35  6F                 	db	110	;'n'
  5247  007F36  6E                 	db	102	;'f'
  5248  007F37  66                 	db	105	;'i'
  5249  007F38  69                 	db	103	;'g'
  5250  007F39  67                 	db	32
  5251  007F3A  20                 	db	116	;'t'
  5252  007F3B  74                 	db	101	;'e'
  5253  007F3C  65                 	db	109	;'m'
  5254  007F3D  6D                 	db	112	;'p'
  5255  007F3E  70                 	db	111	;'o'
  5256  007F3F  6F                 	db	58	;':'
  5257  007F40  3A                 	db	32
  5258  007F41  20                 	db	32
  5259  007F42  20                 	db	32
  5260  007F43  20                 	db	32
  5261  007F44  20                 	db	32
  5262  007F45  20                 	db	32
  5263  007F46  20                 	db	115	;'s'
  5264  007F47  73                 	db	0
  5265  007F48  00                 	
  5266                           STR_43:
  5267  007F49                     	db	65	;'A'
  5268  007F49  41                 	db	84	;'T'
  5269  007F4A  54                 	db	43
  5270  007F4B  2B                 	db	67	;'C'
  5271  007F4C  43                 	db	87	;'W'
  5272  007F4D  57                 	db	65	;'A'
  5273  007F4E  41                 	db	85	;'U'
  5274  007F4F  55                 	db	84	;'T'
  5275  007F50  54                 	db	79	;'O'
  5276  007F51  4F                 	db	67	;'C'
  5277  007F52  43                 	db	79	;'O'
  5278  007F53  4F                 	db	78	;'N'
  5279  007F54  4E                 	db	78	;'N'
  5280  007F55  4E                 	db	61	;'='
  5281  007F56  3D                 	db	48	;'0'
  5282  007F57  30                 	db	13
  5283  007F58  0D                 	db	10
  5284  007F59  0A                 	db	0
  5285  007F5A  00                 	
  5286                           STR_34:
  5287  007F5B                     	db	65	;'A'
  5288  007F5B  41                 	db	84	;'T'
  5289  007F5C  54                 	db	43
  5290  007F5D  2B                 	db	67	;'C'
  5291  007F5E  43                 	db	73	;'I'
  5292  007F5F  49                 	db	80	;'P'
  5293  007F60  50                 	db	83	;'S'
  5294  007F61  53                 	db	69	;'E'
  5295  007F62  45                 	db	82	;'R'
  5296  007F63  52                 	db	86	;'V'
  5297  007F64  56                 	db	69	;'E'
  5298  007F65  45                 	db	82	;'R'
  5299  007F66  52                 	db	61	;'='
  5300  007F67  3D                 	db	48	;'0'
  5301  007F68  30                 	db	13
  5302  007F69  0D                 	db	10
  5303  007F6A  0A                 	db	0
  5304  007F6B  00                 	
  5305                           STR_46:
  5306  007F6C                     	db	65	;'A'
  5307  007F6C  41                 	db	84	;'T'
  5308  007F6D  54                 	db	43
  5309  007F6E  2B                 	db	67	;'C'
  5310  007F6F  43                 	db	73	;'I'
  5311  007F70  49                 	db	80	;'P'
  5312  007F71  50                 	db	77	;'M'
  5313  007F72  4D                 	db	79	;'O'
  5314  007F73  4F                 	db	68	;'D'
  5315  007F74  44                 	db	69	;'E'
  5316  007F75  45                 	db	61	;'='
  5317  007F76  3D                 	db	48	;'0'
  5318  007F77  30                 	db	13
  5319  007F78  0D                 	db	10
  5320  007F79  0A                 	db	0
  5321  007F7A  00                 	
  5322                           STR_36:
  5323  007F7B                     	db	65	;'A'
  5324  007F7B  41                 	db	84	;'T'
  5325  007F7C  54                 	db	43
  5326  007F7D  2B                 	db	67	;'C'
  5327  007F7E  43                 	db	73	;'I'
  5328  007F7F  49                 	db	80	;'P'
  5329  007F80  50                 	db	77	;'M'
  5330  007F81  4D                 	db	79	;'O'
  5331  007F82  4F                 	db	68	;'D'
  5332  007F83  44                 	db	69	;'E'
  5333  007F84  45                 	db	61	;'='
  5334  007F85  3D                 	db	49	;'1'
  5335  007F86  31                 	db	13
  5336  007F87  0D                 	db	10
  5337  007F88  0A                 	db	0
  5338  007F89  00                 	
  5339                           STR_35:
  5340  007F8A                     	db	65	;'A'
  5341  007F8A  41                 	db	84	;'T'
  5342  007F8B  54                 	db	43
  5343  007F8C  2B                 	db	67	;'C'
  5344  007F8D  43                 	db	73	;'I'
  5345  007F8E  49                 	db	80	;'P'
  5346  007F8F  50                 	db	77	;'M'
  5347  007F90  4D                 	db	85	;'U'
  5348  007F91  55                 	db	88	;'X'
  5349  007F92  58                 	db	61	;'='
  5350  007F93  3D                 	db	48	;'0'
  5351  007F94  30                 	db	13
  5352  007F95  0D                 	db	10
  5353  007F96  0A                 	db	0
  5354  007F97  00                 	
  5355                           STR_33:
  5356  007F98                     	db	65	;'A'
  5357  007F98  41                 	db	84	;'T'
  5358  007F99  54                 	db	43
  5359  007F9A  2B                 	db	67	;'C'
  5360  007F9B  43                 	db	87	;'W'
  5361  007F9C  57                 	db	77	;'M'
  5362  007F9D  4D                 	db	79	;'O'
  5363  007F9E  4F                 	db	68	;'D'
  5364  007F9F  44                 	db	69	;'E'
  5365  007FA0  45                 	db	61	;'='
  5366  007FA1  3D                 	db	49	;'1'
  5367  007FA2  31                 	db	13
  5368  007FA3  0D                 	db	10
  5369  007FA4  0A                 	db	0
  5370  007FA5  00                 	
  5371                           STR_44:
  5372  007FA6                     	db	65	;'A'
  5373  007FA6  41                 	db	84	;'T'
  5374  007FA7  54                 	db	43
  5375  007FA8  2B                 	db	67	;'C'
  5376  007FA9  43                 	db	73	;'I'
  5377  007FAA  49                 	db	80	;'P'
  5378  007FAB  50                 	db	77	;'M'
  5379  007FAC  4D                 	db	85	;'U'
  5380  007FAD  55                 	db	88	;'X'
  5381  007FAE  58                 	db	61	;'='
  5382  007FAF  3D                 	db	49	;'1'
  5383  007FB0  31                 	db	13
  5384  007FB1  0D                 	db	10
  5385  007FB2  0A                 	db	0
  5386  007FB3  00                 	
  5387                           STR_37:
  5388  007FB4                     	db	65	;'A'
  5389  007FB4  41                 	db	84	;'T'
  5390  007FB5  54                 	db	43
  5391  007FB6  2B                 	db	67	;'C'
  5392  007FB7  43                 	db	87	;'W'
  5393  007FB8  57                 	db	77	;'M'
  5394  007FB9  4D                 	db	79	;'O'
  5395  007FBA  4F                 	db	68	;'D'
  5396  007FBB  44                 	db	69	;'E'
  5397  007FBC  45                 	db	61	;'='
  5398  007FBD  3D                 	db	50	;'2'
  5399  007FBE  32                 	db	13
  5400  007FBF  0D                 	db	10
  5401  007FC0  0A                 	db	0
  5402  007FC1  00                 	
  5403                           STR_39:
  5404  007FC2                     	db	65	;'A'
  5405  007FC2  41                 	db	84	;'T'
  5406  007FC3  54                 	db	43
  5407  007FC4  2B                 	db	67	;'C'
  5408  007FC5  43                 	db	87	;'W'
  5409  007FC6  57                 	db	77	;'M'
  5410  007FC7  4D                 	db	79	;'O'
  5411  007FC8  4F                 	db	68	;'D'
  5412  007FC9  44                 	db	69	;'E'
  5413  007FCA  45                 	db	61	;'='
  5414  007FCB  3D                 	db	51	;'3'
  5415  007FCC  33                 	db	13
  5416  007FCD  0D                 	db	10
  5417  007FCE  0A                 	db	0
  5418  007FCF  00                 	
  5419                           STR_51:
  5420  007FD0                     	db	65	;'A'
  5421  007FD0  41                 	db	84	;'T'
  5422  007FD1  54                 	db	43
  5423  007FD2  2B                 	db	67	;'C'
  5424  007FD3  43                 	db	73	;'I'
  5425  007FD4  49                 	db	80	;'P'
  5426  007FD5  50                 	db	67	;'C'
  5427  007FD6  43                 	db	76	;'L'
  5428  007FD7  4C                 	db	79	;'O'
  5429  007FD8  4F                 	db	83	;'S'
  5430  007FD9  53                 	db	69	;'E'
  5431  007FDA  45                 	db	13
  5432  007FDB  0D                 	db	10
  5433  007FDC  0A                 	db	0
  5434  007FDD  00                 	
  5435                           STR_41:
  5436  007FDE                     	db	65	;'A'
  5437  007FDE  41                 	db	84	;'T'
  5438  007FDF  54                 	db	43
  5439  007FE0  2B                 	db	67	;'C'
  5440  007FE1  43                 	db	87	;'W'
  5441  007FE2  57                 	db	76	;'L'
  5442  007FE3  4C                 	db	65	;'A'
  5443  007FE4  41                 	db	80	;'P'
  5444  007FE5  50                 	db	13
  5445  007FE6  0D                 	db	10
  5446  007FE7  0A                 	db	0
  5447  007FE8  00                 	
  5448                           STR_42:
  5449  007FE9                     	db	65	;'A'
  5450  007FE9  41                 	db	84	;'T'
  5451  007FEA  54                 	db	43
  5452  007FEB  2B                 	db	67	;'C'
  5453  007FEC  43                 	db	73	;'I'
  5454  007FED  49                 	db	70	;'F'
  5455  007FEE  46                 	db	83	;'S'
  5456  007FEF  53                 	db	82	;'R'
  5457  007FF0  52                 	db	13
  5458  007FF1  0D                 	db	10
  5459  007FF2  0A                 	db	0
  5460  007FF3  00                 	
  5461                           STR_20:
  5462  007FF4                     	db	60	;'<'
  5463  007FF4  3C                 	db	32
  5464  007FF5  20                 	db	32
  5465  007FF6  20                 	db	47
  5466  007FF7  2F                 	db	32
  5467  007FF8  20                 	db	32
  5468  007FF9  20                 	db	62	;'>'
  5469  007FFA  3E                 	db	0
  5470  007FFB  00                 	
  5471                           STR_1:
  5472  007FFC                     	db	-1
  5473  007FFC  FF                 	db	0
  5474  007FFD  00                 STR_10	equ	STR_26+41
  5475  0000                     STR_2	equ	STR_24+19
  5476  0000                     STR_12	equ	STR_24+19
  5477  0000                     STR_29	equ	STR_24+19
  5478  0000                     STR_49	equ	STR_36+0
  5479  0000                     STR_48	equ	STR_35+0
  5480  0000                     STR_47	equ	STR_34+0
  5481  0000                     STR_11	equ	STR_1+0
  5482  0000                     STR_28	equ	STR_1+0
  5483  0000                     ; #config settings
  5484                           global __CFG_PLLDIV$5
  5485                           __CFG_PLLDIV$5 equ 0x0
  5486  0000                     global __CFG_CPUDIV$OSC1_PLL2
  5487                           __CFG_CPUDIV$OSC1_PLL2 equ 0x0
  5488  0000                     global __CFG_USBDIV$1
  5489                           __CFG_USBDIV$1 equ 0x0
  5490  0000                     global __CFG_FOSC$HS
  5491                           __CFG_FOSC$HS equ 0x0
  5492  0000                     global __CFG_FCMEN$OFF
  5493                           __CFG_FCMEN$OFF equ 0x0
  5494  0000                     global __CFG_IESO$OFF
  5495                           __CFG_IESO$OFF equ 0x0
  5496  0000                     global __CFG_PWRT$ON
  5497                           __CFG_PWRT$ON equ 0x0
  5498  0000                     global __CFG_BOR$OFF
  5499                           __CFG_BOR$OFF equ 0x0
  5500  0000                     global __CFG_BORV$3
  5501                           __CFG_BORV$3 equ 0x0
  5502  0000                     global __CFG_VREGEN$OFF
  5503                           __CFG_VREGEN$OFF equ 0x0
  5504  0000                     global __CFG_WDT$OFF
  5505                           __CFG_WDT$OFF equ 0x0
  5506  0000                     global __CFG_WDTPS$32768
  5507                           __CFG_WDTPS$32768 equ 0x0
  5508  0000                     global __CFG_CCP2MX$ON
  5509                           __CFG_CCP2MX$ON equ 0x0
  5510  0000                     global __CFG_PBADEN$OFF
  5511                           __CFG_PBADEN$OFF equ 0x0
  5512  0000                     global __CFG_LPT1OSC$OFF
  5513                           __CFG_LPT1OSC$OFF equ 0x0
  5514  0000                     global __CFG_MCLRE$OFF
  5515                           __CFG_MCLRE$OFF equ 0x0
  5516  0000                     global __CFG_STVREN$OFF
  5517                           __CFG_STVREN$OFF equ 0x0
  5518  0000                     global __CFG_LVP$OFF
  5519                           __CFG_LVP$OFF equ 0x0
  5520  0000                     global __CFG_ICPRT$OFF
  5521                           __CFG_ICPRT$OFF equ 0x0
  5522  0000                     global __CFG_XINST$OFF
  5523                           __CFG_XINST$OFF equ 0x0
  5524  0000                     global __CFG_CP0$OFF
  5525                           __CFG_CP0$OFF equ 0x0
  5526  0000                     global __CFG_CP1$OFF
  5527                           __CFG_CP1$OFF equ 0x0
  5528  0000                     global __CFG_CP2$OFF
  5529                           __CFG_CP2$OFF equ 0x0
  5530  0000                     global __CFG_CP3$OFF
  5531                           __CFG_CP3$OFF equ 0x0
  5532  0000                     global __CFG_CPB$OFF
  5533                           __CFG_CPB$OFF equ 0x0
  5534  0000                     global __CFG_CPD$OFF
  5535                           __CFG_CPD$OFF equ 0x0
  5536  0000                     global __CFG_WRT0$OFF
  5537                           __CFG_WRT0$OFF equ 0x0
  5538  0000                     global __CFG_WRT1$OFF
  5539                           __CFG_WRT1$OFF equ 0x0
  5540  0000                     global __CFG_WRT2$OFF
  5541                           __CFG_WRT2$OFF equ 0x0
  5542  0000                     global __CFG_WRT3$OFF
  5543                           __CFG_WRT3$OFF equ 0x0
  5544  0000                     global __CFG_WRTC$OFF
  5545                           __CFG_WRTC$OFF equ 0x0
  5546  0000                     global __CFG_WRTB$OFF
  5547                           __CFG_WRTB$OFF equ 0x0
  5548  0000                     global __CFG_WRTD$OFF
  5549                           __CFG_WRTD$OFF equ 0x0
  5550  0000                     global __CFG_EBTR0$OFF
  5551                           __CFG_EBTR0$OFF equ 0x0
  5552  0000                     global __CFG_EBTR1$OFF
  5553                           __CFG_EBTR1$OFF equ 0x0
  5554  0000                     global __CFG_EBTR2$OFF
  5555                           __CFG_EBTR2$OFF equ 0x0
  5556  0000                     global __CFG_EBTR3$OFF
  5557                           __CFG_EBTR3$OFF equ 0x0
  5558  0000                     global __CFG_EBTRB$OFF
  5559                           __CFG_EBTRB$OFF equ 0x0
  5560  0000                     	file	"C:\Users\20185189\AppData\Local\Temp\s5b4."
  5561                           	line	#
  5562                           psect	cinit,class=CODE,delta=1,reloc=2
  5563                           global __pcinit
  5564                           __pcinit:
  5565  0035BE                     global start_initialization
  5566                           start_initialization:
  5567  0035BE                     
  5568                           global __initialization
  5569                           __initialization:
  5570  0035BE                     psect	bssCOMRAM,class=COMRAM,space=1,noexec
  5571                           global __pbssCOMRAM
  5572                           __pbssCOMRAM:
  5573  000001                     	global	_t1cont
  5574                           _t1cont:
  5575  000001                            ds      4
  5576  000001                     salva_atuadores_init@F108:
  5577  000005                            ds      4
  5578  000005                     	global	_ptrSerialOut
  5579                           _ptrSerialOut:
  5580  000009                            ds      2
  5581  000009                     	global	_ptrSerialIn
  5582                           _ptrSerialIn:
  5583  00000B                            ds      2
  5584  00000B                     	global	_cont_ciclos
  5585                           _cont_ciclos:
  5586  00000D                            ds      2
  5587  00000D                     	global	_ciclos
  5588                           	global	_ciclos
  5589                           _ciclos:
  5590  00000F                            ds      2
  5591  00000F                     	global	_teclaAnterior
  5592                           _teclaAnterior:
  5593  000011                            ds      1
  5594  000011                     	global	_lenSerialIO
  5595                           _lenSerialIO:
  5596  000012                            ds      1
  5597  000012                     	global	_d
  5598                           	global	_d
  5599                           _d:
  5600  000013                            ds      1
  5601  000013                     	global	_atuador
  5602                           _atuador:
  5603  000014                            ds      1
  5604  000014                     	global	_fila
  5605                           _fila:
  5606  000015                            ds      18
  5607  000015                     psect	dataCOMRAM,class=COMRAM,space=1,noexec
  5608                           global __pdataCOMRAM
  5609                           __pdataCOMRAM:
  5610  000047                     	file	"eusart.c"
  5611                           	line	26
  5612                           	global	_eusart
  5613                           _eusart:
  5614  000047                            ds      16
  5615  000047                     psect	dataCOMRAM
  5616                           	file	"fifo.c"
  5617                           	line	16
  5618                           	global	_indice_passos
  5619                           _indice_passos:
  5620  000057                            ds      1
  5621  000057                     psect	dataCOMRAM
  5622                           	file	"fifo.c"
  5623                           	line	12
  5624                           	global	_ind_print
  5625                           _ind_print:
  5626  000058                            ds      1
  5627  000058                     psect	dataCOMRAM
  5628                           	file	"fifo.c"
  5629                           	line	11
  5630                           	global	_ind_fila
  5631                           _ind_fila:
  5632  000059                            ds      1
  5633  000059                     psect	bssBANK0,class=BANK0,space=1,noexec,lowdata
  5634                           global __pbssBANK0
  5635                           __pbssBANK0:
  5636  0000E3                     Wifi_cipsend@F3299:
  5637  0000E3                            ds      10
  5638  0000E3                     main@F3480:
  5639  0000ED                            ds      1
  5640  0000ED                     main@F3478:
  5641  0000EE                            ds      1
  5642  0000EE                     psect	dataBANK0,class=BANK0,space=1,noexec,lowdata
  5643                           global __pdataBANK0
  5644                           __pdataBANK0:
  5645  0000BF                     	file	"teclado.c"
  5646                           	line	50
  5647                           	global	_teclas
  5648                           _teclas:
  5649  0000BF                            ds      16
  5650  0000BF                     psect	dataBANK0
  5651                           	file	"./ihm.h"
  5652                           	line	14
  5653                           	global	_IHM
  5654                           _IHM:
  5655  0000CF                            ds      10
  5656  0000CF                     psect	dataBANK0
  5657                           	file	"./eeprom.h"
  5658                           	line	28
  5659                           	global	_EEPROM
  5660                           _EEPROM:
  5661  0000D9                            ds      10
  5662  0000D9                     psect	bssBANK1,class=BANK1,space=1,noexec,lowdata
  5663                           global __pbssBANK1
  5664                           __pbssBANK1:
  5665  00015A                     	global	_aux
  5666                           _aux:
  5667  00015A                            ds      20
  5668  00015A                     psect	dataBANK1,class=BANK1,space=1,noexec,lowdata
  5669                           global __pdataBANK1
  5670                           __pdataBANK1:
  5671  000100                     	file	"wifi.c"
  5672                           	line	78
  5673                           Wifi_connect@F3285:
  5674  000100                            ds      30
  5675  000100                     psect	dataBANK1
  5676                           	file	"wifi.c"
  5677                           	line	144
  5678                           Wifi_cipsend@F3297:
  5679  00011E                            ds      20
  5680  00011E                     psect	dataBANK1
  5681                           	file	"main.c"
  5682                           	line	145
  5683                           main@F3505:
  5684  000132                            ds      20
  5685  000132                     psect	dataBANK1
  5686                           	file	"./wifi.h"
  5687                           	line	38
  5688                           	global	_wifi
  5689                           _wifi:
  5690  000146                            ds      20
  5691  000146                     	file	"C:\Users\20185189\AppData\Local\Temp\s5b4."
  5692                           	line	#
  5693                           psect	cinit
  5694                           ; Initialize objects allocated to BANK1 (90 bytes)
  5695                           	global __pidataBANK1
  5696                           	; load TBLPTR registers with __pidataBANK1
  5697                           	movlw	low (__pidataBANK1)
  5698  0035BE  0EDC               	movwf	tblptrl
  5699  0035C0  6EF6               	movlw	high(__pidataBANK1)
  5700  0035C2  0E3B               	movwf	tblptrh
  5701  0035C4  6EF7               	movlw	low highword(__pidataBANK1)
  5702  0035C6  0E00               	movwf	tblptru
  5703  0035C8  6EF8               	lfsr	0,__pdataBANK1
  5704  0035CA  EE01  F000         	lfsr	1,90
  5705  0035CE  EE10 F05A          	copy_data0:
  5706  0035D2                     	tblrd	*+
  5707  0035D2  0009               	movff	tablat, postinc0
  5708  0035D4  CFF5 FFEE          	movf	postdec1,w
  5709  0035D8  50E5               	movf	fsr1l,w
  5710  0035DA  50E1               	bnz	copy_data0
  5711  0035DC  E1FA               ; Initialize objects allocated to BANK0 (36 bytes)
  5712                           	global __pidataBANK0
  5713                           	; load TBLPTR registers with __pidataBANK0
  5714                           	movlw	low (__pidataBANK0)
  5715  0035DE  0EE6               	movwf	tblptrl
  5716  0035E0  6EF6               	movlw	high(__pidataBANK0)
  5717  0035E2  0E40               	movwf	tblptrh
  5718  0035E4  6EF7               	movlw	low highword(__pidataBANK0)
  5719  0035E6  0E00               	movwf	tblptru
  5720  0035E8  6EF8               	lfsr	0,__pdataBANK0
  5721  0035EA  EE00  F0BF         	lfsr	1,36
  5722  0035EE  EE10 F024          	copy_data1:
  5723  0035F2                     	tblrd	*+
  5724  0035F2  0009               	movff	tablat, postinc0
  5725  0035F4  CFF5 FFEE          	movf	postdec1,w
  5726  0035F8  50E5               	movf	fsr1l,w
  5727  0035FA  50E1               	bnz	copy_data1
  5728  0035FC  E1FA               ; Initialize objects allocated to COMRAM (19 bytes)
  5729                           	global __pidataCOMRAM
  5730                           	; load TBLPTR registers with __pidataCOMRAM
  5731                           	movlw	low (__pidataCOMRAM)
  5732  0035FE  0EB6               	movwf	tblptrl
  5733  003600  6EF6               	movlw	high(__pidataCOMRAM)
  5734  003602  0E42               	movwf	tblptrh
  5735  003604  6EF7               	movlw	low highword(__pidataCOMRAM)
  5736  003606  0E00               	movwf	tblptru
  5737  003608  6EF8               	lfsr	0,__pdataCOMRAM
  5738  00360A  EE00  F047         	lfsr	1,19
  5739  00360E  EE10 F013          	copy_data2:
  5740  003612                     	tblrd	*+
  5741  003612  0009               	movff	tablat, postinc0
  5742  003614  CFF5 FFEE          	movf	postdec1,w
  5743  003618  50E5               	movf	fsr1l,w
  5744  00361A  50E1               	bnz	copy_data2
  5745  00361C  E1FA               	line	#
  5746                           ; Clear objects allocated to BANK1 (20 bytes)
  5747                           	global __pbssBANK1
  5748                           lfsr	0,__pbssBANK1
  5749  00361E  EE01  F05A         movlw	20
  5750  003622  0E14               clear_0:
  5751  003624                     clrf	postinc0,c
  5752  003624  6AEE               decf	wreg
  5753  003626  06E8               bnz	clear_0
  5754  003628  E1FD               ; Clear objects allocated to BANK0 (12 bytes)
  5755                           	global __pbssBANK0
  5756                           lfsr	0,__pbssBANK0
  5757  00362A  EE00  F0E3         movlw	12
  5758  00362E  0E0C               clear_1:
  5759  003630                     clrf	postinc0,c
  5760  003630  6AEE               decf	wreg
  5761  003632  06E8               bnz	clear_1
  5762  003634  E1FD               ; Clear objects allocated to COMRAM (38 bytes)
  5763                           	global __pbssCOMRAM
  5764                           lfsr	0,__pbssCOMRAM
  5765  003636  EE00  F001         movlw	38
  5766  00363A  0E26               clear_2:
  5767  00363C                     clrf	postinc0,c
  5768  00363C  6AEE               decf	wreg
  5769  00363E  06E8               bnz	clear_2
  5770  003640  E1FD               psect cinit,class=CODE,delta=1
  5771                           global end_of_initialization,__end_of__initialization
  5772                           
  5773                           ;End of C runtime variable initialization code
  5774                           
  5775                           end_of_initialization:
  5776  003642                     __end_of__initialization:
  5777  003642                     	bcf int$flags,0,c ;clear compiler interrupt flag (level 1)
  5778  003642  905A               	bcf int$flags,1,c ;clear compiler interrupt flag (level 2)
  5779  003644  925A               	GLOBAL	__Lmediumconst
  5780                           	movlw	low highword(__Lmediumconst)
  5781  003646  0E00               	movwf	tblptru
  5782  003648  6EF8               movlb 0
  5783  00364A  0100               goto _main	;jump to C main() function
  5784  00364C  EF09  F000         psect	cstackBANK0,class=BANK0,space=1,noexec
  5785                           global __pcstackBANK0
  5786                           __pcstackBANK0:
  5787  000060                     	global	main@lema
  5788                           main@lema:	; 20 bytes @ 0x0
  5789  000060                     	ds   20
  5790  000060                     	global	main@contPassos
  5791                           main@contPassos:	; 1 bytes @ 0x14
  5792  000074                     	ds   1
  5793  000074                     	global	main@aux
  5794                           main@aux:	; 1 bytes @ 0x15
  5795  000075                     	ds   1
  5796  000075                     	global	main@vetor_aux
  5797                           main@vetor_aux:	; 16 bytes @ 0x16
  5798  000076                     	ds   16
  5799  000076                     	global	_main$918
  5800                           _main$918:	; 2 bytes @ 0x26
  5801  000086                     	ds   2
  5802  000086                     	global	_main$940
  5803                           _main$940:	; 2 bytes @ 0x28
  5804  000088                     	ds   2
  5805  000088                     	global	_main$944
  5806                           _main$944:	; 2 bytes @ 0x2A
  5807  00008A                     	ds   2
  5808  00008A                     	global	_main$945
  5809                           _main$945:	; 2 bytes @ 0x2C
  5810  00008C                     	ds   2
  5811  00008C                     	global	_main$946
  5812                           _main$946:	; 2 bytes @ 0x2E
  5813  00008E                     	ds   2
  5814  00008E                     	global	_main$947
  5815                           _main$947:	; 2 bytes @ 0x30
  5816  000090                     	ds   2
  5817  000090                     	global	_main$948
  5818                           _main$948:	; 2 bytes @ 0x32
  5819  000092                     	ds   2
  5820  000092                     	global	_main$949
  5821                           _main$949:	; 2 bytes @ 0x34
  5822  000094                     	ds   2
  5823  000094                     	global	_main$950
  5824                           _main$950:	; 2 bytes @ 0x36
  5825  000096                     	ds   2
  5826  000096                     	global	_main$951
  5827                           _main$951:	; 2 bytes @ 0x38
  5828  000098                     	ds   2
  5829  000098                     	global	_main$955
  5830                           _main$955:	; 2 bytes @ 0x3A
  5831  00009A                     	ds   2
  5832  00009A                     	global	main@i_908
  5833                           main@i_908:	; 1 bytes @ 0x3C
  5834  00009C                     	ds   1
  5835  00009C                     	global	main@pt
  5836                           main@pt:	; 2 bytes @ 0x3D
  5837  00009D                     	ds   2
  5838  00009D                     	global	main@ptr
  5839                           main@ptr:	; 2 bytes @ 0x3F
  5840  00009F                     	ds   2
  5841  00009F                     	global	main@i
  5842                           main@i:	; 1 bytes @ 0x41
  5843  0000A1                     	ds   1
  5844  0000A1                     	global	main@j
  5845                           main@j:	; 1 bytes @ 0x42
  5846  0000A2                     	ds   1
  5847  0000A2                     	global	main@i_902
  5848                           main@i_902:	; 1 bytes @ 0x43
  5849  0000A3                     	ds   1
  5850  0000A3                     	global	main@j_903
  5851                           main@j_903:	; 1 bytes @ 0x44
  5852  0000A4                     	ds   1
  5853  0000A4                     	global	main@i_929
  5854                           main@i_929:	; 1 bytes @ 0x45
  5855  0000A5                     	ds   1
  5856  0000A5                     	global	main@j_930
  5857                           main@j_930:	; 1 bytes @ 0x46
  5858  0000A6                     	ds   1
  5859  0000A6                     	global	main@i_932
  5860                           main@i_932:	; 1 bytes @ 0x47
  5861  0000A7                     	ds   1
  5862  0000A7                     	global	main@j_933
  5863                           main@j_933:	; 1 bytes @ 0x48
  5864  0000A8                     	ds   1
  5865  0000A8                     	global	main@i_974
  5866                           main@i_974:	; 1 bytes @ 0x49
  5867  0000A9                     	ds   1
  5868  0000A9                     	global	main@j_975
  5869                           main@j_975:	; 1 bytes @ 0x4A
  5870  0000AA                     	ds   1
  5871  0000AA                     	global	main@i_977
  5872                           main@i_977:	; 1 bytes @ 0x4B
  5873  0000AB                     	ds   1
  5874  0000AB                     	global	main@j_978
  5875                           main@j_978:	; 1 bytes @ 0x4C
  5876  0000AC                     	ds   1
  5877  0000AC                     	global	main@vetorIn
  5878                           main@vetorIn:	; 1 bytes @ 0x4D
  5879  0000AD                     	ds   1
  5880  0000AD                     	global	main@vetorOut
  5881                           main@vetorOut:	; 1 bytes @ 0x4E
  5882  0000AE                     	ds   1
  5883  0000AE                     	global	main@meAtuadores
  5884                           main@meAtuadores:	; 1 bytes @ 0x4F
  5885  0000AF                     	ds   1
  5886  0000AF                     	global	main@num
  5887                           main@num:	; 2 bytes @ 0x50
  5888  0000B0                     	ds   2
  5889  0000B0                     	global	main@por
  5890                           main@por:	; 2 bytes @ 0x52
  5891  0000B2                     	ds   2
  5892  0000B2                     	global	main@ciclos
  5893                           main@ciclos:	; 2 bytes @ 0x54
  5894  0000B4                     	ds   2
  5895  0000B4                     	global	main@init_cond
  5896                           main@init_cond:	; 1 bytes @ 0x56
  5897  0000B6                     	ds   1
  5898  0000B6                     	global	main@botao
  5899                           main@botao:	; 1 bytes @ 0x57
  5900  0000B7                     	ds   1
  5901  0000B7                     	global	main@ptr_914
  5902                           main@ptr_914:	; 2 bytes @ 0x58
  5903  0000B8                     	ds   2
  5904  0000B8                     	global	main@ptr_939
  5905                           main@ptr_939:	; 2 bytes @ 0x5A
  5906  0000BA                     	ds   2
  5907  0000BA                     	global	main@auxPasso
  5908                           main@auxPasso:	; 1 bytes @ 0x5C
  5909  0000BC                     	ds   1
  5910  0000BC                     	global	main@estado
  5911                           main@estado:	; 1 bytes @ 0x5D
  5912  0000BD                     	ds   1
  5913  0000BD                     	global	main@tecla
  5914                           main@tecla:	; 1 bytes @ 0x5E
  5915  0000BE                     	ds   1
  5916  0000BE                     psect	cstackCOMRAM,class=COMRAM,space=1,noexec
  5917                           global __pcstackCOMRAM
  5918                           __pcstackCOMRAM:
  5919  000027                     ?_I2C_start:	; 1 bytes @ 0x0
  5920  000027                     ??_I2C_start:	; 1 bytes @ 0x0
  5921  000027                     ?_delay:	; 1 bytes @ 0x0
  5922  000027                     ?_I2C_tx:	; 1 bytes @ 0x0
  5923  000027                     ??_I2C_tx:	; 1 bytes @ 0x0
  5924  000027                     ?_I2C_ack_receive:	; 1 bytes @ 0x0
  5925  000027                     ??_I2C_ack_receive:	; 1 bytes @ 0x0
  5926  000027                     ?_I2C_stop:	; 1 bytes @ 0x0
  5927  000027                     ??_I2C_stop:	; 1 bytes @ 0x0
  5928  000027                     ?_deletar_receita:	; 1 bytes @ 0x0
  5929  000027                     ?_formatar_receitas:	; 1 bytes @ 0x0
  5930  000027                     ?_decodifica:	; 1 bytes @ 0x0
  5931  000027                     ?_codifica:	; 1 bytes @ 0x0
  5932  000027                     ?_fifo_alinharPrint:	; 1 bytes @ 0x0
  5933  000027                     ?_intt1_1ms:	; 1 bytes @ 0x0
  5934  000027                     ??_intt1_1ms:	; 1 bytes @ 0x0
  5935  000027                     ?_teclado_init:	; 1 bytes @ 0x0
  5936  000027                     ??_teclado_init:	; 1 bytes @ 0x0
  5937  000027                     ?_timer1_init:	; 1 bytes @ 0x0
  5938  000027                     ??_timer1_init:	; 1 bytes @ 0x0
  5939  000027                     ?_initSerialIO:	; 1 bytes @ 0x0
  5940  000027                     ?_teclado_borda:	; 1 bytes @ 0x0
  5941  000027                     ?_serialIOscan:	; 1 bytes @ 0x0
  5942  000027                     ?_dac_init:	; 1 bytes @ 0x0
  5943  000027                     ?_set_passo:	; 1 bytes @ 0x0
  5944  000027                     ?_ler_sensor:	; 1 bytes @ 0x0
  5945  000027                     ?_dispLCD_instReg:	; 1 bytes @ 0x0
  5946  000027                     ??_dispLCD_instReg:	; 1 bytes @ 0x0
  5947  000027                     ?_dispLCD_dataReg:	; 1 bytes @ 0x0
  5948  000027                     ??_dispLCD_dataReg:	; 1 bytes @ 0x0
  5949  000027                     ?_dispLCD_init:	; 1 bytes @ 0x0
  5950  000027                     ?_dispLCD_clr:	; 1 bytes @ 0x0
  5951  000027                     ?_EEPROM_read:	; 1 bytes @ 0x0
  5952  000027                     ??_EEPROM_read:	; 1 bytes @ 0x0
  5953  000027                     ?_EEPROM_write:	; 1 bytes @ 0x0
  5954  000027                     ?_addIndicePassos:	; 1 bytes @ 0x0
  5955  000027                     ??_addIndicePassos:	; 1 bytes @ 0x0
  5956  000027                     ?_getIndicePassos:	; 1 bytes @ 0x0
  5957  000027                     ??_getIndicePassos:	; 1 bytes @ 0x0
  5958  000027                     ?_resetIndicePassos:	; 1 bytes @ 0x0
  5959  000027                     ??_resetIndicePassos:	; 1 bytes @ 0x0
  5960  000027                     ?_resetContCiclos:	; 1 bytes @ 0x0
  5961  000027                     ??_resetContCiclos:	; 1 bytes @ 0x0
  5962  000027                     ?_addContCiclos:	; 1 bytes @ 0x0
  5963  000027                     ??_addContCiclos:	; 1 bytes @ 0x0
  5964  000027                     ?_ler_atuador:	; 1 bytes @ 0x0
  5965  000027                     ??_ler_atuador:	; 1 bytes @ 0x0
  5966  000027                     ?_alt_atuador:	; 1 bytes @ 0x0
  5967  000027                     ??_alt_atuador:	; 1 bytes @ 0x0
  5968  000027                     ?_init_atuadores:	; 1 bytes @ 0x0
  5969  000027                     ??_init_atuadores:	; 1 bytes @ 0x0
  5970  000027                     ?_salva_atuadores_init:	; 1 bytes @ 0x0
  5971  000027                     ?_manipula_atuadores_init:	; 1 bytes @ 0x0
  5972  000027                     ?_fifo_lerPos:	; 1 bytes @ 0x0
  5973  000027                     ??_fifo_lerPos:	; 1 bytes @ 0x0
  5974  000027                     ?_fifo_delete:	; 1 bytes @ 0x0
  5975  000027                     ?_fifo_add:	; 1 bytes @ 0x0
  5976  000027                     ?_fifo_add_tempo:	; 1 bytes @ 0x0
  5977  000027                     ?_fifo_add_control:	; 1 bytes @ 0x0
  5978  000027                     ?_fifo_add_ciclo:	; 1 bytes @ 0x0
  5979  000027                     ?_fifo_indice:	; 1 bytes @ 0x0
  5980  000027                     ??_fifo_indice:	; 1 bytes @ 0x0
  5981  000027                     ?_fifo_disponivel:	; 1 bytes @ 0x0
  5982  000027                     ??_fifo_disponivel:	; 1 bytes @ 0x0
  5983  000027                     ?_fifo_tam:	; 1 bytes @ 0x0
  5984  000027                     ??_fifo_tam:	; 1 bytes @ 0x0
  5985  000027                     ?_fifo_indicePrint_inc:	; 1 bytes @ 0x0
  5986  000027                     ??_fifo_indicePrint_inc:	; 1 bytes @ 0x0
  5987  000027                     ?_fifo_indicePrint_dec:	; 1 bytes @ 0x0
  5988  000027                     ??_fifo_indicePrint_dec:	; 1 bytes @ 0x0
  5989  000027                     ?_fifo_print:	; 1 bytes @ 0x0
  5990  000027                     ?_posAtual:	; 1 bytes @ 0x0
  5991  000027                     ?_irq:	; 1 bytes @ 0x0
  5992  000027                     ??_irq:	; 1 bytes @ 0x0
  5993  000027                     ?_main:	; 1 bytes @ 0x0
  5994  000027                     ?_serialIOload:	; 1 bytes @ 0x0
  5995  000027                     ??_serialIOload:	; 1 bytes @ 0x0
  5996  000027                     ?_serialIObyteShift:	; 1 bytes @ 0x0
  5997  000027                     ??_serialIObyteShift:	; 1 bytes @ 0x0
  5998  000027                     ?_teclado_scan:	; 1 bytes @ 0x0
  5999  000027                     ??_teclado_scan:	; 1 bytes @ 0x0
  6000  000027                     	global	?_fifo_adrs
  6001                           ?_fifo_adrs:	; 2 bytes @ 0x0
  6002  000027                     	global	?_end_receita
  6003                           ?_end_receita:	; 2 bytes @ 0x0
  6004  000027                     	global	?_getCiclos
  6005                           ?_getCiclos:	; 2 bytes @ 0x0
  6006  000027                     	global	?_getContCiclos
  6007                           ?_getContCiclos:	; 2 bytes @ 0x0
  6008  000027                     	global	?___wmul
  6009                           ?___wmul:	; 2 bytes @ 0x0
  6010  000027                     	global	?___awdiv
  6011                           ?___awdiv:	; 2 bytes @ 0x0
  6012  000027                     	global	?___awmod
  6013                           ?___awmod:	; 2 bytes @ 0x0
  6014  000027                     	global	?___lwdiv
  6015                           ?___lwdiv:	; 2 bytes @ 0x0
  6016  000027                     	global	?_statusT1
  6017                           ?_statusT1:	; 4 bytes @ 0x0
  6018  000027                     	global	?___lmul
  6019                           ?___lmul:	; 4 bytes @ 0x0
  6020  000027                     	global	?___lldiv
  6021                           ?___lldiv:	; 4 bytes @ 0x0
  6022  000027                     	global	EEPROM_read@addr
  6023                           EEPROM_read@addr:	; 1 bytes @ 0x0
  6024  000027                     	global	EEPROM_write@data
  6025                           EEPROM_write@data:	; 1 bytes @ 0x0
  6026  000027                     	global	fifo_lerPos@i
  6027                           fifo_lerPos@i:	; 1 bytes @ 0x0
  6028  000027                     	global	serialIObyteShift@dataIn
  6029                           serialIObyteShift@dataIn:	; 1 bytes @ 0x0
  6030  000027                     	global	I2C_tx@b
  6031                           I2C_tx@b:	; 1 bytes @ 0x0
  6032  000027                     	global	set_passo@ptr
  6033                           set_passo@ptr:	; 2 bytes @ 0x0
  6034  000027                     	global	ler_sensor@ptr
  6035                           ler_sensor@ptr:	; 2 bytes @ 0x0
  6036  000027                     	global	delay@t
  6037                           delay@t:	; 2 bytes @ 0x0
  6038  000027                     	global	end_receita@x
  6039                           end_receita@x:	; 2 bytes @ 0x0
  6040  000027                     	global	codifica@dado
  6041                           codifica@dado:	; 2 bytes @ 0x0
  6042  000027                     	global	decodifica@d
  6043                           decodifica@d:	; 2 bytes @ 0x0
  6044  000027                     	global	fifo_add_ciclo@ciclos
  6045                           fifo_add_ciclo@ciclos:	; 2 bytes @ 0x0
  6046  000027                     	global	initSerialIO@ptrIn
  6047                           initSerialIO@ptrIn:	; 2 bytes @ 0x0
  6048  000027                     	global	___wmul@multiplier
  6049                           ___wmul@multiplier:	; 2 bytes @ 0x0
  6050  000027                     	global	___awdiv@dividend
  6051                           ___awdiv@dividend:	; 2 bytes @ 0x0
  6052  000027                     	global	___awmod@dividend
  6053                           ___awmod@dividend:	; 2 bytes @ 0x0
  6054  000027                     	global	___lwdiv@dividend
  6055                           ___lwdiv@dividend:	; 2 bytes @ 0x0
  6056  000027                     	global	___lmul@multiplier
  6057                           ___lmul@multiplier:	; 4 bytes @ 0x0
  6058  000027                     	global	___lldiv@dividend
  6059                           ___lldiv@dividend:	; 4 bytes @ 0x0
  6060  000027                     	ds   1
  6061  000027                     ??_EEPROM_write:	; 1 bytes @ 0x1
  6062  000028                     ??_posAtual:	; 1 bytes @ 0x1
  6063  000028                     	global	dispLCD_instReg@i
  6064                           dispLCD_instReg@i:	; 1 bytes @ 0x1
  6065  000028                     	global	dispLCD_dataReg@d
  6066                           dispLCD_dataReg@d:	; 1 bytes @ 0x1
  6067  000028                     	global	EEPROM_write@addr
  6068                           EEPROM_write@addr:	; 1 bytes @ 0x1
  6069  000028                     	global	posAtual@ind
  6070                           posAtual@ind:	; 1 bytes @ 0x1
  6071  000028                     	global	serialIObyteShift@dataOut
  6072                           serialIObyteShift@dataOut:	; 1 bytes @ 0x1
  6073  000028                     	ds   1
  6074  000028                     ??_delay:	; 1 bytes @ 0x2
  6075  000029                     ??_formatar_receitas:	; 1 bytes @ 0x2
  6076  000029                     ??_decodifica:	; 1 bytes @ 0x2
  6077  000029                     ??_codifica:	; 1 bytes @ 0x2
  6078  000029                     ??_fifo_adrs:	; 1 bytes @ 0x2
  6079  000029                     ??_set_passo:	; 1 bytes @ 0x2
  6080  000029                     ??_ler_sensor:	; 1 bytes @ 0x2
  6081  000029                     ?_dispLCD_lincol:	; 1 bytes @ 0x2
  6082  000029                     ??_dispLCD_clr:	; 1 bytes @ 0x2
  6083  000029                     ??_end_receita:	; 1 bytes @ 0x2
  6084  000029                     ??_getCiclos:	; 1 bytes @ 0x2
  6085  000029                     ??_getContCiclos:	; 1 bytes @ 0x2
  6086  000029                     ??_fifo_add_ciclo:	; 1 bytes @ 0x2
  6087  000029                     	global	dispLCD_lincol@col
  6088                           dispLCD_lincol@col:	; 1 bytes @ 0x2
  6089  000029                     	global	formatar_receitas@i
  6090                           formatar_receitas@i:	; 1 bytes @ 0x2
  6091  000029                     	global	ler_atuador@tecla
  6092                           ler_atuador@tecla:	; 1 bytes @ 0x2
  6093  000029                     	global	alt_atuador@tecla
  6094                           alt_atuador@tecla:	; 1 bytes @ 0x2
  6095  000029                     	global	posAtual@passo
  6096                           posAtual@passo:	; 1 bytes @ 0x2
  6097  000029                     	global	serialIObyteShift@dataBit
  6098                           serialIObyteShift@dataBit:	; 1 bytes @ 0x2
  6099  000029                     	global	teclado_scan@tecla
  6100                           teclado_scan@tecla:	; 1 bytes @ 0x2
  6101  000029                     	global	getCiclos@aux
  6102                           getCiclos@aux:	; 2 bytes @ 0x2
  6103  000029                     	global	initSerialIO@ptrOut
  6104                           initSerialIO@ptrOut:	; 2 bytes @ 0x2
  6105  000029                     	global	___wmul@multiplicand
  6106                           ___wmul@multiplicand:	; 2 bytes @ 0x2
  6107  000029                     	global	___awdiv@divisor
  6108                           ___awdiv@divisor:	; 2 bytes @ 0x2
  6109  000029                     	global	___awmod@divisor
  6110                           ___awmod@divisor:	; 2 bytes @ 0x2
  6111  000029                     	global	___lwdiv@divisor
  6112                           ___lwdiv@divisor:	; 2 bytes @ 0x2
  6113  000029                     	ds   1
  6114  000029                     ??_serialIOscan:	; 1 bytes @ 0x3
  6115  00002A                     ??_dac_init:	; 1 bytes @ 0x3
  6116  00002A                     ?_dac_write:	; 1 bytes @ 0x3
  6117  00002A                     ??_dispLCD_lincol:	; 1 bytes @ 0x3
  6118  00002A                     ??_dispLCD_init:	; 1 bytes @ 0x3
  6119  00002A                     ??_salva_atuadores_init:	; 1 bytes @ 0x3
  6120  00002A                     ??_manipula_atuadores_init:	; 1 bytes @ 0x3
  6121  00002A                     	global	manipula_atuadores_init@atuador
  6122                           manipula_atuadores_init@atuador:	; 1 bytes @ 0x3
  6123  00002A                     	global	teclado_scan@l
  6124                           teclado_scan@l:	; 1 bytes @ 0x3
  6125  00002A                     	global	dac_write@code
  6126                           dac_write@code:	; 2 bytes @ 0x3
  6127  00002A                     	global	salva_atuadores_init@condi_init
  6128                           salva_atuadores_init@condi_init:	; 4 bytes @ 0x3
  6129  00002A                     	ds   1
  6130  00002A                     ??_deletar_receita:	; 1 bytes @ 0x4
  6131  00002B                     ??_statusT1:	; 1 bytes @ 0x4
  6132  00002B                     ??___wmul:	; 1 bytes @ 0x4
  6133  00002B                     ??___awdiv:	; 1 bytes @ 0x4
  6134  00002B                     ??___awmod:	; 1 bytes @ 0x4
  6135  00002B                     ??___lwdiv:	; 1 bytes @ 0x4
  6136  00002B                     	global	set_passo@passo
  6137                           set_passo@passo:	; 1 bytes @ 0x4
  6138  00002B                     	global	ler_sensor@passo
  6139                           ler_sensor@passo:	; 1 bytes @ 0x4
  6140  00002B                     	global	manipula_atuadores_init@aux
  6141                           manipula_atuadores_init@aux:	; 1 bytes @ 0x4
  6142  00002B                     	global	codifica@tipo
  6143                           codifica@tipo:	; 1 bytes @ 0x4
  6144  00002B                     	global	initSerialIO@length
  6145                           initSerialIO@length:	; 1 bytes @ 0x4
  6146  00002B                     	global	teclado_scan@c
  6147                           teclado_scan@c:	; 1 bytes @ 0x4
  6148  00002B                     	global	___awdiv@counter
  6149                           ___awdiv@counter:	; 1 bytes @ 0x4
  6150  00002B                     	global	___awmod@counter
  6151                           ___awmod@counter:	; 1 bytes @ 0x4
  6152  00002B                     	global	deletar_receita@aux
  6153                           deletar_receita@aux:	; 2 bytes @ 0x4
  6154  00002B                     	global	___wmul@product
  6155                           ___wmul@product:	; 2 bytes @ 0x4
  6156  00002B                     	global	___lwdiv@quotient
  6157                           ___lwdiv@quotient:	; 2 bytes @ 0x4
  6158  00002B                     	global	___lmul@multiplicand
  6159                           ___lmul@multiplicand:	; 4 bytes @ 0x4
  6160  00002B                     	global	___lldiv@divisor
  6161                           ___lldiv@divisor:	; 4 bytes @ 0x4
  6162  00002B                     	ds   1
  6163  00002B                     ??_initSerialIO:	; 1 bytes @ 0x5
  6164  00002C                     ??_teclado_borda:	; 1 bytes @ 0x5
  6165  00002C                     ??_dac_write:	; 1 bytes @ 0x5
  6166  00002C                     	global	dispLCD_lincol@lin
  6167                           dispLCD_lincol@lin:	; 1 bytes @ 0x5
  6168  00002C                     	global	manipula_atuadores_init@mask
  6169                           manipula_atuadores_init@mask:	; 1 bytes @ 0x5
  6170  00002C                     	global	teclado_borda@aux
  6171                           teclado_borda@aux:	; 1 bytes @ 0x5
  6172  00002C                     	global	___awdiv@sign
  6173                           ___awdiv@sign:	; 1 bytes @ 0x5
  6174  00002C                     	global	___awmod@sign
  6175                           ___awmod@sign:	; 1 bytes @ 0x5
  6176  00002C                     	ds   1
  6177  00002C                     ?_salvar_receita:	; 1 bytes @ 0x6
  6178  00002D                     ?_buscar_receita:	; 1 bytes @ 0x6
  6179  00002D                     ?_setT1:	; 1 bytes @ 0x6
  6180  00002D                     ?_salvar_dado:	; 1 bytes @ 0x6
  6181  00002D                     ?_buscar_dado:	; 1 bytes @ 0x6
  6182  00002D                     ?_dignum_conc:	; 1 bytes @ 0x6
  6183  00002D                     	global	dispLCD_lincol@aux
  6184                           dispLCD_lincol@aux:	; 1 bytes @ 0x6
  6185  00002D                     	global	salvar_dado@col
  6186                           salvar_dado@col:	; 1 bytes @ 0x6
  6187  00002D                     	global	buscar_dado@col
  6188                           buscar_dado@col:	; 1 bytes @ 0x6
  6189  00002D                     	global	deletar_receita@receita
  6190                           deletar_receita@receita:	; 1 bytes @ 0x6
  6191  00002D                     	global	teclado_borda@tecla
  6192                           teclado_borda@tecla:	; 1 bytes @ 0x6
  6193  00002D                     	global	___lwdiv@counter
  6194                           ___lwdiv@counter:	; 1 bytes @ 0x6
  6195  00002D                     	global	salvar_receita@data
  6196                           salvar_receita@data:	; 2 bytes @ 0x6
  6197  00002D                     	global	buscar_receita@data
  6198                           buscar_receita@data:	; 2 bytes @ 0x6
  6199  00002D                     	global	dignum_conc@ptrNum
  6200                           dignum_conc@ptrNum:	; 2 bytes @ 0x6
  6201  00002D                     	global	___awdiv@quotient
  6202                           ___awdiv@quotient:	; 2 bytes @ 0x6
  6203  00002D                     	global	setT1@c
  6204                           setT1@c:	; 4 bytes @ 0x6
  6205  00002D                     	ds   1
  6206  00002D                     ?_dispLCD:	; 1 bytes @ 0x7
  6207  00002E                     ?_dispLCD_str:	; 1 bytes @ 0x7
  6208  00002E                     ?_dignum_apagar:	; 1 bytes @ 0x7
  6209  00002E                     	global	dispLCD@col
  6210                           dispLCD@col:	; 1 bytes @ 0x7
  6211  00002E                     	global	salvar_dado@data
  6212                           salvar_dado@data:	; 1 bytes @ 0x7
  6213  00002E                     	global	deletar_receita@i
  6214                           deletar_receita@i:	; 1 bytes @ 0x7
  6215  00002E                     	global	serialIOscan@j
  6216                           serialIOscan@j:	; 1 bytes @ 0x7
  6217  00002E                     	global	dispLCD_str@str
  6218                           dispLCD_str@str:	; 2 bytes @ 0x7
  6219  00002E                     	global	buscar_dado@data
  6220                           buscar_dado@data:	; 2 bytes @ 0x7
  6221  00002E                     	global	salva_atuadores_init@pt
  6222                           salva_atuadores_init@pt:	; 2 bytes @ 0x7
  6223  00002E                     	global	dignum_apagar@ptrNum
  6224                           dignum_apagar@ptrNum:	; 2 bytes @ 0x7
  6225  00002E                     	ds   1
  6226  00002E                     ??_salvar_receita:	; 1 bytes @ 0x8
  6227  00002F                     ??_buscar_receita:	; 1 bytes @ 0x8
  6228  00002F                     ??_salvar_dado:	; 1 bytes @ 0x8
  6229  00002F                     ??_fifo_print:	; 1 bytes @ 0x8
  6230  00002F                     ??_dignum_conc:	; 1 bytes @ 0x8
  6231  00002F                     ?_dignum_tam:	; 1 bytes @ 0x8
  6232  00002F                     ??___lmul:	; 1 bytes @ 0x8
  6233  00002F                     ??___lldiv:	; 1 bytes @ 0x8
  6234  00002F                     	global	serialIOscan@i
  6235                           serialIOscan@i:	; 1 bytes @ 0x8
  6236  00002F                     	global	dispLCD@str
  6237                           dispLCD@str:	; 2 bytes @ 0x8
  6238  00002F                     	global	salvar_receita@aux
  6239                           salvar_receita@aux:	; 2 bytes @ 0x8
  6240  00002F                     	global	buscar_receita@aux
  6241                           buscar_receita@aux:	; 2 bytes @ 0x8
  6242  00002F                     	global	salvar_dado@aux
  6243                           salvar_dado@aux:	; 2 bytes @ 0x8
  6244  00002F                     	global	dignum_tam@num
  6245                           dignum_tam@num:	; 2 bytes @ 0x8
  6246  00002F                     	global	___lmul@product
  6247                           ___lmul@product:	; 4 bytes @ 0x8
  6248  00002F                     	global	___lldiv@quotient
  6249                           ___lldiv@quotient:	; 4 bytes @ 0x8
  6250  00002F                     	ds   1
  6251  00002F                     ??_dispLCD_str:	; 1 bytes @ 0x9
  6252  000030                     ??_buscar_dado:	; 1 bytes @ 0x9
  6253  000030                     ??_dignum_apagar:	; 1 bytes @ 0x9
  6254  000030                     	global	dispLCD_str@lin
  6255                           dispLCD_str@lin:	; 1 bytes @ 0x9
  6256  000030                     	global	salva_atuadores_init@dado
  6257                           salva_atuadores_init@dado:	; 1 bytes @ 0x9
  6258  000030                     	global	buscar_dado@aux
  6259                           buscar_dado@aux:	; 2 bytes @ 0x9
  6260  000030                     	ds   1
  6261  000030                     ??_setT1:	; 1 bytes @ 0xA
  6262  000031                     ??_dispLCD:	; 1 bytes @ 0xA
  6263  000031                     ??_dignum_tam:	; 1 bytes @ 0xA
  6264  000031                     	global	dispLCD@pos
  6265                           dispLCD@pos:	; 1 bytes @ 0xA
  6266  000031                     	global	dispLCD_str@c
  6267                           dispLCD_str@c:	; 1 bytes @ 0xA
  6268  000031                     	global	salvar_receita@adrs
  6269                           salvar_receita@adrs:	; 1 bytes @ 0xA
  6270  000031                     	global	buscar_receita@adrs
  6271                           buscar_receita@adrs:	; 1 bytes @ 0xA
  6272  000031                     	global	salvar_dado@adrs
  6273                           salvar_dado@adrs:	; 1 bytes @ 0xA
  6274  000031                     	global	salva_atuadores_init@mask
  6275                           salva_atuadores_init@mask:	; 1 bytes @ 0xA
  6276  000031                     	global	dignum_tam@tam
  6277                           dignum_tam@tam:	; 1 bytes @ 0xA
  6278  000031                     	global	_fifo_print$473
  6279                           _fifo_print$473:	; 2 bytes @ 0xA
  6280  000031                     	ds   1
  6281  000031                     ??_fifo_alinharPrint:	; 1 bytes @ 0xB
  6282  000032                     ?_dispLCD_num:	; 1 bytes @ 0xB
  6283  000032                     	global	dispLCD@lin
  6284                           dispLCD@lin:	; 1 bytes @ 0xB
  6285  000032                     	global	dispLCD_num@col
  6286                           dispLCD_num@col:	; 1 bytes @ 0xB
  6287  000032                     	global	salvar_receita@i
  6288                           salvar_receita@i:	; 1 bytes @ 0xB
  6289  000032                     	global	buscar_receita@i
  6290                           buscar_receita@i:	; 1 bytes @ 0xB
  6291  000032                     	global	buscar_dado@adrs
  6292                           buscar_dado@adrs:	; 1 bytes @ 0xB
  6293  000032                     	ds   1
  6294  000032                     	global	?___aldiv
  6295                           ?___aldiv:	; 4 bytes @ 0xC
  6296  000033                     	global	fifo_print@completar
  6297                           fifo_print@completar:	; 1 bytes @ 0xC
  6298  000033                     	global	dignum_conc@dig
  6299                           dignum_conc@dig:	; 1 bytes @ 0xC
  6300  000033                     	global	fifo_alinharPrint@cont
  6301                           fifo_alinharPrint@cont:	; 1 bytes @ 0xC
  6302  000033                     	global	___lldiv@counter
  6303                           ___lldiv@counter:	; 1 bytes @ 0xC
  6304  000033                     	global	dispLCD_num@num
  6305                           dispLCD_num@num:	; 2 bytes @ 0xC
  6306  000033                     	global	___aldiv@dividend
  6307                           ___aldiv@dividend:	; 4 bytes @ 0xC
  6308  000033                     	ds   1
  6309  000033                     ?_I2C_init:	; 1 bytes @ 0xD
  6310  000034                     	global	fifo_print@indPrint
  6311                           fifo_print@indPrint:	; 1 bytes @ 0xD
  6312  000034                     	global	fifo_alinharPrint@i
  6313                           fifo_alinharPrint@i:	; 1 bytes @ 0xD
  6314  000034                     	global	I2C_init@freq
  6315                           I2C_init@freq:	; 4 bytes @ 0xD
  6316  000034                     	ds   1
  6317  000034                     	global	dispLCD_num@tam
  6318                           dispLCD_num@tam:	; 1 bytes @ 0xE
  6319  000035                     	global	fifo_print@i
  6320                           fifo_print@i:	; 1 bytes @ 0xE
  6321  000035                     	global	fifo_alinharPrint@aux
  6322                           fifo_alinharPrint@aux:	; 1 bytes @ 0xE
  6323  000035                     	ds   1
  6324  000035                     ??_dispLCD_num:	; 1 bytes @ 0xF
  6325  000036                     ??_fifo_delete:	; 1 bytes @ 0xF
  6326  000036                     ??_fifo_add:	; 1 bytes @ 0xF
  6327  000036                     ??_fifo_add_tempo:	; 1 bytes @ 0xF
  6328  000036                     ??_fifo_add_control:	; 1 bytes @ 0xF
  6329  000036                     	global	fifo_add@passo
  6330                           fifo_add@passo:	; 1 bytes @ 0xF
  6331  000036                     	global	fifo_add_tempo@t
  6332                           fifo_add_tempo@t:	; 1 bytes @ 0xF
  6333  000036                     	global	fifo_add_control@c
  6334                           fifo_add_control@c:	; 1 bytes @ 0xF
  6335  000036                     	global	fifo_print@atraso
  6336                           fifo_print@atraso:	; 1 bytes @ 0xF
  6337  000036                     	ds   1
  6338  000036                     	global	fifo_print@comando
  6339                           fifo_print@comando:	; 1 bytes @ 0x10
  6340  000037                     	global	___aldiv@divisor
  6341                           ___aldiv@divisor:	; 4 bytes @ 0x10
  6342  000037                     	ds   1
  6343  000037                     ??_I2C_init:	; 1 bytes @ 0x11
  6344  000038                     	ds   3
  6345  000038                     ??___aldiv:	; 1 bytes @ 0x14
  6346  00003B                     	global	dispLCD_num@lin
  6347                           dispLCD_num@lin:	; 1 bytes @ 0x14
  6348  00003B                     	global	___aldiv@counter
  6349                           ___aldiv@counter:	; 1 bytes @ 0x14
  6350  00003B                     	ds   1
  6351  00003B                     	global	dispLCD_num@size
  6352                           dispLCD_num@size:	; 1 bytes @ 0x15
  6353  00003C                     	global	___aldiv@sign
  6354                           ___aldiv@sign:	; 1 bytes @ 0x15
  6355  00003C                     	ds   1
  6356  00003C                     	global	dispLCD_num@sinal
  6357                           dispLCD_num@sinal:	; 1 bytes @ 0x16
  6358  00003D                     	global	___aldiv@quotient
  6359                           ___aldiv@quotient:	; 4 bytes @ 0x16
  6360  00003D                     	ds   1
  6361  00003D                     	global	dispLCD_num@div
  6362                           dispLCD_num@div:	; 2 bytes @ 0x17
  6363  00003E                     	ds   2
  6364  00003E                     ?_printExec:	; 1 bytes @ 0x19
  6365  000040                     	global	printExec@ind
  6366                           printExec@ind:	; 1 bytes @ 0x19
  6367  000040                     	ds   1
  6368  000040                     ?_MCP4725:	; 1 bytes @ 0x1A
  6369  000041                     ??_printExec:	; 1 bytes @ 0x1A
  6370  000041                     	global	MCP4725@Vout
  6371                           MCP4725@Vout:	; 2 bytes @ 0x1A
  6372  000041                     	global	_printExec$498
  6373                           _printExec$498:	; 2 bytes @ 0x1A
  6374  000041                     	ds   2
  6375  000041                     ??_MCP4725:	; 1 bytes @ 0x1C
  6376  000043                     	global	printExec@col
  6377                           printExec@col:	; 1 bytes @ 0x1C
  6378  000043                     	ds   1
  6379  000043                     	global	printExec@passo
  6380                           printExec@passo:	; 1 bytes @ 0x1D
  6381  000044                     	ds   1
  6382  000044                     ??_main:	; 1 bytes @ 0x1E
  6383  000045                     	ds   2
  6384  000045                     ;!
  6385                           ;!Data Sizes:
  6386                           ;!    Strings     1043
  6387                           ;!    Constant    0
  6388                           ;!    Data        145
  6389                           ;!    BSS         70
  6390                           ;!    Persistent  0
  6391                           ;!    Stack       0
  6392                           ;!
  6393                           ;!Auto Spaces:
  6394                           ;!    Space          Size  Autos    Used
  6395                           ;!    COMRAM           94     32      89
  6396                           ;!    BANK0           160     95     143
  6397                           ;!    BANK1           256      0     110
  6398                           ;!    BANK2           256      0       0
  6399                           ;!    BANK3           256      0       0
  6400                           ;!    BANK4           256      0       0
  6401                           ;!    BANK5           256      0       0
  6402                           ;!    BANK6           256      0       0
  6403                           ;!    BANK7           256      0       0
  6404                           
  6405                           ;!
  6406                           ;!Pointer List with Targets:
  6407                           ;!
  6408                           ;!    S174$3$0	PTR unsigned char  size(2) Largest target is 0
  6409                           ;!
  6410                           ;!    S576$2$0	PTR unsigned char  size(2) Largest target is 0
  6411                           ;!
  6412                           ;!    S576$4$1	PTR const unsigned char  size(2) Largest target is 0
  6413                           ;!
  6414                           ;!    S576$4$0	PTR const unsigned char  size(2) Largest target is 0
  6415                           ;!
  6416                           ;!    S576$9$1	PTR unsigned char  size(2) Largest target is 0
  6417                           ;!
  6418                           ;!    S576$9$0	PTR unsigned char  size(2) Largest target is 0
  6419                           ;!
  6420                           ;!    S1542$7$1	PTR const unsigned char  size(2) Largest target is 0
  6421                           ;!
  6422                           ;!    S1542$7$0	PTR const unsigned char  size(2) Largest target is 0
  6423                           ;!
  6424                           ;!    S576$1$0	PTR const unsigned char  size(2) Largest target is 41
  6425                           ;!		 -> STR_51(CODE[14]), STR_50(CODE[40]), Wifi_cipsend@vtr(COMRAM[10]), Wifi_cipsend@s
                                 tr(COMRAM[20]), 
  6426                           ;!		 -> STR_49(CODE[15]), STR_48(CODE[14]), STR_47(CODE[17]), STR_46(CODE[15]), 
  6427                           ;!		 -> STR_45(CODE[21]), STR_44(CODE[14]), STR_43(CODE[18]), STR_42(CODE[11]), 
  6428                           ;!		 -> STR_41(CODE[11]), Wifi_connect@str(COMRAM[30]), STR_40(CODE[41]), STR_39(CODE[14
                                 ]), 
  6429                           ;!		 -> STR_38(CODE[36]), STR_37(CODE[14]), STR_36(CODE[15]), STR_35(CODE[14]), 
  6430                           ;!		 -> STR_34(CODE[17]), STR_33(CODE[14]), 
  6431                           ;!
  6432                           ;!    S174$0$1	PTR unsigned char  size(2) Largest target is 18
  6433                           ;!		 -> fila(COMRAM[18]), 
  6434                           ;!
  6435                           ;!    S174$1$1	PTR unsigned char  size(2) Largest target is 16
  6436                           ;!		 -> main@vetor_aux(BANK0[16]), 
  6437                           ;!
  6438                           ;!    S504$1$0	PTR const unsigned char  size(2) Largest target is 83
  6439                           ;!		 -> STR_27(CODE[78]), STR_26(CODE[62]), STR_15(CODE[81]), STR_4(CODE[83]), 
  6440                           ;!
  6441                           ;!    S504$2$2	PTR const unsigned char  size(2) Largest target is 21
  6442                           ;!		 -> STR_32(CODE[21]), STR_31(CODE[21]), STR_30(CODE[21]), STR_29(CODE[2]), 
  6443                           ;!		 -> STR_28(CODE[2]), STR_25(CODE[21]), STR_24(CODE[21]), STR_23(CODE[21]), 
  6444                           ;!		 -> STR_22(CODE[21]), STR_21(CODE[21]), STR_20(CODE[8]), STR_19(CODE[21]), 
  6445                           ;!		 -> STR_18(CODE[21]), STR_17(CODE[21]), STR_16(CODE[21]), STR_14(CODE[21]), 
  6446                           ;!		 -> STR_13(CODE[21]), STR_12(CODE[2]), STR_11(CODE[2]), STR_10(CODE[21]), 
  6447                           ;!		 -> STR_9(CODE[21]), STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), 
  6448                           ;!		 -> STR_5(CODE[21]), STR_3(CODE[21]), STR_2(CODE[2]), STR_1(CODE[2]), 
  6449                           ;!
  6450                           ;!    aux	PTR unsigned char [10] size(2) Largest target is 2047
  6451                           ;!		 -> RAM(DATA[2047]), 
  6452                           ;!
  6453                           ;!    S1542eusartT$search_string	PTR FTN(PTR const unsigned char ,PTR const unsigned cha
                                 r ,)int  size(2) Largest target is 2
  6454                           ;!		 -> search(), 
  6455                           ;!
  6456                           ;!    eusart.search_string	PTR FTN(PTR const unsigned char ,PTR const unsigned char ,)in
                                 t  size(2) Largest target is 2
  6457                           ;!		 -> search(), 
  6458                           ;!
  6459                           ;!    S1542eusartT$init	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
  6460                           ;!		 -> initEUSART(), 
  6461                           ;!
  6462                           ;!    eusart.init	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
  6463                           ;!		 -> initEUSART(), 
  6464                           ;!
  6465                           ;!    S1542eusartT$txSTATUS	PTR FTN()unsigned char  size(2) Largest target is 1
  6466                           ;!		 -> txStatusEUSART(), 
  6467                           ;!
  6468                           ;!    eusart.txSTATUS	PTR FTN()unsigned char  size(2) Largest target is 1
  6469                           ;!		 -> txStatusEUSART(), 
  6470                           ;!
  6471                           ;!    S1542eusartT$tx	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
  6472                           ;!		 -> txEUSART(), 
  6473                           ;!
  6474                           ;!    eusart.tx	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
  6475                           ;!		 -> txEUSART(), 
  6476                           ;!
  6477                           ;!    S1542eusartT$rxResetERROR	PTR FTN()void  size(2) Largest target is 1
  6478                           ;!		 -> rxResetErrorEUSART(), 
  6479                           ;!
  6480                           ;!    eusart.rxResetERROR	PTR FTN()void  size(2) Largest target is 1
  6481                           ;!		 -> rxResetErrorEUSART(), 
  6482                           ;!
  6483                           ;!    S1542eusartT$rxERROR	PTR FTN()unsigned char  size(2) Largest target is 1
  6484                           ;!		 -> rxErrorEUSART(), 
  6485                           ;!
  6486                           ;!    eusart.rxERROR	PTR FTN()unsigned char  size(2) Largest target is 1
  6487                           ;!		 -> rxErrorEUSART(), 
  6488                           ;!
  6489                           ;!    S1542eusartT$rxSTATUS	PTR FTN()unsigned char  size(2) Largest target is 1
  6490                           ;!		 -> rxStatusEUSART(), 
  6491                           ;!
  6492                           ;!    eusart.rxSTATUS	PTR FTN()unsigned char  size(2) Largest target is 1
  6493                           ;!		 -> rxStatusEUSART(), 
  6494                           ;!
  6495                           ;!    S1542eusartT$rx	PTR FTN()unsigned char  size(2) Largest target is 1
  6496                           ;!		 -> rxEUSART(), 
  6497                           ;!
  6498                           ;!    eusart.rx	PTR FTN()unsigned char  size(2) Largest target is 1
  6499                           ;!		 -> rxEUSART(), 
  6500                           ;!
  6501                           ;!    initSerialIO@ptrOut	PTR unsigned char  size(2) Largest target is 1
  6502                           ;!		 -> main@vetorOut(BANK0[1]), 
  6503                           ;!
  6504                           ;!    initSerialIO@ptrIn	PTR unsigned char  size(2) Largest target is 1
  6505                           ;!		 -> main@vetorIn(BANK0[1]), 
  6506                           ;!
  6507                           ;!    ptrSerialOut	PTR unsigned char  size(2) Largest target is 1
  6508                           ;!		 -> NULL(NULL[0]), main@vetorOut(BANK0[1]), 
  6509                           ;!
  6510                           ;!    ptrSerialIn	PTR unsigned char  size(2) Largest target is 1
  6511                           ;!		 -> NULL(NULL[0]), main@vetorIn(BANK0[1]), 
  6512                           ;!
  6513                           ;!    main@ptr_939	PTR unsigned char  size(2) Largest target is 16
  6514                           ;!		 -> main@vetor_aux(BANK0[16]), 
  6515                           ;!
  6516                           ;!    main@ptr_914	PTR unsigned char  size(2) Largest target is 16
  6517                           ;!		 -> main@vetor_aux(BANK0[16]), 
  6518                           ;!
  6519                           ;!    main@pt	PTR unsigned char  size(2) Largest target is 16
  6520                           ;!		 -> main@vetor_aux(BANK0[16]), 
  6521                           ;!
  6522                           ;!    main@ptr	PTR unsigned char  size(2) Largest target is 20
  6523                           ;!		 -> main@lema(BANK0[20]), 
  6524                           ;!
  6525                           ;!    S576$cipsend	PTR FTN(PTR unsigned char ,PTR unsigned char ,)void  size(2) Largest 
                                 target is 1
  6526                           ;!		 -> Wifi_cipsend(), 
  6527                           ;!
  6528                           ;!    wifi.cipsend	PTR FTN(PTR unsigned char ,PTR unsigned char ,)void  size(2) Largest 
                                 target is 1
  6529                           ;!		 -> Wifi_cipsend(), 
  6530                           ;!
  6531                           ;!    S576$config_servidor	PTR FTN()void  size(2) Largest target is 1
  6532                           ;!		 -> Wifi_config_servidor(), 
  6533                           ;!
  6534                           ;!    wifi.config_servidor	PTR FTN()void  size(2) Largest target is 1
  6535                           ;!		 -> Wifi_config_servidor(), 
  6536                           ;!
  6537                           ;!    S576$scan	PTR FTN()void  size(2) Largest target is 1
  6538                           ;!		 -> Wifi_scan(), 
  6539                           ;!
  6540                           ;!    wifi.scan	PTR FTN()void  size(2) Largest target is 1
  6541                           ;!		 -> Wifi_scan(), 
  6542                           ;!
  6543                           ;!    S576$autoconnect	PTR FTN()void  size(2) Largest target is 1
  6544                           ;!		 -> Wifi_autoconnect(), 
  6545                           ;!
  6546                           ;!    wifi.autoconnect	PTR FTN()void  size(2) Largest target is 1
  6547                           ;!		 -> Wifi_autoconnect(), 
  6548                           ;!
  6549                           ;!    S576$ip	PTR FTN()void  size(2) Largest target is 1
  6550                           ;!		 -> Wifi_ip(), 
  6551                           ;!
  6552                           ;!    wifi.ip	PTR FTN()void  size(2) Largest target is 1
  6553                           ;!		 -> Wifi_ip(), 
  6554                           ;!
  6555                           ;!    S576$connect	PTR FTN(PTR const unsigned char ,PTR const unsigned char ,)void  size
                                 (2) Largest target is 1
  6556                           ;!		 -> Wifi_connect(), 
  6557                           ;!
  6558                           ;!    wifi.connect	PTR FTN(PTR const unsigned char ,PTR const unsigned char ,)void  size
                                 (2) Largest target is 1
  6559                           ;!		 -> Wifi_connect(), 
  6560                           ;!
  6561                           ;!    S576$mode	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
  6562                           ;!		 -> Wifi_mode(), 
  6563                           ;!
  6564                           ;!    wifi.mode	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
  6565                           ;!		 -> Wifi_mode(), 
  6566                           ;!
  6567                           ;!    S576$receive	PTR FTN(PTR unsigned char ,)unsigned char  size(2) Largest target is 
                                 1
  6568                           ;!		 -> wifi_receive(), 
  6569                           ;!
  6570                           ;!    wifi.receive	PTR FTN(PTR unsigned char ,)unsigned char  size(2) Largest target is 
                                 1
  6571                           ;!		 -> wifi_receive(), 
  6572                           ;!
  6573                           ;!    S576$send	PTR FTN(PTR const unsigned char ,)void  size(2) Largest target is 1
  6574                           ;!		 -> wifi_send(), 
  6575                           ;!
  6576                           ;!    wifi.send	PTR FTN(PTR const unsigned char ,)void  size(2) Largest target is 1
  6577                           ;!		 -> wifi_send(), 
  6578                           ;!
  6579                           ;!    S576$init	PTR FTN(long ,)void  size(2) Largest target is 1
  6580                           ;!		 -> wifi_init(), 
  6581                           ;!
  6582                           ;!    wifi.init	PTR FTN(long ,)void  size(2) Largest target is 1
  6583                           ;!		 -> wifi_init(), 
  6584                           ;!
  6585                           ;!    S504$clr	PTR FTN()void  size(2) Largest target is 1
  6586                           ;!		 -> dispLCD_clr(), 
  6587                           ;!
  6588                           ;!    IHM.clr	PTR FTN()void  size(2) Largest target is 1
  6589                           ;!		 -> dispLCD_clr(), 
  6590                           ;!
  6591                           ;!    S504$printv	PTR FTN(unsigned char ,unsigned char ,int ,unsigned char ,)void  size(
                                 2) Largest target is 1
  6592                           ;!		 -> dispLCD_num(), 
  6593                           ;!
  6594                           ;!    IHM.printv	PTR FTN(unsigned char ,unsigned char ,int ,unsigned char ,)void  size(2
                                 ) Largest target is 1
  6595                           ;!		 -> dispLCD_num(), 
  6596                           ;!
  6597                           ;!    S504$printpos	PTR FTN(unsigned char ,unsigned char ,PTR const unsigned char ,)void
                                   size(2) Largest target is 1
  6598                           ;!		 -> dispLCD(), 
  6599                           ;!
  6600                           ;!    IHM.printpos	PTR FTN(unsigned char ,unsigned char ,PTR const unsigned char ,)void 
                                  size(2) Largest target is 1
  6601                           ;!		 -> dispLCD(), 
  6602                           ;!
  6603                           ;!    S504$print	PTR FTN(PTR const unsigned char ,)void  size(2) Largest target is 1
  6604                           ;!		 -> dispLCD_str(), 
  6605                           ;!
  6606                           ;!    IHM.print	PTR FTN(PTR const unsigned char ,)void  size(2) Largest target is 1
  6607                           ;!		 -> dispLCD_str(), 
  6608                           ;!
  6609                           ;!    S504$init	PTR FTN()void  size(2) Largest target is 1
  6610                           ;!		 -> dispLCD_init(), 
  6611                           ;!
  6612                           ;!    IHM.init	PTR FTN()void  size(2) Largest target is 1
  6613                           ;!		 -> dispLCD_init(), 
  6614                           ;!
  6615                           ;!    dignum_apagar@ptrNum	PTR unsigned int  size(2) Largest target is 2
  6616                           ;!		 -> main@ciclos(BANK0[2]), main@por(BANK0[2]), main@num(BANK0[2]), 
  6617                           ;!
  6618                           ;!    dignum_conc@ptrNum	PTR unsigned int  size(2) Largest target is 2
  6619                           ;!		 -> main@ciclos(BANK0[2]), main@por(BANK0[2]), main@num(BANK0[2]), 
  6620                           ;!
  6621                           ;!    decodifica@d	PTR unsigned char  size(2) Largest target is 18
  6622                           ;!		 -> main@vetor_aux(BANK0[16]), main@auxPasso(BANK0[1]), printExec@passo(COMRAM[1]), 
                                 fifo_print@comando(COMRAM[1]), 
  6623                           ;!		 -> fila(COMRAM[18]), 
  6624                           ;!
  6625                           ;!    codifica@dado	PTR unsigned char  size(2) Largest target is 2047
  6626                           ;!		 -> fifo_add_control@c(COMRAM[1]), fifo_add_tempo@t(COMRAM[1]), fifo_add@passo(COMRA
                                 M[1]), RAM(DATA[2047]), 
  6627                           ;!
  6628                           ;!    sp__fifo_adrs	PTR unsigned char  size(2) Largest target is 18
  6629                           ;!		 -> fila(COMRAM[18]), 
  6630                           ;!
  6631                           ;!    salva_atuadores_init@pt	PTR unsigned char  size(2) Largest target is 4
  6632                           ;!		 -> salva_atuadores_init@condi_init(COMRAM[4]), 
  6633                           ;!
  6634                           ;!    buscar_dado@data	PTR unsigned char  size(2) Largest target is 1
  6635                           ;!		 -> main@init_cond(BANK0[1]), 
  6636                           ;!
  6637                           ;!    buscar_receita@data	PTR unsigned char  size(2) Largest target is 16
  6638                           ;!		 -> main@vetor_aux(BANK0[16]), 
  6639                           ;!
  6640                           ;!    salvar_receita@data	PTR unsigned char  size(2) Largest target is 18
  6641                           ;!		 -> fila(COMRAM[18]), 
  6642                           ;!
  6643                           ;!    S174$formatar	PTR FTN()void  size(2) Largest target is 1
  6644                           ;!		 -> formatar_receitas(), 
  6645                           ;!
  6646                           ;!    EEPROM.formatar	PTR FTN()void  size(2) Largest target is 1
  6647                           ;!		 -> formatar_receitas(), 
  6648                           ;!
  6649                           ;!    S174$livre	PTR FTN(PTR unsigned char ,)void  size(2) Largest target is 1
  6650                           ;!		 -> receita_livre(), 
  6651                           ;!
  6652                           ;!    EEPROM.livre	PTR FTN(PTR unsigned char ,)void  size(2) Largest target is 1
  6653                           ;!		 -> receita_livre(), 
  6654                           ;!
  6655                           ;!    S174$deletar	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
  6656                           ;!		 -> deletar_receita(), 
  6657                           ;!
  6658                           ;!    EEPROM.deletar	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
  6659                           ;!		 -> deletar_receita(), 
  6660                           ;!
  6661                           ;!    S174$buscar	PTR FTN(unsigned char ,PTR unsigned char ,)void  size(2) Largest targe
                                 t is 1
  6662                           ;!		 -> buscar_receita(), 
  6663                           ;!
  6664                           ;!    EEPROM.buscar	PTR FTN(unsigned char ,PTR unsigned char ,)void  size(2) Largest tar
                                 get is 1
  6665                           ;!		 -> buscar_receita(), 
  6666                           ;!
  6667                           ;!    S174$salvar	PTR FTN(unsigned char ,PTR unsigned char ,)void  size(2) Largest targe
                                 t is 1
  6668                           ;!		 -> salvar_receita(), 
  6669                           ;!
  6670                           ;!    EEPROM.salvar	PTR FTN(unsigned char ,PTR unsigned char ,)void  size(2) Largest tar
                                 get is 1
  6671                           ;!		 -> salvar_receita(), 
  6672                           ;!
  6673                           ;!    dispLCD_str@str	PTR const unsigned char  size(2) Largest target is 83
  6674                           ;!		 -> STR_27(CODE[78]), STR_26(CODE[62]), STR_15(CODE[81]), STR_4(CODE[83]), 
  6675                           ;!
  6676                           ;!    dispLCD@str	PTR const unsigned char  size(2) Largest target is 21
  6677                           ;!		 -> STR_32(CODE[21]), STR_31(CODE[21]), STR_30(CODE[21]), STR_29(CODE[2]), 
  6678                           ;!		 -> STR_28(CODE[2]), STR_25(CODE[21]), STR_24(CODE[21]), STR_23(CODE[21]), 
  6679                           ;!		 -> STR_22(CODE[21]), STR_21(CODE[21]), STR_20(CODE[8]), STR_19(CODE[21]), 
  6680                           ;!		 -> STR_18(CODE[21]), STR_17(CODE[21]), STR_16(CODE[21]), STR_14(CODE[21]), 
  6681                           ;!		 -> STR_13(CODE[21]), STR_12(CODE[2]), STR_11(CODE[2]), STR_10(CODE[21]), 
  6682                           ;!		 -> STR_9(CODE[21]), STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), 
  6683                           ;!		 -> STR_5(CODE[21]), STR_3(CODE[21]), STR_2(CODE[2]), STR_1(CODE[2]), 
  6684                           ;!
  6685                           ;!    ler_sensor@ptr	PTR unsigned char  size(2) Largest target is 1
  6686                           ;!		 -> main@vetorIn(BANK0[1]), 
  6687                           ;!
  6688                           ;!    set_passo@ptr	PTR unsigned char  size(2) Largest target is 1
  6689                           ;!		 -> main@vetorOut(BANK0[1]), 
  6690                           ;!
  6691                           
  6692                           
  6693                           ;!
  6694                           ;!Critical Paths under _main in COMRAM
  6695                           ;!
  6696                           ;!    _main->_printExec
  6697                           ;!    _teclado_borda->_teclado_scan
  6698                           ;!    _setT1->___wmul
  6699                           ;!    _serialIOscan->_serialIObyteShift
  6700                           ;!    _salvar_receita->___awmod
  6701                           ;!    _salvar_dado->___awmod
  6702                           ;!    _salva_atuadores_init->_ler_atuador
  6703                           ;!    _printExec->_dispLCD_num
  6704                           ;!    _posAtual->_fifo_lerPos
  6705                           ;!    _dispLCD_num->_dignum_tam
  6706                           ;!    _manipula_atuadores_init->_alt_atuador
  6707                           ;!    _formatar_receitas->_EEPROM_write
  6708                           ;!    _fifo_print->___awdiv
  6709                           ;!    _fifo_delete->_fifo_alinharPrint
  6710                           ;!    _fifo_add_tempo->_fifo_alinharPrint
  6711                           ;!    _fifo_add_control->_fifo_alinharPrint
  6712                           ;!    _fifo_add->_fifo_alinharPrint
  6713                           ;!    _fifo_alinharPrint->_dignum_tam
  6714                           ;!    _dignum_tam->___awdiv
  6715                           ;!    _dispLCD_str->_dispLCD_lincol
  6716                           ;!    _dispLCD_init->_delay
  6717                           ;!    _dispLCD_clr->_dispLCD_instReg
  6718                           ;!    _dispLCD->_dispLCD_lincol
  6719                           ;!    _dispLCD_lincol->_dispLCD_instReg
  6720                           ;!    _dignum_conc->___wmul
  6721                           ;!    _dignum_apagar->___lwdiv
  6722                           ;!    _deletar_receita->_end_receita
  6723                           ;!    _buscar_receita->___awmod
  6724                           ;!    _buscar_dado->___awmod
  6725                           ;!    ___aldiv->___lmul
  6726                           ;!    _MCP4725->___aldiv
  6727                           ;!    _dac_write->_delay
  6728                           ;!    _dac_init->_delay
  6729                           ;!    _I2C_init->___lldiv
  6730                           ;!
  6731                           ;!Critical Paths under _irq in COMRAM
  6732                           ;!
  6733                           ;!    None.
  6734                           ;!
  6735                           ;!Critical Paths under _main in BANK0
  6736                           ;!
  6737                           ;!    None.
  6738                           ;!
  6739                           ;!Critical Paths under _irq in BANK0
  6740                           ;!
  6741                           ;!    None.
  6742                           ;!
  6743                           ;!Critical Paths under _main in BANK1
  6744                           ;!
  6745                           ;!    None.
  6746                           ;!
  6747                           ;!Critical Paths under _irq in BANK1
  6748                           ;!
  6749                           ;!    None.
  6750                           ;!
  6751                           ;!Critical Paths under _main in BANK2
  6752                           ;!
  6753                           ;!    None.
  6754                           ;!
  6755                           ;!Critical Paths under _irq in BANK2
  6756                           ;!
  6757                           ;!    None.
  6758                           ;!
  6759                           ;!Critical Paths under _main in BANK3
  6760                           ;!
  6761                           ;!    None.
  6762                           ;!
  6763                           ;!Critical Paths under _irq in BANK3
  6764                           ;!
  6765                           ;!    None.
  6766                           ;!
  6767                           ;!Critical Paths under _main in BANK4
  6768                           ;!
  6769                           ;!    None.
  6770                           ;!
  6771                           ;!Critical Paths under _irq in BANK4
  6772                           ;!
  6773                           ;!    None.
  6774                           ;!
  6775                           ;!Critical Paths under _main in BANK5
  6776                           ;!
  6777                           ;!    None.
  6778                           ;!
  6779                           ;!Critical Paths under _irq in BANK5
  6780                           ;!
  6781                           ;!    None.
  6782                           ;!
  6783                           ;!Critical Paths under _main in BANK6
  6784                           ;!
  6785                           ;!    None.
  6786                           ;!
  6787                           ;!Critical Paths under _irq in BANK6
  6788                           ;!
  6789                           ;!    None.
  6790                           ;!
  6791                           ;!Critical Paths under _main in BANK7
  6792                           ;!
  6793                           ;!    None.
  6794                           ;!
  6795                           ;!Critical Paths under _irq in BANK7
  6796                           ;!
  6797                           ;!    None.
  6798                           
  6799 ;;
  6800 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  6801 ;;
  6802                           
  6803                           ;!
  6804                           ;!Call Graph Tables:
  6805                           ;!
  6806                           ;! ---------------------------------------------------------------------------------
  6807                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  6808                           ;! ---------------------------------------------------------------------------------
  6809                           ;! (0) _main                                                98    98      0   76413
  6810                           ;!                                             30 COMRAM     2     2      0
  6811                           ;!                                              0 BANK0     95    95      0
  6812                           ;!                           _I2C_init
  6813                           ;!                            _MCP4725
  6814                           ;!                            ___aldiv
  6815                           ;!                            ___awmod
  6816                           ;!                             ___lmul
  6817                           ;!                             ___wmul
  6818                           ;!                      _addContCiclos
  6819                           ;!                    _addIndicePassos
  6820                           ;!                        _alt_atuador
  6821                           ;!                        _buscar_dado
  6822                           ;!                     _buscar_receita *
  6823                           ;!                         _decodifica
  6824                           ;!                              _delay
  6825                           ;!                    _deletar_receita *
  6826                           ;!                      _dignum_apagar
  6827                           ;!                        _dignum_conc
  6828                           ;!                            _dispLCD *
  6829                           ;!                        _dispLCD_clr *
  6830                           ;!                    _dispLCD_dataReg
  6831                           ;!                       _dispLCD_init
  6832                           ;!                     _dispLCD_lincol
  6833                           ;!                        _dispLCD_num *
  6834                           ;!                        _dispLCD_str *
  6835                           ;!                           _fifo_add
  6836                           ;!                     _fifo_add_ciclo
  6837                           ;!                   _fifo_add_control
  6838                           ;!                     _fifo_add_tempo
  6839                           ;!                          _fifo_adrs
  6840                           ;!                        _fifo_delete
  6841                           ;!                    _fifo_disponivel
  6842                           ;!                        _fifo_indice
  6843                           ;!               _fifo_indicePrint_dec
  6844                           ;!               _fifo_indicePrint_inc
  6845                           ;!                        _fifo_lerPos
  6846                           ;!                         _fifo_print
  6847                           ;!                           _fifo_tam
  6848                           ;!                  _formatar_receitas *
  6849                           ;!                          _getCiclos
  6850                           ;!                      _getContCiclos
  6851                           ;!                    _getIndicePassos
  6852                           ;!                       _initSerialIO
  6853                           ;!                     _init_atuadores
  6854                           ;!                        _ler_atuador
  6855                           ;!                         _ler_sensor
  6856                           ;!            _manipula_atuadores_init
  6857                           ;!                          _printExec
  6858                           ;!                    _resetContCiclos
  6859                           ;!                  _resetIndicePassos
  6860                           ;!               _salva_atuadores_init
  6861                           ;!                        _salvar_dado
  6862                           ;!                     _salvar_receita *
  6863                           ;!                       _serialIOscan
  6864                           ;!                              _setT1
  6865                           ;!                          _set_passo
  6866                           ;!                           _statusT1
  6867                           ;!                      _teclado_borda
  6868                           ;!                       _teclado_init
  6869                           ;!                        _timer1_init
  6870                           ;! ---------------------------------------------------------------------------------
  6871                           ;! (1) _timer1_init                                          0     0      0       0
  6872                           ;! ---------------------------------------------------------------------------------
  6873                           ;! (1) _teclado_init                                         0     0      0       0
  6874                           ;! ---------------------------------------------------------------------------------
  6875                           ;! (1) _teclado_borda                                        2     2      0     296
  6876                           ;!                                              5 COMRAM     2     2      0
  6877                           ;!                       _teclado_scan
  6878                           ;! ---------------------------------------------------------------------------------
  6879                           ;! (2) _teclado_scan                                         5     5      0     204
  6880                           ;!                                              0 COMRAM     5     5      0
  6881                           ;! ---------------------------------------------------------------------------------
  6882                           ;! (1) _statusT1                                             4     0      4       0
  6883                           ;!                                              0 COMRAM     4     0      4
  6884                           ;! ---------------------------------------------------------------------------------
  6885                           ;! (1) _set_passo                                            5     3      2     274
  6886                           ;!                                              0 COMRAM     5     3      2
  6887                           ;! ---------------------------------------------------------------------------------
  6888                           ;! (1) _setT1                                                4     0      4     478
  6889                           ;!                                              6 COMRAM     4     0      4
  6890                           ;!                             ___wmul (ARG)
  6891                           ;! ---------------------------------------------------------------------------------
  6892                           ;! (1) _serialIOscan                                         6     6      0     205
  6893                           ;!                                              3 COMRAM     6     6      0
  6894                           ;!                  _serialIObyteShift
  6895                           ;!                       _serialIOload
  6896                           ;! ---------------------------------------------------------------------------------
  6897                           ;! (2) _serialIOload                                         0     0      0       0
  6898                           ;! ---------------------------------------------------------------------------------
  6899                           ;! (2) _serialIObyteShift                                    3     3      0     114
  6900                           ;!                                              0 COMRAM     3     3      0
  6901                           ;! ---------------------------------------------------------------------------------
  6902                           ;! (1) _salvar_receita                                       6     4      2    1089
  6903                           ;!                                              6 COMRAM     6     4      2
  6904                           ;!                       _EEPROM_write
  6905                           ;!                            ___awmod (ARG)
  6906                           ;!                        _end_receita
  6907                           ;!                          _fifo_adrs (ARG)
  6908                           ;! ---------------------------------------------------------------------------------
  6909                           ;! (1) _salvar_dado                                          5     3      2    1219
  6910                           ;!                                              6 COMRAM     5     3      2
  6911                           ;!                       _EEPROM_write
  6912                           ;!                            ___awmod (ARG)
  6913                           ;!                        _end_receita
  6914                           ;! ---------------------------------------------------------------------------------
  6915                           ;! (1) _salva_atuadores_init                                 8     8      0     235
  6916                           ;!                                              3 COMRAM     8     8      0
  6917                           ;!                        _ler_atuador
  6918                           ;! ---------------------------------------------------------------------------------
  6919                           ;! (2) _ler_atuador                                          3     3      0      22
  6920                           ;!                                              0 COMRAM     3     3      0
  6921                           ;! ---------------------------------------------------------------------------------
  6922                           ;! (1) _resetIndicePassos                                    0     0      0       0
  6923                           ;! ---------------------------------------------------------------------------------
  6924                           ;! (1) _resetContCiclos                                      0     0      0       0
  6925                           ;! ---------------------------------------------------------------------------------
  6926                           ;! (1) _printExec                                            5     4      1   12960
  6927                           ;!                                             25 COMRAM     5     4      1
  6928                           ;!                         _decodifica
  6929                           ;!                         _dignum_tam
  6930                           ;!                    _dispLCD_dataReg
  6931                           ;!                     _dispLCD_lincol
  6932                           ;!                        _dispLCD_num
  6933                           ;!                           _posAtual
  6934                           ;! ---------------------------------------------------------------------------------
  6935                           ;! (2) _posAtual                                             2     2      0      68
  6936                           ;!                                              1 COMRAM     2     2      0
  6937                           ;!                        _fifo_lerPos
  6938                           ;!                    _getIndicePassos
  6939                           ;! ---------------------------------------------------------------------------------
  6940                           ;! (3) _getIndicePassos                                      0     0      0       0
  6941                           ;! ---------------------------------------------------------------------------------
  6942                           ;! (3) _fifo_lerPos                                          1     1      0      22
  6943                           ;!                                              0 COMRAM     1     1      0
  6944                           ;! ---------------------------------------------------------------------------------
  6945                           ;! (2) _dispLCD_num                                         14    10      4    7167
  6946                           ;!                                             11 COMRAM    14    10      4
  6947                           ;!                            ___awdiv
  6948                           ;!                            ___awmod
  6949                           ;!                         _dignum_tam (ARG)
  6950                           ;!                    _dispLCD_dataReg
  6951                           ;!                     _dispLCD_lincol
  6952                           ;!                        _fifo_indice (ARG)
  6953                           ;!                           _fifo_tam (ARG)
  6954                           ;!                      _getContCiclos (ARG)
  6955                           ;!                    _getIndicePassos (ARG)
  6956                           ;! ---------------------------------------------------------------------------------
  6957                           ;! (1) _manipula_atuadores_init                              3     3      0     136
  6958                           ;!                                              3 COMRAM     3     3      0
  6959                           ;!                        _alt_atuador
  6960                           ;! ---------------------------------------------------------------------------------
  6961                           ;! (1) _ler_sensor                                           5     3      2     274
  6962                           ;!                                              0 COMRAM     5     3      2
  6963                           ;! ---------------------------------------------------------------------------------
  6964                           ;! (1) _init_atuadores                                       0     0      0       0
  6965                           ;! ---------------------------------------------------------------------------------
  6966                           ;! (1) _initSerialIO                                         5     0      5     294
  6967                           ;!                                              0 COMRAM     5     0      5
  6968                           ;! ---------------------------------------------------------------------------------
  6969                           ;! (1) _getContCiclos                                        2     0      2       0
  6970                           ;!                                              0 COMRAM     2     0      2
  6971                           ;! ---------------------------------------------------------------------------------
  6972                           ;! (1) _getCiclos                                            4     2      2      25
  6973                           ;!                                              0 COMRAM     4     2      2
  6974                           ;! ---------------------------------------------------------------------------------
  6975                           ;! (1) _formatar_receitas                                    1     1      0     372
  6976                           ;!                                              2 COMRAM     1     1      0
  6977                           ;!                       _EEPROM_write
  6978                           ;! ---------------------------------------------------------------------------------
  6979                           ;! (1) _fifo_tam                                             0     0      0       0
  6980                           ;! ---------------------------------------------------------------------------------
  6981                           ;! (1) _fifo_print                                           9     9      0    7013
  6982                           ;!                                              8 COMRAM     9     9      0
  6983                           ;!                            ___awdiv
  6984                           ;!                            ___awmod
  6985                           ;!                         _decodifica
  6986                           ;!                    _dispLCD_dataReg
  6987                           ;!                     _dispLCD_lincol
  6988                           ;! ---------------------------------------------------------------------------------
  6989                           ;! (3) ___awmod                                              6     2      4    1968
  6990                           ;!                                              0 COMRAM     6     2      4
  6991                           ;! ---------------------------------------------------------------------------------
  6992                           ;! (1) _fifo_indicePrint_inc                                 7     7      0       0
  6993                           ;!                                              0 COMRAM     7     7      0
  6994                           ;! ---------------------------------------------------------------------------------
  6995                           ;! (1) _fifo_indicePrint_dec                                 0     0      0       0
  6996                           ;! ---------------------------------------------------------------------------------
  6997                           ;! (1) _fifo_indice                                          0     0      0       0
  6998                           ;! ---------------------------------------------------------------------------------
  6999                           ;! (1) _fifo_disponivel                                      0     0      0       0
  7000                           ;! ---------------------------------------------------------------------------------
  7001                           ;! (1) _fifo_delete                                          2     2      0    4395
  7002                           ;!                                             15 COMRAM     2     2      0
  7003                           ;!                        _alt_atuador
  7004                           ;!                           _codifica
  7005                           ;!                         _decodifica
  7006                           ;!                  _fifo_alinharPrint
  7007                           ;! ---------------------------------------------------------------------------------
  7008                           ;! (2) _decodifica                                           4     2      2    1426
  7009                           ;!                                              0 COMRAM     4     2      2
  7010                           ;! ---------------------------------------------------------------------------------
  7011                           ;! (2) _alt_atuador                                          3     3      0      22
  7012                           ;!                                              0 COMRAM     3     3      0
  7013                           ;! ---------------------------------------------------------------------------------
  7014                           ;! (1) _fifo_adrs                                            2     0      2       0
  7015                           ;!                                              0 COMRAM     2     0      2
  7016                           ;! ---------------------------------------------------------------------------------
  7017                           ;! (1) _fifo_add_tempo                                       1     1      0    3035
  7018                           ;!                                             15 COMRAM     1     1      0
  7019                           ;!                           _codifica
  7020                           ;!                  _fifo_alinharPrint
  7021                           ;! ---------------------------------------------------------------------------------
  7022                           ;! (1) _fifo_add_control                                     1     1      0    3013
  7023                           ;!                                             15 COMRAM     1     1      0
  7024                           ;!                           _codifica
  7025                           ;!                  _fifo_alinharPrint
  7026                           ;! ---------------------------------------------------------------------------------
  7027                           ;! (1) _fifo_add_ciclo                                       2     0      2     120
  7028                           ;!                                              0 COMRAM     2     0      2
  7029                           ;! ---------------------------------------------------------------------------------
  7030                           ;! (1) _fifo_add                                             1     1      0    3035
  7031                           ;!                                             15 COMRAM     1     1      0
  7032                           ;!                           _codifica
  7033                           ;!                  _fifo_alinharPrint
  7034                           ;! ---------------------------------------------------------------------------------
  7035                           ;! (2) _fifo_alinharPrint                                    4     4      0    2357
  7036                           ;!                                             11 COMRAM     4     4      0
  7037                           ;!                         _dignum_tam
  7038                           ;! ---------------------------------------------------------------------------------
  7039                           ;! (2) _dignum_tam                                           3     1      2    2041
  7040                           ;!                                              8 COMRAM     3     1      2
  7041                           ;!                            ___awdiv
  7042                           ;! ---------------------------------------------------------------------------------
  7043                           ;! (3) ___awdiv                                              8     4      4    1364
  7044                           ;!                                              0 COMRAM     8     4      4
  7045                           ;! ---------------------------------------------------------------------------------
  7046                           ;! (2) _codifica                                             5     3      2     590
  7047                           ;!                                              0 COMRAM     5     3      2
  7048                           ;! ---------------------------------------------------------------------------------
  7049                           ;! (1) _dispLCD_str                                          4     2      2    1733
  7050                           ;!                                              7 COMRAM     4     2      2
  7051                           ;!                    _dispLCD_dataReg
  7052                           ;!                     _dispLCD_lincol
  7053                           ;! ---------------------------------------------------------------------------------
  7054                           ;! (1) _dispLCD_init                                         0     0      0    1871
  7055                           ;!                              _delay
  7056                           ;!                    _dispLCD_instReg
  7057                           ;! ---------------------------------------------------------------------------------
  7058                           ;! (1) _dispLCD_clr                                          0     0      0     176
  7059                           ;!                    _dispLCD_instReg
  7060                           ;! ---------------------------------------------------------------------------------
  7061                           ;! (1) _dispLCD                                              5     2      3    4971
  7062                           ;!                                              7 COMRAM     5     2      3
  7063                           ;!                    _dispLCD_dataReg
  7064                           ;!                     _dispLCD_lincol
  7065                           ;! ---------------------------------------------------------------------------------
  7066                           ;! (3) _dispLCD_lincol                                       5     4      1    1386
  7067                           ;!                                              2 COMRAM     5     4      1
  7068                           ;!                    _dispLCD_instReg
  7069                           ;! ---------------------------------------------------------------------------------
  7070                           ;! (4) _dispLCD_instReg                                      2     2      0     176
  7071                           ;!                                              0 COMRAM     2     2      0
  7072                           ;! ---------------------------------------------------------------------------------
  7073                           ;! (3) _dispLCD_dataReg                                      2     2      0      44
  7074                           ;!                                              0 COMRAM     2     2      0
  7075                           ;! ---------------------------------------------------------------------------------
  7076                           ;! (1) _dignum_conc                                          7     5      2     757
  7077                           ;!                                              6 COMRAM     7     5      2
  7078                           ;!                             ___wmul
  7079                           ;! ---------------------------------------------------------------------------------
  7080                           ;! (2) ___wmul                                               6     2      4     463
  7081                           ;!                                              0 COMRAM     6     2      4
  7082                           ;! ---------------------------------------------------------------------------------
  7083                           ;! (1) _dignum_apagar                                        2     0      2     540
  7084                           ;!                                              7 COMRAM     2     0      2
  7085                           ;!                            ___lwdiv
  7086                           ;! ---------------------------------------------------------------------------------
  7087                           ;! (2) ___lwdiv                                              7     3      4     268
  7088                           ;!                                              0 COMRAM     7     3      4
  7089                           ;! ---------------------------------------------------------------------------------
  7090                           ;! (1) _deletar_receita                                      4     4      0     939
  7091                           ;!                                              4 COMRAM     4     4      0
  7092                           ;!                       _EEPROM_write
  7093                           ;!                        _end_receita
  7094                           ;! ---------------------------------------------------------------------------------
  7095                           ;! (2) _EEPROM_write                                         2     1      1     348
  7096                           ;!                                              0 COMRAM     2     1      1
  7097                           ;! ---------------------------------------------------------------------------------
  7098                           ;! (1) _buscar_receita                                       6     4      2     763
  7099                           ;!                                              6 COMRAM     6     4      2
  7100                           ;!                        _EEPROM_read
  7101                           ;!                            ___awmod (ARG)
  7102                           ;!                        _end_receita
  7103                           ;! ---------------------------------------------------------------------------------
  7104                           ;! (1) _buscar_dado                                          6     3      3     893
  7105                           ;!                                              6 COMRAM     6     3      3
  7106                           ;!                        _EEPROM_read
  7107                           ;!                            ___awmod (ARG)
  7108                           ;!                        _end_receita
  7109                           ;! ---------------------------------------------------------------------------------
  7110                           ;! (2) _end_receita                                          4     2      2     478
  7111                           ;!                                              0 COMRAM     4     2      2
  7112                           ;! ---------------------------------------------------------------------------------
  7113                           ;! (2) _EEPROM_read                                          1     1      0      22
  7114                           ;!                                              0 COMRAM     1     1      0
  7115                           ;! ---------------------------------------------------------------------------------
  7116                           ;! (1) _addIndicePassos                                      0     0      0       0
  7117                           ;! ---------------------------------------------------------------------------------
  7118                           ;! (1) _addContCiclos                                        0     0      0       0
  7119                           ;! ---------------------------------------------------------------------------------
  7120                           ;! (1) ___lmul                                              12     4      8     370
  7121                           ;!                                              0 COMRAM    12     4      8
  7122                           ;! ---------------------------------------------------------------------------------
  7123                           ;! (1) ___aldiv                                             14     6      8     452
  7124                           ;!                                             12 COMRAM    14     6      8
  7125                           ;!                             ___lmul (ARG)
  7126                           ;! ---------------------------------------------------------------------------------
  7127                           ;! (1) _MCP4725                                              2     0      2    5575
  7128                           ;!                                             26 COMRAM     2     0      2
  7129                           ;!                           _I2C_stop
  7130                           ;!                            ___aldiv (ARG)
  7131                           ;!                             ___lmul (ARG)
  7132                           ;!                           _dac_init
  7133                           ;!                          _dac_write
  7134                           ;!                              _delay
  7135                           ;! ---------------------------------------------------------------------------------
  7136                           ;! (2) _dac_write                                            5     3      2    1989
  7137                           ;!                                              3 COMRAM     5     3      2
  7138                           ;!                    _I2C_ack_receive
  7139                           ;!                             _I2C_tx
  7140                           ;!                              _delay
  7141                           ;! ---------------------------------------------------------------------------------
  7142                           ;! (2) _dac_init                                             0     0      0    1717
  7143                           ;!                    _I2C_ack_receive
  7144                           ;!                          _I2C_start
  7145                           ;!                             _I2C_tx
  7146                           ;!                              _delay
  7147                           ;! ---------------------------------------------------------------------------------
  7148                           ;! (2) _delay                                                3     1      2    1695
  7149                           ;!                                              0 COMRAM     3     1      2
  7150                           ;! ---------------------------------------------------------------------------------
  7151                           ;! (3) _I2C_tx                                               1     1      0      22
  7152                           ;!                                              0 COMRAM     1     1      0
  7153                           ;! ---------------------------------------------------------------------------------
  7154                           ;! (3) _I2C_start                                            0     0      0       0
  7155                           ;! ---------------------------------------------------------------------------------
  7156                           ;! (3) _I2C_ack_receive                                      0     0      0       0
  7157                           ;! ---------------------------------------------------------------------------------
  7158                           ;! (2) _I2C_stop                                             0     0      0       0
  7159                           ;! ---------------------------------------------------------------------------------
  7160                           ;! (1) _I2C_init                                             4     0      4     564
  7161                           ;!                                             13 COMRAM     4     0      4
  7162                           ;!                            ___lldiv
  7163                           ;! ---------------------------------------------------------------------------------
  7164                           ;! (2) ___lldiv                                             13     5      8     466
  7165                           ;!                                              0 COMRAM    13     5      8
  7166                           ;! ---------------------------------------------------------------------------------
  7167                           ;! Estimated maximum stack depth 4
  7168                           ;! ---------------------------------------------------------------------------------
  7169                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  7170                           ;! ---------------------------------------------------------------------------------
  7171                           ;! (5) _irq                                                  0     0      0       0
  7172                           ;!                          _intt1_1ms
  7173                           ;! ---------------------------------------------------------------------------------
  7174                           ;! (6) _intt1_1ms                                            0     0      0       0
  7175                           ;! ---------------------------------------------------------------------------------
  7176                           ;! Estimated maximum stack depth 6
  7177                           ;! ---------------------------------------------------------------------------------
  7178                           ;!
  7179                           ;! Call Graph Graphs:
  7180                           ;!
  7181                           ;! _main (ROOT)
  7182                           ;!   _I2C_init
  7183                           ;!     ___lldiv
  7184                           ;!   _MCP4725
  7185                           ;!     _I2C_stop
  7186                           ;!     ___aldiv (ARG)
  7187                           ;!       ___lmul (ARG)
  7188                           ;!     ___lmul (ARG)
  7189                           ;!     _dac_init (ARG)
  7190                           ;!       _I2C_ack_receive
  7191                           ;!       _I2C_start
  7192                           ;!       _I2C_tx
  7193                           ;!       _delay
  7194                           ;!     _dac_write (ARG)
  7195                           ;!       _I2C_ack_receive
  7196                           ;!       _I2C_tx
  7197                           ;!       _delay
  7198                           ;!     _delay (ARG)
  7199                           ;!   ___aldiv
  7200                           ;!     ___lmul (ARG)
  7201                           ;!   ___awmod
  7202                           ;!   ___lmul
  7203                           ;!   ___wmul
  7204                           ;!   _addContCiclos
  7205                           ;!   _addIndicePassos
  7206                           ;!   _alt_atuador
  7207                           ;!   _buscar_dado
  7208                           ;!     _EEPROM_read
  7209                           ;!     ___awmod (ARG)
  7210                           ;!     _end_receita (ARG)
  7211                           ;!   _buscar_receita *
  7212                           ;!     _EEPROM_read
  7213                           ;!     ___awmod (ARG)
  7214                           ;!     _end_receita (ARG)
  7215                           ;!   _decodifica *
  7216                           ;!   _delay *
  7217                           ;!   _deletar_receita *
  7218                           ;!     _EEPROM_write
  7219                           ;!     _end_receita
  7220                           ;!   _dignum_apagar *
  7221                           ;!     ___lwdiv
  7222                           ;!   _dignum_conc *
  7223                           ;!     ___wmul
  7224                           ;!   _dispLCD *
  7225                           ;!     _dispLCD_dataReg
  7226                           ;!     _dispLCD_lincol
  7227                           ;!       _dispLCD_instReg
  7228                           ;!   _dispLCD_clr *
  7229                           ;!     _dispLCD_instReg
  7230                           ;!   _dispLCD_dataReg *
  7231                           ;!   _dispLCD_init *
  7232                           ;!     _delay
  7233                           ;!     _dispLCD_instReg
  7234                           ;!   _dispLCD_lincol *
  7235                           ;!     _dispLCD_instReg
  7236                           ;!   _dispLCD_num *
  7237                           ;!     ___awdiv
  7238                           ;!     ___awmod
  7239                           ;!     _dignum_tam (ARG)
  7240                           ;!       ___awdiv
  7241                           ;!     _dispLCD_dataReg (ARG)
  7242                           ;!     _dispLCD_lincol (ARG)
  7243                           ;!       _dispLCD_instReg
  7244                           ;!     _fifo_indice (ARG)
  7245                           ;!     _fifo_tam (ARG)
  7246                           ;!     _getContCiclos (ARG)
  7247                           ;!     _getIndicePassos (ARG)
  7248                           ;!   _dispLCD_str *
  7249                           ;!     _dispLCD_dataReg
  7250                           ;!     _dispLCD_lincol
  7251                           ;!       _dispLCD_instReg
  7252                           ;!   _fifo_add *
  7253                           ;!     _codifica
  7254                           ;!     _fifo_alinharPrint
  7255                           ;!       _dignum_tam
  7256                           ;!         ___awdiv
  7257                           ;!   _fifo_add_ciclo *
  7258                           ;!   _fifo_add_control *
  7259                           ;!     _codifica
  7260                           ;!     _fifo_alinharPrint
  7261                           ;!       _dignum_tam
  7262                           ;!         ___awdiv
  7263                           ;!   _fifo_add_tempo *
  7264                           ;!     _codifica
  7265                           ;!     _fifo_alinharPrint
  7266                           ;!       _dignum_tam
  7267                           ;!         ___awdiv
  7268                           ;!   _fifo_adrs *
  7269                           ;!   _fifo_delete *
  7270                           ;!     _alt_atuador
  7271                           ;!     _codifica
  7272                           ;!     _decodifica
  7273                           ;!     _fifo_alinharPrint
  7274                           ;!       _dignum_tam
  7275                           ;!         ___awdiv
  7276                           ;!   _fifo_disponivel *
  7277                           ;!   _fifo_indice *
  7278                           ;!   _fifo_indicePrint_dec *
  7279                           ;!   _fifo_indicePrint_inc *
  7280                           ;!   _fifo_lerPos *
  7281                           ;!   _fifo_print *
  7282                           ;!     ___awdiv
  7283                           ;!     ___awmod
  7284                           ;!     _decodifica
  7285                           ;!     _dispLCD_dataReg
  7286                           ;!     _dispLCD_lincol
  7287                           ;!       _dispLCD_instReg
  7288                           ;!   _fifo_tam *
  7289                           ;!   _formatar_receitas *
  7290                           ;!     _EEPROM_write
  7291                           ;!   _getCiclos *
  7292                           ;!   _getContCiclos *
  7293                           ;!   _getIndicePassos *
  7294                           ;!   _initSerialIO *
  7295                           ;!   _init_atuadores *
  7296                           ;!   _ler_atuador *
  7297                           ;!   _ler_sensor *
  7298                           ;!   _manipula_atuadores_init *
  7299                           ;!     _alt_atuador
  7300                           ;!   _printExec *
  7301                           ;!     _decodifica
  7302                           ;!     _dignum_tam
  7303                           ;!       ___awdiv
  7304                           ;!     _dispLCD_dataReg
  7305                           ;!     _dispLCD_lincol
  7306                           ;!       _dispLCD_instReg
  7307                           ;!     _dispLCD_num
  7308                           ;!       ___awdiv
  7309                           ;!       ___awmod
  7310                           ;!       _dignum_tam (ARG)
  7311                           ;!         ___awdiv
  7312                           ;!       _dispLCD_dataReg (ARG)
  7313                           ;!       _dispLCD_lincol (ARG)
  7314                           ;!         _dispLCD_instReg
  7315                           ;!       _fifo_indice (ARG)
  7316                           ;!       _fifo_tam (ARG)
  7317                           ;!       _getContCiclos (ARG)
  7318                           ;!       _getIndicePassos (ARG)
  7319                           ;!     _posAtual
  7320                           ;!       _fifo_lerPos
  7321                           ;!       _getIndicePassos
  7322                           ;!   _resetContCiclos *
  7323                           ;!   _resetIndicePassos *
  7324                           ;!   _salva_atuadores_init *
  7325                           ;!     _ler_atuador
  7326                           ;!   _salvar_dado *
  7327                           ;!     _EEPROM_write
  7328                           ;!     ___awmod (ARG)
  7329                           ;!     _end_receita (ARG)
  7330                           ;!   _salvar_receita *
  7331                           ;!     _EEPROM_write
  7332                           ;!     ___awmod (ARG)
  7333                           ;!     _end_receita (ARG)
  7334                           ;!     _fifo_adrs (ARG)
  7335                           ;!   _serialIOscan *
  7336                           ;!     _serialIObyteShift
  7337                           ;!     _serialIOload
  7338                           ;!   _setT1 *
  7339                           ;!     ___wmul (ARG)
  7340                           ;!   _set_passo *
  7341                           ;!   _statusT1 *
  7342                           ;!   _teclado_borda *
  7343                           ;!     _teclado_scan
  7344                           ;!   _teclado_init *
  7345                           ;!   _timer1_init *
  7346                           ;!
  7347                           ;! _irq (ROOT)
  7348                           ;!   _intt1_1ms
  7349                           ;!
  7350                           
  7351                           ;! Address spaces:
  7352                           
  7353                           ;!Name               Size   Autos  Total    Cost      Usage
  7354                           ;!BIGRAM             7FF      0       0      21        0.0%
  7355                           ;!EEDATA             100      0       0       0        0.0%
  7356                           ;!BITBANK7           100      0       0      18        0.0%
  7357                           ;!BANK7              100      0       0      19        0.0%
  7358                           ;!BITBANK6           100      0       0      16        0.0%
  7359                           ;!BANK6              100      0       0      17        0.0%
  7360                           ;!BITBANK5           100      0       0      14        0.0%
  7361                           ;!BANK5              100      0       0      15        0.0%
  7362                           ;!BITBANK4           100      0       0      12        0.0%
  7363                           ;!BANK4              100      0       0      13        0.0%
  7364                           ;!BITBANK3           100      0       0      10        0.0%
  7365                           ;!BANK3              100      0       0      11        0.0%
  7366                           ;!BITBANK2           100      0       0       8        0.0%
  7367                           ;!BANK2              100      0       0       9        0.0%
  7368                           ;!BITBANK1           100      0       0       6        0.0%
  7369                           ;!BANK1              100      0      6E       7       43.0%
  7370                           ;!BITBANK0            A0      0       0       4        0.0%
  7371                           ;!BANK0               A0     5F      8F       5       89.4%
  7372                           ;!BITCOMRAM           5E      0       0       0        0.0%
  7373                           ;!COMRAM              5E     20      59       1       94.7%
  7374                           ;!BITSFR               0      0       0     200        0.0%
  7375                           ;!SFR                  0      0       0     200        0.0%
  7376                           ;!STACK                0      0       0       2        0.0%
  7377                           ;!NULL                 0      0       0       0        0.0%
  7378                           ;!ABS                  0      0     156      20        0.0%
  7379                           ;!DATA                 0      0     156       3        0.0%
  7380                           ;!CODE                 0      0       0       0        0.0%
  7381                           
  7382                           	global	_main
  7383                           
  7384 ;; *************** function _main *****************
  7385 ;; Defined at:
  7386 ;;		line 71 in file "main.c"
  7387 ;; Parameters:    Size  Location     Type
  7388 ;;		None
  7389 ;; Auto vars:     Size  Location     Type
  7390 ;;  j               1   76[BANK0 ] unsigned char 
  7391 ;;  j               1   74[BANK0 ] unsigned char 
  7392 ;;  j               1   72[BANK0 ] unsigned char 
  7393 ;;  j               1   70[BANK0 ] unsigned char 
  7394 ;;  j               1   68[BANK0 ] unsigned char 
  7395 ;;  j               1   66[BANK0 ] unsigned char 
  7396 ;;  ptr             2   90[BANK0 ] PTR unsigned char 
  7397 ;;		 -> main@vetor_aux(16), 
  7398 ;;  i               1   75[BANK0 ] unsigned char 
  7399 ;;  i               1   73[BANK0 ] unsigned char 
  7400 ;;  i               1   71[BANK0 ] unsigned char 
  7401 ;;  i               1   69[BANK0 ] unsigned char 
  7402 ;;  ptr             2   88[BANK0 ] PTR unsigned char 
  7403 ;;		 -> main@vetor_aux(16), 
  7404 ;;  i               1   67[BANK0 ] unsigned char 
  7405 ;;  i               1   65[BANK0 ] unsigned char 
  7406 ;;  lema           20    0[BANK0 ] unsigned char [20]
  7407 ;;  ptr             2   63[BANK0 ] PTR unsigned char 
  7408 ;;		 -> main@lema(20), 
  7409 ;;  i               1   60[BANK0 ] unsigned char 
  7410 ;;  vetor_aux      16   22[BANK0 ] unsigned char [16]
  7411 ;;  ciclos          2   84[BANK0 ] unsigned int 
  7412 ;;  por             2   82[BANK0 ] unsigned int 
  7413 ;;  num             2   80[BANK0 ] unsigned int 
  7414 ;;  pt              2   61[BANK0 ] PTR unsigned char 
  7415 ;;		 -> main@vetor_aux(16), 
  7416 ;;  tecla           1   94[BANK0 ] unsigned char 
  7417 ;;  estado          1   93[BANK0 ] unsigned char 
  7418 ;;  auxPasso        1   92[BANK0 ] unsigned char 
  7419 ;;  botao           1   87[BANK0 ] unsigned char 
  7420 ;;  init_cond       1   86[BANK0 ] unsigned char 
  7421 ;;  meAtuadores     1   79[BANK0 ] unsigned char 
  7422 ;;  vetorOut        1   78[BANK0 ] unsigned char [1]
  7423 ;;  vetorIn         1   77[BANK0 ] unsigned char [1]
  7424 ;;  aux             1   21[BANK0 ] unsigned char 
  7425 ;;  contPassos      1   20[BANK0 ] unsigned char 
  7426 ;;  atuador         1    0        unsigned char 
  7427 ;; Return value:  Size  Location     Type
  7428 ;;                  1    wreg      void 
  7429 ;; Registers used:
  7430 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack

  7431 ;; Tracked objects:
  7432 ;;		On entry : 0/0
  7433 ;;		On exit  : 0/0
  7434 ;;		Unchanged: 0/0
  7435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7436 ;;      Params:         0       0       0       0       0       0       0       0       0
  7437 ;;      Locals:         0      95       0       0       0       0       0       0       0
  7438 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7439 ;;      Totals:         2      95       0       0       0       0       0       0       0
  7440 ;;Total ram usage:       97 bytes
  7441 ;; Hardware stack levels required when called:    6
  7442 ;; This function calls:
  7443 ;;		_I2C_init
  7444 ;;		_MCP4725
  7445 ;;		___aldiv
  7446 ;;		___awmod
  7447 ;;		___lmul
  7448 ;;		___wmul
  7449 ;;		_addContCiclos
  7450 ;;		_addIndicePassos
  7451 ;;		_alt_atuador
  7452 ;;		_buscar_dado
  7453 ;;		_buscar_receita
  7454 ;;		_decodifica
  7455 ;;		_delay
  7456 ;;		_deletar_receita
  7457 ;;		_dignum_apagar
  7458 ;;		_dignum_conc
  7459 ;;		_dispLCD
  7460 ;;		_dispLCD_clr
  7461 ;;		_dispLCD_dataReg
  7462 ;;		_dispLCD_init
  7463 ;;		_dispLCD_lincol
  7464 ;;		_dispLCD_num
  7465 ;;		_dispLCD_str
  7466 ;;		_fifo_add
  7467 ;;		_fifo_add_ciclo
  7468 ;;		_fifo_add_control
  7469 ;;		_fifo_add_tempo
  7470 ;;		_fifo_adrs
  7471 ;;		_fifo_delete
  7472 ;;		_fifo_disponivel
  7473 ;;		_fifo_indice
  7474 ;;		_fifo_indicePrint_dec
  7475 ;;		_fifo_indicePrint_inc
  7476 ;;		_fifo_lerPos
  7477 ;;		_fifo_print
  7478 ;;		_fifo_tam
  7479 ;;		_formatar_receitas
  7480 ;;		_getCiclos
  7481 ;;		_getContCiclos
  7482 ;;		_getIndicePassos
  7483 ;;		_initSerialIO
  7484 ;;		_init_atuadores
  7485 ;;		_ler_atuador
  7486 ;;		_ler_sensor
  7487 ;;		_manipula_atuadores_init
  7488 ;;		_printExec
  7489 ;;		_resetContCiclos
  7490 ;;		_resetIndicePassos
  7491 ;;		_salva_atuadores_init
  7492 ;;		_salvar_dado
  7493 ;;		_salvar_receita
  7494 ;;		_serialIOscan
  7495 ;;		_setT1
  7496 ;;		_set_passo
  7497 ;;		_statusT1
  7498 ;;		_teclado_borda
  7499 ;;		_teclado_init
  7500 ;;		_timer1_init
  7501 ;; This function is called by:
  7502 ;;		Startup code after reset
  7503 ;; This function uses a non-reentrant model
  7504 ;;
  7505                           psect	text0,class=CODE,space=0,reloc=2,group=0
  7506                           	file	"main.c"
  7507                           	line	71
  7508                           global __ptext0
  7509                           __ptext0:
  7510  000012                     psect	text0
  7511                           	file	"main.c"
  7512                           	line	71
  7513                           	global	__size_of_main
  7514                           	__size_of_main	equ	__end_of_main-_main
  7515  0000                     	
  7516                           _main:
  7517  000012                     ;incstack = 0
  7518                           	opt	stack 25
  7519                           	line	73
  7520                           	
  7521                           l6287:
  7522  000012                     ;main.c: 73:     dispLCD_init();
  7523                           	call	_dispLCD_init	;wreg free
  7524  000012  EC88  F01F         	line	74
  7525                           	
  7526                           l6289:
  7527  000016                     ;main.c: 74:     teclado_init();
  7528                           	call	_teclado_init	;wreg free
  7529  000016  EC75  F021         	line	75
  7530                           	
  7531                           l6291:
  7532  00001A                     ;main.c: 75:     timer1_init();
  7533                           	call	_timer1_init	;wreg free
  7534  00001A  ECD6  F020         	line	76
  7535                           ;main.c: 76:     I2C_init(20000000);
  7536                           	movlw	low(01312D00h)
  7537  00001E  0E00               	movwf	((c:I2C_init@freq)),c
  7538  000020  6E34               	movlw	high(01312D00h)
  7539  000022  0E2D               	movwf	((c:I2C_init@freq+1)),c
  7540  000024  6E35               	movlw	low highword(01312D00h)
  7541  000026  0E31               	movwf	((c:I2C_init@freq+2)),c
  7542  000028  6E36               	movlw	high highword(01312D00h)
  7543  00002A  0E01               	movwf	((c:I2C_init@freq+3)),c
  7544  00002C  6E37               	call	_I2C_init	;wreg free
  7545  00002E  EC6B  F01F         	line	77
  7546                           ;main.c: 77:     MCP4725(0);
  7547                           	movlw	high(0)
  7548  000032  0E00               	movwf	((c:MCP4725@Vout+1)),c
  7549  000034  6E42               	movlw	low(0)
  7550  000036  0E00               	movwf	((c:MCP4725@Vout)),c
  7551  000038  6E41               	call	_MCP4725	;wreg free
  7552  00003A  ECA7  F020         	line	89
  7553                           	
  7554                           l6293:
  7555  00003E                     ;main.c: 89:     char tecla = 0;
  7556                           	movlw	low(0)
  7557  00003E  0E00               	movlb	0	; () banked
  7558  000040  0100               	movwf	((main@tecla))&0ffh
  7559  000042  6FBE               	line	90
  7560                           	
  7561                           l6295:; BSR set to: 0
  7562  000044                     
  7563                           ;main.c: 90:     char estado = 0;
  7564                           	movlw	low(0)
  7565  000044  0E00               	movwf	((main@estado))&0ffh
  7566  000046  6FBD               	line	93
  7567                           	
  7568                           l6297:; BSR set to: 0
  7569  000048                     
  7570                           ;main.c: 91:     char atuador;;main.c: 92:     char vetor_aux[16];;main.c: 93:     char 
                                 init_cond = 0;
  7571                           	movlw	low(0)
  7572  000048  0E00               	movwf	((main@init_cond))&0ffh
  7573  00004A  6FB6               	line	96
  7574                           	
  7575                           l6299:; BSR set to: 0
  7576  00004C                     
  7577                           ;main.c: 94:     char *pt;;main.c: 96:     char contPassos = 0;
  7578                           	movlw	low(0)
  7579  00004C  0E00               	movwf	((main@contPassos))&0ffh
  7580  00004E  6F74               	line	97
  7581                           	
  7582                           l6301:; BSR set to: 0
  7583  000050                     
  7584                           ;main.c: 97:     char vetorIn[1] = { 0 };
  7585                           	movff	(main@F3478),(main@vetorIn)
  7586  000050  C0EE  F0AD         	line	98
  7587                           	
  7588                           l6303:; BSR set to: 0
  7589  000054                     
  7590                           ;main.c: 98:     char vetorOut[1] = { 0 };
  7591                           	movff	(main@F3480),(main@vetorOut)
  7592  000054  C0ED  F0AE         	line	99
  7593                           ;main.c: 99:     initSerialIO( vetorIn, vetorOut, 1 );
  7594                           		movlw	low(main@vetorIn)
  7595  000058  0EAD               	movwf	((c:initSerialIO@ptrIn)),c
  7596  00005A  6E27               	movlw	high(main@vetorIn)
  7597  00005C  0E00               	movwf	((c:initSerialIO@ptrIn+1)),c
  7598  00005E  6E28               
  7599                           		movlw	low(main@vetorOut)
  7600  000060  0EAE               	movwf	((c:initSerialIO@ptrOut)),c
  7601  000062  6E29               	movlw	high(main@vetorOut)
  7602  000064  0E00               	movwf	((c:initSerialIO@ptrOut+1)),c
  7603  000066  6E2A               
  7604                           	movlw	low(01h)
  7605  000068  0E01               	movwf	((c:initSerialIO@length)),c
  7606  00006A  6E2B               	call	_initSerialIO	;wreg free
  7607  00006C  EC08  F020         	line	100
  7608                           	
  7609                           l6305:
  7610  000070                     ;main.c: 100:     char meAtuadores = -1;
  7611                           	movlb	0	; () banked
  7612  000070  0100               	setf	((main@meAtuadores))&0ffh
  7613  000072  69AF               	line	101
  7614                           	
  7615                           l6307:; BSR set to: 0
  7616  000074                     
  7617                           ;main.c: 101:     char auxPasso = 0;
  7618                           	movlw	low(0)
  7619  000074  0E00               	movwf	((main@auxPasso))&0ffh
  7620  000076  6FBC               	line	102
  7621                           	
  7622                           l6309:; BSR set to: 0
  7623  000078                     
  7624                           ;main.c: 102:     char aux = 2;
  7625                           	movlw	low(02h)
  7626  000078  0E02               	movwf	((main@aux))&0ffh
  7627  00007A  6F75               	line	103
  7628                           	
  7629                           l6311:; BSR set to: 0
  7630  00007C                     
  7631                           ;main.c: 103:     unsigned int num = 0;
  7632                           	movlw	high(0)
  7633  00007C  0E00               	movwf	((main@num+1))&0ffh
  7634  00007E  6FB1               	movlw	low(0)
  7635  000080  0E00               	movwf	((main@num))&0ffh
  7636  000082  6FB0               	line	104
  7637                           	
  7638                           l6313:; BSR set to: 0
  7639  000084                     
  7640                           ;main.c: 104:     unsigned int por = 0;
  7641                           	movlw	high(0)
  7642  000084  0E00               	movwf	((main@por+1))&0ffh
  7643  000086  6FB3               	movlw	low(0)
  7644  000088  0E00               	movwf	((main@por))&0ffh
  7645  00008A  6FB2               	line	105
  7646                           	
  7647                           l6315:; BSR set to: 0
  7648  00008C                     
  7649                           ;main.c: 105:     unsigned int ciclos = 0;
  7650                           	movlw	high(0)
  7651  00008C  0E00               	movwf	((main@ciclos+1))&0ffh
  7652  00008E  6FB5               	movlw	low(0)
  7653  000090  0E00               	movwf	((main@ciclos))&0ffh
  7654  000092  6FB4               	line	106
  7655                           	
  7656                           l6317:; BSR set to: 0
  7657  000094                     
  7658                           ;main.c: 106:     char botao = 0;
  7659                           	movlw	low(0)
  7660  000094  0E00               	movwf	((main@botao))&0ffh
  7661  000096  6FB7               	goto	l7061
  7662  000098  EF9F  F00E         	line	119
  7663                           ;main.c: 119:     while(1)
  7664                           	
  7665                           l620:; BSR set to: 0
  7666  00009C                     
  7667                           	line	121
  7668                           ;main.c: 120:     {;main.c: 121:          switch(estado)
  7669                           	goto	l7061
  7670  00009C  EF9F  F00E         	line	123
  7671                           ;main.c: 122:         {;main.c: 123:              case 0:
  7672                           	
  7673                           l622:; BSR set to: 0
  7674  0000A0                     
  7675                           	line	124
  7676                           	
  7677                           l6319:; BSR set to: 0
  7678  0000A0                     
  7679                           ;main.c: 124:                             for(char i = 0; i <= 3; i++)
  7680                           	movlw	low(0)
  7681  0000A0  0E00               	movwf	((main@i))&0ffh
  7682  0000A2  6FA1               	
  7683                           l6321:; BSR set to: 0
  7684  0000A4                     
  7685                           		movlw	04h-1
  7686  0000A4  0E03               	cpfsgt	((main@i))&0ffh
  7687  0000A6  65A1               	goto	u4751
  7688  0000A8  EF58  F000         	goto	u4750
  7689  0000AC  EF5A  F000         
  7690                           u4751:
  7691  0000B0                     	goto	l6325
  7692  0000B0  EF5E  F000         u4750:
  7693  0000B4                     	goto	l6343
  7694  0000B4  EF9F  F000         	
  7695                           l6323:; BSR set to: 0
  7696  0000B8                     
  7697                           	goto	l6343
  7698  0000B8  EF9F  F000         	
  7699                           l623:; BSR set to: 0
  7700  0000BC                     
  7701                           	line	126
  7702                           	
  7703                           l6325:; BSR set to: 0
  7704  0000BC                     
  7705                           ;main.c: 125:                             {;main.c: 126:                                
                                  for(char j = 0; j <= 19; j++)
  7706                           	movlw	low(0)
  7707  0000BC  0E00               	movwf	((main@j))&0ffh
  7708  0000BE  6FA2               	
  7709                           l6327:; BSR set to: 0
  7710  0000C0                     
  7711                           		movlw	014h-1
  7712  0000C0  0E13               	cpfsgt	((main@j))&0ffh
  7713  0000C2  65A2               	goto	u4761
  7714  0000C4  EF66  F000         	goto	u4760
  7715  0000C8  EF68  F000         
  7716                           u4761:
  7717  0000CC                     	goto	l6331
  7718  0000CC  EF6C  F000         u4760:
  7719  0000D0                     	goto	l6339
  7720  0000D0  EF94  F000         	
  7721                           l6329:; BSR set to: 0
  7722  0000D4                     
  7723                           	goto	l6339
  7724  0000D4  EF94  F000         	
  7725                           l625:; BSR set to: 0
  7726  0000D8                     
  7727                           	line	128
  7728                           	
  7729                           l6331:; BSR set to: 0
  7730  0000D8                     
  7731                           ;main.c: 127:                                 {;main.c: 128:                            
                                          IHM.printpos(i, j, "\377");
  7732                           	lfsr	2,(_IHM)+04h
  7733  0000D8  EE20  F0D3         	call	u4778
  7734  0000DC  D802               	goto	u4779
  7735  0000DE  EF82  F000         u4778:
  7736  0000E2                     	push
  7737  0000E2  0005               	movwf	pclath
  7738  0000E4  6EFA               	movf	postinc2,w
  7739  0000E6  50DE               	movwf	tosl
  7740  0000E8  6EFD               	movf	postinc2,w
  7741  0000EA  50DE               	movwf	tosl+1
  7742  0000EC  6EFE               	movf	tblptru,w
  7743  0000EE  50F8               	movwf	tosl+2
  7744  0000F0  6EFF               	movf	pclath,w
  7745  0000F2  50FA               	
  7746                           	movff	(main@j),(c:dispLCD@col)
  7747  0000F4  C0A2  F02E         		movlw	low(STR_1)
  7748  0000F8  0EFC               	movwf	((c:dispLCD@str)),c
  7749  0000FA  6E2F               	movlw	high(STR_1)
  7750  0000FC  0E7F               	movwf	((c:dispLCD@str+1)),c
  7751  0000FE  6E30               
  7752                           	movf	((main@i))&0ffh,w
  7753  000100  51A1               	
  7754                           	return	;indir
  7755  000102  0012               	u4779:
  7756  000104                     	line	129
  7757                           	
  7758                           l6333:
  7759  000104                     ;main.c: 129:                                     delay(10);
  7760                           	movlw	high(0Ah)
  7761  000104  0E00               	movwf	((c:delay@t+1)),c
  7762  000106  6E28               	movlw	low(0Ah)
  7763  000108  0E0A               	movwf	((c:delay@t)),c
  7764  00010A  6E27               	call	_delay
  7765  00010C  ECD7  F01F         	line	130
  7766                           	
  7767                           l6335:
  7768  000110                     ;main.c: 130:                                 }
  7769                           	movlb	0	; () banked
  7770  000110  0100               	incf	((main@j))&0ffh
  7771  000112  2BA2               	
  7772                           l6337:; BSR set to: 0
  7773  000114                     
  7774                           		movlw	014h-1
  7775  000114  0E13               	cpfsgt	((main@j))&0ffh
  7776  000116  65A2               	goto	u4781
  7777  000118  EF90  F000         	goto	u4780
  7778  00011C  EF92  F000         
  7779                           u4781:
  7780  000120                     	goto	l6331
  7781  000120  EF6C  F000         u4780:
  7782  000124                     	goto	l6339
  7783  000124  EF94  F000         	
  7784                           l626:; BSR set to: 0
  7785  000128                     
  7786                           	line	131
  7787                           	
  7788                           l6339:; BSR set to: 0
  7789  000128                     
  7790                           ;main.c: 131:                             }
  7791                           	incf	((main@i))&0ffh
  7792  000128  2BA1               	
  7793                           l6341:; BSR set to: 0
  7794  00012A                     
  7795                           		movlw	04h-1
  7796  00012A  0E03               	cpfsgt	((main@i))&0ffh
  7797  00012C  65A1               	goto	u4791
  7798  00012E  EF9B  F000         	goto	u4790
  7799  000132  EF9D  F000         
  7800                           u4791:
  7801  000136                     	goto	l6325
  7802  000136  EF5E  F000         u4790:
  7803  00013A                     	goto	l6343
  7804  00013A  EF9F  F000         	
  7805                           l624:; BSR set to: 0
  7806  00013E                     
  7807                           	line	133
  7808                           	
  7809                           l6343:; BSR set to: 0
  7810  00013E                     
  7811                           ;main.c: 133:                             for(char i = 0; i <= 3; i++)
  7812                           	movlw	low(0)
  7813  00013E  0E00               	movwf	((main@i_902))&0ffh
  7814  000140  6FA3               	
  7815                           l6345:; BSR set to: 0
  7816  000142                     
  7817                           		movlw	04h-1
  7818  000142  0E03               	cpfsgt	((main@i_902))&0ffh
  7819  000144  65A3               	goto	u4801
  7820  000146  EFA7  F000         	goto	u4800
  7821  00014A  EFA9  F000         
  7822                           u4801:
  7823  00014E                     	goto	l6349
  7824  00014E  EFAD  F000         u4800:
  7825  000152                     	goto	l6367
  7826  000152  EFEE  F000         	
  7827                           l6347:; BSR set to: 0
  7828  000156                     
  7829                           	goto	l6367
  7830  000156  EFEE  F000         	
  7831                           l627:; BSR set to: 0
  7832  00015A                     
  7833                           	line	135
  7834                           	
  7835                           l6349:; BSR set to: 0
  7836  00015A                     
  7837                           ;main.c: 134:                             {;main.c: 135:                                
                                  for(char j = 0; j <= 19; j++)
  7838                           	movlw	low(0)
  7839  00015A  0E00               	movwf	((main@j_903))&0ffh
  7840  00015C  6FA4               	
  7841                           l6351:; BSR set to: 0
  7842  00015E                     
  7843                           		movlw	014h-1
  7844  00015E  0E13               	cpfsgt	((main@j_903))&0ffh
  7845  000160  65A4               	goto	u4811
  7846  000162  EFB5  F000         	goto	u4810
  7847  000166  EFB7  F000         
  7848                           u4811:
  7849  00016A                     	goto	l6355
  7850  00016A  EFBB  F000         u4810:
  7851  00016E                     	goto	l6363
  7852  00016E  EFE3  F000         	
  7853                           l6353:; BSR set to: 0
  7854  000172                     
  7855                           	goto	l6363
  7856  000172  EFE3  F000         	
  7857                           l629:; BSR set to: 0
  7858  000176                     
  7859                           	line	137
  7860                           	
  7861                           l6355:; BSR set to: 0
  7862  000176                     
  7863                           ;main.c: 136:                                 {;main.c: 137:                            
                                          IHM.printpos(i, j, " ");
  7864                           	lfsr	2,(_IHM)+04h
  7865  000176  EE20  F0D3         	call	u4828
  7866  00017A  D802               	goto	u4829
  7867  00017C  EFD1  F000         u4828:
  7868  000180                     	push
  7869  000180  0005               	movwf	pclath
  7870  000182  6EFA               	movf	postinc2,w
  7871  000184  50DE               	movwf	tosl
  7872  000186  6EFD               	movf	postinc2,w
  7873  000188  50DE               	movwf	tosl+1
  7874  00018A  6EFE               	movf	tblptru,w
  7875  00018C  50F8               	movwf	tosl+2
  7876  00018E  6EFF               	movf	pclath,w
  7877  000190  50FA               	
  7878                           	movff	(main@j_903),(c:dispLCD@col)
  7879  000192  C0A4  F02E         		movlw	low(STR_2)
  7880  000196  0EB8               	movwf	((c:dispLCD@str)),c
  7881  000198  6E2F               	movlw	high(STR_2)
  7882  00019A  0E7D               	movwf	((c:dispLCD@str+1)),c
  7883  00019C  6E30               
  7884                           	movf	((main@i_902))&0ffh,w
  7885  00019E  51A3               	
  7886                           	return	;indir
  7887  0001A0  0012               	u4829:
  7888  0001A2                     	line	138
  7889                           	
  7890                           l6357:
  7891  0001A2                     ;main.c: 138:                                     delay(10);
  7892                           	movlw	high(0Ah)
  7893  0001A2  0E00               	movwf	((c:delay@t+1)),c
  7894  0001A4  6E28               	movlw	low(0Ah)
  7895  0001A6  0E0A               	movwf	((c:delay@t)),c
  7896  0001A8  6E27               	call	_delay
  7897  0001AA  ECD7  F01F         	line	139
  7898                           	
  7899                           l6359:
  7900  0001AE                     ;main.c: 139:                                 }
  7901                           	movlb	0	; () banked
  7902  0001AE  0100               	incf	((main@j_903))&0ffh
  7903  0001B0  2BA4               	
  7904                           l6361:; BSR set to: 0
  7905  0001B2                     
  7906                           		movlw	014h-1
  7907  0001B2  0E13               	cpfsgt	((main@j_903))&0ffh
  7908  0001B4  65A4               	goto	u4831
  7909  0001B6  EFDF  F000         	goto	u4830
  7910  0001BA  EFE1  F000         
  7911                           u4831:
  7912  0001BE                     	goto	l6355
  7913  0001BE  EFBB  F000         u4830:
  7914  0001C2                     	goto	l6363
  7915  0001C2  EFE3  F000         	
  7916                           l630:; BSR set to: 0
  7917  0001C6                     
  7918                           	line	140
  7919                           	
  7920                           l6363:; BSR set to: 0
  7921  0001C6                     
  7922                           ;main.c: 140:                             }
  7923                           	incf	((main@i_902))&0ffh
  7924  0001C6  2BA3               	
  7925                           l6365:; BSR set to: 0
  7926  0001C8                     
  7927                           		movlw	04h-1
  7928  0001C8  0E03               	cpfsgt	((main@i_902))&0ffh
  7929  0001CA  65A3               	goto	u4841
  7930  0001CC  EFEA  F000         	goto	u4840
  7931  0001D0  EFEC  F000         
  7932                           u4841:
  7933  0001D4                     	goto	l6349
  7934  0001D4  EFAD  F000         u4840:
  7935  0001D8                     	goto	l6367
  7936  0001D8  EFEE  F000         	
  7937                           l628:; BSR set to: 0
  7938  0001DC                     
  7939                           	line	141
  7940                           	
  7941                           l6367:; BSR set to: 0
  7942  0001DC                     
  7943                           ;main.c: 141:                             estado = 1;
  7944                           	movlw	low(01h)
  7945  0001DC  0E01               	movwf	((main@estado))&0ffh
  7946  0001DE  6FBD               	line	142
  7947                           ;main.c: 142:                             break;
  7948                           	goto	l7063
  7949  0001E0  EF45  F00F         	line	144
  7950                           ;main.c: 144:             case 1:
  7951                           	
  7952                           l632:; BSR set to: 0
  7953  0001E4                     
  7954                           	line	145
  7955                           	
  7956                           l6369:; BSR set to: 0
  7957  0001E4                     
  7958                           ;main.c: 145:                             IHM.printpos(1, 0, "      SEGGUIT       ");
  7959                           	lfsr	2,(_IHM)+04h
  7960  0001E4  EE20  F0D3         	call	u4858
  7961  0001E8  D802               	goto	u4859
  7962  0001EA  EF08  F001         u4858:
  7963  0001EE                     	push
  7964  0001EE  0005               	movwf	pclath
  7965  0001F0  6EFA               	movf	postinc2,w
  7966  0001F2  50DE               	movwf	tosl
  7967  0001F4  6EFD               	movf	postinc2,w
  7968  0001F6  50DE               	movwf	tosl+1
  7969  0001F8  6EFE               	movf	tblptru,w
  7970  0001FA  50F8               	movwf	tosl+2
  7971  0001FC  6EFF               	movf	pclath,w
  7972  0001FE  50FA               	
  7973                           	movlw	low(0)
  7974  000200  0E00               	movwf	((c:dispLCD@col)),c
  7975  000202  6E2E               		movlw	low(STR_3)
  7976  000204  0EE4               	movwf	((c:dispLCD@str)),c
  7977  000206  6E2F               	movlw	high(STR_3)
  7978  000208  0E7D               	movwf	((c:dispLCD@str+1)),c
  7979  00020A  6E30               
  7980                           	movlw	(01h)&0ffh
  7981  00020C  0E01               	
  7982                           	return	;indir
  7983  00020E  0012               	u4859:
  7984  000210                     	line	147
  7985                           	
  7986                           l6371:
  7987  000210                     ;main.c: 147:                             char lema[20] = "Mundo ao seu comando";
  7988                           	lfsr	2,(main@F3505)
  7989  000210  EE21  F032         	lfsr	1,(main@lema)
  7990  000214  EE10  F060         	movlw	20-1
  7991  000218  0E13               u4861:
  7992  00021A                     	movff	plusw2,plusw1
  7993  00021A  CFDB FFE3          	decf	wreg
  7994  00021E  06E8               	bc	u4861
  7995  000220  E2FC               
  7996                           	line	148
  7997                           	
  7998                           l6373:
  7999  000222                     ;main.c: 148:                             char i = 0;
  8000                           	movlw	low(0)
  8001  000222  0E00               	movlb	0	; () banked
  8002  000224  0100               	movwf	((main@i_908))&0ffh
  8003  000226  6F9C               	line	151
  8004                           	
  8005                           l6375:; BSR set to: 0
  8006  000228                     
  8007                           ;main.c: 149:                             char *ptr;;main.c: 151:                       
                                       for(ptr = lema; *ptr != 0; ptr++)
  8008                           		movlw	low(main@lema)
  8009  000228  0E60               	movwf	((main@ptr))&0ffh
  8010  00022A  6F9F               	movlw	high(main@lema)
  8011  00022C  0E00               	movwf	((main@ptr+1))&0ffh
  8012  00022E  6FA0               
  8013                           	goto	l6387
  8014  000230  EF33  F001         	
  8015                           l636:; BSR set to: 0
  8016  000234                     
  8017                           	line	153
  8018                           	
  8019                           l6377:; BSR set to: 0
  8020  000234                     
  8021                           ;main.c: 152:                             {;main.c: 153:                                
                                  dispLCD_lincol( 2, i );
  8022                           	movff	(main@i_908),(c:dispLCD_lincol@col)
  8023  000234  C09C  F029         	movlw	(02h)&0ffh
  8024  000238  0E02               	
  8025                           	call	_dispLCD_lincol
  8026  00023A  EC5C  F01D         	line	154
  8027                           	
  8028                           l6379:
  8029  00023E                     ;main.c: 154:                                 dispLCD_dataReg( *ptr );
  8030                           	movff	(main@ptr),fsr2l
  8031  00023E  C09F  FFD9         	movff	(main@ptr+1),fsr2h
  8032  000242  C0A0  FFDA         	movf	indf2,w
  8033  000246  50DF               	
  8034                           	call	_dispLCD_dataReg
  8035  000248  EC97  F01E         	line	155
  8036                           	
  8037                           l6381:
  8038  00024C                     ;main.c: 155:                                 i++;
  8039                           	movlb	0	; () banked
  8040  00024C  0100               	incf	((main@i_908))&0ffh
  8041  00024E  2B9C               	line	156
  8042                           	
  8043                           l6383:; BSR set to: 0
  8044  000250                     
  8045                           ;main.c: 156:                                 delay(50);
  8046                           	movlw	high(032h)
  8047  000250  0E00               	movwf	((c:delay@t+1)),c
  8048  000252  6E28               	movlw	low(032h)
  8049  000254  0E32               	movwf	((c:delay@t)),c
  8050  000256  6E27               	call	_delay	;wreg free
  8051  000258  ECD7  F01F         	line	157
  8052                           	
  8053                           l6385:
  8054  00025C                     ;main.c: 157:                             }
  8055                           	movlb	0	; () banked
  8056  00025C  0100               	infsnz	((main@ptr))&0ffh
  8057  00025E  4B9F               	incf	((main@ptr+1))&0ffh
  8058  000260  2BA0               	goto	l6387
  8059  000262  EF33  F001         	
  8060                           l635:; BSR set to: 0
  8061  000266                     
  8062                           	
  8063                           l6387:; BSR set to: 0
  8064  000266                     
  8065                           	movff	(main@ptr),fsr2l
  8066  000266  C09F  FFD9         	movff	(main@ptr+1),fsr2h
  8067  00026A  C0A0  FFDA         	movf	indf2,w
  8068  00026E  50DF               	btfss	status,2
  8069  000270  A4D8               	goto	u4871
  8070  000272  EF3D  F001         	goto	u4870
  8071  000276  EF3F  F001         u4871:
  8072  00027A                     	goto	l6377
  8073  00027A  EF1A  F001         u4870:
  8074  00027E                     	goto	l6389
  8075  00027E  EF41  F001         	
  8076                           l637:; BSR set to: 0
  8077  000282                     
  8078                           	line	159
  8079                           	
  8080                           l6389:; BSR set to: 0
  8081  000282                     
  8082                           ;main.c: 159:                             setT1(1500);
  8083                           	movlw	low(05DCh)
  8084  000282  0EDC               	movwf	((c:setT1@c)),c
  8085  000284  6E2D               	movlw	high(05DCh)
  8086  000286  0E05               	movwf	((c:setT1@c+1)),c
  8087  000288  6E2E               	movlw	low highword(05DCh)
  8088  00028A  0E00               	movwf	((c:setT1@c+2)),c
  8089  00028C  6E2F               	movlw	high highword(05DCh)
  8090  00028E  0E00               	movwf	((c:setT1@c+3)),c
  8091  000290  6E30               	call	_setT1	;wreg free
  8092  000292  EC47  F021         	line	160
  8093                           	
  8094                           l6391:
  8095  000296                     ;main.c: 160:                             estado = 2;
  8096                           	movlw	low(02h)
  8097  000296  0E02               	movlb	0	; () banked
  8098  000298  0100               	movwf	((main@estado))&0ffh
  8099  00029A  6FBD               	line	161
  8100                           ;main.c: 161:                             break;
  8101                           	goto	l7063
  8102  00029C  EF45  F00F         	line	163
  8103                           ;main.c: 163:              case 2:
  8104                           	
  8105                           l638:; BSR set to: 0
  8106  0002A0                     
  8107                           	line	164
  8108                           	
  8109                           l6393:; BSR set to: 0
  8110  0002A0                     
  8111                           ;main.c: 164:                             if(!statusT1())
  8112                           	call	_statusT1	;wreg free
  8113  0002A0  EC65  F021         	movf	(0+?_statusT1),c,w
  8114  0002A4  5027               iorwf	(1+?_statusT1),c,w
  8115  0002A6  1028               iorwf	(2+?_statusT1),c,w
  8116  0002A8  1029               iorwf	(3+?_statusT1),c,w
  8117  0002AA  102A               	btfss	status,2
  8118  0002AC  A4D8               	goto	u4881
  8119  0002AE  EF5B  F001         	goto	u4880
  8120  0002B2  EF5D  F001         
  8121                           u4881:
  8122  0002B6                     	goto	l7063
  8123  0002B6  EF45  F00F         u4880:
  8124  0002BA                     	line	165
  8125                           	
  8126                           l6395:
  8127  0002BA                     ;main.c: 165:                                 estado = 8;
  8128                           	movlw	low(08h)
  8129  0002BA  0E08               	movlb	0	; () banked
  8130  0002BC  0100               	movwf	((main@estado))&0ffh
  8131  0002BE  6FBD               	goto	l7063
  8132  0002C0  EF45  F00F         	
  8133                           l639:; BSR set to: 0
  8134  0002C4                     
  8135                           	line	166
  8136                           ;main.c: 166:                             break;
  8137                           	goto	l7063
  8138  0002C4  EF45  F00F         	line	183
  8139                           ;main.c: 183:              case 8:
  8140                           	
  8141                           l640:; BSR set to: 0
  8142  0002C8                     
  8143                           	line	184
  8144                           	
  8145                           l6397:; BSR set to: 0
  8146  0002C8                     
  8147                           ;main.c: 184:                             init_atuadores();
  8148                           	call	_init_atuadores	;wreg free
  8149  0002C8  EC7F  F021         	line	185
  8150                           	
  8151                           l6399:
  8152  0002CC                     ;main.c: 185:                             IHM.print("1: INSERIR SEQUENCIA\n"
  8153                           		movlw	low(STR_4)
  8154  0002CC  0EEB               	movwf	((c:dispLCD_str@str)),c
  8155  0002CE  6E2E               	movlw	high(STR_4)
  8156  0002D0  0E7B               	movwf	((c:dispLCD_str@str+1)),c
  8157  0002D2  6E2F               
  8158                           	lfsr	2,(_IHM)+02h
  8159  0002D4  EE20  F0D1         	call	u4898
  8160  0002D8  D802               	goto	u4899
  8161  0002DA  EF79  F001         u4898:
  8162  0002DE                     	push
  8163  0002DE  0005               	movwf	pclath
  8164  0002E0  6EFA               	movf	postinc2,w
  8165  0002E2  50DE               	movwf	tosl
  8166  0002E4  6EFD               	movf	postinc2,w
  8167  0002E6  50DE               	movwf	tosl+1
  8168  0002E8  6EFE               	movf	tblptru,w
  8169  0002EA  50F8               	movwf	tosl+2
  8170  0002EC  6EFF               	movf	pclath,w
  8171  0002EE  50FA               	
  8172                           	return	;indir
  8173  0002F0  0012               	u4899:
  8174  0002F2                     	line	189
  8175                           	
  8176                           l6401:
  8177  0002F2                     ;main.c: 189:                             setT1(1000);
  8178                           	movlw	low(03E8h)
  8179  0002F2  0EE8               	movwf	((c:setT1@c)),c
  8180  0002F4  6E2D               	movlw	high(03E8h)
  8181  0002F6  0E03               	movwf	((c:setT1@c+1)),c
  8182  0002F8  6E2E               	movlw	low highword(03E8h)
  8183  0002FA  0E00               	movwf	((c:setT1@c+2)),c
  8184  0002FC  6E2F               	movlw	high highword(03E8h)
  8185  0002FE  0E00               	movwf	((c:setT1@c+3)),c
  8186  000300  6E30               	call	_setT1	;wreg free
  8187  000302  EC47  F021         	line	190
  8188                           	
  8189                           l6403:
  8190  000306                     ;main.c: 190:                             estado = 9;
  8191                           	movlw	low(09h)
  8192  000306  0E09               	movlb	0	; () banked
  8193  000308  0100               	movwf	((main@estado))&0ffh
  8194  00030A  6FBD               	line	191
  8195                           ;main.c: 191:                             break;
  8196                           	goto	l7063
  8197  00030C  EF45  F00F         	line	193
  8198                           ;main.c: 193:             case 9:
  8199                           	
  8200                           l641:; BSR set to: 0
  8201  000310                     
  8202                           	line	194
  8203                           	
  8204                           l6405:; BSR set to: 0
  8205  000310                     
  8206                           ;main.c: 194:                             if(!statusT1())
  8207                           	call	_statusT1	;wreg free
  8208  000310  EC65  F021         	movf	(0+?_statusT1),c,w
  8209  000314  5027               iorwf	(1+?_statusT1),c,w
  8210  000316  1028               iorwf	(2+?_statusT1),c,w
  8211  000318  1029               iorwf	(3+?_statusT1),c,w
  8212  00031A  102A               	btfss	status,2
  8213  00031C  A4D8               	goto	u4901
  8214  00031E  EF93  F001         	goto	u4900
  8215  000322  EF95  F001         
  8216                           u4901:
  8217  000326                     	goto	l7063
  8218  000326  EF45  F00F         u4900:
  8219  00032A                     	line	195
  8220                           	
  8221                           l6407:
  8222  00032A                     ;main.c: 195:                                 estado = 71;
  8223                           	movlw	low(047h)
  8224  00032A  0E47               	movlb	0	; () banked
  8225  00032C  0100               	movwf	((main@estado))&0ffh
  8226  00032E  6FBD               	goto	l7063
  8227  000330  EF45  F00F         	
  8228                           l642:; BSR set to: 0
  8229  000334                     
  8230                           	line	196
  8231                           ;main.c: 196:                             break;
  8232                           	goto	l7063
  8233  000334  EF45  F00F         	line	198
  8234                           ;main.c: 198:             case 71:
  8235                           	
  8236                           l643:; BSR set to: 0
  8237  000338                     
  8238                           	line	199
  8239                           	
  8240                           l6409:; BSR set to: 0
  8241  000338                     
  8242                           ;main.c: 199:                             tecla = teclado_borda();
  8243                           	call	_teclado_borda	;wreg free
  8244  000338  EC2D  F01F         	movlb	0	; () banked
  8245  00033C  0100               	movwf	((main@tecla))&0ffh
  8246  00033E  6FBE               	line	200
  8247                           ;main.c: 200:                             switch(tecla)
  8248                           	goto	l6421
  8249  000340  EFB4  F001         	line	202
  8250                           ;main.c: 201:                             {;main.c: 202:                                
                                  case '1': estado = 3; break;
  8251                           	
  8252                           l645:; BSR set to: 0
  8253  000344                     
  8254                           	
  8255                           l6411:; BSR set to: 0
  8256  000344                     
  8257                           	movlw	low(03h)
  8258  000344  0E03               	movwf	((main@estado))&0ffh
  8259  000346  6FBD               	goto	l7063
  8260  000348  EF45  F00F         	line	203
  8261                           ;main.c: 203:                                 case '2': estado = 72; break;
  8262                           	
  8263                           l647:; BSR set to: 0
  8264  00034C                     
  8265                           	
  8266                           l6413:; BSR set to: 0
  8267  00034C                     
  8268                           	movlw	low(048h)
  8269  00034C  0E48               	movwf	((main@estado))&0ffh
  8270  00034E  6FBD               	goto	l7063
  8271  000350  EF45  F00F         	line	204
  8272                           ;main.c: 204:                                 case '3': estado = 100; break;
  8273                           	
  8274                           l648:; BSR set to: 0
  8275  000354                     
  8276                           	
  8277                           l6415:; BSR set to: 0
  8278  000354                     
  8279                           	movlw	low(064h)
  8280  000354  0E64               	movwf	((main@estado))&0ffh
  8281  000356  6FBD               	goto	l7063
  8282  000358  EF45  F00F         	line	205
  8283                           ;main.c: 205:                                 case '4': estado = 80; break;
  8284                           	
  8285                           l649:; BSR set to: 0
  8286  00035C                     
  8287                           	
  8288                           l6417:; BSR set to: 0
  8289  00035C                     
  8290                           	movlw	low(050h)
  8291  00035C  0E50               	movwf	((main@estado))&0ffh
  8292  00035E  6FBD               	goto	l7063
  8293  000360  EF45  F00F         	line	206
  8294                           	
  8295                           l6419:; BSR set to: 0
  8296  000364                     
  8297                           ;main.c: 206:                             }
  8298                           	goto	l7063
  8299  000364  EF45  F00F         	
  8300                           l644:; BSR set to: 0
  8301  000368                     
  8302                           	
  8303                           l6421:; BSR set to: 0
  8304  000368                     
  8305                           	movf	((main@tecla))&0ffh,w
  8306  000368  51BE               	movwf	(??_main+0+0)&0ffh,c
  8307  00036A  6E45               	clrf	(??_main+0+0+1)&0ffh,c
  8308  00036C  6A46               
  8309                           	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  8310                           ; Switch size 1, requested type "space"
  8311                           ; Number of cases is 1, Range of values is 0 to 0
  8312                           ; switch strategies available:
  8313                           ; Name         Instructions Cycles
  8314                           ; simple_byte            4     3 (average)
  8315                           ;	Chosen strategy is simple_byte
  8316                           
  8317                           	movf ??_main+0+1,c,w
  8318  00036E  5046               	xorlw	0^0	; case 0
  8319  000370  0A00               	skipnz
  8320  000372  B4D8               	goto	l7949
  8321  000374  EFBE  F001         	goto	l7063
  8322  000378  EF45  F00F         	
  8323                           l7949:; BSR set to: 0
  8324  00037C                     
  8325                           ; Switch size 1, requested type "space"
  8326                           ; Number of cases is 4, Range of values is 49 to 52
  8327                           ; switch strategies available:
  8328                           ; Name         Instructions Cycles
  8329                           ; simple_byte           13     7 (average)
  8330                           ;	Chosen strategy is simple_byte
  8331                           
  8332                           	movf ??_main+0+0,c,w
  8333  00037C  5045               	xorlw	49^0	; case 49
  8334  00037E  0A31               	skipnz
  8335  000380  B4D8               	goto	l6411
  8336  000382  EFA2  F001         	xorlw	50^49	; case 50
  8337  000386  0A03               	skipnz
  8338  000388  B4D8               	goto	l6413
  8339  00038A  EFA6  F001         	xorlw	51^50	; case 51
  8340  00038E  0A01               	skipnz
  8341  000390  B4D8               	goto	l6415
  8342  000392  EFAA  F001         	xorlw	52^51	; case 52
  8343  000396  0A07               	skipnz
  8344  000398  B4D8               	goto	l6417
  8345  00039A  EFAE  F001         	goto	l7063
  8346  00039E  EF45  F00F         
  8347                           	
  8348                           l646:; BSR set to: 0
  8349  0003A2                     
  8350                           	line	207
  8351                           ;main.c: 207:                             break;
  8352                           	goto	l7063
  8353  0003A2  EF45  F00F         	line	209
  8354                           ;main.c: 209:              case 100:
  8355                           	
  8356                           l650:; BSR set to: 0
  8357  0003A6                     
  8358                           	line	211
  8359                           	
  8360                           l6423:; BSR set to: 0
  8361  0003A6                     
  8362                           ;main.c: 211:                             buscar_dado(10, 10, &init_cond);
  8363                           	movlw	low(0Ah)
  8364  0003A6  0E0A               	movwf	((c:buscar_dado@col)),c
  8365  0003A8  6E2D               		movlw	low(main@init_cond)
  8366  0003AA  0EB6               	movwf	((c:buscar_dado@data)),c
  8367  0003AC  6E2E               	movlw	high(main@init_cond)
  8368  0003AE  0E00               	movwf	((c:buscar_dado@data+1)),c
  8369  0003B0  6E2F               
  8370                           	movlw	(0Ah)&0ffh
  8371  0003B2  0E0A               	
  8372                           	call	_buscar_dado
  8373  0003B4  EC4B  F020         	line	212
  8374                           	
  8375                           l6425:
  8376  0003B8                     ;main.c: 212:                             manipula_atuadores_init(init_cond);
  8377                           	movlb	0	; () banked
  8378  0003B8  0100               	movf	((main@init_cond))&0ffh,w
  8379  0003BA  51B6               	
  8380                           	call	_manipula_atuadores_init
  8381  0003BC  EC5A  F01C         	line	214
  8382                           	
  8383                           l6427:
  8384  0003C0                     ;main.c: 214:                             EEPROM.buscar(11, vetor_aux);
  8385                           	lfsr	2,(_EEPROM)+02h
  8386  0003C0  EE20  F0DB         	call	u4918
  8387  0003C4  D802               	goto	u4919
  8388  0003C6  EFF4  F001         u4918:
  8389  0003CA                     	push
  8390  0003CA  0005               	movwf	pclath
  8391  0003CC  6EFA               	movf	postinc2,w
  8392  0003CE  50DE               	movwf	tosl
  8393  0003D0  6EFD               	movf	postinc2,w
  8394  0003D2  50DE               	movwf	tosl+1
  8395  0003D4  6EFE               	movf	tblptru,w
  8396  0003D6  50F8               	movwf	tosl+2
  8397  0003D8  6EFF               	movf	pclath,w
  8398  0003DA  50FA               	
  8399                           		movlw	low(main@vetor_aux)
  8400  0003DC  0E76               	movwf	((c:buscar_receita@data)),c
  8401  0003DE  6E2D               	movlw	high(main@vetor_aux)
  8402  0003E0  0E00               	movwf	((c:buscar_receita@data+1)),c
  8403  0003E2  6E2E               
  8404                           	movlw	(0Bh)&0ffh
  8405  0003E4  0E0B               	
  8406                           	return	;indir
  8407  0003E6  0012               	u4919:
  8408  0003E8                     	line	215
  8409                           	
  8410                           l6429:
  8411  0003E8                     ;main.c: 215:                             pt = vetor_aux;
  8412                           		movlw	low(main@vetor_aux)
  8413  0003E8  0E76               	movlb	0	; () banked
  8414  0003EA  0100               	movwf	((main@pt))&0ffh
  8415  0003EC  6F9D               	movlw	high(main@vetor_aux)
  8416  0003EE  0E00               	movwf	((main@pt+1))&0ffh
  8417  0003F0  6F9E               
  8418                           	line	217
  8419                           	
  8420                           l6431:; BSR set to: 0
  8421  0003F2                     
  8422                           ;main.c: 217:                             if(*pt == 0xFF)
  8423                           	movff	(main@pt),fsr2l
  8424  0003F2  C09D  FFD9         	movff	(main@pt+1),fsr2h
  8425  0003F6  C09E  FFDA         	incf	postinc2,w
  8426  0003FA  28DE               	btfss	status,2
  8427  0003FC  A4D8               	goto	u4921
  8428  0003FE  EF03  F002         	goto	u4920
  8429  000402  EF05  F002         
  8430                           u4921:
  8431  000406                     	goto	l6437
  8432  000406  EF23  F002         u4920:
  8433  00040A                     	line	219
  8434                           	
  8435                           l6433:; BSR set to: 0
  8436  00040A                     
  8437                           ;main.c: 218:                             {;main.c: 219:                                
                                  EEPROM.deletar(tecla % 0x30);
  8438                           	lfsr	2,(_EEPROM)+04h
  8439  00040A  EE20  F0DD         	call	u4938
  8440  00040E  D802               	goto	u4939
  8441  000410  EF1E  F002         u4938:
  8442  000414                     	push
  8443  000414  0005               	movwf	pclath
  8444  000416  6EFA               	movf	postinc2,w
  8445  000418  50DE               	movwf	tosl
  8446  00041A  6EFD               	movf	postinc2,w
  8447  00041C  50DE               	movwf	tosl+1
  8448  00041E  6EFE               	movf	tblptru,w
  8449  000420  50F8               	movwf	tosl+2
  8450  000422  6EFF               	movf	pclath,w
  8451  000424  50FA               	
  8452                           	movff	(main@tecla),(c:___awmod@dividend)
  8453  000426  C0BE  F027         	clrf	((c:___awmod@dividend+1)),c
  8454  00042A  6A28               	movlw	high(030h)
  8455  00042C  0E00               	movwf	((c:___awmod@divisor+1)),c
  8456  00042E  6E2A               	movlw	low(030h)
  8457  000430  0E30               	movwf	((c:___awmod@divisor)),c
  8458  000432  6E29               	call	___awmod
  8459  000434  EC0E  F019         	movf	(0+?___awmod),c,w
  8460  000438  5027               	
  8461                           	return	;indir
  8462  00043A  0012               	u4939:
  8463  00043C                     	line	220
  8464                           	
  8465                           l6435:
  8466  00043C                     ;main.c: 220:                                 vetor_aux[0] = 0;
  8467                           	movlw	low(0)
  8468  00043C  0E00               	movlb	0	; () banked
  8469  00043E  0100               	movwf	((main@vetor_aux))&0ffh
  8470  000440  6F76               	goto	l6437
  8471  000442  EF23  F002         	line	221
  8472                           ;main.c: 221:                             }
  8473                           	
  8474                           l651:; BSR set to: 0
  8475  000446                     
  8476                           	line	224
  8477                           	
  8478                           l6437:; BSR set to: 0
  8479  000446                     
  8480                           ;main.c: 224:                             for(char *ptr = vetor_aux; *ptr != 0; ptr++)
  8481                           		movlw	low(main@vetor_aux)
  8482  000446  0E76               	movwf	((main@ptr_914))&0ffh
  8483  000448  6FB8               	movlw	high(main@vetor_aux)
  8484  00044A  0E00               	movwf	((main@ptr_914+1))&0ffh
  8485  00044C  6FB9               
  8486                           	goto	l6475
  8487  00044E  EF0A  F003         	
  8488                           l653:; BSR set to: 0
  8489  000452                     
  8490                           	line	226
  8491                           	
  8492                           l6439:; BSR set to: 0
  8493  000452                     
  8494                           ;main.c: 225:                             {;main.c: 226:                                
                                  if(*ptr <= 0x64 || *ptr == 0xFE)
  8495                           	movff	(main@ptr_914),fsr2l
  8496  000452  C0B8  FFD9         	movff	(main@ptr_914+1),fsr2h
  8497  000456  C0B9  FFDA         		movlw	065h-1
  8498  00045A  0E64               	cpfsgt	indf2
  8499  00045C  64DF               	goto	u4941
  8500  00045E  EF33  F002         	goto	u4940
  8501  000462  EF35  F002         
  8502                           u4941:
  8503  000466                     	goto	l6443
  8504  000466  EF44  F002         u4940:
  8505  00046A                     	
  8506                           l6441:; BSR set to: 0
  8507  00046A                     
  8508                           	movff	(main@ptr_914),fsr2l
  8509  00046A  C0B8  FFD9         	movff	(main@ptr_914+1),fsr2h
  8510  00046E  C0B9  FFDA         	movlw	254
  8511  000472  0EFE               	xorwf	postinc2,w
  8512  000474  18DE               	btfss	status,2
  8513  000476  A4D8               	goto	u4951
  8514  000478  EF40  F002         	goto	u4950
  8515  00047C  EF42  F002         
  8516                           u4951:
  8517  000480                     	goto	l6447
  8518  000480  EF53  F002         u4950:
  8519  000484                     	goto	l6443
  8520  000484  EF44  F002         	
  8521                           l656:; BSR set to: 0
  8522  000488                     
  8523                           	line	228
  8524                           	
  8525                           l6443:; BSR set to: 0
  8526  000488                     
  8527                           ;main.c: 227:                                 {;main.c: 228:                            
                                          decodifica(&*ptr);
  8528                           		movff	(main@ptr_914),(c:decodifica@d)
  8529  000488  C0B8  F027         	movff	(main@ptr_914+1),(c:decodifica@d+1)
  8530  00048C  C0B9  F028         
  8531                           	call	_decodifica
  8532  000490  ECC7  F014         	line	229
  8533                           	
  8534                           l6445:
  8535  000494                     ;main.c: 229:                                     fifo_add_control(*ptr);
  8536                           	movff	(main@ptr_914),fsr2l
  8537  000494  C0B8  FFD9         	movff	(main@ptr_914+1),fsr2h
  8538  000498  C0B9  FFDA         	movf	indf2,w
  8539  00049C  50DF               	
  8540                           	call	_fifo_add_control
  8541  00049E  EC1B  F01E         	line	230
  8542                           ;main.c: 230:                                 }
  8543                           	goto	l6471
  8544  0004A2  EF03  F003         	line	231
  8545                           ;main.c: 231:                                 else if (*ptr > 0x64 && *ptr <= 0xDC)
  8546                           	
  8547                           l654:
  8548  0004A6                     	
  8549                           l6447:
  8550  0004A6                     	movff	(main@ptr_914),fsr2l
  8551  0004A6  C0B8  FFD9         	movff	(main@ptr_914+1),fsr2h
  8552  0004AA  C0B9  FFDA         		movlw	065h-1
  8553  0004AE  0E64               	cpfsgt	indf2
  8554  0004B0  64DF               	goto	u4961
  8555  0004B2  EF5D  F002         	goto	u4960
  8556  0004B6  EF5F  F002         
  8557                           u4961:
  8558  0004BA                     	goto	l6455
  8559  0004BA  EF7A  F002         u4960:
  8560  0004BE                     	
  8561                           l6449:
  8562  0004BE                     	movff	(main@ptr_914),fsr2l
  8563  0004BE  C0B8  FFD9         	movff	(main@ptr_914+1),fsr2h
  8564  0004C2  C0B9  FFDA         		movlw	0DDh-0
  8565  0004C6  0EDD               	cpfslt	indf2
  8566  0004C8  60DF               	goto	u4971
  8567  0004CA  EF69  F002         	goto	u4970
  8568  0004CE  EF6B  F002         
  8569                           u4971:
  8570  0004D2                     	goto	l6455
  8571  0004D2  EF7A  F002         u4970:
  8572  0004D6                     	line	233
  8573                           	
  8574                           l6451:
  8575  0004D6                     ;main.c: 232:                                 {;main.c: 233:                            
                                          decodifica(&*ptr);
  8576                           		movff	(main@ptr_914),(c:decodifica@d)
  8577  0004D6  C0B8  F027         	movff	(main@ptr_914+1),(c:decodifica@d+1)
  8578  0004DA  C0B9  F028         
  8579                           	call	_decodifica	;wreg free
  8580  0004DE  ECC7  F014         	line	234
  8581                           	
  8582                           l6453:
  8583  0004E2                     ;main.c: 234:                                     fifo_add_tempo(*ptr);
  8584                           	movff	(main@ptr_914),fsr2l
  8585  0004E2  C0B8  FFD9         	movff	(main@ptr_914+1),fsr2h
  8586  0004E6  C0B9  FFDA         	movf	indf2,w
  8587  0004EA  50DF               	
  8588                           	call	_fifo_add_tempo
  8589  0004EC  EC8E  F01C         	line	235
  8590                           ;main.c: 235:                                 }
  8591                           	goto	l6471
  8592  0004F0  EF03  F003         	line	236
  8593                           ;main.c: 236:                                 else
  8594                           	
  8595                           l658:
  8596  0004F4                     	line	238
  8597                           	
  8598                           l6455:
  8599  0004F4                     ;main.c: 237:                                 {;main.c: 238:                            
                                          decodifica(&*ptr);
  8600                           		movff	(main@ptr_914),(c:decodifica@d)
  8601  0004F4  C0B8  F027         	movff	(main@ptr_914+1),(c:decodifica@d+1)
  8602  0004F8  C0B9  F028         
  8603                           	call	_decodifica	;wreg free
  8604  0004FC  ECC7  F014         	line	239
  8605                           ;main.c: 239:                                     switch( *ptr )
  8606                           	goto	l6461
  8607  000500  EF9A  F002         	line	241
  8608                           ;main.c: 240:                                     {;main.c: 241:                        
                                                  case 'A':
  8609                           	
  8610                           l661:
  8611  000504                     	goto	l6457
  8612  000504  EF90  F002         	line	242
  8613                           ;main.c: 242:                                         case 'B':
  8614                           	
  8615                           l662:
  8616  000508                     	goto	l6457
  8617  000508  EF90  F002         	line	243
  8618                           ;main.c: 243:                                         case 'C':
  8619                           	
  8620                           l663:
  8621  00050C                     	goto	l6457
  8622  00050C  EF90  F002         	line	244
  8623                           ;main.c: 244:                                         case 'D':
  8624                           	
  8625                           l664:
  8626  000510                     	goto	l6457
  8627  000510  EF90  F002         	line	245
  8628                           ;main.c: 245:                                         case 'a':
  8629                           	
  8630                           l665:
  8631  000514                     	goto	l6457
  8632  000514  EF90  F002         	line	246
  8633                           ;main.c: 246:                                         case 'b':
  8634                           	
  8635                           l666:
  8636  000518                     	goto	l6457
  8637  000518  EF90  F002         	line	247
  8638                           ;main.c: 247:                                         case 'c':
  8639                           	
  8640                           l667:
  8641  00051C                     	goto	l6457
  8642  00051C  EF90  F002         	line	248
  8643                           ;main.c: 248:                                         case 'd':
  8644                           	
  8645                           l668:
  8646  000520                     	line	249
  8647                           	
  8648                           l6457:
  8649  000520                     ;main.c: 249:                                                 *ptr &= ~0x20;
  8650                           	movff	(main@ptr_914),fsr2l
  8651  000520  C0B8  FFD9         	movff	(main@ptr_914+1),fsr2h
  8652  000524  C0B9  FFDA         	movlw	0DFh
  8653  000528  0EDF               	andwf	indf2
  8654  00052A  16DF               	line	250
  8655                           ;main.c: 250:                                                 break;
  8656                           	goto	l6463
  8657  00052C  EFCB  F002         	line	251
  8658                           	
  8659                           l6459:
  8660  000530                     ;main.c: 251:                                         }
  8661                           	goto	l6463
  8662  000530  EFCB  F002         	
  8663                           l660:
  8664  000534                     	
  8665                           l6461:
  8666  000534                     	movff	(main@ptr_914),fsr2l
  8667  000534  C0B8  FFD9         	movff	(main@ptr_914+1),fsr2h
  8668  000538  C0B9  FFDA         	movf	indf2,w
  8669  00053C  50DF               	movwf	(??_main+0+0)&0ffh,c
  8670  00053E  6E45               	clrf	(??_main+0+0+1)&0ffh,c
  8671  000540  6A46               
  8672                           	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  8673                           ; Switch size 1, requested type "space"
  8674                           ; Number of cases is 1, Range of values is 0 to 0
  8675                           ; switch strategies available:
  8676                           ; Name         Instructions Cycles
  8677                           ; simple_byte            4     3 (average)
  8678                           ;	Chosen strategy is simple_byte
  8679                           
  8680                           	movf ??_main+0+1,c,w
  8681  000542  5046               	xorlw	0^0	; case 0
  8682  000544  0A00               	skipnz
  8683  000546  B4D8               	goto	l7951
  8684  000548  EFA8  F002         	goto	l6463
  8685  00054C  EFCB  F002         	
  8686                           l7951:
  8687  000550                     ; Switch size 1, requested type "space"
  8688                           ; Number of cases is 8, Range of values is 65 to 100
  8689                           ; switch strategies available:
  8690                           ; Name         Instructions Cycles
  8691                           ; simple_byte           25    13 (average)
  8692                           ;	Chosen strategy is simple_byte
  8693                           
  8694                           	movf ??_main+0+0,c,w
  8695  000550  5045               	xorlw	65^0	; case 65
  8696  000552  0A41               	skipnz
  8697  000554  B4D8               	goto	l6457
  8698  000556  EF90  F002         	xorlw	66^65	; case 66
  8699  00055A  0A03               	skipnz
  8700  00055C  B4D8               	goto	l6457
  8701  00055E  EF90  F002         	xorlw	67^66	; case 67
  8702  000562  0A01               	skipnz
  8703  000564  B4D8               	goto	l6457
  8704  000566  EF90  F002         	xorlw	68^67	; case 68
  8705  00056A  0A07               	skipnz
  8706  00056C  B4D8               	goto	l6457
  8707  00056E  EF90  F002         	xorlw	97^68	; case 97
  8708  000572  0A25               	skipnz
  8709  000574  B4D8               	goto	l6457
  8710  000576  EF90  F002         	xorlw	98^97	; case 98
  8711  00057A  0A03               	skipnz
  8712  00057C  B4D8               	goto	l6457
  8713  00057E  EF90  F002         	xorlw	99^98	; case 99
  8714  000582  0A01               	skipnz
  8715  000584  B4D8               	goto	l6457
  8716  000586  EF90  F002         	xorlw	100^99	; case 100
  8717  00058A  0A07               	skipnz
  8718  00058C  B4D8               	goto	l6457
  8719  00058E  EF90  F002         	goto	l6463
  8720  000592  EFCB  F002         
  8721                           	
  8722                           l669:
  8723  000596                     	line	252
  8724                           	
  8725                           l6463:
  8726  000596                     ;main.c: 252:                                         alt_atuador(*ptr);
  8727                           	movff	(main@ptr_914),fsr2l
  8728  000596  C0B8  FFD9         	movff	(main@ptr_914+1),fsr2h
  8729  00059A  C0B9  FFDA         	movf	indf2,w
  8730  00059E  50DF               	
  8731                           	call	_alt_atuador
  8732  0005A0  EC90  F01A         	line	253
  8733                           ;main.c: 253:                                         fifo_add( ler_atuador(*ptr) ? *ptr
                                  : *ptr|0x20 );
  8734                           	movff	(main@ptr_914),fsr2l
  8735  0005A4  C0B8  FFD9         	movff	(main@ptr_914+1),fsr2h
  8736  0005A8  C0B9  FFDA         	movf	indf2,w
  8737  0005AC  50DF               	
  8738                           	call	_ler_atuador
  8739  0005AE  EC7A  F019         	iorlw	0
  8740  0005B2  0900               	btfss	status,2
  8741  0005B4  A4D8               	goto	u4981
  8742  0005B6  EFDF  F002         	goto	u4980
  8743  0005BA  EFE1  F002         u4981:
  8744  0005BE                     	goto	l6467
  8745  0005BE  EFF0  F002         u4980:
  8746  0005C2                     	
  8747                           l6465:
  8748  0005C2                     	movff	(main@ptr_914),fsr2l
  8749  0005C2  C0B8  FFD9         	movff	(main@ptr_914+1),fsr2h
  8750  0005C6  C0B9  FFDA         	movf	indf2,w
  8751  0005CA  50DF               	movwf	(??_main+0+0)&0ffh,c
  8752  0005CC  6E45               	clrf	(??_main+0+0+1)&0ffh,c
  8753  0005CE  6A46               
  8754                           	movlw	020h
  8755  0005D0  0E20               	iorwf	(??_main+0+0),c,w
  8756  0005D2  1045               	movlb	0	; () banked
  8757  0005D4  0100               	movwf	((_main$918))&0ffh
  8758  0005D6  6F86               	movf	(??_main+0+1),c,w
  8759  0005D8  5046               	movwf	1+((_main$918))&0ffh
  8760  0005DA  6F87               	goto	l6469
  8761  0005DC  EFFC  F002         	
  8762                           l671:; BSR set to: 0
  8763  0005E0                     
  8764                           	
  8765                           l6467:
  8766  0005E0                     	movff	(main@ptr_914),fsr2l
  8767  0005E0  C0B8  FFD9         	movff	(main@ptr_914+1),fsr2h
  8768  0005E4  C0B9  FFDA         	movf	indf2,w
  8769  0005E8  50DF               	movwf	(??_main+0+0)&0ffh,c
  8770  0005EA  6E45               	movf	((??_main+0+0)),c,w
  8771  0005EC  5045               	movlb	0	; () banked
  8772  0005EE  0100               	movwf	((_main$918))&0ffh
  8773  0005F0  6F86               	clrf	((_main$918+1))&0ffh
  8774  0005F2  6B87               	goto	l6469
  8775  0005F4  EFFC  F002         	
  8776                           l673:; BSR set to: 0
  8777  0005F8                     
  8778                           	
  8779                           l6469:; BSR set to: 0
  8780  0005F8                     
  8781                           	movf	((_main$918))&0ffh,w
  8782  0005F8  5186               	
  8783                           	call	_fifo_add
  8784  0005FA  ECC2  F01C         	goto	l6471
  8785  0005FE  EF03  F003         	line	254
  8786                           ;main.c: 254:                                     }
  8787                           	
  8788                           l659:
  8789  000602                     	goto	l6471
  8790  000602  EF03  F003         	
  8791                           l657:
  8792  000606                     	line	255
  8793                           	
  8794                           l6471:
  8795  000606                     ;main.c: 255:                                 fifo_print();
  8796                           	call	_fifo_print	;wreg free
  8797  000606  ECC9  F010         	line	256
  8798                           	
  8799                           l6473:
  8800  00060A                     ;main.c: 256:                             }
  8801                           	movlb	0	; () banked
  8802  00060A  0100               	infsnz	((main@ptr_914))&0ffh
  8803  00060C  4BB8               	incf	((main@ptr_914+1))&0ffh
  8804  00060E  2BB9               	goto	l6475
  8805  000610  EF0A  F003         	
  8806                           l652:; BSR set to: 0
  8807  000614                     
  8808                           	
  8809                           l6475:; BSR set to: 0
  8810  000614                     
  8811                           	movff	(main@ptr_914),fsr2l
  8812  000614  C0B8  FFD9         	movff	(main@ptr_914+1),fsr2h
  8813  000618  C0B9  FFDA         	movf	indf2,w
  8814  00061C  50DF               	btfss	status,2
  8815  00061E  A4D8               	goto	u4991
  8816  000620  EF14  F003         	goto	u4990
  8817  000624  EF16  F003         u4991:
  8818  000628                     	goto	l6439
  8819  000628  EF29  F002         u4990:
  8820  00062C                     	goto	l6477
  8821  00062C  EF18  F003         	
  8822                           l674:; BSR set to: 0
  8823  000630                     
  8824                           	line	258
  8825                           	
  8826                           l6477:; BSR set to: 0
  8827  000630                     
  8828                           ;main.c: 258:                             dispLCD_clr();
  8829                           	call	_dispLCD_clr	;wreg free
  8830  000630  EC9A  F021         	line	259
  8831                           	
  8832                           l6479:
  8833  000634                     ;main.c: 259:                             estado = 16;
  8834                           	movlw	low(010h)
  8835  000634  0E10               	movlb	0	; () banked
  8836  000636  0100               	movwf	((main@estado))&0ffh
  8837  000638  6FBD               	line	260
  8838                           ;main.c: 260:                             break;
  8839                           	goto	l7063
  8840  00063A  EF45  F00F         	line	262
  8841                           ;main.c: 262:              case 80:
  8842                           	
  8843                           l675:; BSR set to: 0
  8844  00063E                     
  8845                           	line	263
  8846                           	
  8847                           l6481:; BSR set to: 0
  8848  00063E                     
  8849                           ;main.c: 263:                             dispLCD_clr();
  8850                           	call	_dispLCD_clr	;wreg free
  8851  00063E  EC9A  F021         	line	264
  8852                           	
  8853                           l6483:
  8854  000642                     ;main.c: 264:                             dispLCD(0,0,"1: VERIFICAR MEMORIA");
  8855                           	movlw	low(0)
  8856  000642  0E00               	movwf	((c:dispLCD@col)),c
  8857  000644  6E2E               		movlw	low(STR_5)
  8858  000646  0E1F               	movwf	((c:dispLCD@str)),c
  8859  000648  6E2F               	movlw	high(STR_5)
  8860  00064A  0E7F               	movwf	((c:dispLCD@str+1)),c
  8861  00064C  6E30               
  8862                           	movlw	(0)&0ffh
  8863  00064E  0E00               	
  8864                           	call	_dispLCD
  8865  000650  EC6F  F01E         	line	265
  8866                           	
  8867                           l6485:
  8868  000654                     ;main.c: 265:                             dispLCD(1,0,"2: LIMPAR MEMORIA   ");
  8869                           	movlw	low(0)
  8870  000654  0E00               	movwf	((c:dispLCD@col)),c
  8871  000656  6E2E               		movlw	low(STR_6)
  8872  000658  0EA1               	movwf	((c:dispLCD@str)),c
  8873  00065A  6E2F               	movlw	high(STR_6)
  8874  00065C  0E7E               	movwf	((c:dispLCD@str+1)),c
  8875  00065E  6E30               
  8876                           	movlw	(01h)&0ffh
  8877  000660  0E01               	
  8878                           	call	_dispLCD
  8879  000662  EC6F  F01E         	line	267
  8880                           	
  8881                           l6487:
  8882  000666                     ;main.c: 267:                             setT1(1000);
  8883                           	movlw	low(03E8h)
  8884  000666  0EE8               	movwf	((c:setT1@c)),c
  8885  000668  6E2D               	movlw	high(03E8h)
  8886  00066A  0E03               	movwf	((c:setT1@c+1)),c
  8887  00066C  6E2E               	movlw	low highword(03E8h)
  8888  00066E  0E00               	movwf	((c:setT1@c+2)),c
  8889  000670  6E2F               	movlw	high highword(03E8h)
  8890  000672  0E00               	movwf	((c:setT1@c+3)),c
  8891  000674  6E30               	call	_setT1	;wreg free
  8892  000676  EC47  F021         	line	268
  8893                           	
  8894                           l6489:
  8895  00067A                     ;main.c: 268:                             estado = 81;
  8896                           	movlw	low(051h)
  8897  00067A  0E51               	movlb	0	; () banked
  8898  00067C  0100               	movwf	((main@estado))&0ffh
  8899  00067E  6FBD               	line	269
  8900                           ;main.c: 269:                             break;
  8901                           	goto	l7063
  8902  000680  EF45  F00F         	line	271
  8903                           ;main.c: 271:              case 81:
  8904                           	
  8905                           l676:; BSR set to: 0
  8906  000684                     
  8907                           	line	272
  8908                           	
  8909                           l6491:; BSR set to: 0
  8910  000684                     
  8911                           ;main.c: 272:                             if(!statusT1())
  8912                           	call	_statusT1	;wreg free
  8913  000684  EC65  F021         	movf	(0+?_statusT1),c,w
  8914  000688  5027               iorwf	(1+?_statusT1),c,w
  8915  00068A  1028               iorwf	(2+?_statusT1),c,w
  8916  00068C  1029               iorwf	(3+?_statusT1),c,w
  8917  00068E  102A               	btfss	status,2
  8918  000690  A4D8               	goto	u5001
  8919  000692  EF4D  F003         	goto	u5000
  8920  000696  EF4F  F003         
  8921                           u5001:
  8922  00069A                     	goto	l7063
  8923  00069A  EF45  F00F         u5000:
  8924  00069E                     	line	273
  8925                           	
  8926                           l6493:
  8927  00069E                     ;main.c: 273:                                 estado = 82;
  8928                           	movlw	low(052h)
  8929  00069E  0E52               	movlb	0	; () banked
  8930  0006A0  0100               	movwf	((main@estado))&0ffh
  8931  0006A2  6FBD               	goto	l7063
  8932  0006A4  EF45  F00F         	
  8933                           l677:; BSR set to: 0
  8934  0006A8                     
  8935                           	line	274
  8936                           ;main.c: 274:                             break;
  8937                           	goto	l7063
  8938  0006A8  EF45  F00F         	line	276
  8939                           ;main.c: 276:              case 82:
  8940                           	
  8941                           l678:; BSR set to: 0
  8942  0006AC                     
  8943                           	line	277
  8944                           	
  8945                           l6495:; BSR set to: 0
  8946  0006AC                     
  8947                           ;main.c: 277:                             tecla = teclado_borda();
  8948                           	call	_teclado_borda	;wreg free
  8949  0006AC  EC2D  F01F         	movlb	0	; () banked
  8950  0006B0  0100               	movwf	((main@tecla))&0ffh
  8951  0006B2  6FBE               	line	278
  8952                           ;main.c: 278:                             switch(tecla)
  8953                           	goto	l6505
  8954  0006B4  EF6A  F003         	line	280
  8955                           ;main.c: 279:                             {;main.c: 280:                                
                                  case '1': estado = 83; break;
  8956                           	
  8957                           l680:; BSR set to: 0
  8958  0006B8                     
  8959                           	
  8960                           l6497:; BSR set to: 0
  8961  0006B8                     
  8962                           	movlw	low(053h)
  8963  0006B8  0E53               	movwf	((main@estado))&0ffh
  8964  0006BA  6FBD               	goto	l7063
  8965  0006BC  EF45  F00F         	line	281
  8966                           ;main.c: 281:                                 case '2': estado = 84; break;
  8967                           	
  8968                           l682:; BSR set to: 0
  8969  0006C0                     
  8970                           	
  8971                           l6499:; BSR set to: 0
  8972  0006C0                     
  8973                           	movlw	low(054h)
  8974  0006C0  0E54               	movwf	((main@estado))&0ffh
  8975  0006C2  6FBD               	goto	l7063
  8976  0006C4  EF45  F00F         	line	282
  8977                           ;main.c: 282:                                 case '*': estado = 8; break;
  8978                           	
  8979                           l683:; BSR set to: 0
  8980  0006C8                     
  8981                           	
  8982                           l6501:; BSR set to: 0
  8983  0006C8                     
  8984                           	movlw	low(08h)
  8985  0006C8  0E08               	movwf	((main@estado))&0ffh
  8986  0006CA  6FBD               	goto	l7063
  8987  0006CC  EF45  F00F         	line	283
  8988                           	
  8989                           l6503:; BSR set to: 0
  8990  0006D0                     
  8991                           ;main.c: 283:                             }
  8992                           	goto	l7063
  8993  0006D0  EF45  F00F         	
  8994                           l679:; BSR set to: 0
  8995  0006D4                     
  8996                           	
  8997                           l6505:; BSR set to: 0
  8998  0006D4                     
  8999                           	movf	((main@tecla))&0ffh,w
  9000  0006D4  51BE               	movwf	(??_main+0+0)&0ffh,c
  9001  0006D6  6E45               	clrf	(??_main+0+0+1)&0ffh,c
  9002  0006D8  6A46               
  9003                           	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  9004                           ; Switch size 1, requested type "space"
  9005                           ; Number of cases is 1, Range of values is 0 to 0
  9006                           ; switch strategies available:
  9007                           ; Name         Instructions Cycles
  9008                           ; simple_byte            4     3 (average)
  9009                           ;	Chosen strategy is simple_byte
  9010                           
  9011                           	movf ??_main+0+1,c,w
  9012  0006DA  5046               	xorlw	0^0	; case 0
  9013  0006DC  0A00               	skipnz
  9014  0006DE  B4D8               	goto	l7953
  9015  0006E0  EF74  F003         	goto	l7063
  9016  0006E4  EF45  F00F         	
  9017                           l7953:; BSR set to: 0
  9018  0006E8                     
  9019                           ; Switch size 1, requested type "space"
  9020                           ; Number of cases is 3, Range of values is 42 to 50
  9021                           ; switch strategies available:
  9022                           ; Name         Instructions Cycles
  9023                           ; simple_byte           10     6 (average)
  9024                           ;	Chosen strategy is simple_byte
  9025                           
  9026                           	movf ??_main+0+0,c,w
  9027  0006E8  5045               	xorlw	42^0	; case 42
  9028  0006EA  0A2A               	skipnz
  9029  0006EC  B4D8               	goto	l6501
  9030  0006EE  EF64  F003         	xorlw	49^42	; case 49
  9031  0006F2  0A1B               	skipnz
  9032  0006F4  B4D8               	goto	l6497
  9033  0006F6  EF5C  F003         	xorlw	50^49	; case 50
  9034  0006FA  0A03               	skipnz
  9035  0006FC  B4D8               	goto	l6499
  9036  0006FE  EF60  F003         	goto	l7063
  9037  000702  EF45  F00F         
  9038                           	
  9039                           l681:; BSR set to: 0
  9040  000706                     
  9041                           	line	284
  9042                           ;main.c: 284:                             break;
  9043                           	goto	l7063
  9044  000706  EF45  F00F         	line	286
  9045                           ;main.c: 286:              case 84:
  9046                           	
  9047                           l684:; BSR set to: 0
  9048  00070A                     
  9049                           	line	287
  9050                           	
  9051                           l6507:; BSR set to: 0
  9052  00070A                     
  9053                           ;main.c: 287:                             dispLCD(0, 0, " CERTEZA QUE DESEJA ");
  9054                           	movlw	low(0)
  9055  00070A  0E00               	movwf	((c:dispLCD@col)),c
  9056  00070C  6E2E               		movlw	low(STR_7)
  9057  00070E  0EF5               	movwf	((c:dispLCD@str)),c
  9058  000710  6E2F               	movlw	high(STR_7)
  9059  000712  0E7E               	movwf	((c:dispLCD@str+1)),c
  9060  000714  6E30               
  9061                           	movlw	(0)&0ffh
  9062  000716  0E00               	
  9063                           	call	_dispLCD
  9064  000718  EC6F  F01E         	line	288
  9065                           ;main.c: 288:                             dispLCD(1, 0, "   DELETAR TODA A   ");
  9066                           	movlw	low(0)
  9067  00071C  0E00               	movwf	((c:dispLCD@col)),c
  9068  00071E  6E2E               		movlw	low(STR_8)
  9069  000720  0E8C               	movwf	((c:dispLCD@str)),c
  9070  000722  6E2F               	movlw	high(STR_8)
  9071  000724  0E7E               	movwf	((c:dispLCD@str+1)),c
  9072  000726  6E30               
  9073                           	movlw	(01h)&0ffh
  9074  000728  0E01               	
  9075                           	call	_dispLCD
  9076  00072A  EC6F  F01E         	line	289
  9077                           ;main.c: 289:                             dispLCD(2, 0, "      MEMORIA ?     ");
  9078                           	movlw	low(0)
  9079  00072E  0E00               	movwf	((c:dispLCD@col)),c
  9080  000730  6E2E               		movlw	low(STR_9)
  9081  000732  0E38               	movwf	((c:dispLCD@str)),c
  9082  000734  6E2F               	movlw	high(STR_9)
  9083  000736  0E7E               	movwf	((c:dispLCD@str+1)),c
  9084  000738  6E30               
  9085                           	movlw	(02h)&0ffh
  9086  00073A  0E02               	
  9087                           	call	_dispLCD
  9088  00073C  EC6F  F01E         	line	290
  9089                           ;main.c: 290:                             dispLCD(3, 0, "# - SIM      * - NAO");
  9090                           	movlw	low(0)
  9091  000740  0E00               	movwf	((c:dispLCD@col)),c
  9092  000742  6E2E               		movlw	low(STR_10)
  9093  000744  0E06               	movwf	((c:dispLCD@str)),c
  9094  000746  6E2F               	movlw	high(STR_10)
  9095  000748  0E7D               	movwf	((c:dispLCD@str+1)),c
  9096  00074A  6E30               
  9097                           	movlw	(03h)&0ffh
  9098  00074C  0E03               	
  9099                           	call	_dispLCD
  9100  00074E  EC6F  F01E         	line	292
  9101                           	
  9102                           l6509:
  9103  000752                     ;main.c: 292:                             tecla = teclado_borda();
  9104                           	call	_teclado_borda	;wreg free
  9105  000752  EC2D  F01F         	movlb	0	; () banked
  9106  000756  0100               	movwf	((main@tecla))&0ffh
  9107  000758  6FBE               	line	293
  9108                           ;main.c: 293:                             switch(tecla)
  9109                           	goto	l6519
  9110  00075A  EFBC  F003         	line	295
  9111                           ;main.c: 294:                             {;main.c: 295:                                
                                  case '#': estado = 85; break;
  9112                           	
  9113                           l686:; BSR set to: 0
  9114  00075E                     
  9115                           	
  9116                           l6511:; BSR set to: 0
  9117  00075E                     
  9118                           	movlw	low(055h)
  9119  00075E  0E55               	movwf	((main@estado))&0ffh
  9120  000760  6FBD               	goto	l7063
  9121  000762  EF45  F00F         	line	297
  9122                           ;main.c: 297:                                 case '*': dispLCD_clr(); estado = 80; brea
                                 k;
  9123                           	
  9124                           l688:; BSR set to: 0
  9125  000766                     
  9126                           	
  9127                           l6513:; BSR set to: 0
  9128  000766                     
  9129                           	call	_dispLCD_clr	;wreg free
  9130  000766  EC9A  F021         	
  9131                           l6515:
  9132  00076A                     	movlw	low(050h)
  9133  00076A  0E50               	movlb	0	; () banked
  9134  00076C  0100               	movwf	((main@estado))&0ffh
  9135  00076E  6FBD               	goto	l7063
  9136  000770  EF45  F00F         	line	298
  9137                           	
  9138                           l6517:; BSR set to: 0
  9139  000774                     
  9140                           ;main.c: 298:                             }
  9141                           	goto	l7063
  9142  000774  EF45  F00F         	
  9143                           l685:; BSR set to: 0
  9144  000778                     
  9145                           	
  9146                           l6519:; BSR set to: 0
  9147  000778                     
  9148                           	movf	((main@tecla))&0ffh,w
  9149  000778  51BE               	movwf	(??_main+0+0)&0ffh,c
  9150  00077A  6E45               	clrf	(??_main+0+0+1)&0ffh,c
  9151  00077C  6A46               
  9152                           	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  9153                           ; Switch size 1, requested type "space"
  9154                           ; Number of cases is 1, Range of values is 0 to 0
  9155                           ; switch strategies available:
  9156                           ; Name         Instructions Cycles
  9157                           ; simple_byte            4     3 (average)
  9158                           ;	Chosen strategy is simple_byte
  9159                           
  9160                           	movf ??_main+0+1,c,w
  9161  00077E  5046               	xorlw	0^0	; case 0
  9162  000780  0A00               	skipnz
  9163  000782  B4D8               	goto	l7955
  9164  000784  EFC6  F003         	goto	l7063
  9165  000788  EF45  F00F         	
  9166                           l7955:; BSR set to: 0
  9167  00078C                     
  9168                           ; Switch size 1, requested type "space"
  9169                           ; Number of cases is 2, Range of values is 35 to 42
  9170                           ; switch strategies available:
  9171                           ; Name         Instructions Cycles
  9172                           ; simple_byte            7     4 (average)
  9173                           ;	Chosen strategy is simple_byte
  9174                           
  9175                           	movf ??_main+0+0,c,w
  9176  00078C  5045               	xorlw	35^0	; case 35
  9177  00078E  0A23               	skipnz
  9178  000790  B4D8               	goto	l6511
  9179  000792  EFAF  F003         	xorlw	42^35	; case 42
  9180  000796  0A09               	skipnz
  9181  000798  B4D8               	goto	l6513
  9182  00079A  EFB3  F003         	goto	l7063
  9183  00079E  EF45  F00F         
  9184                           	
  9185                           l687:; BSR set to: 0
  9186  0007A2                     
  9187                           	line	299
  9188                           ;main.c: 299:                             break;
  9189                           	goto	l7063
  9190  0007A2  EF45  F00F         	line	301
  9191                           ;main.c: 301:              case 85:
  9192                           	
  9193                           l689:; BSR set to: 0
  9194  0007A6                     
  9195                           	line	302
  9196                           	
  9197                           l6521:; BSR set to: 0
  9198  0007A6                     
  9199                           ;main.c: 302:                             EEPROM.formatar();
  9200                           	lfsr	2,(_EEPROM)+08h
  9201  0007A6  EE20  F0E1         	call	u5018
  9202  0007AA  D802               	goto	u5019
  9203  0007AC  EFE2  F003         u5018:
  9204  0007B0                     	push
  9205  0007B0  0005               	movwf	pclath
  9206  0007B2  6EFA               	movf	postinc2,w
  9207  0007B4  50DE               	movwf	tosl
  9208  0007B6  6EFD               	movf	postinc2,w
  9209  0007B8  50DE               	movwf	tosl+1
  9210  0007BA  6EFE               	movf	tblptru,w
  9211  0007BC  50F8               	movwf	tosl+2
  9212  0007BE  6EFF               	movf	pclath,w
  9213  0007C0  50FA               	
  9214                           	return	;indir
  9215  0007C2  0012               	u5019:
  9216  0007C4                     	line	303
  9217                           	
  9218                           l6523:
  9219  0007C4                     ;main.c: 303:                             dispLCD_clr();
  9220                           	call	_dispLCD_clr	;wreg free
  9221  0007C4  EC9A  F021         	line	304
  9222                           	
  9223                           l6525:
  9224  0007C8                     ;main.c: 304:                             for(char i = 0; i <= 3; i++)
  9225                           	movlw	low(0)
  9226  0007C8  0E00               	movlb	0	; () banked
  9227  0007CA  0100               	movwf	((main@i_929))&0ffh
  9228  0007CC  6FA5               	
  9229                           l6527:; BSR set to: 0
  9230  0007CE                     
  9231                           		movlw	04h-1
  9232  0007CE  0E03               	cpfsgt	((main@i_929))&0ffh
  9233  0007D0  65A5               	goto	u5021
  9234  0007D2  EFED  F003         	goto	u5020
  9235  0007D6  EFEF  F003         
  9236                           u5021:
  9237  0007DA                     	goto	l6531
  9238  0007DA  EFF3  F003         u5020:
  9239  0007DE                     	goto	l6549
  9240  0007DE  EF27  F004         	
  9241                           l6529:; BSR set to: 0
  9242  0007E2                     
  9243                           	goto	l6549
  9244  0007E2  EF27  F004         	
  9245                           l690:; BSR set to: 0
  9246  0007E6                     
  9247                           	line	306
  9248                           	
  9249                           l6531:; BSR set to: 0
  9250  0007E6                     
  9251                           ;main.c: 305:                             {;main.c: 306:                                
                                  for(char j = 0; j <= 19; j++)
  9252                           	movlw	low(0)
  9253  0007E6  0E00               	movwf	((main@j_930))&0ffh
  9254  0007E8  6FA6               	
  9255                           l6533:; BSR set to: 0
  9256  0007EA                     
  9257                           		movlw	014h-1
  9258  0007EA  0E13               	cpfsgt	((main@j_930))&0ffh
  9259  0007EC  65A6               	goto	u5031
  9260  0007EE  EFFB  F003         	goto	u5030
  9261  0007F2  EFFD  F003         
  9262                           u5031:
  9263  0007F6                     	goto	l6537
  9264  0007F6  EF01  F004         u5030:
  9265  0007FA                     	goto	l6545
  9266  0007FA  EF1C  F004         	
  9267                           l6535:; BSR set to: 0
  9268  0007FE                     
  9269                           	goto	l6545
  9270  0007FE  EF1C  F004         	
  9271                           l692:; BSR set to: 0
  9272  000802                     
  9273                           	line	308
  9274                           	
  9275                           l6537:; BSR set to: 0
  9276  000802                     
  9277                           ;main.c: 307:                                 {;main.c: 308:                            
                                          dispLCD(i, j, "\377");
  9278                           	movff	(main@j_930),(c:dispLCD@col)
  9279  000802  C0A6  F02E         		movlw	low(STR_11)
  9280  000806  0EFC               	movwf	((c:dispLCD@str)),c
  9281  000808  6E2F               	movlw	high(STR_11)
  9282  00080A  0E7F               	movwf	((c:dispLCD@str+1)),c
  9283  00080C  6E30               
  9284                           	movf	((main@i_929))&0ffh,w
  9285  00080E  51A5               	
  9286                           	call	_dispLCD
  9287  000810  EC6F  F01E         	line	309
  9288                           	
  9289                           l6539:
  9290  000814                     ;main.c: 309:                                     delay(10);
  9291                           	movlw	high(0Ah)
  9292  000814  0E00               	movwf	((c:delay@t+1)),c
  9293  000816  6E28               	movlw	low(0Ah)
  9294  000818  0E0A               	movwf	((c:delay@t)),c
  9295  00081A  6E27               	call	_delay	;wreg free
  9296  00081C  ECD7  F01F         	line	310
  9297                           	
  9298                           l6541:
  9299  000820                     ;main.c: 310:                                 }
  9300                           	movlb	0	; () banked
  9301  000820  0100               	incf	((main@j_930))&0ffh
  9302  000822  2BA6               	
  9303                           l6543:; BSR set to: 0
  9304  000824                     
  9305                           		movlw	014h-1
  9306  000824  0E13               	cpfsgt	((main@j_930))&0ffh
  9307  000826  65A6               	goto	u5041
  9308  000828  EF18  F004         	goto	u5040
  9309  00082C  EF1A  F004         
  9310                           u5041:
  9311  000830                     	goto	l6537
  9312  000830  EF01  F004         u5040:
  9313  000834                     	goto	l6545
  9314  000834  EF1C  F004         	
  9315                           l693:; BSR set to: 0
  9316  000838                     
  9317                           	line	311
  9318                           	
  9319                           l6545:; BSR set to: 0
  9320  000838                     
  9321                           ;main.c: 311:                             }
  9322                           	incf	((main@i_929))&0ffh
  9323  000838  2BA5               	
  9324                           l6547:; BSR set to: 0
  9325  00083A                     
  9326                           		movlw	04h-1
  9327  00083A  0E03               	cpfsgt	((main@i_929))&0ffh
  9328  00083C  65A5               	goto	u5051
  9329  00083E  EF23  F004         	goto	u5050
  9330  000842  EF25  F004         
  9331                           u5051:
  9332  000846                     	goto	l6531
  9333  000846  EFF3  F003         u5050:
  9334  00084A                     	goto	l6549
  9335  00084A  EF27  F004         	
  9336                           l691:; BSR set to: 0
  9337  00084E                     
  9338                           	line	313
  9339                           	
  9340                           l6549:; BSR set to: 0
  9341  00084E                     
  9342                           ;main.c: 313:                             for(char i = 0; i <= 3; i++)
  9343                           	movlw	low(0)
  9344  00084E  0E00               	movwf	((main@i_932))&0ffh
  9345  000850  6FA7               	
  9346                           l6551:; BSR set to: 0
  9347  000852                     
  9348                           		movlw	04h-1
  9349  000852  0E03               	cpfsgt	((main@i_932))&0ffh
  9350  000854  65A7               	goto	u5061
  9351  000856  EF2F  F004         	goto	u5060
  9352  00085A  EF31  F004         
  9353                           u5061:
  9354  00085E                     	goto	l6555
  9355  00085E  EF35  F004         u5060:
  9356  000862                     	goto	l6573
  9357  000862  EF69  F004         	
  9358                           l6553:; BSR set to: 0
  9359  000866                     
  9360                           	goto	l6573
  9361  000866  EF69  F004         	
  9362                           l694:; BSR set to: 0
  9363  00086A                     
  9364                           	line	315
  9365                           	
  9366                           l6555:; BSR set to: 0
  9367  00086A                     
  9368                           ;main.c: 314:                             {;main.c: 315:                                
                                  for(char j = 0; j <= 19; j++)
  9369                           	movlw	low(0)
  9370  00086A  0E00               	movwf	((main@j_933))&0ffh
  9371  00086C  6FA8               	
  9372                           l6557:; BSR set to: 0
  9373  00086E                     
  9374                           		movlw	014h-1
  9375  00086E  0E13               	cpfsgt	((main@j_933))&0ffh
  9376  000870  65A8               	goto	u5071
  9377  000872  EF3D  F004         	goto	u5070
  9378  000876  EF3F  F004         
  9379                           u5071:
  9380  00087A                     	goto	l6561
  9381  00087A  EF43  F004         u5070:
  9382  00087E                     	goto	l6569
  9383  00087E  EF5E  F004         	
  9384                           l6559:; BSR set to: 0
  9385  000882                     
  9386                           	goto	l6569
  9387  000882  EF5E  F004         	
  9388                           l696:; BSR set to: 0
  9389  000886                     
  9390                           	line	317
  9391                           	
  9392                           l6561:; BSR set to: 0
  9393  000886                     
  9394                           ;main.c: 316:                                 {;main.c: 317:                            
                                          dispLCD(i, j, " ");
  9395                           	movff	(main@j_933),(c:dispLCD@col)
  9396  000886  C0A8  F02E         		movlw	low(STR_12)
  9397  00088A  0EB8               	movwf	((c:dispLCD@str)),c
  9398  00088C  6E2F               	movlw	high(STR_12)
  9399  00088E  0E7D               	movwf	((c:dispLCD@str+1)),c
  9400  000890  6E30               
  9401                           	movf	((main@i_932))&0ffh,w
  9402  000892  51A7               	
  9403                           	call	_dispLCD
  9404  000894  EC6F  F01E         	line	318
  9405                           	
  9406                           l6563:
  9407  000898                     ;main.c: 318:                                     delay(10);
  9408                           	movlw	high(0Ah)
  9409  000898  0E00               	movwf	((c:delay@t+1)),c
  9410  00089A  6E28               	movlw	low(0Ah)
  9411  00089C  0E0A               	movwf	((c:delay@t)),c
  9412  00089E  6E27               	call	_delay	;wreg free
  9413  0008A0  ECD7  F01F         	line	319
  9414                           	
  9415                           l6565:
  9416  0008A4                     ;main.c: 319:                                 }
  9417                           	movlb	0	; () banked
  9418  0008A4  0100               	incf	((main@j_933))&0ffh
  9419  0008A6  2BA8               	
  9420                           l6567:; BSR set to: 0
  9421  0008A8                     
  9422                           		movlw	014h-1
  9423  0008A8  0E13               	cpfsgt	((main@j_933))&0ffh
  9424  0008AA  65A8               	goto	u5081
  9425  0008AC  EF5A  F004         	goto	u5080
  9426  0008B0  EF5C  F004         
  9427                           u5081:
  9428  0008B4                     	goto	l6561
  9429  0008B4  EF43  F004         u5080:
  9430  0008B8                     	goto	l6569
  9431  0008B8  EF5E  F004         	
  9432                           l697:; BSR set to: 0
  9433  0008BC                     
  9434                           	line	320
  9435                           	
  9436                           l6569:; BSR set to: 0
  9437  0008BC                     
  9438                           ;main.c: 320:                             }
  9439                           	incf	((main@i_932))&0ffh
  9440  0008BC  2BA7               	
  9441                           l6571:; BSR set to: 0
  9442  0008BE                     
  9443                           		movlw	04h-1
  9444  0008BE  0E03               	cpfsgt	((main@i_932))&0ffh
  9445  0008C0  65A7               	goto	u5091
  9446  0008C2  EF65  F004         	goto	u5090
  9447  0008C6  EF67  F004         
  9448                           u5091:
  9449  0008CA                     	goto	l6555
  9450  0008CA  EF35  F004         u5090:
  9451  0008CE                     	goto	l6573
  9452  0008CE  EF69  F004         	
  9453                           l695:; BSR set to: 0
  9454  0008D2                     
  9455                           	line	321
  9456                           	
  9457                           l6573:; BSR set to: 0
  9458  0008D2                     
  9459                           ;main.c: 321:                             dispLCD(1, 0, "       DELETED      ");
  9460                           	movlw	low(0)
  9461  0008D2  0E00               	movwf	((c:dispLCD@col)),c
  9462  0008D4  6E2E               		movlw	low(STR_13)
  9463  0008D6  0E0E               	movwf	((c:dispLCD@str)),c
  9464  0008D8  6E2F               	movlw	high(STR_13)
  9465  0008DA  0E7E               	movwf	((c:dispLCD@str+1)),c
  9466  0008DC  6E30               
  9467                           	movlw	(01h)&0ffh
  9468  0008DE  0E01               	
  9469                           	call	_dispLCD
  9470  0008E0  EC6F  F01E         	line	322
  9471                           ;main.c: 322:                             dispLCD(2, 0, "        MEMORY      ");
  9472                           	movlw	low(0)
  9473  0008E4  0E00               	movwf	((c:dispLCD@col)),c
  9474  0008E6  6E2E               		movlw	low(STR_14)
  9475  0008E8  0E23               	movwf	((c:dispLCD@str)),c
  9476  0008EA  6E2F               	movlw	high(STR_14)
  9477  0008EC  0E7E               	movwf	((c:dispLCD@str+1)),c
  9478  0008EE  6E30               
  9479                           	movlw	(02h)&0ffh
  9480  0008F0  0E02               	
  9481                           	call	_dispLCD
  9482  0008F2  EC6F  F01E         	line	324
  9483                           	
  9484                           l6575:
  9485  0008F6                     ;main.c: 324:                             setT1(1000);
  9486                           	movlw	low(03E8h)
  9487  0008F6  0EE8               	movwf	((c:setT1@c)),c
  9488  0008F8  6E2D               	movlw	high(03E8h)
  9489  0008FA  0E03               	movwf	((c:setT1@c+1)),c
  9490  0008FC  6E2E               	movlw	low highword(03E8h)
  9491  0008FE  0E00               	movwf	((c:setT1@c+2)),c
  9492  000900  6E2F               	movlw	high highword(03E8h)
  9493  000902  0E00               	movwf	((c:setT1@c+3)),c
  9494  000904  6E30               	call	_setT1	;wreg free
  9495  000906  EC47  F021         	line	325
  9496                           	
  9497                           l6577:
  9498  00090A                     ;main.c: 325:                             estado = 86;
  9499                           	movlw	low(056h)
  9500  00090A  0E56               	movlb	0	; () banked
  9501  00090C  0100               	movwf	((main@estado))&0ffh
  9502  00090E  6FBD               	line	326
  9503                           ;main.c: 326:                             break;
  9504                           	goto	l7063
  9505  000910  EF45  F00F         	line	328
  9506                           ;main.c: 328:              case 86:
  9507                           	
  9508                           l698:; BSR set to: 0
  9509  000914                     
  9510                           	line	329
  9511                           	
  9512                           l6579:; BSR set to: 0
  9513  000914                     
  9514                           ;main.c: 329:                             if(!statusT1())
  9515                           	call	_statusT1	;wreg free
  9516  000914  EC65  F021         	movf	(0+?_statusT1),c,w
  9517  000918  5027               iorwf	(1+?_statusT1),c,w
  9518  00091A  1028               iorwf	(2+?_statusT1),c,w
  9519  00091C  1029               iorwf	(3+?_statusT1),c,w
  9520  00091E  102A               	btfss	status,2
  9521  000920  A4D8               	goto	u5101
  9522  000922  EF95  F004         	goto	u5100
  9523  000926  EF97  F004         
  9524                           u5101:
  9525  00092A                     	goto	l7063
  9526  00092A  EF45  F00F         u5100:
  9527  00092E                     	line	330
  9528                           	
  9529                           l6581:
  9530  00092E                     ;main.c: 330:                                 estado = 80;
  9531                           	movlw	low(050h)
  9532  00092E  0E50               	movlb	0	; () banked
  9533  000930  0100               	movwf	((main@estado))&0ffh
  9534  000932  6FBD               	goto	l7063
  9535  000934  EF45  F00F         	
  9536                           l699:; BSR set to: 0
  9537  000938                     
  9538                           	line	331
  9539                           ;main.c: 331:                             break;
  9540                           	goto	l7063
  9541  000938  EF45  F00F         	line	333
  9542                           ;main.c: 333:              case 72:
  9543                           	
  9544                           l700:; BSR set to: 0
  9545  00093C                     
  9546                           	line	334
  9547                           	
  9548                           l6583:; BSR set to: 0
  9549  00093C                     
  9550                           ;main.c: 334:                             IHM.clr();
  9551                           	lfsr	2,(_IHM)+08h
  9552  00093C  EE20  F0D7         	call	u5118
  9553  000940  D802               	goto	u5119
  9554  000942  EFAD  F004         u5118:
  9555  000946                     	push
  9556  000946  0005               	movwf	pclath
  9557  000948  6EFA               	movf	postinc2,w
  9558  00094A  50DE               	movwf	tosl
  9559  00094C  6EFD               	movf	postinc2,w
  9560  00094E  50DE               	movwf	tosl+1
  9561  000950  6EFE               	movf	tblptru,w
  9562  000952  50F8               	movwf	tosl+2
  9563  000954  6EFF               	movf	pclath,w
  9564  000956  50FA               	
  9565                           	return	;indir
  9566  000958  0012               	u5119:
  9567  00095A                     	line	335
  9568                           	
  9569                           l6585:
  9570  00095A                     ;main.c: 335:                             IHM.print(" ESCOLHA A MEMORIA \n"
  9571                           		movlw	low(STR_15)
  9572  00095A  0E3E               	movwf	((c:dispLCD_str@str)),c
  9573  00095C  6E2E               	movlw	high(STR_15)
  9574  00095E  0E7C               	movwf	((c:dispLCD_str@str+1)),c
  9575  000960  6E2F               
  9576                           	lfsr	2,(_IHM)+02h
  9577  000962  EE20  F0D1         	call	u5128
  9578  000966  D802               	goto	u5129
  9579  000968  EFC0  F004         u5128:
  9580  00096C                     	push
  9581  00096C  0005               	movwf	pclath
  9582  00096E  6EFA               	movf	postinc2,w
  9583  000970  50DE               	movwf	tosl
  9584  000972  6EFD               	movf	postinc2,w
  9585  000974  50DE               	movwf	tosl+1
  9586  000976  6EFE               	movf	tblptru,w
  9587  000978  50F8               	movwf	tosl+2
  9588  00097A  6EFF               	movf	pclath,w
  9589  00097C  50FA               	
  9590                           	return	;indir
  9591  00097E  0012               	u5129:
  9592  000980                     	line	339
  9593                           	
  9594                           l6587:
  9595  000980                     ;main.c: 339:                             estado = 73;
  9596                           	movlw	low(049h)
  9597  000980  0E49               	movlb	0	; () banked
  9598  000982  0100               	movwf	((main@estado))&0ffh
  9599  000984  6FBD               	goto	l6589
  9600  000986  EFC5  F004         	line	341
  9601                           ;main.c: 341:              case 73:
  9602                           	
  9603                           l701:; BSR set to: 0
  9604  00098A                     
  9605                           	line	342
  9606                           	
  9607                           l6589:; BSR set to: 0
  9608  00098A                     
  9609                           ;main.c: 342:                             tecla = teclado_borda();
  9610                           	call	_teclado_borda	;wreg free
  9611  00098A  EC2D  F01F         	movlb	0	; () banked
  9612  00098E  0100               	movwf	((main@tecla))&0ffh
  9613  000990  6FBE               	line	343
  9614                           ;main.c: 343:                             switch(tecla)
  9615                           	goto	l6653
  9616  000992  EF41  F006         	line	345
  9617                           ;main.c: 344:                             {;main.c: 345:                                
                                  case '0':
  9618                           	
  9619                           l703:; BSR set to: 0
  9620  000996                     
  9621                           	goto	l6591
  9622  000996  EFDD  F004         	line	346
  9623                           ;main.c: 346:                                 case '1':
  9624                           	
  9625                           l704:; BSR set to: 0
  9626  00099A                     
  9627                           	goto	l6591
  9628  00099A  EFDD  F004         	line	347
  9629                           ;main.c: 347:                                 case '2':
  9630                           	
  9631                           l705:; BSR set to: 0
  9632  00099E                     
  9633                           	goto	l6591
  9634  00099E  EFDD  F004         	line	348
  9635                           ;main.c: 348:                                 case '3':
  9636                           	
  9637                           l706:; BSR set to: 0
  9638  0009A2                     
  9639                           	goto	l6591
  9640  0009A2  EFDD  F004         	line	349
  9641                           ;main.c: 349:                                 case '4':
  9642                           	
  9643                           l707:; BSR set to: 0
  9644  0009A6                     
  9645                           	goto	l6591
  9646  0009A6  EFDD  F004         	line	350
  9647                           ;main.c: 350:                                 case '5':
  9648                           	
  9649                           l708:; BSR set to: 0
  9650  0009AA                     
  9651                           	goto	l6591
  9652  0009AA  EFDD  F004         	line	351
  9653                           ;main.c: 351:                                 case '6':
  9654                           	
  9655                           l709:; BSR set to: 0
  9656  0009AE                     
  9657                           	goto	l6591
  9658  0009AE  EFDD  F004         	line	352
  9659                           ;main.c: 352:                                 case '7':
  9660                           	
  9661                           l710:; BSR set to: 0
  9662  0009B2                     
  9663                           	goto	l6591
  9664  0009B2  EFDD  F004         	line	353
  9665                           ;main.c: 353:                                 case '8':
  9666                           	
  9667                           l711:; BSR set to: 0
  9668  0009B6                     
  9669                           	goto	l6591
  9670  0009B6  EFDD  F004         	line	354
  9671                           ;main.c: 354:                                 case '9':
  9672                           	
  9673                           l712:; BSR set to: 0
  9674  0009BA                     
  9675                           	line	355
  9676                           	
  9677                           l6591:; BSR set to: 0
  9678  0009BA                     
  9679                           ;main.c: 355:                                            buscar_dado(10, tecla % 0x30, &
                                 init_cond);
  9680                           	movff	(main@tecla),(c:___awmod@dividend)
  9681  0009BA  C0BE  F027         	clrf	((c:___awmod@dividend+1)),c
  9682  0009BE  6A28               	movlw	high(030h)
  9683  0009C0  0E00               	movwf	((c:___awmod@divisor+1)),c
  9684  0009C2  6E2A               	movlw	low(030h)
  9685  0009C4  0E30               	movwf	((c:___awmod@divisor)),c
  9686  0009C6  6E29               	call	___awmod	;wreg free
  9687  0009C8  EC0E  F019         	movf	(0+?___awmod),c,w
  9688  0009CC  5027               	movwf	((c:buscar_dado@col)),c
  9689  0009CE  6E2D               		movlw	low(main@init_cond)
  9690  0009D0  0EB6               	movwf	((c:buscar_dado@data)),c
  9691  0009D2  6E2E               	movlw	high(main@init_cond)
  9692  0009D4  0E00               	movwf	((c:buscar_dado@data+1)),c
  9693  0009D6  6E2F               
  9694                           	movlw	(0Ah)&0ffh
  9695  0009D8  0E0A               	
  9696                           	call	_buscar_dado
  9697  0009DA  EC4B  F020         	line	356
  9698                           	
  9699                           l6593:
  9700  0009DE                     ;main.c: 356:                                            manipula_atuadores_init(init_co
                                 nd);
  9701                           	movlb	0	; () banked
  9702  0009DE  0100               	movf	((main@init_cond))&0ffh,w
  9703  0009E0  51B6               	
  9704                           	call	_manipula_atuadores_init
  9705  0009E2  EC5A  F01C         	line	358
  9706                           	
  9707                           l6595:
  9708  0009E6                     ;main.c: 358:                                            EEPROM.buscar(tecla % 0x30, vet
                                 or_aux);
  9709                           	lfsr	2,(_EEPROM)+02h
  9710  0009E6  EE20  F0DB         	call	u5138
  9711  0009EA  D802               	goto	u5139
  9712  0009EC  EF10  F005         u5138:
  9713  0009F0                     	push
  9714  0009F0  0005               	movwf	pclath
  9715  0009F2  6EFA               	movf	postinc2,w
  9716  0009F4  50DE               	movwf	tosl
  9717  0009F6  6EFD               	movf	postinc2,w
  9718  0009F8  50DE               	movwf	tosl+1
  9719  0009FA  6EFE               	movf	tblptru,w
  9720  0009FC  50F8               	movwf	tosl+2
  9721  0009FE  6EFF               	movf	pclath,w
  9722  000A00  50FA               	
  9723                           		movlw	low(main@vetor_aux)
  9724  000A02  0E76               	movwf	((c:buscar_receita@data)),c
  9725  000A04  6E2D               	movlw	high(main@vetor_aux)
  9726  000A06  0E00               	movwf	((c:buscar_receita@data+1)),c
  9727  000A08  6E2E               
  9728                           	movff	(main@tecla),(c:___awmod@dividend)
  9729  000A0A  C0BE  F027         	clrf	((c:___awmod@dividend+1)),c
  9730  000A0E  6A28               	movlw	high(030h)
  9731  000A10  0E00               	movwf	((c:___awmod@divisor+1)),c
  9732  000A12  6E2A               	movlw	low(030h)
  9733  000A14  0E30               	movwf	((c:___awmod@divisor)),c
  9734  000A16  6E29               	call	___awmod	;wreg free
  9735  000A18  EC0E  F019         	movf	(0+?___awmod),c,w
  9736  000A1C  5027               	
  9737                           	return	;indir
  9738  000A1E  0012               	u5139:
  9739  000A20                     	line	359
  9740                           	
  9741                           l6597:
  9742  000A20                     ;main.c: 359:                                            pt = vetor_aux;
  9743                           		movlw	low(main@vetor_aux)
  9744  000A20  0E76               	movlb	0	; () banked
  9745  000A22  0100               	movwf	((main@pt))&0ffh
  9746  000A24  6F9D               	movlw	high(main@vetor_aux)
  9747  000A26  0E00               	movwf	((main@pt+1))&0ffh
  9748  000A28  6F9E               
  9749                           	line	361
  9750                           	
  9751                           l6599:; BSR set to: 0
  9752  000A2A                     
  9753                           ;main.c: 361:                                            if(*pt == 0xFF)
  9754                           	movff	(main@pt),fsr2l
  9755  000A2A  C09D  FFD9         	movff	(main@pt+1),fsr2h
  9756  000A2E  C09E  FFDA         	incf	postinc2,w
  9757  000A32  28DE               	btfss	status,2
  9758  000A34  A4D8               	goto	u5141
  9759  000A36  EF1F  F005         	goto	u5140
  9760  000A3A  EF21  F005         
  9761                           u5141:
  9762  000A3E                     	goto	l6605
  9763  000A3E  EF3F  F005         u5140:
  9764  000A42                     	line	363
  9765                           	
  9766                           l6601:; BSR set to: 0
  9767  000A42                     
  9768                           ;main.c: 362:                                            {;main.c: 363:                 
                                                                EEPROM.deletar(tecla % 0x30);
  9769                           	lfsr	2,(_EEPROM)+04h
  9770  000A42  EE20  F0DD         	call	u5158
  9771  000A46  D802               	goto	u5159
  9772  000A48  EF3A  F005         u5158:
  9773  000A4C                     	push
  9774  000A4C  0005               	movwf	pclath
  9775  000A4E  6EFA               	movf	postinc2,w
  9776  000A50  50DE               	movwf	tosl
  9777  000A52  6EFD               	movf	postinc2,w
  9778  000A54  50DE               	movwf	tosl+1
  9779  000A56  6EFE               	movf	tblptru,w
  9780  000A58  50F8               	movwf	tosl+2
  9781  000A5A  6EFF               	movf	pclath,w
  9782  000A5C  50FA               	
  9783                           	movff	(main@tecla),(c:___awmod@dividend)
  9784  000A5E  C0BE  F027         	clrf	((c:___awmod@dividend+1)),c
  9785  000A62  6A28               	movlw	high(030h)
  9786  000A64  0E00               	movwf	((c:___awmod@divisor+1)),c
  9787  000A66  6E2A               	movlw	low(030h)
  9788  000A68  0E30               	movwf	((c:___awmod@divisor)),c
  9789  000A6A  6E29               	call	___awmod
  9790  000A6C  EC0E  F019         	movf	(0+?___awmod),c,w
  9791  000A70  5027               	
  9792                           	return	;indir
  9793  000A72  0012               	u5159:
  9794  000A74                     	line	364
  9795                           	
  9796                           l6603:
  9797  000A74                     ;main.c: 364:                                                vetor_aux[0] = 0;
  9798                           	movlw	low(0)
  9799  000A74  0E00               	movlb	0	; () banked
  9800  000A76  0100               	movwf	((main@vetor_aux))&0ffh
  9801  000A78  6F76               	goto	l6605
  9802  000A7A  EF3F  F005         	line	365
  9803                           ;main.c: 365:                                            }
  9804                           	
  9805                           l713:; BSR set to: 0
  9806  000A7E                     
  9807                           	line	368
  9808                           	
  9809                           l6605:; BSR set to: 0
  9810  000A7E                     
  9811                           ;main.c: 368:                                            for(char *ptr = vetor_aux; *ptr
                                  != 0; ptr++)
  9812                           		movlw	low(main@vetor_aux)
  9813  000A7E  0E76               	movwf	((main@ptr_939))&0ffh
  9814  000A80  6FBA               	movlw	high(main@vetor_aux)
  9815  000A82  0E00               	movwf	((main@ptr_939+1))&0ffh
  9816  000A84  6FBB               
  9817                           	goto	l6643
  9818  000A86  EF26  F006         	
  9819                           l715:; BSR set to: 0
  9820  000A8A                     
  9821                           	line	370
  9822                           	
  9823                           l6607:; BSR set to: 0
  9824  000A8A                     
  9825                           ;main.c: 369:                                            {;main.c: 370:                 
                                                                 if(*ptr <= 0x64 || *ptr == 0xFE)
  9826                           	movff	(main@ptr_939),fsr2l
  9827  000A8A  C0BA  FFD9         	movff	(main@ptr_939+1),fsr2h
  9828  000A8E  C0BB  FFDA         		movlw	065h-1
  9829  000A92  0E64               	cpfsgt	indf2
  9830  000A94  64DF               	goto	u5161
  9831  000A96  EF4F  F005         	goto	u5160
  9832  000A9A  EF51  F005         
  9833                           u5161:
  9834  000A9E                     	goto	l6611
  9835  000A9E  EF60  F005         u5160:
  9836  000AA2                     	
  9837                           l6609:; BSR set to: 0
  9838  000AA2                     
  9839                           	movff	(main@ptr_939),fsr2l
  9840  000AA2  C0BA  FFD9         	movff	(main@ptr_939+1),fsr2h
  9841  000AA6  C0BB  FFDA         	movlw	254
  9842  000AAA  0EFE               	xorwf	postinc2,w
  9843  000AAC  18DE               	btfss	status,2
  9844  000AAE  A4D8               	goto	u5171
  9845  000AB0  EF5C  F005         	goto	u5170
  9846  000AB4  EF5E  F005         
  9847                           u5171:
  9848  000AB8                     	goto	l6615
  9849  000AB8  EF6F  F005         u5170:
  9850  000ABC                     	goto	l6611
  9851  000ABC  EF60  F005         	
  9852                           l718:; BSR set to: 0
  9853  000AC0                     
  9854                           	line	372
  9855                           	
  9856                           l6611:; BSR set to: 0
  9857  000AC0                     
  9858                           ;main.c: 371:                                                 {;main.c: 372:            
                                                                          decodifica(&*ptr);
  9859                           		movff	(main@ptr_939),(c:decodifica@d)
  9860  000AC0  C0BA  F027         	movff	(main@ptr_939+1),(c:decodifica@d+1)
  9861  000AC4  C0BB  F028         
  9862                           	call	_decodifica
  9863  000AC8  ECC7  F014         	line	373
  9864                           	
  9865                           l6613:
  9866  000ACC                     ;main.c: 373:                                                     fifo_add_control(*ptr)
                                 ;
  9867                           	movff	(main@ptr_939),fsr2l
  9868  000ACC  C0BA  FFD9         	movff	(main@ptr_939+1),fsr2h
  9869  000AD0  C0BB  FFDA         	movf	indf2,w
  9870  000AD4  50DF               	
  9871                           	call	_fifo_add_control
  9872  000AD6  EC1B  F01E         	line	374
  9873                           ;main.c: 374:                                                 }
  9874                           	goto	l6639
  9875  000ADA  EF1F  F006         	line	375
  9876                           ;main.c: 375:                                                 else if (*ptr > 0x64 && *p
                                 tr <= 0xDC)
  9877                           	
  9878                           l716:
  9879  000ADE                     	
  9880                           l6615:
  9881  000ADE                     	movff	(main@ptr_939),fsr2l
  9882  000ADE  C0BA  FFD9         	movff	(main@ptr_939+1),fsr2h
  9883  000AE2  C0BB  FFDA         		movlw	065h-1
  9884  000AE6  0E64               	cpfsgt	indf2
  9885  000AE8  64DF               	goto	u5181
  9886  000AEA  EF79  F005         	goto	u5180
  9887  000AEE  EF7B  F005         
  9888                           u5181:
  9889  000AF2                     	goto	l6623
  9890  000AF2  EF96  F005         u5180:
  9891  000AF6                     	
  9892                           l6617:
  9893  000AF6                     	movff	(main@ptr_939),fsr2l
  9894  000AF6  C0BA  FFD9         	movff	(main@ptr_939+1),fsr2h
  9895  000AFA  C0BB  FFDA         		movlw	0DDh-0
  9896  000AFE  0EDD               	cpfslt	indf2
  9897  000B00  60DF               	goto	u5191
  9898  000B02  EF85  F005         	goto	u5190
  9899  000B06  EF87  F005         
  9900                           u5191:
  9901  000B0A                     	goto	l6623
  9902  000B0A  EF96  F005         u5190:
  9903  000B0E                     	line	377
  9904                           	
  9905                           l6619:
  9906  000B0E                     ;main.c: 376:                                                 {;main.c: 377:            
                                                                          decodifica(&*ptr);
  9907                           		movff	(main@ptr_939),(c:decodifica@d)
  9908  000B0E  C0BA  F027         	movff	(main@ptr_939+1),(c:decodifica@d+1)
  9909  000B12  C0BB  F028         
  9910                           	call	_decodifica	;wreg free
  9911  000B16  ECC7  F014         	line	378
  9912                           	
  9913                           l6621:
  9914  000B1A                     ;main.c: 378:                                                     fifo_add_tempo(*ptr);

  9915                           	movff	(main@ptr_939),fsr2l
  9916  000B1A  C0BA  FFD9         	movff	(main@ptr_939+1),fsr2h
  9917  000B1E  C0BB  FFDA         	movf	indf2,w
  9918  000B22  50DF               	
  9919                           	call	_fifo_add_tempo
  9920  000B24  EC8E  F01C         	line	379
  9921                           ;main.c: 379:                                                 }
  9922                           	goto	l6639
  9923  000B28  EF1F  F006         	line	380
  9924                           ;main.c: 380:                                                 else
  9925                           	
  9926                           l720:
  9927  000B2C                     	line	382
  9928                           	
  9929                           l6623:
  9930  000B2C                     ;main.c: 381:                                                 {;main.c: 382:            
                                                                          decodifica(&*ptr);
  9931                           		movff	(main@ptr_939),(c:decodifica@d)
  9932  000B2C  C0BA  F027         	movff	(main@ptr_939+1),(c:decodifica@d+1)
  9933  000B30  C0BB  F028         
  9934                           	call	_decodifica	;wreg free
  9935  000B34  ECC7  F014         	line	383
  9936                           ;main.c: 383:                                                     switch( *ptr )
  9937                           	goto	l6629
  9938  000B38  EFB6  F005         	line	385
  9939                           ;main.c: 384:                                                     {;main.c: 385:        
                                                                                  case 'A':
  9940                           	
  9941                           l723:
  9942  000B3C                     	goto	l6625
  9943  000B3C  EFAC  F005         	line	386
  9944                           ;main.c: 386:                                                         case 'B':
  9945                           	
  9946                           l724:
  9947  000B40                     	goto	l6625
  9948  000B40  EFAC  F005         	line	387
  9949                           ;main.c: 387:                                                         case 'C':
  9950                           	
  9951                           l725:
  9952  000B44                     	goto	l6625
  9953  000B44  EFAC  F005         	line	388
  9954                           ;main.c: 388:                                                         case 'D':
  9955                           	
  9956                           l726:
  9957  000B48                     	goto	l6625
  9958  000B48  EFAC  F005         	line	389
  9959                           ;main.c: 389:                                                         case 'a':
  9960                           	
  9961                           l727:
  9962  000B4C                     	goto	l6625
  9963  000B4C  EFAC  F005         	line	390
  9964                           ;main.c: 390:                                                         case 'b':
  9965                           	
  9966                           l728:
  9967  000B50                     	goto	l6625
  9968  000B50  EFAC  F005         	line	391
  9969                           ;main.c: 391:                                                         case 'c':
  9970                           	
  9971                           l729:
  9972  000B54                     	goto	l6625
  9973  000B54  EFAC  F005         	line	392
  9974                           ;main.c: 392:                                                         case 'd':
  9975                           	
  9976                           l730:
  9977  000B58                     	line	393
  9978                           	
  9979                           l6625:
  9980  000B58                     ;main.c: 393:                                                                 *ptr &= ~0
                                 x20;
  9981                           	movff	(main@ptr_939),fsr2l
  9982  000B58  C0BA  FFD9         	movff	(main@ptr_939+1),fsr2h
  9983  000B5C  C0BB  FFDA         	movlw	0DFh
  9984  000B60  0EDF               	andwf	indf2
  9985  000B62  16DF               	line	394
  9986                           ;main.c: 394:                                                                 break;
  9987                           	goto	l6631
  9988  000B64  EFE7  F005         	line	395
  9989                           	
  9990                           l6627:
  9991  000B68                     ;main.c: 395:                                                     }
  9992                           	goto	l6631
  9993  000B68  EFE7  F005         	
  9994                           l722:
  9995  000B6C                     	
  9996                           l6629:
  9997  000B6C                     	movff	(main@ptr_939),fsr2l
  9998  000B6C  C0BA  FFD9         	movff	(main@ptr_939+1),fsr2h
  9999  000B70  C0BB  FFDA         	movf	indf2,w
 10000  000B74  50DF               	movwf	(??_main+0+0)&0ffh,c
 10001  000B76  6E45               	clrf	(??_main+0+0+1)&0ffh,c
 10002  000B78  6A46               
 10003                           	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
 10004                           ; Switch size 1, requested type "space"
 10005                           ; Number of cases is 1, Range of values is 0 to 0
 10006                           ; switch strategies available:
 10007                           ; Name         Instructions Cycles
 10008                           ; simple_byte            4     3 (average)
 10009                           ;	Chosen strategy is simple_byte
 10010                           
 10011                           	movf ??_main+0+1,c,w
 10012  000B7A  5046               	xorlw	0^0	; case 0
 10013  000B7C  0A00               	skipnz
 10014  000B7E  B4D8               	goto	l7957
 10015  000B80  EFC4  F005         	goto	l6631
 10016  000B84  EFE7  F005         	
 10017                           l7957:
 10018  000B88                     ; Switch size 1, requested type "space"
 10019                           ; Number of cases is 8, Range of values is 65 to 100
 10020                           ; switch strategies available:
 10021                           ; Name         Instructions Cycles
 10022                           ; simple_byte           25    13 (average)
 10023                           ;	Chosen strategy is simple_byte
 10024                           
 10025                           	movf ??_main+0+0,c,w
 10026  000B88  5045               	xorlw	65^0	; case 65
 10027  000B8A  0A41               	skipnz
 10028  000B8C  B4D8               	goto	l6625
 10029  000B8E  EFAC  F005         	xorlw	66^65	; case 66
 10030  000B92  0A03               	skipnz
 10031  000B94  B4D8               	goto	l6625
 10032  000B96  EFAC  F005         	xorlw	67^66	; case 67
 10033  000B9A  0A01               	skipnz
 10034  000B9C  B4D8               	goto	l6625
 10035  000B9E  EFAC  F005         	xorlw	68^67	; case 68
 10036  000BA2  0A07               	skipnz
 10037  000BA4  B4D8               	goto	l6625
 10038  000BA6  EFAC  F005         	xorlw	97^68	; case 97
 10039  000BAA  0A25               	skipnz
 10040  000BAC  B4D8               	goto	l6625
 10041  000BAE  EFAC  F005         	xorlw	98^97	; case 98
 10042  000BB2  0A03               	skipnz
 10043  000BB4  B4D8               	goto	l6625
 10044  000BB6  EFAC  F005         	xorlw	99^98	; case 99
 10045  000BBA  0A01               	skipnz
 10046  000BBC  B4D8               	goto	l6625
 10047  000BBE  EFAC  F005         	xorlw	100^99	; case 100
 10048  000BC2  0A07               	skipnz
 10049  000BC4  B4D8               	goto	l6625
 10050  000BC6  EFAC  F005         	goto	l6631
 10051  000BCA  EFE7  F005         
 10052                           	
 10053                           l731:
 10054  000BCE                     	line	396
 10055                           	
 10056                           l6631:
 10057  000BCE                     ;main.c: 396:                                                     alt_atuador(*ptr);
 10058                           	movff	(main@ptr_939),fsr2l
 10059  000BCE  C0BA  FFD9         	movff	(main@ptr_939+1),fsr2h
 10060  000BD2  C0BB  FFDA         	movf	indf2,w
 10061  000BD6  50DF               	
 10062                           	call	_alt_atuador
 10063  000BD8  EC90  F01A         	line	397
 10064                           ;main.c: 397:                                                     fifo_add( ler_atuador(
                                 *ptr) ? *ptr : *ptr|0x20 );
 10065                           	movff	(main@ptr_939),fsr2l
 10066  000BDC  C0BA  FFD9         	movff	(main@ptr_939+1),fsr2h
 10067  000BE0  C0BB  FFDA         	movf	indf2,w
 10068  000BE4  50DF               	
 10069                           	call	_ler_atuador
 10070  000BE6  EC7A  F019         	iorlw	0
 10071  000BEA  0900               	btfss	status,2
 10072  000BEC  A4D8               	goto	u5201
 10073  000BEE  EFFB  F005         	goto	u5200
 10074  000BF2  EFFD  F005         u5201:
 10075  000BF6                     	goto	l6635
 10076  000BF6  EF0C  F006         u5200:
 10077  000BFA                     	
 10078                           l6633:
 10079  000BFA                     	movff	(main@ptr_939),fsr2l
 10080  000BFA  C0BA  FFD9         	movff	(main@ptr_939+1),fsr2h
 10081  000BFE  C0BB  FFDA         	movf	indf2,w
 10082  000C02  50DF               	movwf	(??_main+0+0)&0ffh,c
 10083  000C04  6E45               	clrf	(??_main+0+0+1)&0ffh,c
 10084  000C06  6A46               
 10085                           	movlw	020h
 10086  000C08  0E20               	iorwf	(??_main+0+0),c,w
 10087  000C0A  1045               	movlb	0	; () banked
 10088  000C0C  0100               	movwf	((_main$940))&0ffh
 10089  000C0E  6F88               	movf	(??_main+0+1),c,w
 10090  000C10  5046               	movwf	1+((_main$940))&0ffh
 10091  000C12  6F89               	goto	l6637
 10092  000C14  EF18  F006         	
 10093                           l733:; BSR set to: 0
 10094  000C18                     
 10095                           	
 10096                           l6635:
 10097  000C18                     	movff	(main@ptr_939),fsr2l
 10098  000C18  C0BA  FFD9         	movff	(main@ptr_939+1),fsr2h
 10099  000C1C  C0BB  FFDA         	movf	indf2,w
 10100  000C20  50DF               	movwf	(??_main+0+0)&0ffh,c
 10101  000C22  6E45               	movf	((??_main+0+0)),c,w
 10102  000C24  5045               	movlb	0	; () banked
 10103  000C26  0100               	movwf	((_main$940))&0ffh
 10104  000C28  6F88               	clrf	((_main$940+1))&0ffh
 10105  000C2A  6B89               	goto	l6637
 10106  000C2C  EF18  F006         	
 10107                           l735:; BSR set to: 0
 10108  000C30                     
 10109                           	
 10110                           l6637:; BSR set to: 0
 10111  000C30                     
 10112                           	movf	((_main$940))&0ffh,w
 10113  000C30  5188               	
 10114                           	call	_fifo_add
 10115  000C32  ECC2  F01C         	goto	l6639
 10116  000C36  EF1F  F006         	line	398
 10117                           ;main.c: 398:                                                 }
 10118                           	
 10119                           l721:
 10120  000C3A                     	goto	l6639
 10121  000C3A  EF1F  F006         	
 10122                           l719:
 10123  000C3E                     	line	399
 10124                           	
 10125                           l6639:
 10126  000C3E                     ;main.c: 399:                                                 fifo_print();
 10127                           	call	_fifo_print	;wreg free
 10128  000C3E  ECC9  F010         	line	400
 10129                           	
 10130                           l6641:
 10131  000C42                     ;main.c: 400:                                            }
 10132                           	movlb	0	; () banked
 10133  000C42  0100               	infsnz	((main@ptr_939))&0ffh
 10134  000C44  4BBA               	incf	((main@ptr_939+1))&0ffh
 10135  000C46  2BBB               	goto	l6643
 10136  000C48  EF26  F006         	
 10137                           l714:; BSR set to: 0
 10138  000C4C                     
 10139                           	
 10140                           l6643:; BSR set to: 0
 10141  000C4C                     
 10142                           	movff	(main@ptr_939),fsr2l
 10143  000C4C  C0BA  FFD9         	movff	(main@ptr_939+1),fsr2h
 10144  000C50  C0BB  FFDA         	movf	indf2,w
 10145  000C54  50DF               	btfss	status,2
 10146  000C56  A4D8               	goto	u5211
 10147  000C58  EF30  F006         	goto	u5210
 10148  000C5C  EF32  F006         u5211:
 10149  000C60                     	goto	l6607
 10150  000C60  EF45  F005         u5210:
 10151  000C64                     	goto	l6645
 10152  000C64  EF34  F006         	
 10153                           l736:; BSR set to: 0
 10154  000C68                     
 10155                           	line	402
 10156                           	
 10157                           l6645:; BSR set to: 0
 10158  000C68                     
 10159                           ;main.c: 402:                                            dispLCD_clr();
 10160                           	call	_dispLCD_clr	;wreg free
 10161  000C68  EC9A  F021         	line	403
 10162                           	
 10163                           l6647:
 10164  000C6C                     ;main.c: 403:                                            estado = 16;
 10165                           	movlw	low(010h)
 10166  000C6C  0E10               	movlb	0	; () banked
 10167  000C6E  0100               	movwf	((main@estado))&0ffh
 10168  000C70  6FBD               	line	404
 10169                           ;main.c: 404:                                            break;
 10170                           	goto	l7063
 10171  000C72  EF45  F00F         	line	406
 10172                           ;main.c: 406:                                 case '*': estado = 8; break;
 10173                           	
 10174                           l738:; BSR set to: 0
 10175  000C76                     
 10176                           	
 10177                           l6649:; BSR set to: 0
 10178  000C76                     
 10179                           	movlw	low(08h)
 10180  000C76  0E08               	movwf	((main@estado))&0ffh
 10181  000C78  6FBD               	goto	l7063
 10182  000C7A  EF45  F00F         	line	407
 10183                           	
 10184                           l6651:; BSR set to: 0
 10185  000C7E                     
 10186                           ;main.c: 407:                             }
 10187                           	goto	l7063
 10188  000C7E  EF45  F00F         	
 10189                           l702:; BSR set to: 0
 10190  000C82                     
 10191                           	
 10192                           l6653:; BSR set to: 0
 10193  000C82                     
 10194                           	movf	((main@tecla))&0ffh,w
 10195  000C82  51BE               	movwf	(??_main+0+0)&0ffh,c
 10196  000C84  6E45               	clrf	(??_main+0+0+1)&0ffh,c
 10197  000C86  6A46               
 10198                           	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
 10199                           ; Switch size 1, requested type "space"
 10200                           ; Number of cases is 1, Range of values is 0 to 0
 10201                           ; switch strategies available:
 10202                           ; Name         Instructions Cycles
 10203                           ; simple_byte            4     3 (average)
 10204                           ;	Chosen strategy is simple_byte
 10205                           
 10206                           	movf ??_main+0+1,c,w
 10207  000C88  5046               	xorlw	0^0	; case 0
 10208  000C8A  0A00               	skipnz
 10209  000C8C  B4D8               	goto	l7959
 10210  000C8E  EF4B  F006         	goto	l7063
 10211  000C92  EF45  F00F         	
 10212                           l7959:; BSR set to: 0
 10213  000C96                     
 10214                           ; Switch size 1, requested type "space"
 10215                           ; Number of cases is 11, Range of values is 42 to 57
 10216                           ; switch strategies available:
 10217                           ; Name         Instructions Cycles
 10218                           ; simple_byte           34    18 (average)
 10219                           ;	Chosen strategy is simple_byte
 10220                           
 10221                           	movf ??_main+0+0,c,w
 10222  000C96  5045               	xorlw	42^0	; case 42
 10223  000C98  0A2A               	skipnz
 10224  000C9A  B4D8               	goto	l6649
 10225  000C9C  EF3B  F006         	xorlw	48^42	; case 48
 10226  000CA0  0A1A               	skipnz
 10227  000CA2  B4D8               	goto	l6591
 10228  000CA4  EFDD  F004         	xorlw	49^48	; case 49
 10229  000CA8  0A01               	skipnz
 10230  000CAA  B4D8               	goto	l6591
 10231  000CAC  EFDD  F004         	xorlw	50^49	; case 50
 10232  000CB0  0A03               	skipnz
 10233  000CB2  B4D8               	goto	l6591
 10234  000CB4  EFDD  F004         	xorlw	51^50	; case 51
 10235  000CB8  0A01               	skipnz
 10236  000CBA  B4D8               	goto	l6591
 10237  000CBC  EFDD  F004         	xorlw	52^51	; case 52
 10238  000CC0  0A07               	skipnz
 10239  000CC2  B4D8               	goto	l6591
 10240  000CC4  EFDD  F004         	xorlw	53^52	; case 53
 10241  000CC8  0A01               	skipnz
 10242  000CCA  B4D8               	goto	l6591
 10243  000CCC  EFDD  F004         	xorlw	54^53	; case 54
 10244  000CD0  0A03               	skipnz
 10245  000CD2  B4D8               	goto	l6591
 10246  000CD4  EFDD  F004         	xorlw	55^54	; case 55
 10247  000CD8  0A01               	skipnz
 10248  000CDA  B4D8               	goto	l6591
 10249  000CDC  EFDD  F004         	xorlw	56^55	; case 56
 10250  000CE0  0A0F               	skipnz
 10251  000CE2  B4D8               	goto	l6591
 10252  000CE4  EFDD  F004         	xorlw	57^56	; case 57
 10253  000CE8  0A01               	skipnz
 10254  000CEA  B4D8               	goto	l6591
 10255  000CEC  EFDD  F004         	goto	l7063
 10256  000CF0  EF45  F00F         
 10257                           	
 10258                           l737:; BSR set to: 0
 10259  000CF4                     
 10260                           	line	408
 10261                           ;main.c: 408:                             break;
 10262                           	goto	l7063
 10263  000CF4  EF45  F00F         	line	410
 10264                           ;main.c: 410:              case 3:
 10265                           	
 10266                           l739:; BSR set to: 0
 10267  000CF8                     
 10268                           	line	411
 10269                           	
 10270                           l6655:; BSR set to: 0
 10271  000CF8                     
 10272                           ;main.c: 411:                             IHM.clr();
 10273                           	lfsr	2,(_IHM)+08h
 10274  000CF8  EE20  F0D7         	call	u5228
 10275  000CFC  D802               	goto	u5229
 10276  000CFE  EF8B  F006         u5228:
 10277  000D02                     	push
 10278  000D02  0005               	movwf	pclath
 10279  000D04  6EFA               	movf	postinc2,w
 10280  000D06  50DE               	movwf	tosl
 10281  000D08  6EFD               	movf	postinc2,w
 10282  000D0A  50DE               	movwf	tosl+1
 10283  000D0C  6EFE               	movf	tblptru,w
 10284  000D0E  50F8               	movwf	tosl+2
 10285  000D10  6EFF               	movf	pclath,w
 10286  000D12  50FA               	
 10287                           	return	;indir
 10288  000D14  0012               	u5229:
 10289  000D16                     	line	412
 10290                           	
 10291                           l6657:
 10292  000D16                     ;main.c: 412:                             IHM.printpos(0, 0, "   AJUSTE O INICIO  ");
 10293                           	lfsr	2,(_IHM)+04h
 10294  000D16  EE20  F0D3         	call	u5238
 10295  000D1A  D802               	goto	u5239
 10296  000D1C  EFA1  F006         u5238:
 10297  000D20                     	push
 10298  000D20  0005               	movwf	pclath
 10299  000D22  6EFA               	movf	postinc2,w
 10300  000D24  50DE               	movwf	tosl
 10301  000D26  6EFD               	movf	postinc2,w
 10302  000D28  50DE               	movwf	tosl+1
 10303  000D2A  6EFE               	movf	tblptru,w
 10304  000D2C  50F8               	movwf	tosl+2
 10305  000D2E  6EFF               	movf	pclath,w
 10306  000D30  50FA               	
 10307                           	movlw	low(0)
 10308  000D32  0E00               	movwf	((c:dispLCD@col)),c
 10309  000D34  6E2E               		movlw	low(STR_16)
 10310  000D36  0EB6               	movwf	((c:dispLCD@str)),c
 10311  000D38  6E2F               	movlw	high(STR_16)
 10312  000D3A  0E7E               	movwf	((c:dispLCD@str+1)),c
 10313  000D3C  6E30               
 10314                           	movlw	(0)&0ffh
 10315  000D3E  0E00               	
 10316                           	return	;indir
 10317  000D40  0012               	u5239:
 10318  000D42                     	line	413
 10319                           	
 10320                           l6659:
 10321  000D42                     ;main.c: 413:                             IHM.printpos(1, 0, "     DO SISTEMA     ");
 10322                           	lfsr	2,(_IHM)+04h
 10323  000D42  EE20  F0D3         	call	u5248
 10324  000D46  D802               	goto	u5249
 10325  000D48  EFB7  F006         u5248:
 10326  000D4C                     	push
 10327  000D4C  0005               	movwf	pclath
 10328  000D4E  6EFA               	movf	postinc2,w
 10329  000D50  50DE               	movwf	tosl
 10330  000D52  6EFD               	movf	postinc2,w
 10331  000D54  50DE               	movwf	tosl+1
 10332  000D56  6EFE               	movf	tblptru,w
 10333  000D58  50F8               	movwf	tosl+2
 10334  000D5A  6EFF               	movf	pclath,w
 10335  000D5C  50FA               	
 10336                           	movlw	low(0)
 10337  000D5E  0E00               	movwf	((c:dispLCD@col)),c
 10338  000D60  6E2E               		movlw	low(STR_17)
 10339  000D62  0E62               	movwf	((c:dispLCD@str)),c
 10340  000D64  6E2F               	movlw	high(STR_17)
 10341  000D66  0E7E               	movwf	((c:dispLCD@str+1)),c
 10342  000D68  6E30               
 10343                           	movlw	(01h)&0ffh
 10344  000D6A  0E01               	
 10345                           	return	;indir
 10346  000D6C  0012               	u5249:
 10347  000D6E                     	line	414
 10348                           	
 10349                           l6661:
 10350  000D6E                     ;main.c: 414:                             estado = 6;
 10351                           	movlw	low(06h)
 10352  000D6E  0E06               	movlb	0	; () banked
 10353  000D70  0100               	movwf	((main@estado))&0ffh
 10354  000D72  6FBD               	line	415
 10355                           ;main.c: 415:                             break;
 10356                           	goto	l7063
 10357  000D74  EF45  F00F         	line	417
 10358                           ;main.c: 417:             case 6:
 10359                           	
 10360                           l740:; BSR set to: 0
 10361  000D78                     
 10362                           	line	418
 10363                           	
 10364                           l6663:; BSR set to: 0
 10365  000D78                     
 10366                           ;main.c: 418:                             IHM.printpos(3,0,"   A   B   C   D    ");
 10367                           	lfsr	2,(_IHM)+04h
 10368  000D78  EE20  F0D3         	call	u5258
 10369  000D7C  D802               	goto	u5259
 10370  000D7E  EFD2  F006         u5258:
 10371  000D82                     	push
 10372  000D82  0005               	movwf	pclath
 10373  000D84  6EFA               	movf	postinc2,w
 10374  000D86  50DE               	movwf	tosl
 10375  000D88  6EFD               	movf	postinc2,w
 10376  000D8A  50DE               	movwf	tosl+1
 10377  000D8C  6EFE               	movf	tblptru,w
 10378  000D8E  50F8               	movwf	tosl+2
 10379  000D90  6EFF               	movf	pclath,w
 10380  000D92  50FA               	
 10381                           	movlw	low(0)
 10382  000D94  0E00               	movwf	((c:dispLCD@col)),c
 10383  000D96  6E2E               		movlw	low(STR_18)
 10384  000D98  0E77               	movwf	((c:dispLCD@str)),c
 10385  000D9A  6E2F               	movlw	high(STR_18)
 10386  000D9C  0E7E               	movwf	((c:dispLCD@str+1)),c
 10387  000D9E  6E30               
 10388                           	movlw	(03h)&0ffh
 10389  000DA0  0E03               	
 10390                           	return	;indir
 10391  000DA2  0012               	u5259:
 10392  000DA4                     	line	419
 10393                           	
 10394                           l6665:
 10395  000DA4                     ;main.c: 419:                             dispLCD_lincol(3, 4); dispLCD_dataReg(ler_atua
                                 dor('A') ? '+' : '-');
 10396                           	movlw	low(04h)
 10397  000DA4  0E04               	movwf	((c:dispLCD_lincol@col)),c
 10398  000DA6  6E29               	movlw	(03h)&0ffh
 10399  000DA8  0E03               	
 10400                           	call	_dispLCD_lincol
 10401  000DAA  EC5C  F01D         	
 10402                           l6667:
 10403  000DAE                     	movlw	(041h)&0ffh
 10404  000DAE  0E41               	
 10405                           	call	_ler_atuador
 10406  000DB0  EC7A  F019         	iorlw	0
 10407  000DB4  0900               	btfss	status,2
 10408  000DB6  A4D8               	goto	u5261
 10409  000DB8  EFE0  F006         	goto	u5260
 10410  000DBC  EFE2  F006         u5261:
 10411  000DC0                     	goto	l6671
 10412  000DC0  EFE9  F006         u5260:
 10413  000DC4                     	
 10414                           l6669:
 10415  000DC4                     	movlw	high(02Dh)
 10416  000DC4  0E00               	movlb	0	; () banked
 10417  000DC6  0100               	movwf	((_main$944+1))&0ffh
 10418  000DC8  6F8B               	movlw	low(02Dh)
 10419  000DCA  0E2D               	movwf	((_main$944))&0ffh
 10420  000DCC  6F8A               	goto	l6673
 10421  000DCE  EFF0  F006         	
 10422                           l742:; BSR set to: 0
 10423  000DD2                     
 10424                           	
 10425                           l6671:
 10426  000DD2                     	movlw	high(02Bh)
 10427  000DD2  0E00               	movlb	0	; () banked
 10428  000DD4  0100               	movwf	((_main$944+1))&0ffh
 10429  000DD6  6F8B               	movlw	low(02Bh)
 10430  000DD8  0E2B               	movwf	((_main$944))&0ffh
 10431  000DDA  6F8A               	goto	l6673
 10432  000DDC  EFF0  F006         	
 10433                           l744:; BSR set to: 0
 10434  000DE0                     
 10435                           	
 10436                           l6673:; BSR set to: 0
 10437  000DE0                     
 10438                           	movf	((_main$944))&0ffh,w
 10439  000DE0  518A               	
 10440                           	call	_dispLCD_dataReg
 10441  000DE2  EC97  F01E         	line	420
 10442                           	
 10443                           l6675:
 10444  000DE6                     ;main.c: 420:                             dispLCD_lincol(3, 8);dispLCD_dataReg(ler_atuad
                                 or('B') ? '+' : '-');
 10445                           	movlw	low(08h)
 10446  000DE6  0E08               	movwf	((c:dispLCD_lincol@col)),c
 10447  000DE8  6E29               	movlw	(03h)&0ffh
 10448  000DEA  0E03               	
 10449                           	call	_dispLCD_lincol
 10450  000DEC  EC5C  F01D         	
 10451                           l6677:
 10452  000DF0                     	movlw	(042h)&0ffh
 10453  000DF0  0E42               	
 10454                           	call	_ler_atuador
 10455  000DF2  EC7A  F019         	iorlw	0
 10456  000DF6  0900               	btfss	status,2
 10457  000DF8  A4D8               	goto	u5271
 10458  000DFA  EF01  F007         	goto	u5270
 10459  000DFE  EF03  F007         u5271:
 10460  000E02                     	goto	l6681
 10461  000E02  EF0A  F007         u5270:
 10462  000E06                     	
 10463                           l6679:
 10464  000E06                     	movlw	high(02Dh)
 10465  000E06  0E00               	movlb	0	; () banked
 10466  000E08  0100               	movwf	((_main$945+1))&0ffh
 10467  000E0A  6F8D               	movlw	low(02Dh)
 10468  000E0C  0E2D               	movwf	((_main$945))&0ffh
 10469  000E0E  6F8C               	goto	l6683
 10470  000E10  EF11  F007         	
 10471                           l746:; BSR set to: 0
 10472  000E14                     
 10473                           	
 10474                           l6681:
 10475  000E14                     	movlw	high(02Bh)
 10476  000E14  0E00               	movlb	0	; () banked
 10477  000E16  0100               	movwf	((_main$945+1))&0ffh
 10478  000E18  6F8D               	movlw	low(02Bh)
 10479  000E1A  0E2B               	movwf	((_main$945))&0ffh
 10480  000E1C  6F8C               	goto	l6683
 10481  000E1E  EF11  F007         	
 10482                           l748:; BSR set to: 0
 10483  000E22                     
 10484                           	
 10485                           l6683:; BSR set to: 0
 10486  000E22                     
 10487                           	movf	((_main$945))&0ffh,w
 10488  000E22  518C               	
 10489                           	call	_dispLCD_dataReg
 10490  000E24  EC97  F01E         	line	421
 10491                           	
 10492                           l6685:
 10493  000E28                     ;main.c: 421:                             dispLCD_lincol(3, 12);dispLCD_dataReg(ler_atua
                                 dor('C') ? '+' : '-');
 10494                           	movlw	low(0Ch)
 10495  000E28  0E0C               	movwf	((c:dispLCD_lincol@col)),c
 10496  000E2A  6E29               	movlw	(03h)&0ffh
 10497  000E2C  0E03               	
 10498                           	call	_dispLCD_lincol
 10499  000E2E  EC5C  F01D         	
 10500                           l6687:
 10501  000E32                     	movlw	(043h)&0ffh
 10502  000E32  0E43               	
 10503                           	call	_ler_atuador
 10504  000E34  EC7A  F019         	iorlw	0
 10505  000E38  0900               	btfss	status,2
 10506  000E3A  A4D8               	goto	u5281
 10507  000E3C  EF22  F007         	goto	u5280
 10508  000E40  EF24  F007         u5281:
 10509  000E44                     	goto	l6691
 10510  000E44  EF2B  F007         u5280:
 10511  000E48                     	
 10512                           l6689:
 10513  000E48                     	movlw	high(02Dh)
 10514  000E48  0E00               	movlb	0	; () banked
 10515  000E4A  0100               	movwf	((_main$946+1))&0ffh
 10516  000E4C  6F8F               	movlw	low(02Dh)
 10517  000E4E  0E2D               	movwf	((_main$946))&0ffh
 10518  000E50  6F8E               	goto	l6693
 10519  000E52  EF32  F007         	
 10520                           l750:; BSR set to: 0
 10521  000E56                     
 10522                           	
 10523                           l6691:
 10524  000E56                     	movlw	high(02Bh)
 10525  000E56  0E00               	movlb	0	; () banked
 10526  000E58  0100               	movwf	((_main$946+1))&0ffh
 10527  000E5A  6F8F               	movlw	low(02Bh)
 10528  000E5C  0E2B               	movwf	((_main$946))&0ffh
 10529  000E5E  6F8E               	goto	l6693
 10530  000E60  EF32  F007         	
 10531                           l752:; BSR set to: 0
 10532  000E64                     
 10533                           	
 10534                           l6693:; BSR set to: 0
 10535  000E64                     
 10536                           	movf	((_main$946))&0ffh,w
 10537  000E64  518E               	
 10538                           	call	_dispLCD_dataReg
 10539  000E66  EC97  F01E         	line	422
 10540                           	
 10541                           l6695:
 10542  000E6A                     ;main.c: 422:                             dispLCD_lincol(3, 16);dispLCD_dataReg(ler_atua
                                 dor('D') ? '+' : '-');
 10543                           	movlw	low(010h)
 10544  000E6A  0E10               	movwf	((c:dispLCD_lincol@col)),c
 10545  000E6C  6E29               	movlw	(03h)&0ffh
 10546  000E6E  0E03               	
 10547                           	call	_dispLCD_lincol
 10548  000E70  EC5C  F01D         	
 10549                           l6697:
 10550  000E74                     	movlw	(044h)&0ffh
 10551  000E74  0E44               	
 10552                           	call	_ler_atuador
 10553  000E76  EC7A  F019         	iorlw	0
 10554  000E7A  0900               	btfss	status,2
 10555  000E7C  A4D8               	goto	u5291
 10556  000E7E  EF43  F007         	goto	u5290
 10557  000E82  EF45  F007         u5291:
 10558  000E86                     	goto	l6701
 10559  000E86  EF4C  F007         u5290:
 10560  000E8A                     	
 10561                           l6699:
 10562  000E8A                     	movlw	high(02Dh)
 10563  000E8A  0E00               	movlb	0	; () banked
 10564  000E8C  0100               	movwf	((_main$947+1))&0ffh
 10565  000E8E  6F91               	movlw	low(02Dh)
 10566  000E90  0E2D               	movwf	((_main$947))&0ffh
 10567  000E92  6F90               	goto	l6703
 10568  000E94  EF53  F007         	
 10569                           l754:; BSR set to: 0
 10570  000E98                     
 10571                           	
 10572                           l6701:
 10573  000E98                     	movlw	high(02Bh)
 10574  000E98  0E00               	movlb	0	; () banked
 10575  000E9A  0100               	movwf	((_main$947+1))&0ffh
 10576  000E9C  6F91               	movlw	low(02Bh)
 10577  000E9E  0E2B               	movwf	((_main$947))&0ffh
 10578  000EA0  6F90               	goto	l6703
 10579  000EA2  EF53  F007         	
 10580                           l756:; BSR set to: 0
 10581  000EA6                     
 10582                           	
 10583                           l6703:; BSR set to: 0
 10584  000EA6                     
 10585                           	movf	((_main$947))&0ffh,w
 10586  000EA6  5190               	
 10587                           	call	_dispLCD_dataReg
 10588  000EA8  EC97  F01E         	line	423
 10589                           	
 10590                           l6705:
 10591  000EAC                     ;main.c: 423:                             estado = 7;
 10592                           	movlw	low(07h)
 10593  000EAC  0E07               	movlb	0	; () banked
 10594  000EAE  0100               	movwf	((main@estado))&0ffh
 10595  000EB0  6FBD               	line	424
 10596                           ;main.c: 424:                             break;
 10597                           	goto	l7063
 10598  000EB2  EF45  F00F         	line	426
 10599                           ;main.c: 426:             case 7:
 10600                           	
 10601                           l757:; BSR set to: 0
 10602  000EB6                     
 10603                           	line	427
 10604                           	
 10605                           l6707:; BSR set to: 0
 10606  000EB6                     
 10607                           ;main.c: 427:                             tecla = teclado_borda();
 10608                           	call	_teclado_borda	;wreg free
 10609  000EB6  EC2D  F01F         	movlb	0	; () banked
 10610  000EBA  0100               	movwf	((main@tecla))&0ffh
 10611  000EBC  6FBE               	line	428
 10612                           ;main.c: 428:                             switch(tecla)
 10613                           	goto	l6747
 10614  000EBE  EF07  F008         	line	430
 10615                           ;main.c: 429:                             {;main.c: 430:                                
                                  case 'A': alt_atuador(tecla); dispLCD_lincol(3, 4); dispLCD_dataReg(ler_atuador('A') ? 
                                 '+' : '-'); break;
 10616                           	
 10617                           l759:; BSR set to: 0
 10618  000EC2                     
 10619                           	
 10620                           l6709:; BSR set to: 0
 10621  000EC2                     
 10622                           	movf	((main@tecla))&0ffh,w
 10623  000EC2  51BE               	
 10624                           	call	_alt_atuador
 10625  000EC4  EC90  F01A         	movlw	low(04h)
 10626  000EC8  0E04               	movwf	((c:dispLCD_lincol@col)),c
 10627  000ECA  6E29               	movlw	(03h)&0ffh
 10628  000ECC  0E03               	
 10629                           	call	_dispLCD_lincol
 10630  000ECE  EC5C  F01D         	movlw	(041h)&0ffh
 10631  000ED2  0E41               	
 10632                           	call	_ler_atuador
 10633  000ED4  EC7A  F019         	iorlw	0
 10634  000ED8  0900               	btfss	status,2
 10635  000EDA  A4D8               	goto	u5301
 10636  000EDC  EF72  F007         	goto	u5300
 10637  000EE0  EF74  F007         u5301:
 10638  000EE4                     	goto	l6713
 10639  000EE4  EF7B  F007         u5300:
 10640  000EE8                     	
 10641                           l6711:
 10642  000EE8                     	movlw	high(02Dh)
 10643  000EE8  0E00               	movlb	0	; () banked
 10644  000EEA  0100               	movwf	((_main$948+1))&0ffh
 10645  000EEC  6F93               	movlw	low(02Dh)
 10646  000EEE  0E2D               	movwf	((_main$948))&0ffh
 10647  000EF0  6F92               	goto	l6715
 10648  000EF2  EF82  F007         	
 10649                           l761:; BSR set to: 0
 10650  000EF6                     
 10651                           	
 10652                           l6713:
 10653  000EF6                     	movlw	high(02Bh)
 10654  000EF6  0E00               	movlb	0	; () banked
 10655  000EF8  0100               	movwf	((_main$948+1))&0ffh
 10656  000EFA  6F93               	movlw	low(02Bh)
 10657  000EFC  0E2B               	movwf	((_main$948))&0ffh
 10658  000EFE  6F92               	goto	l6715
 10659  000F00  EF82  F007         	
 10660                           l763:; BSR set to: 0
 10661  000F04                     
 10662                           	
 10663                           l6715:; BSR set to: 0
 10664  000F04                     
 10665                           	movf	((_main$948))&0ffh,w
 10666  000F04  5192               	
 10667                           	call	_dispLCD_dataReg
 10668  000F06  EC97  F01E         	goto	l7063
 10669  000F0A  EF45  F00F         	line	431
 10670                           ;main.c: 431:                                 case 'B': alt_atuador(tecla); dispLCD_linc
                                 ol(3, 8); dispLCD_dataReg(ler_atuador('B') ? '+' : '-'); break;
 10671                           	
 10672                           l765:
 10673  000F0E                     	
 10674                           l6717:
 10675  000F0E                     	movlb	0	; () banked
 10676  000F0E  0100               	movf	((main@tecla))&0ffh,w
 10677  000F10  51BE               	
 10678                           	call	_alt_atuador
 10679  000F12  EC90  F01A         	movlw	low(08h)
 10680  000F16  0E08               	movwf	((c:dispLCD_lincol@col)),c
 10681  000F18  6E29               	movlw	(03h)&0ffh
 10682  000F1A  0E03               	
 10683                           	call	_dispLCD_lincol
 10684  000F1C  EC5C  F01D         	movlw	(042h)&0ffh
 10685  000F20  0E42               	
 10686                           	call	_ler_atuador
 10687  000F22  EC7A  F019         	iorlw	0
 10688  000F26  0900               	btfss	status,2
 10689  000F28  A4D8               	goto	u5311
 10690  000F2A  EF99  F007         	goto	u5310
 10691  000F2E  EF9B  F007         u5311:
 10692  000F32                     	goto	l6721
 10693  000F32  EFA2  F007         u5310:
 10694  000F36                     	
 10695                           l6719:
 10696  000F36                     	movlw	high(02Dh)
 10697  000F36  0E00               	movlb	0	; () banked
 10698  000F38  0100               	movwf	((_main$949+1))&0ffh
 10699  000F3A  6F95               	movlw	low(02Dh)
 10700  000F3C  0E2D               	movwf	((_main$949))&0ffh
 10701  000F3E  6F94               	goto	l6723
 10702  000F40  EFA9  F007         	
 10703                           l767:; BSR set to: 0
 10704  000F44                     
 10705                           	
 10706                           l6721:
 10707  000F44                     	movlw	high(02Bh)
 10708  000F44  0E00               	movlb	0	; () banked
 10709  000F46  0100               	movwf	((_main$949+1))&0ffh
 10710  000F48  6F95               	movlw	low(02Bh)
 10711  000F4A  0E2B               	movwf	((_main$949))&0ffh
 10712  000F4C  6F94               	goto	l6723
 10713  000F4E  EFA9  F007         	
 10714                           l769:; BSR set to: 0
 10715  000F52                     
 10716                           	
 10717                           l6723:; BSR set to: 0
 10718  000F52                     
 10719                           	movf	((_main$949))&0ffh,w
 10720  000F52  5194               	
 10721                           	call	_dispLCD_dataReg
 10722  000F54  EC97  F01E         	goto	l7063
 10723  000F58  EF45  F00F         	line	432
 10724                           ;main.c: 432:                                 case 'C': alt_atuador(tecla); dispLCD_linc
                                 ol(3,12); dispLCD_dataReg(ler_atuador('C') ? '+' : '-'); break;
 10725                           	
 10726                           l770:
 10727  000F5C                     	
 10728                           l6725:
 10729  000F5C                     	movlb	0	; () banked
 10730  000F5C  0100               	movf	((main@tecla))&0ffh,w
 10731  000F5E  51BE               	
 10732                           	call	_alt_atuador
 10733  000F60  EC90  F01A         	movlw	low(0Ch)
 10734  000F64  0E0C               	movwf	((c:dispLCD_lincol@col)),c
 10735  000F66  6E29               	movlw	(03h)&0ffh
 10736  000F68  0E03               	
 10737                           	call	_dispLCD_lincol
 10738  000F6A  EC5C  F01D         	movlw	(043h)&0ffh
 10739  000F6E  0E43               	
 10740                           	call	_ler_atuador
 10741  000F70  EC7A  F019         	iorlw	0
 10742  000F74  0900               	btfss	status,2
 10743  000F76  A4D8               	goto	u5321
 10744  000F78  EFC0  F007         	goto	u5320
 10745  000F7C  EFC2  F007         u5321:
 10746  000F80                     	goto	l6729
 10747  000F80  EFC9  F007         u5320:
 10748  000F84                     	
 10749                           l6727:
 10750  000F84                     	movlw	high(02Dh)
 10751  000F84  0E00               	movlb	0	; () banked
 10752  000F86  0100               	movwf	((_main$950+1))&0ffh
 10753  000F88  6F97               	movlw	low(02Dh)
 10754  000F8A  0E2D               	movwf	((_main$950))&0ffh
 10755  000F8C  6F96               	goto	l6731
 10756  000F8E  EFD0  F007         	
 10757                           l772:; BSR set to: 0
 10758  000F92                     
 10759                           	
 10760                           l6729:
 10761  000F92                     	movlw	high(02Bh)
 10762  000F92  0E00               	movlb	0	; () banked
 10763  000F94  0100               	movwf	((_main$950+1))&0ffh
 10764  000F96  6F97               	movlw	low(02Bh)
 10765  000F98  0E2B               	movwf	((_main$950))&0ffh
 10766  000F9A  6F96               	goto	l6731
 10767  000F9C  EFD0  F007         	
 10768                           l774:; BSR set to: 0
 10769  000FA0                     
 10770                           	
 10771                           l6731:; BSR set to: 0
 10772  000FA0                     
 10773                           	movf	((_main$950))&0ffh,w
 10774  000FA0  5196               	
 10775                           	call	_dispLCD_dataReg
 10776  000FA2  EC97  F01E         	goto	l7063
 10777  000FA6  EF45  F00F         	line	433
 10778                           ;main.c: 433:                                 case 'D': alt_atuador(tecla); dispLCD_linc
                                 ol(3,16); dispLCD_dataReg(ler_atuador('D') ? '+' : '-'); break;
 10779                           	
 10780                           l775:
 10781  000FAA                     	
 10782                           l6733:
 10783  000FAA                     	movlb	0	; () banked
 10784  000FAA  0100               	movf	((main@tecla))&0ffh,w
 10785  000FAC  51BE               	
 10786                           	call	_alt_atuador
 10787  000FAE  EC90  F01A         	movlw	low(010h)
 10788  000FB2  0E10               	movwf	((c:dispLCD_lincol@col)),c
 10789  000FB4  6E29               	movlw	(03h)&0ffh
 10790  000FB6  0E03               	
 10791                           	call	_dispLCD_lincol
 10792  000FB8  EC5C  F01D         	movlw	(044h)&0ffh
 10793  000FBC  0E44               	
 10794                           	call	_ler_atuador
 10795  000FBE  EC7A  F019         	iorlw	0
 10796  000FC2  0900               	btfss	status,2
 10797  000FC4  A4D8               	goto	u5331
 10798  000FC6  EFE7  F007         	goto	u5330
 10799  000FCA  EFE9  F007         u5331:
 10800  000FCE                     	goto	l6737
 10801  000FCE  EFF0  F007         u5330:
 10802  000FD2                     	
 10803                           l6735:
 10804  000FD2                     	movlw	high(02Dh)
 10805  000FD2  0E00               	movlb	0	; () banked
 10806  000FD4  0100               	movwf	((_main$951+1))&0ffh
 10807  000FD6  6F99               	movlw	low(02Dh)
 10808  000FD8  0E2D               	movwf	((_main$951))&0ffh
 10809  000FDA  6F98               	goto	l6739
 10810  000FDC  EFF7  F007         	
 10811                           l777:; BSR set to: 0
 10812  000FE0                     
 10813                           	
 10814                           l6737:
 10815  000FE0                     	movlw	high(02Bh)
 10816  000FE0  0E00               	movlb	0	; () banked
 10817  000FE2  0100               	movwf	((_main$951+1))&0ffh
 10818  000FE4  6F99               	movlw	low(02Bh)
 10819  000FE6  0E2B               	movwf	((_main$951))&0ffh
 10820  000FE8  6F98               	goto	l6739
 10821  000FEA  EFF7  F007         	
 10822                           l779:; BSR set to: 0
 10823  000FEE                     
 10824                           	
 10825                           l6739:; BSR set to: 0
 10826  000FEE                     
 10827                           	movf	((_main$951))&0ffh,w
 10828  000FEE  5198               	
 10829                           	call	_dispLCD_dataReg
 10830  000FF0  EC97  F01E         	goto	l7063
 10831  000FF4  EF45  F00F         	line	434
 10832                           ;main.c: 434:                                 case '#': estado = 10; break;
 10833                           	
 10834                           l780:
 10835  000FF8                     	
 10836                           l6741:
 10837  000FF8                     	movlw	low(0Ah)
 10838  000FF8  0E0A               	movlb	0	; () banked
 10839  000FFA  0100               	movwf	((main@estado))&0ffh
 10840  000FFC  6FBD               	goto	l7063
 10841  000FFE  EF45  F00F         	line	435
 10842                           ;main.c: 435:                                 case '*': estado = 8; break;
 10843                           	
 10844                           l781:; BSR set to: 0
 10845  001002                     
 10846                           	
 10847                           l6743:; BSR set to: 0
 10848  001002                     
 10849                           	movlw	low(08h)
 10850  001002  0E08               	movwf	((main@estado))&0ffh
 10851  001004  6FBD               	goto	l7063
 10852  001006  EF45  F00F         	line	436
 10853                           	
 10854                           l6745:; BSR set to: 0
 10855  00100A                     
 10856                           ;main.c: 436:                             }
 10857                           	goto	l7063
 10858  00100A  EF45  F00F         	
 10859                           l758:; BSR set to: 0
 10860  00100E                     
 10861                           	
 10862                           l6747:; BSR set to: 0
 10863  00100E                     
 10864                           	movf	((main@tecla))&0ffh,w
 10865  00100E  51BE               	movwf	(??_main+0+0)&0ffh,c
 10866  001010  6E45               	clrf	(??_main+0+0+1)&0ffh,c
 10867  001012  6A46               
 10868                           	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
 10869                           ; Switch size 1, requested type "space"
 10870                           ; Number of cases is 1, Range of values is 0 to 0
 10871                           ; switch strategies available:
 10872                           ; Name         Instructions Cycles
 10873                           ; simple_byte            4     3 (average)
 10874                           ;	Chosen strategy is simple_byte
 10875                           
 10876                           	movf ??_main+0+1,c,w
 10877  001014  5046               	xorlw	0^0	; case 0
 10878  001016  0A00               	skipnz
 10879  001018  B4D8               	goto	l7961
 10880  00101A  EF11  F008         	goto	l7063
 10881  00101E  EF45  F00F         	
 10882                           l7961:; BSR set to: 0
 10883  001022                     
 10884                           ; Switch size 1, requested type "space"
 10885                           ; Number of cases is 6, Range of values is 35 to 68
 10886                           ; switch strategies available:
 10887                           ; Name         Instructions Cycles
 10888                           ; simple_byte           19    10 (average)
 10889                           ;	Chosen strategy is simple_byte
 10890                           
 10891                           	movf ??_main+0+0,c,w
 10892  001022  5045               	xorlw	35^0	; case 35
 10893  001024  0A23               	skipnz
 10894  001026  B4D8               	goto	l6741
 10895  001028  EFFC  F007         	xorlw	42^35	; case 42
 10896  00102C  0A09               	skipnz
 10897  00102E  B4D8               	goto	l6743
 10898  001030  EF01  F008         	xorlw	65^42	; case 65
 10899  001034  0A6B               	skipnz
 10900  001036  B4D8               	goto	l6709
 10901  001038  EF61  F007         	xorlw	66^65	; case 66
 10902  00103C  0A03               	skipnz
 10903  00103E  B4D8               	goto	l6717
 10904  001040  EF87  F007         	xorlw	67^66	; case 67
 10905  001044  0A01               	skipnz
 10906  001046  B4D8               	goto	l6725
 10907  001048  EFAE  F007         	xorlw	68^67	; case 68
 10908  00104C  0A07               	skipnz
 10909  00104E  B4D8               	goto	l6733
 10910  001050  EFD5  F007         	goto	l7063
 10911  001054  EF45  F00F         
 10912                           	
 10913                           l764:; BSR set to: 0
 10914  001058                     
 10915                           	line	437
 10916                           ;main.c: 437:                             break;
 10917                           	goto	l7063
 10918  001058  EF45  F00F         	line	441
 10919                           ;main.c: 441:             case 10:
 10920                           	
 10921                           l782:; BSR set to: 0
 10922  00105C                     
 10923                           	line	442
 10924                           	
 10925                           l6749:; BSR set to: 0
 10926  00105C                     
 10927                           ;main.c: 442:                             init_cond = salva_atuadores_init();
 10928                           	call	_salva_atuadores_init	;wreg free
 10929  00105C  EC28  F01B         	movlb	0	; () banked
 10930  001060  0100               	movwf	((main@init_cond))&0ffh
 10931  001062  6FB6               	line	443
 10932                           	
 10933                           l6751:; BSR set to: 0
 10934  001064                     
 10935                           ;main.c: 443:                             IHM.clr();
 10936                           	lfsr	2,(_IHM)+08h
 10937  001064  EE20  F0D7         	call	u5348
 10938  001068  D802               	goto	u5349
 10939  00106A  EF41  F008         u5348:
 10940  00106E                     	push
 10941  00106E  0005               	movwf	pclath
 10942  001070  6EFA               	movf	postinc2,w
 10943  001072  50DE               	movwf	tosl
 10944  001074  6EFD               	movf	postinc2,w
 10945  001076  50DE               	movwf	tosl+1
 10946  001078  6EFE               	movf	tblptru,w
 10947  00107A  50F8               	movwf	tosl+2
 10948  00107C  6EFF               	movf	pclath,w
 10949  00107E  50FA               	
 10950                           	return	;indir
 10951  001080  0012               	u5349:
 10952  001082                     	line	444
 10953                           	
 10954                           l6753:
 10955  001082                     ;main.c: 444:                             IHM.printpos(0, 0, "  INSIRA OS PASSOS  ");
 10956                           	lfsr	2,(_IHM)+04h
 10957  001082  EE20  F0D3         	call	u5358
 10958  001086  D802               	goto	u5359
 10959  001088  EF57  F008         u5358:
 10960  00108C                     	push
 10961  00108C  0005               	movwf	pclath
 10962  00108E  6EFA               	movf	postinc2,w
 10963  001090  50DE               	movwf	tosl
 10964  001092  6EFD               	movf	postinc2,w
 10965  001094  50DE               	movwf	tosl+1
 10966  001096  6EFE               	movf	tblptru,w
 10967  001098  50F8               	movwf	tosl+2
 10968  00109A  6EFF               	movf	pclath,w
 10969  00109C  50FA               	
 10970                           	movlw	low(0)
 10971  00109E  0E00               	movwf	((c:dispLCD@col)),c
 10972  0010A0  6E2E               		movlw	low(STR_19)
 10973  0010A2  0ECB               	movwf	((c:dispLCD@str)),c
 10974  0010A4  6E2F               	movlw	high(STR_19)
 10975  0010A6  0E7E               	movwf	((c:dispLCD@str+1)),c
 10976  0010A8  6E30               
 10977                           	movlw	(0)&0ffh
 10978  0010AA  0E00               	
 10979                           	return	;indir
 10980  0010AC  0012               	u5359:
 10981  0010AE                     	line	445
 10982                           	
 10983                           l6755:
 10984  0010AE                     ;main.c: 445:                             estado = 14;
 10985                           	movlw	low(0Eh)
 10986  0010AE  0E0E               	movlb	0	; () banked
 10987  0010B0  0100               	movwf	((main@estado))&0ffh
 10988  0010B2  6FBD               	line	446
 10989                           ;main.c: 446:                             break;
 10990                           	goto	l7063
 10991  0010B4  EF45  F00F         	line	448
 10992                           ;main.c: 448:              case 11:
 10993                           	
 10994                           l783:; BSR set to: 0
 10995  0010B8                     
 10996                           	line	449
 10997                           	
 10998                           l6757:; BSR set to: 0
 10999  0010B8                     
 11000                           ;main.c: 449:                             tecla = teclado_borda();
 11001                           	call	_teclado_borda
 11002  0010B8  EC2D  F01F         	movlb	0	; () banked
 11003  0010BC  0100               	movwf	((main@tecla))&0ffh
 11004  0010BE  6FBE               	line	450
 11005                           ;main.c: 450:                             switch( tecla )
 11006                           	goto	l6793
 11007  0010C0  EFD1  F008         	line	452
 11008                           ;main.c: 451:                             {;main.c: 452:                                
                                  case 'A':
 11009                           	
 11010                           l785:; BSR set to: 0
 11011  0010C4                     
 11012                           	goto	l6759
 11013  0010C4  EF68  F008         	line	453
 11014                           ;main.c: 453:                                 case 'B':
 11015                           	
 11016                           l786:; BSR set to: 0
 11017  0010C8                     
 11018                           	goto	l6759
 11019  0010C8  EF68  F008         	line	454
 11020                           ;main.c: 454:                                 case 'C':
 11021                           	
 11022                           l787:; BSR set to: 0
 11023  0010CC                     
 11024                           	goto	l6759
 11025  0010CC  EF68  F008         	line	455
 11026                           ;main.c: 455:                                 case 'D':
 11027                           	
 11028                           l788:; BSR set to: 0
 11029  0010D0                     
 11030                           	line	456
 11031                           	
 11032                           l6759:; BSR set to: 0
 11033  0010D0                     
 11034                           ;main.c: 456:                                             if( fifo_disponivel() )
 11035                           	call	_fifo_disponivel	;wreg free
 11036  0010D0  ECFD  F020         	iorlw	0
 11037  0010D4  0900               	btfsc	status,2
 11038  0010D6  B4D8               	goto	u5361
 11039  0010D8  EF70  F008         	goto	u5360
 11040  0010DC  EF72  F008         u5361:
 11041  0010E0                     	goto	l7063
 11042  0010E0  EF45  F00F         u5360:
 11043  0010E4                     	line	458
 11044                           	
 11045                           l6761:
 11046  0010E4                     ;main.c: 457:                                             {;main.c: 458:                
                                                                  alt_atuador(tecla);
 11047                           	movlb	0	; () banked
 11048  0010E4  0100               	movf	((main@tecla))&0ffh,w
 11049  0010E6  51BE               	
 11050                           	call	_alt_atuador
 11051  0010E8  EC90  F01A         	line	459
 11052                           ;main.c: 459:                                                 fifo_add( ler_atuador(tecl
                                 a) ? tecla : tecla|0x20 );
 11053                           	movlb	0	; () banked
 11054  0010EC  0100               	movf	((main@tecla))&0ffh,w
 11055  0010EE  51BE               	
 11056                           	call	_ler_atuador
 11057  0010F0  EC7A  F019         	iorlw	0
 11058  0010F4  0900               	btfss	status,2
 11059  0010F6  A4D8               	goto	u5371
 11060  0010F8  EF80  F008         	goto	u5370
 11061  0010FC  EF82  F008         u5371:
 11062  001100                     	goto	l791
 11063  001100  EF8D  F008         u5370:
 11064  001104                     	
 11065                           l6763:
 11066  001104                     	movlw	020h
 11067  001104  0E20               	movff	(main@tecla),??_main+0+0
 11068  001106  C0BE  F045         	clrf	(??_main+0+0+1)&0ffh,c
 11069  00110A  6A46               	iorwf	(??_main+0+0),c,w
 11070  00110C  1045               	movlb	0	; () banked
 11071  00110E  0100               	movwf	((_main$955))&0ffh
 11072  001110  6F9A               	movf	(??_main+0+1),c,w
 11073  001112  5046               	movwf	1+((_main$955))&0ffh
 11074  001114  6F9B               	goto	l6765
 11075  001116  EF93  F008         	
 11076                           l791:
 11077  00111A                     	movff	(main@tecla),(_main$955)
 11078  00111A  C0BE  F09A         	movlb	0	; () banked
 11079  00111E  0100               	clrf	((_main$955+1))&0ffh
 11080  001120  6B9B               	goto	l6765
 11081  001122  EF93  F008         	
 11082                           l793:; BSR set to: 0
 11083  001126                     
 11084                           	
 11085                           l6765:; BSR set to: 0
 11086  001126                     
 11087                           	movf	((_main$955))&0ffh,w
 11088  001126  519A               	
 11089                           	call	_fifo_add
 11090  001128  ECC2  F01C         	line	460
 11091                           	
 11092                           l6767:
 11093  00112C                     ;main.c: 460:                                                 estado = 16;
 11094                           	movlw	low(010h)
 11095  00112C  0E10               	movlb	0	; () banked
 11096  00112E  0100               	movwf	((main@estado))&0ffh
 11097  001130  6FBD               	goto	l7063
 11098  001132  EF45  F00F         	line	461
 11099                           ;main.c: 461:                                             }
 11100                           	
 11101                           l789:; BSR set to: 0
 11102  001136                     
 11103                           	line	462
 11104                           ;main.c: 462:                                             break;
 11105                           	goto	l7063
 11106  001136  EF45  F00F         	line	463
 11107                           ;main.c: 463:                                 case '6':
 11108                           	
 11109                           l795:; BSR set to: 0
 11110  00113A                     
 11111                           	line	464
 11112                           	
 11113                           l6769:; BSR set to: 0
 11114  00113A                     
 11115                           ;main.c: 464:                                             fifo_indicePrint_inc();
 11116                           	call	_fifo_indicePrint_inc	;wreg free
 11117  00113A  EC29  F01D         	line	465
 11118                           	
 11119                           l6771:
 11120  00113E                     ;main.c: 465:                                             estado = 16;
 11121                           	movlw	low(010h)
 11122  00113E  0E10               	movlb	0	; () banked
 11123  001140  0100               	movwf	((main@estado))&0ffh
 11124  001142  6FBD               	line	466
 11125                           ;main.c: 466:                                             break;
 11126                           	goto	l7063
 11127  001144  EF45  F00F         	line	467
 11128                           ;main.c: 467:                                 case '4':
 11129                           	
 11130                           l796:; BSR set to: 0
 11131  001148                     
 11132                           	line	468
 11133                           	
 11134                           l6773:; BSR set to: 0
 11135  001148                     
 11136                           ;main.c: 468:                                             fifo_indicePrint_dec();
 11137                           	call	_fifo_indicePrint_dec	;wreg free
 11138  001148  EC17  F021         	line	469
 11139                           	
 11140                           l6775:
 11141  00114C                     ;main.c: 469:                                             estado = 16;
 11142                           	movlw	low(010h)
 11143  00114C  0E10               	movlb	0	; () banked
 11144  00114E  0100               	movwf	((main@estado))&0ffh
 11145  001150  6FBD               	line	470
 11146                           ;main.c: 470:                                             break;
 11147                           	goto	l7063
 11148  001152  EF45  F00F         	line	472
 11149                           ;main.c: 472:                                 case '*':
 11150                           	
 11151                           l797:; BSR set to: 0
 11152  001156                     
 11153                           	line	473
 11154                           	
 11155                           l6777:; BSR set to: 0
 11156  001156                     
 11157                           ;main.c: 473:                                             if(fifo_indice() == 2 )
 11158                           	call	_fifo_indice	;wreg free
 11159  001156  EC96  F021         	xorlw	02h
 11160  00115A  0A02               	btfss	status,2
 11161  00115C  A4D8               	goto	u5381
 11162  00115E  EFB3  F008         	goto	u5380
 11163  001162  EFB5  F008         u5381:
 11164  001166                     	goto	l6781
 11165  001166  EFBA  F008         u5380:
 11166  00116A                     	line	474
 11167                           	
 11168                           l6779:
 11169  00116A                     ;main.c: 474:                                                 estado = 3;
 11170                           	movlw	low(03h)
 11171  00116A  0E03               	movlb	0	; () banked
 11172  00116C  0100               	movwf	((main@estado))&0ffh
 11173  00116E  6FBD               	goto	l7063
 11174  001170  EF45  F00F         	line	475
 11175                           ;main.c: 475:                                             else
 11176                           	
 11177                           l798:; BSR set to: 0
 11178  001174                     
 11179                           	line	477
 11180                           	
 11181                           l6781:
 11182  001174                     ;main.c: 476:                                             {;main.c: 477:                
                                                                  fifo_delete();
 11183                           	call	_fifo_delete	;wreg free
 11184  001174  ECD8  F019         	line	478
 11185                           	
 11186                           l6783:
 11187  001178                     ;main.c: 478:                                                 estado = 16;
 11188                           	movlw	low(010h)
 11189  001178  0E10               	movlb	0	; () banked
 11190  00117A  0100               	movwf	((main@estado))&0ffh
 11191  00117C  6FBD               	goto	l7063
 11192  00117E  EF45  F00F         	line	479
 11193                           ;main.c: 479:                                             }
 11194                           	
 11195                           l799:; BSR set to: 0
 11196  001182                     
 11197                           	line	480
 11198                           ;main.c: 480:                                             break;
 11199                           	goto	l7063
 11200  001182  EF45  F00F         	line	482
 11201                           ;main.c: 482:                                 case '#': estado = 74; break;
 11202                           	
 11203                           l800:; BSR set to: 0
 11204  001186                     
 11205                           	
 11206                           l6785:; BSR set to: 0
 11207  001186                     
 11208                           	movlw	low(04Ah)
 11209  001186  0E4A               	movwf	((main@estado))&0ffh
 11210  001188  6FBD               	goto	l7063
 11211  00118A  EF45  F00F         	line	484
 11212                           ;main.c: 484:                                 case '0': estado = 41; break;
 11213                           	
 11214                           l801:; BSR set to: 0
 11215  00118E                     
 11216                           	
 11217                           l6787:; BSR set to: 0
 11218  00118E                     
 11219                           	movlw	low(029h)
 11220  00118E  0E29               	movwf	((main@estado))&0ffh
 11221  001190  6FBD               	goto	l7063
 11222  001192  EF45  F00F         	line	486
 11223                           ;main.c: 486:                                 case '9': estado = 90; break;
 11224                           	
 11225                           l802:; BSR set to: 0
 11226  001196                     
 11227                           	
 11228                           l6789:; BSR set to: 0
 11229  001196                     
 11230                           	movlw	low(05Ah)
 11231  001196  0E5A               	movwf	((main@estado))&0ffh
 11232  001198  6FBD               	goto	l7063
 11233  00119A  EF45  F00F         	line	487
 11234                           	
 11235                           l6791:; BSR set to: 0
 11236  00119E                     
 11237                           ;main.c: 487:                             }
 11238                           	goto	l7063
 11239  00119E  EF45  F00F         	
 11240                           l784:; BSR set to: 0
 11241  0011A2                     
 11242                           	
 11243                           l6793:; BSR set to: 0
 11244  0011A2                     
 11245                           	movf	((main@tecla))&0ffh,w
 11246  0011A2  51BE               	movwf	(??_main+0+0)&0ffh,c
 11247  0011A4  6E45               	clrf	(??_main+0+0+1)&0ffh,c
 11248  0011A6  6A46               
 11249                           	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
 11250                           ; Switch size 1, requested type "space"
 11251                           ; Number of cases is 1, Range of values is 0 to 0
 11252                           ; switch strategies available:
 11253                           ; Name         Instructions Cycles
 11254                           ; simple_byte            4     3 (average)
 11255                           ;	Chosen strategy is simple_byte
 11256                           
 11257                           	movf ??_main+0+1,c,w
 11258  0011A8  5046               	xorlw	0^0	; case 0
 11259  0011AA  0A00               	skipnz
 11260  0011AC  B4D8               	goto	l7963
 11261  0011AE  EFDB  F008         	goto	l7063
 11262  0011B2  EF45  F00F         	
 11263                           l7963:; BSR set to: 0
 11264  0011B6                     
 11265                           ; Switch size 1, requested type "space"
 11266                           ; Number of cases is 10, Range of values is 35 to 68
 11267                           ; switch strategies available:
 11268                           ; Name         Instructions Cycles
 11269                           ; simple_byte           31    16 (average)
 11270                           ;	Chosen strategy is simple_byte
 11271                           
 11272                           	movf ??_main+0+0,c,w
 11273  0011B6  5045               	xorlw	35^0	; case 35
 11274  0011B8  0A23               	skipnz
 11275  0011BA  B4D8               	goto	l6785
 11276  0011BC  EFC3  F008         	xorlw	42^35	; case 42
 11277  0011C0  0A09               	skipnz
 11278  0011C2  B4D8               	goto	l6777
 11279  0011C4  EFAB  F008         	xorlw	48^42	; case 48
 11280  0011C8  0A1A               	skipnz
 11281  0011CA  B4D8               	goto	l6787
 11282  0011CC  EFC7  F008         	xorlw	52^48	; case 52
 11283  0011D0  0A04               	skipnz
 11284  0011D2  B4D8               	goto	l6773
 11285  0011D4  EFA4  F008         	xorlw	54^52	; case 54
 11286  0011D8  0A02               	skipnz
 11287  0011DA  B4D8               	goto	l6769
 11288  0011DC  EF9D  F008         	xorlw	57^54	; case 57
 11289  0011E0  0A0F               	skipnz
 11290  0011E2  B4D8               	goto	l6789
 11291  0011E4  EFCB  F008         	xorlw	65^57	; case 65
 11292  0011E8  0A78               	skipnz
 11293  0011EA  B4D8               	goto	l6759
 11294  0011EC  EF68  F008         	xorlw	66^65	; case 66
 11295  0011F0  0A03               	skipnz
 11296  0011F2  B4D8               	goto	l6759
 11297  0011F4  EF68  F008         	xorlw	67^66	; case 67
 11298  0011F8  0A01               	skipnz
 11299  0011FA  B4D8               	goto	l6759
 11300  0011FC  EF68  F008         	xorlw	68^67	; case 68
 11301  001200  0A07               	skipnz
 11302  001202  B4D8               	goto	l6759
 11303  001204  EF68  F008         	goto	l7063
 11304  001208  EF45  F00F         
 11305                           	
 11306                           l794:; BSR set to: 0
 11307  00120C                     
 11308                           	line	488
 11309                           ;main.c: 488:                             break;
 11310                           	goto	l7063
 11311  00120C  EF45  F00F         	line	490
 11312                           ;main.c: 490:              case 16:
 11313                           	
 11314                           l803:; BSR set to: 0
 11315  001210                     
 11316                           	line	491
 11317                           	
 11318                           l6795:; BSR set to: 0
 11319  001210                     
 11320                           ;main.c: 491:                             fifo_print();
 11321                           	call	_fifo_print	;wreg free
 11322  001210  ECC9  F010         	line	492
 11323                           	
 11324                           l6797:
 11325  001214                     ;main.c: 492:                             estado = 14;
 11326                           	movlw	low(0Eh)
 11327  001214  0E0E               	movlb	0	; () banked
 11328  001216  0100               	movwf	((main@estado))&0ffh
 11329  001218  6FBD               	line	493
 11330                           ;main.c: 493:                             break;
 11331                           	goto	l7063
 11332  00121A  EF45  F00F         	line	495
 11333                           ;main.c: 495:              case 14:
 11334                           	
 11335                           l804:; BSR set to: 0
 11336  00121E                     
 11337                           	line	496
 11338                           	
 11339                           l6799:; BSR set to: 0
 11340  00121E                     
 11341                           ;main.c: 496:                             IHM.printpos(3,0,"<  /  >");
 11342                           	lfsr	2,(_IHM)+04h
 11343  00121E  EE20  F0D3         	call	u5398
 11344  001222  D802               	goto	u5399
 11345  001224  EF25  F009         u5398:
 11346  001228                     	push
 11347  001228  0005               	movwf	pclath
 11348  00122A  6EFA               	movf	postinc2,w
 11349  00122C  50DE               	movwf	tosl
 11350  00122E  6EFD               	movf	postinc2,w
 11351  001230  50DE               	movwf	tosl+1
 11352  001232  6EFE               	movf	tblptru,w
 11353  001234  50F8               	movwf	tosl+2
 11354  001236  6EFF               	movf	pclath,w
 11355  001238  50FA               	
 11356                           	movlw	low(0)
 11357  00123A  0E00               	movwf	((c:dispLCD@col)),c
 11358  00123C  6E2E               		movlw	low(STR_20)
 11359  00123E  0EF4               	movwf	((c:dispLCD@str)),c
 11360  001240  6E2F               	movlw	high(STR_20)
 11361  001242  0E7F               	movwf	((c:dispLCD@str+1)),c
 11362  001244  6E30               
 11363                           	movlw	(03h)&0ffh
 11364  001246  0E03               	
 11365                           	return	;indir
 11366  001248  0012               	u5399:
 11367  00124A                     	line	497
 11368                           	
 11369                           l6801:
 11370  00124A                     ;main.c: 497:                             IHM.printv(3, 1,( fifo_indice()-2 ), 2);
 11371                           	lfsr	2,(_IHM)+06h
 11372  00124A  EE20  F0D5         	call	u5408
 11373  00124E  D802               	goto	u5409
 11374  001250  EF42  F009         u5408:
 11375  001254                     	push
 11376  001254  0005               	movwf	pclath
 11377  001256  6EFA               	movf	postinc2,w
 11378  001258  50DE               	movwf	tosl
 11379  00125A  6EFD               	movf	postinc2,w
 11380  00125C  50DE               	movwf	tosl+1
 11381  00125E  6EFE               	movf	tblptru,w
 11382  001260  50F8               	movwf	tosl+2
 11383  001262  6EFF               	movf	pclath,w
 11384  001264  50FA               	
 11385                           	movlw	low(01h)
 11386  001266  0E01               	movwf	((c:dispLCD_num@col)),c
 11387  001268  6E32               	call	_fifo_indice
 11388  00126A  EC96  F021         	movwf	(??_main+0+0)&0ffh,c
 11389  00126E  6E45               	movlw	low(-2)
 11390  001270  0EFE               	addwf	((??_main+0+0)),c,w
 11391  001272  2445               	movwf	((c:dispLCD_num@num)),c
 11392  001274  6E33               	clrf	1+((c:dispLCD_num@num)),c
 11393  001276  6A34               	movlw	high(-2)
 11394  001278  0EFF               	addwfc	1+((c:dispLCD_num@num)),c
 11395  00127A  2234               	movlw	low(02h)
 11396  00127C  0E02               	movwf	((c:dispLCD_num@tam)),c
 11397  00127E  6E35               	movlw	(03h)&0ffh
 11398  001280  0E03               	
 11399                           	return	;indir
 11400  001282  0012               	u5409:
 11401  001284                     	line	498
 11402                           	
 11403                           l6803:
 11404  001284                     ;main.c: 498:                             IHM.printv(3, 4,( fifo_tam()-2 ), 2);
 11405                           	lfsr	2,(_IHM)+06h
 11406  001284  EE20  F0D5         	call	u5418
 11407  001288  D802               	goto	u5419
 11408  00128A  EF5F  F009         u5418:
 11409  00128E                     	push
 11410  00128E  0005               	movwf	pclath
 11411  001290  6EFA               	movf	postinc2,w
 11412  001292  50DE               	movwf	tosl
 11413  001294  6EFD               	movf	postinc2,w
 11414  001296  50DE               	movwf	tosl+1
 11415  001298  6EFE               	movf	tblptru,w
 11416  00129A  50F8               	movwf	tosl+2
 11417  00129C  6EFF               	movf	pclath,w
 11418  00129E  50FA               	
 11419                           	movlw	low(04h)
 11420  0012A0  0E04               	movwf	((c:dispLCD_num@col)),c
 11421  0012A2  6E32               	call	_fifo_tam
 11422  0012A4  EC92  F021         	movwf	(??_main+0+0)&0ffh,c
 11423  0012A8  6E45               	movlw	low(-2)
 11424  0012AA  0EFE               	addwf	((??_main+0+0)),c,w
 11425  0012AC  2445               	movwf	((c:dispLCD_num@num)),c
 11426  0012AE  6E33               	clrf	1+((c:dispLCD_num@num)),c
 11427  0012B0  6A34               	movlw	high(-2)
 11428  0012B2  0EFF               	addwfc	1+((c:dispLCD_num@num)),c
 11429  0012B4  2234               	movlw	low(02h)
 11430  0012B6  0E02               	movwf	((c:dispLCD_num@tam)),c
 11431  0012B8  6E35               	movlw	(03h)&0ffh
 11432  0012BA  0E03               	
 11433                           	return	;indir
 11434  0012BC  0012               	u5419:
 11435  0012BE                     	line	499
 11436                           	
 11437                           l6805:
 11438  0012BE                     ;main.c: 499:                             estado = 11;
 11439                           	movlw	low(0Bh)
 11440  0012BE  0E0B               	movlb	0	; () banked
 11441  0012C0  0100               	movwf	((main@estado))&0ffh
 11442  0012C2  6FBD               	line	500
 11443                           ;main.c: 500:                             break;
 11444                           	goto	l7063
 11445  0012C4  EF45  F00F         	line	502
 11446                           ;main.c: 502:              case 30:
 11447                           	
 11448                           l805:; BSR set to: 0
 11449  0012C8                     
 11450                           	line	504
 11451                           	
 11452                           l6807:; BSR set to: 0
 11453  0012C8                     
 11454                           ;main.c: 504:                             estado = 70;
 11455                           	movlw	low(046h)
 11456  0012C8  0E46               	movwf	((main@estado))&0ffh
 11457  0012CA  6FBD               	line	505
 11458                           ;main.c: 505:                             meAtuadores = 1;
 11459                           	movlw	low(01h)
 11460  0012CC  0E01               	movwf	((main@meAtuadores))&0ffh
 11461  0012CE  6FAF               	line	506
 11462                           ;main.c: 506:                             break;
 11463                           	goto	l7063
 11464  0012D0  EF45  F00F         	line	508
 11465                           ;main.c: 508:              case 70:
 11466                           	
 11467                           l806:; BSR set to: 0
 11468  0012D4                     
 11469                           	line	509
 11470                           	
 11471                           l6809:; BSR set to: 0
 11472  0012D4                     
 11473                           ;main.c: 509:                             if( meAtuadores == 3 && botao != 2 )
 11474                           		movlw	3
 11475  0012D4  0E03               	xorwf	((main@meAtuadores))&0ffh,w
 11476  0012D6  19AF               	btfss	status,2
 11477  0012D8  A4D8               	goto	u5421
 11478  0012DA  EF71  F009         	goto	u5420
 11479  0012DE  EF73  F009         
 11480                           u5421:
 11481  0012E2                     	goto	l6829
 11482  0012E2  EF0F  F00A         u5420:
 11483  0012E6                     	
 11484                           l6811:; BSR set to: 0
 11485  0012E6                     
 11486                           		movlw	2
 11487  0012E6  0E02               	xorwf	((main@botao))&0ffh,w
 11488  0012E8  19B7               	btfsc	status,2
 11489  0012EA  B4D8               	goto	u5431
 11490  0012EC  EF7A  F009         	goto	u5430
 11491  0012F0  EF7C  F009         
 11492                           u5431:
 11493  0012F4                     	goto	l6829
 11494  0012F4  EF0F  F00A         u5430:
 11495  0012F8                     	line	511
 11496                           	
 11497                           l6813:; BSR set to: 0
 11498  0012F8                     
 11499                           ;main.c: 510:                             {;main.c: 511:                                
                                  IHM.printpos(0, 0, "       [    ]       ");
 11500                           	lfsr	2,(_IHM)+04h
 11501  0012F8  EE20  F0D3         	call	u5448
 11502  0012FC  D802               	goto	u5449
 11503  0012FE  EF92  F009         u5448:
 11504  001302                     	push
 11505  001302  0005               	movwf	pclath
 11506  001304  6EFA               	movf	postinc2,w
 11507  001306  50DE               	movwf	tosl
 11508  001308  6EFD               	movf	postinc2,w
 11509  00130A  50DE               	movwf	tosl+1
 11510  00130C  6EFE               	movf	tblptru,w
 11511  00130E  50F8               	movwf	tosl+2
 11512  001310  6EFF               	movf	pclath,w
 11513  001312  50FA               	
 11514                           	movlw	low(0)
 11515  001314  0E00               	movwf	((c:dispLCD@col)),c
 11516  001316  6E2E               		movlw	low(STR_21)
 11517  001318  0EF9               	movwf	((c:dispLCD@str)),c
 11518  00131A  6E2F               	movlw	high(STR_21)
 11519  00131C  0E7D               	movwf	((c:dispLCD@str+1)),c
 11520  00131E  6E30               
 11521                           	movlw	(0)&0ffh
 11522  001320  0E00               	
 11523                           	return	;indir
 11524  001322  0012               	u5449:
 11525  001324                     	line	512
 11526                           	
 11527                           l6815:
 11528  001324                     ;main.c: 512:                                 printExec(1, -1);
 11529                           	movlw	low(0FFh)
 11530  001324  0EFF               	movwf	((c:printExec@ind)),c
 11531  001326  6E40               	movlw	(01h)&0ffh
 11532  001328  0E01               	
 11533                           	call	_printExec
 11534  00132A  EC71  F012         	line	513
 11535                           	
 11536                           l6817:
 11537  00132E                     ;main.c: 513:                                 printExec(9, 0);
 11538                           	movlw	low(0)
 11539  00132E  0E00               	movwf	((c:printExec@ind)),c
 11540  001330  6E40               	movlw	(09h)&0ffh
 11541  001332  0E09               	
 11542                           	call	_printExec
 11543  001334  EC71  F012         	line	514
 11544                           	
 11545                           l6819:
 11546  001338                     ;main.c: 514:                                 printExec(14, 1);
 11547                           	movlw	low(01h)
 11548  001338  0E01               	movwf	((c:printExec@ind)),c
 11549  00133A  6E40               	movlw	(0Eh)&0ffh
 11550  00133C  0E0E               	
 11551                           	call	_printExec
 11552  00133E  EC71  F012         	line	515
 11553                           	
 11554                           l6821:
 11555  001342                     ;main.c: 515:                                 IHM.printpos(2, 0, "<  /  > c:          ")
                                 ;
 11556                           	lfsr	2,(_IHM)+04h
 11557  001342  EE20  F0D3         	call	u5458
 11558  001346  D802               	goto	u5459
 11559  001348  EFB7  F009         u5458:
 11560  00134C                     	push
 11561  00134C  0005               	movwf	pclath
 11562  00134E  6EFA               	movf	postinc2,w
 11563  001350  50DE               	movwf	tosl
 11564  001352  6EFD               	movf	postinc2,w
 11565  001354  50DE               	movwf	tosl+1
 11566  001356  6EFE               	movf	tblptru,w
 11567  001358  50F8               	movwf	tosl+2
 11568  00135A  6EFF               	movf	pclath,w
 11569  00135C  50FA               	
 11570                           	movlw	low(0)
 11571  00135E  0E00               	movwf	((c:dispLCD@col)),c
 11572  001360  6E2E               		movlw	low(STR_22)
 11573  001362  0EBA               	movwf	((c:dispLCD@str)),c
 11574  001364  6E2F               	movlw	high(STR_22)
 11575  001366  0E7D               	movwf	((c:dispLCD@str+1)),c
 11576  001368  6E30               
 11577                           	movlw	(02h)&0ffh
 11578  00136A  0E02               	
 11579                           	return	;indir
 11580  00136C  0012               	u5459:
 11581  00136E                     	line	516
 11582                           	
 11583                           l6823:
 11584  00136E                     ;main.c: 516:                                 IHM.printv(2, 4,( fifo_indice() - 2 ), 2);
                                 
 11585                           	lfsr	2,(_IHM)+06h
 11586  00136E  EE20  F0D5         	call	u5468
 11587  001372  D802               	goto	u5469
 11588  001374  EFD4  F009         u5468:
 11589  001378                     	push
 11590  001378  0005               	movwf	pclath
 11591  00137A  6EFA               	movf	postinc2,w
 11592  00137C  50DE               	movwf	tosl
 11593  00137E  6EFD               	movf	postinc2,w
 11594  001380  50DE               	movwf	tosl+1
 11595  001382  6EFE               	movf	tblptru,w
 11596  001384  50F8               	movwf	tosl+2
 11597  001386  6EFF               	movf	pclath,w
 11598  001388  50FA               	
 11599                           	movlw	low(04h)
 11600  00138A  0E04               	movwf	((c:dispLCD_num@col)),c
 11601  00138C  6E32               	call	_fifo_indice
 11602  00138E  EC96  F021         	movwf	(??_main+0+0)&0ffh,c
 11603  001392  6E45               	movlw	low(-2)
 11604  001394  0EFE               	addwf	((??_main+0+0)),c,w
 11605  001396  2445               	movwf	((c:dispLCD_num@num)),c
 11606  001398  6E33               	clrf	1+((c:dispLCD_num@num)),c
 11607  00139A  6A34               	movlw	high(-2)
 11608  00139C  0EFF               	addwfc	1+((c:dispLCD_num@num)),c
 11609  00139E  2234               	movlw	low(02h)
 11610  0013A0  0E02               	movwf	((c:dispLCD_num@tam)),c
 11611  0013A2  6E35               	movlw	(02h)&0ffh
 11612  0013A4  0E02               	
 11613                           	return	;indir
 11614  0013A6  0012               	u5469:
 11615  0013A8                     	line	517
 11616                           	
 11617                           l6825:
 11618  0013A8                     ;main.c: 517:                                 IHM.printv(2, 1, ( getIndicePassos() - 1 )
                                 , 2);
 11619                           	lfsr	2,(_IHM)+06h
 11620  0013A8  EE20  F0D5         	call	u5478
 11621  0013AC  D802               	goto	u5479
 11622  0013AE  EFF1  F009         u5478:
 11623  0013B2                     	push
 11624  0013B2  0005               	movwf	pclath
 11625  0013B4  6EFA               	movf	postinc2,w
 11626  0013B6  50DE               	movwf	tosl
 11627  0013B8  6EFD               	movf	postinc2,w
 11628  0013BA  50DE               	movwf	tosl+1
 11629  0013BC  6EFE               	movf	tblptru,w
 11630  0013BE  50F8               	movwf	tosl+2
 11631  0013C0  6EFF               	movf	pclath,w
 11632  0013C2  50FA               	
 11633                           	movlw	low(01h)
 11634  0013C4  0E01               	movwf	((c:dispLCD_num@col)),c
 11635  0013C6  6E32               	call	_getIndicePassos
 11636  0013C8  EC8E  F021         	movwf	(??_main+0+0)&0ffh,c
 11637  0013CC  6E45               	movlw	low(-1)
 11638  0013CE  0EFF               	addwf	((??_main+0+0)),c,w
 11639  0013D0  2445               	movwf	((c:dispLCD_num@num)),c
 11640  0013D2  6E33               	clrf	1+((c:dispLCD_num@num)),c
 11641  0013D4  6A34               	movlw	high(-1)
 11642  0013D6  0EFF               	addwfc	1+((c:dispLCD_num@num)),c
 11643  0013D8  2234               	movlw	low(02h)
 11644  0013DA  0E02               	movwf	((c:dispLCD_num@tam)),c
 11645  0013DC  6E35               	movlw	(02h)&0ffh
 11646  0013DE  0E02               	
 11647                           	return	;indir
 11648  0013E0  0012               	u5479:
 11649  0013E2                     	line	518
 11650                           	
 11651                           l6827:
 11652  0013E2                     ;main.c: 518:                                 IHM.printv(2, 11, ( getContCiclos() + 1 ),
                                  5);
 11653                           	lfsr	2,(_IHM)+06h
 11654  0013E2  EE20  F0D5         	call	u5488
 11655  0013E6  D802               	goto	u5489
 11656  0013E8  EF0D  F00A         u5488:
 11657  0013EC                     	push
 11658  0013EC  0005               	movwf	pclath
 11659  0013EE  6EFA               	movf	postinc2,w
 11660  0013F0  50DE               	movwf	tosl
 11661  0013F2  6EFD               	movf	postinc2,w
 11662  0013F4  50DE               	movwf	tosl+1
 11663  0013F6  6EFE               	movf	tblptru,w
 11664  0013F8  50F8               	movwf	tosl+2
 11665  0013FA  6EFF               	movf	pclath,w
 11666  0013FC  50FA               	
 11667                           	movlw	low(0Bh)
 11668  0013FE  0E0B               	movwf	((c:dispLCD_num@col)),c
 11669  001400  6E32               	call	_getContCiclos
 11670  001402  EC84  F021         	movlw	low(01h)
 11671  001406  0E01               	addwf	(0+?_getContCiclos),c,w
 11672  001408  2427               	movwf	((c:dispLCD_num@num)),c
 11673  00140A  6E33               	movlw	high(01h)
 11674  00140C  0E00               	addwfc	(1+?_getContCiclos),c,w
 11675  00140E  2028               	movwf	1+((c:dispLCD_num@num)),c
 11676  001410  6E34               	movlw	low(05h)
 11677  001412  0E05               	movwf	((c:dispLCD_num@tam)),c
 11678  001414  6E35               	movlw	(02h)&0ffh
 11679  001416  0E02               	
 11680                           	return	;indir
 11681  001418  0012               	u5489:
 11682  00141A                     	goto	l6829
 11683  00141A  EF0F  F00A         	line	520
 11684                           ;main.c: 520:                             }
 11685                           	
 11686                           l807:
 11687  00141E                     	line	521
 11688                           	
 11689                           l6829:
 11690  00141E                     ;main.c: 521:                             if(meAtuadores == 0)
 11691                           	movlb	0	; () banked
 11692  00141E  0100               	movf	((main@meAtuadores))&0ffh,w
 11693  001420  51AF               	btfss	status,2
 11694  001422  A4D8               	goto	u5491
 11695  001424  EF16  F00A         	goto	u5490
 11696  001428  EF18  F00A         u5491:
 11697  00142C                     	goto	l6835
 11698  00142C  EF2B  F00A         u5490:
 11699  001430                     	line	523
 11700                           	
 11701                           l6831:; BSR set to: 0
 11702  001430                     
 11703                           ;main.c: 522:                             {;main.c: 523:                                
                                  estado = 16;
 11704                           	movlw	low(010h)
 11705  001430  0E10               	movwf	((main@estado))&0ffh
 11706  001432  6FBD               	line	524
 11707                           	
 11708                           l6833:; BSR set to: 0
 11709  001434                     
 11710                           ;main.c: 524:                                 IHM.clr();
 11711                           	lfsr	2,(_IHM)+08h
 11712  001434  EE20  F0D7         	call	u5508
 11713  001438  D802               	goto	u5509
 11714  00143A  EF29  F00A         u5508:
 11715  00143E                     	push
 11716  00143E  0005               	movwf	pclath
 11717  001440  6EFA               	movf	postinc2,w
 11718  001442  50DE               	movwf	tosl
 11719  001444  6EFD               	movf	postinc2,w
 11720  001446  50DE               	movwf	tosl+1
 11721  001448  6EFE               	movf	tblptru,w
 11722  00144A  50F8               	movwf	tosl+2
 11723  00144C  6EFF               	movf	pclath,w
 11724  00144E  50FA               	
 11725                           	return	;indir
 11726  001450  0012               	u5509:
 11727  001452                     	goto	l6835
 11728  001452  EF2B  F00A         	line	525
 11729                           ;main.c: 525:                             }
 11730                           	
 11731                           l808:
 11732  001456                     	line	526
 11733                           	
 11734                           l6835:
 11735  001456                     ;main.c: 526:                             tecla = teclado_borda();
 11736                           	call	_teclado_borda
 11737  001456  EC2D  F01F         	movlb	0	; () banked
 11738  00145A  0100               	movwf	((main@tecla))&0ffh
 11739  00145C  6FBE               	line	527
 11740                           ;main.c: 527:                             switch(tecla)
 11741                           	goto	l6849
 11742  00145E  EF4E  F00A         	line	529
 11743                           ;main.c: 528:                             {;main.c: 529:                                
                                  case '#':
 11744                           	
 11745                           l810:; BSR set to: 0
 11746  001462                     
 11747                           	line	530
 11748                           	
 11749                           l6837:; BSR set to: 0
 11750  001462                     
 11751                           ;main.c: 530:                                     botao = 1;
 11752                           	movlw	low(01h)
 11753  001462  0E01               	movwf	((main@botao))&0ffh
 11754  001464  6FB7               	line	531
 11755                           ;main.c: 531:                                     break;
 11756                           	goto	l7063
 11757  001466  EF45  F00F         	line	533
 11758                           ;main.c: 533:                                 case '5':
 11759                           	
 11760                           l812:; BSR set to: 0
 11761  00146A                     
 11762                           	line	534
 11763                           	
 11764                           l6839:; BSR set to: 0
 11765  00146A                     
 11766                           ;main.c: 534:                                     botao = 2;
 11767                           	movlw	low(02h)
 11768  00146A  0E02               	movwf	((main@botao))&0ffh
 11769  00146C  6FB7               	line	535
 11770                           ;main.c: 535:                                     break;
 11771                           	goto	l7063
 11772  00146E  EF45  F00F         	line	537
 11773                           ;main.c: 537:                                 case '0':
 11774                           	
 11775                           l813:; BSR set to: 0
 11776  001472                     
 11777                           	line	538
 11778                           	
 11779                           l6841:; BSR set to: 0
 11780  001472                     
 11781                           ;main.c: 538:                                     botao = 0;
 11782                           	movlw	low(0)
 11783  001472  0E00               	movwf	((main@botao))&0ffh
 11784  001474  6FB7               	line	539
 11785                           ;main.c: 539:                                     break;
 11786                           	goto	l7063
 11787  001476  EF45  F00F         	line	541
 11788                           ;main.c: 541:                                 case '1':
 11789                           	
 11790                           l814:; BSR set to: 0
 11791  00147A                     
 11792                           	line	542
 11793                           	
 11794                           l6843:; BSR set to: 0
 11795  00147A                     
 11796                           ;main.c: 542:                                     if(botao == 2)
 11797                           		movlw	2
 11798  00147A  0E02               	xorwf	((main@botao))&0ffh,w
 11799  00147C  19B7               	btfss	status,2
 11800  00147E  A4D8               	goto	u5511
 11801  001480  EF44  F00A         	goto	u5510
 11802  001484  EF46  F00A         
 11803                           u5511:
 11804  001488                     	goto	l7063
 11805  001488  EF45  F00F         u5510:
 11806  00148C                     	line	543
 11807                           	
 11808                           l6845:; BSR set to: 0
 11809  00148C                     
 11810                           ;main.c: 543:                                         botao = 3;
 11811                           	movlw	low(03h)
 11812  00148C  0E03               	movwf	((main@botao))&0ffh
 11813  00148E  6FB7               	goto	l7063
 11814  001490  EF45  F00F         	
 11815                           l815:; BSR set to: 0
 11816  001494                     
 11817                           	line	544
 11818                           ;main.c: 544:                                     break;
 11819                           	goto	l7063
 11820  001494  EF45  F00F         	line	545
 11821                           	
 11822                           l6847:; BSR set to: 0
 11823  001498                     
 11824                           ;main.c: 545:                             }
 11825                           	goto	l7063
 11826  001498  EF45  F00F         	
 11827                           l809:; BSR set to: 0
 11828  00149C                     
 11829                           	
 11830                           l6849:; BSR set to: 0
 11831  00149C                     
 11832                           	movf	((main@tecla))&0ffh,w
 11833  00149C  51BE               	movwf	(??_main+0+0)&0ffh,c
 11834  00149E  6E45               	clrf	(??_main+0+0+1)&0ffh,c
 11835  0014A0  6A46               
 11836                           	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
 11837                           ; Switch size 1, requested type "space"
 11838                           ; Number of cases is 1, Range of values is 0 to 0
 11839                           ; switch strategies available:
 11840                           ; Name         Instructions Cycles
 11841                           ; simple_byte            4     3 (average)
 11842                           ;	Chosen strategy is simple_byte
 11843                           
 11844                           	movf ??_main+0+1,c,w
 11845  0014A2  5046               	xorlw	0^0	; case 0
 11846  0014A4  0A00               	skipnz
 11847  0014A6  B4D8               	goto	l7965
 11848  0014A8  EF58  F00A         	goto	l7063
 11849  0014AC  EF45  F00F         	
 11850                           l7965:; BSR set to: 0
 11851  0014B0                     
 11852                           ; Switch size 1, requested type "space"
 11853                           ; Number of cases is 4, Range of values is 35 to 53
 11854                           ; switch strategies available:
 11855                           ; Name         Instructions Cycles
 11856                           ; simple_byte           13     7 (average)
 11857                           ;	Chosen strategy is simple_byte
 11858                           
 11859                           	movf ??_main+0+0,c,w
 11860  0014B0  5045               	xorlw	35^0	; case 35
 11861  0014B2  0A23               	skipnz
 11862  0014B4  B4D8               	goto	l6837
 11863  0014B6  EF31  F00A         	xorlw	48^35	; case 48
 11864  0014BA  0A13               	skipnz
 11865  0014BC  B4D8               	goto	l6841
 11866  0014BE  EF39  F00A         	xorlw	49^48	; case 49
 11867  0014C2  0A01               	skipnz
 11868  0014C4  B4D8               	goto	l6843
 11869  0014C6  EF3D  F00A         	xorlw	53^49	; case 53
 11870  0014CA  0A04               	skipnz
 11871  0014CC  B4D8               	goto	l6839
 11872  0014CE  EF35  F00A         	goto	l7063
 11873  0014D2  EF45  F00F         
 11874                           	
 11875                           l811:; BSR set to: 0
 11876  0014D6                     
 11877                           	line	546
 11878                           ;main.c: 546:                             break;
 11879                           	goto	l7063
 11880  0014D6  EF45  F00F         	line	548
 11881                           ;main.c: 548:              case 40:
 11882                           	
 11883                           l816:; BSR set to: 0
 11884  0014DA                     
 11885                           	line	549
 11886                           	
 11887                           l6851:; BSR set to: 0
 11888  0014DA                     
 11889                           ;main.c: 549:                             tecla = teclado_borda();
 11890                           	call	_teclado_borda	;wreg free
 11891  0014DA  EC2D  F01F         	movlb	0	; () banked
 11892  0014DE  0100               	movwf	((main@tecla))&0ffh
 11893  0014E0  6FBE               	line	550
 11894                           	
 11895                           l6853:; BSR set to: 0
 11896  0014E2                     
 11897                           ;main.c: 550:                             if(tecla >= '0' && tecla <= '9')
 11898                           		movlw	030h-1
 11899  0014E2  0E2F               	cpfsgt	((main@tecla))&0ffh
 11900  0014E4  65BE               	goto	u5521
 11901  0014E6  EF77  F00A         	goto	u5520
 11902  0014EA  EF79  F00A         
 11903                           u5521:
 11904  0014EE                     	goto	l6863
 11905  0014EE  EF9C  F00A         u5520:
 11906  0014F2                     	
 11907                           l6855:; BSR set to: 0
 11908  0014F2                     
 11909                           		movlw	03Ah-0
 11910  0014F2  0E3A               	cpfslt	((main@tecla))&0ffh
 11911  0014F4  61BE               	goto	u5531
 11912  0014F6  EF7F  F00A         	goto	u5530
 11913  0014FA  EF81  F00A         
 11914                           u5531:
 11915  0014FE                     	goto	l6863
 11916  0014FE  EF9C  F00A         u5530:
 11917  001502                     	line	552
 11918                           	
 11919                           l6857:; BSR set to: 0
 11920  001502                     
 11921                           ;main.c: 551:                             {;main.c: 552:                                
                                  dignum_conc(tecla, &num);
 11922                           		movlw	low(main@num)
 11923  001502  0EB0               	movwf	((c:dignum_conc@ptrNum)),c
 11924  001504  6E2D               	movlw	high(main@num)
 11925  001506  0E00               	movwf	((c:dignum_conc@ptrNum+1)),c
 11926  001508  6E2E               
 11927                           	movf	((main@tecla))&0ffh,w
 11928  00150A  51BE               	
 11929                           	call	_dignum_conc
 11930  00150C  ECBE  F01E         	line	553
 11931                           	
 11932                           l6859:
 11933  001510                     ;main.c: 553:                                 if(num > 120)
 11934                           	movlb	0	; () banked
 11935  001510  0100               		movf	((main@num+1))&0ffh,w
 11936  001512  51B1               	bnz	u5540
 11937  001514  E109               	movlw	121
 11938  001516  0E79               	subwf	 ((main@num))&0ffh,w
 11939  001518  5DB0               	btfss	status,0
 11940  00151A  A0D8               	goto	u5541
 11941  00151C  EF92  F00A         	goto	u5540
 11942  001520  EF94  F00A         
 11943                           u5541:
 11944  001524                     	goto	l818
 11945  001524  EF98  F00A         u5540:
 11946  001528                     	line	554
 11947                           	
 11948                           l6861:; BSR set to: 0
 11949  001528                     
 11950                           ;main.c: 554:                                     num = 120;
 11951                           	movlw	high(078h)
 11952  001528  0E00               	movwf	((main@num+1))&0ffh
 11953  00152A  6FB1               	movlw	low(078h)
 11954  00152C  0E78               	movwf	((main@num))&0ffh
 11955  00152E  6FB0               	
 11956                           l818:; BSR set to: 0
 11957  001530                     
 11958                           	line	555
 11959                           ;main.c: 555:                                 estado = 41;
 11960                           	movlw	low(029h)
 11961  001530  0E29               	movwf	((main@estado))&0ffh
 11962  001532  6FBD               	goto	l6863
 11963  001534  EF9C  F00A         	line	556
 11964                           ;main.c: 556:                             }
 11965                           	
 11966                           l817:; BSR set to: 0
 11967  001538                     
 11968                           	line	557
 11969                           	
 11970                           l6863:; BSR set to: 0
 11971  001538                     
 11972                           ;main.c: 557:                             if(tecla == '*')
 11973                           		movlw	42
 11974  001538  0E2A               	xorwf	((main@tecla))&0ffh,w
 11975  00153A  19BE               	btfss	status,2
 11976  00153C  A4D8               	goto	u5551
 11977  00153E  EFA3  F00A         	goto	u5550
 11978  001542  EFA5  F00A         
 11979                           u5551:
 11980  001546                     	goto	l6869
 11981  001546  EFB0  F00A         u5550:
 11982  00154A                     	line	559
 11983                           	
 11984                           l6865:; BSR set to: 0
 11985  00154A                     
 11986                           ;main.c: 558:                             {;main.c: 559:                                
                                  dignum_apagar(&num);
 11987                           		movlw	low(main@num)
 11988  00154A  0EB0               	movwf	((c:dignum_apagar@ptrNum)),c
 11989  00154C  6E2E               	movlw	high(main@num)
 11990  00154E  0E00               	movwf	((c:dignum_apagar@ptrNum+1)),c
 11991  001550  6E2F               
 11992                           	call	_dignum_apagar	;wreg free
 11993  001552  EC1F  F020         	line	560
 11994                           	
 11995                           l6867:
 11996  001556                     ;main.c: 560:                                 estado = 41;
 11997                           	movlw	low(029h)
 11998  001556  0E29               	movlb	0	; () banked
 11999  001558  0100               	movwf	((main@estado))&0ffh
 12000  00155A  6FBD               	goto	l6869
 12001  00155C  EFB0  F00A         	line	561
 12002                           ;main.c: 561:                             }
 12003                           	
 12004                           l819:; BSR set to: 0
 12005  001560                     
 12006                           	line	562
 12007                           	
 12008                           l6869:; BSR set to: 0
 12009  001560                     
 12010                           ;main.c: 562:                             if(tecla == '#')
 12011                           		movlw	35
 12012  001560  0E23               	xorwf	((main@tecla))&0ffh,w
 12013  001562  19BE               	btfss	status,2
 12014  001564  A4D8               	goto	u5561
 12015  001566  EFB7  F00A         	goto	u5560
 12016  00156A  EFB9  F00A         
 12017                           u5561:
 12018  00156E                     	goto	l7063
 12019  00156E  EF45  F00F         u5560:
 12020  001572                     	line	563
 12021                           	
 12022                           l6871:; BSR set to: 0
 12023  001572                     
 12024                           ;main.c: 563:                                 estado = 42;
 12025                           	movlw	low(02Ah)
 12026  001572  0E2A               	movwf	((main@estado))&0ffh
 12027  001574  6FBD               	goto	l7063
 12028  001576  EF45  F00F         	
 12029                           l820:; BSR set to: 0
 12030  00157A                     
 12031                           	line	564
 12032                           ;main.c: 564:                             break;
 12033                           	goto	l7063
 12034  00157A  EF45  F00F         	line	566
 12035                           ;main.c: 566:              case 41:
 12036                           	
 12037                           l821:; BSR set to: 0
 12038  00157E                     
 12039                           	line	568
 12040                           	
 12041                           l6873:; BSR set to: 0
 12042  00157E                     
 12043                           ;main.c: 568:                             IHM.printpos(2, 0, "config tempo:      s");
 12044                           	lfsr	2,(_IHM)+04h
 12045  00157E  EE20  F0D3         	call	u5578
 12046  001582  D802               	goto	u5579
 12047  001584  EFD5  F00A         u5578:
 12048  001588                     	push
 12049  001588  0005               	movwf	pclath
 12050  00158A  6EFA               	movf	postinc2,w
 12051  00158C  50DE               	movwf	tosl
 12052  00158E  6EFD               	movf	postinc2,w
 12053  001590  50DE               	movwf	tosl+1
 12054  001592  6EFE               	movf	tblptru,w
 12055  001594  50F8               	movwf	tosl+2
 12056  001596  6EFF               	movf	pclath,w
 12057  001598  50FA               	
 12058                           	movlw	low(0)
 12059  00159A  0E00               	movwf	((c:dispLCD@col)),c
 12060  00159C  6E2E               		movlw	low(STR_23)
 12061  00159E  0E34               	movwf	((c:dispLCD@str)),c
 12062  0015A0  6E2F               	movlw	high(STR_23)
 12063  0015A2  0E7F               	movwf	((c:dispLCD@str+1)),c
 12064  0015A4  6E30               
 12065                           	movlw	(02h)&0ffh
 12066  0015A6  0E02               	
 12067                           	return	;indir
 12068  0015A8  0012               	u5579:
 12069  0015AA                     	line	569
 12070                           	
 12071                           l6875:
 12072  0015AA                     ;main.c: 569:                             IHM.printv(2, 15, num, 3);
 12073                           	lfsr	2,(_IHM)+06h
 12074  0015AA  EE20  F0D5         	call	u5588
 12075  0015AE  D802               	goto	u5589
 12076  0015B0  EFED  F00A         u5588:
 12077  0015B4                     	push
 12078  0015B4  0005               	movwf	pclath
 12079  0015B6  6EFA               	movf	postinc2,w
 12080  0015B8  50DE               	movwf	tosl
 12081  0015BA  6EFD               	movf	postinc2,w
 12082  0015BC  50DE               	movwf	tosl+1
 12083  0015BE  6EFE               	movf	tblptru,w
 12084  0015C0  50F8               	movwf	tosl+2
 12085  0015C2  6EFF               	movf	pclath,w
 12086  0015C4  50FA               	
 12087                           	movlw	low(0Fh)
 12088  0015C6  0E0F               	movwf	((c:dispLCD_num@col)),c
 12089  0015C8  6E32               	movff	(main@num),(c:dispLCD_num@num)
 12090  0015CA  C0B0  F033         	movff	(main@num+1),(c:dispLCD_num@num+1)
 12091  0015CE  C0B1  F034         	movlw	low(03h)
 12092  0015D2  0E03               	movwf	((c:dispLCD_num@tam)),c
 12093  0015D4  6E35               	movlw	(02h)&0ffh
 12094  0015D6  0E02               	
 12095                           	return	;indir
 12096  0015D8  0012               	u5589:
 12097  0015DA                     	line	570
 12098                           	
 12099                           l6877:
 12100  0015DA                     ;main.c: 570:                             estado = 40;
 12101                           	movlw	low(028h)
 12102  0015DA  0E28               	movlb	0	; () banked
 12103  0015DC  0100               	movwf	((main@estado))&0ffh
 12104  0015DE  6FBD               	line	571
 12105                           ;main.c: 571:                             break;
 12106                           	goto	l7063
 12107  0015E0  EF45  F00F         	line	573
 12108                           ;main.c: 573:              case 42:
 12109                           	
 12110                           l822:; BSR set to: 0
 12111  0015E4                     
 12112                           	line	574
 12113                           	
 12114                           l6879:; BSR set to: 0
 12115  0015E4                     
 12116                           ;main.c: 574:                             fifo_add_tempo(num);
 12117                           	movf	((main@num))&0ffh,w
 12118  0015E4  51B0               	
 12119                           	call	_fifo_add_tempo
 12120  0015E6  EC8E  F01C         	line	575
 12121                           	
 12122                           l6881:
 12123  0015EA                     ;main.c: 575:                             IHM.clr();
 12124                           	lfsr	2,(_IHM)+08h
 12125  0015EA  EE20  F0D7         	call	u5598
 12126  0015EE  D802               	goto	u5599
 12127  0015F0  EF04  F00B         u5598:
 12128  0015F4                     	push
 12129  0015F4  0005               	movwf	pclath
 12130  0015F6  6EFA               	movf	postinc2,w
 12131  0015F8  50DE               	movwf	tosl
 12132  0015FA  6EFD               	movf	postinc2,w
 12133  0015FC  50DE               	movwf	tosl+1
 12134  0015FE  6EFE               	movf	tblptru,w
 12135  001600  50F8               	movwf	tosl+2
 12136  001602  6EFF               	movf	pclath,w
 12137  001604  50FA               	
 12138                           	return	;indir
 12139  001606  0012               	u5599:
 12140  001608                     	line	576
 12141                           	
 12142                           l6883:
 12143  001608                     ;main.c: 576:                             estado = 16;
 12144                           	movlw	low(010h)
 12145  001608  0E10               	movlb	0	; () banked
 12146  00160A  0100               	movwf	((main@estado))&0ffh
 12147  00160C  6FBD               	line	577
 12148                           ;main.c: 577:                             break;
 12149                           	goto	l7063
 12150  00160E  EF45  F00F         	line	607
 12151                           ;main.c: 607:              case 52:
 12152                           	
 12153                           l823:; BSR set to: 0
 12154  001612                     
 12155                           	line	608
 12156                           	
 12157                           l6885:; BSR set to: 0
 12158  001612                     
 12159                           ;main.c: 608:                             tecla = teclado_borda();
 12160                           	call	_teclado_borda	;wreg free
 12161  001612  EC2D  F01F         	movlb	0	; () banked
 12162  001616  0100               	movwf	((main@tecla))&0ffh
 12163  001618  6FBE               	line	609
 12164                           	
 12165                           l6887:; BSR set to: 0
 12166  00161A                     
 12167                           ;main.c: 609:                             if(tecla >= '0' && tecla <= '9')
 12168                           		movlw	030h-1
 12169  00161A  0E2F               	cpfsgt	((main@tecla))&0ffh
 12170  00161C  65BE               	goto	u5601
 12171  00161E  EF13  F00B         	goto	u5600
 12172  001622  EF15  F00B         
 12173                           u5601:
 12174  001626                     	goto	l6909
 12175  001626  EF58  F00B         u5600:
 12176  00162A                     	
 12177                           l6889:; BSR set to: 0
 12178  00162A                     
 12179                           		movlw	03Ah-0
 12180  00162A  0E3A               	cpfslt	((main@tecla))&0ffh
 12181  00162C  61BE               	goto	u5611
 12182  00162E  EF1B  F00B         	goto	u5610
 12183  001632  EF1D  F00B         
 12184                           u5611:
 12185  001636                     	goto	l6909
 12186  001636  EF58  F00B         u5610:
 12187  00163A                     	line	611
 12188                           	
 12189                           l6891:; BSR set to: 0
 12190  00163A                     
 12191                           ;main.c: 610:                                {;main.c: 611:                             
                                     dignum_conc(tecla, &ciclos);
 12192                           		movlw	low(main@ciclos)
 12193  00163A  0EB4               	movwf	((c:dignum_conc@ptrNum)),c
 12194  00163C  6E2D               	movlw	high(main@ciclos)
 12195  00163E  0E00               	movwf	((c:dignum_conc@ptrNum+1)),c
 12196  001640  6E2E               
 12197                           	movf	((main@tecla))&0ffh,w
 12198  001642  51BE               	
 12199                           	call	_dignum_conc
 12200  001644  ECBE  F01E         	line	612
 12201                           	
 12202                           l6893:
 12203  001648                     ;main.c: 612:                                 if(ciclos > 10000)
 12204                           		movlw	17
 12205  001648  0E11               	movlb	0	; () banked
 12206  00164A  0100               	subwf	 ((main@ciclos))&0ffh,w
 12207  00164C  5DB4               	movlw	39
 12208  00164E  0E27               	subwfb	((main@ciclos+1))&0ffh,w
 12209  001650  59B5               	btfss	status,0
 12210  001652  A0D8               	goto	u5621
 12211  001654  EF2E  F00B         	goto	u5620
 12212  001658  EF30  F00B         
 12213                           u5621:
 12214  00165C                     	goto	l825
 12215  00165C  EF34  F00B         u5620:
 12216  001660                     	line	613
 12217                           	
 12218                           l6895:; BSR set to: 0
 12219  001660                     
 12220                           ;main.c: 613:                                     ciclos = 10000;
 12221                           	movlw	high(02710h)
 12222  001660  0E27               	movwf	((main@ciclos+1))&0ffh
 12223  001662  6FB5               	movlw	low(02710h)
 12224  001664  0E10               	movwf	((main@ciclos))&0ffh
 12225  001666  6FB4               	
 12226                           l825:; BSR set to: 0
 12227  001668                     
 12228                           	line	614
 12229                           ;main.c: 614:                                 estado = 53;
 12230                           	movlw	low(035h)
 12231  001668  0E35               	movwf	((main@estado))&0ffh
 12232  00166A  6FBD               	line	615
 12233                           ;main.c: 615:                                 break;
 12234                           	goto	l7063
 12235  00166C  EF45  F00F         	line	616
 12236                           ;main.c: 616:                                }
 12237                           	
 12238                           l824:; BSR set to: 0
 12239  001670                     
 12240                           	line	617
 12241                           ;main.c: 617:                             switch(tecla)
 12242                           	goto	l6909
 12243  001670  EF58  F00B         	line	619
 12244                           ;main.c: 618:                                {;main.c: 619:                             
                                        case 'A':
 12245                           	
 12246                           l827:; BSR set to: 0
 12247  001674                     
 12248                           	goto	l6897
 12249  001674  EF40  F00B         	line	620
 12250                           ;main.c: 620:                                    case 'B':
 12251                           	
 12252                           l828:; BSR set to: 0
 12253  001678                     
 12254                           	goto	l6897
 12255  001678  EF40  F00B         	line	621
 12256                           ;main.c: 621:                                    case 'C':
 12257                           	
 12258                           l829:; BSR set to: 0
 12259  00167C                     
 12260                           	goto	l6897
 12261  00167C  EF40  F00B         	line	622
 12262                           ;main.c: 622:                                    case 'D':
 12263                           	
 12264                           l830:; BSR set to: 0
 12265  001680                     
 12266                           	line	623
 12267                           	
 12268                           l6897:; BSR set to: 0
 12269  001680                     
 12270                           ;main.c: 623:                                        dispLCD_clr();
 12271                           	call	_dispLCD_clr	;wreg free
 12272  001680  EC9A  F021         	line	624
 12273                           	
 12274                           l6899:
 12275  001684                     ;main.c: 624:                                        estado = 16;
 12276                           	movlw	low(010h)
 12277  001684  0E10               	movlb	0	; () banked
 12278  001686  0100               	movwf	((main@estado))&0ffh
 12279  001688  6FBD               	line	625
 12280                           ;main.c: 625:                                        break;
 12281                           	goto	l7063
 12282  00168A  EF45  F00F         	line	626
 12283                           ;main.c: 626:                                    case '#':
 12284                           	
 12285                           l832:; BSR set to: 0
 12286  00168E                     
 12287                           	line	627
 12288                           	
 12289                           l6901:; BSR set to: 0
 12290  00168E                     
 12291                           ;main.c: 627:                                        estado = 54;
 12292                           	movlw	low(036h)
 12293  00168E  0E36               	movwf	((main@estado))&0ffh
 12294  001690  6FBD               	line	628
 12295                           ;main.c: 628:                                        break;
 12296                           	goto	l7063
 12297  001692  EF45  F00F         	line	629
 12298                           ;main.c: 629:                                    case '*':
 12299                           	
 12300                           l833:; BSR set to: 0
 12301  001696                     
 12302                           	line	630
 12303                           	
 12304                           l6903:; BSR set to: 0
 12305  001696                     
 12306                           ;main.c: 630:                                        dignum_apagar(&ciclos);
 12307                           		movlw	low(main@ciclos)
 12308  001696  0EB4               	movwf	((c:dignum_apagar@ptrNum)),c
 12309  001698  6E2E               	movlw	high(main@ciclos)
 12310  00169A  0E00               	movwf	((c:dignum_apagar@ptrNum+1)),c
 12311  00169C  6E2F               
 12312                           	call	_dignum_apagar	;wreg free
 12313  00169E  EC1F  F020         	line	631
 12314                           	
 12315                           l6905:
 12316  0016A2                     ;main.c: 631:                                        estado = 53;
 12317                           	movlw	low(035h)
 12318  0016A2  0E35               	movlb	0	; () banked
 12319  0016A4  0100               	movwf	((main@estado))&0ffh
 12320  0016A6  6FBD               	line	632
 12321                           ;main.c: 632:                                        break;
 12322                           	goto	l7063
 12323  0016A8  EF45  F00F         	line	633
 12324                           	
 12325                           l6907:; BSR set to: 0
 12326  0016AC                     
 12327                           ;main.c: 633:                                }
 12328                           	goto	l7063
 12329  0016AC  EF45  F00F         	
 12330                           l826:; BSR set to: 0
 12331  0016B0                     
 12332                           	
 12333                           l6909:; BSR set to: 0
 12334  0016B0                     
 12335                           	movf	((main@tecla))&0ffh,w
 12336  0016B0  51BE               	movwf	(??_main+0+0)&0ffh,c
 12337  0016B2  6E45               	clrf	(??_main+0+0+1)&0ffh,c
 12338  0016B4  6A46               
 12339                           	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
 12340                           ; Switch size 1, requested type "space"
 12341                           ; Number of cases is 1, Range of values is 0 to 0
 12342                           ; switch strategies available:
 12343                           ; Name         Instructions Cycles
 12344                           ; simple_byte            4     3 (average)
 12345                           ;	Chosen strategy is simple_byte
 12346                           
 12347                           	movf ??_main+0+1,c,w
 12348  0016B6  5046               	xorlw	0^0	; case 0
 12349  0016B8  0A00               	skipnz
 12350  0016BA  B4D8               	goto	l7967
 12351  0016BC  EF62  F00B         	goto	l7063
 12352  0016C0  EF45  F00F         	
 12353                           l7967:; BSR set to: 0
 12354  0016C4                     
 12355                           ; Switch size 1, requested type "space"
 12356                           ; Number of cases is 6, Range of values is 35 to 68
 12357                           ; switch strategies available:
 12358                           ; Name         Instructions Cycles
 12359                           ; simple_byte           19    10 (average)
 12360                           ;	Chosen strategy is simple_byte
 12361                           
 12362                           	movf ??_main+0+0,c,w
 12363  0016C4  5045               	xorlw	35^0	; case 35
 12364  0016C6  0A23               	skipnz
 12365  0016C8  B4D8               	goto	l6901
 12366  0016CA  EF47  F00B         	xorlw	42^35	; case 42
 12367  0016CE  0A09               	skipnz
 12368  0016D0  B4D8               	goto	l6903
 12369  0016D2  EF4B  F00B         	xorlw	65^42	; case 65
 12370  0016D6  0A6B               	skipnz
 12371  0016D8  B4D8               	goto	l6897
 12372  0016DA  EF40  F00B         	xorlw	66^65	; case 66
 12373  0016DE  0A03               	skipnz
 12374  0016E0  B4D8               	goto	l6897
 12375  0016E2  EF40  F00B         	xorlw	67^66	; case 67
 12376  0016E6  0A01               	skipnz
 12377  0016E8  B4D8               	goto	l6897
 12378  0016EA  EF40  F00B         	xorlw	68^67	; case 68
 12379  0016EE  0A07               	skipnz
 12380  0016F0  B4D8               	goto	l6897
 12381  0016F2  EF40  F00B         	goto	l7063
 12382  0016F6  EF45  F00F         
 12383                           	
 12384                           l831:; BSR set to: 0
 12385  0016FA                     
 12386                           	line	634
 12387                           ;main.c: 634:                             break;
 12388                           	goto	l7063
 12389  0016FA  EF45  F00F         	line	636
 12390                           ;main.c: 636:              case 53:
 12391                           	
 12392                           l834:; BSR set to: 0
 12393  0016FE                     
 12394                           	line	637
 12395                           	
 12396                           l6911:; BSR set to: 0
 12397  0016FE                     
 12398                           ;main.c: 637:                             IHM.clr();
 12399                           	lfsr	2,(_IHM)+08h
 12400  0016FE  EE20  F0D7         	call	u5638
 12401  001702  D802               	goto	u5639
 12402  001704  EF8E  F00B         u5638:
 12403  001708                     	push
 12404  001708  0005               	movwf	pclath
 12405  00170A  6EFA               	movf	postinc2,w
 12406  00170C  50DE               	movwf	tosl
 12407  00170E  6EFD               	movf	postinc2,w
 12408  001710  50DE               	movwf	tosl+1
 12409  001712  6EFE               	movf	tblptru,w
 12410  001714  50F8               	movwf	tosl+2
 12411  001716  6EFF               	movf	pclath,w
 12412  001718  50FA               	
 12413                           	return	;indir
 12414  00171A  0012               	u5639:
 12415  00171C                     	line	638
 12416                           	
 12417                           l6913:
 12418  00171C                     ;main.c: 638:                             IHM.printpos(0, 0, "Ciclos:             ");
 12419                           	lfsr	2,(_IHM)+04h
 12420  00171C  EE20  F0D3         	call	u5648
 12421  001720  D802               	goto	u5649
 12422  001722  EFA4  F00B         u5648:
 12423  001726                     	push
 12424  001726  0005               	movwf	pclath
 12425  001728  6EFA               	movf	postinc2,w
 12426  00172A  50DE               	movwf	tosl
 12427  00172C  6EFD               	movf	postinc2,w
 12428  00172E  50DE               	movwf	tosl+1
 12429  001730  6EFE               	movf	tblptru,w
 12430  001732  50F8               	movwf	tosl+2
 12431  001734  6EFF               	movf	pclath,w
 12432  001736  50FA               	
 12433                           	movlw	low(0)
 12434  001738  0E00               	movwf	((c:dispLCD@col)),c
 12435  00173A  6E2E               		movlw	low(STR_24)
 12436  00173C  0EA5               	movwf	((c:dispLCD@str)),c
 12437  00173E  6E2F               	movlw	high(STR_24)
 12438  001740  0E7D               	movwf	((c:dispLCD@str+1)),c
 12439  001742  6E30               
 12440                           	movlw	(0)&0ffh
 12441  001744  0E00               	
 12442                           	return	;indir
 12443  001746  0012               	u5649:
 12444  001748                     	line	639
 12445                           	
 12446                           l6915:
 12447  001748                     ;main.c: 639:                             IHM.printv(0, 15, ciclos, 5);
 12448                           	lfsr	2,(_IHM)+06h
 12449  001748  EE20  F0D5         	call	u5658
 12450  00174C  D802               	goto	u5659
 12451  00174E  EFBC  F00B         u5658:
 12452  001752                     	push
 12453  001752  0005               	movwf	pclath
 12454  001754  6EFA               	movf	postinc2,w
 12455  001756  50DE               	movwf	tosl
 12456  001758  6EFD               	movf	postinc2,w
 12457  00175A  50DE               	movwf	tosl+1
 12458  00175C  6EFE               	movf	tblptru,w
 12459  00175E  50F8               	movwf	tosl+2
 12460  001760  6EFF               	movf	pclath,w
 12461  001762  50FA               	
 12462                           	movlw	low(0Fh)
 12463  001764  0E0F               	movwf	((c:dispLCD_num@col)),c
 12464  001766  6E32               	movff	(main@ciclos),(c:dispLCD_num@num)
 12465  001768  C0B4  F033         	movff	(main@ciclos+1),(c:dispLCD_num@num+1)
 12466  00176C  C0B5  F034         	movlw	low(05h)
 12467  001770  0E05               	movwf	((c:dispLCD_num@tam)),c
 12468  001772  6E35               	movlw	(0)&0ffh
 12469  001774  0E00               	
 12470                           	return	;indir
 12471  001776  0012               	u5659:
 12472  001778                     	line	640
 12473                           ;main.c: 640:                             IHM.printpos(2, 0, "0 - Ciclo continuo  ");
 12474                           	lfsr	2,(_IHM)+04h
 12475  001778  EE20  F0D3         	call	u5668
 12476  00177C  D802               	goto	u5669
 12477  00177E  EFD2  F00B         u5668:
 12478  001782                     	push
 12479  001782  0005               	movwf	pclath
 12480  001784  6EFA               	movf	postinc2,w
 12481  001786  50DE               	movwf	tosl
 12482  001788  6EFD               	movf	postinc2,w
 12483  00178A  50DE               	movwf	tosl+1
 12484  00178C  6EFE               	movf	tblptru,w
 12485  00178E  50F8               	movwf	tosl+2
 12486  001790  6EFF               	movf	pclath,w
 12487  001792  50FA               	
 12488                           	movlw	low(0)
 12489  001794  0E00               	movwf	((c:dispLCD@col)),c
 12490  001796  6E2E               		movlw	low(STR_25)
 12491  001798  0EE0               	movwf	((c:dispLCD@str)),c
 12492  00179A  6E2F               	movlw	high(STR_25)
 12493  00179C  0E7E               	movwf	((c:dispLCD@str+1)),c
 12494  00179E  6E30               
 12495                           	movlw	(02h)&0ffh
 12496  0017A0  0E02               	
 12497                           	return	;indir
 12498  0017A2  0012               	u5669:
 12499  0017A4                     	line	641
 12500                           	
 12501                           l6917:
 12502  0017A4                     ;main.c: 641:                             estado = 52;
 12503                           	movlw	low(034h)
 12504  0017A4  0E34               	movlb	0	; () banked
 12505  0017A6  0100               	movwf	((main@estado))&0ffh
 12506  0017A8  6FBD               	line	642
 12507                           ;main.c: 642:                             break;
 12508                           	goto	l7063
 12509  0017AA  EF45  F00F         	line	644
 12510                           ;main.c: 644:              case 74:
 12511                           	
 12512                           l835:; BSR set to: 0
 12513  0017AE                     
 12514                           	line	645
 12515                           	
 12516                           l6919:; BSR set to: 0
 12517  0017AE                     
 12518                           ;main.c: 645:                             salvar_dado(10, 10, init_cond);
 12519                           	movlw	low(0Ah)
 12520  0017AE  0E0A               	movwf	((c:salvar_dado@col)),c
 12521  0017B0  6E2D               	movff	(main@init_cond),(c:salvar_dado@data)
 12522  0017B2  C0B6  F02E         	movlw	(0Ah)&0ffh
 12523  0017B6  0E0A               	
 12524                           	call	_salvar_dado
 12525  0017B8  EC85  F020         	line	646
 12526                           	
 12527                           l6921:
 12528  0017BC                     ;main.c: 646:                             EEPROM.salvar(11, fifo_adrs() + 2);
 12529                           	call	u5678
 12530  0017BC  D802               	goto	u5679
 12531  0017BE  EFF5  F00B         u5678:
 12532  0017C2                     	push
 12533  0017C2  0005               	movlb	0	; () banked
 12534  0017C4  0100               	
 12535                           	movwf	pclath
 12536  0017C6  6EFA               	movf	((_EEPROM))&0ffh,w
 12537  0017C8  51D9               	movwf	tosl
 12538  0017CA  6EFD               	movf	((_EEPROM+1))&0ffh,w
 12539  0017CC  51DA               	movwf	tosl+1
 12540  0017CE  6EFE               	movf	tblptru,w
 12541  0017D0  50F8               	movwf	tosl+2
 12542  0017D2  6EFF               	movf	pclath,w
 12543  0017D4  50FA               	
 12544                           	call	_fifo_adrs	;wreg free
 12545  0017D6  EC6E  F021         	movlw	low(02h)
 12546  0017DA  0E02               	addwf	(0+?_fifo_adrs),c,w
 12547  0017DC  2427               	movwf	((c:salvar_receita@data)),c
 12548  0017DE  6E2D               	movlw	high(02h)
 12549  0017E0  0E00               	addwfc	(1+?_fifo_adrs),c,w
 12550  0017E2  2028               	movwf	1+((c:salvar_receita@data)),c
 12551  0017E4  6E2E               	movlw	(0Bh)&0ffh
 12552  0017E6  0E0B               	
 12553                           	return	;indir
 12554  0017E8  0012               	u5679:
 12555  0017EA                     	line	647
 12556                           	
 12557                           l6923:
 12558  0017EA                     ;main.c: 647:                             IHM.print("    DESEJA SALVAR   \n"
 12559                           		movlw	low(STR_26)
 12560  0017EA  0EDD               	movwf	((c:dispLCD_str@str)),c
 12561  0017EC  6E2E               	movlw	high(STR_26)
 12562  0017EE  0E7C               	movwf	((c:dispLCD_str@str+1)),c
 12563  0017F0  6E2F               
 12564                           	lfsr	2,(_IHM)+02h
 12565  0017F2  EE20  F0D1         	call	u5688
 12566  0017F6  D802               	goto	u5689
 12567  0017F8  EF08  F00C         u5688:
 12568  0017FC                     	push
 12569  0017FC  0005               	movwf	pclath
 12570  0017FE  6EFA               	movf	postinc2,w
 12571  001800  50DE               	movwf	tosl
 12572  001802  6EFD               	movf	postinc2,w
 12573  001804  50DE               	movwf	tosl+1
 12574  001806  6EFE               	movf	tblptru,w
 12575  001808  50F8               	movwf	tosl+2
 12576  00180A  6EFF               	movf	pclath,w
 12577  00180C  50FA               	
 12578                           	return	;indir
 12579  00180E  0012               	u5689:
 12580  001810                     	line	651
 12581                           	
 12582                           l6925:
 12583  001810                     ;main.c: 651:                             tecla = teclado_borda();
 12584                           	call	_teclado_borda
 12585  001810  EC2D  F01F         	movlb	0	; () banked
 12586  001814  0100               	movwf	((main@tecla))&0ffh
 12587  001816  6FBE               	line	652
 12588                           ;main.c: 652:                             switch(tecla)
 12589                           	goto	l6935
 12590  001818  EF1B  F00C         	line	654
 12591                           ;main.c: 653:                             {;main.c: 654:                                
                                  case '#': estado = 75; break;
 12592                           	
 12593                           l837:; BSR set to: 0
 12594  00181C                     
 12595                           	
 12596                           l6927:; BSR set to: 0
 12597  00181C                     
 12598                           	movlw	low(04Bh)
 12599  00181C  0E4B               	movwf	((main@estado))&0ffh
 12600  00181E  6FBD               	goto	l7063
 12601  001820  EF45  F00F         	line	655
 12602                           ;main.c: 655:                                 case '*': dispLCD_clr(); estado = 53; brea
                                 k;
 12603                           	
 12604                           l839:; BSR set to: 0
 12605  001824                     
 12606                           	
 12607                           l6929:; BSR set to: 0
 12608  001824                     
 12609                           	call	_dispLCD_clr	;wreg free
 12610  001824  EC9A  F021         	
 12611                           l6931:
 12612  001828                     	movlw	low(035h)
 12613  001828  0E35               	movlb	0	; () banked
 12614  00182A  0100               	movwf	((main@estado))&0ffh
 12615  00182C  6FBD               	goto	l7063
 12616  00182E  EF45  F00F         	line	656
 12617                           	
 12618                           l6933:; BSR set to: 0
 12619  001832                     
 12620                           ;main.c: 656:                             }
 12621                           	goto	l7063
 12622  001832  EF45  F00F         	
 12623                           l836:; BSR set to: 0
 12624  001836                     
 12625                           	
 12626                           l6935:; BSR set to: 0
 12627  001836                     
 12628                           	movf	((main@tecla))&0ffh,w
 12629  001836  51BE               	movwf	(??_main+0+0)&0ffh,c
 12630  001838  6E45               	clrf	(??_main+0+0+1)&0ffh,c
 12631  00183A  6A46               
 12632                           	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
 12633                           ; Switch size 1, requested type "space"
 12634                           ; Number of cases is 1, Range of values is 0 to 0
 12635                           ; switch strategies available:
 12636                           ; Name         Instructions Cycles
 12637                           ; simple_byte            4     3 (average)
 12638                           ;	Chosen strategy is simple_byte
 12639                           
 12640                           	movf ??_main+0+1,c,w
 12641  00183C  5046               	xorlw	0^0	; case 0
 12642  00183E  0A00               	skipnz
 12643  001840  B4D8               	goto	l7969
 12644  001842  EF25  F00C         	goto	l7063
 12645  001846  EF45  F00F         	
 12646                           l7969:; BSR set to: 0
 12647  00184A                     
 12648                           ; Switch size 1, requested type "space"
 12649                           ; Number of cases is 2, Range of values is 35 to 42
 12650                           ; switch strategies available:
 12651                           ; Name         Instructions Cycles
 12652                           ; simple_byte            7     4 (average)
 12653                           ;	Chosen strategy is simple_byte
 12654                           
 12655                           	movf ??_main+0+0,c,w
 12656  00184A  5045               	xorlw	35^0	; case 35
 12657  00184C  0A23               	skipnz
 12658  00184E  B4D8               	goto	l6927
 12659  001850  EF0E  F00C         	xorlw	42^35	; case 42
 12660  001854  0A09               	skipnz
 12661  001856  B4D8               	goto	l6929
 12662  001858  EF12  F00C         	goto	l7063
 12663  00185C  EF45  F00F         
 12664                           	
 12665                           l838:; BSR set to: 0
 12666  001860                     
 12667                           	line	657
 12668                           ;main.c: 657:                             break;
 12669                           	goto	l7063
 12670  001860  EF45  F00F         	line	659
 12671                           ;main.c: 659:              case 75:
 12672                           	
 12673                           l840:; BSR set to: 0
 12674  001864                     
 12675                           	line	660
 12676                           	
 12677                           l6937:; BSR set to: 0
 12678  001864                     
 12679                           ;main.c: 660:                             IHM.clr();
 12680                           	lfsr	2,(_IHM)+08h
 12681  001864  EE20  F0D7         	call	u5698
 12682  001868  D802               	goto	u5699
 12683  00186A  EF41  F00C         u5698:
 12684  00186E                     	push
 12685  00186E  0005               	movwf	pclath
 12686  001870  6EFA               	movf	postinc2,w
 12687  001872  50DE               	movwf	tosl
 12688  001874  6EFD               	movf	postinc2,w
 12689  001876  50DE               	movwf	tosl+1
 12690  001878  6EFE               	movf	tblptru,w
 12691  00187A  50F8               	movwf	tosl+2
 12692  00187C  6EFF               	movf	pclath,w
 12693  00187E  50FA               	
 12694                           	return	;indir
 12695  001880  0012               	u5699:
 12696  001882                     	line	661
 12697                           	
 12698                           l6939:
 12699  001882                     ;main.c: 661:                             IHM.print(" ESCOLHA A MEMORIA\n"
 12700                           		movlw	low(STR_27)
 12701  001882  0E8F               	movwf	((c:dispLCD_str@str)),c
 12702  001884  6E2E               	movlw	high(STR_27)
 12703  001886  0E7C               	movwf	((c:dispLCD_str@str+1)),c
 12704  001888  6E2F               
 12705                           	lfsr	2,(_IHM)+02h
 12706  00188A  EE20  F0D1         	call	u5708
 12707  00188E  D802               	goto	u5709
 12708  001890  EF54  F00C         u5708:
 12709  001894                     	push
 12710  001894  0005               	movwf	pclath
 12711  001896  6EFA               	movf	postinc2,w
 12712  001898  50DE               	movwf	tosl
 12713  00189A  6EFD               	movf	postinc2,w
 12714  00189C  50DE               	movwf	tosl+1
 12715  00189E  6EFE               	movf	tblptru,w
 12716  0018A0  50F8               	movwf	tosl+2
 12717  0018A2  6EFF               	movf	pclath,w
 12718  0018A4  50FA               	
 12719                           	return	;indir
 12720  0018A6  0012               	u5709:
 12721  0018A8                     	line	665
 12722                           	
 12723                           l6941:
 12724  0018A8                     ;main.c: 665:                             estado = 76;
 12725                           	movlw	low(04Ch)
 12726  0018A8  0E4C               	movlb	0	; () banked
 12727  0018AA  0100               	movwf	((main@estado))&0ffh
 12728  0018AC  6FBD               	goto	l6943
 12729  0018AE  EF59  F00C         	line	667
 12730                           ;main.c: 667:              case 76:
 12731                           	
 12732                           l841:; BSR set to: 0
 12733  0018B2                     
 12734                           	line	668
 12735                           	
 12736                           l6943:; BSR set to: 0
 12737  0018B2                     
 12738                           ;main.c: 668:                             tecla = teclado_borda();
 12739                           	call	_teclado_borda	;wreg free
 12740  0018B2  EC2D  F01F         	movlb	0	; () banked
 12741  0018B6  0100               	movwf	((main@tecla))&0ffh
 12742  0018B8  6FBE               	line	669
 12743                           ;main.c: 669:                             switch(tecla)
 12744                           	goto	l6957
 12745  0018BA  EFBC  F00C         	line	671
 12746                           ;main.c: 670:                             {;main.c: 671:                                
                                  case '0':
 12747                           	
 12748                           l843:; BSR set to: 0
 12749  0018BE                     
 12750                           	goto	l6945
 12751  0018BE  EF71  F00C         	line	672
 12752                           ;main.c: 672:                                 case '1':
 12753                           	
 12754                           l844:; BSR set to: 0
 12755  0018C2                     
 12756                           	goto	l6945
 12757  0018C2  EF71  F00C         	line	673
 12758                           ;main.c: 673:                                 case '2':
 12759                           	
 12760                           l845:; BSR set to: 0
 12761  0018C6                     
 12762                           	goto	l6945
 12763  0018C6  EF71  F00C         	line	674
 12764                           ;main.c: 674:                                 case '3':
 12765                           	
 12766                           l846:; BSR set to: 0
 12767  0018CA                     
 12768                           	goto	l6945
 12769  0018CA  EF71  F00C         	line	675
 12770                           ;main.c: 675:                                 case '4':
 12771                           	
 12772                           l847:; BSR set to: 0
 12773  0018CE                     
 12774                           	goto	l6945
 12775  0018CE  EF71  F00C         	line	676
 12776                           ;main.c: 676:                                 case '5':
 12777                           	
 12778                           l848:; BSR set to: 0
 12779  0018D2                     
 12780                           	goto	l6945
 12781  0018D2  EF71  F00C         	line	677
 12782                           ;main.c: 677:                                 case '6':
 12783                           	
 12784                           l849:; BSR set to: 0
 12785  0018D6                     
 12786                           	goto	l6945
 12787  0018D6  EF71  F00C         	line	678
 12788                           ;main.c: 678:                                 case '7':
 12789                           	
 12790                           l850:; BSR set to: 0
 12791  0018DA                     
 12792                           	goto	l6945
 12793  0018DA  EF71  F00C         	line	679
 12794                           ;main.c: 679:                                 case '8':
 12795                           	
 12796                           l851:; BSR set to: 0
 12797  0018DE                     
 12798                           	goto	l6945
 12799  0018DE  EF71  F00C         	line	680
 12800                           ;main.c: 680:                                 case '9':
 12801                           	
 12802                           l852:; BSR set to: 0
 12803  0018E2                     
 12804                           	line	681
 12805                           	
 12806                           l6945:; BSR set to: 0
 12807  0018E2                     
 12808                           ;main.c: 681:                                            salvar_dado(10, tecla % 0x30, i
                                 nit_cond);
 12809                           	movff	(main@tecla),(c:___awmod@dividend)
 12810  0018E2  C0BE  F027         	clrf	((c:___awmod@dividend+1)),c
 12811  0018E6  6A28               	movlw	high(030h)
 12812  0018E8  0E00               	movwf	((c:___awmod@divisor+1)),c
 12813  0018EA  6E2A               	movlw	low(030h)
 12814  0018EC  0E30               	movwf	((c:___awmod@divisor)),c
 12815  0018EE  6E29               	call	___awmod	;wreg free
 12816  0018F0  EC0E  F019         	movf	(0+?___awmod),c,w
 12817  0018F4  5027               	movwf	((c:salvar_dado@col)),c
 12818  0018F6  6E2D               	movff	(main@init_cond),(c:salvar_dado@data)
 12819  0018F8  C0B6  F02E         	movlw	(0Ah)&0ffh
 12820  0018FC  0E0A               	
 12821                           	call	_salvar_dado
 12822  0018FE  EC85  F020         	line	682
 12823                           	
 12824                           l6947:
 12825  001902                     ;main.c: 682:                                            EEPROM.salvar(tecla % 0x30, fif
                                 o_adrs() + 2);
 12826                           	call	u5718
 12827  001902  D802               	goto	u5719
 12828  001904  EFA1  F00C         u5718:
 12829  001908                     	push
 12830  001908  0005               	movlb	0	; () banked
 12831  00190A  0100               	
 12832                           	movwf	pclath
 12833  00190C  6EFA               	movf	((_EEPROM))&0ffh,w
 12834  00190E  51D9               	movwf	tosl
 12835  001910  6EFD               	movf	((_EEPROM+1))&0ffh,w
 12836  001912  51DA               	movwf	tosl+1
 12837  001914  6EFE               	movf	tblptru,w
 12838  001916  50F8               	movwf	tosl+2
 12839  001918  6EFF               	movf	pclath,w
 12840  00191A  50FA               	
 12841                           	call	_fifo_adrs	;wreg free
 12842  00191C  EC6E  F021         	movlw	low(02h)
 12843  001920  0E02               	addwf	(0+?_fifo_adrs),c,w
 12844  001922  2427               	movwf	((c:salvar_receita@data)),c
 12845  001924  6E2D               	movlw	high(02h)
 12846  001926  0E00               	addwfc	(1+?_fifo_adrs),c,w
 12847  001928  2028               	movwf	1+((c:salvar_receita@data)),c
 12848  00192A  6E2E               	movff	(main@tecla),(c:___awmod@dividend)
 12849  00192C  C0BE  F027         	clrf	((c:___awmod@dividend+1)),c
 12850  001930  6A28               	movlw	high(030h)
 12851  001932  0E00               	movwf	((c:___awmod@divisor+1)),c
 12852  001934  6E2A               	movlw	low(030h)
 12853  001936  0E30               	movwf	((c:___awmod@divisor)),c
 12854  001938  6E29               	call	___awmod	;wreg free
 12855  00193A  EC0E  F019         	movf	(0+?___awmod),c,w
 12856  00193E  5027               	
 12857                           	return	;indir
 12858  001940  0012               	u5719:
 12859  001942                     	line	683
 12860                           	
 12861                           l6949:
 12862  001942                     ;main.c: 683:                                            estado = 77;
 12863                           	movlw	low(04Dh)
 12864  001942  0E4D               	movlb	0	; () banked
 12865  001944  0100               	movwf	((main@estado))&0ffh
 12866  001946  6FBD               	line	684
 12867                           ;main.c: 684:                                            break;
 12868                           	goto	l7063
 12869  001948  EF45  F00F         	line	686
 12870                           ;main.c: 686:                                 case '*': IHM.clr(); estado = 74; break;
 12871                           	
 12872                           l854:; BSR set to: 0
 12873  00194C                     
 12874                           	
 12875                           l6951:; BSR set to: 0
 12876  00194C                     
 12877                           	lfsr	2,(_IHM)+08h
 12878  00194C  EE20  F0D7         	call	u5728
 12879  001950  D802               	goto	u5729
 12880  001952  EFB5  F00C         u5728:
 12881  001956                     	push
 12882  001956  0005               	movwf	pclath
 12883  001958  6EFA               	movf	postinc2,w
 12884  00195A  50DE               	movwf	tosl
 12885  00195C  6EFD               	movf	postinc2,w
 12886  00195E  50DE               	movwf	tosl+1
 12887  001960  6EFE               	movf	tblptru,w
 12888  001962  50F8               	movwf	tosl+2
 12889  001964  6EFF               	movf	pclath,w
 12890  001966  50FA               	
 12891                           	return	;indir
 12892  001968  0012               	u5729:
 12893  00196A                     	
 12894                           l6953:
 12895  00196A                     	movlw	low(04Ah)
 12896  00196A  0E4A               	movlb	0	; () banked
 12897  00196C  0100               	movwf	((main@estado))&0ffh
 12898  00196E  6FBD               	goto	l7063
 12899  001970  EF45  F00F         	line	687
 12900                           	
 12901                           l6955:; BSR set to: 0
 12902  001974                     
 12903                           ;main.c: 687:                             }
 12904                           	goto	l7063
 12905  001974  EF45  F00F         	
 12906                           l842:; BSR set to: 0
 12907  001978                     
 12908                           	
 12909                           l6957:; BSR set to: 0
 12910  001978                     
 12911                           	movf	((main@tecla))&0ffh,w
 12912  001978  51BE               	movwf	(??_main+0+0)&0ffh,c
 12913  00197A  6E45               	clrf	(??_main+0+0+1)&0ffh,c
 12914  00197C  6A46               
 12915                           	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
 12916                           ; Switch size 1, requested type "space"
 12917                           ; Number of cases is 1, Range of values is 0 to 0
 12918                           ; switch strategies available:
 12919                           ; Name         Instructions Cycles
 12920                           ; simple_byte            4     3 (average)
 12921                           ;	Chosen strategy is simple_byte
 12922                           
 12923                           	movf ??_main+0+1,c,w
 12924  00197E  5046               	xorlw	0^0	; case 0
 12925  001980  0A00               	skipnz
 12926  001982  B4D8               	goto	l7971
 12927  001984  EFC6  F00C         	goto	l7063
 12928  001988  EF45  F00F         	
 12929                           l7971:; BSR set to: 0
 12930  00198C                     
 12931                           ; Switch size 1, requested type "space"
 12932                           ; Number of cases is 11, Range of values is 42 to 57
 12933                           ; switch strategies available:
 12934                           ; Name         Instructions Cycles
 12935                           ; simple_byte           34    18 (average)
 12936                           ;	Chosen strategy is simple_byte
 12937                           
 12938                           	movf ??_main+0+0,c,w
 12939  00198C  5045               	xorlw	42^0	; case 42
 12940  00198E  0A2A               	skipnz
 12941  001990  B4D8               	goto	l6951
 12942  001992  EFA6  F00C         	xorlw	48^42	; case 48
 12943  001996  0A1A               	skipnz
 12944  001998  B4D8               	goto	l6945
 12945  00199A  EF71  F00C         	xorlw	49^48	; case 49
 12946  00199E  0A01               	skipnz
 12947  0019A0  B4D8               	goto	l6945
 12948  0019A2  EF71  F00C         	xorlw	50^49	; case 50
 12949  0019A6  0A03               	skipnz
 12950  0019A8  B4D8               	goto	l6945
 12951  0019AA  EF71  F00C         	xorlw	51^50	; case 51
 12952  0019AE  0A01               	skipnz
 12953  0019B0  B4D8               	goto	l6945
 12954  0019B2  EF71  F00C         	xorlw	52^51	; case 52
 12955  0019B6  0A07               	skipnz
 12956  0019B8  B4D8               	goto	l6945
 12957  0019BA  EF71  F00C         	xorlw	53^52	; case 53
 12958  0019BE  0A01               	skipnz
 12959  0019C0  B4D8               	goto	l6945
 12960  0019C2  EF71  F00C         	xorlw	54^53	; case 54
 12961  0019C6  0A03               	skipnz
 12962  0019C8  B4D8               	goto	l6945
 12963  0019CA  EF71  F00C         	xorlw	55^54	; case 55
 12964  0019CE  0A01               	skipnz
 12965  0019D0  B4D8               	goto	l6945
 12966  0019D2  EF71  F00C         	xorlw	56^55	; case 56
 12967  0019D6  0A0F               	skipnz
 12968  0019D8  B4D8               	goto	l6945
 12969  0019DA  EF71  F00C         	xorlw	57^56	; case 57
 12970  0019DE  0A01               	skipnz
 12971  0019E0  B4D8               	goto	l6945
 12972  0019E2  EF71  F00C         	goto	l7063
 12973  0019E6  EF45  F00F         
 12974                           	
 12975                           l853:; BSR set to: 0
 12976  0019EA                     
 12977                           	line	688
 12978                           ;main.c: 688:                             break;
 12979                           	goto	l7063
 12980  0019EA  EF45  F00F         	line	690
 12981                           ;main.c: 690:              case 77:
 12982                           	
 12983                           l855:; BSR set to: 0
 12984  0019EE                     
 12985                           	line	691
 12986                           	
 12987                           l6959:; BSR set to: 0
 12988  0019EE                     
 12989                           ;main.c: 691:                             IHM.clr();
 12990                           	lfsr	2,(_IHM)+08h
 12991  0019EE  EE20  F0D7         	call	u5738
 12992  0019F2  D802               	goto	u5739
 12993  0019F4  EF06  F00D         u5738:
 12994  0019F8                     	push
 12995  0019F8  0005               	movwf	pclath
 12996  0019FA  6EFA               	movf	postinc2,w
 12997  0019FC  50DE               	movwf	tosl
 12998  0019FE  6EFD               	movf	postinc2,w
 12999  001A00  50DE               	movwf	tosl+1
 13000  001A02  6EFE               	movf	tblptru,w
 13001  001A04  50F8               	movwf	tosl+2
 13002  001A06  6EFF               	movf	pclath,w
 13003  001A08  50FA               	
 13004                           	return	;indir
 13005  001A0A  0012               	u5739:
 13006  001A0C                     	line	692
 13007                           	
 13008                           l6961:
 13009  001A0C                     ;main.c: 692:                             for(char i = 0; i <= 3; i++)
 13010                           	movlw	low(0)
 13011  001A0C  0E00               	movlb	0	; () banked
 13012  001A0E  0100               	movwf	((main@i_974))&0ffh
 13013  001A10  6FA9               	
 13014                           l6963:; BSR set to: 0
 13015  001A12                     
 13016                           		movlw	04h-1
 13017  001A12  0E03               	cpfsgt	((main@i_974))&0ffh
 13018  001A14  65A9               	goto	u5741
 13019  001A16  EF0F  F00D         	goto	u5740
 13020  001A1A  EF11  F00D         
 13021                           u5741:
 13022  001A1E                     	goto	l6967
 13023  001A1E  EF15  F00D         u5740:
 13024  001A22                     	goto	l6985
 13025  001A22  EF56  F00D         	
 13026                           l6965:; BSR set to: 0
 13027  001A26                     
 13028                           	goto	l6985
 13029  001A26  EF56  F00D         	
 13030                           l856:; BSR set to: 0
 13031  001A2A                     
 13032                           	line	694
 13033                           	
 13034                           l6967:; BSR set to: 0
 13035  001A2A                     
 13036                           ;main.c: 693:                             {;main.c: 694:                                
                                  for(char j = 0; j <= 19; j++)
 13037                           	movlw	low(0)
 13038  001A2A  0E00               	movwf	((main@j_975))&0ffh
 13039  001A2C  6FAA               	
 13040                           l6969:; BSR set to: 0
 13041  001A2E                     
 13042                           		movlw	014h-1
 13043  001A2E  0E13               	cpfsgt	((main@j_975))&0ffh
 13044  001A30  65AA               	goto	u5751
 13045  001A32  EF1D  F00D         	goto	u5750
 13046  001A36  EF1F  F00D         
 13047                           u5751:
 13048  001A3A                     	goto	l6973
 13049  001A3A  EF23  F00D         u5750:
 13050  001A3E                     	goto	l6981
 13051  001A3E  EF4B  F00D         	
 13052                           l6971:; BSR set to: 0
 13053  001A42                     
 13054                           	goto	l6981
 13055  001A42  EF4B  F00D         	
 13056                           l858:; BSR set to: 0
 13057  001A46                     
 13058                           	line	696
 13059                           	
 13060                           l6973:; BSR set to: 0
 13061  001A46                     
 13062                           ;main.c: 695:                                 {;main.c: 696:                            
                                          IHM.printpos(i, j, "\377");
 13063                           	lfsr	2,(_IHM)+04h
 13064  001A46  EE20  F0D3         	call	u5768
 13065  001A4A  D802               	goto	u5769
 13066  001A4C  EF39  F00D         u5768:
 13067  001A50                     	push
 13068  001A50  0005               	movwf	pclath
 13069  001A52  6EFA               	movf	postinc2,w
 13070  001A54  50DE               	movwf	tosl
 13071  001A56  6EFD               	movf	postinc2,w
 13072  001A58  50DE               	movwf	tosl+1
 13073  001A5A  6EFE               	movf	tblptru,w
 13074  001A5C  50F8               	movwf	tosl+2
 13075  001A5E  6EFF               	movf	pclath,w
 13076  001A60  50FA               	
 13077                           	movff	(main@j_975),(c:dispLCD@col)
 13078  001A62  C0AA  F02E         		movlw	low(STR_28)
 13079  001A66  0EFC               	movwf	((c:dispLCD@str)),c
 13080  001A68  6E2F               	movlw	high(STR_28)
 13081  001A6A  0E7F               	movwf	((c:dispLCD@str+1)),c
 13082  001A6C  6E30               
 13083                           	movf	((main@i_974))&0ffh,w
 13084  001A6E  51A9               	
 13085                           	return	;indir
 13086  001A70  0012               	u5769:
 13087  001A72                     	line	697
 13088                           	
 13089                           l6975:
 13090  001A72                     ;main.c: 697:                                     delay(10);
 13091                           	movlw	high(0Ah)
 13092  001A72  0E00               	movwf	((c:delay@t+1)),c
 13093  001A74  6E28               	movlw	low(0Ah)
 13094  001A76  0E0A               	movwf	((c:delay@t)),c
 13095  001A78  6E27               	call	_delay
 13096  001A7A  ECD7  F01F         	line	698
 13097                           	
 13098                           l6977:
 13099  001A7E                     ;main.c: 698:                                 }
 13100                           	movlb	0	; () banked
 13101  001A7E  0100               	incf	((main@j_975))&0ffh
 13102  001A80  2BAA               	
 13103                           l6979:; BSR set to: 0
 13104  001A82                     
 13105                           		movlw	014h-1
 13106  001A82  0E13               	cpfsgt	((main@j_975))&0ffh
 13107  001A84  65AA               	goto	u5771
 13108  001A86  EF47  F00D         	goto	u5770
 13109  001A8A  EF49  F00D         
 13110                           u5771:
 13111  001A8E                     	goto	l6973
 13112  001A8E  EF23  F00D         u5770:
 13113  001A92                     	goto	l6981
 13114  001A92  EF4B  F00D         	
 13115                           l859:; BSR set to: 0
 13116  001A96                     
 13117                           	line	699
 13118                           	
 13119                           l6981:; BSR set to: 0
 13120  001A96                     
 13121                           ;main.c: 699:                             }
 13122                           	incf	((main@i_974))&0ffh
 13123  001A96  2BA9               	
 13124                           l6983:; BSR set to: 0
 13125  001A98                     
 13126                           		movlw	04h-1
 13127  001A98  0E03               	cpfsgt	((main@i_974))&0ffh
 13128  001A9A  65A9               	goto	u5781
 13129  001A9C  EF52  F00D         	goto	u5780
 13130  001AA0  EF54  F00D         
 13131                           u5781:
 13132  001AA4                     	goto	l6967
 13133  001AA4  EF15  F00D         u5780:
 13134  001AA8                     	goto	l6985
 13135  001AA8  EF56  F00D         	
 13136                           l857:; BSR set to: 0
 13137  001AAC                     
 13138                           	line	701
 13139                           	
 13140                           l6985:; BSR set to: 0
 13141  001AAC                     
 13142                           ;main.c: 701:                             for(char i = 0; i <= 3; i++)
 13143                           	movlw	low(0)
 13144  001AAC  0E00               	movwf	((main@i_977))&0ffh
 13145  001AAE  6FAB               	
 13146                           l6987:; BSR set to: 0
 13147  001AB0                     
 13148                           		movlw	04h-1
 13149  001AB0  0E03               	cpfsgt	((main@i_977))&0ffh
 13150  001AB2  65AB               	goto	u5791
 13151  001AB4  EF5E  F00D         	goto	u5790
 13152  001AB8  EF60  F00D         
 13153                           u5791:
 13154  001ABC                     	goto	l6991
 13155  001ABC  EF64  F00D         u5790:
 13156  001AC0                     	goto	l7009
 13157  001AC0  EFA5  F00D         	
 13158                           l6989:; BSR set to: 0
 13159  001AC4                     
 13160                           	goto	l7009
 13161  001AC4  EFA5  F00D         	
 13162                           l860:; BSR set to: 0
 13163  001AC8                     
 13164                           	line	703
 13165                           	
 13166                           l6991:; BSR set to: 0
 13167  001AC8                     
 13168                           ;main.c: 702:                             {;main.c: 703:                                
                                  for(char j = 0; j <= 19; j++)
 13169                           	movlw	low(0)
 13170  001AC8  0E00               	movwf	((main@j_978))&0ffh
 13171  001ACA  6FAC               	
 13172                           l6993:; BSR set to: 0
 13173  001ACC                     
 13174                           		movlw	014h-1
 13175  001ACC  0E13               	cpfsgt	((main@j_978))&0ffh
 13176  001ACE  65AC               	goto	u5801
 13177  001AD0  EF6C  F00D         	goto	u5800
 13178  001AD4  EF6E  F00D         
 13179                           u5801:
 13180  001AD8                     	goto	l6997
 13181  001AD8  EF72  F00D         u5800:
 13182  001ADC                     	goto	l7005
 13183  001ADC  EF9A  F00D         	
 13184                           l6995:; BSR set to: 0
 13185  001AE0                     
 13186                           	goto	l7005
 13187  001AE0  EF9A  F00D         	
 13188                           l862:; BSR set to: 0
 13189  001AE4                     
 13190                           	line	705
 13191                           	
 13192                           l6997:; BSR set to: 0
 13193  001AE4                     
 13194                           ;main.c: 704:                                 {;main.c: 705:                            
                                          IHM.printpos(i, j, " ");
 13195                           	lfsr	2,(_IHM)+04h
 13196  001AE4  EE20  F0D3         	call	u5818
 13197  001AE8  D802               	goto	u5819
 13198  001AEA  EF88  F00D         u5818:
 13199  001AEE                     	push
 13200  001AEE  0005               	movwf	pclath
 13201  001AF0  6EFA               	movf	postinc2,w
 13202  001AF2  50DE               	movwf	tosl
 13203  001AF4  6EFD               	movf	postinc2,w
 13204  001AF6  50DE               	movwf	tosl+1
 13205  001AF8  6EFE               	movf	tblptru,w
 13206  001AFA  50F8               	movwf	tosl+2
 13207  001AFC  6EFF               	movf	pclath,w
 13208  001AFE  50FA               	
 13209                           	movff	(main@j_978),(c:dispLCD@col)
 13210  001B00  C0AC  F02E         		movlw	low(STR_29)
 13211  001B04  0EB8               	movwf	((c:dispLCD@str)),c
 13212  001B06  6E2F               	movlw	high(STR_29)
 13213  001B08  0E7D               	movwf	((c:dispLCD@str+1)),c
 13214  001B0A  6E30               
 13215                           	movf	((main@i_977))&0ffh,w
 13216  001B0C  51AB               	
 13217                           	return	;indir
 13218  001B0E  0012               	u5819:
 13219  001B10                     	line	706
 13220                           	
 13221                           l6999:
 13222  001B10                     ;main.c: 706:                                     delay(10);
 13223                           	movlw	high(0Ah)
 13224  001B10  0E00               	movwf	((c:delay@t+1)),c
 13225  001B12  6E28               	movlw	low(0Ah)
 13226  001B14  0E0A               	movwf	((c:delay@t)),c
 13227  001B16  6E27               	call	_delay
 13228  001B18  ECD7  F01F         	line	707
 13229                           	
 13230                           l7001:
 13231  001B1C                     ;main.c: 707:                                 }
 13232                           	movlb	0	; () banked
 13233  001B1C  0100               	incf	((main@j_978))&0ffh
 13234  001B1E  2BAC               	
 13235                           l7003:; BSR set to: 0
 13236  001B20                     
 13237                           		movlw	014h-1
 13238  001B20  0E13               	cpfsgt	((main@j_978))&0ffh
 13239  001B22  65AC               	goto	u5821
 13240  001B24  EF96  F00D         	goto	u5820
 13241  001B28  EF98  F00D         
 13242                           u5821:
 13243  001B2C                     	goto	l6997
 13244  001B2C  EF72  F00D         u5820:
 13245  001B30                     	goto	l7005
 13246  001B30  EF9A  F00D         	
 13247                           l863:; BSR set to: 0
 13248  001B34                     
 13249                           	line	708
 13250                           	
 13251                           l7005:; BSR set to: 0
 13252  001B34                     
 13253                           ;main.c: 708:                             }
 13254                           	incf	((main@i_977))&0ffh
 13255  001B34  2BAB               	
 13256                           l7007:; BSR set to: 0
 13257  001B36                     
 13258                           		movlw	04h-1
 13259  001B36  0E03               	cpfsgt	((main@i_977))&0ffh
 13260  001B38  65AB               	goto	u5831
 13261  001B3A  EFA1  F00D         	goto	u5830
 13262  001B3E  EFA3  F00D         
 13263                           u5831:
 13264  001B42                     	goto	l6991
 13265  001B42  EF64  F00D         u5830:
 13266  001B46                     	goto	l7009
 13267  001B46  EFA5  F00D         	
 13268                           l861:; BSR set to: 0
 13269  001B4A                     
 13270                           	line	709
 13271                           	
 13272                           l7009:; BSR set to: 0
 13273  001B4A                     
 13274                           ;main.c: 709:                             IHM.printpos(1, 0, "      SEQUENCIA     ");
 13275                           	lfsr	2,(_IHM)+04h
 13276  001B4A  EE20  F0D3         	call	u5848
 13277  001B4E  D802               	goto	u5849
 13278  001B50  EFBB  F00D         u5848:
 13279  001B54                     	push
 13280  001B54  0005               	movwf	pclath
 13281  001B56  6EFA               	movf	postinc2,w
 13282  001B58  50DE               	movwf	tosl
 13283  001B5A  6EFD               	movf	postinc2,w
 13284  001B5C  50DE               	movwf	tosl+1
 13285  001B5E  6EFE               	movf	tblptru,w
 13286  001B60  50F8               	movwf	tosl+2
 13287  001B62  6EFF               	movf	pclath,w
 13288  001B64  50FA               	
 13289                           	movlw	low(0)
 13290  001B66  0E00               	movwf	((c:dispLCD@col)),c
 13291  001B68  6E2E               		movlw	low(STR_30)
 13292  001B6A  0E4D               	movwf	((c:dispLCD@str)),c
 13293  001B6C  6E2F               	movlw	high(STR_30)
 13294  001B6E  0E7E               	movwf	((c:dispLCD@str+1)),c
 13295  001B70  6E30               
 13296                           	movlw	(01h)&0ffh
 13297  001B72  0E01               	
 13298                           	return	;indir
 13299  001B74  0012               	u5849:
 13300  001B76                     	line	710
 13301                           ;main.c: 710:                             IHM.printpos(2, 0, "        SALVA       ");
 13302                           	lfsr	2,(_IHM)+04h
 13303  001B76  EE20  F0D3         	call	u5858
 13304  001B7A  D802               	goto	u5859
 13305  001B7C  EFD1  F00D         u5858:
 13306  001B80                     	push
 13307  001B80  0005               	movwf	pclath
 13308  001B82  6EFA               	movf	postinc2,w
 13309  001B84  50DE               	movwf	tosl
 13310  001B86  6EFD               	movf	postinc2,w
 13311  001B88  50DE               	movwf	tosl+1
 13312  001B8A  6EFE               	movf	tblptru,w
 13313  001B8C  50F8               	movwf	tosl+2
 13314  001B8E  6EFF               	movf	pclath,w
 13315  001B90  50FA               	
 13316                           	movlw	low(0)
 13317  001B92  0E00               	movwf	((c:dispLCD@col)),c
 13318  001B94  6E2E               		movlw	low(STR_31)
 13319  001B96  0ECF               	movwf	((c:dispLCD@str)),c
 13320  001B98  6E2F               	movlw	high(STR_31)
 13321  001B9A  0E7D               	movwf	((c:dispLCD@str+1)),c
 13322  001B9C  6E30               
 13323                           	movlw	(02h)&0ffh
 13324  001B9E  0E02               	
 13325                           	return	;indir
 13326  001BA0  0012               	u5859:
 13327  001BA2                     	line	712
 13328                           	
 13329                           l7011:
 13330  001BA2                     ;main.c: 712:                             setT1(1000);
 13331                           	movlw	low(03E8h)
 13332  001BA2  0EE8               	movwf	((c:setT1@c)),c
 13333  001BA4  6E2D               	movlw	high(03E8h)
 13334  001BA6  0E03               	movwf	((c:setT1@c+1)),c
 13335  001BA8  6E2E               	movlw	low highword(03E8h)
 13336  001BAA  0E00               	movwf	((c:setT1@c+2)),c
 13337  001BAC  6E2F               	movlw	high highword(03E8h)
 13338  001BAE  0E00               	movwf	((c:setT1@c+3)),c
 13339  001BB0  6E30               	call	_setT1
 13340  001BB2  EC47  F021         	line	713
 13341                           	
 13342                           l7013:
 13343  001BB6                     ;main.c: 713:                             estado = 78;
 13344                           	movlw	low(04Eh)
 13345  001BB6  0E4E               	movlb	0	; () banked
 13346  001BB8  0100               	movwf	((main@estado))&0ffh
 13347  001BBA  6FBD               	line	714
 13348                           ;main.c: 714:                             break;
 13349                           	goto	l7063
 13350  001BBC  EF45  F00F         	line	716
 13351                           ;main.c: 716:              case 78:
 13352                           	
 13353                           l864:; BSR set to: 0
 13354  001BC0                     
 13355                           	line	717
 13356                           	
 13357                           l7015:; BSR set to: 0
 13358  001BC0                     
 13359                           ;main.c: 717:                             if(!statusT1())
 13360                           	call	_statusT1	;wreg free
 13361  001BC0  EC65  F021         	movf	(0+?_statusT1),c,w
 13362  001BC4  5027               iorwf	(1+?_statusT1),c,w
 13363  001BC6  1028               iorwf	(2+?_statusT1),c,w
 13364  001BC8  1029               iorwf	(3+?_statusT1),c,w
 13365  001BCA  102A               	btfss	status,2
 13366  001BCC  A4D8               	goto	u5861
 13367  001BCE  EFEB  F00D         	goto	u5860
 13368  001BD2  EFED  F00D         
 13369                           u5861:
 13370  001BD6                     	goto	l7063
 13371  001BD6  EF45  F00F         u5860:
 13372  001BDA                     	line	718
 13373                           	
 13374                           l7017:
 13375  001BDA                     ;main.c: 718:                                 estado = 53;
 13376                           	movlw	low(035h)
 13377  001BDA  0E35               	movlb	0	; () banked
 13378  001BDC  0100               	movwf	((main@estado))&0ffh
 13379  001BDE  6FBD               	goto	l7063
 13380  001BE0  EF45  F00F         	
 13381                           l865:; BSR set to: 0
 13382  001BE4                     
 13383                           	line	719
 13384                           ;main.c: 719:                             break;
 13385                           	goto	l7063
 13386  001BE4  EF45  F00F         	line	721
 13387                           ;main.c: 721:              case 90:
 13388                           	
 13389                           l866:; BSR set to: 0
 13390  001BE8                     
 13391                           	line	722
 13392                           	
 13393                           l7019:; BSR set to: 0
 13394  001BE8                     
 13395                           ;main.c: 722:                             IHM.printpos(2, 0, "config contrl:     %");
 13396                           	lfsr	2,(_IHM)+04h
 13397  001BE8  EE20  F0D3         	call	u5878
 13398  001BEC  D802               	goto	u5879
 13399  001BEE  EF0A  F00E         u5878:
 13400  001BF2                     	push
 13401  001BF2  0005               	movwf	pclath
 13402  001BF4  6EFA               	movf	postinc2,w
 13403  001BF6  50DE               	movwf	tosl
 13404  001BF8  6EFD               	movf	postinc2,w
 13405  001BFA  50DE               	movwf	tosl+1
 13406  001BFC  6EFE               	movf	tblptru,w
 13407  001BFE  50F8               	movwf	tosl+2
 13408  001C00  6EFF               	movf	pclath,w
 13409  001C02  50FA               	
 13410                           	movlw	low(0)
 13411  001C04  0E00               	movwf	((c:dispLCD@col)),c
 13412  001C06  6E2E               		movlw	low(STR_32)
 13413  001C08  0E0A               	movwf	((c:dispLCD@str)),c
 13414  001C0A  6E2F               	movlw	high(STR_32)
 13415  001C0C  0E7F               	movwf	((c:dispLCD@str+1)),c
 13416  001C0E  6E30               
 13417                           	movlw	(02h)&0ffh
 13418  001C10  0E02               	
 13419                           	return	;indir
 13420  001C12  0012               	u5879:
 13421  001C14                     	line	723
 13422                           	
 13423                           l7021:
 13424  001C14                     ;main.c: 723:                             IHM.printv(2, 15, por, 3);
 13425                           	lfsr	2,(_IHM)+06h
 13426  001C14  EE20  F0D5         	call	u5888
 13427  001C18  D802               	goto	u5889
 13428  001C1A  EF22  F00E         u5888:
 13429  001C1E                     	push
 13430  001C1E  0005               	movwf	pclath
 13431  001C20  6EFA               	movf	postinc2,w
 13432  001C22  50DE               	movwf	tosl
 13433  001C24  6EFD               	movf	postinc2,w
 13434  001C26  50DE               	movwf	tosl+1
 13435  001C28  6EFE               	movf	tblptru,w
 13436  001C2A  50F8               	movwf	tosl+2
 13437  001C2C  6EFF               	movf	pclath,w
 13438  001C2E  50FA               	
 13439                           	movlw	low(0Fh)
 13440  001C30  0E0F               	movwf	((c:dispLCD_num@col)),c
 13441  001C32  6E32               	movff	(main@por),(c:dispLCD_num@num)
 13442  001C34  C0B2  F033         	movff	(main@por+1),(c:dispLCD_num@num+1)
 13443  001C38  C0B3  F034         	movlw	low(03h)
 13444  001C3C  0E03               	movwf	((c:dispLCD_num@tam)),c
 13445  001C3E  6E35               	movlw	(02h)&0ffh
 13446  001C40  0E02               	
 13447                           	return	;indir
 13448  001C42  0012               	u5889:
 13449  001C44                     	line	724
 13450                           	
 13451                           l7023:
 13452  001C44                     ;main.c: 724:                             estado = 91;
 13453                           	movlw	low(05Bh)
 13454  001C44  0E5B               	movlb	0	; () banked
 13455  001C46  0100               	movwf	((main@estado))&0ffh
 13456  001C48  6FBD               	line	725
 13457                           ;main.c: 725:                             break;
 13458                           	goto	l7063
 13459  001C4A  EF45  F00F         	line	727
 13460                           ;main.c: 727:              case 91:
 13461                           	
 13462                           l867:; BSR set to: 0
 13463  001C4E                     
 13464                           	line	728
 13465                           	
 13466                           l7025:; BSR set to: 0
 13467  001C4E                     
 13468                           ;main.c: 728:                             tecla = teclado_borda();
 13469                           	call	_teclado_borda
 13470  001C4E  EC2D  F01F         	movlb	0	; () banked
 13471  001C52  0100               	movwf	((main@tecla))&0ffh
 13472  001C54  6FBE               	line	729
 13473                           	
 13474                           l7027:; BSR set to: 0
 13475  001C56                     
 13476                           ;main.c: 729:                             if(tecla >= '0' && tecla <= '9')
 13477                           		movlw	030h-1
 13478  001C56  0E2F               	cpfsgt	((main@tecla))&0ffh
 13479  001C58  65BE               	goto	u5891
 13480  001C5A  EF31  F00E         	goto	u5890
 13481  001C5E  EF33  F00E         
 13482                           u5891:
 13483  001C62                     	goto	l7037
 13484  001C62  EF56  F00E         u5890:
 13485  001C66                     	
 13486                           l7029:; BSR set to: 0
 13487  001C66                     
 13488                           		movlw	03Ah-0
 13489  001C66  0E3A               	cpfslt	((main@tecla))&0ffh
 13490  001C68  61BE               	goto	u5901
 13491  001C6A  EF39  F00E         	goto	u5900
 13492  001C6E  EF3B  F00E         
 13493                           u5901:
 13494  001C72                     	goto	l7037
 13495  001C72  EF56  F00E         u5900:
 13496  001C76                     	line	731
 13497                           	
 13498                           l7031:; BSR set to: 0
 13499  001C76                     
 13500                           ;main.c: 730:                             {;main.c: 731:                                
                                  dignum_conc(tecla, &por);
 13501                           		movlw	low(main@por)
 13502  001C76  0EB2               	movwf	((c:dignum_conc@ptrNum)),c
 13503  001C78  6E2D               	movlw	high(main@por)
 13504  001C7A  0E00               	movwf	((c:dignum_conc@ptrNum+1)),c
 13505  001C7C  6E2E               
 13506                           	movf	((main@tecla))&0ffh,w
 13507  001C7E  51BE               	
 13508                           	call	_dignum_conc
 13509  001C80  ECBE  F01E         	line	732
 13510                           	
 13511                           l7033:
 13512  001C84                     ;main.c: 732:                                 if(por > 100)
 13513                           	movlb	0	; () banked
 13514  001C84  0100               		movf	((main@por+1))&0ffh,w
 13515  001C86  51B3               	bnz	u5910
 13516  001C88  E109               	movlw	101
 13517  001C8A  0E65               	subwf	 ((main@por))&0ffh,w
 13518  001C8C  5DB2               	btfss	status,0
 13519  001C8E  A0D8               	goto	u5911
 13520  001C90  EF4C  F00E         	goto	u5910
 13521  001C94  EF4E  F00E         
 13522                           u5911:
 13523  001C98                     	goto	l869
 13524  001C98  EF52  F00E         u5910:
 13525  001C9C                     	line	733
 13526                           	
 13527                           l7035:; BSR set to: 0
 13528  001C9C                     
 13529                           ;main.c: 733:                                     por = 100;
 13530                           	movlw	high(064h)
 13531  001C9C  0E00               	movwf	((main@por+1))&0ffh
 13532  001C9E  6FB3               	movlw	low(064h)
 13533  001CA0  0E64               	movwf	((main@por))&0ffh
 13534  001CA2  6FB2               	
 13535                           l869:; BSR set to: 0
 13536  001CA4                     
 13537                           	line	734
 13538                           ;main.c: 734:                                 estado = 90;
 13539                           	movlw	low(05Ah)
 13540  001CA4  0E5A               	movwf	((main@estado))&0ffh
 13541  001CA6  6FBD               	goto	l7037
 13542  001CA8  EF56  F00E         	line	735
 13543                           ;main.c: 735:                             }
 13544                           	
 13545                           l868:; BSR set to: 0
 13546  001CAC                     
 13547                           	line	736
 13548                           	
 13549                           l7037:; BSR set to: 0
 13550  001CAC                     
 13551                           ;main.c: 736:                             if(tecla == '*')
 13552                           		movlw	42
 13553  001CAC  0E2A               	xorwf	((main@tecla))&0ffh,w
 13554  001CAE  19BE               	btfss	status,2
 13555  001CB0  A4D8               	goto	u5921
 13556  001CB2  EF5D  F00E         	goto	u5920
 13557  001CB6  EF5F  F00E         
 13558                           u5921:
 13559  001CBA                     	goto	l7043
 13560  001CBA  EF6A  F00E         u5920:
 13561  001CBE                     	line	738
 13562                           	
 13563                           l7039:; BSR set to: 0
 13564  001CBE                     
 13565                           ;main.c: 737:                             {;main.c: 738:                                
                                  dignum_apagar(&por);
 13566                           		movlw	low(main@por)
 13567  001CBE  0EB2               	movwf	((c:dignum_apagar@ptrNum)),c
 13568  001CC0  6E2E               	movlw	high(main@por)
 13569  001CC2  0E00               	movwf	((c:dignum_apagar@ptrNum+1)),c
 13570  001CC4  6E2F               
 13571                           	call	_dignum_apagar	;wreg free
 13572  001CC6  EC1F  F020         	line	739
 13573                           	
 13574                           l7041:
 13575  001CCA                     ;main.c: 739:                                 estado = 90;
 13576                           	movlw	low(05Ah)
 13577  001CCA  0E5A               	movlb	0	; () banked
 13578  001CCC  0100               	movwf	((main@estado))&0ffh
 13579  001CCE  6FBD               	goto	l7043
 13580  001CD0  EF6A  F00E         	line	740
 13581                           ;main.c: 740:                             }
 13582                           	
 13583                           l870:; BSR set to: 0
 13584  001CD4                     
 13585                           	line	741
 13586                           	
 13587                           l7043:; BSR set to: 0
 13588  001CD4                     
 13589                           ;main.c: 741:                             if(tecla == '#')
 13590                           		movlw	35
 13591  001CD4  0E23               	xorwf	((main@tecla))&0ffh,w
 13592  001CD6  19BE               	btfss	status,2
 13593  001CD8  A4D8               	goto	u5931
 13594  001CDA  EF71  F00E         	goto	u5930
 13595  001CDE  EF73  F00E         
 13596                           u5931:
 13597  001CE2                     	goto	l7063
 13598  001CE2  EF45  F00F         u5930:
 13599  001CE6                     	line	742
 13600                           	
 13601                           l7045:; BSR set to: 0
 13602  001CE6                     
 13603                           ;main.c: 742:                                 estado = 92;
 13604                           	movlw	low(05Ch)
 13605  001CE6  0E5C               	movwf	((main@estado))&0ffh
 13606  001CE8  6FBD               	goto	l7063
 13607  001CEA  EF45  F00F         	
 13608                           l871:; BSR set to: 0
 13609  001CEE                     
 13610                           	line	743
 13611                           ;main.c: 743:                             break;
 13612                           	goto	l7063
 13613  001CEE  EF45  F00F         	line	745
 13614                           ;main.c: 745:              case 92:
 13615                           	
 13616                           l872:; BSR set to: 0
 13617  001CF2                     
 13618                           	line	746
 13619                           	
 13620                           l7047:; BSR set to: 0
 13621  001CF2                     
 13622                           ;main.c: 746:                             fifo_add_control(por);
 13623                           	movf	((main@por))&0ffh,w
 13624  001CF2  51B2               	
 13625                           	call	_fifo_add_control
 13626  001CF4  EC1B  F01E         	line	747
 13627                           	
 13628                           l7049:
 13629  001CF8                     ;main.c: 747:                             IHM.clr();
 13630                           	lfsr	2,(_IHM)+08h
 13631  001CF8  EE20  F0D7         	call	u5948
 13632  001CFC  D802               	goto	u5949
 13633  001CFE  EF8B  F00E         u5948:
 13634  001D02                     	push
 13635  001D02  0005               	movwf	pclath
 13636  001D04  6EFA               	movf	postinc2,w
 13637  001D06  50DE               	movwf	tosl
 13638  001D08  6EFD               	movf	postinc2,w
 13639  001D0A  50DE               	movwf	tosl+1
 13640  001D0C  6EFE               	movf	tblptru,w
 13641  001D0E  50F8               	movwf	tosl+2
 13642  001D10  6EFF               	movf	pclath,w
 13643  001D12  50FA               	
 13644                           	return	;indir
 13645  001D14  0012               	u5949:
 13646  001D16                     	line	748
 13647                           	
 13648                           l7051:
 13649  001D16                     ;main.c: 748:                             estado = 16;
 13650                           	movlw	low(010h)
 13651  001D16  0E10               	movlb	0	; () banked
 13652  001D18  0100               	movwf	((main@estado))&0ffh
 13653  001D1A  6FBD               	line	749
 13654                           ;main.c: 749:                             break;
 13655                           	goto	l7063
 13656  001D1C  EF45  F00F         	line	751
 13657                           ;main.c: 751:              case 54:
 13658                           	
 13659                           l873:; BSR set to: 0
 13660  001D20                     
 13661                           	line	752
 13662                           	
 13663                           l7053:; BSR set to: 0
 13664  001D20                     
 13665                           ;main.c: 752:                             fifo_add_ciclo(ciclos);
 13666                           	movff	(main@ciclos),(c:fifo_add_ciclo@ciclos)
 13667  001D20  C0B4  F027         	movff	(main@ciclos+1),(c:fifo_add_ciclo@ciclos+1)
 13668  001D24  C0B5  F028         	call	_fifo_add_ciclo	;wreg free
 13669  001D28  EC89  F021         	line	753
 13670                           	
 13671                           l7055:
 13672  001D2C                     ;main.c: 753:                             estado = 30;
 13673                           	movlw	low(01Eh)
 13674  001D2C  0E1E               	movlb	0	; () banked
 13675  001D2E  0100               	movwf	((main@estado))&0ffh
 13676  001D30  6FBD               	line	754
 13677                           	
 13678                           l7057:; BSR set to: 0
 13679  001D32                     
 13680                           ;main.c: 754:                             botao = 1;
 13681                           	movlw	low(01h)
 13682  001D32  0E01               	movwf	((main@botao))&0ffh
 13683  001D34  6FB7               	line	755
 13684                           ;main.c: 755:                             break;
 13685                           	goto	l7063
 13686  001D36  EF45  F00F         	line	756
 13687                           	
 13688                           l7059:; BSR set to: 0
 13689  001D3A                     
 13690                           ;main.c: 756:         }
 13691                           	goto	l7063
 13692  001D3A  EF45  F00F         	
 13693                           l621:; BSR set to: 0
 13694  001D3E                     
 13695                           	
 13696                           l7061:
 13697  001D3E                     	movlb	0	; () banked
 13698  001D3E  0100               	movf	((main@estado))&0ffh,w
 13699  001D40  51BD               	movwf	(??_main+0+0)&0ffh,c
 13700  001D42  6E45               	clrf	(??_main+0+0+1)&0ffh,c
 13701  001D44  6A46               
 13702                           	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
 13703                           ; Switch size 1, requested type "space"
 13704                           ; Number of cases is 1, Range of values is 0 to 0
 13705                           ; switch strategies available:
 13706                           ; Name         Instructions Cycles
 13707                           ; simple_byte            4     3 (average)
 13708                           ;	Chosen strategy is simple_byte
 13709                           
 13710                           	movf ??_main+0+1,c,w
 13711  001D46  5046               	xorlw	0^0	; case 0
 13712  001D48  0A00               	skipnz
 13713  001D4A  B4D8               	goto	l7973
 13714  001D4C  EFAA  F00E         	goto	l7063
 13715  001D50  EF45  F00F         	
 13716                           l7973:; BSR set to: 0
 13717  001D54                     
 13718                           ; Switch size 1, requested type "space"
 13719                           ; Number of cases is 38, Range of values is 0 to 100
 13720                           ; switch strategies available:
 13721                           ; Name         Instructions Cycles
 13722                           ; simple_byte          115    58 (average)
 13723                           ;	Chosen strategy is simple_byte
 13724                           
 13725                           	movf ??_main+0+0,c,w
 13726  001D54  5045               	xorlw	0^0	; case 0
 13727  001D56  0A00               	skipnz
 13728  001D58  B4D8               	goto	l6319
 13729  001D5A  EF50  F000         	xorlw	1^0	; case 1
 13730  001D5E  0A01               	skipnz
 13731  001D60  B4D8               	goto	l6369
 13732  001D62  EFF2  F000         	xorlw	2^1	; case 2
 13733  001D66  0A03               	skipnz
 13734  001D68  B4D8               	goto	l6393
 13735  001D6A  EF50  F001         	xorlw	3^2	; case 3
 13736  001D6E  0A01               	skipnz
 13737  001D70  B4D8               	goto	l6655
 13738  001D72  EF7C  F006         	xorlw	6^3	; case 6
 13739  001D76  0A05               	skipnz
 13740  001D78  B4D8               	goto	l6663
 13741  001D7A  EFBC  F006         	xorlw	7^6	; case 7
 13742  001D7E  0A01               	skipnz
 13743  001D80  B4D8               	goto	l6707
 13744  001D82  EF5B  F007         	xorlw	8^7	; case 8
 13745  001D86  0A0F               	skipnz
 13746  001D88  B4D8               	goto	l6397
 13747  001D8A  EF64  F001         	xorlw	9^8	; case 9
 13748  001D8E  0A01               	skipnz
 13749  001D90  B4D8               	goto	l6405
 13750  001D92  EF88  F001         	xorlw	10^9	; case 10
 13751  001D96  0A03               	skipnz
 13752  001D98  B4D8               	goto	l6749
 13753  001D9A  EF2E  F008         	xorlw	11^10	; case 11
 13754  001D9E  0A01               	skipnz
 13755  001DA0  B4D8               	goto	l6757
 13756  001DA2  EF5C  F008         	xorlw	14^11	; case 14
 13757  001DA6  0A05               	skipnz
 13758  001DA8  B4D8               	goto	l6799
 13759  001DAA  EF0F  F009         	xorlw	16^14	; case 16
 13760  001DAE  0A1E               	skipnz
 13761  001DB0  B4D8               	goto	l6795
 13762  001DB2  EF08  F009         	xorlw	30^16	; case 30
 13763  001DB6  0A0E               	skipnz
 13764  001DB8  B4D8               	goto	l6807
 13765  001DBA  EF64  F009         	xorlw	40^30	; case 40
 13766  001DBE  0A36               	skipnz
 13767  001DC0  B4D8               	goto	l6851
 13768  001DC2  EF6D  F00A         	xorlw	41^40	; case 41
 13769  001DC6  0A01               	skipnz
 13770  001DC8  B4D8               	goto	l6873
 13771  001DCA  EFBF  F00A         	xorlw	42^41	; case 42
 13772  001DCE  0A03               	skipnz
 13773  001DD0  B4D8               	goto	l6879
 13774  001DD2  EFF2  F00A         	xorlw	52^42	; case 52
 13775  001DD6  0A1E               	skipnz
 13776  001DD8  B4D8               	goto	l6885
 13777  001DDA  EF09  F00B         	xorlw	53^52	; case 53
 13778  001DDE  0A01               	skipnz
 13779  001DE0  B4D8               	goto	l6911
 13780  001DE2  EF7F  F00B         	xorlw	54^53	; case 54
 13781  001DE6  0A03               	skipnz
 13782  001DE8  B4D8               	goto	l7053
 13783  001DEA  EF90  F00E         	xorlw	70^54	; case 70
 13784  001DEE  0A70               	skipnz
 13785  001DF0  B4D8               	goto	l6809
 13786  001DF2  EF6A  F009         	xorlw	71^70	; case 71
 13787  001DF6  0A01               	skipnz
 13788  001DF8  B4D8               	goto	l6409
 13789  001DFA  EF9C  F001         	xorlw	72^71	; case 72
 13790  001DFE  0A0F               	skipnz
 13791  001E00  B4D8               	goto	l6583
 13792  001E02  EF9E  F004         	xorlw	73^72	; case 73
 13793  001E06  0A01               	skipnz
 13794  001E08  B4D8               	goto	l6589
 13795  001E0A  EFC5  F004         	xorlw	74^73	; case 74
 13796  001E0E  0A03               	skipnz
 13797  001E10  B4D8               	goto	l6919
 13798  001E12  EFD7  F00B         	xorlw	75^74	; case 75
 13799  001E16  0A01               	skipnz
 13800  001E18  B4D8               	goto	l6937
 13801  001E1A  EF32  F00C         	xorlw	76^75	; case 76
 13802  001E1E  0A07               	skipnz
 13803  001E20  B4D8               	goto	l6943
 13804  001E22  EF59  F00C         	xorlw	77^76	; case 77
 13805  001E26  0A01               	skipnz
 13806  001E28  B4D8               	goto	l6959
 13807  001E2A  EFF7  F00C         	xorlw	78^77	; case 78
 13808  001E2E  0A03               	skipnz
 13809  001E30  B4D8               	goto	l7015
 13810  001E32  EFE0  F00D         	xorlw	80^78	; case 80
 13811  001E36  0A1E               	skipnz
 13812  001E38  B4D8               	goto	l6481
 13813  001E3A  EF1F  F003         	xorlw	81^80	; case 81
 13814  001E3E  0A01               	skipnz
 13815  001E40  B4D8               	goto	l6491
 13816  001E42  EF42  F003         	xorlw	82^81	; case 82
 13817  001E46  0A03               	skipnz
 13818  001E48  B4D8               	goto	l6495
 13819  001E4A  EF56  F003         	xorlw	84^82	; case 84
 13820  001E4E  0A06               	skipnz
 13821  001E50  B4D8               	goto	l6507
 13822  001E52  EF85  F003         	xorlw	85^84	; case 85
 13823  001E56  0A01               	skipnz
 13824  001E58  B4D8               	goto	l6521
 13825  001E5A  EFD3  F003         	xorlw	86^85	; case 86
 13826  001E5E  0A03               	skipnz
 13827  001E60  B4D8               	goto	l6579
 13828  001E62  EF8A  F004         	xorlw	90^86	; case 90
 13829  001E66  0A0C               	skipnz
 13830  001E68  B4D8               	goto	l7019
 13831  001E6A  EFF4  F00D         	xorlw	91^90	; case 91
 13832  001E6E  0A01               	skipnz
 13833  001E70  B4D8               	goto	l7025
 13834  001E72  EF27  F00E         	xorlw	92^91	; case 92
 13835  001E76  0A07               	skipnz
 13836  001E78  B4D8               	goto	l7047
 13837  001E7A  EF79  F00E         	xorlw	100^92	; case 100
 13838  001E7E  0A38               	skipnz
 13839  001E80  B4D8               	goto	l6423
 13840  001E82  EFD3  F001         	goto	l7063
 13841  001E86  EF45  F00F         
 13842                           	
 13843                           l631:; BSR set to: 0
 13844  001E8A                     
 13845                           	line	758
 13846                           	
 13847                           l7063:
 13848  001E8A                     ;main.c: 758:         serialIOscan();
 13849                           	call	_serialIOscan	;wreg free
 13850  001E8A  ECB3  F01B         	line	760
 13851                           ;main.c: 760:         switch(meAtuadores)
 13852                           	goto	l7137
 13853  001E8E  EF91  F010         	line	762
 13854                           ;main.c: 761:         {;main.c: 762:             case 0: break;
 13855                           	
 13856                           l875:
 13857  001E92                     	goto	l7061
 13858  001E92  EF9F  F00E         	line	764
 13859                           ;main.c: 764:             case 1:
 13860                           	
 13861                           l877:
 13862  001E96                     	line	765
 13863                           	
 13864                           l7065:
 13865  001E96                     ;main.c: 765:                             resetIndicePassos();
 13866                           	call	_resetIndicePassos	;wreg free
 13867  001E96  ECA1  F021         	line	766
 13868                           ;main.c: 766:                             resetContCiclos();
 13869                           	call	_resetContCiclos	;wreg free
 13870  001E9A  EC7A  F021         	line	767
 13871                           	
 13872                           l7067:
 13873  001E9E                     ;main.c: 767:                             meAtuadores = 2;
 13874                           	movlw	low(02h)
 13875  001E9E  0E02               	movlb	0	; () banked
 13876  001EA0  0100               	movwf	((main@meAtuadores))&0ffh
 13877  001EA2  6FAF               	line	768
 13878                           ;main.c: 768:                             break;
 13879                           	goto	l7061
 13880  001EA4  EF9F  F00E         	line	770
 13881                           ;main.c: 770:             case 2:
 13882                           	
 13883                           l878:; BSR set to: 0
 13884  001EA8                     
 13885                           	line	771
 13886                           	
 13887                           l7069:; BSR set to: 0
 13888  001EA8                     
 13889                           ;main.c: 771:                             auxPasso = fifo_lerPos(getIndicePassos());
 13890                           	call	_getIndicePassos	;wreg free
 13891  001EA8  EC8E  F021         	
 13892                           	call	_fifo_lerPos
 13893  001EAC  ECF0  F020         	movlb	0	; () banked
 13894  001EB0  0100               	movwf	((main@auxPasso))&0ffh
 13895  001EB2  6FBC               	line	773
 13896                           	
 13897                           l7071:; BSR set to: 0
 13898  001EB4                     
 13899                           ;main.c: 773:                             if(botao == 1 || botao == 3 || botao == 0)
 13900                           		decf	((main@botao))&0ffh,w
 13901  001EB4  05B7               	btfsc	status,2
 13902  001EB6  B4D8               	goto	u5951
 13903  001EB8  EF60  F00F         	goto	u5950
 13904  001EBC  EF62  F00F         
 13905                           u5951:
 13906  001EC0                     	goto	l7077
 13907  001EC0  EF75  F00F         u5950:
 13908  001EC4                     	
 13909                           l7073:; BSR set to: 0
 13910  001EC4                     
 13911                           		movlw	3
 13912  001EC4  0E03               	xorwf	((main@botao))&0ffh,w
 13913  001EC6  19B7               	btfsc	status,2
 13914  001EC8  B4D8               	goto	u5961
 13915  001ECA  EF69  F00F         	goto	u5960
 13916  001ECE  EF6B  F00F         
 13917                           u5961:
 13918  001ED2                     	goto	l7077
 13919  001ED2  EF75  F00F         u5960:
 13920  001ED6                     	
 13921                           l7075:; BSR set to: 0
 13922  001ED6                     
 13923                           	movf	((main@botao))&0ffh,w
 13924  001ED6  51B7               	btfss	status,2
 13925  001ED8  A4D8               	goto	u5971
 13926  001EDA  EF71  F00F         	goto	u5970
 13927  001EDE  EF73  F00F         u5971:
 13928  001EE2                     	goto	l7061
 13929  001EE2  EF9F  F00E         u5970:
 13930  001EE6                     	goto	l7077
 13931  001EE6  EF75  F00F         	
 13932                           l881:; BSR set to: 0
 13933  001EEA                     
 13934                           	line	774
 13935                           	
 13936                           l7077:; BSR set to: 0
 13937  001EEA                     
 13938                           ;main.c: 774:                                 meAtuadores = 3;
 13939                           	movlw	low(03h)
 13940  001EEA  0E03               	movwf	((main@meAtuadores))&0ffh
 13941  001EEC  6FAF               	goto	l7061
 13942  001EEE  EF9F  F00E         	
 13943                           l879:; BSR set to: 0
 13944  001EF2                     
 13945                           	line	775
 13946                           ;main.c: 775:                             break;
 13947                           	goto	l7061
 13948  001EF2  EF9F  F00E         	line	777
 13949                           ;main.c: 777:             case 3:
 13950                           	
 13951                           l882:; BSR set to: 0
 13952  001EF6                     
 13953                           	line	778
 13954                           	
 13955                           l7079:; BSR set to: 0
 13956  001EF6                     
 13957                           ;main.c: 778:                             if(auxPasso <= 0x64 || auxPasso == 0xFE)
 13958                           		movlw	065h-1
 13959  001EF6  0E64               	cpfsgt	((main@auxPasso))&0ffh
 13960  001EF8  65BC               	goto	u5981
 13961  001EFA  EF81  F00F         	goto	u5980
 13962  001EFE  EF83  F00F         
 13963                           u5981:
 13964  001F02                     	goto	l7083
 13965  001F02  EF8E  F00F         u5980:
 13966  001F06                     	
 13967                           l7081:; BSR set to: 0
 13968  001F06                     
 13969                           		movlw	254
 13970  001F06  0EFE               	xorwf	((main@auxPasso))&0ffh,w
 13971  001F08  19BC               	btfss	status,2
 13972  001F0A  A4D8               	goto	u5991
 13973  001F0C  EF8A  F00F         	goto	u5990
 13974  001F10  EF8C  F00F         
 13975                           u5991:
 13976  001F14                     	goto	l7089
 13977  001F14  EFC1  F00F         u5990:
 13978  001F18                     	goto	l7083
 13979  001F18  EF8E  F00F         	
 13980                           l885:; BSR set to: 0
 13981  001F1C                     
 13982                           	line	780
 13983                           	
 13984                           l7083:; BSR set to: 0
 13985  001F1C                     
 13986                           ;main.c: 779:                             {;main.c: 780:                                
                                  decodifica(&auxPasso);
 13987                           		movlw	low(main@auxPasso)
 13988  001F1C  0EBC               	movwf	((c:decodifica@d)),c
 13989  001F1E  6E27               	movlw	high(main@auxPasso)
 13990  001F20  0E00               	movwf	((c:decodifica@d+1)),c
 13991  001F22  6E28               
 13992                           	call	_decodifica	;wreg free
 13993  001F24  ECC7  F014         	line	781
 13994                           	
 13995                           l7085:
 13996  001F28                     ;main.c: 781:                                 MCP4725((long)((4095L * auxPasso)/100));
 13997                           	movlb	0	; () banked
 13998  001F28  0100               	movf	((main@auxPasso))&0ffh,w
 13999  001F2A  51BC               	movwf	((c:___lmul@multiplier)),c
 14000  001F2C  6E27               	clrf	((c:___lmul@multiplier+1)),c
 14001  001F2E  6A28               	clrf	((c:___lmul@multiplier+2)),c
 14002  001F30  6A29               	clrf	((c:___lmul@multiplier+3)),c
 14003  001F32  6A2A               
 14004                           	movlw	low(0FFFh)
 14005  001F34  0EFF               	movwf	((c:___lmul@multiplicand)),c
 14006  001F36  6E2B               	movlw	high(0FFFh)
 14007  001F38  0E0F               	movwf	((c:___lmul@multiplicand+1)),c
 14008  001F3A  6E2C               	movlw	low highword(0FFFh)
 14009  001F3C  0E00               	movwf	((c:___lmul@multiplicand+2)),c
 14010  001F3E  6E2D               	movlw	high highword(0FFFh)
 14011  001F40  0E00               	movwf	((c:___lmul@multiplicand+3)),c
 14012  001F42  6E2E               	call	___lmul	;wreg free
 14013  001F44  ECEC  F01B         	movff	0+?___lmul,(c:___aldiv@dividend)
 14014  001F48  C027  F033         	movff	1+?___lmul,(c:___aldiv@dividend+1)
 14015  001F4C  C028  F034         	movff	2+?___lmul,(c:___aldiv@dividend+2)
 14016  001F50  C029  F035         	movff	3+?___lmul,(c:___aldiv@dividend+3)
 14017  001F54  C02A  F036         	
 14018                           	movlw	low(064h)
 14019  001F58  0E64               	movwf	((c:___aldiv@divisor)),c
 14020  001F5A  6E37               	movlw	high(064h)
 14021  001F5C  0E00               	movwf	((c:___aldiv@divisor+1)),c
 14022  001F5E  6E38               	movlw	low highword(064h)
 14023  001F60  0E00               	movwf	((c:___aldiv@divisor+2)),c
 14024  001F62  6E39               	movlw	high highword(064h)
 14025  001F64  0E00               	movwf	((c:___aldiv@divisor+3)),c
 14026  001F66  6E3A               	call	___aldiv	;wreg free
 14027  001F68  EC0B  F016         	movff	0+?___aldiv,(c:MCP4725@Vout)
 14028  001F6C  C033  F041         	movff	1+?___aldiv,(c:MCP4725@Vout+1)
 14029  001F70  C034  F042         	call	_MCP4725	;wreg free
 14030  001F74  ECA7  F020         	line	782
 14031                           	
 14032                           l7087:
 14033  001F78                     ;main.c: 782:                                 meAtuadores = 6;
 14034                           	movlw	low(06h)
 14035  001F78  0E06               	movlb	0	; () banked
 14036  001F7A  0100               	movwf	((main@meAtuadores))&0ffh
 14037  001F7C  6FAF               	line	783
 14038                           ;main.c: 783:                             }
 14039                           	goto	l7061
 14040  001F7E  EF9F  F00E         	line	784
 14041                           ;main.c: 784:                             else if( auxPasso > 0x64 && auxPasso <= 0xDC )
                                 
 14042                           	
 14043                           l883:; BSR set to: 0
 14044  001F82                     
 14045                           	
 14046                           l7089:; BSR set to: 0
 14047  001F82                     
 14048                           		movlw	065h-1
 14049  001F82  0E64               	cpfsgt	((main@auxPasso))&0ffh
 14050  001F84  65BC               	goto	u6001
 14051  001F86  EFC7  F00F         	goto	u6000
 14052  001F8A  EFC9  F00F         
 14053                           u6001:
 14054  001F8E                     	goto	l7099
 14055  001F8E  EFEC  F00F         u6000:
 14056  001F92                     	
 14057                           l7091:; BSR set to: 0
 14058  001F92                     
 14059                           		movlw	0DDh-0
 14060  001F92  0EDD               	cpfslt	((main@auxPasso))&0ffh
 14061  001F94  61BC               	goto	u6011
 14062  001F96  EFCF  F00F         	goto	u6010
 14063  001F9A  EFD1  F00F         
 14064                           u6011:
 14065  001F9E                     	goto	l7099
 14066  001F9E  EFEC  F00F         u6010:
 14067  001FA2                     	line	786
 14068                           	
 14069                           l7093:; BSR set to: 0
 14070  001FA2                     
 14071                           ;main.c: 785:                             {;main.c: 786:                                
                                  auxPasso -= 0x64;
 14072                           	movlw	(064h)&0ffh
 14073  001FA2  0E64               	subwf	((main@auxPasso))&0ffh
 14074  001FA4  5FBC               	line	787
 14075                           	
 14076                           l7095:; BSR set to: 0
 14077  001FA6                     
 14078                           ;main.c: 787:                                 setT1(auxPasso * 1000 );
 14079                           	movff	(main@auxPasso),(c:___wmul@multiplier)
 14080  001FA6  C0BC  F027         	clrf	((c:___wmul@multiplier+1)),c
 14081  001FAA  6A28               	movlw	high(03E8h)
 14082  001FAC  0E03               	movwf	((c:___wmul@multiplicand+1)),c
 14083  001FAE  6E2A               	movlw	low(03E8h)
 14084  001FB0  0EE8               	movwf	((c:___wmul@multiplicand)),c
 14085  001FB2  6E29               	call	___wmul	;wreg free
 14086  001FB4  EC36  F020         	movff	0+?___wmul,(c:setT1@c)
 14087  001FB8  C027  F02D         	movff	1+?___wmul,(c:setT1@c+1)
 14088  001FBC  C028  F02E         	movlw	0
 14089  001FC0  0E00               	btfsc	((c:setT1@c+1)),c,7
 14090  001FC2  BE2E               	movlw	-1
 14091  001FC4  0EFF               	movwf	((c:setT1@c+2)),c
 14092  001FC6  6E2F               	movwf	((c:setT1@c+3)),c
 14093  001FC8  6E30               	call	_setT1	;wreg free
 14094  001FCA  EC47  F021         	line	788
 14095                           	
 14096                           l7097:
 14097  001FCE                     ;main.c: 788:                                 meAtuadores = 4;
 14098                           	movlw	low(04h)
 14099  001FCE  0E04               	movlb	0	; () banked
 14100  001FD0  0100               	movwf	((main@meAtuadores))&0ffh
 14101  001FD2  6FAF               	line	789
 14102                           ;main.c: 789:                             }
 14103                           	goto	l7061
 14104  001FD4  EF9F  F00E         	line	790
 14105                           ;main.c: 790:                             else
 14106                           	
 14107                           l887:; BSR set to: 0
 14108  001FD8                     
 14109                           	line	792
 14110                           	
 14111                           l7099:; BSR set to: 0
 14112  001FD8                     
 14113                           ;main.c: 791:                             {;main.c: 792:                                
                                  decodifica(&auxPasso);
 14114                           		movlw	low(main@auxPasso)
 14115  001FD8  0EBC               	movwf	((c:decodifica@d)),c
 14116  001FDA  6E27               	movlw	high(main@auxPasso)
 14117  001FDC  0E00               	movwf	((c:decodifica@d+1)),c
 14118  001FDE  6E28               
 14119                           	call	_decodifica	;wreg free
 14120  001FE0  ECC7  F014         	line	794
 14121                           ;main.c: 794:                                 set_passo(auxPasso, vetorOut);
 14122                           		movlw	low(main@vetorOut)
 14123  001FE4  0EAE               	movwf	((c:set_passo@ptr)),c
 14124  001FE6  6E27               	movlw	high(main@vetorOut)
 14125  001FE8  0E00               	movwf	((c:set_passo@ptr+1)),c
 14126  001FEA  6E28               
 14127                           	movlb	0	; () banked
 14128  001FEC  0100               	movf	((main@auxPasso))&0ffh,w
 14129  001FEE  51BC               	
 14130                           	call	_set_passo
 14131  001FF0  EC29  F018         	line	795
 14132                           	
 14133                           l7101:
 14134  001FF4                     ;main.c: 795:                                 meAtuadores = 5;
 14135                           	movlw	low(05h)
 14136  001FF4  0E05               	movlb	0	; () banked
 14137  001FF6  0100               	movwf	((main@meAtuadores))&0ffh
 14138  001FF8  6FAF               	goto	l7061
 14139  001FFA  EF9F  F00E         	line	796
 14140                           ;main.c: 796:                             }
 14141                           	
 14142                           l888:; BSR set to: 0
 14143  001FFE                     
 14144                           	goto	l7061
 14145  001FFE  EF9F  F00E         	
 14146                           l886:; BSR set to: 0
 14147  002002                     
 14148                           	line	797
 14149                           ;main.c: 797:                             break;
 14150                           	goto	l7061
 14151  002002  EF9F  F00E         	line	799
 14152                           ;main.c: 799:             case 4:
 14153                           	
 14154                           l889:; BSR set to: 0
 14155  002006                     
 14156                           	line	800
 14157                           	
 14158                           l7103:; BSR set to: 0
 14159  002006                     
 14160                           ;main.c: 800:                             if(!statusT1())
 14161                           	call	_statusT1	;wreg free
 14162  002006  EC65  F021         	movf	(0+?_statusT1),c,w
 14163  00200A  5027               iorwf	(1+?_statusT1),c,w
 14164  00200C  1028               iorwf	(2+?_statusT1),c,w
 14165  00200E  1029               iorwf	(3+?_statusT1),c,w
 14166  002010  102A               	btfss	status,2
 14167  002012  A4D8               	goto	u6021
 14168  002014  EF0E  F010         	goto	u6020
 14169  002018  EF10  F010         
 14170                           u6021:
 14171  00201C                     	goto	l7061
 14172  00201C  EF9F  F00E         u6020:
 14173  002020                     	line	801
 14174                           	
 14175                           l7105:
 14176  002020                     ;main.c: 801:                                 meAtuadores = 6;
 14177                           	movlw	low(06h)
 14178  002020  0E06               	movlb	0	; () banked
 14179  002022  0100               	movwf	((main@meAtuadores))&0ffh
 14180  002024  6FAF               	goto	l7061
 14181  002026  EF9F  F00E         	
 14182                           l890:; BSR set to: 0
 14183  00202A                     
 14184                           	line	802
 14185                           ;main.c: 802:                             break;
 14186                           	goto	l7061
 14187  00202A  EF9F  F00E         	line	804
 14188                           ;main.c: 804:             case 5:
 14189                           	
 14190                           l891:; BSR set to: 0
 14191  00202E                     
 14192                           	line	805
 14193                           	
 14194                           l7107:; BSR set to: 0
 14195  00202E                     
 14196                           ;main.c: 805:                             if(ler_sensor(auxPasso, vetorIn))
 14197                           		movlw	low(main@vetorIn)
 14198  00202E  0EAD               	movwf	((c:ler_sensor@ptr)),c
 14199  002030  6E27               	movlw	high(main@vetorIn)
 14200  002032  0E00               	movwf	((c:ler_sensor@ptr+1)),c
 14201  002034  6E28               
 14202                           	movf	((main@auxPasso))&0ffh,w
 14203  002036  51BC               	
 14204                           	call	_ler_sensor
 14205  002038  EC71  F015         	iorlw	0
 14206  00203C  0900               	btfsc	status,2
 14207  00203E  B4D8               	goto	u6031
 14208  002040  EF24  F010         	goto	u6030
 14209  002044  EF26  F010         u6031:
 14210  002048                     	goto	l7061
 14211  002048  EF9F  F00E         u6030:
 14212  00204C                     	line	806
 14213                           	
 14214                           l7109:
 14215  00204C                     ;main.c: 806:                                 meAtuadores = 6;
 14216                           	movlw	low(06h)
 14217  00204C  0E06               	movlb	0	; () banked
 14218  00204E  0100               	movwf	((main@meAtuadores))&0ffh
 14219  002050  6FAF               	goto	l7061
 14220  002052  EF9F  F00E         	
 14221                           l892:; BSR set to: 0
 14222  002056                     
 14223                           	line	807
 14224                           ;main.c: 807:                             break;
 14225                           	goto	l7061
 14226  002056  EF9F  F00E         	line	809
 14227                           ;main.c: 809:             case 6:
 14228                           	
 14229                           l893:; BSR set to: 0
 14230  00205A                     
 14231                           	line	810
 14232                           	
 14233                           l7111:; BSR set to: 0
 14234  00205A                     
 14235                           ;main.c: 810:                             if(botao == 3)
 14236                           		movlw	3
 14237  00205A  0E03               	xorwf	((main@botao))&0ffh,w
 14238  00205C  19B7               	btfss	status,2
 14239  00205E  A4D8               	goto	u6041
 14240  002060  EF34  F010         	goto	u6040
 14241  002064  EF36  F010         
 14242                           u6041:
 14243  002068                     	goto	l894
 14244  002068  EF38  F010         u6040:
 14245  00206C                     	line	812
 14246                           	
 14247                           l7113:; BSR set to: 0
 14248  00206C                     
 14249                           ;main.c: 811:                             {;main.c: 812:                                
                                  botao = 2;
 14250                           	movlw	low(02h)
 14251  00206C  0E02               	movwf	((main@botao))&0ffh
 14252  00206E  6FB7               	line	813
 14253                           ;main.c: 813:                             }
 14254                           	
 14255                           l894:; BSR set to: 0
 14256  002070                     
 14257                           	line	814
 14258                           ;main.c: 814:                             meAtuadores = 7;
 14259                           	movlw	low(07h)
 14260  002070  0E07               	movwf	((main@meAtuadores))&0ffh
 14261  002072  6FAF               	line	816
 14262                           ;main.c: 816:                             break;
 14263                           	goto	l7061
 14264  002074  EF9F  F00E         	line	818
 14265                           ;main.c: 818:             case 7:
 14266                           	
 14267                           l895:; BSR set to: 0
 14268  002078                     
 14269                           	line	819
 14270                           	
 14271                           l7115:; BSR set to: 0
 14272  002078                     
 14273                           ;main.c: 819:                             addIndicePassos();
 14274                           	call	_addIndicePassos	;wreg free
 14275  002078  EC0A  F021         	line	820
 14276                           ;main.c: 820:                             if(getIndicePassos() < fifo_indice())
 14277                           	call	_getIndicePassos	;wreg free
 14278  00207C  EC8E  F021         	movwf	(??_main+0+0)&0ffh,c
 14279  002080  6E45               	call	_fifo_indice	;wreg free
 14280  002082  EC96  F021         	subwf	((??_main+0+0)),c,w
 14281  002086  5C45               	btfsc	status,0
 14282  002088  B0D8               	goto	u6051
 14283  00208A  EF49  F010         	goto	u6050
 14284  00208E  EF4B  F010         u6051:
 14285  002092                     	goto	l7119
 14286  002092  EF50  F010         u6050:
 14287  002096                     	line	821
 14288                           	
 14289                           l7117:
 14290  002096                     ;main.c: 821:                                 meAtuadores = 2;
 14291                           	movlw	low(02h)
 14292  002096  0E02               	movlb	0	; () banked
 14293  002098  0100               	movwf	((main@meAtuadores))&0ffh
 14294  00209A  6FAF               	goto	l7061
 14295  00209C  EF9F  F00E         	line	822
 14296                           ;main.c: 822:                             else
 14297                           	
 14298                           l896:; BSR set to: 0
 14299  0020A0                     
 14300                           	line	824
 14301                           	
 14302                           l7119:
 14303  0020A0                     ;main.c: 823:                             {;main.c: 824:                                
                                  addContCiclos();
 14304                           	call	_addContCiclos	;wreg free
 14305  0020A0  ECA4  F021         	line	825
 14306                           	
 14307                           l7121:
 14308  0020A4                     ;main.c: 825:                                 meAtuadores = 8;
 14309                           	movlw	low(08h)
 14310  0020A4  0E08               	movlb	0	; () banked
 14311  0020A6  0100               	movwf	((main@meAtuadores))&0ffh
 14312  0020A8  6FAF               	goto	l7061
 14313  0020AA  EF9F  F00E         	line	826
 14314                           ;main.c: 826:                             }
 14315                           	
 14316                           l897:; BSR set to: 0
 14317  0020AE                     
 14318                           	line	827
 14319                           ;main.c: 827:                             break;
 14320                           	goto	l7061
 14321  0020AE  EF9F  F00E         	line	829
 14322                           ;main.c: 829:             case 8:
 14323                           	
 14324                           l898:; BSR set to: 0
 14325  0020B2                     
 14326                           	line	830
 14327                           	
 14328                           l7123:; BSR set to: 0
 14329  0020B2                     
 14330                           ;main.c: 830:                             if((botao != 0) && ((getContCiclos() < getCicl
                                 os()) || (getCiclos() == 0)))
 14331                           	movf	((main@botao))&0ffh,w
 14332  0020B2  51B7               	btfsc	status,2
 14333  0020B4  B4D8               	goto	u6061
 14334  0020B6  EF5F  F010         	goto	u6060
 14335  0020BA  EF61  F010         u6061:
 14336  0020BE                     	goto	l7133
 14337  0020BE  EF88  F010         u6060:
 14338  0020C2                     	
 14339                           l7125:; BSR set to: 0
 14340  0020C2                     
 14341                           	call	_getContCiclos	;wreg free
 14342  0020C2  EC84  F021         	movff	0+?_getContCiclos,??_main+0+0
 14343  0020C6  C027  F045         	movff	1+?_getContCiclos,??_main+0+0+1
 14344  0020CA  C028  F046         	call	_getCiclos	;wreg free
 14345  0020CE  EC96  F020         		movf	(0+?_getCiclos),c,w
 14346  0020D2  5027               	subwf	(??_main+0+0),c,w
 14347  0020D4  5C45               	movf	(1+?_getCiclos),c,w
 14348  0020D6  5028               	subwfb	(??_main+0+1),c,w
 14349  0020D8  5846               	btfss	status,0
 14350  0020DA  A0D8               	goto	u6071
 14351  0020DC  EF72  F010         	goto	u6070
 14352  0020E0  EF74  F010         
 14353                           u6071:
 14354  0020E4                     	goto	l7129
 14355  0020E4  EF81  F010         u6070:
 14356  0020E8                     	
 14357                           l7127:
 14358  0020E8                     	call	_getCiclos	;wreg free
 14359  0020E8  EC96  F020         	movf	(0+?_getCiclos),c,w
 14360  0020EC  5027               iorwf	(1+?_getCiclos),c,w
 14361  0020EE  1028               	btfss	status,2
 14362  0020F0  A4D8               	goto	u6081
 14363  0020F2  EF7D  F010         	goto	u6080
 14364  0020F6  EF7F  F010         
 14365                           u6081:
 14366  0020FA                     	goto	l7133
 14367  0020FA  EF88  F010         u6080:
 14368  0020FE                     	goto	l7129
 14369  0020FE  EF81  F010         	
 14370                           l901:
 14371  002102                     	line	832
 14372                           	
 14373                           l7129:
 14374  002102                     ;main.c: 831:                             {;main.c: 832:                                
                                  resetIndicePassos();
 14375                           	call	_resetIndicePassos	;wreg free
 14376  002102  ECA1  F021         	line	833
 14377                           	
 14378                           l7131:
 14379  002106                     ;main.c: 833:                                 meAtuadores = 2;
 14380                           	movlw	low(02h)
 14381  002106  0E02               	movlb	0	; () banked
 14382  002108  0100               	movwf	((main@meAtuadores))&0ffh
 14383  00210A  6FAF               	line	834
 14384                           ;main.c: 834:                             }
 14385                           	goto	l7061
 14386  00210C  EF9F  F00E         	line	835
 14387                           ;main.c: 835:                             else
 14388                           	
 14389                           l899:; BSR set to: 0
 14390  002110                     
 14391                           	line	837
 14392                           	
 14393                           l7133:
 14394  002110                     ;main.c: 836:                             {;main.c: 837:                                
                                  meAtuadores = 0;
 14395                           	movlw	low(0)
 14396  002110  0E00               	movlb	0	; () banked
 14397  002112  0100               	movwf	((main@meAtuadores))&0ffh
 14398  002114  6FAF               	goto	l7061
 14399  002116  EF9F  F00E         	line	838
 14400                           ;main.c: 838:                             }
 14401                           	
 14402                           l902:; BSR set to: 0
 14403  00211A                     
 14404                           	line	839
 14405                           ;main.c: 839:                             break;
 14406                           	goto	l7061
 14407  00211A  EF9F  F00E         	line	840
 14408                           	
 14409                           l7135:; BSR set to: 0
 14410  00211E                     
 14411                           ;main.c: 840:         }
 14412                           	goto	l7061
 14413  00211E  EF9F  F00E         	
 14414                           l874:; BSR set to: 0
 14415  002122                     
 14416                           	
 14417                           l7137:
 14418  002122                     	movlb	0	; () banked
 14419  002122  0100               	movf	((main@meAtuadores))&0ffh,w
 14420  002124  51AF               	movwf	(??_main+0+0)&0ffh,c
 14421  002126  6E45               	clrf	(??_main+0+0+1)&0ffh,c
 14422  002128  6A46               
 14423                           	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
 14424                           ; Switch size 1, requested type "space"
 14425                           ; Number of cases is 1, Range of values is 0 to 0
 14426                           ; switch strategies available:
 14427                           ; Name         Instructions Cycles
 14428                           ; simple_byte            4     3 (average)
 14429                           ;	Chosen strategy is simple_byte
 14430                           
 14431                           	movf ??_main+0+1,c,w
 14432  00212A  5046               	xorlw	0^0	; case 0
 14433  00212C  0A00               	skipnz
 14434  00212E  B4D8               	goto	l7975
 14435  002130  EF9C  F010         	goto	l7061
 14436  002134  EF9F  F00E         	
 14437                           l7975:; BSR set to: 0
 14438  002138                     
 14439                           ; Switch size 1, requested type "space"
 14440                           ; Number of cases is 9, Range of values is 0 to 8
 14441                           ; switch strategies available:
 14442                           ; Name         Instructions Cycles
 14443                           ; simple_byte           28    15 (average)
 14444                           ;	Chosen strategy is simple_byte
 14445                           
 14446                           	movf ??_main+0+0,c,w
 14447  002138  5045               	xorlw	0^0	; case 0
 14448  00213A  0A00               	skipnz
 14449  00213C  B4D8               	goto	l7061
 14450  00213E  EF9F  F00E         	xorlw	1^0	; case 1
 14451  002142  0A01               	skipnz
 14452  002144  B4D8               	goto	l7065
 14453  002146  EF4B  F00F         	xorlw	2^1	; case 2
 14454  00214A  0A03               	skipnz
 14455  00214C  B4D8               	goto	l7069
 14456  00214E  EF54  F00F         	xorlw	3^2	; case 3
 14457  002152  0A01               	skipnz
 14458  002154  B4D8               	goto	l7079
 14459  002156  EF7B  F00F         	xorlw	4^3	; case 4
 14460  00215A  0A07               	skipnz
 14461  00215C  B4D8               	goto	l7103
 14462  00215E  EF03  F010         	xorlw	5^4	; case 5
 14463  002162  0A01               	skipnz
 14464  002164  B4D8               	goto	l7107
 14465  002166  EF17  F010         	xorlw	6^5	; case 6
 14466  00216A  0A03               	skipnz
 14467  00216C  B4D8               	goto	l7111
 14468  00216E  EF2D  F010         	xorlw	7^6	; case 7
 14469  002172  0A01               	skipnz
 14470  002174  B4D8               	goto	l7115
 14471  002176  EF3C  F010         	xorlw	8^7	; case 8
 14472  00217A  0A0F               	skipnz
 14473  00217C  B4D8               	goto	l7123
 14474  00217E  EF59  F010         	goto	l7061
 14475  002182  EF9F  F00E         
 14476                           	
 14477                           l876:; BSR set to: 0
 14478  002186                     
 14479                           	goto	l7061
 14480  002186  EF9F  F00E         	line	841
 14481                           ;main.c: 841:     }
 14482                           	
 14483                           l903:; BSR set to: 0
 14484  00218A                     
 14485                           	goto	l7061
 14486  00218A  EF9F  F00E         	
 14487                           l904:; BSR set to: 0
 14488  00218E                     
 14489                           	line	843
 14490                           ;main.c: 842:     return;
 14491                           	
 14492                           l905:; BSR set to: 0
 14493  00218E                     
 14494                           	global	start
 14495                           	goto	start
 14496  00218E  EF07  F000         	opt stack 0
 14497                           GLOBAL	__end_of_main
 14498                           	__end_of_main:
 14499  002192                     	signat	_main,89
 14500                           	global	_timer1_init
 14501                           
 14502 ;; *************** function _timer1_init *****************
 14503 ;; Defined at:
 14504 ;;		line 16 in file "timer1.c"
 14505 ;; Parameters:    Size  Location     Type
 14506 ;;		None
 14507 ;; Auto vars:     Size  Location     Type
 14508 ;;		None
 14509 ;; Return value:  Size  Location     Type
 14510 ;;                  1    wreg      void 
 14511 ;; Registers used:
 14512 ;;		wreg, status,2
 14513 ;; Tracked objects:
 14514 ;;		On entry : 0/0
 14515 ;;		On exit  : 0/0
 14516 ;;		Unchanged: 0/0
 14517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14518 ;;      Params:         0       0       0       0       0       0       0       0       0
 14519 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14520 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14521 ;;      Totals:         0       0       0       0       0       0       0       0       0
 14522 ;;Total ram usage:        0 bytes
 14523 ;; Hardware stack levels used:    1
 14524 ;; Hardware stack levels required when called:    2
 14525 ;; This function calls:
 14526 ;;		Nothing
 14527 ;; This function is called by:
 14528 ;;		_main
 14529 ;; This function uses a non-reentrant model
 14530 ;;
 14531                           psect	text1,class=CODE,space=0,reloc=2,group=0
 14532                           	file	"timer1.c"
 14533                           	line	16
 14534                           global __ptext1
 14535                           __ptext1:
 14536  0041AC                     psect	text1
 14537                           	file	"timer1.c"
 14538                           	line	16
 14539                           	global	__size_of_timer1_init
 14540                           	__size_of_timer1_init	equ	__end_of_timer1_init-_timer1_init
 14541  0000                     	
 14542                           _timer1_init:; BSR set to: 0
 14543  0041AC                     
 14544                           ;incstack = 0
 14545                           	opt	stack 28
 14546                           	line	18
 14547                           	
 14548                           l6085:
 14549  0041AC                     ;timer1.c: 18:     T1CONbits.TMR1CS = 0;
 14550                           	bcf	((c:4045)),c,1	;volatile
 14551  0041AC  92CD               	line	19
 14552                           	
 14553                           l6087:
 14554  0041AE                     ;timer1.c: 19:     T1CONbits.T1CKPS = 0b11;
 14555                           	movlw	(03h & ((1<<2)-1))<<4
 14556  0041AE  0E30               	iorwf	((c:4045)),c	;volatile
 14557  0041B0  12CD               	line	20
 14558                           	
 14559                           l6089:
 14560  0041B2                     ;timer1.c: 20:     T1CONbits.nT1SYNC = 1;
 14561                           	bsf	((c:4045)),c,2	;volatile
 14562  0041B2  84CD               	line	21
 14563                           ;timer1.c: 21:     TMR1H = ((65536-625)>>8) & 0x00FF;
 14564                           	movlw	low(0FDh)
 14565  0041B4  0EFD               	movwf	((c:4047)),c	;volatile
 14566  0041B6  6ECF               	line	22
 14567                           ;timer1.c: 22:     TMR1L = (65536-625) & 0x00FF;
 14568                           	movlw	low(08Fh)
 14569  0041B8  0E8F               	movwf	((c:4046)),c	;volatile
 14570  0041BA  6ECE               	line	23
 14571                           	
 14572                           l6091:
 14573  0041BC                     ;timer1.c: 23:     T1CONbits.T1RUN = 0;
 14574                           	bcf	((c:4045)),c,6	;volatile
 14575  0041BC  9CCD               	line	25
 14576                           	
 14577                           l6093:
 14578  0041BE                     ;timer1.c: 25:     PIE1bits.TMR1IE = 1;
 14579                           	bsf	((c:3997)),c,0	;volatile
 14580  0041BE  809D               	line	26
 14581                           	
 14582                           l6095:
 14583  0041C0                     ;timer1.c: 26:     INTCONbits.PEIE = 1;
 14584                           	bsf	((c:4082)),c,6	;volatile
 14585  0041C0  8CF2               	line	27
 14586                           	
 14587                           l6097:
 14588  0041C2                     ;timer1.c: 27:     INTCONbits.GIE = 1;
 14589                           	bsf	((c:4082)),c,7	;volatile
 14590  0041C2  8EF2               	line	29
 14591                           	
 14592                           l1066:
 14593  0041C4                     	return	;funcret
 14594  0041C4  0012               	opt stack 0
 14595                           GLOBAL	__end_of_timer1_init
 14596                           	__end_of_timer1_init:
 14597  0041C6                     	signat	_timer1_init,89
 14598                           	global	_teclado_init
 14599                           
 14600 ;; *************** function _teclado_init *****************
 14601 ;; Defined at:
 14602 ;;		line 29 in file "teclado.c"
 14603 ;; Parameters:    Size  Location     Type
 14604 ;;		None
 14605 ;; Auto vars:     Size  Location     Type
 14606 ;;		None
 14607 ;; Return value:  Size  Location     Type
 14608 ;;                  1    wreg      void 
 14609 ;; Registers used:
 14610 ;;		wreg, status,2
 14611 ;; Tracked objects:
 14612 ;;		On entry : 0/0
 14613 ;;		On exit  : 0/0
 14614 ;;		Unchanged: 0/0
 14615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14616 ;;      Params:         0       0       0       0       0       0       0       0       0
 14617 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14618 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14619 ;;      Totals:         0       0       0       0       0       0       0       0       0
 14620 ;;Total ram usage:        0 bytes
 14621 ;; Hardware stack levels used:    1
 14622 ;; Hardware stack levels required when called:    2
 14623 ;; This function calls:
 14624 ;;		Nothing
 14625 ;; This function is called by:
 14626 ;;		_main
 14627 ;; This function uses a non-reentrant model
 14628 ;;
 14629                           psect	text2,class=CODE,space=0,reloc=2,group=0
 14630                           	file	"teclado.c"
 14631                           	line	29
 14632                           global __ptext2
 14633                           __ptext2:
 14634  0042EA                     psect	text2
 14635                           	file	"teclado.c"
 14636                           	line	29
 14637                           	global	__size_of_teclado_init
 14638                           	__size_of_teclado_init	equ	__end_of_teclado_init-_teclado_init
 14639  0000                     	
 14640                           _teclado_init:
 14641  0042EA                     ;incstack = 0
 14642                           	opt	stack 28
 14643                           	line	31
 14644                           	
 14645                           l6083:
 14646  0042EA                     ;teclado.c: 31:     PORTD = 0x00;
 14647                           	movlw	low(0)
 14648  0042EA  0E00               	movwf	((c:3971)),c	;volatile
 14649  0042EC  6E83               	line	32
 14650                           ;teclado.c: 32:     TRISD = 0xF0;
 14651                           	movlw	low(0F0h)
 14652  0042EE  0EF0               	movwf	((c:3989)),c	;volatile
 14653  0042F0  6E95               	line	34
 14654                           	
 14655                           l1014:
 14656  0042F2                     	return	;funcret
 14657  0042F2  0012               	opt stack 0
 14658                           GLOBAL	__end_of_teclado_init
 14659                           	__end_of_teclado_init:
 14660  0042F4                     	signat	_teclado_init,89
 14661                           	global	_teclado_borda
 14662                           
 14663 ;; *************** function _teclado_borda *****************
 14664 ;; Defined at:
 14665 ;;		line 92 in file "teclado.c"
 14666 ;; Parameters:    Size  Location     Type
 14667 ;;		None
 14668 ;; Auto vars:     Size  Location     Type
 14669 ;;  tecla           1    6[COMRAM] unsigned char 
 14670 ;;  aux             1    5[COMRAM] unsigned char 
 14671 ;; Return value:  Size  Location     Type
 14672 ;;                  1    wreg      unsigned char 
 14673 ;; Registers used:
 14674 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14675 ;; Tracked objects:
 14676 ;;		On entry : 0/0
 14677 ;;		On exit  : 0/0
 14678 ;;		Unchanged: 0/0
 14679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14680 ;;      Params:         0       0       0       0       0       0       0       0       0
 14681 ;;      Locals:         2       0       0       0       0       0       0       0       0
 14682 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14683 ;;      Totals:         2       0       0       0       0       0       0       0       0
 14684 ;;Total ram usage:        2 bytes
 14685 ;; Hardware stack levels used:    1
 14686 ;; Hardware stack levels required when called:    3
 14687 ;; This function calls:
 14688 ;;		_teclado_scan
 14689 ;; This function is called by:
 14690 ;;		_main
 14691 ;; This function uses a non-reentrant model
 14692 ;;
 14693                           psect	text3,class=CODE,space=0,reloc=2,group=0
 14694                           	line	92
 14695                           global __ptext3
 14696                           __ptext3:
 14697  003E5A                     psect	text3
 14698                           	file	"teclado.c"
 14699                           	line	92
 14700                           	global	__size_of_teclado_borda
 14701                           	__size_of_teclado_borda	equ	__end_of_teclado_borda-_teclado_borda
 14702  0000                     	
 14703                           _teclado_borda:
 14704  003E5A                     ;incstack = 0
 14705                           	opt	stack 27
 14706                           	line	94
 14707                           	
 14708                           l6141:
 14709  003E5A                     ;teclado.c: 94:     char tecla = 0;
 14710                           	movlw	low(0)
 14711  003E5A  0E00               	movwf	((c:teclado_borda@tecla)),c
 14712  003E5C  6E2D               	line	95
 14713                           ;teclado.c: 95:     char aux = 0;
 14714                           	movlw	low(0)
 14715  003E5E  0E00               	movwf	((c:teclado_borda@aux)),c
 14716  003E60  6E2C               	line	97
 14717                           	
 14718                           l6143:
 14719  003E62                     ;teclado.c: 97:     tecla = teclado_scan();
 14720                           	call	_teclado_scan	;wreg free
 14721  003E62  EC9C  F018         	movwf	((c:teclado_borda@tecla)),c
 14722  003E66  6E2D               	line	99
 14723                           	
 14724                           l6145:
 14725  003E68                     ;teclado.c: 99:     if(tecla && !teclaAnterior)
 14726                           	movf	((c:teclado_borda@tecla)),c,w
 14727  003E68  502D               	btfsc	status,2
 14728  003E6A  B4D8               	goto	u4551
 14729  003E6C  EF3A  F01F         	goto	u4550
 14730  003E70  EF3C  F01F         u4551:
 14731  003E74                     	goto	l1029
 14732  003E74  EF46  F01F         u4550:
 14733  003E78                     	
 14734                           l6147:
 14735  003E78                     	movf	((c:_teclaAnterior)),c,w
 14736  003E78  5011               	btfss	status,2
 14737  003E7A  A4D8               	goto	u4561
 14738  003E7C  EF42  F01F         	goto	u4560
 14739  003E80  EF44  F01F         u4561:
 14740  003E84                     	goto	l1029
 14741  003E84  EF46  F01F         u4560:
 14742  003E88                     	line	100
 14743                           	
 14744                           l6149:
 14745  003E88                     ;teclado.c: 100:         aux = tecla;
 14746                           	movff	(c:teclado_borda@tecla),(c:teclado_borda@aux)
 14747  003E88  C02D  F02C         	
 14748                           l1029:
 14749  003E8C                     	line	102
 14750                           ;teclado.c: 102:     teclaAnterior = tecla;
 14751                           	movff	(c:teclado_borda@tecla),(c:_teclaAnterior)
 14752  003E8C  C02D  F011         	line	104
 14753                           	
 14754                           l6151:
 14755  003E90                     ;teclado.c: 104:     return(aux);
 14756                           	movf	((c:teclado_borda@aux)),c,w
 14757  003E90  502C               	goto	l1030
 14758  003E92  EF4B  F01F         	
 14759                           l6153:
 14760  003E96                     	line	105
 14761                           	
 14762                           l1030:
 14763  003E96                     	return	;funcret
 14764  003E96  0012               	opt stack 0
 14765                           GLOBAL	__end_of_teclado_borda
 14766                           	__end_of_teclado_borda:
 14767  003E98                     	signat	_teclado_borda,89
 14768                           	global	_teclado_scan
 14769                           
 14770 ;; *************** function _teclado_scan *****************
 14771 ;; Defined at:
 14772 ;;		line 55 in file "teclado.c"
 14773 ;; Parameters:    Size  Location     Type
 14774 ;;		None
 14775 ;; Auto vars:     Size  Location     Type
 14776 ;;  c               1    4[COMRAM] unsigned char 
 14777 ;;  l               1    3[COMRAM] unsigned char 
 14778 ;;  tecla           1    2[COMRAM] unsigned char 
 14779 ;; Return value:  Size  Location     Type
 14780 ;;                  1    wreg      unsigned char 
 14781 ;; Registers used:
 14782 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 14783 ;; Tracked objects:
 14784 ;;		On entry : 0/0
 14785 ;;		On exit  : 0/0
 14786 ;;		Unchanged: 0/0
 14787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14788 ;;      Params:         0       0       0       0       0       0       0       0       0
 14789 ;;      Locals:         3       0       0       0       0       0       0       0       0
 14790 ;;      Temps:          2       0       0       0       0       0       0       0       0
 14791 ;;      Totals:         5       0       0       0       0       0       0       0       0
 14792 ;;Total ram usage:        5 bytes
 14793 ;; Hardware stack levels used:    1
 14794 ;; Hardware stack levels required when called:    2
 14795 ;; This function calls:
 14796 ;;		Nothing
 14797 ;; This function is called by:
 14798 ;;		_teclado_borda
 14799 ;; This function uses a non-reentrant model
 14800 ;;
 14801                           psect	text4,class=CODE,space=0,reloc=2,group=0
 14802                           	line	55
 14803                           global __ptext4
 14804                           __ptext4:
 14805  003138                     psect	text4
 14806                           	file	"teclado.c"
 14807                           	line	55
 14808                           	global	__size_of_teclado_scan
 14809                           	__size_of_teclado_scan	equ	__end_of_teclado_scan-_teclado_scan
 14810  0000                     	
 14811                           _teclado_scan:
 14812  003138                     ;incstack = 0
 14813                           	opt	stack 27
 14814                           	line	57
 14815                           	
 14816                           l5471:
 14817  003138                     ;teclado.c: 57:    char tecla = 0;
 14818                           	movlw	low(0)
 14819  003138  0E00               	movwf	((c:teclado_scan@tecla)),c
 14820  00313A  6E29               	line	73
 14821                           ;teclado.c: 71:     unsigned char l,c;;teclado.c: 73:     for( l=0; l<4; l++ )
 14822                           	movlw	low(0)
 14823  00313C  0E00               	movwf	((c:teclado_scan@l)),c
 14824  00313E  6E2A               	
 14825                           l5473:
 14826  003140                     		movlw	04h-1
 14827  003140  0E03               	cpfsgt	((c:teclado_scan@l)),c
 14828  003142  642A               	goto	u3861
 14829  003144  EFA6  F018         	goto	u3860
 14830  003148  EFA8  F018         
 14831                           u3861:
 14832  00314C                     	goto	l5477
 14833  00314C  EFAC  F018         u3860:
 14834  003150                     	goto	l5497
 14835  003150  EF0A  F019         	
 14836                           l5475:
 14837  003154                     	goto	l5497
 14838  003154  EF0A  F019         	
 14839                           l1019:
 14840  003158                     	line	75
 14841                           	
 14842                           l5477:
 14843  003158                     ;teclado.c: 74:     {;teclado.c: 75:         PORTD = (0x01 << l);
 14844                           	movff	(c:teclado_scan@l),??_teclado_scan+0+0
 14845  003158  C02A  F027         	movlw	(01h)&0ffh
 14846  00315C  0E01               	movwf	(??_teclado_scan+1+0)&0ffh,c
 14847  00315E  6E28               	incf	(??_teclado_scan+0+0),c
 14848  003160  2A27               	goto	u3874
 14849  003162  EFB5  F018         u3875:
 14850  003166                     	bcf	status,0
 14851  003166  90D8               	rlcf	((??_teclado_scan+1+0)),c
 14852  003168  3628               u3874:
 14853  00316A                     	decfsz	(??_teclado_scan+0+0),c
 14854  00316A  2E27               	goto	u3875
 14855  00316C  EFB3  F018         	movf	((??_teclado_scan+1+0)),c,w
 14856  003170  5028               	movwf	((c:3971)),c	;volatile
 14857  003172  6E83               	line	77
 14858                           	
 14859                           l5479:
 14860  003174                     ;teclado.c: 77:         for( c=0; c<4; c++ )
 14861                           	movlw	low(0)
 14862  003174  0E00               	movwf	((c:teclado_scan@c)),c
 14863  003176  6E2B               	
 14864                           l5481:
 14865  003178                     		movlw	04h-1
 14866  003178  0E03               	cpfsgt	((c:teclado_scan@c)),c
 14867  00317A  642B               	goto	u3881
 14868  00317C  EFC2  F018         	goto	u3880
 14869  003180  EFC4  F018         
 14870                           u3881:
 14871  003184                     	goto	l5485
 14872  003184  EFC8  F018         u3880:
 14873  003188                     	goto	l5493
 14874  003188  EFFF  F018         	
 14875                           l5483:
 14876  00318C                     	goto	l5493
 14877  00318C  EFFF  F018         	
 14878                           l1021:
 14879  003190                     	line	80
 14880                           	
 14881                           l5485:
 14882  003190                     ;teclado.c: 78:         {;teclado.c: 80:             if( PORTD & (0x10<<c) )
 14883                           	movff	(c:teclado_scan@c),??_teclado_scan+0+0
 14884  003190  C02B  F027         	movlw	(010h)&0ffh
 14885  003194  0E10               	movwf	(??_teclado_scan+1+0)&0ffh,c
 14886  003196  6E28               	incf	(??_teclado_scan+0+0),c
 14887  003198  2A27               	goto	u3894
 14888  00319A  EFD1  F018         u3895:
 14889  00319E                     	bcf	status,0
 14890  00319E  90D8               	rlcf	((??_teclado_scan+1+0)),c
 14891  0031A0  3628               u3894:
 14892  0031A2                     	decfsz	(??_teclado_scan+0+0),c
 14893  0031A2  2E27               	goto	u3895
 14894  0031A4  EFCF  F018         	movf	((??_teclado_scan+1+0)),c,w
 14895  0031A8  5028               	andwf	((c:3971)),c,w	;volatile
 14896  0031AA  1483               	iorlw	0
 14897  0031AC  0900               	btfsc	status,2
 14898  0031AE  B4D8               	goto	u3901
 14899  0031B0  EFDC  F018         	goto	u3900
 14900  0031B4  EFDE  F018         u3901:
 14901  0031B8                     	goto	l5489
 14902  0031B8  EFF4  F018         u3900:
 14903  0031BC                     	line	82
 14904                           	
 14905                           l5487:
 14906  0031BC                     ;teclado.c: 81:             {;teclado.c: 82:                 tecla = teclas[l][c];
 14907                           	movf	((c:teclado_scan@l)),c,w
 14908  0031BC  502A               	mullw	04h
 14909  0031BE  0D04               	movlw	low((_teclas))
 14910  0031C0  0EBF               	movwf	(??_teclado_scan+0+0)&0ffh,c
 14911  0031C2  6E27               	movlw	high((_teclas))
 14912  0031C4  0E00               	movwf	1+(??_teclado_scan+0+0)&0ffh,c
 14913  0031C6  6E28               	movf	(prodl),c,w
 14914  0031C8  50F3               	addwf	(??_teclado_scan+0+0),c
 14915  0031CA  2627               	movf	(prodh),c,w
 14916  0031CC  50F4               	addwfc	(??_teclado_scan+0+1),c
 14917  0031CE  2228               	movf	((c:teclado_scan@c)),c,w
 14918  0031D0  502B               	mullw	01h
 14919  0031D2  0D01               	movf	(prodl),c,w
 14920  0031D4  50F3               	addwf	(??_teclado_scan+0+0),c,w
 14921  0031D6  2427               	movwf	c:fsr2l
 14922  0031D8  6ED9               	movf	(prodh),c,w
 14923  0031DA  50F4               	addwfc	(??_teclado_scan+0+1),c,w
 14924  0031DC  2028               	movwf	1+c:fsr2l
 14925  0031DE  6EDA               	movf	indf2,w
 14926  0031E0  50DF               	movwf	((c:teclado_scan@tecla)),c
 14927  0031E2  6E29               	goto	l5489
 14928  0031E4  EFF4  F018         	line	84
 14929                           ;teclado.c: 84:             }
 14930                           	
 14931                           l1023:
 14932  0031E8                     	line	85
 14933                           	
 14934                           l5489:
 14935  0031E8                     ;teclado.c: 85:         }
 14936                           	incf	((c:teclado_scan@c)),c
 14937  0031E8  2A2B               	
 14938                           l5491:
 14939  0031EA                     		movlw	04h-1
 14940  0031EA  0E03               	cpfsgt	((c:teclado_scan@c)),c
 14941  0031EC  642B               	goto	u3911
 14942  0031EE  EFFB  F018         	goto	u3910
 14943  0031F2  EFFD  F018         
 14944                           u3911:
 14945  0031F6                     	goto	l5485
 14946  0031F6  EFC8  F018         u3910:
 14947  0031FA                     	goto	l5493
 14948  0031FA  EFFF  F018         	
 14949                           l1022:
 14950  0031FE                     	line	86
 14951                           	
 14952                           l5493:
 14953  0031FE                     ;teclado.c: 86:     }
 14954                           	incf	((c:teclado_scan@l)),c
 14955  0031FE  2A2A               	
 14956                           l5495:
 14957  003200                     		movlw	04h-1
 14958  003200  0E03               	cpfsgt	((c:teclado_scan@l)),c
 14959  003202  642A               	goto	u3921
 14960  003204  EF06  F019         	goto	u3920
 14961  003208  EF08  F019         
 14962                           u3921:
 14963  00320C                     	goto	l5477
 14964  00320C  EFAC  F018         u3920:
 14965  003210                     	goto	l5497
 14966  003210  EF0A  F019         	
 14967                           l1020:
 14968  003214                     	line	87
 14969                           	
 14970                           l5497:
 14971  003214                     ;teclado.c: 87:     return( tecla );
 14972                           	movf	((c:teclado_scan@tecla)),c,w
 14973  003214  5029               	goto	l1024
 14974  003216  EF0D  F019         	
 14975                           l5499:
 14976  00321A                     	line	89
 14977                           	
 14978                           l1024:
 14979  00321A                     	return	;funcret
 14980  00321A  0012               	opt stack 0
 14981                           GLOBAL	__end_of_teclado_scan
 14982                           	__end_of_teclado_scan:
 14983  00321C                     	signat	_teclado_scan,89
 14984                           	global	_statusT1
 14985                           
 14986 ;; *************** function _statusT1 *****************
 14987 ;; Defined at:
 14988 ;;		line 38 in file "timer1.c"
 14989 ;; Parameters:    Size  Location     Type
 14990 ;;		None
 14991 ;; Auto vars:     Size  Location     Type
 14992 ;;		None
 14993 ;; Return value:  Size  Location     Type
 14994 ;;                  4    0[COMRAM] unsigned long 
 14995 ;; Registers used:
 14996 ;;		None
 14997 ;; Tracked objects:
 14998 ;;		On entry : 0/0
 14999 ;;		On exit  : 0/0
 15000 ;;		Unchanged: 0/0
 15001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15002 ;;      Params:         4       0       0       0       0       0       0       0       0
 15003 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15004 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15005 ;;      Totals:         4       0       0       0       0       0       0       0       0
 15006 ;;Total ram usage:        4 bytes
 15007 ;; Hardware stack levels used:    1
 15008 ;; Hardware stack levels required when called:    2
 15009 ;; This function calls:
 15010 ;;		Nothing
 15011 ;; This function is called by:
 15012 ;;		_main
 15013 ;; This function uses a non-reentrant model
 15014 ;;
 15015                           psect	text5,class=CODE,space=0,reloc=2,group=0
 15016                           	file	"timer1.c"
 15017                           	line	38
 15018                           global __ptext5
 15019                           __ptext5:
 15020  0042CA                     psect	text5
 15021                           	file	"timer1.c"
 15022                           	line	38
 15023                           	global	__size_of_statusT1
 15024                           	__size_of_statusT1	equ	__end_of_statusT1-_statusT1
 15025  0000                     	
 15026                           _statusT1:
 15027  0042CA                     ;incstack = 0
 15028                           	opt	stack 28
 15029                           	line	40
 15030                           	
 15031                           l6139:
 15032  0042CA                     ;timer1.c: 40:     return( t1cont );
 15033                           	movff	(c:_t1cont),(c:?_statusT1)
 15034  0042CA  C001  F027         	movff	(c:_t1cont+1),(c:?_statusT1+1)
 15035  0042CE  C002  F028         	movff	(c:_t1cont+2),(c:?_statusT1+2)
 15036  0042D2  C003  F029         	movff	(c:_t1cont+3),(c:?_statusT1+3)
 15037  0042D6  C004  F02A         	line	41
 15038                           	
 15039                           l1072:
 15040  0042DA                     	return	;funcret
 15041  0042DA  0012               	opt stack 0
 15042                           GLOBAL	__end_of_statusT1
 15043                           	__end_of_statusT1:
 15044  0042DC                     	signat	_statusT1,92
 15045                           	global	_set_passo
 15046                           
 15047 ;; *************** function _set_passo *****************
 15048 ;; Defined at:
 15049 ;;		line 53 in file "atuadores.c"
 15050 ;; Parameters:    Size  Location     Type
 15051 ;;  passo           1    wreg     unsigned char 
 15052 ;;  ptr             2    0[COMRAM] PTR unsigned char 
 15053 ;;		 -> main@vetorOut(1), 
 15054 ;; Auto vars:     Size  Location     Type
 15055 ;;  passo           1    4[COMRAM] unsigned char 
 15056 ;; Return value:  Size  Location     Type
 15057 ;;                  1    wreg      void 
 15058 ;; Registers used:
 15059 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15060 ;; Tracked objects:
 15061 ;;		On entry : 0/0
 15062 ;;		On exit  : 0/0
 15063 ;;		Unchanged: 0/0
 15064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15065 ;;      Params:         2       0       0       0       0       0       0       0       0
 15066 ;;      Locals:         1       0       0       0       0       0       0       0       0
 15067 ;;      Temps:          2       0       0       0       0       0       0       0       0
 15068 ;;      Totals:         5       0       0       0       0       0       0       0       0
 15069 ;;Total ram usage:        5 bytes
 15070 ;; Hardware stack levels used:    1
 15071 ;; Hardware stack levels required when called:    2
 15072 ;; This function calls:
 15073 ;;		Nothing
 15074 ;; This function is called by:
 15075 ;;		_main
 15076 ;; This function uses a non-reentrant model
 15077 ;;
 15078                           psect	text6,class=CODE,space=0,reloc=2,group=0
 15079                           	file	"atuadores.c"
 15080                           	line	53
 15081                           global __ptext6
 15082                           __ptext6:
 15083  003052                     psect	text6
 15084                           	file	"atuadores.c"
 15085                           	line	53
 15086                           	global	__size_of_set_passo
 15087                           	__size_of_set_passo	equ	__end_of_set_passo-_set_passo
 15088  0000                     	
 15089                           _set_passo:
 15090  003052                     ;incstack = 0
 15091                           	opt	stack 28
 15092                           ;set_passo@passo stored from wreg
 15093                           	movwf	((c:set_passo@passo)),c
 15094  003052  6E2B               	line	55
 15095                           	
 15096                           l5563:
 15097  003054                     ;atuadores.c: 53: void set_passo(char passo, char* ptr);atuadores.c: 54: {;atuadores.c: 
                                 55:     switch (passo)
 15098                           	goto	l5583
 15099  003054  EF6E  F018         	line	57
 15100                           ;atuadores.c: 56:     {;atuadores.c: 57:         case 'A': *ptr |= 0x01; break;
 15101                           	
 15102                           l26:
 15103  003058                     	
 15104                           l5565:
 15105  003058                     	movff	(c:set_passo@ptr),fsr2l
 15106  003058  C027  FFD9         	movff	(c:set_passo@ptr+1),fsr2h
 15107  00305C  C028  FFDA         	movlw	0+(0/8)
 15108  003060  0E00               	bsf	plusw2,(0)&7
 15109  003062  80DB               	goto	l35
 15110  003064  EF9B  F018         	line	58
 15111                           ;atuadores.c: 58:         case 'a': *ptr &= ~0x01; break;
 15112                           	
 15113                           l28:
 15114  003068                     	
 15115                           l5567:
 15116  003068                     	movff	(c:set_passo@ptr),fsr2l
 15117  003068  C027  FFD9         	movff	(c:set_passo@ptr+1),fsr2h
 15118  00306C  C028  FFDA         	movlw	0FEh
 15119  003070  0EFE               	andwf	indf2
 15120  003072  16DF               	goto	l35
 15121  003074  EF9B  F018         	line	59
 15122                           ;atuadores.c: 59:         case 'B': *ptr |= 0x02; break;
 15123                           	
 15124                           l29:
 15125  003078                     	
 15126                           l5569:
 15127  003078                     	movff	(c:set_passo@ptr),fsr2l
 15128  003078  C027  FFD9         	movff	(c:set_passo@ptr+1),fsr2h
 15129  00307C  C028  FFDA         	movlw	0+(1/8)
 15130  003080  0E00               	bsf	plusw2,(1)&7
 15131  003082  82DB               	goto	l35
 15132  003084  EF9B  F018         	line	60
 15133                           ;atuadores.c: 60:         case 'b': *ptr &= ~0x02; break;
 15134                           	
 15135                           l30:
 15136  003088                     	
 15137                           l5571:
 15138  003088                     	movff	(c:set_passo@ptr),fsr2l
 15139  003088  C027  FFD9         	movff	(c:set_passo@ptr+1),fsr2h
 15140  00308C  C028  FFDA         	movlw	0FDh
 15141  003090  0EFD               	andwf	indf2
 15142  003092  16DF               	goto	l35
 15143  003094  EF9B  F018         	line	61
 15144                           ;atuadores.c: 61:         case 'C': *ptr |= 0x04; break;
 15145                           	
 15146                           l31:
 15147  003098                     	
 15148                           l5573:
 15149  003098                     	movff	(c:set_passo@ptr),fsr2l
 15150  003098  C027  FFD9         	movff	(c:set_passo@ptr+1),fsr2h
 15151  00309C  C028  FFDA         	movlw	0+(2/8)
 15152  0030A0  0E00               	bsf	plusw2,(2)&7
 15153  0030A2  84DB               	goto	l35
 15154  0030A4  EF9B  F018         	line	62
 15155                           ;atuadores.c: 62:         case 'c': *ptr &= ~0x04; break;
 15156                           	
 15157                           l32:
 15158  0030A8                     	
 15159                           l5575:
 15160  0030A8                     	movff	(c:set_passo@ptr),fsr2l
 15161  0030A8  C027  FFD9         	movff	(c:set_passo@ptr+1),fsr2h
 15162  0030AC  C028  FFDA         	movlw	0FBh
 15163  0030B0  0EFB               	andwf	indf2
 15164  0030B2  16DF               	goto	l35
 15165  0030B4  EF9B  F018         	line	63
 15166                           ;atuadores.c: 63:         case 'D': *ptr |= 0x08; break;
 15167                           	
 15168                           l33:
 15169  0030B8                     	
 15170                           l5577:
 15171  0030B8                     	movff	(c:set_passo@ptr),fsr2l
 15172  0030B8  C027  FFD9         	movff	(c:set_passo@ptr+1),fsr2h
 15173  0030BC  C028  FFDA         	movlw	0+(3/8)
 15174  0030C0  0E00               	bsf	plusw2,(3)&7
 15175  0030C2  86DB               	goto	l35
 15176  0030C4  EF9B  F018         	line	64
 15177                           ;atuadores.c: 64:         case 'd': *ptr &= ~0x08; break;
 15178                           	
 15179                           l34:
 15180  0030C8                     	
 15181                           l5579:
 15182  0030C8                     	movff	(c:set_passo@ptr),fsr2l
 15183  0030C8  C027  FFD9         	movff	(c:set_passo@ptr+1),fsr2h
 15184  0030CC  C028  FFDA         	movlw	0F7h
 15185  0030D0  0EF7               	andwf	indf2
 15186  0030D2  16DF               	goto	l35
 15187  0030D4  EF9B  F018         	line	65
 15188                           	
 15189                           l5581:
 15190  0030D8                     ;atuadores.c: 65:     }
 15191                           	goto	l35
 15192  0030D8  EF9B  F018         	
 15193                           l25:
 15194  0030DC                     	
 15195                           l5583:
 15196  0030DC                     	movf	((c:set_passo@passo)),c,w
 15197  0030DC  502B               	movwf	(??_set_passo+0+0)&0ffh,c
 15198  0030DE  6E29               	clrf	(??_set_passo+0+0+1)&0ffh,c
 15199  0030E0  6A2A               
 15200                           	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
 15201                           ; Switch size 1, requested type "space"
 15202                           ; Number of cases is 1, Range of values is 0 to 0
 15203                           ; switch strategies available:
 15204                           ; Name         Instructions Cycles
 15205                           ; simple_byte            4     3 (average)
 15206                           ;	Chosen strategy is simple_byte
 15207                           
 15208                           	movf ??_set_passo+0+1,c,w
 15209  0030E2  502A               	xorlw	0^0	; case 0
 15210  0030E4  0A00               	skipnz
 15211  0030E6  B4D8               	goto	l7977
 15212  0030E8  EF78  F018         	goto	l35
 15213  0030EC  EF9B  F018         	
 15214                           l7977:
 15215  0030F0                     ; Switch size 1, requested type "space"
 15216                           ; Number of cases is 8, Range of values is 65 to 100
 15217                           ; switch strategies available:
 15218                           ; Name         Instructions Cycles
 15219                           ; simple_byte           25    13 (average)
 15220                           ;	Chosen strategy is simple_byte
 15221                           
 15222                           	movf ??_set_passo+0+0,c,w
 15223  0030F0  5029               	xorlw	65^0	; case 65
 15224  0030F2  0A41               	skipnz
 15225  0030F4  B4D8               	goto	l5565
 15226  0030F6  EF2C  F018         	xorlw	66^65	; case 66
 15227  0030FA  0A03               	skipnz
 15228  0030FC  B4D8               	goto	l5569
 15229  0030FE  EF3C  F018         	xorlw	67^66	; case 67
 15230  003102  0A01               	skipnz
 15231  003104  B4D8               	goto	l5573
 15232  003106  EF4C  F018         	xorlw	68^67	; case 68
 15233  00310A  0A07               	skipnz
 15234  00310C  B4D8               	goto	l5577
 15235  00310E  EF5C  F018         	xorlw	97^68	; case 97
 15236  003112  0A25               	skipnz
 15237  003114  B4D8               	goto	l5567
 15238  003116  EF34  F018         	xorlw	98^97	; case 98
 15239  00311A  0A03               	skipnz
 15240  00311C  B4D8               	goto	l5571
 15241  00311E  EF44  F018         	xorlw	99^98	; case 99
 15242  003122  0A01               	skipnz
 15243  003124  B4D8               	goto	l5575
 15244  003126  EF54  F018         	xorlw	100^99	; case 100
 15245  00312A  0A07               	skipnz
 15246  00312C  B4D8               	goto	l5579
 15247  00312E  EF64  F018         	goto	l35
 15248  003132  EF9B  F018         
 15249                           	
 15250                           l27:
 15251  003136                     	line	66
 15252                           	
 15253                           l35:
 15254  003136                     	return	;funcret
 15255  003136  0012               	opt stack 0
 15256                           GLOBAL	__end_of_set_passo
 15257                           	__end_of_set_passo:
 15258  003138                     	signat	_set_passo,8313
 15259                           	global	_setT1
 15260                           
 15261 ;; *************** function _setT1 *****************
 15262 ;; Defined at:
 15263 ;;		line 31 in file "timer1.c"
 15264 ;; Parameters:    Size  Location     Type
 15265 ;;  c               4    6[COMRAM] unsigned long 
 15266 ;; Auto vars:     Size  Location     Type
 15267 ;;		None
 15268 ;; Return value:  Size  Location     Type
 15269 ;;                  1    wreg      void 
 15270 ;; Registers used:
 15271 ;;		None
 15272 ;; Tracked objects:
 15273 ;;		On entry : 0/0
 15274 ;;		On exit  : 0/0
 15275 ;;		Unchanged: 0/0
 15276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15277 ;;      Params:         4       0       0       0       0       0       0       0       0
 15278 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15279 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15280 ;;      Totals:         4       0       0       0       0       0       0       0       0
 15281 ;;Total ram usage:        4 bytes
 15282 ;; Hardware stack levels used:    1
 15283 ;; Hardware stack levels required when called:    2
 15284 ;; This function calls:
 15285 ;;		Nothing
 15286 ;; This function is called by:
 15287 ;;		_main
 15288 ;; This function uses a non-reentrant model
 15289 ;;
 15290                           psect	text7,class=CODE,space=0,reloc=2,group=0
 15291                           	file	"timer1.c"
 15292                           	line	31
 15293                           global __ptext7
 15294                           __ptext7:
 15295  00428E                     psect	text7
 15296                           	file	"timer1.c"
 15297                           	line	31
 15298                           	global	__size_of_setT1
 15299                           	__size_of_setT1	equ	__end_of_setT1-_setT1
 15300  0000                     	
 15301                           _setT1:
 15302  00428E                     ;incstack = 0
 15303                           	opt	stack 28
 15304                           	line	33
 15305                           	
 15306                           l6137:
 15307  00428E                     ;timer1.c: 31: void setT1( unsigned long int c );timer1.c: 32: {;timer1.c: 33:     t1con
                                 t = c;
 15308                           	movff	(c:setT1@c),(c:_t1cont)
 15309  00428E  C02D  F001         	movff	(c:setT1@c+1),(c:_t1cont+1)
 15310  004292  C02E  F002         	movff	(c:setT1@c+2),(c:_t1cont+2)
 15311  004296  C02F  F003         	movff	(c:setT1@c+3),(c:_t1cont+3)
 15312  00429A  C030  F004         	line	34
 15313                           ;timer1.c: 34:     T1CONbits.TMR1ON = 1;
 15314                           	bsf	((c:4045)),c,0	;volatile
 15315  00429E  80CD               	line	35
 15316                           	
 15317                           l1069:
 15318  0042A0                     	return	;funcret
 15319  0042A0  0012               	opt stack 0
 15320                           GLOBAL	__end_of_setT1
 15321                           	__end_of_setT1:
 15322  0042A2                     	signat	_setT1,4217
 15323                           	global	_serialIOscan
 15324                           
 15325 ;; *************** function _serialIOscan *****************
 15326 ;; Defined at:
 15327 ;;		line 76 in file "serialIO.c"
 15328 ;; Parameters:    Size  Location     Type
 15329 ;;		None
 15330 ;; Auto vars:     Size  Location     Type
 15331 ;;  i               1    8[COMRAM] unsigned char 
 15332 ;;  j               1    7[COMRAM] unsigned char 
 15333 ;; Return value:  Size  Location     Type
 15334 ;;                  1    wreg      void 
 15335 ;; Registers used:
 15336 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15337 ;; Tracked objects:
 15338 ;;		On entry : 0/0
 15339 ;;		On exit  : 0/0
 15340 ;;		Unchanged: 0/0
 15341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15342 ;;      Params:         0       0       0       0       0       0       0       0       0
 15343 ;;      Locals:         2       0       0       0       0       0       0       0       0
 15344 ;;      Temps:          4       0       0       0       0       0       0       0       0
 15345 ;;      Totals:         6       0       0       0       0       0       0       0       0
 15346 ;;Total ram usage:        6 bytes
 15347 ;; Hardware stack levels used:    1
 15348 ;; Hardware stack levels required when called:    3
 15349 ;; This function calls:
 15350 ;;		_serialIObyteShift
 15351 ;;		_serialIOload
 15352 ;; This function is called by:
 15353 ;;		_main
 15354 ;; This function uses a non-reentrant model
 15355 ;;
 15356                           psect	text8,class=CODE,space=0,reloc=2,group=0
 15357                           	file	"serialIO.c"
 15358                           	line	76
 15359                           global __ptext8
 15360                           __ptext8:
 15361  003766                     psect	text8
 15362                           	file	"serialIO.c"
 15363                           	line	76
 15364                           	global	__size_of_serialIOscan
 15365                           	__size_of_serialIOscan	equ	__end_of_serialIOscan-_serialIOscan
 15366  0000                     	
 15367                           _serialIOscan:
 15368  003766                     ;incstack = 0
 15369                           	opt	stack 27
 15370                           	line	79
 15371                           	
 15372                           l6155:
 15373  003766                     ;serialIO.c: 78:     unsigned char i,j;;serialIO.c: 79:     j = lenSerialIO - 1;
 15374                           	decf	((c:_lenSerialIO)),c,w
 15375  003766  0412               	movwf	((c:serialIOscan@j)),c
 15376  003768  6E2E               	line	80
 15377                           	
 15378                           l6157:
 15379  00376A                     ;serialIO.c: 80:     serialIOload();
 15380                           	call	_serialIOload	;wreg free
 15381  00376A  EC9E  F021         	line	81
 15382                           	
 15383                           l6159:
 15384  00376E                     ;serialIO.c: 81:     for( i=0; i<lenSerialIO; i++ )
 15385                           	movlw	low(0)
 15386  00376E  0E00               	movwf	((c:serialIOscan@i)),c
 15387  003770  6E2F               	goto	l6165
 15388  003772  EFDE  F01B         	
 15389                           l935:
 15390  003776                     	line	83
 15391                           	
 15392                           l6161:
 15393  003776                     ;serialIO.c: 82:     {;serialIO.c: 83:         ptrSerialIn[i] = serialIObyteShift( ptrSe
                                 rialOut[j-i]);
 15394                           	movf	((c:serialIOscan@i)),c,w
 15395  003776  502F               	mullw	01h
 15396  003778  0D01               	movf	(prodl),c,w
 15397  00377A  50F3               	addwf	((c:_ptrSerialIn)),c,w
 15398  00377C  240B               	movwf	c:fsr2l
 15399  00377E  6ED9               	movf	(prodh),c,w
 15400  003780  50F4               	addwfc	((c:_ptrSerialIn+1)),c,w
 15401  003782  200C               	movwf	1+c:fsr2l
 15402  003784  6EDA               	movf	((c:serialIOscan@i)),c,w
 15403  003786  502F               	movwf	(??_serialIOscan+0+0)&0ffh,c
 15404  003788  6E2A               	clrf	(??_serialIOscan+0+0+1)&0ffh,c
 15405  00378A  6A2B               
 15406                           	comf	(??_serialIOscan+0+0),c
 15407  00378C  1E2A               	comf	(??_serialIOscan+0+1),c
 15408  00378E  1E2B               	infsnz	(??_serialIOscan+0+0),c
 15409  003790  4A2A               	incf	(??_serialIOscan+0+1),c
 15410  003792  2A2B               	movf	((c:serialIOscan@j)),c,w
 15411  003794  502E               	movwf	(??_serialIOscan+2+0)&0ffh,c
 15412  003796  6E2C               	clrf	(??_serialIOscan+2+0+1)&0ffh,c
 15413  003798  6A2D               
 15414                           	movf	(??_serialIOscan+0+0),c,w
 15415  00379A  502A               	addwf	(??_serialIOscan+2+0),c
 15416  00379C  262C               	movf	(??_serialIOscan+0+1),c,w
 15417  00379E  502B               	addwfc	(??_serialIOscan+2+1),c
 15418  0037A0  222D               	movf	(??_serialIOscan+2+0),c,w
 15419  0037A2  502C               	addwf	((c:_ptrSerialOut)),c,w
 15420  0037A4  2409               	movwf	c:fsr1l
 15421  0037A6  6EE1               	movf	(??_serialIOscan+2+1),c,w
 15422  0037A8  502D               	addwfc	((c:_ptrSerialOut+1)),c,w
 15423  0037AA  200A               	movwf	1+c:fsr1l
 15424  0037AC  6EE2               	movf	indf1,w
 15425  0037AE  50E7               	
 15426                           	call	_serialIObyteShift
 15427  0037B0  ECF6  F01C         	movwf	indf2,c
 15428  0037B4  6EDF               
 15429                           	line	84
 15430                           	
 15431                           l6163:
 15432  0037B6                     ;serialIO.c: 84:     }
 15433                           	incf	((c:serialIOscan@i)),c
 15434  0037B6  2A2F               	goto	l6165
 15435  0037B8  EFDE  F01B         	
 15436                           l934:
 15437  0037BC                     	
 15438                           l6165:
 15439  0037BC                     		movf	((c:_lenSerialIO)),c,w
 15440  0037BC  5012               	subwf	((c:serialIOscan@i)),c,w
 15441  0037BE  5C2F               	btfss	status,0
 15442  0037C0  A0D8               	goto	u4571
 15443  0037C2  EFE5  F01B         	goto	u4570
 15444  0037C6  EFE7  F01B         
 15445                           u4571:
 15446  0037CA                     	goto	l6161
 15447  0037CA  EFBB  F01B         u4570:
 15448  0037CE                     	goto	l6167
 15449  0037CE  EFE9  F01B         	
 15450                           l936:
 15451  0037D2                     	line	85
 15452                           	
 15453                           l6167:
 15454  0037D2                     ;serialIO.c: 85:     serialIOload();
 15455                           	call	_serialIOload	;wreg free
 15456  0037D2  EC9E  F021         	line	86
 15457                           	
 15458                           l937:
 15459  0037D6                     	return	;funcret
 15460  0037D6  0012               	opt stack 0
 15461                           GLOBAL	__end_of_serialIOscan
 15462                           	__end_of_serialIOscan:
 15463  0037D8                     	signat	_serialIOscan,89
 15464                           	global	_serialIOload
 15465                           
 15466 ;; *************** function _serialIOload *****************
 15467 ;; Defined at:
 15468 ;;		line 45 in file "serialIO.c"
 15469 ;; Parameters:    Size  Location     Type
 15470 ;;		None
 15471 ;; Auto vars:     Size  Location     Type
 15472 ;;		None
 15473 ;; Return value:  Size  Location     Type
 15474 ;;                  1    wreg      void 
 15475 ;; Registers used:
 15476 ;;		None
 15477 ;; Tracked objects:
 15478 ;;		On entry : 0/0
 15479 ;;		On exit  : 0/0
 15480 ;;		Unchanged: 0/0
 15481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15482 ;;      Params:         0       0       0       0       0       0       0       0       0
 15483 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15484 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15485 ;;      Totals:         0       0       0       0       0       0       0       0       0
 15486 ;;Total ram usage:        0 bytes
 15487 ;; Hardware stack levels used:    1
 15488 ;; Hardware stack levels required when called:    2
 15489 ;; This function calls:
 15490 ;;		Nothing
 15491 ;; This function is called by:
 15492 ;;		_serialIOscan
 15493 ;; This function uses a non-reentrant model
 15494 ;;
 15495                           psect	text9,class=CODE,space=0,reloc=2,group=0
 15496                           	line	45
 15497                           global __ptext9
 15498                           __ptext9:
 15499  00433C                     psect	text9
 15500                           	file	"serialIO.c"
 15501                           	line	45
 15502                           	global	__size_of_serialIOload
 15503                           	__size_of_serialIOload	equ	__end_of_serialIOload-_serialIOload
 15504  0000                     	
 15505                           _serialIOload:
 15506  00433C                     ;incstack = 0
 15507                           	opt	stack 27
 15508                           	line	47
 15509                           	
 15510                           l5453:
 15511  00433C                     ;serialIO.c: 47:     SERIALIO.SHLD = 0;
 15512                           	bcf	((c:3968)),c,3	;volatile
 15513  00433C  9680               	line	48
 15514                           ;serialIO.c: 48:     SERIALIO.SHLD = 1;
 15515                           	bsf	((c:3968)),c,3	;volatile
 15516  00433E  8680               	line	49
 15517                           	
 15518                           l922:
 15519  004340                     	return	;funcret
 15520  004340  0012               	opt stack 0
 15521                           GLOBAL	__end_of_serialIOload
 15522                           	__end_of_serialIOload:
 15523  004342                     	signat	_serialIOload,89
 15524                           	global	_serialIObyteShift
 15525                           
 15526 ;; *************** function _serialIObyteShift *****************
 15527 ;; Defined at:
 15528 ;;		line 50 in file "serialIO.c"
 15529 ;; Parameters:    Size  Location     Type
 15530 ;;  dataIn          1    wreg     unsigned char 
 15531 ;; Auto vars:     Size  Location     Type
 15532 ;;  dataIn          1    0[COMRAM] unsigned char 
 15533 ;;  dataBit         1    2[COMRAM] unsigned char 
 15534 ;;  dataOut         1    1[COMRAM] unsigned char 
 15535 ;; Return value:  Size  Location     Type
 15536 ;;                  1    wreg      unsigned char 
 15537 ;; Registers used:
 15538 ;;		wreg, status,2, status,0
 15539 ;; Tracked objects:
 15540 ;;		On entry : 0/0
 15541 ;;		On exit  : 0/0
 15542 ;;		Unchanged: 0/0
 15543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15544 ;;      Params:         0       0       0       0       0       0       0       0       0
 15545 ;;      Locals:         3       0       0       0       0       0       0       0       0
 15546 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15547 ;;      Totals:         3       0       0       0       0       0       0       0       0
 15548 ;;Total ram usage:        3 bytes
 15549 ;; Hardware stack levels used:    1
 15550 ;; Hardware stack levels required when called:    2
 15551 ;; This function calls:
 15552 ;;		Nothing
 15553 ;; This function is called by:
 15554 ;;		_serialIOscan
 15555 ;; This function uses a non-reentrant model
 15556 ;;
 15557                           psect	text10,class=CODE,space=0,reloc=2,group=0
 15558                           	line	50
 15559                           global __ptext10
 15560                           __ptext10:
 15561  0039EC                     psect	text10
 15562                           	file	"serialIO.c"
 15563                           	line	50
 15564                           	global	__size_of_serialIObyteShift
 15565                           	__size_of_serialIObyteShift	equ	__end_of_serialIObyteShift-_serialIObyteShift
 15566  0000                     	
 15567                           _serialIObyteShift:
 15568  0039EC                     ;incstack = 0
 15569                           	opt	stack 27
 15570                           ;serialIObyteShift@dataIn stored from wreg
 15571                           	movwf	((c:serialIObyteShift@dataIn)),c
 15572  0039EC  6E27               	line	55
 15573                           	
 15574                           l5455:
 15575  0039EE                     ;serialIO.c: 50: unsigned char serialIObyteShift( unsigned char dataIn );serialIO.c: 51:
                                  {;serialIO.c: 52:     unsigned char dataBit;;serialIO.c: 53:     unsigned char dataOut;
                                 ;serialIO.c: 55:     dataBit = 0x80;
 15576                           	movlw	low(080h)
 15577  0039EE  0E80               	movwf	((c:serialIObyteShift@dataBit)),c
 15578  0039F0  6E29               	line	56
 15579                           ;serialIO.c: 56:     dataOut = 0;
 15580                           	movlw	low(0)
 15581  0039F2  0E00               	movwf	((c:serialIObyteShift@dataOut)),c
 15582  0039F4  6E28               	line	58
 15583                           ;serialIO.c: 58:     while( dataBit )
 15584                           	goto	l5465
 15585  0039F6  EF1C  F01D         	
 15586                           l926:
 15587  0039FA                     	line	60
 15588                           ;serialIO.c: 59:     {;serialIO.c: 60:         SERIALIO.CLK = 0;
 15589                           	bcf	((c:3968)),c,2	;volatile
 15590  0039FA  9480               	line	61
 15591                           	
 15592                           l5457:
 15593  0039FC                     ;serialIO.c: 61:         if( dataIn & dataBit )
 15594                           	movf	((c:serialIObyteShift@dataIn)),c,w
 15595  0039FC  5027               	andwf	((c:serialIObyteShift@dataBit)),c,w
 15596  0039FE  1429               	iorlw	0
 15597  003A00  0900               	btfsc	status,2
 15598  003A02  B4D8               	goto	u3831
 15599  003A04  EF06  F01D         	goto	u3830
 15600  003A08  EF08  F01D         u3831:
 15601  003A0C                     	goto	l927
 15602  003A0C  EF0B  F01D         u3830:
 15603  003A10                     	line	62
 15604                           	
 15605                           l5459:
 15606  003A10                     ;serialIO.c: 62:             SERIALIO.OUT = 1;
 15607                           	bsf	((c:3968)),c,0	;volatile
 15608  003A10  8080               	goto	l928
 15609  003A12  EF0C  F01D         	line	63
 15610                           ;serialIO.c: 63:         else
 15611                           	
 15612                           l927:
 15613  003A16                     	line	64
 15614                           ;serialIO.c: 64:             SERIALIO.OUT = 0;
 15615                           	bcf	((c:3968)),c,0	;volatile
 15616  003A16  9080               	
 15617                           l928:
 15618  003A18                     	line	66
 15619                           ;serialIO.c: 66:         if( SERIALIO.IN )
 15620                           	btfss	((c:3968)),c,1	;volatile
 15621  003A18  A280               	goto	u3841
 15622  003A1A  EF11  F01D         	goto	u3840
 15623  003A1E  EF13  F01D         u3841:
 15624  003A22                     	goto	l5463
 15625  003A22  EF17  F01D         u3840:
 15626  003A26                     	line	67
 15627                           	
 15628                           l5461:
 15629  003A26                     ;serialIO.c: 67:             dataOut |= dataBit;
 15630                           	movf	((c:serialIObyteShift@dataBit)),c,w
 15631  003A26  5029               	iorwf	((c:serialIObyteShift@dataOut)),c
 15632  003A28  1228               	goto	l5463
 15633  003A2A  EF17  F01D         	
 15634                           l929:
 15635  003A2E                     	line	68
 15636                           	
 15637                           l5463:
 15638  003A2E                     ;serialIO.c: 68:         SERIALIO.CLK = 1;
 15639                           	bsf	((c:3968)),c,2	;volatile
 15640  003A2E  8480               	line	69
 15641                           ;serialIO.c: 69:         dataBit >>= 1;
 15642                           	bcf status,0
 15643  003A30  90D8               	rrcf	((c:serialIObyteShift@dataBit)),c
 15644  003A32  3229               
 15645                           	goto	l5465
 15646  003A34  EF1C  F01D         	line	70
 15647                           ;serialIO.c: 70:     }
 15648                           	
 15649                           l925:
 15650  003A38                     	line	58
 15651                           	
 15652                           l5465:
 15653  003A38                     ;serialIO.c: 58:     while( dataBit )
 15654                           	movf	((c:serialIObyteShift@dataBit)),c,w
 15655  003A38  5029               	btfss	status,2
 15656  003A3A  A4D8               	goto	u3851
 15657  003A3C  EF22  F01D         	goto	u3850
 15658  003A40  EF24  F01D         u3851:
 15659  003A44                     	goto	l926
 15660  003A44  EFFD  F01C         u3850:
 15661  003A48                     	
 15662                           l930:
 15663  003A48                     	line	71
 15664                           ;serialIO.c: 71:     SERIALIO.CLK = 0;
 15665                           	bcf	((c:3968)),c,2	;volatile
 15666  003A48  9480               	line	72
 15667                           	
 15668                           l5467:
 15669  003A4A                     ;serialIO.c: 72:     return( dataOut );
 15670                           	movf	((c:serialIObyteShift@dataOut)),c,w
 15671  003A4A  5028               	goto	l931
 15672  003A4C  EF28  F01D         	
 15673                           l5469:
 15674  003A50                     	line	73
 15675                           	
 15676                           l931:
 15677  003A50                     	return	;funcret
 15678  003A50  0012               	opt stack 0
 15679                           GLOBAL	__end_of_serialIObyteShift
 15680                           	__end_of_serialIObyteShift:
 15681  003A52                     	signat	_serialIObyteShift,4217
 15682                           	global	_salvar_receita
 15683                           
 15684 ;; *************** function _salvar_receita *****************
 15685 ;; Defined at:
 15686 ;;		line 47 in file "eeprom.c"
 15687 ;; Parameters:    Size  Location     Type
 15688 ;;  adrs            1    wreg     unsigned char 
 15689 ;;  data            2    6[COMRAM] PTR unsigned char 
 15690 ;;		 -> fila(18), 
 15691 ;; Auto vars:     Size  Location     Type
 15692 ;;  adrs            1   10[COMRAM] unsigned char 
 15693 ;;  i               1   11[COMRAM] unsigned char 
 15694 ;;  aux             2    8[COMRAM] int 
 15695 ;; Return value:  Size  Location     Type
 15696 ;;                  1    wreg      void 
 15697 ;; Registers used:
 15698 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15699 ;; Tracked objects:
 15700 ;;		On entry : 0/0
 15701 ;;		On exit  : 0/0
 15702 ;;		Unchanged: 0/0
 15703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15704 ;;      Params:         2       0       0       0       0       0       0       0       0
 15705 ;;      Locals:         4       0       0       0       0       0       0       0       0
 15706 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15707 ;;      Totals:         6       0       0       0       0       0       0       0       0
 15708 ;;Total ram usage:        6 bytes
 15709 ;; Hardware stack levels used:    1
 15710 ;; Hardware stack levels required when called:    3
 15711 ;; This function calls:
 15712 ;;		_EEPROM_write
 15713 ;;		_end_receita
 15714 ;; This function is called by:
 15715 ;;		_main
 15716 ;; This function uses a non-reentrant model
 15717 ;;
 15718                           psect	text11,class=CODE,space=0,reloc=2,group=0
 15719                           	file	"eeprom.c"
 15720                           	line	47
 15721                           global __ptext11
 15722                           __ptext11:
 15723  003B1E                     psect	text11
 15724                           	file	"eeprom.c"
 15725                           	line	47
 15726                           	global	__size_of_salvar_receita
 15727                           	__size_of_salvar_receita	equ	__end_of_salvar_receita-_salvar_receita
 15728  0000                     	
 15729                           _salvar_receita:
 15730  003B1E                     ;incstack = 0
 15731                           	opt	stack 27
 15732                           ;salvar_receita@adrs stored from wreg
 15733                           	movwf	((c:salvar_receita@adrs)),c
 15734  003B1E  6E31               	line	50
 15735                           	
 15736                           l5685:
 15737  003B20                     ;eeprom.c: 47: void salvar_receita (char adrs, unsigned char *data );eeprom.c: 48: {;eep
                                 rom.c: 49:     int aux;;eeprom.c: 50:     aux = end_receita(adrs);
 15738                           	movff	(c:salvar_receita@adrs),(c:end_receita@x)
 15739  003B20  C031  F027         	clrf	((c:end_receita@x+1)),c
 15740  003B24  6A28               	call	_end_receita	;wreg free
 15741  003B26  EC5F  F020         	movff	0+?_end_receita,(c:salvar_receita@aux)
 15742  003B2A  C027  F02F         	movff	1+?_end_receita,(c:salvar_receita@aux+1)
 15743  003B2E  C028  F030         	line	51
 15744                           	
 15745                           l5687:
 15746  003B32                     ;eeprom.c: 51:     for( char i=0 ; i<16; i++)
 15747                           	movlw	low(0)
 15748  003B32  0E00               	movwf	((c:salvar_receita@i)),c
 15749  003B34  6E32               	
 15750                           l5689:
 15751  003B36                     		movlw	010h-1
 15752  003B36  0E0F               	cpfsgt	((c:salvar_receita@i)),c
 15753  003B38  6432               	goto	u4041
 15754  003B3A  EFA1  F01D         	goto	u4040
 15755  003B3E  EFA3  F01D         
 15756                           u4041:
 15757  003B42                     	goto	l5693
 15758  003B42  EFA7  F01D         u4040:
 15759  003B46                     	goto	l166
 15760  003B46  EFBE  F01D         	
 15761                           l5691:
 15762  003B4A                     	goto	l166
 15763  003B4A  EFBE  F01D         	
 15764                           l164:
 15765  003B4E                     	line	52
 15766                           	
 15767                           l5693:
 15768  003B4E                     ;eeprom.c: 52:          EEPROM_write( (aux+i), *(data+i) );
 15769                           	movf	((c:salvar_receita@i)),c,w
 15770  003B4E  5032               	addwf	((c:salvar_receita@data)),c,w
 15771  003B50  242D               	movwf	c:fsr2l
 15772  003B52  6ED9               	movlw	0
 15773  003B54  0E00               	addwfc	((c:salvar_receita@data+1)),c,w
 15774  003B56  202E               	movwf	1+c:fsr2l
 15775  003B58  6EDA               	movf	indf2,w
 15776  003B5A  50DF               	movwf	((c:EEPROM_write@data)),c
 15777  003B5C  6E27               	movf	((c:salvar_receita@i)),c,w
 15778  003B5E  5032               	addwf	((c:salvar_receita@aux)),c,w
 15779  003B60  242F               	
 15780                           	call	_EEPROM_write
 15781  003B62  ECA3  F01F         	
 15782                           l5695:
 15783  003B66                     	incf	((c:salvar_receita@i)),c
 15784  003B66  2A32               	
 15785                           l5697:
 15786  003B68                     		movlw	010h-1
 15787  003B68  0E0F               	cpfsgt	((c:salvar_receita@i)),c
 15788  003B6A  6432               	goto	u4051
 15789  003B6C  EFBA  F01D         	goto	u4050
 15790  003B70  EFBC  F01D         
 15791                           u4051:
 15792  003B74                     	goto	l5693
 15793  003B74  EFA7  F01D         u4050:
 15794  003B78                     	goto	l166
 15795  003B78  EFBE  F01D         	
 15796                           l165:
 15797  003B7C                     	line	54
 15798                           	
 15799                           l166:
 15800  003B7C                     	return	;funcret
 15801  003B7C  0012               	opt stack 0
 15802                           GLOBAL	__end_of_salvar_receita
 15803                           	__end_of_salvar_receita:
 15804  003B7E                     	signat	_salvar_receita,8313
 15805                           	global	_salvar_dado
 15806                           
 15807 ;; *************** function _salvar_dado *****************
 15808 ;; Defined at:
 15809 ;;		line 64 in file "eeprom.c"
 15810 ;; Parameters:    Size  Location     Type
 15811 ;;  adrs            1    wreg     unsigned char 
 15812 ;;  col             1    6[COMRAM] unsigned char 
 15813 ;;  data            1    7[COMRAM] unsigned char 
 15814 ;; Auto vars:     Size  Location     Type
 15815 ;;  adrs            1   10[COMRAM] unsigned char 
 15816 ;;  aux             2    8[COMRAM] int 
 15817 ;; Return value:  Size  Location     Type
 15818 ;;                  1    wreg      void 
 15819 ;; Registers used:
 15820 ;;		wreg, status,2, status,0, cstack
 15821 ;; Tracked objects:
 15822 ;;		On entry : 0/0
 15823 ;;		On exit  : 0/0
 15824 ;;		Unchanged: 0/0
 15825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15826 ;;      Params:         2       0       0       0       0       0       0       0       0
 15827 ;;      Locals:         3       0       0       0       0       0       0       0       0
 15828 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15829 ;;      Totals:         5       0       0       0       0       0       0       0       0
 15830 ;;Total ram usage:        5 bytes
 15831 ;; Hardware stack levels used:    1
 15832 ;; Hardware stack levels required when called:    3
 15833 ;; This function calls:
 15834 ;;		_EEPROM_write
 15835 ;;		_end_receita
 15836 ;; This function is called by:
 15837 ;;		_main
 15838 ;; This function uses a non-reentrant model
 15839 ;;
 15840                           psect	text12,class=CODE,space=0,reloc=2,group=0
 15841                           	line	64
 15842                           global __ptext12
 15843                           __ptext12:
 15844  00410A                     psect	text12
 15845                           	file	"eeprom.c"
 15846                           	line	64
 15847                           	global	__size_of_salvar_dado
 15848                           	__size_of_salvar_dado	equ	__end_of_salvar_dado-_salvar_dado
 15849  0000                     	
 15850                           _salvar_dado:
 15851  00410A                     ;incstack = 0
 15852                           	opt	stack 27
 15853                           ;salvar_dado@adrs stored from wreg
 15854                           	movwf	((c:salvar_dado@adrs)),c
 15855  00410A  6E31               	line	67
 15856                           	
 15857                           l5713:
 15858  00410C                     ;eeprom.c: 64: void salvar_dado (char adrs, char col, unsigned char data);eeprom.c: 65: 
                                 {;eeprom.c: 66:     int aux;;eeprom.c: 67:     aux = end_receita(adrs);
 15859                           	movff	(c:salvar_dado@adrs),(c:end_receita@x)
 15860  00410C  C031  F027         	clrf	((c:end_receita@x+1)),c
 15861  004110  6A28               	call	_end_receita	;wreg free
 15862  004112  EC5F  F020         	movff	0+?_end_receita,(c:salvar_dado@aux)
 15863  004116  C027  F02F         	movff	1+?_end_receita,(c:salvar_dado@aux+1)
 15864  00411A  C028  F030         	line	68
 15865                           ;eeprom.c: 68:     EEPROM_write((aux+col), data);
 15866                           	movff	(c:salvar_dado@data),(c:EEPROM_write@data)
 15867  00411E  C02E  F027         	movf	((c:salvar_dado@col)),c,w
 15868  004122  502D               	addwf	((c:salvar_dado@aux)),c,w
 15869  004124  242F               	
 15870                           	call	_EEPROM_write
 15871  004126  ECA3  F01F         	line	69
 15872                           	
 15873                           l174:
 15874  00412A                     	return	;funcret
 15875  00412A  0012               	opt stack 0
 15876                           GLOBAL	__end_of_salvar_dado
 15877                           	__end_of_salvar_dado:
 15878  00412C                     	signat	_salvar_dado,12409
 15879                           	global	_salva_atuadores_init
 15880                           
 15881 ;; *************** function _salva_atuadores_init *****************
 15882 ;; Defined at:
 15883 ;;		line 117 in file "fifo.c"
 15884 ;; Parameters:    Size  Location     Type
 15885 ;;		None
 15886 ;; Auto vars:     Size  Location     Type
 15887 ;;  condi_init      4    3[COMRAM] unsigned char [4]
 15888 ;;  pt              2    7[COMRAM] PTR unsigned char 
 15889 ;;		 -> salva_atuadores_init@condi_init(4), 
 15890 ;;  mask            1   10[COMRAM] unsigned char 
 15891 ;;  dado            1    9[COMRAM] unsigned char 
 15892 ;; Return value:  Size  Location     Type
 15893 ;;                  1    wreg      unsigned char 
 15894 ;; Registers used:
 15895 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15896 ;; Tracked objects:
 15897 ;;		On entry : 0/0
 15898 ;;		On exit  : 0/0
 15899 ;;		Unchanged: 0/0
 15900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15901 ;;      Params:         0       0       0       0       0       0       0       0       0
 15902 ;;      Locals:         8       0       0       0       0       0       0       0       0
 15903 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15904 ;;      Totals:         8       0       0       0       0       0       0       0       0
 15905 ;;Total ram usage:        8 bytes
 15906 ;; Hardware stack levels used:    1
 15907 ;; Hardware stack levels required when called:    3
 15908 ;; This function calls:
 15909 ;;		_ler_atuador
 15910 ;; This function is called by:
 15911 ;;		_main
 15912 ;; This function uses a non-reentrant model
 15913 ;;
 15914                           psect	text13,class=CODE,space=0,reloc=2,group=0
 15915                           	file	"fifo.c"
 15916                           	line	117
 15917                           global __ptext13
 15918                           __ptext13:
 15919  003650                     psect	text13
 15920                           	file	"fifo.c"
 15921                           	line	117
 15922                           	global	__size_of_salva_atuadores_init
 15923                           	__size_of_salva_atuadores_init	equ	__end_of_salva_atuadores_init-_salva_atuadores_init

 15924  0000                     	
 15925                           _salva_atuadores_init:
 15926  003650                     ;incstack = 0
 15927                           	opt	stack 27
 15928                           	line	119
 15929                           	
 15930                           l5765:
 15931  003650                     ;fifo.c: 119:     char condi_init[4] = {ler_atuador('A'), ler_atuador('B'), ler_atuador(
                                 'C'), ler_atuador('D')};
 15932                           	movff	(c:salva_atuadores_init@F108),(c:salva_atuadores_init@condi_init)
 15933  003650  C005  F02A         	movff	(c:salva_atuadores_init@F108+1),(c:salva_atuadores_init@condi_init+1)
 15934  003654  C006  F02B         	movff	(c:salva_atuadores_init@F108+2),(c:salva_atuadores_init@condi_init+2)
 15935  003658  C007  F02C         	movff	(c:salva_atuadores_init@F108+3),(c:salva_atuadores_init@condi_init+3)
 15936  00365C  C008  F02D         	
 15937                           l5767:
 15938  003660                     	movlw	(041h)&0ffh
 15939  003660  0E41               	
 15940                           	call	_ler_atuador
 15941  003662  EC7A  F019         	movwf	((c:salva_atuadores_init@condi_init)),c
 15942  003666  6E2A               	movlw	(042h)&0ffh
 15943  003668  0E42               	
 15944                           	call	_ler_atuador
 15945  00366A  EC7A  F019         	movwf	(0+((c:salva_atuadores_init@condi_init)+01h)),c
 15946  00366E  6E2B               	movlw	(043h)&0ffh
 15947  003670  0E43               	
 15948                           	call	_ler_atuador
 15949  003672  EC7A  F019         	movwf	(0+((c:salva_atuadores_init@condi_init)+02h)),c
 15950  003676  6E2C               	movlw	(044h)&0ffh
 15951  003678  0E44               	
 15952                           	call	_ler_atuador
 15953  00367A  EC7A  F019         	movwf	(0+((c:salva_atuadores_init@condi_init)+03h)),c
 15954  00367E  6E2D               	line	121
 15955                           	
 15956                           l5769:
 15957  003680                     ;fifo.c: 121:     char *pt = condi_init;
 15958                           		movlw	low(salva_atuadores_init@condi_init)
 15959  003680  0E2A               	movwf	((c:salva_atuadores_init@pt)),c
 15960  003682  6E2E               	movlw	high(salva_atuadores_init@condi_init)
 15961  003684  0E00               	movwf	((c:salva_atuadores_init@pt+1)),c
 15962  003686  6E2F               
 15963                           	line	122
 15964                           	
 15965                           l5771:
 15966  003688                     ;fifo.c: 122:     char dado = 0;
 15967                           	movlw	low(0)
 15968  003688  0E00               	movwf	((c:salva_atuadores_init@dado)),c
 15969  00368A  6E30               	line	123
 15970                           	
 15971                           l5773:
 15972  00368C                     ;fifo.c: 123:     char mask = 0x08;
 15973                           	movlw	low(08h)
 15974  00368C  0E08               	movwf	((c:salva_atuadores_init@mask)),c
 15975  00368E  6E31               	line	125
 15976                           ;fifo.c: 125:     while( mask )
 15977                           	goto	l5783
 15978  003690  EF61  F01B         	
 15979                           l275:
 15980  003694                     	line	127
 15981                           	
 15982                           l5775:
 15983  003694                     ;fifo.c: 126:     {;fifo.c: 127:         if( *pt )
 15984                           	movff	(c:salva_atuadores_init@pt),fsr2l
 15985  003694  C02E  FFD9         	movff	(c:salva_atuadores_init@pt+1),fsr2h
 15986  003698  C02F  FFDA         	movf	indf2,w
 15987  00369C  50DF               	btfsc	status,2
 15988  00369E  B4D8               	goto	u4111
 15989  0036A0  EF54  F01B         	goto	u4110
 15990  0036A4  EF56  F01B         u4111:
 15991  0036A8                     	goto	l5779
 15992  0036A8  EF5B  F01B         u4110:
 15993  0036AC                     	line	129
 15994                           	
 15995                           l5777:
 15996  0036AC                     ;fifo.c: 128:         {;fifo.c: 129:             dado = dado | mask;
 15997                           	movf	((c:salva_atuadores_init@dado)),c,w
 15998  0036AC  5030               	iorwf	((c:salva_atuadores_init@mask)),c,w
 15999  0036AE  1031               	movwf	((c:salva_atuadores_init@dado)),c
 16000  0036B0  6E30               	goto	l5779
 16001  0036B2  EF5B  F01B         	line	130
 16002                           ;fifo.c: 130:         }
 16003                           	
 16004                           l276:
 16005  0036B6                     	line	131
 16006                           	
 16007                           l5779:
 16008  0036B6                     ;fifo.c: 131:         pt++;
 16009                           	infsnz	((c:salva_atuadores_init@pt)),c
 16010  0036B6  4A2E               	incf	((c:salva_atuadores_init@pt+1)),c
 16011  0036B8  2A2F               	line	132
 16012                           	
 16013                           l5781:
 16014  0036BA                     ;fifo.c: 132:         mask >>= 1;
 16015                           	bcf status,0
 16016  0036BA  90D8               	rrcf	((c:salva_atuadores_init@mask)),c
 16017  0036BC  3231               
 16018                           	goto	l5783
 16019  0036BE  EF61  F01B         	line	133
 16020                           ;fifo.c: 133:     }
 16021                           	
 16022                           l274:
 16023  0036C2                     	line	125
 16024                           	
 16025                           l5783:
 16026  0036C2                     ;fifo.c: 125:     while( mask )
 16027                           	movf	((c:salva_atuadores_init@mask)),c,w
 16028  0036C2  5031               	btfss	status,2
 16029  0036C4  A4D8               	goto	u4121
 16030  0036C6  EF67  F01B         	goto	u4120
 16031  0036CA  EF69  F01B         u4121:
 16032  0036CE                     	goto	l5775
 16033  0036CE  EF4A  F01B         u4120:
 16034  0036D2                     	goto	l5785
 16035  0036D2  EF6B  F01B         	
 16036                           l277:
 16037  0036D6                     	line	134
 16038                           	
 16039                           l5785:
 16040  0036D6                     ;fifo.c: 134:     return(dado);
 16041                           	movf	((c:salva_atuadores_init@dado)),c,w
 16042  0036D6  5030               	goto	l278
 16043  0036D8  EF6E  F01B         	
 16044                           l5787:
 16045  0036DC                     	line	135
 16046                           	
 16047                           l278:
 16048  0036DC                     	return	;funcret
 16049  0036DC  0012               	opt stack 0
 16050                           GLOBAL	__end_of_salva_atuadores_init
 16051                           	__end_of_salva_atuadores_init:
 16052  0036DE                     	signat	_salva_atuadores_init,89
 16053                           	global	_ler_atuador
 16054                           
 16055 ;; *************** function _ler_atuador *****************
 16056 ;; Defined at:
 16057 ;;		line 80 in file "fifo.c"
 16058 ;; Parameters:    Size  Location     Type
 16059 ;;  tecla           1    wreg     unsigned char 
 16060 ;; Auto vars:     Size  Location     Type
 16061 ;;  tecla           1    2[COMRAM] unsigned char 
 16062 ;; Return value:  Size  Location     Type
 16063 ;;                  1    wreg      unsigned char 
 16064 ;; Registers used:
 16065 ;;		wreg, status,2, status,0
 16066 ;; Tracked objects:
 16067 ;;		On entry : 0/0
 16068 ;;		On exit  : 0/0
 16069 ;;		Unchanged: 0/0
 16070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16071 ;;      Params:         0       0       0       0       0       0       0       0       0
 16072 ;;      Locals:         1       0       0       0       0       0       0       0       0
 16073 ;;      Temps:          2       0       0       0       0       0       0       0       0
 16074 ;;      Totals:         3       0       0       0       0       0       0       0       0
 16075 ;;Total ram usage:        3 bytes
 16076 ;; Hardware stack levels used:    1
 16077 ;; Hardware stack levels required when called:    2
 16078 ;; This function calls:
 16079 ;;		Nothing
 16080 ;; This function is called by:
 16081 ;;		_salva_atuadores_init
 16082 ;;		_main
 16083 ;; This function uses a non-reentrant model
 16084 ;;
 16085                           psect	text14,class=CODE,space=0,reloc=2,group=0
 16086                           	line	80
 16087                           global __ptext14
 16088                           __ptext14:
 16089  0032F4                     psect	text14
 16090                           	file	"fifo.c"
 16091                           	line	80
 16092                           	global	__size_of_ler_atuador
 16093                           	__size_of_ler_atuador	equ	__end_of_ler_atuador-_ler_atuador
 16094  0000                     	
 16095                           _ler_atuador:
 16096  0032F4                     ;incstack = 0
 16097                           	opt	stack 27
 16098                           ;ler_atuador@tecla stored from wreg
 16099                           	movwf	((c:ler_atuador@tecla)),c
 16100  0032F4  6E29               	line	82
 16101                           	
 16102                           l5299:
 16103  0032F6                     ;fifo.c: 80: char ler_atuador(char tecla);fifo.c: 81: {;fifo.c: 82:     switch(tecla)
 16104                           	goto	l5317
 16105  0032F6  EFBA  F019         	line	84
 16106                           ;fifo.c: 83:     {;fifo.c: 84:         case 'A': return(atuador.A); break;
 16107                           	
 16108                           l251:
 16109  0032FA                     	btfsc	((c:_atuador)),c,0
 16110  0032FA  B014               	goto	u3591
 16111  0032FC  EF82  F019         	goto	u3590
 16112  003300  EF85  F019         u3591:
 16113  003304                     	movlw	1
 16114  003304  0E01               	goto	u3596
 16115  003306  EF86  F019         u3590:
 16116  00330A                     	movlw	0
 16117  00330A  0E00               u3596:
 16118  00330C                     	goto	l252
 16119  00330C  EFD7  F019         	
 16120                           l5301:
 16121  003310                     	goto	l252
 16122  003310  EFD7  F019         	line	85
 16123                           ;fifo.c: 85:         case 'B': return(atuador.B); break;
 16124                           	
 16125                           l254:
 16126  003314                     	btfsc	((c:_atuador)),c,1
 16127  003314  B214               	goto	u3601
 16128  003316  EF8F  F019         	goto	u3600
 16129  00331A  EF92  F019         u3601:
 16130  00331E                     	movlw	1
 16131  00331E  0E01               	goto	u3606
 16132  003320  EF93  F019         u3600:
 16133  003324                     	movlw	0
 16134  003324  0E00               u3606:
 16135  003326                     	goto	l252
 16136  003326  EFD7  F019         	
 16137                           l5303:
 16138  00332A                     	goto	l252
 16139  00332A  EFD7  F019         	line	86
 16140                           ;fifo.c: 86:         case 'C': return(atuador.C); break;
 16141                           	
 16142                           l255:
 16143  00332E                     	btfsc	((c:_atuador)),c,2
 16144  00332E  B414               	goto	u3611
 16145  003330  EF9C  F019         	goto	u3610
 16146  003334  EF9F  F019         u3611:
 16147  003338                     	movlw	1
 16148  003338  0E01               	goto	u3616
 16149  00333A  EFA0  F019         u3610:
 16150  00333E                     	movlw	0
 16151  00333E  0E00               u3616:
 16152  003340                     	goto	l252
 16153  003340  EFD7  F019         	
 16154                           l5305:
 16155  003344                     	goto	l252
 16156  003344  EFD7  F019         	line	87
 16157                           ;fifo.c: 87:         case 'D': return(atuador.D); break;
 16158                           	
 16159                           l256:
 16160  003348                     	btfsc	((c:_atuador)),c,3
 16161  003348  B614               	goto	u3621
 16162  00334A  EFA9  F019         	goto	u3620
 16163  00334E  EFAC  F019         u3621:
 16164  003352                     	movlw	1
 16165  003352  0E01               	goto	u3626
 16166  003354  EFAD  F019         u3620:
 16167  003358                     	movlw	0
 16168  003358  0E00               u3626:
 16169  00335A                     	goto	l252
 16170  00335A  EFD7  F019         	
 16171                           l5307:
 16172  00335E                     	goto	l252
 16173  00335E  EFD7  F019         	line	88
 16174                           ;fifo.c: 88:         default: return 0; break;
 16175                           	
 16176                           l257:
 16177  003362                     	
 16178                           l5309:
 16179  003362                     	movlw	(0)&0ffh
 16180  003362  0E00               	goto	l252
 16181  003364  EFD7  F019         	
 16182                           l5311:
 16183  003368                     	goto	l252
 16184  003368  EFD7  F019         	
 16185                           l5313:
 16186  00336C                     	goto	l252
 16187  00336C  EFD7  F019         	line	89
 16188                           	
 16189                           l5315:
 16190  003370                     ;fifo.c: 89:     }
 16191                           	goto	l252
 16192  003370  EFD7  F019         	
 16193                           l250:
 16194  003374                     	
 16195                           l5317:
 16196  003374                     	movf	((c:ler_atuador@tecla)),c,w
 16197  003374  5029               	movwf	(??_ler_atuador+0+0)&0ffh,c
 16198  003376  6E27               	clrf	(??_ler_atuador+0+0+1)&0ffh,c
 16199  003378  6A28               
 16200                           	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
 16201                           ; Switch size 1, requested type "space"
 16202                           ; Number of cases is 1, Range of values is 0 to 0
 16203                           ; switch strategies available:
 16204                           ; Name         Instructions Cycles
 16205                           ; simple_byte            4     3 (average)
 16206                           ;	Chosen strategy is simple_byte
 16207                           
 16208                           	movf ??_ler_atuador+0+1,c,w
 16209  00337A  5028               	xorlw	0^0	; case 0
 16210  00337C  0A00               	skipnz
 16211  00337E  B4D8               	goto	l7979
 16212  003380  EFC4  F019         	goto	l5309
 16213  003384  EFB1  F019         	
 16214                           l7979:
 16215  003388                     ; Switch size 1, requested type "space"
 16216                           ; Number of cases is 4, Range of values is 65 to 68
 16217                           ; switch strategies available:
 16218                           ; Name         Instructions Cycles
 16219                           ; simple_byte           13     7 (average)
 16220                           ;	Chosen strategy is simple_byte
 16221                           
 16222                           	movf ??_ler_atuador+0+0,c,w
 16223  003388  5027               	xorlw	65^0	; case 65
 16224  00338A  0A41               	skipnz
 16225  00338C  B4D8               	goto	l251
 16226  00338E  EF7D  F019         	xorlw	66^65	; case 66
 16227  003392  0A03               	skipnz
 16228  003394  B4D8               	goto	l254
 16229  003396  EF8A  F019         	xorlw	67^66	; case 67
 16230  00339A  0A01               	skipnz
 16231  00339C  B4D8               	goto	l255
 16232  00339E  EF97  F019         	xorlw	68^67	; case 68
 16233  0033A2  0A07               	skipnz
 16234  0033A4  B4D8               	goto	l256
 16235  0033A6  EFA4  F019         	goto	l5309
 16236  0033AA  EFB1  F019         
 16237                           	
 16238                           l253:
 16239  0033AE                     	line	90
 16240                           	
 16241                           l252:
 16242  0033AE                     	return	;funcret
 16243  0033AE  0012               	opt stack 0
 16244                           GLOBAL	__end_of_ler_atuador
 16245                           	__end_of_ler_atuador:
 16246  0033B0                     	signat	_ler_atuador,4217
 16247                           	global	_resetIndicePassos
 16248                           
 16249 ;; *************** function _resetIndicePassos *****************
 16250 ;; Defined at:
 16251 ;;		line 36 in file "fifo.c"
 16252 ;; Parameters:    Size  Location     Type
 16253 ;;		None
 16254 ;; Auto vars:     Size  Location     Type
 16255 ;;		None
 16256 ;; Return value:  Size  Location     Type
 16257 ;;                  1    wreg      void 
 16258 ;; Registers used:
 16259 ;;		wreg, status,2
 16260 ;; Tracked objects:
 16261 ;;		On entry : 0/0
 16262 ;;		On exit  : 0/0
 16263 ;;		Unchanged: 0/0
 16264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16265 ;;      Params:         0       0       0       0       0       0       0       0       0
 16266 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16267 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16268 ;;      Totals:         0       0       0       0       0       0       0       0       0
 16269 ;;Total ram usage:        0 bytes
 16270 ;; Hardware stack levels used:    1
 16271 ;; Hardware stack levels required when called:    2
 16272 ;; This function calls:
 16273 ;;		Nothing
 16274 ;; This function is called by:
 16275 ;;		_main
 16276 ;; This function uses a non-reentrant model
 16277 ;;
 16278                           psect	text15,class=CODE,space=0,reloc=2,group=0
 16279                           	line	36
 16280                           global __ptext15
 16281                           __ptext15:
 16282  004342                     psect	text15
 16283                           	file	"fifo.c"
 16284                           	line	36
 16285                           	global	__size_of_resetIndicePassos
 16286                           	__size_of_resetIndicePassos	equ	__end_of_resetIndicePassos-_resetIndicePassos
 16287  0000                     	
 16288                           _resetIndicePassos:
 16289  004342                     ;incstack = 0
 16290                           	opt	stack 28
 16291                           	line	38
 16292                           	
 16293                           l5745:
 16294  004342                     ;fifo.c: 38:     indice_passos = 2;
 16295                           	movlw	low(02h)
 16296  004342  0E02               	movwf	((c:_indice_passos)),c
 16297  004344  6E57               	line	39
 16298                           	
 16299                           l233:
 16300  004346                     	return	;funcret
 16301  004346  0012               	opt stack 0
 16302                           GLOBAL	__end_of_resetIndicePassos
 16303                           	__end_of_resetIndicePassos:
 16304  004348                     	signat	_resetIndicePassos,89
 16305                           	global	_resetContCiclos
 16306                           
 16307 ;; *************** function _resetContCiclos *****************
 16308 ;; Defined at:
 16309 ;;		line 54 in file "fifo.c"
 16310 ;; Parameters:    Size  Location     Type
 16311 ;;		None
 16312 ;; Auto vars:     Size  Location     Type
 16313 ;;		None
 16314 ;; Return value:  Size  Location     Type
 16315 ;;                  1    wreg      void 
 16316 ;; Registers used:
 16317 ;;		wreg, status,2
 16318 ;; Tracked objects:
 16319 ;;		On entry : 0/0
 16320 ;;		On exit  : 0/0
 16321 ;;		Unchanged: 0/0
 16322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16323 ;;      Params:         0       0       0       0       0       0       0       0       0
 16324 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16325 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16326 ;;      Totals:         0       0       0       0       0       0       0       0       0
 16327 ;;Total ram usage:        0 bytes
 16328 ;; Hardware stack levels used:    1
 16329 ;; Hardware stack levels required when called:    2
 16330 ;; This function calls:
 16331 ;;		Nothing
 16332 ;; This function is called by:
 16333 ;;		_main
 16334 ;; This function uses a non-reentrant model
 16335 ;;
 16336                           psect	text16,class=CODE,space=0,reloc=2,group=0
 16337                           	line	54
 16338                           global __ptext16
 16339                           __ptext16:
 16340  0042F4                     psect	text16
 16341                           	file	"fifo.c"
 16342                           	line	54
 16343                           	global	__size_of_resetContCiclos
 16344                           	__size_of_resetContCiclos	equ	__end_of_resetContCiclos-_resetContCiclos
 16345  0000                     	
 16346                           _resetContCiclos:
 16347  0042F4                     ;incstack = 0
 16348                           	opt	stack 28
 16349                           	line	56
 16350                           	
 16351                           l5759:
 16352  0042F4                     ;fifo.c: 56:     cont_ciclos = 0;
 16353                           	movlw	high(0)
 16354  0042F4  0E00               	movwf	((c:_cont_ciclos+1)),c
 16355  0042F6  6E0E               	movlw	low(0)
 16356  0042F8  0E00               	movwf	((c:_cont_ciclos)),c
 16357  0042FA  6E0D               	line	57
 16358                           	
 16359                           l242:
 16360  0042FC                     	return	;funcret
 16361  0042FC  0012               	opt stack 0
 16362                           GLOBAL	__end_of_resetContCiclos
 16363                           	__end_of_resetContCiclos:
 16364  0042FE                     	signat	_resetContCiclos,89
 16365                           	global	_printExec
 16366                           
 16367 ;; *************** function _printExec *****************
 16368 ;; Defined at:
 16369 ;;		line 520 in file "fifo.c"
 16370 ;; Parameters:    Size  Location     Type
 16371 ;;  col             1    wreg     unsigned char 
 16372 ;;  ind             1   25[COMRAM] unsigned char 
 16373 ;; Auto vars:     Size  Location     Type
 16374 ;;  col             1   28[COMRAM] unsigned char 
 16375 ;;  passo           1   29[COMRAM] unsigned char 
 16376 ;; Return value:  Size  Location     Type
 16377 ;;                  1    wreg      void 
 16378 ;; Registers used:
 16379 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16380 ;; Tracked objects:
 16381 ;;		On entry : 0/0
 16382 ;;		On exit  : 0/0
 16383 ;;		Unchanged: 0/0
 16384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16385 ;;      Params:         1       0       0       0       0       0       0       0       0
 16386 ;;      Locals:         4       0       0       0       0       0       0       0       0
 16387 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16388 ;;      Totals:         5       0       0       0       0       0       0       0       0
 16389 ;;Total ram usage:        5 bytes
 16390 ;; Hardware stack levels used:    1
 16391 ;; Hardware stack levels required when called:    5
 16392 ;; This function calls:
 16393 ;;		_decodifica
 16394 ;;		_dignum_tam
 16395 ;;		_dispLCD_dataReg
 16396 ;;		_dispLCD_lincol
 16397 ;;		_dispLCD_num
 16398 ;;		_posAtual
 16399 ;; This function is called by:
 16400 ;;		_main
 16401 ;; This function uses a non-reentrant model
 16402 ;;
 16403                           psect	text17,class=CODE,space=0,reloc=2,group=0
 16404                           	line	520
 16405                           global __ptext17
 16406                           __ptext17:
 16407  0024E2                     psect	text17
 16408                           	file	"fifo.c"
 16409                           	line	520
 16410                           	global	__size_of_printExec
 16411                           	__size_of_printExec	equ	__end_of_printExec-_printExec
 16412  0000                     	
 16413                           _printExec:
 16414  0024E2                     ;incstack = 0
 16415                           	opt	stack 25
 16416                           ;printExec@col stored from wreg
 16417                           	movwf	((c:printExec@col)),c
 16418  0024E2  6E43               	line	522
 16419                           	
 16420                           l6029:
 16421  0024E4                     ;fifo.c: 520: void printExec (char col, char ind);fifo.c: 521: {;fifo.c: 522:     char p
                                 asso = posAtual( ind );
 16422                           	movf	((c:printExec@ind)),c,w
 16423  0024E4  5040               	
 16424                           	call	_posAtual
 16425  0024E6  ECE3  F020         	movwf	((c:printExec@passo)),c
 16426  0024EA  6E44               	line	524
 16427                           	
 16428                           l6031:
 16429  0024EC                     ;fifo.c: 524:     if(passo > 0 && passo <= 0x64)
 16430                           	movf	((c:printExec@passo)),c,w
 16431  0024EC  5044               	btfsc	status,2
 16432  0024EE  B4D8               	goto	u4451
 16433  0024F0  EF7C  F012         	goto	u4450
 16434  0024F4  EF7E  F012         u4451:
 16435  0024F8                     	goto	l6043
 16436  0024F8  EFA9  F012         u4450:
 16437  0024FC                     	
 16438                           l6033:
 16439  0024FC                     		movlw	065h-0
 16440  0024FC  0E65               	cpfslt	((c:printExec@passo)),c
 16441  0024FE  6044               	goto	u4461
 16442  002500  EF84  F012         	goto	u4460
 16443  002504  EF86  F012         
 16444                           u4461:
 16445  002508                     	goto	l6043
 16446  002508  EFA9  F012         u4460:
 16447  00250C                     	line	526
 16448                           	
 16449                           l6035:
 16450  00250C                     ;fifo.c: 525:     {;fifo.c: 526:         if( dignum_tam( (int) passo ) == 3 )
 16451                           	movff	(c:printExec@passo),(c:dignum_tam@num)
 16452  00250C  C044  F02F         	clrf	((c:dignum_tam@num+1)),c
 16453  002510  6A30               	call	_dignum_tam	;wreg free
 16454  002512  ECE5  F01E         	xorlw	03h
 16455  002516  0A03               	btfss	status,2
 16456  002518  A4D8               	goto	u4471
 16457  00251A  EF91  F012         	goto	u4470
 16458  00251E  EF93  F012         u4471:
 16459  002522                     	goto	l6039
 16460  002522  EF96  F012         u4470:
 16461  002526                     	line	527
 16462                           	
 16463                           l6037:
 16464  002526                     ;fifo.c: 527:             col-=1;
 16465                           	decf	((c:printExec@col)),c
 16466  002526  0643               	goto	l6039
 16467  002528  EF96  F012         	
 16468                           l447:
 16469  00252C                     	line	528
 16470                           	
 16471                           l6039:
 16472  00252C                     ;fifo.c: 528:         dispLCD_num(0, col, (int)passo, dignum_tam( (int)passo) );
 16473                           	movff	(c:printExec@col),(c:dispLCD_num@col)
 16474  00252C  C043  F032         	movff	(c:printExec@passo),(c:dispLCD_num@num)
 16475  002530  C044  F033         	clrf	((c:dispLCD_num@num+1)),c
 16476  002534  6A34               	movff	(c:printExec@passo),(c:dignum_tam@num)
 16477  002536  C044  F02F         	clrf	((c:dignum_tam@num+1)),c
 16478  00253A  6A30               	call	_dignum_tam	;wreg free
 16479  00253C  ECE5  F01E         	movwf	((c:dispLCD_num@tam)),c
 16480  002540  6E35               	movlw	(0)&0ffh
 16481  002542  0E00               	
 16482                           	call	_dispLCD_num
 16483  002544  EC42  F013         	line	529
 16484                           	
 16485                           l6041:
 16486  002548                     ;fifo.c: 529:         dispLCD_dataReg('%');
 16487                           	movlw	(025h)&0ffh
 16488  002548  0E25               	
 16489                           	call	_dispLCD_dataReg
 16490  00254A  EC97  F01E         	line	530
 16491                           ;fifo.c: 530:     }
 16492                           	goto	l459
 16493  00254E  EF41  F013         	line	531
 16494                           ;fifo.c: 531:     else if(passo > 0x64 && passo <= 0xDC)
 16495                           	
 16496                           l446:
 16497  002552                     	
 16498                           l6043:
 16499  002552                     		movlw	065h-1
 16500  002552  0E64               	cpfsgt	((c:printExec@passo)),c
 16501  002554  6444               	goto	u4481
 16502  002556  EFAF  F012         	goto	u4480
 16503  00255A  EFB1  F012         
 16504                           u4481:
 16505  00255E                     	goto	l6057
 16506  00255E  EFE2  F012         u4480:
 16507  002562                     	
 16508                           l6045:
 16509  002562                     		movlw	0DDh-0
 16510  002562  0EDD               	cpfslt	((c:printExec@passo)),c
 16511  002564  6044               	goto	u4491
 16512  002566  EFB7  F012         	goto	u4490
 16513  00256A  EFB9  F012         
 16514                           u4491:
 16515  00256E                     	goto	l6057
 16516  00256E  EFE2  F012         u4490:
 16517  002572                     	line	533
 16518                           	
 16519                           l6047:
 16520  002572                     ;fifo.c: 532:     {;fifo.c: 533:         decodifica(&passo);
 16521                           		movlw	low(printExec@passo)
 16522  002572  0E44               	movwf	((c:decodifica@d)),c
 16523  002574  6E27               	movlw	high(printExec@passo)
 16524  002576  0E00               	movwf	((c:decodifica@d+1)),c
 16525  002578  6E28               
 16526                           	call	_decodifica	;wreg free
 16527  00257A  ECC7  F014         	line	534
 16528                           	
 16529                           l6049:
 16530  00257E                     ;fifo.c: 534:         if( dignum_tam( (int) passo ) == 3 )
 16531                           	movff	(c:printExec@passo),(c:dignum_tam@num)
 16532  00257E  C044  F02F         	clrf	((c:dignum_tam@num+1)),c
 16533  002582  6A30               	call	_dignum_tam	;wreg free
 16534  002584  ECE5  F01E         	xorlw	03h
 16535  002588  0A03               	btfss	status,2
 16536  00258A  A4D8               	goto	u4501
 16537  00258C  EFCA  F012         	goto	u4500
 16538  002590  EFCC  F012         u4501:
 16539  002594                     	goto	l6053
 16540  002594  EFCF  F012         u4500:
 16541  002598                     	line	535
 16542                           	
 16543                           l6051:
 16544  002598                     ;fifo.c: 535:             col-=1;
 16545                           	decf	((c:printExec@col)),c
 16546  002598  0643               	goto	l6053
 16547  00259A  EFCF  F012         	
 16548                           l450:
 16549  00259E                     	line	536
 16550                           	
 16551                           l6053:
 16552  00259E                     ;fifo.c: 536:         dispLCD_num(0, col, (int)passo, dignum_tam( (int)passo) );
 16553                           	movff	(c:printExec@col),(c:dispLCD_num@col)
 16554  00259E  C043  F032         	movff	(c:printExec@passo),(c:dispLCD_num@num)
 16555  0025A2  C044  F033         	clrf	((c:dispLCD_num@num+1)),c
 16556  0025A6  6A34               	movff	(c:printExec@passo),(c:dignum_tam@num)
 16557  0025A8  C044  F02F         	clrf	((c:dignum_tam@num+1)),c
 16558  0025AC  6A30               	call	_dignum_tam	;wreg free
 16559  0025AE  ECE5  F01E         	movwf	((c:dispLCD_num@tam)),c
 16560  0025B2  6E35               	movlw	(0)&0ffh
 16561  0025B4  0E00               	
 16562                           	call	_dispLCD_num
 16563  0025B6  EC42  F013         	line	537
 16564                           	
 16565                           l6055:
 16566  0025BA                     ;fifo.c: 537:         dispLCD_dataReg('s');
 16567                           	movlw	(073h)&0ffh
 16568  0025BA  0E73               	
 16569                           	call	_dispLCD_dataReg
 16570  0025BC  EC97  F01E         	line	538
 16571                           ;fifo.c: 538:     }
 16572                           	goto	l459
 16573  0025C0  EF41  F013         	line	539
 16574                           ;fifo.c: 539:     else if( passo > 0xDC && passo <0xFE)
 16575                           	
 16576                           l449:
 16577  0025C4                     	
 16578                           l6057:
 16579  0025C4                     		movlw	0DDh-1
 16580  0025C4  0EDC               	cpfsgt	((c:printExec@passo)),c
 16581  0025C6  6444               	goto	u4511
 16582  0025C8  EFE8  F012         	goto	u4510
 16583  0025CC  EFEA  F012         
 16584                           u4511:
 16585  0025D0                     	goto	l6075
 16586  0025D0  EF19  F013         u4510:
 16587  0025D4                     	
 16588                           l6059:
 16589  0025D4                     		movlw	0FEh-0
 16590  0025D4  0EFE               	cpfslt	((c:printExec@passo)),c
 16591  0025D6  6044               	goto	u4521
 16592  0025D8  EFF0  F012         	goto	u4520
 16593  0025DC  EFF2  F012         
 16594                           u4521:
 16595  0025E0                     	goto	l6075
 16596  0025E0  EF19  F013         u4520:
 16597  0025E4                     	line	541
 16598                           	
 16599                           l6061:
 16600  0025E4                     ;fifo.c: 540:     {;fifo.c: 541:         decodifica(&passo);
 16601                           		movlw	low(printExec@passo)
 16602  0025E4  0E44               	movwf	((c:decodifica@d)),c
 16603  0025E6  6E27               	movlw	high(printExec@passo)
 16604  0025E8  0E00               	movwf	((c:decodifica@d+1)),c
 16605  0025EA  6E28               
 16606                           	call	_decodifica	;wreg free
 16607  0025EC  ECC7  F014         	line	542
 16608                           	
 16609                           l6063:
 16610  0025F0                     ;fifo.c: 542:         dispLCD_lincol(0, col);
 16611                           	movff	(c:printExec@col),(c:dispLCD_lincol@col)
 16612  0025F0  C043  F029         	movlw	(0)&0ffh
 16613  0025F4  0E00               	
 16614                           	call	_dispLCD_lincol
 16615  0025F6  EC5C  F01D         	line	543
 16616                           	
 16617                           l6065:
 16618  0025FA                     ;fifo.c: 543:         dispLCD_dataReg( passo & ~0x20 );
 16619                           	movf	((c:printExec@passo)),c,w
 16620  0025FA  5044               	andlw	low(0DFh)
 16621  0025FC  0BDF               	
 16622                           	call	_dispLCD_dataReg
 16623  0025FE  EC97  F01E         	line	544
 16624                           	
 16625                           l6067:
 16626  002602                     ;fifo.c: 544:         dispLCD_dataReg( passo & 0x20 ? '-': '+' );
 16627                           	
 16628                           	btfsc	((c:printExec@passo)),c,(5)&7
 16629  002602  BA44               	goto	u4531
 16630  002604  EF06  F013         	goto	u4530
 16631  002608  EF08  F013         u4531:
 16632  00260C                     	goto	l6071
 16633  00260C  EF0E  F013         u4530:
 16634  002610                     	
 16635                           l6069:
 16636  002610                     	movlw	high(02Bh)
 16637  002610  0E00               	movwf	((c:_printExec$498+1)),c
 16638  002612  6E42               	movlw	low(02Bh)
 16639  002614  0E2B               	movwf	((c:_printExec$498)),c
 16640  002616  6E41               	goto	l6073
 16641  002618  EF14  F013         	
 16642                           l454:
 16643  00261C                     	
 16644                           l6071:
 16645  00261C                     	movlw	high(02Dh)
 16646  00261C  0E00               	movwf	((c:_printExec$498+1)),c
 16647  00261E  6E42               	movlw	low(02Dh)
 16648  002620  0E2D               	movwf	((c:_printExec$498)),c
 16649  002622  6E41               	goto	l6073
 16650  002624  EF14  F013         	
 16651                           l456:
 16652  002628                     	
 16653                           l6073:
 16654  002628                     	movf	((c:_printExec$498)),c,w
 16655  002628  5041               	
 16656                           	call	_dispLCD_dataReg
 16657  00262A  EC97  F01E         	line	545
 16658                           ;fifo.c: 545:     }
 16659                           	goto	l459
 16660  00262E  EF41  F013         	line	546
 16661                           ;fifo.c: 546:     else if( passo == 0xFE)
 16662                           	
 16663                           l452:
 16664  002632                     	
 16665                           l6075:
 16666  002632                     		movlw	254
 16667  002632  0EFE               	xorwf	((c:printExec@passo)),c,w
 16668  002634  1844               	btfss	status,2
 16669  002636  A4D8               	goto	u4541
 16670  002638  EF20  F013         	goto	u4540
 16671  00263C  EF22  F013         
 16672                           u4541:
 16673  002640                     	goto	l459
 16674  002640  EF41  F013         u4540:
 16675  002644                     	line	548
 16676                           	
 16677                           l6077:
 16678  002644                     ;fifo.c: 547:     {;fifo.c: 548:         decodifica(&passo);
 16679                           		movlw	low(printExec@passo)
 16680  002644  0E44               	movwf	((c:decodifica@d)),c
 16681  002646  6E27               	movlw	high(printExec@passo)
 16682  002648  0E00               	movwf	((c:decodifica@d+1)),c
 16683  00264A  6E28               
 16684                           	call	_decodifica	;wreg free
 16685  00264C  ECC7  F014         	line	549
 16686                           	
 16687                           l6079:
 16688  002650                     ;fifo.c: 549:         dispLCD_num(0, col, (int)passo, dignum_tam( (int)passo) );
 16689                           	movff	(c:printExec@col),(c:dispLCD_num@col)
 16690  002650  C043  F032         	movff	(c:printExec@passo),(c:dispLCD_num@num)
 16691  002654  C044  F033         	clrf	((c:dispLCD_num@num+1)),c
 16692  002658  6A34               	movff	(c:printExec@passo),(c:dignum_tam@num)
 16693  00265A  C044  F02F         	clrf	((c:dignum_tam@num+1)),c
 16694  00265E  6A30               	call	_dignum_tam	;wreg free
 16695  002660  ECE5  F01E         	movwf	((c:dispLCD_num@tam)),c
 16696  002664  6E35               	movlw	(0)&0ffh
 16697  002666  0E00               	
 16698                           	call	_dispLCD_num
 16699  002668  EC42  F013         	line	550
 16700                           	
 16701                           l6081:
 16702  00266C                     ;fifo.c: 550:         dispLCD_dataReg('%');
 16703                           	movlw	(025h)&0ffh
 16704  00266C  0E25               	
 16705                           	call	_dispLCD_dataReg
 16706  00266E  EC97  F01E         	goto	l459
 16707  002672  EF41  F013         	line	551
 16708                           ;fifo.c: 551:     }
 16709                           	
 16710                           l458:
 16711  002676                     	goto	l459
 16712  002676  EF41  F013         	
 16713                           l457:
 16714  00267A                     	goto	l459
 16715  00267A  EF41  F013         	
 16716                           l451:
 16717  00267E                     	goto	l459
 16718  00267E  EF41  F013         	
 16719                           l448:
 16720  002682                     	line	552
 16721                           	
 16722                           l459:
 16723  002682                     	return	;funcret
 16724  002682  0012               	opt stack 0
 16725                           GLOBAL	__end_of_printExec
 16726                           	__end_of_printExec:
 16727  002684                     	signat	_printExec,8313
 16728                           	global	_posAtual
 16729                           
 16730 ;; *************** function _posAtual *****************
 16731 ;; Defined at:
 16732 ;;		line 512 in file "fifo.c"
 16733 ;; Parameters:    Size  Location     Type
 16734 ;;  ind             1    wreg     unsigned char 
 16735 ;; Auto vars:     Size  Location     Type
 16736 ;;  ind             1    1[COMRAM] unsigned char 
 16737 ;;  passo           1    2[COMRAM] unsigned char 
 16738 ;; Return value:  Size  Location     Type
 16739 ;;                  1    wreg      unsigned char 
 16740 ;; Registers used:
 16741 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16742 ;; Tracked objects:
 16743 ;;		On entry : 0/0
 16744 ;;		On exit  : 0/0
 16745 ;;		Unchanged: 0/0
 16746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16747 ;;      Params:         0       0       0       0       0       0       0       0       0
 16748 ;;      Locals:         2       0       0       0       0       0       0       0       0
 16749 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16750 ;;      Totals:         2       0       0       0       0       0       0       0       0
 16751 ;;Total ram usage:        2 bytes
 16752 ;; Hardware stack levels used:    1
 16753 ;; Hardware stack levels required when called:    3
 16754 ;; This function calls:
 16755 ;;		_fifo_lerPos
 16756 ;;		_getIndicePassos
 16757 ;; This function is called by:
 16758 ;;		_printExec
 16759 ;; This function uses a non-reentrant model
 16760 ;;
 16761                           psect	text18,class=CODE,space=0,reloc=2,group=0
 16762                           	line	512
 16763                           global __ptext18
 16764                           __ptext18:
 16765  0041C6                     psect	text18
 16766                           	file	"fifo.c"
 16767                           	line	512
 16768                           	global	__size_of_posAtual
 16769                           	__size_of_posAtual	equ	__end_of_posAtual-_posAtual
 16770  0000                     	
 16771                           _posAtual:
 16772  0041C6                     ;incstack = 0
 16773                           	opt	stack 26
 16774                           ;posAtual@ind stored from wreg
 16775                           	movwf	((c:posAtual@ind)),c
 16776  0041C6  6E28               	line	514
 16777                           	
 16778                           l5445:
 16779  0041C8                     ;fifo.c: 512: char posAtual(char ind);fifo.c: 513: {;fifo.c: 514:     char passo = 0;
 16780                           	movlw	low(0)
 16781  0041C8  0E00               	movwf	((c:posAtual@passo)),c
 16782  0041CA  6E29               	line	516
 16783                           	
 16784                           l5447:
 16785  0041CC                     ;fifo.c: 516:     passo = fifo_lerPos( getIndicePassos() + ind );
 16786                           	call	_getIndicePassos	;wreg free
 16787  0041CC  EC8E  F021         	addwf	((c:posAtual@ind)),c,w
 16788  0041D0  2428               	
 16789                           	call	_fifo_lerPos
 16790  0041D2  ECF0  F020         	movwf	((c:posAtual@passo)),c
 16791  0041D6  6E29               	line	517
 16792                           	
 16793                           l5449:
 16794  0041D8                     ;fifo.c: 517:     return(passo);
 16795                           	movf	((c:posAtual@passo)),c,w
 16796  0041D8  5029               	goto	l443
 16797  0041DA  EFEF  F020         	
 16798                           l5451:
 16799  0041DE                     	line	518
 16800                           	
 16801                           l443:
 16802  0041DE                     	return	;funcret
 16803  0041DE  0012               	opt stack 0
 16804                           GLOBAL	__end_of_posAtual
 16805                           	__end_of_posAtual:
 16806  0041E0                     	signat	_posAtual,4217
 16807                           	global	_getIndicePassos
 16808                           
 16809 ;; *************** function _getIndicePassos *****************
 16810 ;; Defined at:
 16811 ;;		line 31 in file "fifo.c"
 16812 ;; Parameters:    Size  Location     Type
 16813 ;;		None
 16814 ;; Auto vars:     Size  Location     Type
 16815 ;;		None
 16816 ;; Return value:  Size  Location     Type
 16817 ;;                  1    wreg      unsigned char 
 16818 ;; Registers used:
 16819 ;;		wreg, status,2
 16820 ;; Tracked objects:
 16821 ;;		On entry : 0/0
 16822 ;;		On exit  : 0/0
 16823 ;;		Unchanged: 0/0
 16824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16825 ;;      Params:         0       0       0       0       0       0       0       0       0
 16826 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16827 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16828 ;;      Totals:         0       0       0       0       0       0       0       0       0
 16829 ;;Total ram usage:        0 bytes
 16830 ;; Hardware stack levels used:    1
 16831 ;; Hardware stack levels required when called:    2
 16832 ;; This function calls:
 16833 ;;		Nothing
 16834 ;; This function is called by:
 16835 ;;		_posAtual
 16836 ;;		_main
 16837 ;; This function uses a non-reentrant model
 16838 ;;
 16839                           psect	text19,class=CODE,space=0,reloc=2,group=0
 16840                           	line	31
 16841                           global __ptext19
 16842                           __ptext19:
 16843  00431C                     psect	text19
 16844                           	file	"fifo.c"
 16845                           	line	31
 16846                           	global	__size_of_getIndicePassos
 16847                           	__size_of_getIndicePassos	equ	__end_of_getIndicePassos-_getIndicePassos
 16848  0000                     	
 16849                           _getIndicePassos:
 16850  00431C                     ;incstack = 0
 16851                           	opt	stack 26
 16852                           	line	33
 16853                           	
 16854                           l5149:
 16855  00431C                     ;fifo.c: 33:     return(indice_passos);
 16856                           	movf	((c:_indice_passos)),c,w
 16857  00431C  5057               	goto	l230
 16858  00431E  EF91  F021         	
 16859                           l5151:
 16860  004322                     	line	34
 16861                           	
 16862                           l230:
 16863  004322                     	return	;funcret
 16864  004322  0012               	opt stack 0
 16865                           GLOBAL	__end_of_getIndicePassos
 16866                           	__end_of_getIndicePassos:
 16867  004324                     	signat	_getIndicePassos,89
 16868                           	global	_fifo_lerPos
 16869                           
 16870 ;; *************** function _fifo_lerPos *****************
 16871 ;; Defined at:
 16872 ;;		line 168 in file "fifo.c"
 16873 ;; Parameters:    Size  Location     Type
 16874 ;;  i               1    wreg     unsigned char 
 16875 ;; Auto vars:     Size  Location     Type
 16876 ;;  i               1    0[COMRAM] unsigned char 
 16877 ;; Return value:  Size  Location     Type
 16878 ;;                  1    wreg      unsigned char 
 16879 ;; Registers used:
 16880 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 16881 ;; Tracked objects:
 16882 ;;		On entry : 0/0
 16883 ;;		On exit  : 0/0
 16884 ;;		Unchanged: 0/0
 16885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16886 ;;      Params:         0       0       0       0       0       0       0       0       0
 16887 ;;      Locals:         1       0       0       0       0       0       0       0       0
 16888 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16889 ;;      Totals:         1       0       0       0       0       0       0       0       0
 16890 ;;Total ram usage:        1 bytes
 16891 ;; Hardware stack levels used:    1
 16892 ;; Hardware stack levels required when called:    2
 16893 ;; This function calls:
 16894 ;;		Nothing
 16895 ;; This function is called by:
 16896 ;;		_posAtual
 16897 ;;		_main
 16898 ;; This function uses a non-reentrant model
 16899 ;;
 16900                           psect	text20,class=CODE,space=0,reloc=2,group=0
 16901                           	line	168
 16902                           global __ptext20
 16903                           __ptext20:
 16904  0041E0                     psect	text20
 16905                           	file	"fifo.c"
 16906                           	line	168
 16907                           	global	__size_of_fifo_lerPos
 16908                           	__size_of_fifo_lerPos	equ	__end_of_fifo_lerPos-_fifo_lerPos
 16909  0000                     	
 16910                           _fifo_lerPos:
 16911  0041E0                     ;incstack = 0
 16912                           	opt	stack 26
 16913                           ;fifo_lerPos@i stored from wreg
 16914                           	movwf	((c:fifo_lerPos@i)),c
 16915  0041E0  6E27               	line	170
 16916                           	
 16917                           l5153:
 16918  0041E2                     ;fifo.c: 168: char fifo_lerPos(char i);fifo.c: 169: {;fifo.c: 170:     return ( fila[i] 
                                 );
 16919                           	movf	((c:fifo_lerPos@i)),c,w
 16920  0041E2  5027               	mullw	01h
 16921  0041E4  0D01               	movlw	low(_fila)
 16922  0041E6  0E15               	addwf	(prodl),c,w
 16923  0041E8  24F3               	movwf	c:fsr2l
 16924  0041EA  6ED9               	movlw	high(_fila)
 16925  0041EC  0E00               	addwfc	prod+1,w
 16926  0041EE  20F4               	movwf	1+c:fsr2l
 16927  0041F0  6EDA               	movf	indf2,w
 16928  0041F2  50DF               	goto	l295
 16929  0041F4  EFFC  F020         	
 16930                           l5155:
 16931  0041F8                     	line	171
 16932                           	
 16933                           l295:
 16934  0041F8                     	return	;funcret
 16935  0041F8  0012               	opt stack 0
 16936                           GLOBAL	__end_of_fifo_lerPos
 16937                           	__end_of_fifo_lerPos:
 16938  0041FA                     	signat	_fifo_lerPos,4217
 16939                           	global	_dispLCD_num
 16940                           
 16941 ;; *************** function _dispLCD_num *****************
 16942 ;; Defined at:
 16943 ;;		line 201 in file "dispLCD4vias.c"
 16944 ;; Parameters:    Size  Location     Type
 16945 ;;  lin             1    wreg     unsigned char 
 16946 ;;  col             1   11[COMRAM] unsigned char 
 16947 ;;  num             2   12[COMRAM] int 
 16948 ;;  tam             1   14[COMRAM] unsigned char 
 16949 ;; Auto vars:     Size  Location     Type
 16950 ;;  lin             1   20[COMRAM] unsigned char 
 16951 ;;  div             2   23[COMRAM] int 
 16952 ;;  sinal           1   22[COMRAM] unsigned char 
 16953 ;;  size            1   21[COMRAM] unsigned char 
 16954 ;; Return value:  Size  Location     Type
 16955 ;;                  1    wreg      void 
 16956 ;; Registers used:
 16957 ;;		wreg, status,2, status,0, cstack
 16958 ;; Tracked objects:
 16959 ;;		On entry : 0/0
 16960 ;;		On exit  : 0/0
 16961 ;;		Unchanged: 0/0
 16962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16963 ;;      Params:         4       0       0       0       0       0       0       0       0
 16964 ;;      Locals:         5       0       0       0       0       0       0       0       0
 16965 ;;      Temps:          5       0       0       0       0       0       0       0       0
 16966 ;;      Totals:        14       0       0       0       0       0       0       0       0
 16967 ;;Total ram usage:       14 bytes
 16968 ;; Hardware stack levels used:    1
 16969 ;; Hardware stack levels required when called:    4
 16970 ;; This function calls:
 16971 ;;		___awdiv
 16972 ;;		___awmod
 16973 ;;		_dispLCD_dataReg
 16974 ;;		_dispLCD_lincol
 16975 ;; This function is called by:
 16976 ;;		_printExec
 16977 ;;		_main
 16978 ;; This function uses a non-reentrant model
 16979 ;;
 16980                           psect	text21,class=CODE,space=0,reloc=2,group=0
 16981                           	file	"dispLCD4vias.c"
 16982                           	line	201
 16983                           global __ptext21
 16984                           __ptext21:
 16985  002684                     psect	text21
 16986                           	file	"dispLCD4vias.c"
 16987                           	line	201
 16988                           	global	__size_of_dispLCD_num
 16989                           	__size_of_dispLCD_num	equ	__end_of_dispLCD_num-_dispLCD_num
 16990  0000                     	
 16991                           _dispLCD_num:
 16992  002684                     ;incstack = 0
 16993                           	opt	stack 25
 16994                           ;dispLCD_num@lin stored from wreg
 16995                           	movwf	((c:dispLCD_num@lin)),c
 16996  002684  6E3B               	line	208
 16997                           	
 16998                           l5231:
 16999  002686                     ;dispLCD4vias.c: 201: void dispLCD_num( unsigned char lin, unsigned char col,;dispLCD4vi
                                 as.c: 202:                     int num, unsigned char tam );dispLCD4vias.c: 203: {;dispL
                                 CD4vias.c: 204:     int div;;dispLCD4vias.c: 205:     unsigned char size;;dispLCD4vias.c
                                 : 206:     char sinal;;dispLCD4vias.c: 208:     sinal = num < 0;
 17000                           	btfsc	((c:dispLCD_num@num+1)),c,7
 17001  002686  BE34               	goto	u3491
 17002  002688  EF48  F013         	goto	u3490
 17003  00268C  EF4B  F013         
 17004                           u3491:
 17005  002690                     	movlw	1
 17006  002690  0E01               	goto	u3500
 17007  002692  EF4C  F013         u3490:
 17008  002696                     	movlw	0
 17009  002696  0E00               u3500:
 17010  002698                     	movwf	((c:dispLCD_num@sinal)),c
 17011  002698  6E3D               	line	209
 17012                           	
 17013                           l5233:
 17014  00269A                     ;dispLCD4vias.c: 209:     if( sinal )
 17015                           	movf	((c:dispLCD_num@sinal)),c,w
 17016  00269A  503D               	btfsc	status,2
 17017  00269C  B4D8               	goto	u3511
 17018  00269E  EF53  F013         	goto	u3510
 17019  0026A2  EF55  F013         u3511:
 17020  0026A6                     	goto	l5237
 17021  0026A6  EF5B  F013         u3510:
 17022  0026AA                     	line	210
 17023                           	
 17024                           l5235:
 17025  0026AA                     ;dispLCD4vias.c: 210:         num = (~num) + 1;
 17026                           	negf	((c:dispLCD_num@num)),c
 17027  0026AA  6C33               	comf	((c:dispLCD_num@num+1)),c
 17028  0026AC  1E34               	btfsc	status,0
 17029  0026AE  B0D8               	incf	((c:dispLCD_num@num+1)),c
 17030  0026B0  2A34               	goto	l5237
 17031  0026B2  EF5B  F013         	
 17032                           l102:
 17033  0026B6                     	line	212
 17034                           	
 17035                           l5237:
 17036  0026B6                     ;dispLCD4vias.c: 212:     dispLCD_lincol(lin, col);
 17037                           	movff	(c:dispLCD_num@col),(c:dispLCD_lincol@col)
 17038  0026B6  C032  F029         	movf	((c:dispLCD_num@lin)),c,w
 17039  0026BA  503B               	
 17040                           	call	_dispLCD_lincol
 17041  0026BC  EC5C  F01D         	line	214
 17042                           	
 17043                           l5239:
 17044  0026C0                     ;dispLCD4vias.c: 214:     div=10000;
 17045                           	movlw	high(02710h)
 17046  0026C0  0E27               	movwf	((c:dispLCD_num@div+1)),c
 17047  0026C2  6E3F               	movlw	low(02710h)
 17048  0026C4  0E10               	movwf	((c:dispLCD_num@div)),c
 17049  0026C6  6E3E               	line	215
 17050                           	
 17051                           l5241:
 17052  0026C8                     ;dispLCD4vias.c: 215:     size = 5;
 17053                           	movlw	low(05h)
 17054  0026C8  0E05               	movwf	((c:dispLCD_num@size)),c
 17055  0026CA  6E3C               	line	216
 17056                           ;dispLCD4vias.c: 216:     while( div >= 1 )
 17057                           	goto	l5249
 17058  0026CC  EF90  F013         	
 17059                           l104:
 17060  0026D0                     	line	218
 17061                           	
 17062                           l5243:
 17063  0026D0                     ;dispLCD4vias.c: 217:     {;dispLCD4vias.c: 218:         if( num/div == 0 )
 17064                           	movff	(c:dispLCD_num@num),(c:___awdiv@dividend)
 17065  0026D0  C033  F027         	movff	(c:dispLCD_num@num+1),(c:___awdiv@dividend+1)
 17066  0026D4  C034  F028         	movff	(c:dispLCD_num@div),(c:___awdiv@divisor)
 17067  0026D8  C03E  F029         	movff	(c:dispLCD_num@div+1),(c:___awdiv@divisor+1)
 17068  0026DC  C03F  F02A         	call	___awdiv	;wreg free
 17069  0026E0  ECB3  F017         	movf	(0+?___awdiv),c,w
 17070  0026E4  5027               iorwf	(1+?___awdiv),c,w
 17071  0026E6  1028               	btfss	status,2
 17072  0026E8  A4D8               	goto	u3521
 17073  0026EA  EF79  F013         	goto	u3520
 17074  0026EE  EF7B  F013         
 17075                           u3521:
 17076  0026F2                     	goto	l5255
 17077  0026F2  EFA7  F013         u3520:
 17078  0026F6                     	line	219
 17079                           	
 17080                           l5245:
 17081  0026F6                     ;dispLCD4vias.c: 219:             --size;
 17082                           	decf	((c:dispLCD_num@size)),c
 17083  0026F6  063C               	goto	l5247
 17084  0026F8  EF80  F013         	line	220
 17085                           ;dispLCD4vias.c: 220:         else
 17086                           	
 17087                           l105:
 17088  0026FC                     	line	221
 17089                           ;dispLCD4vias.c: 221:             break;
 17090                           	goto	l5255
 17091  0026FC  EFA7  F013         	
 17092                           l106:
 17093  002700                     	line	222
 17094                           	
 17095                           l5247:
 17096  002700                     ;dispLCD4vias.c: 222:         div/=10;
 17097                           	movff	(c:dispLCD_num@div),(c:___awdiv@dividend)
 17098  002700  C03E  F027         	movff	(c:dispLCD_num@div+1),(c:___awdiv@dividend+1)
 17099  002704  C03F  F028         	movlw	high(0Ah)
 17100  002708  0E00               	movwf	((c:___awdiv@divisor+1)),c
 17101  00270A  6E2A               	movlw	low(0Ah)
 17102  00270C  0E0A               	movwf	((c:___awdiv@divisor)),c
 17103  00270E  6E29               	call	___awdiv	;wreg free
 17104  002710  ECB3  F017         	movff	0+?___awdiv,(c:dispLCD_num@div)
 17105  002714  C027  F03E         	movff	1+?___awdiv,(c:dispLCD_num@div+1)
 17106  002718  C028  F03F         	goto	l5249
 17107  00271C  EF90  F013         	line	223
 17108                           ;dispLCD4vias.c: 223:     }
 17109                           	
 17110                           l103:
 17111  002720                     	line	216
 17112                           	
 17113                           l5249:
 17114  002720                     ;dispLCD4vias.c: 216:     while( div >= 1 )
 17115                           	btfsc	((c:dispLCD_num@div+1)),c,7
 17116  002720  BE3F               	goto	u3530
 17117  002722  EF9D  F013         	movf	((c:dispLCD_num@div+1)),c,w
 17118  002726  503F               	bnz	u3531
 17119  002728  E106               	decf	((c:dispLCD_num@div)),c,w
 17120  00272A  043E               	btfsc	status,0
 17121  00272C  B0D8               	goto	u3531
 17122  00272E  EF9B  F013         	goto	u3530
 17123  002732  EF9D  F013         
 17124                           u3531:
 17125  002736                     	goto	l5243
 17126  002736  EF68  F013         u3530:
 17127  00273A                     	goto	l5255
 17128  00273A  EFA7  F013         	
 17129                           l107:
 17130  00273E                     	line	225
 17131                           ;dispLCD4vias.c: 225:     while( tam > (size+sinal) && tam > 1 )
 17132                           	goto	l5255
 17133  00273E  EFA7  F013         	
 17134                           l109:
 17135  002742                     	line	227
 17136                           	
 17137                           l5251:
 17138  002742                     ;dispLCD4vias.c: 226:     {;dispLCD4vias.c: 227:         dispLCD_dataReg(' ');
 17139                           	movlw	(020h)&0ffh
 17140  002742  0E20               	
 17141                           	call	_dispLCD_dataReg
 17142  002744  EC97  F01E         	line	228
 17143                           	
 17144                           l5253:
 17145  002748                     ;dispLCD4vias.c: 228:         --tam;
 17146                           	decf	((c:dispLCD_num@tam)),c
 17147  002748  0635               	goto	l5255
 17148  00274A  EFA7  F013         	line	229
 17149                           ;dispLCD4vias.c: 229:     }
 17150                           	
 17151                           l108:
 17152  00274E                     	line	225
 17153                           	
 17154                           l5255:
 17155  00274E                     ;dispLCD4vias.c: 225:     while( tam > (size+sinal) && tam > 1 )
 17156                           	movf	((c:dispLCD_num@tam)),c,w
 17157  00274E  5035               	movwf	(??_dispLCD_num+0+0)&0ffh,c
 17158  002750  6E36               	clrf	(??_dispLCD_num+0+0+1)&0ffh,c
 17159  002752  6A37               
 17160                           	movf	((c:dispLCD_num@sinal)),c,w
 17161  002754  503D               	movff	(c:dispLCD_num@size),??_dispLCD_num+2+0
 17162  002756  C03C  F038         	clrf	(??_dispLCD_num+2+0+1)&0ffh,c
 17163  00275A  6A39               	addwf	(??_dispLCD_num+2+0),c
 17164  00275C  2638               	movlw	0
 17165  00275E  0E00               	addwfc	(??_dispLCD_num+2+1),c
 17166  002760  2239               		movf	(??_dispLCD_num+0+0),c,w
 17167  002762  5036               	subwf	(??_dispLCD_num+2+0),c,w
 17168  002764  5C38               	movf	(??_dispLCD_num+2+1),c,w
 17169  002766  5039               	xorlw	80h
 17170  002768  0A80               	movwf	(??_dispLCD_num+4+0)&0ffh,c
 17171  00276A  6E3A               	movf	(??_dispLCD_num+0+1),c,w
 17172  00276C  5037               	xorlw	80h
 17173  00276E  0A80               	subwfb	(??_dispLCD_num+4+0)&0ffh,c,w
 17174  002770  583A               	btfsc	status,0
 17175  002772  B0D8               	goto	u3541
 17176  002774  EFBE  F013         	goto	u3540
 17177  002778  EFC0  F013         
 17178                           u3541:
 17179  00277C                     	goto	l5259
 17180  00277C  EFCC  F013         u3540:
 17181  002780                     	
 17182                           l5257:
 17183  002780                     		movlw	02h-0
 17184  002780  0E02               	cpfslt	((c:dispLCD_num@tam)),c
 17185  002782  6035               	goto	u3551
 17186  002784  EFC6  F013         	goto	u3550
 17187  002788  EFC8  F013         
 17188                           u3551:
 17189  00278C                     	goto	l5251
 17190  00278C  EFA1  F013         u3550:
 17191  002790                     	goto	l5259
 17192  002790  EFCC  F013         	
 17193                           l111:
 17194  002794                     	goto	l5259
 17195  002794  EFCC  F013         	
 17196                           l112:
 17197  002798                     	line	231
 17198                           	
 17199                           l5259:
 17200  002798                     ;dispLCD4vias.c: 231:     if( sinal )
 17201                           	movf	((c:dispLCD_num@sinal)),c,w
 17202  002798  503D               	btfsc	status,2
 17203  00279A  B4D8               	goto	u3561
 17204  00279C  EFD2  F013         	goto	u3560
 17205  0027A0  EFD4  F013         u3561:
 17206  0027A4                     	goto	l114
 17207  0027A4  EFD9  F013         u3560:
 17208  0027A8                     	line	232
 17209                           	
 17210                           l5261:
 17211  0027A8                     ;dispLCD4vias.c: 232:         dispLCD_dataReg('-');
 17212                           	movlw	(02Dh)&0ffh
 17213  0027A8  0E2D               	
 17214                           	call	_dispLCD_dataReg
 17215  0027AA  EC97  F01E         	goto	l114
 17216  0027AE  EFD9  F013         	
 17217                           l113:
 17218  0027B2                     	line	234
 17219                           ;dispLCD4vias.c: 234:     do
 17220                           	
 17221                           l114:
 17222  0027B2                     	line	236
 17223                           ;dispLCD4vias.c: 235:     {;dispLCD4vias.c: 236:         dispLCD_dataReg( (num / div) + 
                                 '0' );
 17224                           	movff	(c:dispLCD_num@num),(c:___awdiv@dividend)
 17225  0027B2  C033  F027         	movff	(c:dispLCD_num@num+1),(c:___awdiv@dividend+1)
 17226  0027B6  C034  F028         	movff	(c:dispLCD_num@div),(c:___awdiv@divisor)
 17227  0027BA  C03E  F029         	movff	(c:dispLCD_num@div+1),(c:___awdiv@divisor+1)
 17228  0027BE  C03F  F02A         	call	___awdiv	;wreg free
 17229  0027C2  ECB3  F017         	movf	(0+?___awdiv),c,w
 17230  0027C6  5027               	addlw	low(030h)
 17231  0027C8  0F30               	
 17232                           	call	_dispLCD_dataReg
 17233  0027CA  EC97  F01E         	line	237
 17234                           ;dispLCD4vias.c: 237:         num = num % div;
 17235                           	movff	(c:dispLCD_num@num),(c:___awmod@dividend)
 17236  0027CE  C033  F027         	movff	(c:dispLCD_num@num+1),(c:___awmod@dividend+1)
 17237  0027D2  C034  F028         	movff	(c:dispLCD_num@div),(c:___awmod@divisor)
 17238  0027D6  C03E  F029         	movff	(c:dispLCD_num@div+1),(c:___awmod@divisor+1)
 17239  0027DA  C03F  F02A         	call	___awmod	;wreg free
 17240  0027DE  EC0E  F019         	movff	0+?___awmod,(c:dispLCD_num@num)
 17241  0027E2  C027  F033         	movff	1+?___awmod,(c:dispLCD_num@num+1)
 17242  0027E6  C028  F034         	line	238
 17243                           ;dispLCD4vias.c: 238:         div/=10;
 17244                           	movff	(c:dispLCD_num@div),(c:___awdiv@dividend)
 17245  0027EA  C03E  F027         	movff	(c:dispLCD_num@div+1),(c:___awdiv@dividend+1)
 17246  0027EE  C03F  F028         	movlw	high(0Ah)
 17247  0027F2  0E00               	movwf	((c:___awdiv@divisor+1)),c
 17248  0027F4  6E2A               	movlw	low(0Ah)
 17249  0027F6  0E0A               	movwf	((c:___awdiv@divisor)),c
 17250  0027F8  6E29               	call	___awdiv	;wreg free
 17251  0027FA  ECB3  F017         	movff	0+?___awdiv,(c:dispLCD_num@div)
 17252  0027FE  C027  F03E         	movff	1+?___awdiv,(c:dispLCD_num@div+1)
 17253  002802  C028  F03F         	line	239
 17254                           	
 17255                           l5263:
 17256  002806                     ;dispLCD4vias.c: 239:     }
 17257                           	btfsc	((c:dispLCD_num@div+1)),c,7
 17258  002806  BE3F               	goto	u3570
 17259  002808  EF10  F014         	movf	((c:dispLCD_num@div+1)),c,w
 17260  00280C  503F               	bnz	u3571
 17261  00280E  E106               	decf	((c:dispLCD_num@div)),c,w
 17262  002810  043E               	btfsc	status,0
 17263  002812  B0D8               	goto	u3571
 17264  002814  EF0E  F014         	goto	u3570
 17265  002818  EF10  F014         
 17266                           u3571:
 17267  00281C                     	goto	l114
 17268  00281C  EFD9  F013         u3570:
 17269  002820                     	goto	l116
 17270  002820  EF12  F014         	
 17271                           l115:
 17272  002824                     	line	241
 17273                           	
 17274                           l116:
 17275  002824                     	return	;funcret
 17276  002824  0012               	opt stack 0
 17277                           GLOBAL	__end_of_dispLCD_num
 17278                           	__end_of_dispLCD_num:
 17279  002826                     	signat	_dispLCD_num,16505
 17280                           	global	_manipula_atuadores_init
 17281                           
 17282 ;; *************** function _manipula_atuadores_init *****************
 17283 ;; Defined at:
 17284 ;;		line 137 in file "fifo.c"
 17285 ;; Parameters:    Size  Location     Type
 17286 ;;  aux             1    wreg     unsigned char 
 17287 ;; Auto vars:     Size  Location     Type
 17288 ;;  aux             1    4[COMRAM] unsigned char 
 17289 ;;  mask            1    5[COMRAM] unsigned char 
 17290 ;;  atuador         1    3[COMRAM] unsigned char 
 17291 ;; Return value:  Size  Location     Type
 17292 ;;                  1    wreg      void 
 17293 ;; Registers used:
 17294 ;;		wreg, status,2, status,0, cstack
 17295 ;; Tracked objects:
 17296 ;;		On entry : 0/0
 17297 ;;		On exit  : 0/0
 17298 ;;		Unchanged: 0/0
 17299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17300 ;;      Params:         0       0       0       0       0       0       0       0       0
 17301 ;;      Locals:         3       0       0       0       0       0       0       0       0
 17302 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17303 ;;      Totals:         3       0       0       0       0       0       0       0       0
 17304 ;;Total ram usage:        3 bytes
 17305 ;; Hardware stack levels used:    1
 17306 ;; Hardware stack levels required when called:    3
 17307 ;; This function calls:
 17308 ;;		_alt_atuador
 17309 ;; This function is called by:
 17310 ;;		_main
 17311 ;; This function uses a non-reentrant model
 17312 ;;
 17313                           psect	text22,class=CODE,space=0,reloc=2,group=0
 17314                           	file	"fifo.c"
 17315                           	line	137
 17316                           global __ptext22
 17317                           __ptext22:
 17318  0038B4                     psect	text22
 17319                           	file	"fifo.c"
 17320                           	line	137
 17321                           	global	__size_of_manipula_atuadores_init
 17322                           	__size_of_manipula_atuadores_init	equ	__end_of_manipula_atuadores_init-_manipula_atuado
                                 res_init
 17323  0000                     	
 17324                           _manipula_atuadores_init:
 17325  0038B4                     ;incstack = 0
 17326                           	opt	stack 27
 17327                           ;manipula_atuadores_init@aux stored from wreg
 17328                           	movwf	((c:manipula_atuadores_init@aux)),c
 17329  0038B4  6E2B               	line	139
 17330                           	
 17331                           l5789:
 17332  0038B6                     ;fifo.c: 137: void manipula_atuadores_init(char aux);fifo.c: 138: {;fifo.c: 139:     cha
                                 r mask = 0x08;
 17333                           	movlw	low(08h)
 17334  0038B6  0E08               	movwf	((c:manipula_atuadores_init@mask)),c
 17335  0038B8  6E2C               	line	140
 17336                           ;fifo.c: 140:     char atuador = 0x41;
 17337                           	movlw	low(041h)
 17338  0038BA  0E41               	movwf	((c:manipula_atuadores_init@atuador)),c
 17339  0038BC  6E2A               	line	142
 17340                           	
 17341                           l5791:
 17342  0038BE                     ;fifo.c: 142:     if(aux ==0xFF)
 17343                           		incf	((c:manipula_atuadores_init@aux)),c,w
 17344  0038BE  282B               	btfss	status,2
 17345  0038C0  A4D8               	goto	u4131
 17346  0038C2  EF65  F01C         	goto	u4130
 17347  0038C6  EF67  F01C         
 17348                           u4131:
 17349  0038CA                     	goto	l5803
 17350  0038CA  EF81  F01C         u4130:
 17351  0038CE                     	goto	l287
 17352  0038CE  EF8D  F01C         	line	145
 17353                           	
 17354                           l5793:
 17355  0038D2                     ;fifo.c: 143:     {;fifo.c: 145:     }
 17356                           	goto	l287
 17357  0038D2  EF8D  F01C         	line	146
 17358                           ;fifo.c: 146:     else
 17359                           	
 17360                           l281:
 17361  0038D6                     	line	147
 17362                           ;fifo.c: 147:         while(mask)
 17363                           	goto	l5803
 17364  0038D6  EF81  F01C         	
 17365                           l284:
 17366  0038DA                     	line	150
 17367                           	
 17368                           l5795:
 17369  0038DA                     ;fifo.c: 148:         {;fifo.c: 150:             if(aux & mask)
 17370                           	movf	((c:manipula_atuadores_init@aux)),c,w
 17371  0038DA  502B               	andwf	((c:manipula_atuadores_init@mask)),c,w
 17372  0038DC  142C               	iorlw	0
 17373  0038DE  0900               	btfsc	status,2
 17374  0038E0  B4D8               	goto	u4141
 17375  0038E2  EF75  F01C         	goto	u4140
 17376  0038E6  EF77  F01C         u4141:
 17377  0038EA                     	goto	l5799
 17378  0038EA  EF7C  F01C         u4140:
 17379  0038EE                     	line	152
 17380                           	
 17381                           l5797:
 17382  0038EE                     ;fifo.c: 151:             {;fifo.c: 152:                 alt_atuador(atuador);
 17383                           	movf	((c:manipula_atuadores_init@atuador)),c,w
 17384  0038EE  502A               	
 17385                           	call	_alt_atuador
 17386  0038F0  EC90  F01A         	goto	l5799
 17387  0038F4  EF7C  F01C         	line	153
 17388                           ;fifo.c: 153:             }
 17389                           	
 17390                           l285:
 17391  0038F8                     	line	154
 17392                           	
 17393                           l5799:
 17394  0038F8                     ;fifo.c: 154:             atuador++;
 17395                           	incf	((c:manipula_atuadores_init@atuador)),c
 17396  0038F8  2A2A               	line	155
 17397                           	
 17398                           l5801:
 17399  0038FA                     ;fifo.c: 155:             mask >>= 1;
 17400                           	bcf status,0
 17401  0038FA  90D8               	rrcf	((c:manipula_atuadores_init@mask)),c
 17402  0038FC  322C               
 17403                           	goto	l5803
 17404  0038FE  EF81  F01C         	line	156
 17405                           ;fifo.c: 156:         }
 17406                           	
 17407                           l283:
 17408  003902                     	line	147
 17409                           	
 17410                           l5803:
 17411  003902                     ;fifo.c: 147:         while(mask)
 17412                           	movf	((c:manipula_atuadores_init@mask)),c,w
 17413  003902  502C               	btfss	status,2
 17414  003904  A4D8               	goto	u4151
 17415  003906  EF87  F01C         	goto	u4150
 17416  00390A  EF89  F01C         u4151:
 17417  00390E                     	goto	l5795
 17418  00390E  EF6D  F01C         u4150:
 17419  003912                     	goto	l287
 17420  003912  EF8D  F01C         	
 17421                           l286:
 17422  003916                     	goto	l287
 17423  003916  EF8D  F01C         	line	156
 17424                           ;fifo.c: 156:         }
 17425                           	
 17426                           l282:
 17427  00391A                     	line	157
 17428                           	
 17429                           l287:
 17430  00391A                     	return	;funcret
 17431  00391A  0012               	opt stack 0
 17432                           GLOBAL	__end_of_manipula_atuadores_init
 17433                           	__end_of_manipula_atuadores_init:
 17434  00391C                     	signat	_manipula_atuadores_init,4217
 17435                           	global	_ler_sensor
 17436                           
 17437 ;; *************** function _ler_sensor *****************
 17438 ;; Defined at:
 17439 ;;		line 68 in file "atuadores.c"
 17440 ;; Parameters:    Size  Location     Type
 17441 ;;  passo           1    wreg     unsigned char 
 17442 ;;  ptr             2    0[COMRAM] PTR unsigned char 
 17443 ;;		 -> main@vetorIn(1), 
 17444 ;; Auto vars:     Size  Location     Type
 17445 ;;  passo           1    4[COMRAM] unsigned char 
 17446 ;; Return value:  Size  Location     Type
 17447 ;;                  1    wreg      unsigned char 
 17448 ;; Registers used:
 17449 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17450 ;; Tracked objects:
 17451 ;;		On entry : 0/0
 17452 ;;		On exit  : 0/0
 17453 ;;		Unchanged: 0/0
 17454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17455 ;;      Params:         2       0       0       0       0       0       0       0       0
 17456 ;;      Locals:         1       0       0       0       0       0       0       0       0
 17457 ;;      Temps:          2       0       0       0       0       0       0       0       0
 17458 ;;      Totals:         5       0       0       0       0       0       0       0       0
 17459 ;;Total ram usage:        5 bytes
 17460 ;; Hardware stack levels used:    1
 17461 ;; Hardware stack levels required when called:    2
 17462 ;; This function calls:
 17463 ;;		Nothing
 17464 ;; This function is called by:
 17465 ;;		_main
 17466 ;; This function uses a non-reentrant model
 17467 ;;
 17468                           psect	text23,class=CODE,space=0,reloc=2,group=0
 17469                           	file	"atuadores.c"
 17470                           	line	68
 17471                           global __ptext23
 17472                           __ptext23:
 17473  002AE2                     psect	text23
 17474                           	file	"atuadores.c"
 17475                           	line	68
 17476                           	global	__size_of_ler_sensor
 17477                           	__size_of_ler_sensor	equ	__end_of_ler_sensor-_ler_sensor
 17478  0000                     	
 17479                           _ler_sensor:
 17480  002AE2                     ;incstack = 0
 17481                           	opt	stack 28
 17482                           ;ler_sensor@passo stored from wreg
 17483                           	movwf	((c:ler_sensor@passo)),c
 17484  002AE2  6E2B               	line	70
 17485                           	
 17486                           l5589:
 17487  002AE4                     ;atuadores.c: 68: char ler_sensor(char passo, char* ptr);atuadores.c: 69: {;atuadores.c:
                                  70:     switch (passo)
 17488                           	goto	l5647
 17489  002AE4  EFDD  F015         	line	72
 17490                           ;atuadores.c: 71:     {;atuadores.c: 72:         case 'A': return(*ptr & 0x02); break;
 17491                           	
 17492                           l39:
 17493  002AE8                     	
 17494                           l5591:
 17495  002AE8                     	movff	(c:ler_sensor@ptr),fsr2l
 17496  002AE8  C027  FFD9         	movff	(c:ler_sensor@ptr+1),fsr2h
 17497  002AEC  C028  FFDA         	movf	indf2,w
 17498  002AF0  50DF               	andlw	low(02h)
 17499  002AF2  0B02               	goto	l40
 17500  002AF4  EF0A  F016         	
 17501                           l5593:
 17502  002AF8                     	goto	l40
 17503  002AF8  EF0A  F016         	
 17504                           l5595:
 17505  002AFC                     	goto	l40
 17506  002AFC  EF0A  F016         	line	73
 17507                           ;atuadores.c: 73:         case 'a': return(*ptr & 0x01); break;
 17508                           	
 17509                           l42:
 17510  002B00                     	
 17511                           l5597:
 17512  002B00                     	movff	(c:ler_sensor@ptr),fsr2l
 17513  002B00  C027  FFD9         	movff	(c:ler_sensor@ptr+1),fsr2h
 17514  002B04  C028  FFDA         	movf	indf2,w
 17515  002B08  50DF               	andlw	low(01h)
 17516  002B0A  0B01               	goto	l40
 17517  002B0C  EF0A  F016         	
 17518                           l5599:
 17519  002B10                     	goto	l40
 17520  002B10  EF0A  F016         	
 17521                           l5601:
 17522  002B14                     	goto	l40
 17523  002B14  EF0A  F016         	line	74
 17524                           ;atuadores.c: 74:         case 'B': return(*ptr & 0x08); break;
 17525                           	
 17526                           l43:
 17527  002B18                     	
 17528                           l5603:
 17529  002B18                     	movff	(c:ler_sensor@ptr),fsr2l
 17530  002B18  C027  FFD9         	movff	(c:ler_sensor@ptr+1),fsr2h
 17531  002B1C  C028  FFDA         	movf	indf2,w
 17532  002B20  50DF               	andlw	low(08h)
 17533  002B22  0B08               	goto	l40
 17534  002B24  EF0A  F016         	
 17535                           l5605:
 17536  002B28                     	goto	l40
 17537  002B28  EF0A  F016         	
 17538                           l5607:
 17539  002B2C                     	goto	l40
 17540  002B2C  EF0A  F016         	line	75
 17541                           ;atuadores.c: 75:         case 'b': return(*ptr & 0x04); break;
 17542                           	
 17543                           l44:
 17544  002B30                     	
 17545                           l5609:
 17546  002B30                     	movff	(c:ler_sensor@ptr),fsr2l
 17547  002B30  C027  FFD9         	movff	(c:ler_sensor@ptr+1),fsr2h
 17548  002B34  C028  FFDA         	movf	indf2,w
 17549  002B38  50DF               	andlw	low(04h)
 17550  002B3A  0B04               	goto	l40
 17551  002B3C  EF0A  F016         	
 17552                           l5611:
 17553  002B40                     	goto	l40
 17554  002B40  EF0A  F016         	
 17555                           l5613:
 17556  002B44                     	goto	l40
 17557  002B44  EF0A  F016         	line	76
 17558                           ;atuadores.c: 76:         case 'C': return(*ptr & 0x20); break;
 17559                           	
 17560                           l45:
 17561  002B48                     	
 17562                           l5615:
 17563  002B48                     	movff	(c:ler_sensor@ptr),fsr2l
 17564  002B48  C027  FFD9         	movff	(c:ler_sensor@ptr+1),fsr2h
 17565  002B4C  C028  FFDA         	movf	indf2,w
 17566  002B50  50DF               	andlw	low(020h)
 17567  002B52  0B20               	goto	l40
 17568  002B54  EF0A  F016         	
 17569                           l5617:
 17570  002B58                     	goto	l40
 17571  002B58  EF0A  F016         	
 17572                           l5619:
 17573  002B5C                     	goto	l40
 17574  002B5C  EF0A  F016         	line	77
 17575                           ;atuadores.c: 77:         case 'c': return(*ptr & 0x10); break;
 17576                           	
 17577                           l46:
 17578  002B60                     	
 17579                           l5621:
 17580  002B60                     	movff	(c:ler_sensor@ptr),fsr2l
 17581  002B60  C027  FFD9         	movff	(c:ler_sensor@ptr+1),fsr2h
 17582  002B64  C028  FFDA         	movf	indf2,w
 17583  002B68  50DF               	andlw	low(010h)
 17584  002B6A  0B10               	goto	l40
 17585  002B6C  EF0A  F016         	
 17586                           l5623:
 17587  002B70                     	goto	l40
 17588  002B70  EF0A  F016         	
 17589                           l5625:
 17590  002B74                     	goto	l40
 17591  002B74  EF0A  F016         	line	78
 17592                           ;atuadores.c: 78:         case 'D': return(*ptr & 0x80); break;
 17593                           	
 17594                           l47:
 17595  002B78                     	
 17596                           l5627:
 17597  002B78                     	movff	(c:ler_sensor@ptr),fsr2l
 17598  002B78  C027  FFD9         	movff	(c:ler_sensor@ptr+1),fsr2h
 17599  002B7C  C028  FFDA         	movf	indf2,w
 17600  002B80  50DF               	andlw	low(080h)
 17601  002B82  0B80               	goto	l40
 17602  002B84  EF0A  F016         	
 17603                           l5629:
 17604  002B88                     	goto	l40
 17605  002B88  EF0A  F016         	
 17606                           l5631:
 17607  002B8C                     	goto	l40
 17608  002B8C  EF0A  F016         	line	79
 17609                           ;atuadores.c: 79:         case 'd': return(*ptr & 0x40); break;
 17610                           	
 17611                           l48:
 17612  002B90                     	
 17613                           l5633:
 17614  002B90                     	movff	(c:ler_sensor@ptr),fsr2l
 17615  002B90  C027  FFD9         	movff	(c:ler_sensor@ptr+1),fsr2h
 17616  002B94  C028  FFDA         	movf	indf2,w
 17617  002B98  50DF               	andlw	low(040h)
 17618  002B9A  0B40               	goto	l40
 17619  002B9C  EF0A  F016         	
 17620                           l5635:
 17621  002BA0                     	goto	l40
 17622  002BA0  EF0A  F016         	
 17623                           l5637:
 17624  002BA4                     	goto	l40
 17625  002BA4  EF0A  F016         	line	80
 17626                           ;atuadores.c: 80:         default: return( 0 ); break;
 17627                           	
 17628                           l49:
 17629  002BA8                     	
 17630                           l5639:
 17631  002BA8                     	movlw	(0)&0ffh
 17632  002BA8  0E00               	goto	l40
 17633  002BAA  EF0A  F016         	
 17634                           l5641:
 17635  002BAE                     	goto	l40
 17636  002BAE  EF0A  F016         	
 17637                           l5643:
 17638  002BB2                     	goto	l40
 17639  002BB2  EF0A  F016         	line	81
 17640                           	
 17641                           l5645:
 17642  002BB6                     ;atuadores.c: 81:     }
 17643                           	goto	l40
 17644  002BB6  EF0A  F016         	
 17645                           l38:
 17646  002BBA                     	
 17647                           l5647:
 17648  002BBA                     	movf	((c:ler_sensor@passo)),c,w
 17649  002BBA  502B               	movwf	(??_ler_sensor+0+0)&0ffh,c
 17650  002BBC  6E29               	clrf	(??_ler_sensor+0+0+1)&0ffh,c
 17651  002BBE  6A2A               
 17652                           	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
 17653                           ; Switch size 1, requested type "space"
 17654                           ; Number of cases is 1, Range of values is 0 to 0
 17655                           ; switch strategies available:
 17656                           ; Name         Instructions Cycles
 17657                           ; simple_byte            4     3 (average)
 17658                           ;	Chosen strategy is simple_byte
 17659                           
 17660                           	movf ??_ler_sensor+0+1,c,w
 17661  002BC0  502A               	xorlw	0^0	; case 0
 17662  002BC2  0A00               	skipnz
 17663  002BC4  B4D8               	goto	l7981
 17664  002BC6  EFE7  F015         	goto	l5639
 17665  002BCA  EFD4  F015         	
 17666                           l7981:
 17667  002BCE                     ; Switch size 1, requested type "space"
 17668                           ; Number of cases is 8, Range of values is 65 to 100
 17669                           ; switch strategies available:
 17670                           ; Name         Instructions Cycles
 17671                           ; simple_byte           25    13 (average)
 17672                           ;	Chosen strategy is simple_byte
 17673                           
 17674                           	movf ??_ler_sensor+0+0,c,w
 17675  002BCE  5029               	xorlw	65^0	; case 65
 17676  002BD0  0A41               	skipnz
 17677  002BD2  B4D8               	goto	l5591
 17678  002BD4  EF74  F015         	xorlw	66^65	; case 66
 17679  002BD8  0A03               	skipnz
 17680  002BDA  B4D8               	goto	l5603
 17681  002BDC  EF8C  F015         	xorlw	67^66	; case 67
 17682  002BE0  0A01               	skipnz
 17683  002BE2  B4D8               	goto	l5615
 17684  002BE4  EFA4  F015         	xorlw	68^67	; case 68
 17685  002BE8  0A07               	skipnz
 17686  002BEA  B4D8               	goto	l5627
 17687  002BEC  EFBC  F015         	xorlw	97^68	; case 97
 17688  002BF0  0A25               	skipnz
 17689  002BF2  B4D8               	goto	l5597
 17690  002BF4  EF80  F015         	xorlw	98^97	; case 98
 17691  002BF8  0A03               	skipnz
 17692  002BFA  B4D8               	goto	l5609
 17693  002BFC  EF98  F015         	xorlw	99^98	; case 99
 17694  002C00  0A01               	skipnz
 17695  002C02  B4D8               	goto	l5621
 17696  002C04  EFB0  F015         	xorlw	100^99	; case 100
 17697  002C08  0A07               	skipnz
 17698  002C0A  B4D8               	goto	l5633
 17699  002C0C  EFC8  F015         	goto	l5639
 17700  002C10  EFD4  F015         
 17701                           	
 17702                           l41:
 17703  002C14                     	line	83
 17704                           	
 17705                           l40:
 17706  002C14                     	return	;funcret
 17707  002C14  0012               	opt stack 0
 17708                           GLOBAL	__end_of_ler_sensor
 17709                           	__end_of_ler_sensor:
 17710  002C16                     	signat	_ler_sensor,8313
 17711                           	global	_init_atuadores
 17712                           
 17713 ;; *************** function _init_atuadores *****************
 17714 ;; Defined at:
 17715 ;;		line 103 in file "fifo.c"
 17716 ;; Parameters:    Size  Location     Type
 17717 ;;		None
 17718 ;; Auto vars:     Size  Location     Type
 17719 ;;		None
 17720 ;; Return value:  Size  Location     Type
 17721 ;;                  1    wreg      void 
 17722 ;; Registers used:
 17723 ;;		None
 17724 ;; Tracked objects:
 17725 ;;		On entry : 0/0
 17726 ;;		On exit  : 0/0
 17727 ;;		Unchanged: 0/0
 17728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17729 ;;      Params:         0       0       0       0       0       0       0       0       0
 17730 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17731 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17732 ;;      Totals:         0       0       0       0       0       0       0       0       0
 17733 ;;Total ram usage:        0 bytes
 17734 ;; Hardware stack levels used:    1
 17735 ;; Hardware stack levels required when called:    2
 17736 ;; This function calls:
 17737 ;;		Nothing
 17738 ;; This function is called by:
 17739 ;;		_main
 17740 ;; This function uses a non-reentrant model
 17741 ;;
 17742                           psect	text24,class=CODE,space=0,reloc=2,group=0
 17743                           	file	"fifo.c"
 17744                           	line	103
 17745                           global __ptext24
 17746                           __ptext24:
 17747  0042FE                     psect	text24
 17748                           	file	"fifo.c"
 17749                           	line	103
 17750                           	global	__size_of_init_atuadores
 17751                           	__size_of_init_atuadores	equ	__end_of_init_atuadores-_init_atuadores
 17752  0000                     	
 17753                           _init_atuadores:
 17754  0042FE                     ;incstack = 0
 17755                           	opt	stack 28
 17756                           	line	105
 17757                           	
 17758                           l5763:
 17759  0042FE                     ;fifo.c: 105:     atuador.A = 0;
 17760                           	bcf	((c:_atuador)),c,0
 17761  0042FE  9014               	line	106
 17762                           ;fifo.c: 106:     atuador.B = 0;
 17763                           	bcf	((c:_atuador)),c,1
 17764  004300  9214               	line	107
 17765                           ;fifo.c: 107:     atuador.C = 0;
 17766                           	bcf	((c:_atuador)),c,2
 17767  004302  9414               	line	108
 17768                           ;fifo.c: 108:     atuador.D = 0;
 17769                           	bcf	((c:_atuador)),c,3
 17770  004304  9614               	line	109
 17771                           	
 17772                           l269:
 17773  004306                     	return	;funcret
 17774  004306  0012               	opt stack 0
 17775                           GLOBAL	__end_of_init_atuadores
 17776                           	__end_of_init_atuadores:
 17777  004308                     	signat	_init_atuadores,89
 17778                           	global	_initSerialIO
 17779                           
 17780 ;; *************** function _initSerialIO *****************
 17781 ;; Defined at:
 17782 ;;		line 89 in file "serialIO.c"
 17783 ;; Parameters:    Size  Location     Type
 17784 ;;  ptrIn           2    0[COMRAM] PTR unsigned char 
 17785 ;;		 -> main@vetorIn(1), 
 17786 ;;  ptrOut          2    2[COMRAM] PTR unsigned char 
 17787 ;;		 -> main@vetorOut(1), 
 17788 ;;  length          1    4[COMRAM] unsigned char 
 17789 ;; Auto vars:     Size  Location     Type
 17790 ;;		None
 17791 ;; Return value:  Size  Location     Type
 17792 ;;                  1    wreg      void 
 17793 ;; Registers used:
 17794 ;;		wreg, status,2, status,0
 17795 ;; Tracked objects:
 17796 ;;		On entry : 0/0
 17797 ;;		On exit  : 0/0
 17798 ;;		Unchanged: 0/0
 17799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17800 ;;      Params:         5       0       0       0       0       0       0       0       0
 17801 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17802 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17803 ;;      Totals:         5       0       0       0       0       0       0       0       0
 17804 ;;Total ram usage:        5 bytes
 17805 ;; Hardware stack levels used:    1
 17806 ;; Hardware stack levels required when called:    2
 17807 ;; This function calls:
 17808 ;;		Nothing
 17809 ;; This function is called by:
 17810 ;;		_main
 17811 ;; This function uses a non-reentrant model
 17812 ;;
 17813                           psect	text25,class=CODE,space=0,reloc=2,group=0
 17814                           	file	"serialIO.c"
 17815                           	line	89
 17816                           global __ptext25
 17817                           __ptext25:
 17818  004010                     psect	text25
 17819                           	file	"serialIO.c"
 17820                           	line	89
 17821                           	global	__size_of_initSerialIO
 17822                           	__size_of_initSerialIO	equ	__end_of_initSerialIO-_initSerialIO
 17823  0000                     	
 17824                           _initSerialIO:
 17825  004010                     ;incstack = 0
 17826                           	opt	stack 28
 17827                           	line	91
 17828                           	
 17829                           l6109:
 17830  004010                     ;serialIO.c: 89: void initSerialIO( char * ptrIn, char * ptrOut, unsigned char length );
                                 serialIO.c: 90: {;serialIO.c: 91:     ADCON1 = 0xFF;
 17831                           	setf	((c:4033)),c	;volatile
 17832  004010  68C1               	line	93
 17833                           	
 17834                           l6111:
 17835  004012                     ;serialIO.c: 93:     ptrSerialIn = ptrIn;
 17836                           		movff	(c:initSerialIO@ptrIn),(c:_ptrSerialIn)
 17837  004012  C027  F00B         	movff	(c:initSerialIO@ptrIn+1),(c:_ptrSerialIn+1)
 17838  004016  C028  F00C         
 17839                           	line	94
 17840                           ;serialIO.c: 94:     ptrSerialOut = ptrOut;
 17841                           		movff	(c:initSerialIO@ptrOut),(c:_ptrSerialOut)
 17842  00401A  C029  F009         	movff	(c:initSerialIO@ptrOut+1),(c:_ptrSerialOut+1)
 17843  00401E  C02A  F00A         
 17844                           	line	95
 17845                           	
 17846                           l6113:
 17847  004022                     ;serialIO.c: 95:     lenSerialIO = length;
 17848                           	movff	(c:initSerialIO@length),(c:_lenSerialIO)
 17849  004022  C02B  F012         	line	97
 17850                           	
 17851                           l6115:
 17852  004026                     ;serialIO.c: 97:     PORTAbits.RA3 = 0;
 17853                           	bcf	((c:3968)),c,3	;volatile
 17854  004026  9680               	line	99
 17855                           	
 17856                           l6117:
 17857  004028                     ;serialIO.c: 99:     TRISAbits.TRISA3 = 0;
 17858                           	bcf	((c:3986)),c,3	;volatile
 17859  004028  9692               	line	102
 17860                           	
 17861                           l6119:
 17862  00402A                     ;serialIO.c: 102:     PORTAbits.RA2 = 0;
 17863                           	bcf	((c:3968)),c,2	;volatile
 17864  00402A  9480               	line	104
 17865                           	
 17866                           l6121:
 17867  00402C                     ;serialIO.c: 104:     TRISAbits.TRISA2 = 0;
 17868                           	bcf	((c:3986)),c,2	;volatile
 17869  00402C  9492               	line	107
 17870                           	
 17871                           l6123:
 17872  00402E                     ;serialIO.c: 107:     PORTAbits.RA0 = 0;
 17873                           	bcf	((c:3968)),c,0	;volatile
 17874  00402E  9080               	line	109
 17875                           	
 17876                           l6125:
 17877  004030                     ;serialIO.c: 109:     TRISAbits.TRISA0 = 0;
 17878                           	bcf	((c:3986)),c,0	;volatile
 17879  004030  9092               	line	112
 17880                           	
 17881                           l6127:
 17882  004032                     ;serialIO.c: 112:     PORTAbits.RA1 = 0;
 17883                           	bcf	((c:3968)),c,1	;volatile
 17884  004032  9280               	line	114
 17885                           	
 17886                           l6129:
 17887  004034                     ;serialIO.c: 114:     TRISAbits.TRISA1 = 1;
 17888                           	bsf	((c:3986)),c,1	;volatile
 17889  004034  8292               	line	117
 17890                           	
 17891                           l6131:
 17892  004036                     ;serialIO.c: 117:     SERIALIO.CLK = 0;
 17893                           	bcf	((c:3968)),c,2	;volatile
 17894  004036  9480               	line	118
 17895                           	
 17896                           l6133:
 17897  004038                     ;serialIO.c: 118:     SERIALIO.OUT = 0;
 17898                           	bcf	((c:3968)),c,0	;volatile
 17899  004038  9080               	line	119
 17900                           	
 17901                           l6135:
 17902  00403A                     ;serialIO.c: 119:     SERIALIO.SHLD = 1;
 17903                           	bsf	((c:3968)),c,3	;volatile
 17904  00403A  8680               	line	120
 17905                           	
 17906                           l940:
 17907  00403C                     	return	;funcret
 17908  00403C  0012               	opt stack 0
 17909                           GLOBAL	__end_of_initSerialIO
 17910                           	__end_of_initSerialIO:
 17911  00403E                     	signat	_initSerialIO,12409
 17912                           	global	_getContCiclos
 17913                           
 17914 ;; *************** function _getContCiclos *****************
 17915 ;; Defined at:
 17916 ;;		line 49 in file "fifo.c"
 17917 ;; Parameters:    Size  Location     Type
 17918 ;;		None
 17919 ;; Auto vars:     Size  Location     Type
 17920 ;;		None
 17921 ;; Return value:  Size  Location     Type
 17922 ;;                  2    0[COMRAM] unsigned int 
 17923 ;; Registers used:
 17924 ;;		None
 17925 ;; Tracked objects:
 17926 ;;		On entry : 0/0
 17927 ;;		On exit  : 0/0
 17928 ;;		Unchanged: 0/0
 17929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17930 ;;      Params:         2       0       0       0       0       0       0       0       0
 17931 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17932 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17933 ;;      Totals:         2       0       0       0       0       0       0       0       0
 17934 ;;Total ram usage:        2 bytes
 17935 ;; Hardware stack levels used:    1
 17936 ;; Hardware stack levels required when called:    2
 17937 ;; This function calls:
 17938 ;;		Nothing
 17939 ;; This function is called by:
 17940 ;;		_main
 17941 ;; This function uses a non-reentrant model
 17942 ;;
 17943                           psect	text26,class=CODE,space=0,reloc=2,group=0
 17944                           	file	"fifo.c"
 17945                           	line	49
 17946                           global __ptext26
 17947                           __ptext26:
 17948  004308                     psect	text26
 17949                           	file	"fifo.c"
 17950                           	line	49
 17951                           	global	__size_of_getContCiclos
 17952                           	__size_of_getContCiclos	equ	__end_of_getContCiclos-_getContCiclos
 17953  0000                     	
 17954                           _getContCiclos:
 17955  004308                     ;incstack = 0
 17956                           	opt	stack 28
 17957                           	line	51
 17958                           	
 17959                           l5757:
 17960  004308                     ;fifo.c: 51:     return(cont_ciclos);
 17961                           	movff	(c:_cont_ciclos),(c:?_getContCiclos)
 17962  004308  C00D  F027         	movff	(c:_cont_ciclos+1),(c:?_getContCiclos+1)
 17963  00430C  C00E  F028         	line	52
 17964                           	
 17965                           l239:
 17966  004310                     	return	;funcret
 17967  004310  0012               	opt stack 0
 17968                           GLOBAL	__end_of_getContCiclos
 17969                           	__end_of_getContCiclos:
 17970  004312                     	signat	_getContCiclos,90
 17971                           	global	_getCiclos
 17972                           
 17973 ;; *************** function _getCiclos *****************
 17974 ;; Defined at:
 17975 ;;		line 41 in file "fifo.c"
 17976 ;; Parameters:    Size  Location     Type
 17977 ;;		None
 17978 ;; Auto vars:     Size  Location     Type
 17979 ;;  aux             2    2[COMRAM] int 
 17980 ;; Return value:  Size  Location     Type
 17981 ;;                  2    0[COMRAM] unsigned int 
 17982 ;; Registers used:
 17983 ;;		wreg, status,2, status,0
 17984 ;; Tracked objects:
 17985 ;;		On entry : 0/0
 17986 ;;		On exit  : 0/0
 17987 ;;		Unchanged: 0/0
 17988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17989 ;;      Params:         2       0       0       0       0       0       0       0       0
 17990 ;;      Locals:         2       0       0       0       0       0       0       0       0
 17991 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17992 ;;      Totals:         4       0       0       0       0       0       0       0       0
 17993 ;;Total ram usage:        4 bytes
 17994 ;; Hardware stack levels used:    1
 17995 ;; Hardware stack levels required when called:    2
 17996 ;; This function calls:
 17997 ;;		Nothing
 17998 ;; This function is called by:
 17999 ;;		_main
 18000 ;; This function uses a non-reentrant model
 18001 ;;
 18002                           psect	text27,class=CODE,space=0,reloc=2,group=0
 18003                           	line	41
 18004                           global __ptext27
 18005                           __ptext27:
 18006  00412C                     psect	text27
 18007                           	file	"fifo.c"
 18008                           	line	41
 18009                           	global	__size_of_getCiclos
 18010                           	__size_of_getCiclos	equ	__end_of_getCiclos-_getCiclos
 18011  0000                     	
 18012                           _getCiclos:
 18013  00412C                     ;incstack = 0
 18014                           	opt	stack 28
 18015                           	line	43
 18016                           	
 18017                           l5747:
 18018  00412C                     ;fifo.c: 43:     int aux = fila[1];
 18019                           	movff	0+((c:_fila)+01h),(c:getCiclos@aux)
 18020  00412C  C016  F029         	clrf	((c:getCiclos@aux+1)),c
 18021  004130  6A2A               	line	44
 18022                           	
 18023                           l5749:
 18024  004132                     ;fifo.c: 44:     aux <<= 8;
 18025                           	movf	((c:getCiclos@aux)),c,w
 18026  004132  5029               	movwf	((c:getCiclos@aux+1)),c
 18027  004134  6E2A               	clrf	((c:getCiclos@aux)),c
 18028  004136  6A29               	line	45
 18029                           	
 18030                           l5751:
 18031  004138                     ;fifo.c: 45:     aux +=fila[0];
 18032                           	movf	((c:_fila)),c,w
 18033  004138  5015               	addwf	((c:getCiclos@aux)),c
 18034  00413A  2629               	movlw	0
 18035  00413C  0E00               	addwfc	((c:getCiclos@aux+1)),c
 18036  00413E  222A               	line	46
 18037                           	
 18038                           l5753:
 18039  004140                     ;fifo.c: 46:     return(aux);
 18040                           	movff	(c:getCiclos@aux),(c:?_getCiclos)
 18041  004140  C029  F027         	movff	(c:getCiclos@aux+1),(c:?_getCiclos+1)
 18042  004144  C02A  F028         	goto	l236
 18043  004148  EFA6  F020         	
 18044                           l5755:
 18045  00414C                     	line	47
 18046                           	
 18047                           l236:
 18048  00414C                     	return	;funcret
 18049  00414C  0012               	opt stack 0
 18050                           GLOBAL	__end_of_getCiclos
 18051                           	__end_of_getCiclos:
 18052  00414E                     	signat	_getCiclos,90
 18053                           	global	_formatar_receitas
 18054                           
 18055 ;; *************** function _formatar_receitas *****************
 18056 ;; Defined at:
 18057 ;;		line 101 in file "eeprom.c"
 18058 ;; Parameters:    Size  Location     Type
 18059 ;;		None
 18060 ;; Auto vars:     Size  Location     Type
 18061 ;;  i               1    2[COMRAM] unsigned char 
 18062 ;; Return value:  Size  Location     Type
 18063 ;;                  1    wreg      void 
 18064 ;; Registers used:
 18065 ;;		wreg, status,2, status,0, cstack
 18066 ;; Tracked objects:
 18067 ;;		On entry : 0/0
 18068 ;;		On exit  : 0/0
 18069 ;;		Unchanged: 0/0
 18070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18071 ;;      Params:         0       0       0       0       0       0       0       0       0
 18072 ;;      Locals:         1       0       0       0       0       0       0       0       0
 18073 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18074 ;;      Totals:         1       0       0       0       0       0       0       0       0
 18075 ;;Total ram usage:        1 bytes
 18076 ;; Hardware stack levels used:    1
 18077 ;; Hardware stack levels required when called:    3
 18078 ;; This function calls:
 18079 ;;		_EEPROM_write
 18080 ;; This function is called by:
 18081 ;;		_main
 18082 ;; This function uses a non-reentrant model
 18083 ;;
 18084                           psect	text28,class=CODE,space=0,reloc=2,group=0
 18085                           	file	"eeprom.c"
 18086                           	line	101
 18087                           global __ptext28
 18088                           __ptext28:
 18089  004170                     psect	text28
 18090                           	file	"eeprom.c"
 18091                           	line	101
 18092                           	global	__size_of_formatar_receitas
 18093                           	__size_of_formatar_receitas	equ	__end_of_formatar_receitas-_formatar_receitas
 18094  0000                     	
 18095                           _formatar_receitas:
 18096  004170                     ;incstack = 0
 18097                           	opt	stack 27
 18098                           	line	103
 18099                           	
 18100                           l5733:
 18101  004170                     ;eeprom.c: 103:     for( char i = 0;i<256;i++)
 18102                           	movlw	low(0)
 18103  004170  0E00               	movwf	((c:formatar_receitas@i)),c
 18104  004172  6E29               	goto	l5737
 18105  004174  EFBE  F020         	
 18106                           l5735:
 18107  004178                     	goto	l195
 18108  004178  EFC6  F020         	
 18109                           l193:
 18110  00417C                     	line	104
 18111                           	
 18112                           l5737:
 18113  00417C                     ;eeprom.c: 104:            EEPROM_write(i,0);
 18114                           	movlw	low(0)
 18115  00417C  0E00               	movwf	((c:EEPROM_write@data)),c
 18116  00417E  6E27               	movf	((c:formatar_receitas@i)),c,w
 18117  004180  5029               	
 18118                           	call	_EEPROM_write
 18119  004182  ECA3  F01F         	
 18120                           l5739:
 18121  004186                     	incf	((c:formatar_receitas@i)),c
 18122  004186  2A29               	goto	l5737
 18123  004188  EFBE  F020         	
 18124                           l194:
 18125  00418C                     	line	106
 18126                           	
 18127                           l195:
 18128  00418C                     	return	;funcret
 18129  00418C  0012               	opt stack 0
 18130                           GLOBAL	__end_of_formatar_receitas
 18131                           	__end_of_formatar_receitas:
 18132  00418E                     	signat	_formatar_receitas,89
 18133                           	global	_fifo_tam
 18134                           
 18135 ;; *************** function _fifo_tam *****************
 18136 ;; Defined at:
 18137 ;;		line 317 in file "fifo.c"
 18138 ;; Parameters:    Size  Location     Type
 18139 ;;		None
 18140 ;; Auto vars:     Size  Location     Type
 18141 ;;		None
 18142 ;; Return value:  Size  Location     Type
 18143 ;;                  1    wreg      unsigned char 
 18144 ;; Registers used:
 18145 ;;		wreg
 18146 ;; Tracked objects:
 18147 ;;		On entry : 0/0
 18148 ;;		On exit  : 0/0
 18149 ;;		Unchanged: 0/0
 18150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18151 ;;      Params:         0       0       0       0       0       0       0       0       0
 18152 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18153 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18154 ;;      Totals:         0       0       0       0       0       0       0       0       0
 18155 ;;Total ram usage:        0 bytes
 18156 ;; Hardware stack levels used:    1
 18157 ;; Hardware stack levels required when called:    2
 18158 ;; This function calls:
 18159 ;;		Nothing
 18160 ;; This function is called by:
 18161 ;;		_main
 18162 ;; This function uses a non-reentrant model
 18163 ;;
 18164                           psect	text29,class=CODE,space=0,reloc=2,group=0
 18165                           	file	"fifo.c"
 18166                           	line	317
 18167                           global __ptext29
 18168                           __ptext29:
 18169  004324                     psect	text29
 18170                           	file	"fifo.c"
 18171                           	line	317
 18172                           	global	__size_of_fifo_tam
 18173                           	__size_of_fifo_tam	equ	__end_of_fifo_tam-_fifo_tam
 18174  0000                     	
 18175                           _fifo_tam:
 18176  004324                     ;incstack = 0
 18177                           	opt	stack 28
 18178                           	line	319
 18179                           	
 18180                           l5875:
 18181  004324                     ;fifo.c: 319:     return( 18 );
 18182                           	movlw	(012h)&0ffh
 18183  004324  0E12               	goto	l370
 18184  004326  EF95  F021         	
 18185                           l5877:
 18186  00432A                     	line	320
 18187                           	
 18188                           l370:
 18189  00432A                     	return	;funcret
 18190  00432A  0012               	opt stack 0
 18191                           GLOBAL	__end_of_fifo_tam
 18192                           	__end_of_fifo_tam:
 18193  00432C                     	signat	_fifo_tam,89
 18194                           	global	_fifo_print
 18195                           
 18196 ;; *************** function _fifo_print *****************
 18197 ;; Defined at:
 18198 ;;		line 342 in file "fifo.c"
 18199 ;; Parameters:    Size  Location     Type
 18200 ;;		None
 18201 ;; Auto vars:     Size  Location     Type
 18202 ;;  comando         1   16[COMRAM] unsigned char 
 18203 ;;  atraso          1   15[COMRAM] unsigned char 
 18204 ;;  i               1   14[COMRAM] unsigned char 
 18205 ;;  indPrint        1   13[COMRAM] unsigned char 
 18206 ;;  completar       1   12[COMRAM] unsigned char 
 18207 ;; Return value:  Size  Location     Type
 18208 ;;                  1    wreg      void 
 18209 ;; Registers used:
 18210 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18211 ;; Tracked objects:
 18212 ;;		On entry : 0/0
 18213 ;;		On exit  : 0/0
 18214 ;;		Unchanged: 0/0
 18215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18216 ;;      Params:         0       0       0       0       0       0       0       0       0
 18217 ;;      Locals:         7       0       0       0       0       0       0       0       0
 18218 ;;      Temps:          2       0       0       0       0       0       0       0       0
 18219 ;;      Totals:         9       0       0       0       0       0       0       0       0
 18220 ;;Total ram usage:        9 bytes
 18221 ;; Hardware stack levels used:    1
 18222 ;; Hardware stack levels required when called:    4
 18223 ;; This function calls:
 18224 ;;		___awdiv
 18225 ;;		___awmod
 18226 ;;		_decodifica
 18227 ;;		_dispLCD_dataReg
 18228 ;;		_dispLCD_lincol
 18229 ;; This function is called by:
 18230 ;;		_main
 18231 ;; This function uses a non-reentrant model
 18232 ;;
 18233                           psect	text30,class=CODE,space=0,reloc=2,group=0
 18234                           	line	342
 18235                           global __ptext30
 18236                           __ptext30:
 18237  002192                     psect	text30
 18238                           	file	"fifo.c"
 18239                           	line	342
 18240                           	global	__size_of_fifo_print
 18241                           	__size_of_fifo_print	equ	__end_of_fifo_print-_fifo_print
 18242  0000                     	
 18243                           _fifo_print:
 18244  002192                     ;incstack = 0
 18245                           	opt	stack 26
 18246                           	line	344
 18247                           	
 18248                           l5893:
 18249  002192                     ;fifo.c: 344:     char completar = 0;
 18250                           	movlw	low(0)
 18251  002192  0E00               	movwf	((c:fifo_print@completar)),c
 18252  002194  6E33               	line	345
 18253                           ;fifo.c: 345:     char comando = 0;
 18254                           	movlw	low(0)
 18255  002196  0E00               	movwf	((c:fifo_print@comando)),c
 18256  002198  6E37               	line	346
 18257                           ;fifo.c: 346:     char atraso = 0;
 18258                           	movlw	low(0)
 18259  00219A  0E00               	movwf	((c:fifo_print@atraso)),c
 18260  00219C  6E36               	line	347
 18261                           ;fifo.c: 347:     char i = 0;
 18262                           	movlw	low(0)
 18263  00219E  0E00               	movwf	((c:fifo_print@i)),c
 18264  0021A0  6E35               	line	348
 18265                           	
 18266                           l5895:
 18267  0021A2                     ;fifo.c: 348:     char indPrint = ind_print;
 18268                           	movff	(c:_ind_print),(c:fifo_print@indPrint)
 18269  0021A2  C058  F034         	line	350
 18270                           	
 18271                           l5897:
 18272  0021A6                     ;fifo.c: 350:     dispLCD_lincol(0, 0);
 18273                           	movlw	low(0)
 18274  0021A6  0E00               	movwf	((c:dispLCD_lincol@col)),c
 18275  0021A8  6E29               	movlw	(0)&0ffh
 18276  0021AA  0E00               	
 18277                           	call	_dispLCD_lincol
 18278  0021AC  EC5C  F01D         	goto	l5899
 18279  0021B0  EFDA  F010         	line	351
 18280                           ;fifo.c: 351:     do
 18281                           	
 18282                           l384:
 18283  0021B4                     	line	353
 18284                           	
 18285                           l5899:
 18286  0021B4                     ;fifo.c: 352:     {;fifo.c: 353:         if( completar )
 18287                           	movf	((c:fifo_print@completar)),c,w
 18288  0021B4  5033               	btfsc	status,2
 18289  0021B6  B4D8               	goto	u4291
 18290  0021B8  EFE0  F010         	goto	u4290
 18291  0021BC  EFE2  F010         u4291:
 18292  0021C0                     	goto	l5905
 18293  0021C0  EFE8  F010         u4290:
 18294  0021C4                     	line	355
 18295                           	
 18296                           l5901:
 18297  0021C4                     ;fifo.c: 354:         {;fifo.c: 355:             dispLCD_dataReg(' ');
 18298                           	movlw	(020h)&0ffh
 18299  0021C4  0E20               	
 18300                           	call	_dispLCD_dataReg
 18301  0021C6  EC97  F01E         	line	356
 18302                           	
 18303                           l5903:
 18304  0021CA                     ;fifo.c: 356:             ++i;
 18305                           	incf	((c:fifo_print@i)),c
 18306  0021CA  2A35               	line	357
 18307                           ;fifo.c: 357:         }
 18308                           	goto	l6019
 18309  0021CC  EF66  F012         	line	358
 18310                           ;fifo.c: 358:         else
 18311                           	
 18312                           l385:
 18313  0021D0                     	line	360
 18314                           	
 18315                           l5905:
 18316  0021D0                     ;fifo.c: 359:         {;fifo.c: 360:             comando = fila[indPrint++];
 18317                           	movf	((c:fifo_print@indPrint)),c,w
 18318  0021D0  5034               	mullw	01h
 18319  0021D2  0D01               	movlw	low(_fila)
 18320  0021D4  0E15               	addwf	(prodl),c,w
 18321  0021D6  24F3               	movwf	c:fsr2l
 18322  0021D8  6ED9               	movlw	high(_fila)
 18323  0021DA  0E00               	addwfc	prod+1,w
 18324  0021DC  20F4               	movwf	1+c:fsr2l
 18325  0021DE  6EDA               	movf	indf2,w
 18326  0021E0  50DF               	movwf	((c:fifo_print@comando)),c
 18327  0021E2  6E37               	
 18328                           l5907:
 18329  0021E4                     	incf	((c:fifo_print@indPrint)),c
 18330  0021E4  2A34               	line	362
 18331                           	
 18332                           l5909:
 18333  0021E6                     ;fifo.c: 362:             if( comando == 0 )
 18334                           	movf	((c:fifo_print@comando)),c,w
 18335  0021E6  5037               	btfss	status,2
 18336  0021E8  A4D8               	goto	u4301
 18337  0021EA  EFF9  F010         	goto	u4300
 18338  0021EE  EFFB  F010         u4301:
 18339  0021F2                     	goto	l5913
 18340  0021F2  EFFF  F010         u4300:
 18341  0021F6                     	line	363
 18342                           	
 18343                           l5911:
 18344  0021F6                     ;fifo.c: 363:                 completar = 1;
 18345                           	movlw	low(01h)
 18346  0021F6  0E01               	movwf	((c:fifo_print@completar)),c
 18347  0021F8  6E33               	goto	l6019
 18348  0021FA  EF66  F012         	line	364
 18349                           ;fifo.c: 364:             else if ( comando <= 0x64 )
 18350                           	
 18351                           l387:
 18352  0021FE                     	
 18353                           l5913:
 18354  0021FE                     		movlw	065h-0
 18355  0021FE  0E65               	cpfslt	((c:fifo_print@comando)),c
 18356  002200  6037               	goto	u4311
 18357  002202  EF05  F011         	goto	u4310
 18358  002206  EF07  F011         
 18359                           u4311:
 18360  00220A                     	goto	l5945
 18361  00220A  EF5E  F011         u4310:
 18362  00220E                     	line	366
 18363                           	
 18364                           l5915:
 18365  00220E                     ;fifo.c: 365:             {;fifo.c: 366:                 atraso = comando;
 18366                           	movff	(c:fifo_print@comando),(c:fifo_print@atraso)
 18367  00220E  C037  F036         	line	367
 18368                           	
 18369                           l5917:
 18370  002212                     ;fifo.c: 367:                 if( atraso >= 100 )
 18371                           		movlw	064h-1
 18372  002212  0E63               	cpfsgt	((c:fifo_print@atraso)),c
 18373  002214  6436               	goto	u4321
 18374  002216  EF0F  F011         	goto	u4320
 18375  00221A  EF11  F011         
 18376                           u4321:
 18377  00221E                     	goto	l5931
 18378  00221E  EF30  F011         u4320:
 18379  002222                     	line	369
 18380                           	
 18381                           l5919:
 18382  002222                     ;fifo.c: 368:                 {;fifo.c: 369:                     dispLCD_dataReg('1');
 18383                           	movlw	(031h)&0ffh
 18384  002222  0E31               	
 18385                           	call	_dispLCD_dataReg
 18386  002224  EC97  F01E         	line	370
 18387                           	
 18388                           l5921:
 18389  002228                     ;fifo.c: 370:                     ++i;
 18390                           	incf	((c:fifo_print@i)),c
 18391  002228  2A35               	line	371
 18392                           	
 18393                           l5923:
 18394  00222A                     ;fifo.c: 371:                     atraso %= 100;
 18395                           	movff	(c:fifo_print@atraso),(c:___awmod@dividend)
 18396  00222A  C036  F027         	clrf	((c:___awmod@dividend+1)),c
 18397  00222E  6A28               	movlw	high(064h)
 18398  002230  0E00               	movwf	((c:___awmod@divisor+1)),c
 18399  002232  6E2A               	movlw	low(064h)
 18400  002234  0E64               	movwf	((c:___awmod@divisor)),c
 18401  002236  6E29               	call	___awmod	;wreg free
 18402  002238  EC0E  F019         	movf	(0+?___awmod),c,w
 18403  00223C  5027               	movwf	((c:fifo_print@atraso)),c
 18404  00223E  6E36               	line	372
 18405                           	
 18406                           l5925:
 18407  002240                     ;fifo.c: 372:                     if(atraso < 10)
 18408                           		movlw	0Ah-0
 18409  002240  0E0A               	cpfslt	((c:fifo_print@atraso)),c
 18410  002242  6036               	goto	u4331
 18411  002244  EF26  F011         	goto	u4330
 18412  002248  EF28  F011         
 18413                           u4331:
 18414  00224C                     	goto	l5931
 18415  00224C  EF30  F011         u4330:
 18416  002250                     	line	374
 18417                           	
 18418                           l5927:
 18419  002250                     ;fifo.c: 373:                     {;fifo.c: 374:                         dispLCD_dataReg
                                 ('0');
 18420                           	movlw	(030h)&0ffh
 18421  002250  0E30               	
 18422                           	call	_dispLCD_dataReg
 18423  002252  EC97  F01E         	line	375
 18424                           	
 18425                           l5929:
 18426  002256                     ;fifo.c: 375:                         ++i;
 18427                           	incf	((c:fifo_print@i)),c
 18428  002256  2A35               	goto	l5931
 18429  002258  EF30  F011         	line	376
 18430                           ;fifo.c: 376:                     }
 18431                           	
 18432                           l391:
 18433  00225C                     	goto	l5931
 18434  00225C  EF30  F011         	line	377
 18435                           ;fifo.c: 377:                 }
 18436                           	
 18437                           l390:
 18438  002260                     	line	378
 18439                           	
 18440                           l5931:
 18441  002260                     ;fifo.c: 378:                 if( atraso >= 10 )
 18442                           		movlw	0Ah-1
 18443  002260  0E09               	cpfsgt	((c:fifo_print@atraso)),c
 18444  002262  6436               	goto	u4341
 18445  002264  EF36  F011         	goto	u4340
 18446  002268  EF38  F011         
 18447                           u4341:
 18448  00226C                     	goto	l5939
 18449  00226C  EF53  F011         u4340:
 18450  002270                     	line	380
 18451                           	
 18452                           l5933:
 18453  002270                     ;fifo.c: 379:                 {;fifo.c: 380:                     dispLCD_dataReg(atraso/
                                 10 + '0');
 18454                           	movff	(c:fifo_print@atraso),(c:___awdiv@dividend)
 18455  002270  C036  F027         	clrf	((c:___awdiv@dividend+1)),c
 18456  002274  6A28               	movlw	high(0Ah)
 18457  002276  0E00               	movwf	((c:___awdiv@divisor+1)),c
 18458  002278  6E2A               	movlw	low(0Ah)
 18459  00227A  0E0A               	movwf	((c:___awdiv@divisor)),c
 18460  00227C  6E29               	call	___awdiv	;wreg free
 18461  00227E  ECB3  F017         	movf	(0+?___awdiv),c,w
 18462  002282  5027               	addlw	low(030h)
 18463  002284  0F30               	
 18464                           	call	_dispLCD_dataReg
 18465  002286  EC97  F01E         	line	381
 18466                           	
 18467                           l5935:
 18468  00228A                     ;fifo.c: 381:                     ++i;
 18469                           	incf	((c:fifo_print@i)),c
 18470  00228A  2A35               	line	382
 18471                           	
 18472                           l5937:
 18473  00228C                     ;fifo.c: 382:                     atraso %= 10;
 18474                           	movff	(c:fifo_print@atraso),(c:___awmod@dividend)
 18475  00228C  C036  F027         	clrf	((c:___awmod@dividend+1)),c
 18476  002290  6A28               	movlw	high(0Ah)
 18477  002292  0E00               	movwf	((c:___awmod@divisor+1)),c
 18478  002294  6E2A               	movlw	low(0Ah)
 18479  002296  0E0A               	movwf	((c:___awmod@divisor)),c
 18480  002298  6E29               	call	___awmod	;wreg free
 18481  00229A  EC0E  F019         	movf	(0+?___awmod),c,w
 18482  00229E  5027               	movwf	((c:fifo_print@atraso)),c
 18483  0022A0  6E36               	goto	l5939
 18484  0022A2  EF53  F011         	line	383
 18485                           ;fifo.c: 383:                 }
 18486                           	
 18487                           l392:
 18488  0022A6                     	line	385
 18489                           	
 18490                           l5939:
 18491  0022A6                     ;fifo.c: 385:                 dispLCD_dataReg(atraso + '0');
 18492                           	movf	((c:fifo_print@atraso)),c,w
 18493  0022A6  5036               	addlw	low(030h)
 18494  0022A8  0F30               	
 18495                           	call	_dispLCD_dataReg
 18496  0022AA  EC97  F01E         	line	386
 18497                           	
 18498                           l5941:
 18499  0022AE                     ;fifo.c: 386:                 ++i;
 18500                           	incf	((c:fifo_print@i)),c
 18501  0022AE  2A35               	line	388
 18502                           ;fifo.c: 388:                 dispLCD_dataReg('%');
 18503                           	movlw	(025h)&0ffh
 18504  0022B0  0E25               	
 18505                           	call	_dispLCD_dataReg
 18506  0022B2  EC97  F01E         	line	389
 18507                           	
 18508                           l5943:
 18509  0022B6                     ;fifo.c: 389:                 ++i;
 18510                           	incf	((c:fifo_print@i)),c
 18511  0022B6  2A35               	line	390
 18512                           ;fifo.c: 390:             }
 18513                           	goto	l6019
 18514  0022B8  EF66  F012         	line	392
 18515                           ;fifo.c: 392:             else if( comando > 0x64 && comando <= 0xDC)
 18516                           	
 18517                           l389:
 18518  0022BC                     	
 18519                           l5945:
 18520  0022BC                     		movlw	065h-1
 18521  0022BC  0E64               	cpfsgt	((c:fifo_print@comando)),c
 18522  0022BE  6437               	goto	u4351
 18523  0022C0  EF64  F011         	goto	u4350
 18524  0022C4  EF66  F011         
 18525                           u4351:
 18526  0022C8                     	goto	l5981
 18527  0022C8  EFCB  F011         u4350:
 18528  0022CC                     	
 18529                           l5947:
 18530  0022CC                     		movlw	0DDh-0
 18531  0022CC  0EDD               	cpfslt	((c:fifo_print@comando)),c
 18532  0022CE  6037               	goto	u4361
 18533  0022D0  EF6C  F011         	goto	u4360
 18534  0022D4  EF6E  F011         
 18535                           u4361:
 18536  0022D8                     	goto	l5981
 18537  0022D8  EFCB  F011         u4360:
 18538  0022DC                     	line	394
 18539                           	
 18540                           l5949:
 18541  0022DC                     ;fifo.c: 393:             {;fifo.c: 394:                 decodifica(&comando);
 18542                           		movlw	low(fifo_print@comando)
 18543  0022DC  0E37               	movwf	((c:decodifica@d)),c
 18544  0022DE  6E27               	movlw	high(fifo_print@comando)
 18545  0022E0  0E00               	movwf	((c:decodifica@d+1)),c
 18546  0022E2  6E28               
 18547                           	call	_decodifica	;wreg free
 18548  0022E4  ECC7  F014         	line	395
 18549                           	
 18550                           l5951:
 18551  0022E8                     ;fifo.c: 395:                 atraso = comando;
 18552                           	movff	(c:fifo_print@comando),(c:fifo_print@atraso)
 18553  0022E8  C037  F036         	line	397
 18554                           	
 18555                           l5953:
 18556  0022EC                     ;fifo.c: 397:                 if( atraso >= 100 )
 18557                           		movlw	064h-1
 18558  0022EC  0E63               	cpfsgt	((c:fifo_print@atraso)),c
 18559  0022EE  6436               	goto	u4371
 18560  0022F0  EF7C  F011         	goto	u4370
 18561  0022F4  EF7E  F011         
 18562                           u4371:
 18563  0022F8                     	goto	l5967
 18564  0022F8  EF9D  F011         u4370:
 18565  0022FC                     	line	399
 18566                           	
 18567                           l5955:
 18568  0022FC                     ;fifo.c: 398:                 {;fifo.c: 399:                     dispLCD_dataReg('1');
 18569                           	movlw	(031h)&0ffh
 18570  0022FC  0E31               	
 18571                           	call	_dispLCD_dataReg
 18572  0022FE  EC97  F01E         	line	400
 18573                           	
 18574                           l5957:
 18575  002302                     ;fifo.c: 400:                     ++i;
 18576                           	incf	((c:fifo_print@i)),c
 18577  002302  2A35               	line	401
 18578                           	
 18579                           l5959:
 18580  002304                     ;fifo.c: 401:                     atraso %= 100;
 18581                           	movff	(c:fifo_print@atraso),(c:___awmod@dividend)
 18582  002304  C036  F027         	clrf	((c:___awmod@dividend+1)),c
 18583  002308  6A28               	movlw	high(064h)
 18584  00230A  0E00               	movwf	((c:___awmod@divisor+1)),c
 18585  00230C  6E2A               	movlw	low(064h)
 18586  00230E  0E64               	movwf	((c:___awmod@divisor)),c
 18587  002310  6E29               	call	___awmod	;wreg free
 18588  002312  EC0E  F019         	movf	(0+?___awmod),c,w
 18589  002316  5027               	movwf	((c:fifo_print@atraso)),c
 18590  002318  6E36               	line	402
 18591                           	
 18592                           l5961:
 18593  00231A                     ;fifo.c: 402:                     if(atraso < 10)
 18594                           		movlw	0Ah-0
 18595  00231A  0E0A               	cpfslt	((c:fifo_print@atraso)),c
 18596  00231C  6036               	goto	u4381
 18597  00231E  EF93  F011         	goto	u4380
 18598  002322  EF95  F011         
 18599                           u4381:
 18600  002326                     	goto	l5967
 18601  002326  EF9D  F011         u4380:
 18602  00232A                     	line	404
 18603                           	
 18604                           l5963:
 18605  00232A                     ;fifo.c: 403:                     {;fifo.c: 404:                         dispLCD_dataReg
                                 ('0');
 18606                           	movlw	(030h)&0ffh
 18607  00232A  0E30               	
 18608                           	call	_dispLCD_dataReg
 18609  00232C  EC97  F01E         	line	405
 18610                           	
 18611                           l5965:
 18612  002330                     ;fifo.c: 405:                         ++i;
 18613                           	incf	((c:fifo_print@i)),c
 18614  002330  2A35               	goto	l5967
 18615  002332  EF9D  F011         	line	406
 18616                           ;fifo.c: 406:                     }
 18617                           	
 18618                           l396:
 18619  002336                     	goto	l5967
 18620  002336  EF9D  F011         	line	407
 18621                           ;fifo.c: 407:                 }
 18622                           	
 18623                           l395:
 18624  00233A                     	line	408
 18625                           	
 18626                           l5967:
 18627  00233A                     ;fifo.c: 408:                 if( atraso >= 10 )
 18628                           		movlw	0Ah-1
 18629  00233A  0E09               	cpfsgt	((c:fifo_print@atraso)),c
 18630  00233C  6436               	goto	u4391
 18631  00233E  EFA3  F011         	goto	u4390
 18632  002342  EFA5  F011         
 18633                           u4391:
 18634  002346                     	goto	l5975
 18635  002346  EFC0  F011         u4390:
 18636  00234A                     	line	410
 18637                           	
 18638                           l5969:
 18639  00234A                     ;fifo.c: 409:                 {;fifo.c: 410:                     dispLCD_dataReg(atraso/
                                 10 + '0');
 18640                           	movff	(c:fifo_print@atraso),(c:___awdiv@dividend)
 18641  00234A  C036  F027         	clrf	((c:___awdiv@dividend+1)),c
 18642  00234E  6A28               	movlw	high(0Ah)
 18643  002350  0E00               	movwf	((c:___awdiv@divisor+1)),c
 18644  002352  6E2A               	movlw	low(0Ah)
 18645  002354  0E0A               	movwf	((c:___awdiv@divisor)),c
 18646  002356  6E29               	call	___awdiv	;wreg free
 18647  002358  ECB3  F017         	movf	(0+?___awdiv),c,w
 18648  00235C  5027               	addlw	low(030h)
 18649  00235E  0F30               	
 18650                           	call	_dispLCD_dataReg
 18651  002360  EC97  F01E         	line	411
 18652                           	
 18653                           l5971:
 18654  002364                     ;fifo.c: 411:                     ++i;
 18655                           	incf	((c:fifo_print@i)),c
 18656  002364  2A35               	line	412
 18657                           	
 18658                           l5973:
 18659  002366                     ;fifo.c: 412:                     atraso %= 10;
 18660                           	movff	(c:fifo_print@atraso),(c:___awmod@dividend)
 18661  002366  C036  F027         	clrf	((c:___awmod@dividend+1)),c
 18662  00236A  6A28               	movlw	high(0Ah)
 18663  00236C  0E00               	movwf	((c:___awmod@divisor+1)),c
 18664  00236E  6E2A               	movlw	low(0Ah)
 18665  002370  0E0A               	movwf	((c:___awmod@divisor)),c
 18666  002372  6E29               	call	___awmod	;wreg free
 18667  002374  EC0E  F019         	movf	(0+?___awmod),c,w
 18668  002378  5027               	movwf	((c:fifo_print@atraso)),c
 18669  00237A  6E36               	goto	l5975
 18670  00237C  EFC0  F011         	line	413
 18671                           ;fifo.c: 413:                 }
 18672                           	
 18673                           l397:
 18674  002380                     	line	415
 18675                           	
 18676                           l5975:
 18677  002380                     ;fifo.c: 415:                 dispLCD_dataReg(atraso + '0');
 18678                           	movf	((c:fifo_print@atraso)),c,w
 18679  002380  5036               	addlw	low(030h)
 18680  002382  0F30               	
 18681                           	call	_dispLCD_dataReg
 18682  002384  EC97  F01E         	line	416
 18683                           	
 18684                           l5977:
 18685  002388                     ;fifo.c: 416:                 ++i;
 18686                           	incf	((c:fifo_print@i)),c
 18687  002388  2A35               	line	418
 18688                           ;fifo.c: 418:                 dispLCD_dataReg('s');
 18689                           	movlw	(073h)&0ffh
 18690  00238A  0E73               	
 18691                           	call	_dispLCD_dataReg
 18692  00238C  EC97  F01E         	line	419
 18693                           	
 18694                           l5979:
 18695  002390                     ;fifo.c: 419:                 ++i;
 18696                           	incf	((c:fifo_print@i)),c
 18697  002390  2A35               	line	420
 18698                           ;fifo.c: 420:             }
 18699                           	goto	l6019
 18700  002392  EF66  F012         	line	421
 18701                           ;fifo.c: 421:             else if( comando > 0xDC && comando < 0xFE )
 18702                           	
 18703                           l394:
 18704  002396                     	
 18705                           l5981:
 18706  002396                     		movlw	0DDh-1
 18707  002396  0EDC               	cpfsgt	((c:fifo_print@comando)),c
 18708  002398  6437               	goto	u4401
 18709  00239A  EFD1  F011         	goto	u4400
 18710  00239E  EFD3  F011         
 18711                           u4401:
 18712  0023A2                     	goto	l6005
 18713  0023A2  EF40  F012         u4400:
 18714  0023A6                     	
 18715                           l5983:
 18716  0023A6                     		movlw	0FEh-0
 18717  0023A6  0EFE               	cpfslt	((c:fifo_print@comando)),c
 18718  0023A8  6037               	goto	u4411
 18719  0023AA  EFD9  F011         	goto	u4410
 18720  0023AE  EFDB  F011         
 18721                           u4411:
 18722  0023B2                     	goto	l6005
 18723  0023B2  EF40  F012         u4410:
 18724  0023B6                     	line	423
 18725                           	
 18726                           l5985:
 18727  0023B6                     ;fifo.c: 422:             {;fifo.c: 423:                 decodifica(&comando);
 18728                           		movlw	low(fifo_print@comando)
 18729  0023B6  0E37               	movwf	((c:decodifica@d)),c
 18730  0023B8  6E27               	movlw	high(fifo_print@comando)
 18731  0023BA  0E00               	movwf	((c:decodifica@d+1)),c
 18732  0023BC  6E28               
 18733                           	call	_decodifica	;wreg free
 18734  0023BE  ECC7  F014         	line	424
 18735                           ;fifo.c: 424:                 switch( comando )
 18736                           	goto	l6003
 18737  0023C2  EF11  F012         	line	426
 18738                           ;fifo.c: 425:                 {;fifo.c: 426:                     case 'A':
 18739                           	
 18740                           l401:
 18741  0023C6                     	goto	l5987
 18742  0023C6  EFF1  F011         	line	427
 18743                           ;fifo.c: 427:                     case 'B':
 18744                           	
 18745                           l402:
 18746  0023CA                     	goto	l5987
 18747  0023CA  EFF1  F011         	line	428
 18748                           ;fifo.c: 428:                     case 'C':
 18749                           	
 18750                           l403:
 18751  0023CE                     	goto	l5987
 18752  0023CE  EFF1  F011         	line	429
 18753                           ;fifo.c: 429:                     case 'D':
 18754                           	
 18755                           l404:
 18756  0023D2                     	goto	l5987
 18757  0023D2  EFF1  F011         	line	430
 18758                           ;fifo.c: 430:                     case 'a':
 18759                           	
 18760                           l405:
 18761  0023D6                     	goto	l5987
 18762  0023D6  EFF1  F011         	line	431
 18763                           ;fifo.c: 431:                     case 'b':
 18764                           	
 18765                           l406:
 18766  0023DA                     	goto	l5987
 18767  0023DA  EFF1  F011         	line	432
 18768                           ;fifo.c: 432:                     case 'c':
 18769                           	
 18770                           l407:
 18771  0023DE                     	goto	l5987
 18772  0023DE  EFF1  F011         	line	433
 18773                           ;fifo.c: 433:                     case 'd':
 18774                           	
 18775                           l408:
 18776  0023E2                     	line	434
 18777                           	
 18778                           l5987:
 18779  0023E2                     ;fifo.c: 434:                                 dispLCD_dataReg( comando & ~0x20 );
 18780                           	movf	((c:fifo_print@comando)),c,w
 18781  0023E2  5037               	andlw	low(0DFh)
 18782  0023E4  0BDF               	
 18783                           	call	_dispLCD_dataReg
 18784  0023E6  EC97  F01E         	line	435
 18785                           	
 18786                           l5989:
 18787  0023EA                     ;fifo.c: 435:                                 ++i;
 18788                           	incf	((c:fifo_print@i)),c
 18789  0023EA  2A35               	line	436
 18790                           	
 18791                           l5991:
 18792  0023EC                     ;fifo.c: 436:                                 dispLCD_dataReg( comando & 0x20 ? '-': '+'
                                  );
 18793                           	
 18794                           	btfsc	((c:fifo_print@comando)),c,(5)&7
 18795  0023EC  BA37               	goto	u4421
 18796  0023EE  EFFB  F011         	goto	u4420
 18797  0023F2  EFFD  F011         u4421:
 18798  0023F6                     	goto	l5995
 18799  0023F6  EF03  F012         u4420:
 18800  0023FA                     	
 18801                           l5993:
 18802  0023FA                     	movlw	high(02Bh)
 18803  0023FA  0E00               	movwf	((c:_fifo_print$473+1)),c
 18804  0023FC  6E32               	movlw	low(02Bh)
 18805  0023FE  0E2B               	movwf	((c:_fifo_print$473)),c
 18806  002400  6E31               	goto	l5997
 18807  002402  EF09  F012         	
 18808                           l410:
 18809  002406                     	
 18810                           l5995:
 18811  002406                     	movlw	high(02Dh)
 18812  002406  0E00               	movwf	((c:_fifo_print$473+1)),c
 18813  002408  6E32               	movlw	low(02Dh)
 18814  00240A  0E2D               	movwf	((c:_fifo_print$473)),c
 18815  00240C  6E31               	goto	l5997
 18816  00240E  EF09  F012         	
 18817                           l412:
 18818  002412                     	
 18819                           l5997:
 18820  002412                     	movf	((c:_fifo_print$473)),c,w
 18821  002412  5031               	
 18822                           	call	_dispLCD_dataReg
 18823  002414  EC97  F01E         	line	437
 18824                           	
 18825                           l5999:
 18826  002418                     ;fifo.c: 437:                                 ++i;
 18827                           	incf	((c:fifo_print@i)),c
 18828  002418  2A35               	line	438
 18829                           ;fifo.c: 438:                                 break;
 18830                           	goto	l6019
 18831  00241A  EF66  F012         	line	439
 18832                           	
 18833                           l6001:
 18834  00241E                     ;fifo.c: 439:                 }
 18835                           	goto	l6019
 18836  00241E  EF66  F012         	
 18837                           l400:
 18838  002422                     	
 18839                           l6003:
 18840  002422                     	movf	((c:fifo_print@comando)),c,w
 18841  002422  5037               	movwf	(??_fifo_print+0+0)&0ffh,c
 18842  002424  6E2F               	clrf	(??_fifo_print+0+0+1)&0ffh,c
 18843  002426  6A30               
 18844                           	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
 18845                           ; Switch size 1, requested type "space"
 18846                           ; Number of cases is 1, Range of values is 0 to 0
 18847                           ; switch strategies available:
 18848                           ; Name         Instructions Cycles
 18849                           ; simple_byte            4     3 (average)
 18850                           ;	Chosen strategy is simple_byte
 18851                           
 18852                           	movf ??_fifo_print+0+1,c,w
 18853  002428  5030               	xorlw	0^0	; case 0
 18854  00242A  0A00               	skipnz
 18855  00242C  B4D8               	goto	l7983
 18856  00242E  EF1B  F012         	goto	l6019
 18857  002432  EF66  F012         	
 18858                           l7983:
 18859  002436                     ; Switch size 1, requested type "space"
 18860                           ; Number of cases is 8, Range of values is 65 to 100
 18861                           ; switch strategies available:
 18862                           ; Name         Instructions Cycles
 18863                           ; simple_byte           25    13 (average)
 18864                           ;	Chosen strategy is simple_byte
 18865                           
 18866                           	movf ??_fifo_print+0+0,c,w
 18867  002436  502F               	xorlw	65^0	; case 65
 18868  002438  0A41               	skipnz
 18869  00243A  B4D8               	goto	l5987
 18870  00243C  EFF1  F011         	xorlw	66^65	; case 66
 18871  002440  0A03               	skipnz
 18872  002442  B4D8               	goto	l5987
 18873  002444  EFF1  F011         	xorlw	67^66	; case 67
 18874  002448  0A01               	skipnz
 18875  00244A  B4D8               	goto	l5987
 18876  00244C  EFF1  F011         	xorlw	68^67	; case 68
 18877  002450  0A07               	skipnz
 18878  002452  B4D8               	goto	l5987
 18879  002454  EFF1  F011         	xorlw	97^68	; case 97
 18880  002458  0A25               	skipnz
 18881  00245A  B4D8               	goto	l5987
 18882  00245C  EFF1  F011         	xorlw	98^97	; case 98
 18883  002460  0A03               	skipnz
 18884  002462  B4D8               	goto	l5987
 18885  002464  EFF1  F011         	xorlw	99^98	; case 99
 18886  002468  0A01               	skipnz
 18887  00246A  B4D8               	goto	l5987
 18888  00246C  EFF1  F011         	xorlw	100^99	; case 100
 18889  002470  0A07               	skipnz
 18890  002472  B4D8               	goto	l5987
 18891  002474  EFF1  F011         	goto	l6019
 18892  002478  EF66  F012         
 18893                           	
 18894                           l413:
 18895  00247C                     	line	440
 18896                           ;fifo.c: 440:             }
 18897                           	goto	l6019
 18898  00247C  EF66  F012         	line	441
 18899                           ;fifo.c: 441:             else
 18900                           	
 18901                           l399:
 18902  002480                     	line	443
 18903                           	
 18904                           l6005:
 18905  002480                     ;fifo.c: 442:             {;fifo.c: 443:                 if(comando == 0xFE)
 18906                           		movlw	254
 18907  002480  0EFE               	xorwf	((c:fifo_print@comando)),c,w
 18908  002482  1837               	btfss	status,2
 18909  002484  A4D8               	goto	u4431
 18910  002486  EF47  F012         	goto	u4430
 18911  00248A  EF49  F012         
 18912                           u4431:
 18913  00248E                     	goto	l6019
 18914  00248E  EF66  F012         u4430:
 18915  002492                     	line	445
 18916                           	
 18917                           l6007:
 18918  002492                     ;fifo.c: 444:                 {;fifo.c: 445:                     decodifica(&comando);
 18919                           		movlw	low(fifo_print@comando)
 18920  002492  0E37               	movwf	((c:decodifica@d)),c
 18921  002494  6E27               	movlw	high(fifo_print@comando)
 18922  002496  0E00               	movwf	((c:decodifica@d+1)),c
 18923  002498  6E28               
 18924                           	call	_decodifica	;wreg free
 18925  00249A  ECC7  F014         	line	446
 18926                           	
 18927                           l6009:
 18928  00249E                     ;fifo.c: 446:                     atraso = comando;
 18929                           	movff	(c:fifo_print@comando),(c:fifo_print@atraso)
 18930  00249E  C037  F036         	line	448
 18931                           	
 18932                           l6011:
 18933  0024A2                     ;fifo.c: 448:                     dispLCD_dataReg(atraso + '0');
 18934                           	movf	((c:fifo_print@atraso)),c,w
 18935  0024A2  5036               	addlw	low(030h)
 18936  0024A4  0F30               	
 18937                           	call	_dispLCD_dataReg
 18938  0024A6  EC97  F01E         	line	449
 18939                           	
 18940                           l6013:
 18941  0024AA                     ;fifo.c: 449:                     ++i;
 18942                           	incf	((c:fifo_print@i)),c
 18943  0024AA  2A35               	line	451
 18944                           	
 18945                           l6015:
 18946  0024AC                     ;fifo.c: 451:                     dispLCD_dataReg('%');
 18947                           	movlw	(025h)&0ffh
 18948  0024AC  0E25               	
 18949                           	call	_dispLCD_dataReg
 18950  0024AE  EC97  F01E         	line	452
 18951                           	
 18952                           l6017:
 18953  0024B2                     ;fifo.c: 452:                     ++i;
 18954                           	incf	((c:fifo_print@i)),c
 18955  0024B2  2A35               	goto	l6019
 18956  0024B4  EF66  F012         	line	453
 18957                           ;fifo.c: 453:                 }
 18958                           	
 18959                           l415:
 18960  0024B8                     	goto	l6019
 18961  0024B8  EF66  F012         	line	454
 18962                           ;fifo.c: 454:             }
 18963                           	
 18964                           l414:
 18965  0024BC                     	goto	l6019
 18966  0024BC  EF66  F012         	
 18967                           l398:
 18968  0024C0                     	goto	l6019
 18969  0024C0  EF66  F012         	
 18970                           l393:
 18971  0024C4                     	goto	l6019
 18972  0024C4  EF66  F012         	
 18973                           l388:
 18974  0024C8                     	goto	l6019
 18975  0024C8  EF66  F012         	line	455
 18976                           ;fifo.c: 455:         }
 18977                           	
 18978                           l386:
 18979  0024CC                     	line	456
 18980                           	
 18981                           l6019:
 18982  0024CC                     ;fifo.c: 456:     }
 18983                           		movlw	015h-1
 18984  0024CC  0E14               	cpfsgt	((c:fifo_print@i)),c
 18985  0024CE  6435               	goto	u4441
 18986  0024D0  EF6C  F012         	goto	u4440
 18987  0024D4  EF6E  F012         
 18988                           u4441:
 18989  0024D8                     	goto	l5899
 18990  0024D8  EFDA  F010         u4440:
 18991  0024DC                     	goto	l417
 18992  0024DC  EF70  F012         	
 18993                           l416:
 18994  0024E0                     	line	458
 18995                           	
 18996                           l417:
 18997  0024E0                     	return	;funcret
 18998  0024E0  0012               	opt stack 0
 18999                           GLOBAL	__end_of_fifo_print
 19000                           	__end_of_fifo_print:
 19001  0024E2                     	signat	_fifo_print,89
 19002                           	global	___awmod
 19003                           
 19004 ;; *************** function ___awmod *****************
 19005 ;; Defined at:
 19006 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awmod.c"
 19007 ;; Parameters:    Size  Location     Type
 19008 ;;  dividend        2    0[COMRAM] int 
 19009 ;;  divisor         2    2[COMRAM] int 
 19010 ;; Auto vars:     Size  Location     Type
 19011 ;;  sign            1    5[COMRAM] unsigned char 
 19012 ;;  counter         1    4[COMRAM] unsigned char 
 19013 ;; Return value:  Size  Location     Type
 19014 ;;                  2    0[COMRAM] int 
 19015 ;; Registers used:
 19016 ;;		wreg, status,2, status,0
 19017 ;; Tracked objects:
 19018 ;;		On entry : 0/0
 19019 ;;		On exit  : 0/0
 19020 ;;		Unchanged: 0/0
 19021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19022 ;;      Params:         4       0       0       0       0       0       0       0       0
 19023 ;;      Locals:         2       0       0       0       0       0       0       0       0
 19024 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19025 ;;      Totals:         6       0       0       0       0       0       0       0       0
 19026 ;;Total ram usage:        6 bytes
 19027 ;; Hardware stack levels used:    1
 19028 ;; Hardware stack levels required when called:    2
 19029 ;; This function calls:
 19030 ;;		Nothing
 19031 ;; This function is called by:
 19032 ;;		_dispLCD_num
 19033 ;;		_fifo_print
 19034 ;;		_main
 19035 ;; This function uses a non-reentrant model
 19036 ;;
 19037                           psect	text31,class=CODE,space=0,reloc=2,group=1
 19038                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awmod.c"
 19039                           	line	7
 19040                           global __ptext31
 19041                           __ptext31:
 19042  00321C                     psect	text31
 19043                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awmod.c"
 19044                           	line	7
 19045                           	global	__size_of___awmod
 19046                           	__size_of___awmod	equ	__end_of___awmod-___awmod
 19047  0000                     	
 19048                           ___awmod:
 19049  00321C                     ;incstack = 0
 19050                           	opt	stack 26
 19051                           	line	12
 19052                           	
 19053                           l5169:
 19054  00321C                     	movlw	low(0)
 19055  00321C  0E00               	movwf	((c:___awmod@sign)),c
 19056  00321E  6E2C               	line	13
 19057                           	
 19058                           l5171:
 19059  003220                     	btfsc	((c:___awmod@dividend+1)),c,7
 19060  003220  BE28               	goto	u3410
 19061  003222  EF17  F019         	goto	u3411
 19062  003226  EF15  F019         
 19063                           u3411:
 19064  00322A                     	goto	l5177
 19065  00322A  EF1F  F019         u3410:
 19066  00322E                     	line	14
 19067                           	
 19068                           l5173:
 19069  00322E                     	negf	((c:___awmod@dividend)),c
 19070  00322E  6C27               	comf	((c:___awmod@dividend+1)),c
 19071  003230  1E28               	btfsc	status,0
 19072  003232  B0D8               	incf	((c:___awmod@dividend+1)),c
 19073  003234  2A28               	line	15
 19074                           	
 19075                           l5175:
 19076  003236                     	movlw	low(01h)
 19077  003236  0E01               	movwf	((c:___awmod@sign)),c
 19078  003238  6E2C               	goto	l5177
 19079  00323A  EF1F  F019         	line	16
 19080                           	
 19081                           l1484:
 19082  00323E                     	line	17
 19083                           	
 19084                           l5177:
 19085  00323E                     	btfsc	((c:___awmod@divisor+1)),c,7
 19086  00323E  BE2A               	goto	u3420
 19087  003240  EF26  F019         	goto	u3421
 19088  003244  EF24  F019         
 19089                           u3421:
 19090  003248                     	goto	l5181
 19091  003248  EF2C  F019         u3420:
 19092  00324C                     	line	18
 19093                           	
 19094                           l5179:
 19095  00324C                     	negf	((c:___awmod@divisor)),c
 19096  00324C  6C29               	comf	((c:___awmod@divisor+1)),c
 19097  00324E  1E2A               	btfsc	status,0
 19098  003250  B0D8               	incf	((c:___awmod@divisor+1)),c
 19099  003252  2A2A               	goto	l5181
 19100  003254  EF2C  F019         	
 19101                           l1485:
 19102  003258                     	line	19
 19103                           	
 19104                           l5181:
 19105  003258                     	movf	((c:___awmod@divisor)),c,w
 19106  003258  5029               iorwf	((c:___awmod@divisor+1)),c,w
 19107  00325A  102A               	btfsc	status,2
 19108  00325C  B4D8               	goto	u3431
 19109  00325E  EF33  F019         	goto	u3430
 19110  003262  EF35  F019         
 19111                           u3431:
 19112  003266                     	goto	l5197
 19113  003266  EF65  F019         u3430:
 19114  00326A                     	line	20
 19115                           	
 19116                           l5183:
 19117  00326A                     	movlw	low(01h)
 19118  00326A  0E01               	movwf	((c:___awmod@counter)),c
 19119  00326C  6E2B               	line	21
 19120                           	goto	l5187
 19121  00326E  EF3F  F019         	
 19122                           l1488:
 19123  003272                     	line	22
 19124                           	
 19125                           l5185:
 19126  003272                     	bcf	status,0
 19127  003272  90D8               	rlcf	((c:___awmod@divisor)),c
 19128  003274  3629               	rlcf	((c:___awmod@divisor+1)),c
 19129  003276  362A               	line	23
 19130                           	incf	((c:___awmod@counter)),c
 19131  003278  2A2B               	goto	l5187
 19132  00327A  EF3F  F019         	line	24
 19133                           	
 19134                           l1487:
 19135  00327E                     	line	21
 19136                           	
 19137                           l5187:
 19138  00327E                     	
 19139                           	btfss	((c:___awmod@divisor+1)),c,(15)&7
 19140  00327E  AE2A               	goto	u3441
 19141  003280  EF44  F019         	goto	u3440
 19142  003284  EF46  F019         u3441:
 19143  003288                     	goto	l5185
 19144  003288  EF39  F019         u3440:
 19145  00328C                     	goto	l5189
 19146  00328C  EF4A  F019         	
 19147                           l1489:
 19148  003290                     	goto	l5189
 19149  003290  EF4A  F019         	line	25
 19150                           	
 19151                           l1490:
 19152  003294                     	line	26
 19153                           	
 19154                           l5189:
 19155  003294                     		movf	((c:___awmod@divisor)),c,w
 19156  003294  5029               	subwf	((c:___awmod@dividend)),c,w
 19157  003296  5C27               	movf	((c:___awmod@divisor+1)),c,w
 19158  003298  502A               	subwfb	((c:___awmod@dividend+1)),c,w
 19159  00329A  5828               	btfss	status,0
 19160  00329C  A0D8               	goto	u3451
 19161  00329E  EF53  F019         	goto	u3450
 19162  0032A2  EF55  F019         
 19163                           u3451:
 19164  0032A6                     	goto	l5193
 19165  0032A6  EF5B  F019         u3450:
 19166  0032AA                     	line	27
 19167                           	
 19168                           l5191:
 19169  0032AA                     	movf	((c:___awmod@divisor)),c,w
 19170  0032AA  5029               	subwf	((c:___awmod@dividend)),c
 19171  0032AC  5E27               	movf	((c:___awmod@divisor+1)),c,w
 19172  0032AE  502A               	subwfb	((c:___awmod@dividend+1)),c
 19173  0032B0  5A28               
 19174                           	goto	l5193
 19175  0032B2  EF5B  F019         	
 19176                           l1491:
 19177  0032B6                     	line	28
 19178                           	
 19179                           l5193:
 19180  0032B6                     	bcf	status,0
 19181  0032B6  90D8               	rrcf	((c:___awmod@divisor+1)),c
 19182  0032B8  322A               	rrcf	((c:___awmod@divisor)),c
 19183  0032BA  3229               	line	29
 19184                           	
 19185                           l5195:
 19186  0032BC                     	decfsz	((c:___awmod@counter)),c
 19187  0032BC  2E2B               	
 19188                           	goto	l5189
 19189  0032BE  EF4A  F019         	goto	l5197
 19190  0032C2  EF65  F019         	
 19191                           l1492:
 19192  0032C6                     	goto	l5197
 19193  0032C6  EF65  F019         	line	30
 19194                           	
 19195                           l1486:
 19196  0032CA                     	line	31
 19197                           	
 19198                           l5197:
 19199  0032CA                     	movf	((c:___awmod@sign)),c,w
 19200  0032CA  502C               	btfsc	status,2
 19201  0032CC  B4D8               	goto	u3461
 19202  0032CE  EF6B  F019         	goto	u3460
 19203  0032D2  EF6D  F019         u3461:
 19204  0032D6                     	goto	l5201
 19205  0032D6  EF73  F019         u3460:
 19206  0032DA                     	line	32
 19207                           	
 19208                           l5199:
 19209  0032DA                     	negf	((c:___awmod@dividend)),c
 19210  0032DA  6C27               	comf	((c:___awmod@dividend+1)),c
 19211  0032DC  1E28               	btfsc	status,0
 19212  0032DE  B0D8               	incf	((c:___awmod@dividend+1)),c
 19213  0032E0  2A28               	goto	l5201
 19214  0032E2  EF73  F019         	
 19215                           l1493:
 19216  0032E6                     	line	33
 19217                           	
 19218                           l5201:
 19219  0032E6                     	movff	(c:___awmod@dividend),(c:?___awmod)
 19220  0032E6  C027  F027         	movff	(c:___awmod@dividend+1),(c:?___awmod+1)
 19221  0032EA  C028  F028         	goto	l1494
 19222  0032EE  EF79  F019         	
 19223                           l5203:
 19224  0032F2                     	line	34
 19225                           	
 19226                           l1494:
 19227  0032F2                     	return	;funcret
 19228  0032F2  0012               	opt stack 0
 19229                           GLOBAL	__end_of___awmod
 19230                           	__end_of___awmod:
 19231  0032F4                     	signat	___awmod,8314
 19232                           	global	_fifo_indicePrint_inc
 19233                           
 19234 ;; *************** function _fifo_indicePrint_inc *****************
 19235 ;; Defined at:
 19236 ;;		line 322 in file "fifo.c"
 19237 ;; Parameters:    Size  Location     Type
 19238 ;;		None
 19239 ;; Auto vars:     Size  Location     Type
 19240 ;;		None
 19241 ;; Return value:  Size  Location     Type
 19242 ;;                  1    wreg      void 
 19243 ;; Registers used:
 19244 ;;		wreg, status,2, status,0
 19245 ;; Tracked objects:
 19246 ;;		On entry : 0/0
 19247 ;;		On exit  : 0/0
 19248 ;;		Unchanged: 0/0
 19249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19250 ;;      Params:         0       0       0       0       0       0       0       0       0
 19251 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19252 ;;      Temps:          7       0       0       0       0       0       0       0       0
 19253 ;;      Totals:         7       0       0       0       0       0       0       0       0
 19254 ;;Total ram usage:        7 bytes
 19255 ;; Hardware stack levels used:    1
 19256 ;; Hardware stack levels required when called:    2
 19257 ;; This function calls:
 19258 ;;		Nothing
 19259 ;; This function is called by:
 19260 ;;		_main
 19261 ;; This function uses a non-reentrant model
 19262 ;;
 19263                           psect	text32,class=CODE,space=0,reloc=2,group=0
 19264                           	file	"fifo.c"
 19265                           	line	322
 19266                           global __ptext32
 19267                           __ptext32:
 19268  003A52                     psect	text32
 19269                           	file	"fifo.c"
 19270                           	line	322
 19271                           	global	__size_of_fifo_indicePrint_inc
 19272                           	__size_of_fifo_indicePrint_inc	equ	__end_of_fifo_indicePrint_inc-_fifo_indicePrint_inc

 19273  0000                     	
 19274                           _fifo_indicePrint_inc:
 19275  003A52                     ;incstack = 0
 19276                           	opt	stack 28
 19277                           	line	324
 19278                           	
 19279                           l5879:
 19280  003A52                     ;fifo.c: 324:     if( ind_print < 18 -1 )
 19281                           		movlw	011h-0
 19282  003A52  0E11               	cpfslt	((c:_ind_print)),c
 19283  003A54  6058               	goto	u4261
 19284  003A56  EF2F  F01D         	goto	u4260
 19285  003A5A  EF31  F01D         
 19286                           u4261:
 19287  003A5E                     	goto	l5887
 19288  003A5E  EF57  F01D         u4260:
 19289  003A62                     	line	326
 19290                           	
 19291                           l5881:
 19292  003A62                     ;fifo.c: 325:     {;fifo.c: 326:         if( ind_print < ind_fila-1 )
 19293                           	movlw	low(-1)
 19294  003A62  0EFF               	movwf	(??_fifo_indicePrint_inc+0+0)&0ffh,c
 19295  003A64  6E27               	movlw	high(-1)
 19296  003A66  0EFF               	movwf	1+(??_fifo_indicePrint_inc+0+0)&0ffh,c
 19297  003A68  6E28               	movf	((c:_ind_fila)),c,w
 19298  003A6A  5059               	movwf	(??_fifo_indicePrint_inc+2+0)&0ffh,c
 19299  003A6C  6E29               	clrf	(??_fifo_indicePrint_inc+2+0+1)&0ffh,c
 19300  003A6E  6A2A               
 19301                           	movf	(??_fifo_indicePrint_inc+0+0),c,w
 19302  003A70  5027               	addwf	(??_fifo_indicePrint_inc+2+0),c
 19303  003A72  2629               	movf	(??_fifo_indicePrint_inc+0+1),c,w
 19304  003A74  5028               	addwfc	(??_fifo_indicePrint_inc+2+1),c
 19305  003A76  222A               	movf	((c:_ind_print)),c,w
 19306  003A78  5058               	movwf	(??_fifo_indicePrint_inc+4+0)&0ffh,c
 19307  003A7A  6E2B               	clrf	(??_fifo_indicePrint_inc+4+0+1)&0ffh,c
 19308  003A7C  6A2C               
 19309                           		movf	(??_fifo_indicePrint_inc+2+0),c,w
 19310  003A7E  5029               	subwf	(??_fifo_indicePrint_inc+4+0),c,w
 19311  003A80  5C2B               	movf	(??_fifo_indicePrint_inc+4+1),c,w
 19312  003A82  502C               	xorlw	80h
 19313  003A84  0A80               	movwf	(??_fifo_indicePrint_inc+6+0)&0ffh,c
 19314  003A86  6E2D               	movf	(??_fifo_indicePrint_inc+2+1),c,w
 19315  003A88  502A               	xorlw	80h
 19316  003A8A  0A80               	subwfb	(??_fifo_indicePrint_inc+6+0)&0ffh,c,w
 19317  003A8C  582D               	btfsc	status,0
 19318  003A8E  B0D8               	goto	u4271
 19319  003A90  EF4C  F01D         	goto	u4270
 19320  003A94  EF4E  F01D         
 19321                           u4271:
 19322  003A98                     	goto	l5885
 19323  003A98  EF51  F01D         u4270:
 19324  003A9C                     	line	327
 19325                           	
 19326                           l5883:
 19327  003A9C                     ;fifo.c: 327:             ind_print++;
 19328                           	incf	((c:_ind_print)),c
 19329  003A9C  2A58               	goto	l377
 19330  003A9E  EF5B  F01D         	line	328
 19331                           ;fifo.c: 328:         else
 19332                           	
 19333                           l374:
 19334  003AA2                     	line	329
 19335                           	
 19336                           l5885:
 19337  003AA2                     ;fifo.c: 329:             ind_print = ind_fila-1;
 19338                           	decf	((c:_ind_fila)),c,w
 19339  003AA2  0459               	movwf	((c:_ind_print)),c
 19340  003AA4  6E58               	goto	l377
 19341  003AA6  EF5B  F01D         	
 19342                           l375:
 19343  003AAA                     	line	330
 19344                           ;fifo.c: 330:     }
 19345                           	goto	l377
 19346  003AAA  EF5B  F01D         	line	331
 19347                           ;fifo.c: 331:     else
 19348                           	
 19349                           l373:
 19350  003AAE                     	line	332
 19351                           	
 19352                           l5887:
 19353  003AAE                     ;fifo.c: 332:         ind_print = 18 -1;
 19354                           	movlw	low(011h)
 19355  003AAE  0E11               	movwf	((c:_ind_print)),c
 19356  003AB0  6E58               	goto	l377
 19357  003AB2  EF5B  F01D         	
 19358                           l376:
 19359  003AB6                     	line	333
 19360                           	
 19361                           l377:
 19362  003AB6                     	return	;funcret
 19363  003AB6  0012               	opt stack 0
 19364                           GLOBAL	__end_of_fifo_indicePrint_inc
 19365                           	__end_of_fifo_indicePrint_inc:
 19366  003AB8                     	signat	_fifo_indicePrint_inc,89
 19367                           	global	_fifo_indicePrint_dec
 19368                           
 19369 ;; *************** function _fifo_indicePrint_dec *****************
 19370 ;; Defined at:
 19371 ;;		line 334 in file "fifo.c"
 19372 ;; Parameters:    Size  Location     Type
 19373 ;;		None
 19374 ;; Auto vars:     Size  Location     Type
 19375 ;;		None
 19376 ;; Return value:  Size  Location     Type
 19377 ;;                  1    wreg      void 
 19378 ;; Registers used:
 19379 ;;		wreg, status,2, status,0
 19380 ;; Tracked objects:
 19381 ;;		On entry : 0/0
 19382 ;;		On exit  : 0/0
 19383 ;;		Unchanged: 0/0
 19384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19385 ;;      Params:         0       0       0       0       0       0       0       0       0
 19386 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19387 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19388 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19389 ;;Total ram usage:        0 bytes
 19390 ;; Hardware stack levels used:    1
 19391 ;; Hardware stack levels required when called:    2
 19392 ;; This function calls:
 19393 ;;		Nothing
 19394 ;; This function is called by:
 19395 ;;		_main
 19396 ;; This function uses a non-reentrant model
 19397 ;;
 19398                           psect	text33,class=CODE,space=0,reloc=2,group=0
 19399                           	line	334
 19400                           global __ptext33
 19401                           __ptext33:
 19402  00422E                     psect	text33
 19403                           	file	"fifo.c"
 19404                           	line	334
 19405                           	global	__size_of_fifo_indicePrint_dec
 19406                           	__size_of_fifo_indicePrint_dec	equ	__end_of_fifo_indicePrint_dec-_fifo_indicePrint_dec

 19407  0000                     	
 19408                           _fifo_indicePrint_dec:
 19409  00422E                     ;incstack = 0
 19410                           	opt	stack 28
 19411                           	line	336
 19412                           	
 19413                           l5889:
 19414  00422E                     ;fifo.c: 336:     if( ind_print > 2 )
 19415                           		movlw	03h-1
 19416  00422E  0E02               	cpfsgt	((c:_ind_print)),c
 19417  004230  6458               	goto	u4281
 19418  004232  EF1D  F021         	goto	u4280
 19419  004236  EF1F  F021         
 19420                           u4281:
 19421  00423A                     	goto	l381
 19422  00423A  EF22  F021         u4280:
 19423  00423E                     	line	337
 19424                           	
 19425                           l5891:
 19426  00423E                     ;fifo.c: 337:         ind_print--;
 19427                           	decf	((c:_ind_print)),c
 19428  00423E  0658               	goto	l381
 19429  004240  EF22  F021         	
 19430                           l380:
 19431  004244                     	line	338
 19432                           	
 19433                           l381:
 19434  004244                     	return	;funcret
 19435  004244  0012               	opt stack 0
 19436                           GLOBAL	__end_of_fifo_indicePrint_dec
 19437                           	__end_of_fifo_indicePrint_dec:
 19438  004246                     	signat	_fifo_indicePrint_dec,89
 19439                           	global	_fifo_indice
 19440                           
 19441 ;; *************** function _fifo_indice *****************
 19442 ;; Defined at:
 19443 ;;		line 307 in file "fifo.c"
 19444 ;; Parameters:    Size  Location     Type
 19445 ;;		None
 19446 ;; Auto vars:     Size  Location     Type
 19447 ;;		None
 19448 ;; Return value:  Size  Location     Type
 19449 ;;                  1    wreg      unsigned char 
 19450 ;; Registers used:
 19451 ;;		wreg, status,2
 19452 ;; Tracked objects:
 19453 ;;		On entry : 0/0
 19454 ;;		On exit  : 0/0
 19455 ;;		Unchanged: 0/0
 19456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19457 ;;      Params:         0       0       0       0       0       0       0       0       0
 19458 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19459 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19460 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19461 ;;Total ram usage:        0 bytes
 19462 ;; Hardware stack levels used:    1
 19463 ;; Hardware stack levels required when called:    2
 19464 ;; This function calls:
 19465 ;;		Nothing
 19466 ;; This function is called by:
 19467 ;;		_main
 19468 ;; This function uses a non-reentrant model
 19469 ;;
 19470                           psect	text34,class=CODE,space=0,reloc=2,group=0
 19471                           	line	307
 19472                           global __ptext34
 19473                           __ptext34:
 19474  00432C                     psect	text34
 19475                           	file	"fifo.c"
 19476                           	line	307
 19477                           	global	__size_of_fifo_indice
 19478                           	__size_of_fifo_indice	equ	__end_of_fifo_indice-_fifo_indice
 19479  0000                     	
 19480                           _fifo_indice:
 19481  00432C                     ;incstack = 0
 19482                           	opt	stack 28
 19483                           	line	309
 19484                           	
 19485                           l5867:
 19486  00432C                     ;fifo.c: 309:     return ( ind_fila );
 19487                           	movf	((c:_ind_fila)),c,w
 19488  00432C  5059               	goto	l364
 19489  00432E  EF99  F021         	
 19490                           l5869:
 19491  004332                     	line	310
 19492                           	
 19493                           l364:
 19494  004332                     	return	;funcret
 19495  004332  0012               	opt stack 0
 19496                           GLOBAL	__end_of_fifo_indice
 19497                           	__end_of_fifo_indice:
 19498  004334                     	signat	_fifo_indice,89
 19499                           	global	_fifo_disponivel
 19500                           
 19501 ;; *************** function _fifo_disponivel *****************
 19502 ;; Defined at:
 19503 ;;		line 312 in file "fifo.c"
 19504 ;; Parameters:    Size  Location     Type
 19505 ;;		None
 19506 ;; Auto vars:     Size  Location     Type
 19507 ;;		None
 19508 ;; Return value:  Size  Location     Type
 19509 ;;                  1    wreg      unsigned char 
 19510 ;; Registers used:
 19511 ;;		wreg, status,2, status,0
 19512 ;; Tracked objects:
 19513 ;;		On entry : 0/0
 19514 ;;		On exit  : 0/0
 19515 ;;		Unchanged: 0/0
 19516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19517 ;;      Params:         0       0       0       0       0       0       0       0       0
 19518 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19519 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19520 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19521 ;;Total ram usage:        0 bytes
 19522 ;; Hardware stack levels used:    1
 19523 ;; Hardware stack levels required when called:    2
 19524 ;; This function calls:
 19525 ;;		Nothing
 19526 ;; This function is called by:
 19527 ;;		_main
 19528 ;; This function uses a non-reentrant model
 19529 ;;
 19530                           psect	text35,class=CODE,space=0,reloc=2,group=0
 19531                           	line	312
 19532                           global __ptext35
 19533                           __ptext35:
 19534  0041FA                     psect	text35
 19535                           	file	"fifo.c"
 19536                           	line	312
 19537                           	global	__size_of_fifo_disponivel
 19538                           	__size_of_fifo_disponivel	equ	__end_of_fifo_disponivel-_fifo_disponivel
 19539  0000                     	
 19540                           _fifo_disponivel:
 19541  0041FA                     ;incstack = 0
 19542                           	opt	stack 28
 19543                           	line	314
 19544                           	
 19545                           l5871:
 19546  0041FA                     ;fifo.c: 314:     return( ind_fila < 18 );
 19547                           		movlw	012h-1
 19548  0041FA  0E11               	cpfsgt	((c:_ind_fila)),c
 19549  0041FC  6459               	goto	u4241
 19550  0041FE  EF03  F021         	goto	u4240
 19551  004202  EF06  F021         
 19552                           u4241:
 19553  004206                     	movlw	1
 19554  004206  0E01               	goto	u4250
 19555  004208  EF07  F021         u4240:
 19556  00420C                     	movlw	0
 19557  00420C  0E00               u4250:
 19558  00420E                     	goto	l367
 19559  00420E  EF09  F021         	
 19560                           l5873:
 19561  004212                     	line	315
 19562                           	
 19563                           l367:
 19564  004212                     	return	;funcret
 19565  004212  0012               	opt stack 0
 19566                           GLOBAL	__end_of_fifo_disponivel
 19567                           	__end_of_fifo_disponivel:
 19568  004214                     	signat	_fifo_disponivel,89
 19569                           	global	_fifo_delete
 19570                           
 19571 ;; *************** function _fifo_delete *****************
 19572 ;; Defined at:
 19573 ;;		line 183 in file "fifo.c"
 19574 ;; Parameters:    Size  Location     Type
 19575 ;;		None
 19576 ;; Auto vars:     Size  Location     Type
 19577 ;;		None
 19578 ;; Return value:  Size  Location     Type
 19579 ;;                  1    wreg      void 
 19580 ;; Registers used:
 19581 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19582 ;; Tracked objects:
 19583 ;;		On entry : 0/0
 19584 ;;		On exit  : 0/0
 19585 ;;		Unchanged: 0/0
 19586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19587 ;;      Params:         0       0       0       0       0       0       0       0       0
 19588 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19589 ;;      Temps:          2       0       0       0       0       0       0       0       0
 19590 ;;      Totals:         2       0       0       0       0       0       0       0       0
 19591 ;;Total ram usage:        2 bytes
 19592 ;; Hardware stack levels used:    1
 19593 ;; Hardware stack levels required when called:    5
 19594 ;; This function calls:
 19595 ;;		_alt_atuador
 19596 ;;		_codifica
 19597 ;;		_decodifica
 19598 ;;		_fifo_alinharPrint
 19599 ;; This function is called by:
 19600 ;;		_main
 19601 ;; This function uses a non-reentrant model
 19602 ;;
 19603                           psect	text36,class=CODE,space=0,reloc=2,group=0
 19604                           	line	183
 19605                           global __ptext36
 19606                           __ptext36:
 19607  0033B0                     psect	text36
 19608                           	file	"fifo.c"
 19609                           	line	183
 19610                           	global	__size_of_fifo_delete
 19611                           	__size_of_fifo_delete	equ	__end_of_fifo_delete-_fifo_delete
 19612  0000                     	
 19613                           _fifo_delete:
 19614  0033B0                     ;incstack = 0
 19615                           	opt	stack 25
 19616                           	line	185
 19617                           	
 19618                           l5809:
 19619  0033B0                     ;fifo.c: 185:     if(ind_fila)
 19620                           	movf	((c:_ind_fila)),c,w
 19621  0033B0  5059               	btfsc	status,2
 19622  0033B2  B4D8               	goto	u4161
 19623  0033B4  EFDE  F019         	goto	u4160
 19624  0033B8  EFE0  F019         u4161:
 19625  0033BC                     	goto	l5821
 19626  0033BC  EF31  F01A         u4160:
 19627  0033C0                     	line	187
 19628                           	
 19629                           l5811:
 19630  0033C0                     ;fifo.c: 186:     {;fifo.c: 187:         if(ind_fila > 2)
 19631                           		movlw	03h-1
 19632  0033C0  0E02               	cpfsgt	((c:_ind_fila)),c
 19633  0033C2  6459               	goto	u4171
 19634  0033C4  EFE6  F019         	goto	u4170
 19635  0033C8  EFE8  F019         
 19636                           u4171:
 19637  0033CC                     	goto	l5815
 19638  0033CC  EFEB  F019         u4170:
 19639  0033D0                     	line	188
 19640                           	
 19641                           l5813:
 19642  0033D0                     ;fifo.c: 188:             ind_fila--;
 19643                           	decf	((c:_ind_fila)),c
 19644  0033D0  0659               	goto	l5815
 19645  0033D2  EFEB  F019         	
 19646                           l305:
 19647  0033D6                     	line	189
 19648                           	
 19649                           l5815:
 19650  0033D6                     ;fifo.c: 189:         if(fila[ind_fila] > 0xDC)
 19651                           	movf	((c:_ind_fila)),c,w
 19652  0033D6  5059               	mullw	01h
 19653  0033D8  0D01               	movlw	low(_fila)
 19654  0033DA  0E15               	addwf	(prodl),c,w
 19655  0033DC  24F3               	movwf	c:fsr2l
 19656  0033DE  6ED9               	movlw	high(_fila)
 19657  0033E0  0E00               	addwfc	prod+1,w
 19658  0033E2  20F4               	movwf	1+c:fsr2l
 19659  0033E4  6EDA               		movlw	0DDh-1
 19660  0033E6  0EDC               	cpfsgt	indf2
 19661  0033E8  64DF               	goto	u4181
 19662  0033EA  EFF9  F019         	goto	u4180
 19663  0033EE  EFFB  F019         
 19664                           u4181:
 19665  0033F2                     	goto	l5819
 19666  0033F2  EF25  F01A         u4180:
 19667  0033F6                     	line	191
 19668                           	
 19669                           l5817:
 19670  0033F6                     ;fifo.c: 190:         {;fifo.c: 191:             decodifica(&fila[ind_fila]);
 19671                           	movf	((c:_ind_fila)),c,w
 19672  0033F6  5059               	mullw	01h
 19673  0033F8  0D01               	movlw	low(_fila)
 19674  0033FA  0E15               	addwf	(prodl),c,w
 19675  0033FC  24F3               	movwf	((c:decodifica@d)),c
 19676  0033FE  6E27               	movlw	high(_fila)
 19677  003400  0E00               	addwfc	prod+1,w
 19678  003402  20F4               	movwf	1+((c:decodifica@d)),c
 19679  003404  6E28               	call	_decodifica	;wreg free
 19680  003406  ECC7  F014         	line	192
 19681                           ;fifo.c: 192:             alt_atuador(fila[ind_fila] & ~0x20);
 19682                           	movf	((c:_ind_fila)),c,w
 19683  00340A  5059               	mullw	01h
 19684  00340C  0D01               	movlw	low(_fila)
 19685  00340E  0E15               	addwf	(prodl),c,w
 19686  003410  24F3               	movwf	c:fsr2l
 19687  003412  6ED9               	movlw	high(_fila)
 19688  003414  0E00               	addwfc	prod+1,w
 19689  003416  20F4               	movwf	1+c:fsr2l
 19690  003418  6EDA               	movf	indf2,w
 19691  00341A  50DF               	andlw	low(0DFh)
 19692  00341C  0BDF               	
 19693                           	call	_alt_atuador
 19694  00341E  EC90  F01A         	line	193
 19695                           ;fifo.c: 193:             codifica('a',fila[ind_fila]);
 19696                           	movf	((c:_ind_fila)),c,w
 19697  003422  5059               	mullw	01h
 19698  003424  0D01               	movlw	low(_fila)
 19699  003426  0E15               	addwf	(prodl),c,w
 19700  003428  24F3               	movwf	c:fsr2l
 19701  00342A  6ED9               	movlw	high(_fila)
 19702  00342C  0E00               	addwfc	prod+1,w
 19703  00342E  20F4               	movwf	1+c:fsr2l
 19704  003430  6EDA               	movf	indf2,w
 19705  003432  50DF               	movwf	(??_fifo_delete+0+0)&0ffh,c
 19706  003434  6E36               	clrf	(??_fifo_delete+0+0+1)&0ffh,c
 19707  003436  6A37               
 19708                           	movff	??_fifo_delete+0+0,(c:codifica@dado)
 19709  003438  C036  F027         	movff	??_fifo_delete+0+1,(c:codifica@dado+1)
 19710  00343C  C037  F028         	movlw	(061h)&0ffh
 19711  003440  0E61               	
 19712                           	call	_codifica
 19713  003442  EC13  F014         	goto	l5819
 19714  003446  EF25  F01A         	line	194
 19715                           ;fifo.c: 194:         }
 19716                           	
 19717                           l306:
 19718  00344A                     	line	195
 19719                           	
 19720                           l5819:
 19721  00344A                     ;fifo.c: 195:         fila[ind_fila] = 0;
 19722                           	movf	((c:_ind_fila)),c,w
 19723  00344A  5059               	mullw	01h
 19724  00344C  0D01               	movlw	low(_fila)
 19725  00344E  0E15               	addwf	(prodl),c,w
 19726  003450  24F3               	movwf	c:fsr2l
 19727  003452  6ED9               	movlw	high(_fila)
 19728  003454  0E00               	addwfc	prod+1,w
 19729  003456  20F4               	movwf	1+c:fsr2l
 19730  003458  6EDA               	movlw	low(0)
 19731  00345A  0E00               	movwf	indf2
 19732  00345C  6EDF               	goto	l5821
 19733  00345E  EF31  F01A         	line	196
 19734                           ;fifo.c: 196:     }
 19735                           	
 19736                           l304:
 19737  003462                     	line	197
 19738                           	
 19739                           l5821:
 19740  003462                     ;fifo.c: 197:     fifo_alinharPrint();
 19741                           	call	_fifo_alinharPrint	;wreg free
 19742  003462  ECA5  F016         	line	198
 19743                           	
 19744                           l307:
 19745  003466                     	return	;funcret
 19746  003466  0012               	opt stack 0
 19747                           GLOBAL	__end_of_fifo_delete
 19748                           	__end_of_fifo_delete:
 19749  003468                     	signat	_fifo_delete,89
 19750                           	global	_decodifica
 19751                           
 19752 ;; *************** function _decodifica *****************
 19753 ;; Defined at:
 19754 ;;		line 228 in file "fifo.c"
 19755 ;; Parameters:    Size  Location     Type
 19756 ;;  d               2    0[COMRAM] PTR unsigned char 
 19757 ;;		 -> main@vetor_aux(16), main@auxPasso(1), printExec@passo(1), fifo_print@comando(1), 
 19758 ;;		 -> fila(18), 
 19759 ;; Auto vars:     Size  Location     Type
 19760 ;;		None
 19761 ;; Return value:  Size  Location     Type
 19762 ;;                  1    wreg      void 
 19763 ;; Registers used:
 19764 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19765 ;; Tracked objects:
 19766 ;;		On entry : 0/0
 19767 ;;		On exit  : 0/0
 19768 ;;		Unchanged: 0/0
 19769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19770 ;;      Params:         2       0       0       0       0       0       0       0       0
 19771 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19772 ;;      Temps:          2       0       0       0       0       0       0       0       0
 19773 ;;      Totals:         4       0       0       0       0       0       0       0       0
 19774 ;;Total ram usage:        4 bytes
 19775 ;; Hardware stack levels used:    1
 19776 ;; Hardware stack levels required when called:    2
 19777 ;; This function calls:
 19778 ;;		Nothing
 19779 ;; This function is called by:
 19780 ;;		_fifo_delete
 19781 ;;		_fifo_print
 19782 ;;		_printExec
 19783 ;;		_main
 19784 ;; This function uses a non-reentrant model
 19785 ;;
 19786                           psect	text37,class=CODE,space=0,reloc=2,group=0
 19787                           	line	228
 19788                           global __ptext37
 19789                           __ptext37:
 19790  00298E                     psect	text37
 19791                           	file	"fifo.c"
 19792                           	line	228
 19793                           	global	__size_of_decodifica
 19794                           	__size_of_decodifica	equ	__end_of_decodifica-_decodifica
 19795  0000                     	
 19796                           _decodifica:
 19797  00298E                     ;incstack = 0
 19798                           	opt	stack 27
 19799                           	line	230
 19800                           	
 19801                           l5333:
 19802  00298E                     ;fifo.c: 228: void decodifica( unsigned char *d );fifo.c: 229: {;fifo.c: 230:     if( *d
                                  <= 100 )
 19803                           	movff	(c:decodifica@d),fsr2l
 19804  00298E  C027  FFD9         	movff	(c:decodifica@d+1),fsr2h
 19805  002992  C028  FFDA         		movlw	065h-0
 19806  002996  0E65               	cpfslt	indf2
 19807  002998  60DF               	goto	u3711
 19808  00299A  EFD1  F014         	goto	u3710
 19809  00299E  EFD3  F014         
 19810                           u3711:
 19811  0029A2                     	goto	l5337
 19812  0029A2  EFD7  F014         u3710:
 19813  0029A6                     	goto	l344
 19814  0029A6  EF70  F015         	line	233
 19815                           	
 19816                           l5335:
 19817  0029AA                     ;fifo.c: 231:     {;fifo.c: 233:     }
 19818                           	goto	l344
 19819  0029AA  EF70  F015         	line	234
 19820                           ;fifo.c: 234:     else if( *d <= 220 )
 19821                           	
 19822                           l329:
 19823  0029AE                     	
 19824                           l5337:
 19825  0029AE                     	movff	(c:decodifica@d),fsr2l
 19826  0029AE  C027  FFD9         	movff	(c:decodifica@d+1),fsr2h
 19827  0029B2  C028  FFDA         		movlw	0DDh-0
 19828  0029B6  0EDD               	cpfslt	indf2
 19829  0029B8  60DF               	goto	u3721
 19830  0029BA  EFE1  F014         	goto	u3720
 19831  0029BE  EFE3  F014         
 19832                           u3721:
 19833  0029C2                     	goto	l5361
 19834  0029C2  EF37  F015         u3720:
 19835  0029C6                     	line	236
 19836                           	
 19837                           l5339:
 19838  0029C6                     ;fifo.c: 235:     {;fifo.c: 236:         *d -= 0x64;
 19839                           	movff	(c:decodifica@d),fsr2l
 19840  0029C6  C027  FFD9         	movff	(c:decodifica@d+1),fsr2h
 19841  0029CA  C028  FFDA         	movlw	064h
 19842  0029CE  0E64               	subwf	indf2
 19843  0029D0  5EDF               	line	237
 19844                           ;fifo.c: 237:     } else
 19845                           	goto	l344
 19846  0029D2  EF70  F015         	
 19847                           l331:
 19848  0029D6                     	line	239
 19849                           ;fifo.c: 238:     {;fifo.c: 239:         switch( *d )
 19850                           	goto	l5361
 19851  0029D6  EF37  F015         	line	241
 19852                           ;fifo.c: 240:         {;fifo.c: 241:             case 221: *d = 'A'; break;
 19853                           	
 19854                           l334:
 19855  0029DA                     	
 19856                           l5341:
 19857  0029DA                     	movff	(c:decodifica@d),fsr2l
 19858  0029DA  C027  FFD9         	movff	(c:decodifica@d+1),fsr2h
 19859  0029DE  C028  FFDA         	movlw	low(041h)
 19860  0029E2  0E41               	movwf	indf2
 19861  0029E4  6EDF               	goto	l344
 19862  0029E6  EF70  F015         	line	242
 19863                           ;fifo.c: 242:             case 222: *d = 'a'; break;
 19864                           	
 19865                           l336:
 19866  0029EA                     	
 19867                           l5343:
 19868  0029EA                     	movff	(c:decodifica@d),fsr2l
 19869  0029EA  C027  FFD9         	movff	(c:decodifica@d+1),fsr2h
 19870  0029EE  C028  FFDA         	movlw	low(061h)
 19871  0029F2  0E61               	movwf	indf2
 19872  0029F4  6EDF               	goto	l344
 19873  0029F6  EF70  F015         	line	243
 19874                           ;fifo.c: 243:             case 223: *d = 'B'; break;
 19875                           	
 19876                           l337:
 19877  0029FA                     	
 19878                           l5345:
 19879  0029FA                     	movff	(c:decodifica@d),fsr2l
 19880  0029FA  C027  FFD9         	movff	(c:decodifica@d+1),fsr2h
 19881  0029FE  C028  FFDA         	movlw	low(042h)
 19882  002A02  0E42               	movwf	indf2
 19883  002A04  6EDF               	goto	l344
 19884  002A06  EF70  F015         	line	244
 19885                           ;fifo.c: 244:             case 224: *d = 'b'; break;
 19886                           	
 19887                           l338:
 19888  002A0A                     	
 19889                           l5347:
 19890  002A0A                     	movff	(c:decodifica@d),fsr2l
 19891  002A0A  C027  FFD9         	movff	(c:decodifica@d+1),fsr2h
 19892  002A0E  C028  FFDA         	movlw	low(062h)
 19893  002A12  0E62               	movwf	indf2
 19894  002A14  6EDF               	goto	l344
 19895  002A16  EF70  F015         	line	245
 19896                           ;fifo.c: 245:             case 225: *d = 'C'; break;
 19897                           	
 19898                           l339:
 19899  002A1A                     	
 19900                           l5349:
 19901  002A1A                     	movff	(c:decodifica@d),fsr2l
 19902  002A1A  C027  FFD9         	movff	(c:decodifica@d+1),fsr2h
 19903  002A1E  C028  FFDA         	movlw	low(043h)
 19904  002A22  0E43               	movwf	indf2
 19905  002A24  6EDF               	goto	l344
 19906  002A26  EF70  F015         	line	246
 19907                           ;fifo.c: 246:             case 226: *d = 'c'; break;
 19908                           	
 19909                           l340:
 19910  002A2A                     	
 19911                           l5351:
 19912  002A2A                     	movff	(c:decodifica@d),fsr2l
 19913  002A2A  C027  FFD9         	movff	(c:decodifica@d+1),fsr2h
 19914  002A2E  C028  FFDA         	movlw	low(063h)
 19915  002A32  0E63               	movwf	indf2
 19916  002A34  6EDF               	goto	l344
 19917  002A36  EF70  F015         	line	247
 19918                           ;fifo.c: 247:             case 227: *d = 'D'; break;
 19919                           	
 19920                           l341:
 19921  002A3A                     	
 19922                           l5353:
 19923  002A3A                     	movff	(c:decodifica@d),fsr2l
 19924  002A3A  C027  FFD9         	movff	(c:decodifica@d+1),fsr2h
 19925  002A3E  C028  FFDA         	movlw	low(044h)
 19926  002A42  0E44               	movwf	indf2
 19927  002A44  6EDF               	goto	l344
 19928  002A46  EF70  F015         	line	248
 19929                           ;fifo.c: 248:             case 228: *d = 'd'; break;
 19930                           	
 19931                           l342:
 19932  002A4A                     	
 19933                           l5355:
 19934  002A4A                     	movff	(c:decodifica@d),fsr2l
 19935  002A4A  C027  FFD9         	movff	(c:decodifica@d+1),fsr2h
 19936  002A4E  C028  FFDA         	movlw	low(064h)
 19937  002A52  0E64               	movwf	indf2
 19938  002A54  6EDF               	goto	l344
 19939  002A56  EF70  F015         	line	249
 19940                           ;fifo.c: 249:             case 254: *d = 0 ; break;
 19941                           	
 19942                           l343:
 19943  002A5A                     	
 19944                           l5357:
 19945  002A5A                     	movff	(c:decodifica@d),fsr2l
 19946  002A5A  C027  FFD9         	movff	(c:decodifica@d+1),fsr2h
 19947  002A5E  C028  FFDA         	movlw	low(0)
 19948  002A62  0E00               	movwf	indf2
 19949  002A64  6EDF               	goto	l344
 19950  002A66  EF70  F015         	line	250
 19951                           	
 19952                           l5359:
 19953  002A6A                     ;fifo.c: 250:         }
 19954                           	goto	l344
 19955  002A6A  EF70  F015         	
 19956                           l333:
 19957  002A6E                     	
 19958                           l5361:
 19959  002A6E                     	movff	(c:decodifica@d),fsr2l
 19960  002A6E  C027  FFD9         	movff	(c:decodifica@d+1),fsr2h
 19961  002A72  C028  FFDA         	movf	indf2,w
 19962  002A76  50DF               	movwf	(??_decodifica+0+0)&0ffh,c
 19963  002A78  6E29               	clrf	(??_decodifica+0+0+1)&0ffh,c
 19964  002A7A  6A2A               
 19965                           	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
 19966                           ; Switch size 1, requested type "space"
 19967                           ; Number of cases is 1, Range of values is 0 to 0
 19968                           ; switch strategies available:
 19969                           ; Name         Instructions Cycles
 19970                           ; simple_byte            4     3 (average)
 19971                           ;	Chosen strategy is simple_byte
 19972                           
 19973                           	movf ??_decodifica+0+1,c,w
 19974  002A7C  502A               	xorlw	0^0	; case 0
 19975  002A7E  0A00               	skipnz
 19976  002A80  B4D8               	goto	l7985
 19977  002A82  EF45  F015         	goto	l344
 19978  002A86  EF70  F015         	
 19979                           l7985:
 19980  002A8A                     ; Switch size 1, requested type "space"
 19981                           ; Number of cases is 9, Range of values is 221 to 254
 19982                           ; switch strategies available:
 19983                           ; Name         Instructions Cycles
 19984                           ; simple_byte           28    15 (average)
 19985                           ;	Chosen strategy is simple_byte
 19986                           
 19987                           	movf ??_decodifica+0+0,c,w
 19988  002A8A  5029               	xorlw	221^0	; case 221
 19989  002A8C  0ADD               	skipnz
 19990  002A8E  B4D8               	goto	l5341
 19991  002A90  EFED  F014         	xorlw	222^221	; case 222
 19992  002A94  0A03               	skipnz
 19993  002A96  B4D8               	goto	l5343
 19994  002A98  EFF5  F014         	xorlw	223^222	; case 223
 19995  002A9C  0A01               	skipnz
 19996  002A9E  B4D8               	goto	l5345
 19997  002AA0  EFFD  F014         	xorlw	224^223	; case 224
 19998  002AA4  0A3F               	skipnz
 19999  002AA6  B4D8               	goto	l5347
 20000  002AA8  EF05  F015         	xorlw	225^224	; case 225
 20001  002AAC  0A01               	skipnz
 20002  002AAE  B4D8               	goto	l5349
 20003  002AB0  EF0D  F015         	xorlw	226^225	; case 226
 20004  002AB4  0A03               	skipnz
 20005  002AB6  B4D8               	goto	l5351
 20006  002AB8  EF15  F015         	xorlw	227^226	; case 227
 20007  002ABC  0A01               	skipnz
 20008  002ABE  B4D8               	goto	l5353
 20009  002AC0  EF1D  F015         	xorlw	228^227	; case 228
 20010  002AC4  0A07               	skipnz
 20011  002AC6  B4D8               	goto	l5355
 20012  002AC8  EF25  F015         	xorlw	254^228	; case 254
 20013  002ACC  0A1A               	skipnz
 20014  002ACE  B4D8               	goto	l5357
 20015  002AD0  EF2D  F015         	goto	l344
 20016  002AD4  EF70  F015         
 20017                           	
 20018                           l335:
 20019  002AD8                     	goto	l344
 20020  002AD8  EF70  F015         	line	251
 20021                           ;fifo.c: 251:     }
 20022                           	
 20023                           l332:
 20024  002ADC                     	goto	l344
 20025  002ADC  EF70  F015         	
 20026                           l330:
 20027  002AE0                     	line	252
 20028                           	
 20029                           l344:
 20030  002AE0                     	return	;funcret
 20031  002AE0  0012               	opt stack 0
 20032                           GLOBAL	__end_of_decodifica
 20033                           	__end_of_decodifica:
 20034  002AE2                     	signat	_decodifica,4217
 20035                           	global	_alt_atuador
 20036                           
 20037 ;; *************** function _alt_atuador *****************
 20038 ;; Defined at:
 20039 ;;		line 92 in file "fifo.c"
 20040 ;; Parameters:    Size  Location     Type
 20041 ;;  tecla           1    wreg     unsigned char 
 20042 ;; Auto vars:     Size  Location     Type
 20043 ;;  tecla           1    2[COMRAM] unsigned char 
 20044 ;; Return value:  Size  Location     Type
 20045 ;;                  1    wreg      void 
 20046 ;; Registers used:
 20047 ;;		wreg, status,2, status,0
 20048 ;; Tracked objects:
 20049 ;;		On entry : 0/0
 20050 ;;		On exit  : 0/0
 20051 ;;		Unchanged: 0/0
 20052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20053 ;;      Params:         0       0       0       0       0       0       0       0       0
 20054 ;;      Locals:         1       0       0       0       0       0       0       0       0
 20055 ;;      Temps:          2       0       0       0       0       0       0       0       0
 20056 ;;      Totals:         3       0       0       0       0       0       0       0       0
 20057 ;;Total ram usage:        3 bytes
 20058 ;; Hardware stack levels used:    1
 20059 ;; Hardware stack levels required when called:    2
 20060 ;; This function calls:
 20061 ;;		Nothing
 20062 ;; This function is called by:
 20063 ;;		_manipula_atuadores_init
 20064 ;;		_fifo_delete
 20065 ;;		_main
 20066 ;; This function uses a non-reentrant model
 20067 ;;
 20068                           psect	text38,class=CODE,space=0,reloc=2,group=0
 20069                           	line	92
 20070                           global __ptext38
 20071                           __ptext38:
 20072  003520                     psect	text38
 20073                           	file	"fifo.c"
 20074                           	line	92
 20075                           	global	__size_of_alt_atuador
 20076                           	__size_of_alt_atuador	equ	__end_of_alt_atuador-_alt_atuador
 20077  0000                     	
 20078                           _alt_atuador:
 20079  003520                     ;incstack = 0
 20080                           	opt	stack 27
 20081                           ;alt_atuador@tecla stored from wreg
 20082                           	movwf	((c:alt_atuador@tecla)),c
 20083  003520  6E29               	line	94
 20084                           	
 20085                           l5323:
 20086  003522                     ;fifo.c: 92: void alt_atuador( char tecla );fifo.c: 93: {;fifo.c: 94:     switch(tecla)

 20087                           	goto	l5327
 20088  003522  EFC1  F01A         	line	96
 20089                           ;fifo.c: 95:     {;fifo.c: 96:         case 'A': atuador.A = atuador.A ^ 1; break;
 20090                           	
 20091                           l261:
 20092  003526                     	btfss	((c:_atuador)),c,0
 20093  003526  A014               	goto	u3631
 20094  003528  EF98  F01A         	goto	u3630
 20095  00352C  EF9B  F01A         u3631:
 20096  003530                     	bsf	((c:_atuador)),c,0
 20097  003530  8014               	goto	u3645
 20098  003532  EF9C  F01A         u3630:
 20099  003536                     	bcf	((c:_atuador)),c,0
 20100  003536  9014               u3645:
 20101  003538                     	goto	l266
 20102  003538  EFDE  F01A         	line	97
 20103                           ;fifo.c: 97:         case 'B': atuador.B = atuador.B ^ 1; break;
 20104                           	
 20105                           l263:
 20106  00353C                     	btfss	((c:_atuador)),c,1
 20107  00353C  A214               	goto	u3651
 20108  00353E  EFA3  F01A         	goto	u3650
 20109  003542  EFA6  F01A         u3651:
 20110  003546                     	bsf	((c:_atuador)),c,1
 20111  003546  8214               	goto	u3665
 20112  003548  EFA7  F01A         u3650:
 20113  00354C                     	bcf	((c:_atuador)),c,1
 20114  00354C  9214               u3665:
 20115  00354E                     	goto	l266
 20116  00354E  EFDE  F01A         	line	98
 20117                           ;fifo.c: 98:         case 'C': atuador.C = atuador.C ^ 1; break;
 20118                           	
 20119                           l264:
 20120  003552                     	btfss	((c:_atuador)),c,2
 20121  003552  A414               	goto	u3671
 20122  003554  EFAE  F01A         	goto	u3670
 20123  003558  EFB1  F01A         u3671:
 20124  00355C                     	bsf	((c:_atuador)),c,2
 20125  00355C  8414               	goto	u3685
 20126  00355E  EFB2  F01A         u3670:
 20127  003562                     	bcf	((c:_atuador)),c,2
 20128  003562  9414               u3685:
 20129  003564                     	goto	l266
 20130  003564  EFDE  F01A         	line	99
 20131                           ;fifo.c: 99:         case 'D': atuador.D = atuador.D ^ 1; break;
 20132                           	
 20133                           l265:
 20134  003568                     	btfss	((c:_atuador)),c,3
 20135  003568  A614               	goto	u3691
 20136  00356A  EFB9  F01A         	goto	u3690
 20137  00356E  EFBC  F01A         u3691:
 20138  003572                     	bsf	((c:_atuador)),c,3
 20139  003572  8614               	goto	u3705
 20140  003574  EFBD  F01A         u3690:
 20141  003578                     	bcf	((c:_atuador)),c,3
 20142  003578  9614               u3705:
 20143  00357A                     	goto	l266
 20144  00357A  EFDE  F01A         	line	100
 20145                           	
 20146                           l5325:
 20147  00357E                     ;fifo.c: 100:     }
 20148                           	goto	l266
 20149  00357E  EFDE  F01A         	
 20150                           l260:
 20151  003582                     	
 20152                           l5327:
 20153  003582                     	movf	((c:alt_atuador@tecla)),c,w
 20154  003582  5029               	movwf	(??_alt_atuador+0+0)&0ffh,c
 20155  003584  6E27               	clrf	(??_alt_atuador+0+0+1)&0ffh,c
 20156  003586  6A28               
 20157                           	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
 20158                           ; Switch size 1, requested type "space"
 20159                           ; Number of cases is 1, Range of values is 0 to 0
 20160                           ; switch strategies available:
 20161                           ; Name         Instructions Cycles
 20162                           ; simple_byte            4     3 (average)
 20163                           ;	Chosen strategy is simple_byte
 20164                           
 20165                           	movf ??_alt_atuador+0+1,c,w
 20166  003588  5028               	xorlw	0^0	; case 0
 20167  00358A  0A00               	skipnz
 20168  00358C  B4D8               	goto	l7987
 20169  00358E  EFCB  F01A         	goto	l266
 20170  003592  EFDE  F01A         	
 20171                           l7987:
 20172  003596                     ; Switch size 1, requested type "space"
 20173                           ; Number of cases is 4, Range of values is 65 to 68
 20174                           ; switch strategies available:
 20175                           ; Name         Instructions Cycles
 20176                           ; simple_byte           13     7 (average)
 20177                           ;	Chosen strategy is simple_byte
 20178                           
 20179                           	movf ??_alt_atuador+0+0,c,w
 20180  003596  5027               	xorlw	65^0	; case 65
 20181  003598  0A41               	skipnz
 20182  00359A  B4D8               	goto	l261
 20183  00359C  EF93  F01A         	xorlw	66^65	; case 66
 20184  0035A0  0A03               	skipnz
 20185  0035A2  B4D8               	goto	l263
 20186  0035A4  EF9E  F01A         	xorlw	67^66	; case 67
 20187  0035A8  0A01               	skipnz
 20188  0035AA  B4D8               	goto	l264
 20189  0035AC  EFA9  F01A         	xorlw	68^67	; case 68
 20190  0035B0  0A07               	skipnz
 20191  0035B2  B4D8               	goto	l265
 20192  0035B4  EFB4  F01A         	goto	l266
 20193  0035B8  EFDE  F01A         
 20194                           	
 20195                           l262:
 20196  0035BC                     	line	101
 20197                           	
 20198                           l266:
 20199  0035BC                     	return	;funcret
 20200  0035BC  0012               	opt stack 0
 20201                           GLOBAL	__end_of_alt_atuador
 20202                           	__end_of_alt_atuador:
 20203  0035BE                     	signat	_alt_atuador,4217
 20204                           	global	_fifo_adrs
 20205                           
 20206 ;; *************** function _fifo_adrs *****************
 20207 ;; Defined at:
 20208 ;;		line 178 in file "fifo.c"
 20209 ;; Parameters:    Size  Location     Type
 20210 ;;		None
 20211 ;; Auto vars:     Size  Location     Type
 20212 ;;		None
 20213 ;; Return value:  Size  Location     Type
 20214 ;;                  2    0[COMRAM] PTR unsigned char 
 20215 ;; Registers used:
 20216 ;;		wreg, status,2, status,0
 20217 ;; Tracked objects:
 20218 ;;		On entry : 0/0
 20219 ;;		On exit  : 0/0
 20220 ;;		Unchanged: 0/0
 20221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20222 ;;      Params:         2       0       0       0       0       0       0       0       0
 20223 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20224 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20225 ;;      Totals:         2       0       0       0       0       0       0       0       0
 20226 ;;Total ram usage:        2 bytes
 20227 ;; Hardware stack levels used:    1
 20228 ;; Hardware stack levels required when called:    2
 20229 ;; This function calls:
 20230 ;;		Nothing
 20231 ;; This function is called by:
 20232 ;;		_main
 20233 ;; This function uses a non-reentrant model
 20234 ;;
 20235                           psect	text39,class=CODE,space=0,reloc=2,group=0
 20236                           	line	178
 20237                           global __ptext39
 20238                           __ptext39:
 20239  0042DC                     psect	text39
 20240                           	file	"fifo.c"
 20241                           	line	178
 20242                           	global	__size_of_fifo_adrs
 20243                           	__size_of_fifo_adrs	equ	__end_of_fifo_adrs-_fifo_adrs
 20244  0000                     	
 20245                           _fifo_adrs:
 20246  0042DC                     ;incstack = 0
 20247                           	opt	stack 28
 20248                           	line	180
 20249                           	
 20250                           l5805:
 20251  0042DC                     ;fifo.c: 180:     return fila;
 20252                           		movlw	low(_fila)
 20253  0042DC  0E15               	movwf	((c:?_fifo_adrs)),c
 20254  0042DE  6E27               	movlw	high(_fila)
 20255  0042E0  0E00               	movwf	((c:?_fifo_adrs+1)),c
 20256  0042E2  6E28               
 20257                           	goto	l301
 20258  0042E4  EF74  F021         	
 20259                           l5807:
 20260  0042E8                     	line	181
 20261                           	
 20262                           l301:
 20263  0042E8                     	return	;funcret
 20264  0042E8  0012               	opt stack 0
 20265                           GLOBAL	__end_of_fifo_adrs
 20266                           	__end_of_fifo_adrs:
 20267  0042EA                     	signat	_fifo_adrs,90
 20268                           	global	_fifo_add_tempo
 20269                           
 20270 ;; *************** function _fifo_add_tempo *****************
 20271 ;; Defined at:
 20272 ;;		line 269 in file "fifo.c"
 20273 ;; Parameters:    Size  Location     Type
 20274 ;;  t               1    wreg     const unsigned char 
 20275 ;; Auto vars:     Size  Location     Type
 20276 ;;  t               1   15[COMRAM] const unsigned char 
 20277 ;; Return value:  Size  Location     Type
 20278 ;;                  1    wreg      void 
 20279 ;; Registers used:
 20280 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20281 ;; Tracked objects:
 20282 ;;		On entry : 0/0
 20283 ;;		On exit  : 0/0
 20284 ;;		Unchanged: 0/0
 20285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20286 ;;      Params:         0       0       0       0       0       0       0       0       0
 20287 ;;      Locals:         1       0       0       0       0       0       0       0       0
 20288 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20289 ;;      Totals:         1       0       0       0       0       0       0       0       0
 20290 ;;Total ram usage:        1 bytes
 20291 ;; Hardware stack levels used:    1
 20292 ;; Hardware stack levels required when called:    5
 20293 ;; This function calls:
 20294 ;;		_codifica
 20295 ;;		_fifo_alinharPrint
 20296 ;; This function is called by:
 20297 ;;		_main
 20298 ;; This function uses a non-reentrant model
 20299 ;;
 20300                           psect	text40,class=CODE,space=0,reloc=2,group=0
 20301                           	line	269
 20302                           global __ptext40
 20303                           __ptext40:
 20304  00391C                     psect	text40
 20305                           	file	"fifo.c"
 20306                           	line	269
 20307                           	global	__size_of_fifo_add_tempo
 20308                           	__size_of_fifo_add_tempo	equ	__end_of_fifo_add_tempo-_fifo_add_tempo
 20309  0000                     	
 20310                           _fifo_add_tempo:
 20311  00391C                     ;incstack = 0
 20312                           	opt	stack 25
 20313                           ;fifo_add_tempo@t stored from wreg
 20314                           	movwf	((c:fifo_add_tempo@t)),c
 20315  00391C  6E36               	line	271
 20316                           	
 20317                           l5837:
 20318  00391E                     ;fifo.c: 269: void fifo_add_tempo(const char t);fifo.c: 270: {;fifo.c: 271:     if(ind_f
                                 ila < 18)
 20319                           		movlw	012h-0
 20320  00391E  0E12               	cpfslt	((c:_ind_fila)),c
 20321  003920  6059               	goto	u4211
 20322  003922  EF95  F01C         	goto	u4210
 20323  003926  EF97  F01C         
 20324                           u4211:
 20325  00392A                     	goto	l5849
 20326  00392A  EFBF  F01C         u4210:
 20327  00392E                     	line	273
 20328                           	
 20329                           l5839:
 20330  00392E                     ;fifo.c: 272:     {;fifo.c: 273:         if(t)
 20331                           	movf	((c:fifo_add_tempo@t)),c,w
 20332  00392E  5036               	btfsc	status,2
 20333  003930  B4D8               	goto	u4221
 20334  003932  EF9D  F01C         	goto	u4220
 20335  003936  EF9F  F01C         u4221:
 20336  00393A                     	goto	l5849
 20337  00393A  EFBF  F01C         u4220:
 20338  00393E                     	line	275
 20339                           	
 20340                           l5841:
 20341  00393E                     ;fifo.c: 274:         {;fifo.c: 275:             codifica('t', &t);
 20342                           		movlw	low(fifo_add_tempo@t)
 20343  00393E  0E36               	movwf	((c:codifica@dado)),c
 20344  003940  6E27               	movlw	high(fifo_add_tempo@t)
 20345  003942  0E00               	movwf	((c:codifica@dado+1)),c
 20346  003944  6E28               
 20347                           	movlw	(074h)&0ffh
 20348  003946  0E74               	
 20349                           	call	_codifica
 20350  003948  EC13  F014         	line	276
 20351                           	
 20352                           l5843:
 20353  00394C                     ;fifo.c: 276:             fila[ind_fila] = t;
 20354                           	movf	((c:_ind_fila)),c,w
 20355  00394C  5059               	mullw	01h
 20356  00394E  0D01               	movlw	low(_fila)
 20357  003950  0E15               	addwf	(prodl),c,w
 20358  003952  24F3               	movwf	c:fsr2l
 20359  003954  6ED9               	movlw	high(_fila)
 20360  003956  0E00               	addwfc	prod+1,w
 20361  003958  20F4               	movwf	1+c:fsr2l
 20362  00395A  6EDA               	movff	(c:fifo_add_tempo@t),indf2
 20363  00395C  C036  FFDF         
 20364                           	line	277
 20365                           	
 20366                           l5845:
 20367  003960                     ;fifo.c: 277:             ind_fila++;
 20368                           	incf	((c:_ind_fila)),c
 20369  003960  2A59               	line	278
 20370                           	
 20371                           l5847:
 20372  003962                     ;fifo.c: 278:             fila[ind_fila] = 0;
 20373                           	movf	((c:_ind_fila)),c,w
 20374  003962  5059               	mullw	01h
 20375  003964  0D01               	movlw	low(_fila)
 20376  003966  0E15               	addwf	(prodl),c,w
 20377  003968  24F3               	movwf	c:fsr2l
 20378  00396A  6ED9               	movlw	high(_fila)
 20379  00396C  0E00               	addwfc	prod+1,w
 20380  00396E  20F4               	movwf	1+c:fsr2l
 20381  003970  6EDA               	movlw	low(0)
 20382  003972  0E00               	movwf	indf2
 20383  003974  6EDF               	goto	l5849
 20384  003976  EFBF  F01C         	line	279
 20385                           ;fifo.c: 279:         }
 20386                           	
 20387                           l353:
 20388  00397A                     	goto	l5849
 20389  00397A  EFBF  F01C         	line	280
 20390                           ;fifo.c: 280:     }
 20391                           	
 20392                           l352:
 20393  00397E                     	line	281
 20394                           	
 20395                           l5849:
 20396  00397E                     ;fifo.c: 281:     fifo_alinharPrint();
 20397                           	call	_fifo_alinharPrint	;wreg free
 20398  00397E  ECA5  F016         	line	282
 20399                           	
 20400                           l354:
 20401  003982                     	return	;funcret
 20402  003982  0012               	opt stack 0
 20403                           GLOBAL	__end_of_fifo_add_tempo
 20404                           	__end_of_fifo_add_tempo:
 20405  003984                     	signat	_fifo_add_tempo,4217
 20406                           	global	_fifo_add_control
 20407                           
 20408 ;; *************** function _fifo_add_control *****************
 20409 ;; Defined at:
 20410 ;;		line 284 in file "fifo.c"
 20411 ;; Parameters:    Size  Location     Type
 20412 ;;  c               1    wreg     const unsigned char 
 20413 ;; Auto vars:     Size  Location     Type
 20414 ;;  c               1   15[COMRAM] const unsigned char 
 20415 ;; Return value:  Size  Location     Type
 20416 ;;                  1    wreg      void 
 20417 ;; Registers used:
 20418 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20419 ;; Tracked objects:
 20420 ;;		On entry : 0/0
 20421 ;;		On exit  : 0/0
 20422 ;;		Unchanged: 0/0
 20423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20424 ;;      Params:         0       0       0       0       0       0       0       0       0
 20425 ;;      Locals:         1       0       0       0       0       0       0       0       0
 20426 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20427 ;;      Totals:         1       0       0       0       0       0       0       0       0
 20428 ;;Total ram usage:        1 bytes
 20429 ;; Hardware stack levels used:    1
 20430 ;; Hardware stack levels required when called:    5
 20431 ;; This function calls:
 20432 ;;		_codifica
 20433 ;;		_fifo_alinharPrint
 20434 ;; This function is called by:
 20435 ;;		_main
 20436 ;; This function uses a non-reentrant model
 20437 ;;
 20438                           psect	text41,class=CODE,space=0,reloc=2,group=0
 20439                           	line	284
 20440                           global __ptext41
 20441                           __ptext41:
 20442  003C36                     psect	text41
 20443                           	file	"fifo.c"
 20444                           	line	284
 20445                           	global	__size_of_fifo_add_control
 20446                           	__size_of_fifo_add_control	equ	__end_of_fifo_add_control-_fifo_add_control
 20447  0000                     	
 20448                           _fifo_add_control:
 20449  003C36                     ;incstack = 0
 20450                           	opt	stack 25
 20451                           ;fifo_add_control@c stored from wreg
 20452                           	movwf	((c:fifo_add_control@c)),c
 20453  003C36  6E36               	line	286
 20454                           	
 20455                           l5851:
 20456  003C38                     ;fifo.c: 284: void fifo_add_control(const char c);fifo.c: 285: {;fifo.c: 286:     if(ind
                                 _fila < 18)
 20457                           		movlw	012h-0
 20458  003C38  0E12               	cpfslt	((c:_ind_fila)),c
 20459  003C3A  6059               	goto	u4231
 20460  003C3C  EF22  F01E         	goto	u4230
 20461  003C40  EF24  F01E         
 20462                           u4231:
 20463  003C44                     	goto	l5861
 20464  003C44  EF42  F01E         u4230:
 20465  003C48                     	line	290
 20466                           	
 20467                           l5853:
 20468  003C48                     ;fifo.c: 287:     {;fifo.c: 290:             codifica('p', &c);
 20469                           		movlw	low(fifo_add_control@c)
 20470  003C48  0E36               	movwf	((c:codifica@dado)),c
 20471  003C4A  6E27               	movlw	high(fifo_add_control@c)
 20472  003C4C  0E00               	movwf	((c:codifica@dado+1)),c
 20473  003C4E  6E28               
 20474                           	movlw	(070h)&0ffh
 20475  003C50  0E70               	
 20476                           	call	_codifica
 20477  003C52  EC13  F014         	line	291
 20478                           	
 20479                           l5855:
 20480  003C56                     ;fifo.c: 291:             fila[ind_fila] = c;
 20481                           	movf	((c:_ind_fila)),c,w
 20482  003C56  5059               	mullw	01h
 20483  003C58  0D01               	movlw	low(_fila)
 20484  003C5A  0E15               	addwf	(prodl),c,w
 20485  003C5C  24F3               	movwf	c:fsr2l
 20486  003C5E  6ED9               	movlw	high(_fila)
 20487  003C60  0E00               	addwfc	prod+1,w
 20488  003C62  20F4               	movwf	1+c:fsr2l
 20489  003C64  6EDA               	movff	(c:fifo_add_control@c),indf2
 20490  003C66  C036  FFDF         
 20491                           	line	292
 20492                           	
 20493                           l5857:
 20494  003C6A                     ;fifo.c: 292:             ind_fila++;
 20495                           	incf	((c:_ind_fila)),c
 20496  003C6A  2A59               	line	293
 20497                           	
 20498                           l5859:
 20499  003C6C                     ;fifo.c: 293:             fila[ind_fila] = 0;
 20500                           	movf	((c:_ind_fila)),c,w
 20501  003C6C  5059               	mullw	01h
 20502  003C6E  0D01               	movlw	low(_fila)
 20503  003C70  0E15               	addwf	(prodl),c,w
 20504  003C72  24F3               	movwf	c:fsr2l
 20505  003C74  6ED9               	movlw	high(_fila)
 20506  003C76  0E00               	addwfc	prod+1,w
 20507  003C78  20F4               	movwf	1+c:fsr2l
 20508  003C7A  6EDA               	movlw	low(0)
 20509  003C7C  0E00               	movwf	indf2
 20510  003C7E  6EDF               	goto	l5861
 20511  003C80  EF42  F01E         	line	295
 20512                           ;fifo.c: 295:     }
 20513                           	
 20514                           l357:
 20515  003C84                     	line	296
 20516                           	
 20517                           l5861:
 20518  003C84                     ;fifo.c: 296:     fifo_alinharPrint();
 20519                           	call	_fifo_alinharPrint	;wreg free
 20520  003C84  ECA5  F016         	line	297
 20521                           	
 20522                           l358:
 20523  003C88                     	return	;funcret
 20524  003C88  0012               	opt stack 0
 20525                           GLOBAL	__end_of_fifo_add_control
 20526                           	__end_of_fifo_add_control:
 20527  003C8A                     	signat	_fifo_add_control,4217
 20528                           	global	_fifo_add_ciclo
 20529                           
 20530 ;; *************** function _fifo_add_ciclo *****************
 20531 ;; Defined at:
 20532 ;;		line 299 in file "fifo.c"
 20533 ;; Parameters:    Size  Location     Type
 20534 ;;  ciclos          2    0[COMRAM] unsigned int 
 20535 ;; Auto vars:     Size  Location     Type
 20536 ;;		None
 20537 ;; Return value:  Size  Location     Type
 20538 ;;                  1    wreg      void 
 20539 ;; Registers used:
 20540 ;;		wreg, status,2
 20541 ;; Tracked objects:
 20542 ;;		On entry : 0/0
 20543 ;;		On exit  : 0/0
 20544 ;;		Unchanged: 0/0
 20545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20546 ;;      Params:         2       0       0       0       0       0       0       0       0
 20547 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20548 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20549 ;;      Totals:         2       0       0       0       0       0       0       0       0
 20550 ;;Total ram usage:        2 bytes
 20551 ;; Hardware stack levels used:    1
 20552 ;; Hardware stack levels required when called:    2
 20553 ;; This function calls:
 20554 ;;		Nothing
 20555 ;; This function is called by:
 20556 ;;		_main
 20557 ;; This function uses a non-reentrant model
 20558 ;;
 20559                           psect	text42,class=CODE,space=0,reloc=2,group=0
 20560                           	line	299
 20561                           global __ptext42
 20562                           __ptext42:
 20563  004312                     psect	text42
 20564                           	file	"fifo.c"
 20565                           	line	299
 20566                           	global	__size_of_fifo_add_ciclo
 20567                           	__size_of_fifo_add_ciclo	equ	__end_of_fifo_add_ciclo-_fifo_add_ciclo
 20568  0000                     	
 20569                           _fifo_add_ciclo:
 20570  004312                     ;incstack = 0
 20571                           	opt	stack 28
 20572                           	line	301
 20573                           	
 20574                           l5863:
 20575  004312                     ;fifo.c: 299: void fifo_add_ciclo(unsigned int ciclos);fifo.c: 300: {;fifo.c: 301:     f
                                 ila[0] = ciclos & 0x00ff;
 20576                           	movff	(c:fifo_add_ciclo@ciclos),(c:_fila)
 20577  004312  C027  F015         	line	302
 20578                           	
 20579                           l5865:
 20580  004316                     ;fifo.c: 302:     fila[1] = ciclos >> 8;
 20581                           	movf	((c:fifo_add_ciclo@ciclos+1)),c,w
 20582  004316  5028               	movwf	(0+((c:_fila)+01h)),c
 20583  004318  6E16               	line	303
 20584                           	
 20585                           l361:
 20586  00431A                     	return	;funcret
 20587  00431A  0012               	opt stack 0
 20588                           GLOBAL	__end_of_fifo_add_ciclo
 20589                           	__end_of_fifo_add_ciclo:
 20590  00431C                     	signat	_fifo_add_ciclo,4217
 20591                           	global	_fifo_add
 20592                           
 20593 ;; *************** function _fifo_add *****************
 20594 ;; Defined at:
 20595 ;;		line 254 in file "fifo.c"
 20596 ;; Parameters:    Size  Location     Type
 20597 ;;  passo           1    wreg     const unsigned char 
 20598 ;; Auto vars:     Size  Location     Type
 20599 ;;  passo           1   15[COMRAM] const unsigned char 
 20600 ;; Return value:  Size  Location     Type
 20601 ;;                  1    wreg      void 
 20602 ;; Registers used:
 20603 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20604 ;; Tracked objects:
 20605 ;;		On entry : 0/0
 20606 ;;		On exit  : 0/0
 20607 ;;		Unchanged: 0/0
 20608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20609 ;;      Params:         0       0       0       0       0       0       0       0       0
 20610 ;;      Locals:         1       0       0       0       0       0       0       0       0
 20611 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20612 ;;      Totals:         1       0       0       0       0       0       0       0       0
 20613 ;;Total ram usage:        1 bytes
 20614 ;; Hardware stack levels used:    1
 20615 ;; Hardware stack levels required when called:    5
 20616 ;; This function calls:
 20617 ;;		_codifica
 20618 ;;		_fifo_alinharPrint
 20619 ;; This function is called by:
 20620 ;;		_main
 20621 ;; This function uses a non-reentrant model
 20622 ;;
 20623                           psect	text43,class=CODE,space=0,reloc=2,group=0
 20624                           	line	254
 20625                           global __ptext43
 20626                           __ptext43:
 20627  003984                     psect	text43
 20628                           	file	"fifo.c"
 20629                           	line	254
 20630                           	global	__size_of_fifo_add
 20631                           	__size_of_fifo_add	equ	__end_of_fifo_add-_fifo_add
 20632  0000                     	
 20633                           _fifo_add:
 20634  003984                     ;incstack = 0
 20635                           	opt	stack 25
 20636                           ;fifo_add@passo stored from wreg
 20637                           	movwf	((c:fifo_add@passo)),c
 20638  003984  6E36               	line	256
 20639                           	
 20640                           l5823:
 20641  003986                     ;fifo.c: 254: void fifo_add(const char passo);fifo.c: 255: {;fifo.c: 256:     if(ind_fil
                                 a < 18)
 20642                           		movlw	012h-0
 20643  003986  0E12               	cpfslt	((c:_ind_fila)),c
 20644  003988  6059               	goto	u4191
 20645  00398A  EFC9  F01C         	goto	u4190
 20646  00398E  EFCB  F01C         
 20647                           u4191:
 20648  003992                     	goto	l5835
 20649  003992  EFF3  F01C         u4190:
 20650  003996                     	line	258
 20651                           	
 20652                           l5825:
 20653  003996                     ;fifo.c: 257:     {;fifo.c: 258:         if(passo)
 20654                           	movf	((c:fifo_add@passo)),c,w
 20655  003996  5036               	btfsc	status,2
 20656  003998  B4D8               	goto	u4201
 20657  00399A  EFD1  F01C         	goto	u4200
 20658  00399E  EFD3  F01C         u4201:
 20659  0039A2                     	goto	l5835
 20660  0039A2  EFF3  F01C         u4200:
 20661  0039A6                     	line	260
 20662                           	
 20663                           l5827:
 20664  0039A6                     ;fifo.c: 259:         {;fifo.c: 260:             codifica('a', &passo);
 20665                           		movlw	low(fifo_add@passo)
 20666  0039A6  0E36               	movwf	((c:codifica@dado)),c
 20667  0039A8  6E27               	movlw	high(fifo_add@passo)
 20668  0039AA  0E00               	movwf	((c:codifica@dado+1)),c
 20669  0039AC  6E28               
 20670                           	movlw	(061h)&0ffh
 20671  0039AE  0E61               	
 20672                           	call	_codifica
 20673  0039B0  EC13  F014         	line	261
 20674                           	
 20675                           l5829:
 20676  0039B4                     ;fifo.c: 261:             fila[ind_fila] = passo;
 20677                           	movf	((c:_ind_fila)),c,w
 20678  0039B4  5059               	mullw	01h
 20679  0039B6  0D01               	movlw	low(_fila)
 20680  0039B8  0E15               	addwf	(prodl),c,w
 20681  0039BA  24F3               	movwf	c:fsr2l
 20682  0039BC  6ED9               	movlw	high(_fila)
 20683  0039BE  0E00               	addwfc	prod+1,w
 20684  0039C0  20F4               	movwf	1+c:fsr2l
 20685  0039C2  6EDA               	movff	(c:fifo_add@passo),indf2
 20686  0039C4  C036  FFDF         
 20687                           	line	262
 20688                           	
 20689                           l5831:
 20690  0039C8                     ;fifo.c: 262:             ind_fila++;
 20691                           	incf	((c:_ind_fila)),c
 20692  0039C8  2A59               	line	263
 20693                           	
 20694                           l5833:
 20695  0039CA                     ;fifo.c: 263:             fila[ind_fila] = 0;
 20696                           	movf	((c:_ind_fila)),c,w
 20697  0039CA  5059               	mullw	01h
 20698  0039CC  0D01               	movlw	low(_fila)
 20699  0039CE  0E15               	addwf	(prodl),c,w
 20700  0039D0  24F3               	movwf	c:fsr2l
 20701  0039D2  6ED9               	movlw	high(_fila)
 20702  0039D4  0E00               	addwfc	prod+1,w
 20703  0039D6  20F4               	movwf	1+c:fsr2l
 20704  0039D8  6EDA               	movlw	low(0)
 20705  0039DA  0E00               	movwf	indf2
 20706  0039DC  6EDF               	goto	l5835
 20707  0039DE  EFF3  F01C         	line	264
 20708                           ;fifo.c: 264:         }
 20709                           	
 20710                           l348:
 20711  0039E2                     	goto	l5835
 20712  0039E2  EFF3  F01C         	line	265
 20713                           ;fifo.c: 265:     }
 20714                           	
 20715                           l347:
 20716  0039E6                     	line	266
 20717                           	
 20718                           l5835:
 20719  0039E6                     ;fifo.c: 266:      fifo_alinharPrint();
 20720                           	call	_fifo_alinharPrint	;wreg free
 20721  0039E6  ECA5  F016         	line	267
 20722                           	
 20723                           l349:
 20724  0039EA                     	return	;funcret
 20725  0039EA  0012               	opt stack 0
 20726                           GLOBAL	__end_of_fifo_add
 20727                           	__end_of_fifo_add:
 20728  0039EC                     	signat	_fifo_add,4217
 20729                           	global	_fifo_alinharPrint
 20730                           
 20731 ;; *************** function _fifo_alinharPrint *****************
 20732 ;; Defined at:
 20733 ;;		line 482 in file "fifo.c"
 20734 ;; Parameters:    Size  Location     Type
 20735 ;;		None
 20736 ;; Auto vars:     Size  Location     Type
 20737 ;;  aux             1   14[COMRAM] unsigned char 
 20738 ;;  i               1   13[COMRAM] unsigned char 
 20739 ;;  cont            1   12[COMRAM] unsigned char 
 20740 ;; Return value:  Size  Location     Type
 20741 ;;                  1    wreg      void 
 20742 ;; Registers used:
 20743 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20744 ;; Tracked objects:
 20745 ;;		On entry : 0/0
 20746 ;;		On exit  : 0/0
 20747 ;;		Unchanged: 0/0
 20748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20749 ;;      Params:         0       0       0       0       0       0       0       0       0
 20750 ;;      Locals:         3       0       0       0       0       0       0       0       0
 20751 ;;      Temps:          1       0       0       0       0       0       0       0       0
 20752 ;;      Totals:         4       0       0       0       0       0       0       0       0
 20753 ;;Total ram usage:        4 bytes
 20754 ;; Hardware stack levels used:    1
 20755 ;; Hardware stack levels required when called:    4
 20756 ;; This function calls:
 20757 ;;		_dignum_tam
 20758 ;; This function is called by:
 20759 ;;		_fifo_delete
 20760 ;;		_fifo_add
 20761 ;;		_fifo_add_tempo
 20762 ;;		_fifo_add_control
 20763 ;; This function uses a non-reentrant model
 20764 ;;
 20765                           psect	text44,class=CODE,space=0,reloc=2,group=0
 20766                           	line	482
 20767                           global __ptext44
 20768                           __ptext44:
 20769  002D4A                     psect	text44
 20770                           	file	"fifo.c"
 20771                           	line	482
 20772                           	global	__size_of_fifo_alinharPrint
 20773                           	__size_of_fifo_alinharPrint	equ	__end_of_fifo_alinharPrint-_fifo_alinharPrint
 20774  0000                     	
 20775                           _fifo_alinharPrint:
 20776  002D4A                     ;incstack = 0
 20777                           	opt	stack 25
 20778                           	line	486
 20779                           	
 20780                           l5407:
 20781  002D4A                     ;fifo.c: 484:     unsigned char i;;fifo.c: 485:     unsigned char aux;;fifo.c: 486:     
                                 unsigned char cont = 0;
 20782                           	movlw	low(0)
 20783  002D4A  0E00               	movwf	((c:fifo_alinharPrint@cont)),c
 20784  002D4C  6E33               	line	488
 20785                           	
 20786                           l5409:
 20787  002D4E                     ;fifo.c: 488:     for( i=ind_fila-1; i>=2; i-- )
 20788                           	decf	((c:_ind_fila)),c,w
 20789  002D4E  0459               	movwf	((c:fifo_alinharPrint@i)),c
 20790  002D50  6E34               	
 20791                           l5411:
 20792  002D52                     		movlw	02h-0
 20793  002D52  0E02               	cpfslt	((c:fifo_alinharPrint@i)),c
 20794  002D54  6034               	goto	u3741
 20795  002D56  EFAF  F016         	goto	u3740
 20796  002D5A  EFB1  F016         
 20797                           u3741:
 20798  002D5E                     	goto	l5415
 20799  002D5E  EFB5  F016         u3740:
 20800  002D62                     	goto	l440
 20801  002D62  EF30  F017         	
 20802                           l5413:
 20803  002D66                     	goto	l440
 20804  002D66  EF30  F017         	
 20805                           l432:
 20806  002D6A                     	line	490
 20807                           	
 20808                           l5415:
 20809  002D6A                     ;fifo.c: 489:     {;fifo.c: 490:         aux = fila[i];
 20810                           	movf	((c:fifo_alinharPrint@i)),c,w
 20811  002D6A  5034               	mullw	01h
 20812  002D6C  0D01               	movlw	low(_fila)
 20813  002D6E  0E15               	addwf	(prodl),c,w
 20814  002D70  24F3               	movwf	c:fsr2l
 20815  002D72  6ED9               	movlw	high(_fila)
 20816  002D74  0E00               	addwfc	prod+1,w
 20817  002D76  20F4               	movwf	1+c:fsr2l
 20818  002D78  6EDA               	movf	indf2,w
 20819  002D7A  50DF               	movwf	((c:fifo_alinharPrint@aux)),c
 20820  002D7C  6E35               	line	491
 20821                           	
 20822                           l5417:
 20823  002D7E                     ;fifo.c: 491:         if( aux <= 0x64 )
 20824                           		movlw	065h-0
 20825  002D7E  0E65               	cpfslt	((c:fifo_alinharPrint@aux)),c
 20826  002D80  6035               	goto	u3751
 20827  002D82  EFC5  F016         	goto	u3750
 20828  002D86  EFC7  F016         
 20829                           u3751:
 20830  002D8A                     	goto	l5421
 20831  002D8A  EFD1  F016         u3750:
 20832  002D8E                     	line	492
 20833                           	
 20834                           l5419:
 20835  002D8E                     ;fifo.c: 492:             cont += dignum_tam( aux )+1;
 20836                           	movff	(c:fifo_alinharPrint@aux),(c:dignum_tam@num)
 20837  002D8E  C035  F02F         	clrf	((c:dignum_tam@num+1)),c
 20838  002D92  6A30               	call	_dignum_tam	;wreg free
 20839  002D94  ECE5  F01E         	movwf	(??_fifo_alinharPrint+0+0)&0ffh,c
 20840  002D98  6E32               	incf	((??_fifo_alinharPrint+0+0)),c,w
 20841  002D9A  2832               	addwf	((c:fifo_alinharPrint@cont)),c
 20842  002D9C  2633               	goto	l5421
 20843  002D9E  EFD1  F016         	
 20844                           l434:
 20845  002DA2                     	line	494
 20846                           	
 20847                           l5421:
 20848  002DA2                     ;fifo.c: 494:         if( aux > 0x64 && aux <= 0xDC )
 20849                           		movlw	065h-1
 20850  002DA2  0E64               	cpfsgt	((c:fifo_alinharPrint@aux)),c
 20851  002DA4  6435               	goto	u3761
 20852  002DA6  EFD7  F016         	goto	u3760
 20853  002DAA  EFD9  F016         
 20854                           u3761:
 20855  002DAE                     	goto	l5427
 20856  002DAE  EFEE  F016         u3760:
 20857  002DB2                     	
 20858                           l5423:
 20859  002DB2                     		movlw	0DDh-0
 20860  002DB2  0EDD               	cpfslt	((c:fifo_alinharPrint@aux)),c
 20861  002DB4  6035               	goto	u3771
 20862  002DB6  EFDF  F016         	goto	u3770
 20863  002DBA  EFE1  F016         
 20864                           u3771:
 20865  002DBE                     	goto	l5427
 20866  002DBE  EFEE  F016         u3770:
 20867  002DC2                     	line	495
 20868                           	
 20869                           l5425:
 20870  002DC2                     ;fifo.c: 495:             cont += dignum_tam( aux - 0x64 )+1;
 20871                           	movlw	low(-100)
 20872  002DC2  0E9C               	addwf	((c:fifo_alinharPrint@aux)),c,w
 20873  002DC4  2435               	movwf	((c:dignum_tam@num)),c
 20874  002DC6  6E2F               	clrf	1+((c:dignum_tam@num)),c
 20875  002DC8  6A30               	movlw	high(-100)
 20876  002DCA  0EFF               	addwfc	1+((c:dignum_tam@num)),c
 20877  002DCC  2230               	call	_dignum_tam	;wreg free
 20878  002DCE  ECE5  F01E         	movwf	(??_fifo_alinharPrint+0+0)&0ffh,c
 20879  002DD2  6E32               	incf	((??_fifo_alinharPrint+0+0)),c,w
 20880  002DD4  2832               	addwf	((c:fifo_alinharPrint@cont)),c
 20881  002DD6  2633               	goto	l5427
 20882  002DD8  EFEE  F016         	
 20883                           l435:
 20884  002DDC                     	line	497
 20885                           	
 20886                           l5427:
 20887  002DDC                     ;fifo.c: 497:         if( aux > 0xDC && aux < 0xFE )
 20888                           		movlw	0DDh-1
 20889  002DDC  0EDC               	cpfsgt	((c:fifo_alinharPrint@aux)),c
 20890  002DDE  6435               	goto	u3781
 20891  002DE0  EFF4  F016         	goto	u3780
 20892  002DE4  EFF6  F016         
 20893                           u3781:
 20894  002DE8                     	goto	l436
 20895  002DE8  EF00  F017         u3780:
 20896  002DEC                     	
 20897                           l5429:
 20898  002DEC                     		movlw	0FEh-0
 20899  002DEC  0EFE               	cpfslt	((c:fifo_alinharPrint@aux)),c
 20900  002DEE  6035               	goto	u3791
 20901  002DF0  EFFC  F016         	goto	u3790
 20902  002DF4  EFFE  F016         
 20903                           u3791:
 20904  002DF8                     	goto	l436
 20905  002DF8  EF00  F017         u3790:
 20906  002DFC                     	line	498
 20907                           	
 20908                           l5431:
 20909  002DFC                     ;fifo.c: 498:             cont += 2;
 20910                           	movlw	(02h)&0ffh
 20911  002DFC  0E02               	addwf	((c:fifo_alinharPrint@cont)),c
 20912  002DFE  2633               	
 20913                           l436:
 20914  002E00                     	line	500
 20915                           ;fifo.c: 500:         if( aux == 0xFE )
 20916                           		movlw	254
 20917  002E00  0EFE               	xorwf	((c:fifo_alinharPrint@aux)),c,w
 20918  002E02  1835               	btfss	status,2
 20919  002E04  A4D8               	goto	u3801
 20920  002E06  EF07  F017         	goto	u3800
 20921  002E0A  EF09  F017         
 20922                           u3801:
 20923  002E0E                     	goto	l5435
 20924  002E0E  EF13  F017         u3800:
 20925  002E12                     	line	501
 20926                           	
 20927                           l5433:
 20928  002E12                     ;fifo.c: 501:             cont += dignum_tam( aux )+1;
 20929                           	movff	(c:fifo_alinharPrint@aux),(c:dignum_tam@num)
 20930  002E12  C035  F02F         	clrf	((c:dignum_tam@num+1)),c
 20931  002E16  6A30               	call	_dignum_tam	;wreg free
 20932  002E18  ECE5  F01E         	movwf	(??_fifo_alinharPrint+0+0)&0ffh,c
 20933  002E1C  6E32               	incf	((??_fifo_alinharPrint+0+0)),c,w
 20934  002E1E  2832               	addwf	((c:fifo_alinharPrint@cont)),c
 20935  002E20  2633               	goto	l5435
 20936  002E22  EF13  F017         	
 20937                           l437:
 20938  002E26                     	line	503
 20939                           	
 20940                           l5435:
 20941  002E26                     ;fifo.c: 503:         if( cont > 20 )
 20942                           		movlw	015h-1
 20943  002E26  0E14               	cpfsgt	((c:fifo_alinharPrint@cont)),c
 20944  002E28  6433               	goto	u3811
 20945  002E2A  EF19  F017         	goto	u3810
 20946  002E2E  EF1B  F017         
 20947                           u3811:
 20948  002E32                     	goto	l438
 20949  002E32  EF21  F017         u3810:
 20950  002E36                     	goto	l440
 20951  002E36  EF30  F017         	line	505
 20952                           	
 20953                           l5437:
 20954  002E3A                     ;fifo.c: 504:         {;fifo.c: 505:             break;
 20955                           	goto	l440
 20956  002E3A  EF30  F017         	line	506
 20957                           	
 20958                           l5439:
 20959  002E3E                     ;fifo.c: 506:         }
 20960                           	goto	l5441
 20961  002E3E  EF25  F017         	line	507
 20962                           ;fifo.c: 507:         else
 20963                           	
 20964                           l438:
 20965  002E42                     	line	508
 20966                           ;fifo.c: 508:             ind_print = i;
 20967                           	movff	(c:fifo_alinharPrint@i),(c:_ind_print)
 20968  002E42  C034  F058         	goto	l5441
 20969  002E46  EF25  F017         	
 20970                           l439:
 20971  002E4A                     	line	509
 20972                           	
 20973                           l5441:
 20974  002E4A                     ;fifo.c: 509:     }
 20975                           	decf	((c:fifo_alinharPrint@i)),c
 20976  002E4A  0634               	
 20977                           l5443:
 20978  002E4C                     		movlw	02h-0
 20979  002E4C  0E02               	cpfslt	((c:fifo_alinharPrint@i)),c
 20980  002E4E  6034               	goto	u3821
 20981  002E50  EF2C  F017         	goto	u3820
 20982  002E54  EF2E  F017         
 20983                           u3821:
 20984  002E58                     	goto	l5415
 20985  002E58  EFB5  F016         u3820:
 20986  002E5C                     	goto	l440
 20987  002E5C  EF30  F017         	
 20988                           l433:
 20989  002E60                     	line	510
 20990                           	
 20991                           l440:
 20992  002E60                     	return	;funcret
 20993  002E60  0012               	opt stack 0
 20994                           GLOBAL	__end_of_fifo_alinharPrint
 20995                           	__end_of_fifo_alinharPrint:
 20996  002E62                     	signat	_fifo_alinharPrint,89
 20997                           	global	_dignum_tam
 20998                           
 20999 ;; *************** function _dignum_tam *****************
 21000 ;; Defined at:
 21001 ;;		line 470 in file "fifo.c"
 21002 ;; Parameters:    Size  Location     Type
 21003 ;;  num             2    8[COMRAM] int 
 21004 ;; Auto vars:     Size  Location     Type
 21005 ;;  tam             1   10[COMRAM] unsigned char 
 21006 ;; Return value:  Size  Location     Type
 21007 ;;                  1    wreg      unsigned char 
 21008 ;; Registers used:
 21009 ;;		wreg, status,2, status,0, cstack
 21010 ;; Tracked objects:
 21011 ;;		On entry : 0/0
 21012 ;;		On exit  : 0/0
 21013 ;;		Unchanged: 0/0
 21014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21015 ;;      Params:         2       0       0       0       0       0       0       0       0
 21016 ;;      Locals:         1       0       0       0       0       0       0       0       0
 21017 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21018 ;;      Totals:         3       0       0       0       0       0       0       0       0
 21019 ;;Total ram usage:        3 bytes
 21020 ;; Hardware stack levels used:    1
 21021 ;; Hardware stack levels required when called:    3
 21022 ;; This function calls:
 21023 ;;		___awdiv
 21024 ;; This function is called by:
 21025 ;;		_fifo_alinharPrint
 21026 ;;		_printExec
 21027 ;; This function uses a non-reentrant model
 21028 ;;
 21029                           psect	text45,class=CODE,space=0,reloc=2,group=0
 21030                           	line	470
 21031                           global __ptext45
 21032                           __ptext45:
 21033  003DCA                     psect	text45
 21034                           	file	"fifo.c"
 21035                           	line	470
 21036                           	global	__size_of_dignum_tam
 21037                           	__size_of_dignum_tam	equ	__end_of_dignum_tam-_dignum_tam
 21038  0000                     	
 21039                           _dignum_tam:
 21040  003DCA                     ;incstack = 0
 21041                           	opt	stack 26
 21042                           	line	472
 21043                           	
 21044                           l5157:
 21045  003DCA                     ;fifo.c: 470: unsigned char dignum_tam(int num);fifo.c: 471: {;fifo.c: 472:     unsigned
                                  char tam = 0;
 21046                           	movlw	low(0)
 21047  003DCA  0E00               	movwf	((c:dignum_tam@tam)),c
 21048  003DCC  6E31               	line	474
 21049                           ;fifo.c: 474:     while(num != 0)
 21050                           	goto	l5163
 21051  003DCE  EFFA  F01E         	
 21052                           l427:
 21053  003DD2                     	line	476
 21054                           	
 21055                           l5159:
 21056  003DD2                     ;fifo.c: 475:     {;fifo.c: 476:         num /= 10;
 21057                           	movff	(c:dignum_tam@num),(c:___awdiv@dividend)
 21058  003DD2  C02F  F027         	movff	(c:dignum_tam@num+1),(c:___awdiv@dividend+1)
 21059  003DD6  C030  F028         	movlw	high(0Ah)
 21060  003DDA  0E00               	movwf	((c:___awdiv@divisor+1)),c
 21061  003DDC  6E2A               	movlw	low(0Ah)
 21062  003DDE  0E0A               	movwf	((c:___awdiv@divisor)),c
 21063  003DE0  6E29               	call	___awdiv	;wreg free
 21064  003DE2  ECB3  F017         	movff	0+?___awdiv,(c:dignum_tam@num)
 21065  003DE6  C027  F02F         	movff	1+?___awdiv,(c:dignum_tam@num+1)
 21066  003DEA  C028  F030         	line	477
 21067                           	
 21068                           l5161:
 21069  003DEE                     ;fifo.c: 477:         tam++;
 21070                           	incf	((c:dignum_tam@tam)),c
 21071  003DEE  2A31               	goto	l5163
 21072  003DF0  EFFA  F01E         	line	478
 21073                           ;fifo.c: 478:     }
 21074                           	
 21075                           l426:
 21076  003DF4                     	line	474
 21077                           	
 21078                           l5163:
 21079  003DF4                     ;fifo.c: 474:     while(num != 0)
 21080                           	movf	((c:dignum_tam@num)),c,w
 21081  003DF4  502F               iorwf	((c:dignum_tam@num+1)),c,w
 21082  003DF6  1030               	btfss	status,2
 21083  003DF8  A4D8               	goto	u3401
 21084  003DFA  EF01  F01F         	goto	u3400
 21085  003DFE  EF03  F01F         
 21086                           u3401:
 21087  003E02                     	goto	l5159
 21088  003E02  EFE9  F01E         u3400:
 21089  003E06                     	goto	l5165
 21090  003E06  EF05  F01F         	
 21091                           l428:
 21092  003E0A                     	line	479
 21093                           	
 21094                           l5165:
 21095  003E0A                     ;fifo.c: 479:     return ( tam );
 21096                           	movf	((c:dignum_tam@tam)),c,w
 21097  003E0A  5031               	goto	l429
 21098  003E0C  EF08  F01F         	
 21099                           l5167:
 21100  003E10                     	line	480
 21101                           	
 21102                           l429:
 21103  003E10                     	return	;funcret
 21104  003E10  0012               	opt stack 0
 21105                           GLOBAL	__end_of_dignum_tam
 21106                           	__end_of_dignum_tam:
 21107  003E12                     	signat	_dignum_tam,4217
 21108                           	global	___awdiv
 21109                           
 21110 ;; *************** function ___awdiv *****************
 21111 ;; Defined at:
 21112 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awdiv.c"
 21113 ;; Parameters:    Size  Location     Type
 21114 ;;  dividend        2    0[COMRAM] int 
 21115 ;;  divisor         2    2[COMRAM] int 
 21116 ;; Auto vars:     Size  Location     Type
 21117 ;;  quotient        2    6[COMRAM] int 
 21118 ;;  sign            1    5[COMRAM] unsigned char 
 21119 ;;  counter         1    4[COMRAM] unsigned char 
 21120 ;; Return value:  Size  Location     Type
 21121 ;;                  2    0[COMRAM] int 
 21122 ;; Registers used:
 21123 ;;		wreg, status,2, status,0
 21124 ;; Tracked objects:
 21125 ;;		On entry : 0/0
 21126 ;;		On exit  : 0/0
 21127 ;;		Unchanged: 0/0
 21128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21129 ;;      Params:         4       0       0       0       0       0       0       0       0
 21130 ;;      Locals:         4       0       0       0       0       0       0       0       0
 21131 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21132 ;;      Totals:         8       0       0       0       0       0       0       0       0
 21133 ;;Total ram usage:        8 bytes
 21134 ;; Hardware stack levels used:    1
 21135 ;; Hardware stack levels required when called:    2
 21136 ;; This function calls:
 21137 ;;		Nothing
 21138 ;; This function is called by:
 21139 ;;		_dispLCD_num
 21140 ;;		_fifo_print
 21141 ;;		_dignum_tam
 21142 ;; This function uses a non-reentrant model
 21143 ;;
 21144                           psect	text46,class=CODE,space=0,reloc=2,group=1
 21145                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awdiv.c"
 21146                           	line	7
 21147                           global __ptext46
 21148                           __ptext46:
 21149  002F66                     psect	text46
 21150                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awdiv.c"
 21151                           	line	7
 21152                           	global	__size_of___awdiv
 21153                           	__size_of___awdiv	equ	__end_of___awdiv-___awdiv
 21154  0000                     	
 21155                           ___awdiv:
 21156  002F66                     ;incstack = 0
 21157                           	opt	stack 26
 21158                           	line	13
 21159                           	
 21160                           l5057:
 21161  002F66                     	movlw	low(0)
 21162  002F66  0E00               	movwf	((c:___awdiv@sign)),c
 21163  002F68  6E2C               	line	14
 21164                           	
 21165                           l5059:
 21166  002F6A                     	btfsc	((c:___awdiv@divisor+1)),c,7
 21167  002F6A  BE2A               	goto	u3300
 21168  002F6C  EFBC  F017         	goto	u3301
 21169  002F70  EFBA  F017         
 21170                           u3301:
 21171  002F74                     	goto	l5065
 21172  002F74  EFC4  F017         u3300:
 21173  002F78                     	line	15
 21174                           	
 21175                           l5061:
 21176  002F78                     	negf	((c:___awdiv@divisor)),c
 21177  002F78  6C29               	comf	((c:___awdiv@divisor+1)),c
 21178  002F7A  1E2A               	btfsc	status,0
 21179  002F7C  B0D8               	incf	((c:___awdiv@divisor+1)),c
 21180  002F7E  2A2A               	line	16
 21181                           	
 21182                           l5063:
 21183  002F80                     	movlw	low(01h)
 21184  002F80  0E01               	movwf	((c:___awdiv@sign)),c
 21185  002F82  6E2C               	goto	l5065
 21186  002F84  EFC4  F017         	line	17
 21187                           	
 21188                           l1471:
 21189  002F88                     	line	18
 21190                           	
 21191                           l5065:
 21192  002F88                     	btfsc	((c:___awdiv@dividend+1)),c,7
 21193  002F88  BE28               	goto	u3310
 21194  002F8A  EFCB  F017         	goto	u3311
 21195  002F8E  EFC9  F017         
 21196                           u3311:
 21197  002F92                     	goto	l5071
 21198  002F92  EFD3  F017         u3310:
 21199  002F96                     	line	19
 21200                           	
 21201                           l5067:
 21202  002F96                     	negf	((c:___awdiv@dividend)),c
 21203  002F96  6C27               	comf	((c:___awdiv@dividend+1)),c
 21204  002F98  1E28               	btfsc	status,0
 21205  002F9A  B0D8               	incf	((c:___awdiv@dividend+1)),c
 21206  002F9C  2A28               	line	20
 21207                           	
 21208                           l5069:
 21209  002F9E                     	movlw	(01h)&0ffh
 21210  002F9E  0E01               	xorwf	((c:___awdiv@sign)),c
 21211  002FA0  1A2C               	goto	l5071
 21212  002FA2  EFD3  F017         	line	21
 21213                           	
 21214                           l1472:
 21215  002FA6                     	line	22
 21216                           	
 21217                           l5071:
 21218  002FA6                     	movlw	high(0)
 21219  002FA6  0E00               	movwf	((c:___awdiv@quotient+1)),c
 21220  002FA8  6E2E               	movlw	low(0)
 21221  002FAA  0E00               	movwf	((c:___awdiv@quotient)),c
 21222  002FAC  6E2D               	line	23
 21223                           	
 21224                           l5073:
 21225  002FAE                     	movf	((c:___awdiv@divisor)),c,w
 21226  002FAE  5029               iorwf	((c:___awdiv@divisor+1)),c,w
 21227  002FB0  102A               	btfsc	status,2
 21228  002FB2  B4D8               	goto	u3321
 21229  002FB4  EFDE  F017         	goto	u3320
 21230  002FB8  EFE0  F017         
 21231                           u3321:
 21232  002FBC                     	goto	l5093
 21233  002FBC  EF14  F018         u3320:
 21234  002FC0                     	line	24
 21235                           	
 21236                           l5075:
 21237  002FC0                     	movlw	low(01h)
 21238  002FC0  0E01               	movwf	((c:___awdiv@counter)),c
 21239  002FC2  6E2B               	line	25
 21240                           	goto	l5079
 21241  002FC4  EFEA  F017         	
 21242                           l1475:
 21243  002FC8                     	line	26
 21244                           	
 21245                           l5077:
 21246  002FC8                     	bcf	status,0
 21247  002FC8  90D8               	rlcf	((c:___awdiv@divisor)),c
 21248  002FCA  3629               	rlcf	((c:___awdiv@divisor+1)),c
 21249  002FCC  362A               	line	27
 21250                           	incf	((c:___awdiv@counter)),c
 21251  002FCE  2A2B               	goto	l5079
 21252  002FD0  EFEA  F017         	line	28
 21253                           	
 21254                           l1474:
 21255  002FD4                     	line	25
 21256                           	
 21257                           l5079:
 21258  002FD4                     	
 21259                           	btfss	((c:___awdiv@divisor+1)),c,(15)&7
 21260  002FD4  AE2A               	goto	u3331
 21261  002FD6  EFEF  F017         	goto	u3330
 21262  002FDA  EFF1  F017         u3331:
 21263  002FDE                     	goto	l5077
 21264  002FDE  EFE4  F017         u3330:
 21265  002FE2                     	goto	l5081
 21266  002FE2  EFF5  F017         	
 21267                           l1476:
 21268  002FE6                     	goto	l5081
 21269  002FE6  EFF5  F017         	line	29
 21270                           	
 21271                           l1477:
 21272  002FEA                     	line	30
 21273                           	
 21274                           l5081:
 21275  002FEA                     	bcf	status,0
 21276  002FEA  90D8               	rlcf	((c:___awdiv@quotient)),c
 21277  002FEC  362D               	rlcf	((c:___awdiv@quotient+1)),c
 21278  002FEE  362E               	line	31
 21279                           	
 21280                           l5083:
 21281  002FF0                     		movf	((c:___awdiv@divisor)),c,w
 21282  002FF0  5029               	subwf	((c:___awdiv@dividend)),c,w
 21283  002FF2  5C27               	movf	((c:___awdiv@divisor+1)),c,w
 21284  002FF4  502A               	subwfb	((c:___awdiv@dividend+1)),c,w
 21285  002FF6  5828               	btfss	status,0
 21286  002FF8  A0D8               	goto	u3341
 21287  002FFA  EF01  F018         	goto	u3340
 21288  002FFE  EF03  F018         
 21289                           u3341:
 21290  003002                     	goto	l5089
 21291  003002  EF0A  F018         u3340:
 21292  003006                     	line	32
 21293                           	
 21294                           l5085:
 21295  003006                     	movf	((c:___awdiv@divisor)),c,w
 21296  003006  5029               	subwf	((c:___awdiv@dividend)),c
 21297  003008  5E27               	movf	((c:___awdiv@divisor+1)),c,w
 21298  00300A  502A               	subwfb	((c:___awdiv@dividend+1)),c
 21299  00300C  5A28               
 21300                           	line	33
 21301                           	
 21302                           l5087:
 21303  00300E                     	bsf	(0+(0/8)+(c:___awdiv@quotient)),c,(0)&7
 21304  00300E  802D               	goto	l5089
 21305  003010  EF0A  F018         	line	34
 21306                           	
 21307                           l1478:
 21308  003014                     	line	35
 21309                           	
 21310                           l5089:
 21311  003014                     	bcf	status,0
 21312  003014  90D8               	rrcf	((c:___awdiv@divisor+1)),c
 21313  003016  322A               	rrcf	((c:___awdiv@divisor)),c
 21314  003018  3229               	line	36
 21315                           	
 21316                           l5091:
 21317  00301A                     	decfsz	((c:___awdiv@counter)),c
 21318  00301A  2E2B               	
 21319                           	goto	l5081
 21320  00301C  EFF5  F017         	goto	l5093
 21321  003020  EF14  F018         	
 21322                           l1479:
 21323  003024                     	goto	l5093
 21324  003024  EF14  F018         	line	37
 21325                           	
 21326                           l1473:
 21327  003028                     	line	38
 21328                           	
 21329                           l5093:
 21330  003028                     	movf	((c:___awdiv@sign)),c,w
 21331  003028  502C               	btfsc	status,2
 21332  00302A  B4D8               	goto	u3351
 21333  00302C  EF1A  F018         	goto	u3350
 21334  003030  EF1C  F018         u3351:
 21335  003034                     	goto	l5097
 21336  003034  EF22  F018         u3350:
 21337  003038                     	line	39
 21338                           	
 21339                           l5095:
 21340  003038                     	negf	((c:___awdiv@quotient)),c
 21341  003038  6C2D               	comf	((c:___awdiv@quotient+1)),c
 21342  00303A  1E2E               	btfsc	status,0
 21343  00303C  B0D8               	incf	((c:___awdiv@quotient+1)),c
 21344  00303E  2A2E               	goto	l5097
 21345  003040  EF22  F018         	
 21346                           l1480:
 21347  003044                     	line	40
 21348                           	
 21349                           l5097:
 21350  003044                     	movff	(c:___awdiv@quotient),(c:?___awdiv)
 21351  003044  C02D  F027         	movff	(c:___awdiv@quotient+1),(c:?___awdiv+1)
 21352  003048  C02E  F028         	goto	l1481
 21353  00304C  EF28  F018         	
 21354                           l5099:
 21355  003050                     	line	41
 21356                           	
 21357                           l1481:
 21358  003050                     	return	;funcret
 21359  003050  0012               	opt stack 0
 21360                           GLOBAL	__end_of___awdiv
 21361                           	__end_of___awdiv:
 21362  003052                     	signat	___awdiv,8314
 21363                           	global	_codifica
 21364                           
 21365 ;; *************** function _codifica *****************
 21366 ;; Defined at:
 21367 ;;		line 200 in file "fifo.c"
 21368 ;; Parameters:    Size  Location     Type
 21369 ;;  tipo            1    wreg     unsigned char 
 21370 ;;  dado            2    0[COMRAM] PTR unsigned char 
 21371 ;;		 -> fifo_add_control@c(1), fifo_add_tempo@t(1), fifo_add@passo(1), RAM(2047), 
 21372 ;; Auto vars:     Size  Location     Type
 21373 ;;  tipo            1    4[COMRAM] unsigned char 
 21374 ;; Return value:  Size  Location     Type
 21375 ;;                  1    wreg      void 
 21376 ;; Registers used:
 21377 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 21378 ;; Tracked objects:
 21379 ;;		On entry : 0/0
 21380 ;;		On exit  : 0/0
 21381 ;;		Unchanged: 0/0
 21382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21383 ;;      Params:         2       0       0       0       0       0       0       0       0
 21384 ;;      Locals:         1       0       0       0       0       0       0       0       0
 21385 ;;      Temps:          2       0       0       0       0       0       0       0       0
 21386 ;;      Totals:         5       0       0       0       0       0       0       0       0
 21387 ;;Total ram usage:        5 bytes
 21388 ;; Hardware stack levels used:    1
 21389 ;; Hardware stack levels required when called:    2
 21390 ;; This function calls:
 21391 ;;		Nothing
 21392 ;; This function is called by:
 21393 ;;		_fifo_delete
 21394 ;;		_fifo_add
 21395 ;;		_fifo_add_tempo
 21396 ;;		_fifo_add_control
 21397 ;; This function uses a non-reentrant model
 21398 ;;
 21399                           psect	text47,class=CODE,space=0,reloc=2,group=0
 21400                           	file	"fifo.c"
 21401                           	line	200
 21402                           global __ptext47
 21403                           __ptext47:
 21404  002826                     psect	text47
 21405                           	file	"fifo.c"
 21406                           	line	200
 21407                           	global	__size_of_codifica
 21408                           	__size_of_codifica	equ	__end_of_codifica-_codifica
 21409  0000                     	
 21410                           _codifica:
 21411  002826                     ;incstack = 0
 21412                           	opt	stack 27
 21413                           ;codifica@tipo stored from wreg
 21414                           	movwf	((c:codifica@tipo)),c
 21415  002826  6E2B               	line	202
 21416                           	
 21417                           l5367:
 21418  002828                     ;fifo.c: 200: void codifica( unsigned char tipo, unsigned char *dado );fifo.c: 201: {;fi
                                 fo.c: 202:     switch( tipo )
 21419                           	goto	l5397
 21420  002828  EFAD  F014         	line	204
 21421                           ;fifo.c: 203:     {;fifo.c: 204:         case 'p': if(*dado == 0)
 21422                           	
 21423                           l311:
 21424  00282C                     	
 21425                           l5369:
 21426  00282C                     	movff	(c:codifica@dado),fsr2l
 21427  00282C  C027  FFD9         	movff	(c:codifica@dado+1),fsr2h
 21428  002830  C028  FFDA         	movf	indf2,w
 21429  002834  50DF               	btfss	status,2
 21430  002836  A4D8               	goto	u3731
 21431  002838  EF20  F014         	goto	u3730
 21432  00283C  EF22  F014         u3731:
 21433  002840                     	goto	l326
 21434  002840  EFC6  F014         u3730:
 21435  002844                     	line	205
 21436                           	
 21437                           l5371:
 21438  002844                     ;fifo.c: 205:                        *dado = 254;
 21439                           	movff	(c:codifica@dado),fsr2l
 21440  002844  C027  FFD9         	movff	(c:codifica@dado+1),fsr2h
 21441  002848  C028  FFDA         	movlw	low(0FEh)
 21442  00284C  0EFE               	movwf	indf2
 21443  00284E  6EDF               	goto	l326
 21444  002850  EFC6  F014         	
 21445                           l312:
 21446  002854                     	line	206
 21447                           ;fifo.c: 206:                         break;
 21448                           	goto	l326
 21449  002854  EFC6  F014         	line	208
 21450                           ;fifo.c: 208:         case 't': *dado += 0x64; break;
 21451                           	
 21452                           l314:
 21453  002858                     	
 21454                           l5373:
 21455  002858                     	movff	(c:codifica@dado),fsr2l
 21456  002858  C027  FFD9         	movff	(c:codifica@dado+1),fsr2h
 21457  00285C  C028  FFDA         	movlw	064h
 21458  002860  0E64               	addwf	indf2
 21459  002862  26DF               	goto	l326
 21460  002864  EFC6  F014         	line	209
 21461                           ;fifo.c: 209:         case 'a':
 21462                           	
 21463                           l315:
 21464  002868                     	line	211
 21465                           ;fifo.c: 211:         switch( *dado )
 21466                           	goto	l5393
 21467  002868  EF78  F014         	line	213
 21468                           ;fifo.c: 212:         {;fifo.c: 213:             case 'A': *dado = 221; break;
 21469                           	
 21470                           l317:
 21471  00286C                     	
 21472                           l5375:
 21473  00286C                     	movff	(c:codifica@dado),fsr2l
 21474  00286C  C027  FFD9         	movff	(c:codifica@dado+1),fsr2h
 21475  002870  C028  FFDA         	movlw	low(0DDh)
 21476  002874  0EDD               	movwf	indf2
 21477  002876  6EDF               	goto	l326
 21478  002878  EFC6  F014         	line	214
 21479                           ;fifo.c: 214:             case 'a': *dado = 222; break;
 21480                           	
 21481                           l319:
 21482  00287C                     	
 21483                           l5377:
 21484  00287C                     	movff	(c:codifica@dado),fsr2l
 21485  00287C  C027  FFD9         	movff	(c:codifica@dado+1),fsr2h
 21486  002880  C028  FFDA         	movlw	low(0DEh)
 21487  002884  0EDE               	movwf	indf2
 21488  002886  6EDF               	goto	l326
 21489  002888  EFC6  F014         	line	215
 21490                           ;fifo.c: 215:             case 'B': *dado = 223; break;
 21491                           	
 21492                           l320:
 21493  00288C                     	
 21494                           l5379:
 21495  00288C                     	movff	(c:codifica@dado),fsr2l
 21496  00288C  C027  FFD9         	movff	(c:codifica@dado+1),fsr2h
 21497  002890  C028  FFDA         	movlw	low(0DFh)
 21498  002894  0EDF               	movwf	indf2
 21499  002896  6EDF               	goto	l326
 21500  002898  EFC6  F014         	line	216
 21501                           ;fifo.c: 216:             case 'b': *dado = 224; break;
 21502                           	
 21503                           l321:
 21504  00289C                     	
 21505                           l5381:
 21506  00289C                     	movff	(c:codifica@dado),fsr2l
 21507  00289C  C027  FFD9         	movff	(c:codifica@dado+1),fsr2h
 21508  0028A0  C028  FFDA         	movlw	low(0E0h)
 21509  0028A4  0EE0               	movwf	indf2
 21510  0028A6  6EDF               	goto	l326
 21511  0028A8  EFC6  F014         	line	217
 21512                           ;fifo.c: 217:             case 'C': *dado = 225; break;
 21513                           	
 21514                           l322:
 21515  0028AC                     	
 21516                           l5383:
 21517  0028AC                     	movff	(c:codifica@dado),fsr2l
 21518  0028AC  C027  FFD9         	movff	(c:codifica@dado+1),fsr2h
 21519  0028B0  C028  FFDA         	movlw	low(0E1h)
 21520  0028B4  0EE1               	movwf	indf2
 21521  0028B6  6EDF               	goto	l326
 21522  0028B8  EFC6  F014         	line	218
 21523                           ;fifo.c: 218:             case 'c': *dado = 226; break;
 21524                           	
 21525                           l323:
 21526  0028BC                     	
 21527                           l5385:
 21528  0028BC                     	movff	(c:codifica@dado),fsr2l
 21529  0028BC  C027  FFD9         	movff	(c:codifica@dado+1),fsr2h
 21530  0028C0  C028  FFDA         	movlw	low(0E2h)
 21531  0028C4  0EE2               	movwf	indf2
 21532  0028C6  6EDF               	goto	l326
 21533  0028C8  EFC6  F014         	line	219
 21534                           ;fifo.c: 219:             case 'D': *dado = 227; break;
 21535                           	
 21536                           l324:
 21537  0028CC                     	
 21538                           l5387:
 21539  0028CC                     	movff	(c:codifica@dado),fsr2l
 21540  0028CC  C027  FFD9         	movff	(c:codifica@dado+1),fsr2h
 21541  0028D0  C028  FFDA         	movlw	low(0E3h)
 21542  0028D4  0EE3               	movwf	indf2
 21543  0028D6  6EDF               	goto	l326
 21544  0028D8  EFC6  F014         	line	220
 21545                           ;fifo.c: 220:             case 'd': *dado = 228; break;
 21546                           	
 21547                           l325:
 21548  0028DC                     	
 21549                           l5389:
 21550  0028DC                     	movff	(c:codifica@dado),fsr2l
 21551  0028DC  C027  FFD9         	movff	(c:codifica@dado+1),fsr2h
 21552  0028E0  C028  FFDA         	movlw	low(0E4h)
 21553  0028E4  0EE4               	movwf	indf2
 21554  0028E6  6EDF               	goto	l326
 21555  0028E8  EFC6  F014         	line	221
 21556                           	
 21557                           l5391:
 21558  0028EC                     ;fifo.c: 221:         }
 21559                           	goto	l326
 21560  0028EC  EFC6  F014         	
 21561                           l316:
 21562  0028F0                     	
 21563                           l5393:
 21564  0028F0                     	movff	(c:codifica@dado),fsr2l
 21565  0028F0  C027  FFD9         	movff	(c:codifica@dado+1),fsr2h
 21566  0028F4  C028  FFDA         	movf	indf2,w
 21567  0028F8  50DF               	movwf	(??_codifica+0+0)&0ffh,c
 21568  0028FA  6E29               	clrf	(??_codifica+0+0+1)&0ffh,c
 21569  0028FC  6A2A               
 21570                           	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
 21571                           ; Switch size 1, requested type "space"
 21572                           ; Number of cases is 1, Range of values is 0 to 0
 21573                           ; switch strategies available:
 21574                           ; Name         Instructions Cycles
 21575                           ; simple_byte            4     3 (average)
 21576                           ;	Chosen strategy is simple_byte
 21577                           
 21578                           	movf ??_codifica+0+1,c,w
 21579  0028FE  502A               	xorlw	0^0	; case 0
 21580  002900  0A00               	skipnz
 21581  002902  B4D8               	goto	l7989
 21582  002904  EF86  F014         	goto	l326
 21583  002908  EFC6  F014         	
 21584                           l7989:
 21585  00290C                     ; Switch size 1, requested type "space"
 21586                           ; Number of cases is 8, Range of values is 65 to 100
 21587                           ; switch strategies available:
 21588                           ; Name         Instructions Cycles
 21589                           ; simple_byte           25    13 (average)
 21590                           ;	Chosen strategy is simple_byte
 21591                           
 21592                           	movf ??_codifica+0+0,c,w
 21593  00290C  5029               	xorlw	65^0	; case 65
 21594  00290E  0A41               	skipnz
 21595  002910  B4D8               	goto	l5375
 21596  002912  EF36  F014         	xorlw	66^65	; case 66
 21597  002916  0A03               	skipnz
 21598  002918  B4D8               	goto	l5379
 21599  00291A  EF46  F014         	xorlw	67^66	; case 67
 21600  00291E  0A01               	skipnz
 21601  002920  B4D8               	goto	l5383
 21602  002922  EF56  F014         	xorlw	68^67	; case 68
 21603  002926  0A07               	skipnz
 21604  002928  B4D8               	goto	l5387
 21605  00292A  EF66  F014         	xorlw	97^68	; case 97
 21606  00292E  0A25               	skipnz
 21607  002930  B4D8               	goto	l5377
 21608  002932  EF3E  F014         	xorlw	98^97	; case 98
 21609  002936  0A03               	skipnz
 21610  002938  B4D8               	goto	l5381
 21611  00293A  EF4E  F014         	xorlw	99^98	; case 99
 21612  00293E  0A01               	skipnz
 21613  002940  B4D8               	goto	l5385
 21614  002942  EF5E  F014         	xorlw	100^99	; case 100
 21615  002946  0A07               	skipnz
 21616  002948  B4D8               	goto	l5389
 21617  00294A  EF6E  F014         	goto	l326
 21618  00294E  EFC6  F014         
 21619                           	
 21620                           l318:
 21621  002952                     	line	223
 21622                           ;fifo.c: 223:         break;
 21623                           	goto	l326
 21624  002952  EFC6  F014         	line	225
 21625                           	
 21626                           l5395:
 21627  002956                     ;fifo.c: 225:     }
 21628                           	goto	l326
 21629  002956  EFC6  F014         	
 21630                           l310:
 21631  00295A                     	
 21632                           l5397:
 21633  00295A                     	movf	((c:codifica@tipo)),c,w
 21634  00295A  502B               	movwf	(??_codifica+0+0)&0ffh,c
 21635  00295C  6E29               	clrf	(??_codifica+0+0+1)&0ffh,c
 21636  00295E  6A2A               
 21637                           	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
 21638                           ; Switch size 1, requested type "space"
 21639                           ; Number of cases is 1, Range of values is 0 to 0
 21640                           ; switch strategies available:
 21641                           ; Name         Instructions Cycles
 21642                           ; simple_byte            4     3 (average)
 21643                           ;	Chosen strategy is simple_byte
 21644                           
 21645                           	movf ??_codifica+0+1,c,w
 21646  002960  502A               	xorlw	0^0	; case 0
 21647  002962  0A00               	skipnz
 21648  002964  B4D8               	goto	l7991
 21649  002966  EFB7  F014         	goto	l326
 21650  00296A  EFC6  F014         	
 21651                           l7991:
 21652  00296E                     ; Switch size 1, requested type "space"
 21653                           ; Number of cases is 3, Range of values is 97 to 116
 21654                           ; switch strategies available:
 21655                           ; Name         Instructions Cycles
 21656                           ; simple_byte           10     6 (average)
 21657                           ;	Chosen strategy is simple_byte
 21658                           
 21659                           	movf ??_codifica+0+0,c,w
 21660  00296E  5029               	xorlw	97^0	; case 97
 21661  002970  0A61               	skipnz
 21662  002972  B4D8               	goto	l5393
 21663  002974  EF78  F014         	xorlw	112^97	; case 112
 21664  002978  0A11               	skipnz
 21665  00297A  B4D8               	goto	l5369
 21666  00297C  EF16  F014         	xorlw	116^112	; case 116
 21667  002980  0A04               	skipnz
 21668  002982  B4D8               	goto	l5373
 21669  002984  EF2C  F014         	goto	l326
 21670  002988  EFC6  F014         
 21671                           	
 21672                           l313:
 21673  00298C                     	line	226
 21674                           	
 21675                           l326:
 21676  00298C                     	return	;funcret
 21677  00298C  0012               	opt stack 0
 21678                           GLOBAL	__end_of_codifica
 21679                           	__end_of_codifica:
 21680  00298E                     	signat	_codifica,8313
 21681                           	global	_dispLCD_str
 21682                           
 21683 ;; *************** function _dispLCD_str *****************
 21684 ;; Defined at:
 21685 ;;		line 250 in file "dispLCD4vias.c"
 21686 ;; Parameters:    Size  Location     Type
 21687 ;;  str             2    7[COMRAM] PTR const unsigned char 
 21688 ;;		 -> STR_27(78), STR_26(62), STR_15(81), STR_4(83), 
 21689 ;; Auto vars:     Size  Location     Type
 21690 ;;  c               1   10[COMRAM] unsigned char 
 21691 ;;  lin             1    9[COMRAM] unsigned char 
 21692 ;; Return value:  Size  Location     Type
 21693 ;;                  1    wreg      void 
 21694 ;; Registers used:
 21695 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21696 ;; Tracked objects:
 21697 ;;		On entry : 0/0
 21698 ;;		On exit  : 0/0
 21699 ;;		Unchanged: 0/0
 21700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21701 ;;      Params:         2       0       0       0       0       0       0       0       0
 21702 ;;      Locals:         2       0       0       0       0       0       0       0       0
 21703 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21704 ;;      Totals:         4       0       0       0       0       0       0       0       0
 21705 ;;Total ram usage:        4 bytes
 21706 ;; Hardware stack levels used:    1
 21707 ;; Hardware stack levels required when called:    4
 21708 ;; This function calls:
 21709 ;;		_dispLCD_dataReg
 21710 ;;		_dispLCD_lincol
 21711 ;; This function is called by:
 21712 ;;		_main
 21713 ;; This function uses a non-reentrant model
 21714 ;;
 21715                           psect	text48,class=CODE,space=0,reloc=2,group=0
 21716                           	file	"dispLCD4vias.c"
 21717                           	line	250
 21718                           global __ptext48
 21719                           __ptext48:
 21720  00384A                     psect	text48
 21721                           	file	"dispLCD4vias.c"
 21722                           	line	250
 21723                           	global	__size_of_dispLCD_str
 21724                           	__size_of_dispLCD_str	equ	__end_of_dispLCD_str-_dispLCD_str
 21725  0000                     	
 21726                           _dispLCD_str:
 21727  00384A                     ;incstack = 0
 21728                           	opt	stack 26
 21729                           	line	252
 21730                           	
 21731                           l5671:
 21732  00384A                     ;dispLCD4vias.c: 250: void dispLCD_str( const char * str );dispLCD4vias.c: 251: {;dispLC
                                 D4vias.c: 252:     char lin = 0;
 21733                           	movlw	low(0)
 21734  00384A  0E00               	movwf	((c:dispLCD_str@lin)),c
 21735  00384C  6E30               	line	254
 21736                           	
 21737                           l5673:
 21738  00384E                     ;dispLCD4vias.c: 253:     char c;;dispLCD4vias.c: 254:     dispLCD_lincol(0,0);
 21739                           	movlw	low(0)
 21740  00384E  0E00               	movwf	((c:dispLCD_lincol@col)),c
 21741  003850  6E29               	movlw	(0)&0ffh
 21742  003852  0E00               	
 21743                           	call	_dispLCD_lincol
 21744  003854  EC5C  F01D         	line	256
 21745                           ;dispLCD4vias.c: 256:     while( c = *str )
 21746                           	goto	l5683
 21747  003858  EF48  F01C         	
 21748                           l123:
 21749  00385C                     	line	258
 21750                           	
 21751                           l5675:
 21752  00385C                     ;dispLCD4vias.c: 257:     {;dispLCD4vias.c: 258:         if( c != '\n' )
 21753                           		movlw	10
 21754  00385C  0E0A               	xorwf	((c:dispLCD_str@c)),c,w
 21755  00385E  1831               	btfsc	status,2
 21756  003860  B4D8               	goto	u4021
 21757  003862  EF35  F01C         	goto	u4020
 21758  003866  EF37  F01C         
 21759                           u4021:
 21760  00386A                     	goto	l5679
 21761  00386A  EF3C  F01C         u4020:
 21762  00386E                     	line	259
 21763                           	
 21764                           l5677:
 21765  00386E                     ;dispLCD4vias.c: 259:             dispLCD_dataReg( c );
 21766                           	movf	((c:dispLCD_str@c)),c,w
 21767  00386E  5031               	
 21768                           	call	_dispLCD_dataReg
 21769  003870  EC97  F01E         	goto	l5681
 21770  003874  EF44  F01C         	line	260
 21771                           ;dispLCD4vias.c: 260:         else
 21772                           	
 21773                           l124:
 21774  003878                     	line	261
 21775                           	
 21776                           l5679:
 21777  003878                     ;dispLCD4vias.c: 261:             dispLCD_lincol(++lin,0);
 21778                           	movlw	low(0)
 21779  003878  0E00               	movwf	((c:dispLCD_lincol@col)),c
 21780  00387A  6E29               	incf	((c:dispLCD_str@lin)),c
 21781  00387C  2A30               	movf	((c:dispLCD_str@lin)),c,w
 21782  00387E  5030               	
 21783                           	call	_dispLCD_lincol
 21784  003880  EC5C  F01D         	goto	l5681
 21785  003884  EF44  F01C         	
 21786                           l125:
 21787  003888                     	line	262
 21788                           	
 21789                           l5681:
 21790  003888                     ;dispLCD4vias.c: 262:         ++str;
 21791                           	infsnz	((c:dispLCD_str@str)),c
 21792  003888  4A2E               	incf	((c:dispLCD_str@str+1)),c
 21793  00388A  2A2F               	goto	l5683
 21794  00388C  EF48  F01C         	line	263
 21795                           ;dispLCD4vias.c: 263:     }
 21796                           	
 21797                           l122:
 21798  003890                     	line	256
 21799                           	
 21800                           l5683:
 21801  003890                     ;dispLCD4vias.c: 256:     while( c = *str )
 21802                           	movff	(c:dispLCD_str@str),tblptrl
 21803  003890  C02E  FFF6         	movff	(c:dispLCD_str@str+1),tblptrh
 21804  003894  C02F  FFF7         	if	0	;tblptru may be non-zero
 21805  003898                     	clrf	tblptru
 21807  003898                     	if	0	;tblptru may be non-zero
 21808  003898                     	global __mediumconst
 21809                           movlw	low highword(__mediumconst)
 21812  003898                     	tblrd	*
 21813  003898  0008               	
 21814                           	movff	tablat,(c:dispLCD_str@c)
 21815  00389A  CFF5 F031          	movf	((c:dispLCD_str@c)),c,w
 21816  00389E  5031               	btfss	status,2
 21817  0038A0  A4D8               	goto	u4031
 21818  0038A2  EF55  F01C         	goto	u4030
 21819  0038A6  EF57  F01C         u4031:
 21820  0038AA                     	goto	l5675
 21821  0038AA  EF2E  F01C         u4030:
 21822  0038AE                     	goto	l127
 21823  0038AE  EF59  F01C         	
 21824                           l126:
 21825  0038B2                     	line	264
 21826                           	
 21827                           l127:
 21828  0038B2                     	return	;funcret
 21829  0038B2  0012               	opt stack 0
 21830                           GLOBAL	__end_of_dispLCD_str
 21831                           	__end_of_dispLCD_str:
 21832  0038B4                     	signat	_dispLCD_str,4217
 21833                           	global	_dispLCD_init
 21834                           
 21835 ;; *************** function _dispLCD_init *****************
 21836 ;; Defined at:
 21837 ;;		line 165 in file "dispLCD4vias.c"
 21838 ;; Parameters:    Size  Location     Type
 21839 ;;		None
 21840 ;; Auto vars:     Size  Location     Type
 21841 ;;		None
 21842 ;; Return value:  Size  Location     Type
 21843 ;;                  1    wreg      void 
 21844 ;; Registers used:
 21845 ;;		wreg, status,2, status,0, cstack
 21846 ;; Tracked objects:
 21847 ;;		On entry : 0/0
 21848 ;;		On exit  : 0/0
 21849 ;;		Unchanged: 0/0
 21850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21851 ;;      Params:         0       0       0       0       0       0       0       0       0
 21852 ;;      Locals:         0       0       0       0       0       0       0       0       0
 21853 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21854 ;;      Totals:         0       0       0       0       0       0       0       0       0
 21855 ;;Total ram usage:        0 bytes
 21856 ;; Hardware stack levels used:    1
 21857 ;; Hardware stack levels required when called:    3
 21858 ;; This function calls:
 21859 ;;		_delay
 21860 ;;		_dispLCD_instReg
 21861 ;; This function is called by:
 21862 ;;		_main
 21863 ;; This function uses a non-reentrant model
 21864 ;;
 21865                           psect	text49,class=CODE,space=0,reloc=2,group=0
 21866                           	line	165
 21867                           global __ptext49
 21868                           __ptext49:
 21869  003F10                     psect	text49
 21870                           	file	"dispLCD4vias.c"
 21871                           	line	165
 21872                           	global	__size_of_dispLCD_init
 21873                           	__size_of_dispLCD_init	equ	__end_of_dispLCD_init-_dispLCD_init
 21874  0000                     	
 21875                           _dispLCD_init:
 21876  003F10                     ;incstack = 0
 21877                           	opt	stack 27
 21878                           	line	167
 21879                           	
 21880                           l5653:
 21881  003F10                     ;dispLCD4vias.c: 167:     ADCON1 = 0xFF;
 21882                           	setf	((c:4033)),c	;volatile
 21883  003F10  68C1               	line	170
 21884                           ;dispLCD4vias.c: 170:     TRISBbits.TRISB2 = 0;
 21885                           	bcf	((c:3987)),c,2	;volatile
 21886  003F12  9493               	line	171
 21887                           ;dispLCD4vias.c: 171:     TRISBbits.TRISB3 = 0;
 21888                           	bcf	((c:3987)),c,3	;volatile
 21889  003F14  9693               	line	172
 21890                           ;dispLCD4vias.c: 172:     TRISBbits.TRISB4 = 0;
 21891                           	bcf	((c:3987)),c,4	;volatile
 21892  003F16  9893               	line	173
 21893                           ;dispLCD4vias.c: 173:     TRISBbits.TRISB5 = 0;
 21894                           	bcf	((c:3987)),c,5	;volatile
 21895  003F18  9A93               	line	175
 21896                           ;dispLCD4vias.c: 175:     TRISBbits.TRISB6 = 0;
 21897                           	bcf	((c:3987)),c,6	;volatile
 21898  003F1A  9C93               	line	176
 21899                           ;dispLCD4vias.c: 176:     TRISBbits.TRISB7 = 0;
 21900                           	bcf	((c:3987)),c,7	;volatile
 21901  003F1C  9E93               	line	178
 21902                           ;dispLCD4vias.c: 178:     LCDbits.EN = 1;
 21903                           	bsf	((c:3978)),c,7	;volatile
 21904  003F1E  8E8A               	line	179
 21905                           	
 21906                           l5655:
 21907  003F20                     ;dispLCD4vias.c: 179:     delay(5);
 21908                           	movlw	high(05h)
 21909  003F20  0E00               	movwf	((c:delay@t+1)),c
 21910  003F22  6E28               	movlw	low(05h)
 21911  003F24  0E05               	movwf	((c:delay@t)),c
 21912  003F26  6E27               	call	_delay	;wreg free
 21913  003F28  ECD7  F01F         	line	180
 21914                           ;dispLCD4vias.c: 180:     dispLCD_instReg( 0x20|0x00|0x08);
 21915                           	movlw	(028h)&0ffh
 21916  003F2C  0E28               	
 21917                           	call	_dispLCD_instReg
 21918  003F2E  EC31  F017         	line	181
 21919                           ;dispLCD4vias.c: 181:     dispLCD_instReg( 0x08|0x04|0x00|0x00 );
 21920                           	movlw	(0Ch)&0ffh
 21921  003F32  0E0C               	
 21922                           	call	_dispLCD_instReg
 21923  003F34  EC31  F017         	line	182
 21924                           ;dispLCD4vias.c: 182:     dispLCD_instReg( 0x01 );
 21925                           	movlw	(01h)&0ffh
 21926  003F38  0E01               	
 21927                           	call	_dispLCD_instReg
 21928  003F3A  EC31  F017         	line	183
 21929                           ;dispLCD4vias.c: 183:     dispLCD_instReg( 0x02 );
 21930                           	movlw	(02h)&0ffh
 21931  003F3E  0E02               	
 21932                           	call	_dispLCD_instReg
 21933  003F40  EC31  F017         	line	184
 21934                           	
 21935                           l93:
 21936  003F44                     	return	;funcret
 21937  003F44  0012               	opt stack 0
 21938                           GLOBAL	__end_of_dispLCD_init
 21939                           	__end_of_dispLCD_init:
 21940  003F46                     	signat	_dispLCD_init,89
 21941                           	global	_dispLCD_clr
 21942                           
 21943 ;; *************** function _dispLCD_clr *****************
 21944 ;; Defined at:
 21945 ;;		line 244 in file "dispLCD4vias.c"
 21946 ;; Parameters:    Size  Location     Type
 21947 ;;		None
 21948 ;; Auto vars:     Size  Location     Type
 21949 ;;		None
 21950 ;; Return value:  Size  Location     Type
 21951 ;;                  1    wreg      void 
 21952 ;; Registers used:
 21953 ;;		wreg, status,2, status,0, cstack
 21954 ;; Tracked objects:
 21955 ;;		On entry : 0/0
 21956 ;;		On exit  : 0/0
 21957 ;;		Unchanged: 0/0
 21958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21959 ;;      Params:         0       0       0       0       0       0       0       0       0
 21960 ;;      Locals:         0       0       0       0       0       0       0       0       0
 21961 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21962 ;;      Totals:         0       0       0       0       0       0       0       0       0
 21963 ;;Total ram usage:        0 bytes
 21964 ;; Hardware stack levels used:    1
 21965 ;; Hardware stack levels required when called:    3
 21966 ;; This function calls:
 21967 ;;		_dispLCD_instReg
 21968 ;; This function is called by:
 21969 ;;		_main
 21970 ;; This function uses a non-reentrant model
 21971 ;;
 21972                           psect	text50,class=CODE,space=0,reloc=2,group=0
 21973                           	line	244
 21974                           global __ptext50
 21975                           __ptext50:
 21976  004334                     psect	text50
 21977                           	file	"dispLCD4vias.c"
 21978                           	line	244
 21979                           	global	__size_of_dispLCD_clr
 21980                           	__size_of_dispLCD_clr	equ	__end_of_dispLCD_clr-_dispLCD_clr
 21981  0000                     	
 21982                           _dispLCD_clr:
 21983  004334                     ;incstack = 0
 21984                           	opt	stack 27
 21985                           	line	246
 21986                           	
 21987                           l5669:
 21988  004334                     ;dispLCD4vias.c: 246:     dispLCD_instReg(0x01);
 21989                           	movlw	(01h)&0ffh
 21990  004334  0E01               	
 21991                           	call	_dispLCD_instReg
 21992  004336  EC31  F017         	line	247
 21993                           	
 21994                           l119:
 21995  00433A                     	return	;funcret
 21996  00433A  0012               	opt stack 0
 21997                           GLOBAL	__end_of_dispLCD_clr
 21998                           	__end_of_dispLCD_clr:
 21999  00433C                     	signat	_dispLCD_clr,89
 22000                           	global	_dispLCD
 22001                           
 22002 ;; *************** function _dispLCD *****************
 22003 ;; Defined at:
 22004 ;;		line 187 in file "dispLCD4vias.c"
 22005 ;; Parameters:    Size  Location     Type
 22006 ;;  lin             1    wreg     unsigned char 
 22007 ;;  col             1    7[COMRAM] unsigned char 
 22008 ;;  str             2    8[COMRAM] PTR const unsigned char 
 22009 ;;		 -> STR_32(21), STR_31(21), STR_30(21), STR_29(2), 
 22010 ;;		 -> STR_28(2), STR_25(21), STR_24(21), STR_23(21), 
 22011 ;;		 -> STR_22(21), STR_21(21), STR_20(8), STR_19(21), 
 22012 ;;		 -> STR_18(21), STR_17(21), STR_16(21), STR_14(21), 
 22013 ;;		 -> STR_13(21), STR_12(2), STR_11(2), STR_10(21), 
 22014 ;;		 -> STR_9(21), STR_8(21), STR_7(21), STR_6(21), 
 22015 ;;		 -> STR_5(21), STR_3(21), STR_2(2), STR_1(2), 
 22016 ;; Auto vars:     Size  Location     Type
 22017 ;;  lin             1   11[COMRAM] unsigned char 
 22018 ;;  pos             1   10[COMRAM] unsigned char 
 22019 ;; Return value:  Size  Location     Type
 22020 ;;                  1    wreg      void 
 22021 ;; Registers used:
 22022 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 22023 ;; Tracked objects:
 22024 ;;		On entry : 0/0
 22025 ;;		On exit  : 0/0
 22026 ;;		Unchanged: 0/0
 22027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22028 ;;      Params:         3       0       0       0       0       0       0       0       0
 22029 ;;      Locals:         2       0       0       0       0       0       0       0       0
 22030 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22031 ;;      Totals:         5       0       0       0       0       0       0       0       0
 22032 ;;Total ram usage:        5 bytes
 22033 ;; Hardware stack levels used:    1
 22034 ;; Hardware stack levels required when called:    4
 22035 ;; This function calls:
 22036 ;;		_dispLCD_dataReg
 22037 ;;		_dispLCD_lincol
 22038 ;; This function is called by:
 22039 ;;		_main
 22040 ;; This function uses a non-reentrant model
 22041 ;;
 22042                           psect	text51,class=CODE,space=0,reloc=2,group=0
 22043                           	line	187
 22044                           global __ptext51
 22045                           __ptext51:
 22046  003CDE                     psect	text51
 22047                           	file	"dispLCD4vias.c"
 22048                           	line	187
 22049                           	global	__size_of_dispLCD
 22050                           	__size_of_dispLCD	equ	__end_of_dispLCD-_dispLCD
 22051  0000                     	
 22052                           _dispLCD:
 22053  003CDE                     ;incstack = 0
 22054                           	opt	stack 26
 22055                           ;dispLCD@lin stored from wreg
 22056                           	movwf	((c:dispLCD@lin)),c
 22057  003CDE  6E32               	line	189
 22058                           	
 22059                           l5657:
 22060  003CE0                     ;dispLCD4vias.c: 187: void dispLCD( unsigned char lin, unsigned char col, const char * s
                                 tr );dispLCD4vias.c: 188: {;dispLCD4vias.c: 189:     char pos = col;
 22061                           	movff	(c:dispLCD@col),(c:dispLCD@pos)
 22062  003CE0  C02E  F031         	line	190
 22063                           	
 22064                           l5659:
 22065  003CE4                     ;dispLCD4vias.c: 190:     dispLCD_lincol( lin, col );
 22066                           	movff	(c:dispLCD@col),(c:dispLCD_lincol@col)
 22067  003CE4  C02E  F029         	movf	((c:dispLCD@lin)),c,w
 22068  003CE8  5032               	
 22069                           	call	_dispLCD_lincol
 22070  003CEA  EC5C  F01D         	line	192
 22071                           ;dispLCD4vias.c: 192:     while( *str )
 22072                           	goto	l5667
 22073  003CEE  EF86  F01E         	
 22074                           l97:
 22075  003CF2                     	line	194
 22076                           	
 22077                           l5661:
 22078  003CF2                     ;dispLCD4vias.c: 193:     {;dispLCD4vias.c: 194:         dispLCD_dataReg( *str );
 22079                           	movff	(c:dispLCD@str),tblptrl
 22080  003CF2  C02F  FFF6         	movff	(c:dispLCD@str+1),tblptrh
 22081  003CF6  C030  FFF7         	if	0	;tblptru may be non-zero
 22082  003CFA                     	clrf	tblptru
 22084  003CFA                     	if	0	;tblptru may be non-zero
 22085  003CFA                     	global __mediumconst
 22086                           movlw	low highword(__mediumconst)
 22089  003CFA                     	tblrd	*
 22090  003CFA  0008               	
 22091                           	movf	tablat,w
 22092  003CFC  50F5               	
 22093                           	call	_dispLCD_dataReg
 22094  003CFE  EC97  F01E         	line	195
 22095                           	
 22096                           l5663:
 22097  003D02                     ;dispLCD4vias.c: 195:         ++str;
 22098                           	infsnz	((c:dispLCD@str)),c
 22099  003D02  4A2F               	incf	((c:dispLCD@str+1)),c
 22100  003D04  2A30               	line	196
 22101                           	
 22102                           l5665:
 22103  003D06                     ;dispLCD4vias.c: 196:         ++pos;
 22104                           	incf	((c:dispLCD@pos)),c
 22105  003D06  2A31               	goto	l5667
 22106  003D08  EF86  F01E         	line	197
 22107                           ;dispLCD4vias.c: 197:     }
 22108                           	
 22109                           l96:
 22110  003D0C                     	line	192
 22111                           	
 22112                           l5667:
 22113  003D0C                     ;dispLCD4vias.c: 192:     while( *str )
 22114                           	movff	(c:dispLCD@str),tblptrl
 22115  003D0C  C02F  FFF6         	movff	(c:dispLCD@str+1),tblptrh
 22116  003D10  C030  FFF7         	if	0	;tblptru may be non-zero
 22117  003D14                     	clrf	tblptru
 22119  003D14                     	if	0	;tblptru may be non-zero
 22120  003D14                     	global __mediumconst
 22121                           movlw	low highword(__mediumconst)
 22124  003D14                     	tblrd	*
 22125  003D14  0008               	
 22126                           	movf	tablat,w
 22127  003D16  50F5               	iorlw	0
 22128  003D18  0900               	btfss	status,2
 22129  003D1A  A4D8               	goto	u4011
 22130  003D1C  EF92  F01E         	goto	u4010
 22131  003D20  EF94  F01E         u4011:
 22132  003D24                     	goto	l5661
 22133  003D24  EF79  F01E         u4010:
 22134  003D28                     	goto	l99
 22135  003D28  EF96  F01E         	
 22136                           l98:
 22137  003D2C                     	line	198
 22138                           	
 22139                           l99:
 22140  003D2C                     	return	;funcret
 22141  003D2C  0012               	opt stack 0
 22142                           GLOBAL	__end_of_dispLCD
 22143                           	__end_of_dispLCD:
 22144  003D2E                     	signat	_dispLCD,12409
 22145                           	global	_dispLCD_lincol
 22146                           
 22147 ;; *************** function _dispLCD_lincol *****************
 22148 ;; Defined at:
 22149 ;;		line 150 in file "dispLCD4vias.c"
 22150 ;; Parameters:    Size  Location     Type
 22151 ;;  lin             1    wreg     unsigned char 
 22152 ;;  col             1    2[COMRAM] unsigned char 
 22153 ;; Auto vars:     Size  Location     Type
 22154 ;;  lin             1    5[COMRAM] unsigned char 
 22155 ;;  aux             1    6[COMRAM] unsigned char 
 22156 ;; Return value:  Size  Location     Type
 22157 ;;                  1    wreg      void 
 22158 ;; Registers used:
 22159 ;;		wreg, status,2, status,0, cstack
 22160 ;; Tracked objects:
 22161 ;;		On entry : 0/0
 22162 ;;		On exit  : 0/0
 22163 ;;		Unchanged: 0/0
 22164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22165 ;;      Params:         1       0       0       0       0       0       0       0       0
 22166 ;;      Locals:         2       0       0       0       0       0       0       0       0
 22167 ;;      Temps:          2       0       0       0       0       0       0       0       0
 22168 ;;      Totals:         5       0       0       0       0       0       0       0       0
 22169 ;;Total ram usage:        5 bytes
 22170 ;; Hardware stack levels used:    1
 22171 ;; Hardware stack levels required when called:    3
 22172 ;; This function calls:
 22173 ;;		_dispLCD_instReg
 22174 ;; This function is called by:
 22175 ;;		_dispLCD
 22176 ;;		_dispLCD_num
 22177 ;;		_dispLCD_str
 22178 ;;		_fifo_print
 22179 ;;		_printExec
 22180 ;;		_main
 22181 ;; This function uses a non-reentrant model
 22182 ;;
 22183                           psect	text52,class=CODE,space=0,reloc=2,group=0
 22184                           	line	150
 22185                           global __ptext52
 22186                           __ptext52:
 22187  003AB8                     psect	text52
 22188                           	file	"dispLCD4vias.c"
 22189                           	line	150
 22190                           	global	__size_of_dispLCD_lincol
 22191                           	__size_of_dispLCD_lincol	equ	__end_of_dispLCD_lincol-_dispLCD_lincol
 22192  0000                     	
 22193                           _dispLCD_lincol:
 22194  003AB8                     ;incstack = 0
 22195                           	opt	stack 25
 22196                           ;dispLCD_lincol@lin stored from wreg
 22197                           	movwf	((c:dispLCD_lincol@lin)),c
 22198  003AB8  6E2C               	line	152
 22199                           	
 22200                           l5131:
 22201  003ABA                     ;dispLCD4vias.c: 150: void dispLCD_lincol( unsigned char lin, unsigned char col);dispLCD
                                 4vias.c: 151: {;dispLCD4vias.c: 152:     char aux = 0x00;
 22202                           	movlw	low(0)
 22203  003ABA  0E00               	movwf	((c:dispLCD_lincol@aux)),c
 22204  003ABC  6E2D               	line	154
 22205                           ;dispLCD4vias.c: 154:     switch(lin)
 22206                           	goto	l5141
 22207  003ABE  EF6F  F01D         	line	156
 22208                           ;dispLCD4vias.c: 155:     {;dispLCD4vias.c: 156:         case 1: aux = 0x40; break;
 22209                           	
 22210                           l86:
 22211  003AC2                     	
 22212                           l5133:
 22213  003AC2                     	movlw	low(040h)
 22214  003AC2  0E40               	movwf	((c:dispLCD_lincol@aux)),c
 22215  003AC4  6E2D               	goto	l5143
 22216  003AC6  EF88  F01D         	line	157
 22217                           ;dispLCD4vias.c: 157:         case 2: aux = 0x14; break;
 22218                           	
 22219                           l88:
 22220  003ACA                     	
 22221                           l5135:
 22222  003ACA                     	movlw	low(014h)
 22223  003ACA  0E14               	movwf	((c:dispLCD_lincol@aux)),c
 22224  003ACC  6E2D               	goto	l5143
 22225  003ACE  EF88  F01D         	line	158
 22226                           ;dispLCD4vias.c: 158:         case 3: aux = 0x54; break;
 22227                           	
 22228                           l89:
 22229  003AD2                     	
 22230                           l5137:
 22231  003AD2                     	movlw	low(054h)
 22232  003AD2  0E54               	movwf	((c:dispLCD_lincol@aux)),c
 22233  003AD4  6E2D               	goto	l5143
 22234  003AD6  EF88  F01D         	line	159
 22235                           	
 22236                           l5139:
 22237  003ADA                     ;dispLCD4vias.c: 159:     }
 22238                           	goto	l5143
 22239  003ADA  EF88  F01D         	
 22240                           l85:
 22241  003ADE                     	
 22242                           l5141:
 22243  003ADE                     	movf	((c:dispLCD_lincol@lin)),c,w
 22244  003ADE  502C               	movwf	(??_dispLCD_lincol+0+0)&0ffh,c
 22245  003AE0  6E2A               	clrf	(??_dispLCD_lincol+0+0+1)&0ffh,c
 22246  003AE2  6A2B               
 22247                           	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
 22248                           ; Switch size 1, requested type "space"
 22249                           ; Number of cases is 1, Range of values is 0 to 0
 22250                           ; switch strategies available:
 22251                           ; Name         Instructions Cycles
 22252                           ; simple_byte            4     3 (average)
 22253                           ;	Chosen strategy is simple_byte
 22254                           
 22255                           	movf ??_dispLCD_lincol+0+1,c,w
 22256  003AE4  502B               	xorlw	0^0	; case 0
 22257  003AE6  0A00               	skipnz
 22258  003AE8  B4D8               	goto	l7993
 22259  003AEA  EF79  F01D         	goto	l5143
 22260  003AEE  EF88  F01D         	
 22261                           l7993:
 22262  003AF2                     ; Switch size 1, requested type "space"
 22263                           ; Number of cases is 3, Range of values is 1 to 3
 22264                           ; switch strategies available:
 22265                           ; Name         Instructions Cycles
 22266                           ; simple_byte           10     6 (average)
 22267                           ;	Chosen strategy is simple_byte
 22268                           
 22269                           	movf ??_dispLCD_lincol+0+0,c,w
 22270  003AF2  502A               	xorlw	1^0	; case 1
 22271  003AF4  0A01               	skipnz
 22272  003AF6  B4D8               	goto	l5133
 22273  003AF8  EF61  F01D         	xorlw	2^1	; case 2
 22274  003AFC  0A03               	skipnz
 22275  003AFE  B4D8               	goto	l5135
 22276  003B00  EF65  F01D         	xorlw	3^2	; case 3
 22277  003B04  0A01               	skipnz
 22278  003B06  B4D8               	goto	l5137
 22279  003B08  EF69  F01D         	goto	l5143
 22280  003B0C  EF88  F01D         
 22281                           	
 22282                           l87:
 22283  003B10                     	line	161
 22284                           	
 22285                           l5143:
 22286  003B10                     ;dispLCD4vias.c: 161:     dispLCD_instReg( (0x80+(aux + (col + 0x00) & 0x7F)) );
 22287                           	movf	((c:dispLCD_lincol@aux)),c,w
 22288  003B10  502D               	addwf	((c:dispLCD_lincol@col)),c,w
 22289  003B12  2429               	andlw	low(07Fh)
 22290  003B14  0B7F               	addlw	low(080h)
 22291  003B16  0F80               	
 22292                           	call	_dispLCD_instReg
 22293  003B18  EC31  F017         	line	162
 22294                           	
 22295                           l90:
 22296  003B1C                     	return	;funcret
 22297  003B1C  0012               	opt stack 0
 22298                           GLOBAL	__end_of_dispLCD_lincol
 22299                           	__end_of_dispLCD_lincol:
 22300  003B1E                     	signat	_dispLCD_lincol,8313
 22301                           	global	_dispLCD_instReg
 22302                           
 22303 ;; *************** function _dispLCD_instReg *****************
 22304 ;; Defined at:
 22305 ;;		line 101 in file "dispLCD4vias.c"
 22306 ;; Parameters:    Size  Location     Type
 22307 ;;  i               1    wreg     unsigned char 
 22308 ;; Auto vars:     Size  Location     Type
 22309 ;;  i               1    1[COMRAM] unsigned char 
 22310 ;; Return value:  Size  Location     Type
 22311 ;;                  1    wreg      void 
 22312 ;; Registers used:
 22313 ;;		wreg, status,2, status,0
 22314 ;; Tracked objects:
 22315 ;;		On entry : 0/0
 22316 ;;		On exit  : 0/0
 22317 ;;		Unchanged: 0/0
 22318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22319 ;;      Params:         0       0       0       0       0       0       0       0       0
 22320 ;;      Locals:         1       0       0       0       0       0       0       0       0
 22321 ;;      Temps:          1       0       0       0       0       0       0       0       0
 22322 ;;      Totals:         2       0       0       0       0       0       0       0       0
 22323 ;;Total ram usage:        2 bytes
 22324 ;; Hardware stack levels used:    1
 22325 ;; Hardware stack levels required when called:    2
 22326 ;; This function calls:
 22327 ;;		Nothing
 22328 ;; This function is called by:
 22329 ;;		_dispLCD_lincol
 22330 ;;		_dispLCD_init
 22331 ;;		_dispLCD_clr
 22332 ;; This function uses a non-reentrant model
 22333 ;;
 22334                           psect	text53,class=CODE,space=0,reloc=2,group=0
 22335                           	line	101
 22336                           global __ptext53
 22337                           __ptext53:
 22338  002E62                     psect	text53
 22339                           	file	"dispLCD4vias.c"
 22340                           	line	101
 22341                           	global	__size_of_dispLCD_instReg
 22342                           	__size_of_dispLCD_instReg	equ	__end_of_dispLCD_instReg-_dispLCD_instReg
 22343  0000                     	
 22344                           _dispLCD_instReg:
 22345  002E62                     ;incstack = 0
 22346                           	opt	stack 25
 22347                           ;dispLCD_instReg@i stored from wreg
 22348                           	movwf	((c:dispLCD_instReg@i)),c
 22349  002E62  6E28               	line	103
 22350                           	
 22351                           l5015:
 22352  002E64                     ;dispLCD4vias.c: 101: void dispLCD_instReg( unsigned char i );dispLCD4vias.c: 102: {;dis
                                 pLCD4vias.c: 103:     LCDbits.RS = 0;
 22353                           	bcf	((c:3978)),c,6	;volatile
 22354  002E64  9C8A               	line	104
 22355                           	
 22356                           l5017:
 22357  002E66                     ;dispLCD4vias.c: 104:     LCDbits.BUS = (i>>4);
 22358                           	movff	(c:dispLCD_instReg@i),??_dispLCD_instReg+0+0
 22359  002E66  C028  F027         	swapf	(??_dispLCD_instReg+0+0),c
 22360  002E6A  3A27               	movlw	(0ffh shr 4) & 0ffh
 22361  002E6C  0E0F               	andwf	(??_dispLCD_instReg+0+0),c
 22362  002E6E  1627               	rlncf	(??_dispLCD_instReg+0+0),c
 22363  002E70  4627               	rlncf	(??_dispLCD_instReg+0+0),c
 22364  002E72  4627               	movf	((c:3978)),c,w	;volatile
 22365  002E74  508A               	xorwf	(??_dispLCD_instReg+0+0),c,w
 22366  002E76  1827               	andlw	not (((1<<4)-1)<<2)
 22367  002E78  0BC3               	xorwf	(??_dispLCD_instReg+0+0),c,w
 22368  002E7A  1827               	movwf	((c:3978)),c	;volatile
 22369  002E7C  6E8A               	line	106
 22370                           	
 22371                           l5019:
 22372  002E7E                     ;dispLCD4vias.c: 106:     LCDbits.EN = 0;
 22373                           	bcf	((c:3978)),c,7	;volatile
 22374  002E7E  9E8A               	line	107
 22375                           ;dispLCD4vias.c: 107:     if( i == 0x01 || i == 0x02 )
 22376                           		decf	((c:dispLCD_instReg@i)),c,w
 22377  002E80  0428               	btfsc	status,2
 22378  002E82  B4D8               	goto	u3251
 22379  002E84  EF46  F017         	goto	u3250
 22380  002E88  EF48  F017         
 22381                           u3251:
 22382  002E8C                     	goto	l5023
 22383  002E8C  EF53  F017         u3250:
 22384  002E90                     	
 22385                           l5021:
 22386  002E90                     		movlw	2
 22387  002E90  0E02               	xorwf	((c:dispLCD_instReg@i)),c,w
 22388  002E92  1828               	btfss	status,2
 22389  002E94  A4D8               	goto	u3261
 22390  002E96  EF4F  F017         	goto	u3260
 22391  002E9A  EF51  F017         
 22392                           u3261:
 22393  002E9E                     	goto	l5025
 22394  002E9E  EF5C  F017         u3260:
 22395  002EA2                     	goto	l5023
 22396  002EA2  EF53  F017         	
 22397                           l72:
 22398  002EA6                     	line	108
 22399                           	
 22400                           l5023:
 22401  002EA6                     ;dispLCD4vias.c: 108:         _delay((unsigned long)((2)*(20000000/4000.0)));
 22402                           	opt asmopt_push
 22403                           opt asmopt_off
 22404                           movlw	13
 22405  002EA6  0E0D               movwf	(??_dispLCD_instReg+0+0)&0ffh,c,f
 22406  002EA8  6E27               	movlw	252
 22407  002EAA  0EFC               u6217:
 22408  002EAC                     decfsz	wreg,f
 22409  002EAC  2EE8               	bra	u6217
 22410  002EAE  D7FE               	decfsz	(??_dispLCD_instReg+0+0)&0ffh,c,f
 22411  002EB0  2E27               	bra	u6217
 22412  002EB2  D7FC               opt asmopt_pop
 22413                           
 22414                           	goto	l5027
 22415  002EB4  EF62  F017         	line	109
 22416                           ;dispLCD4vias.c: 109:     else
 22417                           	
 22418                           l70:
 22419  002EB8                     	line	110
 22420                           	
 22421                           l5025:
 22422  002EB8                     ;dispLCD4vias.c: 110:         _delay((unsigned long)((40)*(20000000/4000000.0)));
 22423                           	opt asmopt_push
 22424                           opt asmopt_off
 22425                           	movlw	66
 22426  002EB8  0E42               u6227:
 22427  002EBA                     decfsz	wreg,f
 22428  002EBA  2EE8               	bra	u6227
 22429  002EBC  D7FE               	nop2
 22430  002EBE  D000               opt asmopt_pop
 22431                           
 22432                           	goto	l5027
 22433  002EC0  EF62  F017         	
 22434                           l73:
 22435  002EC4                     	line	111
 22436                           	
 22437                           l5027:
 22438  002EC4                     ;dispLCD4vias.c: 111:     LCDbits.EN = 1;
 22439                           	bsf	((c:3978)),c,7	;volatile
 22440  002EC4  8E8A               	line	114
 22441                           	
 22442                           l5029:
 22443  002EC6                     ;dispLCD4vias.c: 114:     if( (i & 0xF0) == (0x20 | 0x00) )
 22444                           	movf	((c:dispLCD_instReg@i)),c,w
 22445  002EC6  5028               	andlw	low(0F0h)
 22446  002EC8  0BF0               	xorlw	020h
 22447  002ECA  0A20               	btfss	status,2
 22448  002ECC  A4D8               	goto	u3271
 22449  002ECE  EF6B  F017         	goto	u3270
 22450  002ED2  EF6D  F017         u3271:
 22451  002ED6                     	goto	l5041
 22452  002ED6  EF82  F017         u3270:
 22453  002EDA                     	line	116
 22454                           	
 22455                           l5031:
 22456  002EDA                     ;dispLCD4vias.c: 115:     {;dispLCD4vias.c: 116:         LCDbits.RS = 0;
 22457                           	bcf	((c:3978)),c,6	;volatile
 22458  002EDA  9C8A               	line	117
 22459                           	
 22460                           l5033:
 22461  002EDC                     ;dispLCD4vias.c: 117:         LCDbits.BUS = i>>4;
 22462                           	movff	(c:dispLCD_instReg@i),??_dispLCD_instReg+0+0
 22463  002EDC  C028  F027         	swapf	(??_dispLCD_instReg+0+0),c
 22464  002EE0  3A27               	movlw	(0ffh shr 4) & 0ffh
 22465  002EE2  0E0F               	andwf	(??_dispLCD_instReg+0+0),c
 22466  002EE4  1627               	rlncf	(??_dispLCD_instReg+0+0),c
 22467  002EE6  4627               	rlncf	(??_dispLCD_instReg+0+0),c
 22468  002EE8  4627               	movf	((c:3978)),c,w	;volatile
 22469  002EEA  508A               	xorwf	(??_dispLCD_instReg+0+0),c,w
 22470  002EEC  1827               	andlw	not (((1<<4)-1)<<2)
 22471  002EEE  0BC3               	xorwf	(??_dispLCD_instReg+0+0),c,w
 22472  002EF0  1827               	movwf	((c:3978)),c	;volatile
 22473  002EF2  6E8A               	line	118
 22474                           	
 22475                           l5035:
 22476  002EF4                     ;dispLCD4vias.c: 118:         LCDbits.EN = 0;
 22477                           	bcf	((c:3978)),c,7	;volatile
 22478  002EF4  9E8A               	line	119
 22479                           	
 22480                           l5037:
 22481  002EF6                     ;dispLCD4vias.c: 119:         _delay((unsigned long)((40)*(20000000/4000000.0)));
 22482                           	opt asmopt_push
 22483                           opt asmopt_off
 22484                           	movlw	66
 22485  002EF6  0E42               u6237:
 22486  002EF8                     decfsz	wreg,f
 22487  002EF8  2EE8               	bra	u6237
 22488  002EFA  D7FE               	nop2
 22489  002EFC  D000               opt asmopt_pop
 22490                           
 22491                           	line	120
 22492                           	
 22493                           l5039:
 22494  002EFE                     ;dispLCD4vias.c: 120:         LCDbits.EN = 1;
 22495                           	bsf	((c:3978)),c,7	;volatile
 22496  002EFE  8E8A               	goto	l5041
 22497  002F00  EF82  F017         	line	121
 22498                           ;dispLCD4vias.c: 121:     }
 22499                           	
 22500                           l74:
 22501  002F04                     	line	123
 22502                           	
 22503                           l5041:
 22504  002F04                     ;dispLCD4vias.c: 123:     LCDbits.RS = 0;
 22505                           	bcf	((c:3978)),c,6	;volatile
 22506  002F04  9C8A               	line	124
 22507                           	
 22508                           l5043:
 22509  002F06                     ;dispLCD4vias.c: 124:     LCDbits.BUS = i & 0x0F;
 22510                           	movff	(c:dispLCD_instReg@i),??_dispLCD_instReg+0+0
 22511  002F06  C028  F027         	movlw	0Fh
 22512  002F0A  0E0F               	andwf	(??_dispLCD_instReg+0+0),c
 22513  002F0C  1627               	rlncf	(??_dispLCD_instReg+0+0),c
 22514  002F0E  4627               	rlncf	(??_dispLCD_instReg+0+0),c
 22515  002F10  4627               	movf	((c:3978)),c,w	;volatile
 22516  002F12  508A               	xorwf	(??_dispLCD_instReg+0+0),c,w
 22517  002F14  1827               	andlw	not (((1<<4)-1)<<2)
 22518  002F16  0BC3               	xorwf	(??_dispLCD_instReg+0+0),c,w
 22519  002F18  1827               	movwf	((c:3978)),c	;volatile
 22520  002F1A  6E8A               	line	125
 22521                           	
 22522                           l5045:
 22523  002F1C                     ;dispLCD4vias.c: 125:     LCDbits.EN = 0;
 22524                           	bcf	((c:3978)),c,7	;volatile
 22525  002F1C  9E8A               	line	126
 22526                           	
 22527                           l5047:
 22528  002F1E                     ;dispLCD4vias.c: 126:     if( i == 0x01 || i == 0x02 )
 22529                           		decf	((c:dispLCD_instReg@i)),c,w
 22530  002F1E  0428               	btfsc	status,2
 22531  002F20  B4D8               	goto	u3281
 22532  002F22  EF95  F017         	goto	u3280
 22533  002F26  EF97  F017         
 22534                           u3281:
 22535  002F2A                     	goto	l5051
 22536  002F2A  EFA2  F017         u3280:
 22537  002F2E                     	
 22538                           l5049:
 22539  002F2E                     		movlw	2
 22540  002F2E  0E02               	xorwf	((c:dispLCD_instReg@i)),c,w
 22541  002F30  1828               	btfss	status,2
 22542  002F32  A4D8               	goto	u3291
 22543  002F34  EF9E  F017         	goto	u3290
 22544  002F38  EFA0  F017         
 22545                           u3291:
 22546  002F3C                     	goto	l5053
 22547  002F3C  EFAB  F017         u3290:
 22548  002F40                     	goto	l5051
 22549  002F40  EFA2  F017         	
 22550                           l77:
 22551  002F44                     	line	127
 22552                           	
 22553                           l5051:
 22554  002F44                     ;dispLCD4vias.c: 127:         _delay((unsigned long)((2)*(20000000/4000.0)));
 22555                           	opt asmopt_push
 22556                           opt asmopt_off
 22557                           movlw	13
 22558  002F44  0E0D               movwf	(??_dispLCD_instReg+0+0)&0ffh,c,f
 22559  002F46  6E27               	movlw	252
 22560  002F48  0EFC               u6247:
 22561  002F4A                     decfsz	wreg,f
 22562  002F4A  2EE8               	bra	u6247
 22563  002F4C  D7FE               	decfsz	(??_dispLCD_instReg+0+0)&0ffh,c,f
 22564  002F4E  2E27               	bra	u6247
 22565  002F50  D7FC               opt asmopt_pop
 22566                           
 22567                           	goto	l5055
 22568  002F52  EFB1  F017         	line	128
 22569                           ;dispLCD4vias.c: 128:     else
 22570                           	
 22571                           l75:
 22572  002F56                     	line	129
 22573                           	
 22574                           l5053:
 22575  002F56                     ;dispLCD4vias.c: 129:         _delay((unsigned long)((40)*(20000000/4000000.0)));
 22576                           	opt asmopt_push
 22577                           opt asmopt_off
 22578                           	movlw	66
 22579  002F56  0E42               u6257:
 22580  002F58                     decfsz	wreg,f
 22581  002F58  2EE8               	bra	u6257
 22582  002F5A  D7FE               	nop2
 22583  002F5C  D000               opt asmopt_pop
 22584                           
 22585                           	goto	l5055
 22586  002F5E  EFB1  F017         	
 22587                           l78:
 22588  002F62                     	line	130
 22589                           	
 22590                           l5055:
 22591  002F62                     ;dispLCD4vias.c: 130:     LCDbits.EN = 1;
 22592                           	bsf	((c:3978)),c,7	;volatile
 22593  002F62  8E8A               	line	131
 22594                           	
 22595                           l79:
 22596  002F64                     	return	;funcret
 22597  002F64  0012               	opt stack 0
 22598                           GLOBAL	__end_of_dispLCD_instReg
 22599                           	__end_of_dispLCD_instReg:
 22600  002F66                     	signat	_dispLCD_instReg,4217
 22601                           	global	_dispLCD_dataReg
 22602                           
 22603 ;; *************** function _dispLCD_dataReg *****************
 22604 ;; Defined at:
 22605 ;;		line 134 in file "dispLCD4vias.c"
 22606 ;; Parameters:    Size  Location     Type
 22607 ;;  d               1    wreg     unsigned char 
 22608 ;; Auto vars:     Size  Location     Type
 22609 ;;  d               1    1[COMRAM] unsigned char 
 22610 ;; Return value:  Size  Location     Type
 22611 ;;                  1    wreg      void 
 22612 ;; Registers used:
 22613 ;;		wreg, status,2, status,0
 22614 ;; Tracked objects:
 22615 ;;		On entry : 0/0
 22616 ;;		On exit  : 0/0
 22617 ;;		Unchanged: 0/0
 22618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22619 ;;      Params:         0       0       0       0       0       0       0       0       0
 22620 ;;      Locals:         1       0       0       0       0       0       0       0       0
 22621 ;;      Temps:          1       0       0       0       0       0       0       0       0
 22622 ;;      Totals:         2       0       0       0       0       0       0       0       0
 22623 ;;Total ram usage:        2 bytes
 22624 ;; Hardware stack levels used:    1
 22625 ;; Hardware stack levels required when called:    2
 22626 ;; This function calls:
 22627 ;;		Nothing
 22628 ;; This function is called by:
 22629 ;;		_dispLCD
 22630 ;;		_dispLCD_num
 22631 ;;		_dispLCD_str
 22632 ;;		_fifo_print
 22633 ;;		_printExec
 22634 ;;		_main
 22635 ;; This function uses a non-reentrant model
 22636 ;;
 22637                           psect	text54,class=CODE,space=0,reloc=2,group=0
 22638                           	line	134
 22639                           global __ptext54
 22640                           __ptext54:
 22641  003D2E                     psect	text54
 22642                           	file	"dispLCD4vias.c"
 22643                           	line	134
 22644                           	global	__size_of_dispLCD_dataReg
 22645                           	__size_of_dispLCD_dataReg	equ	__end_of_dispLCD_dataReg-_dispLCD_dataReg
 22646  0000                     	
 22647                           _dispLCD_dataReg:
 22648  003D2E                     ;incstack = 0
 22649                           	opt	stack 26
 22650                           ;dispLCD_dataReg@d stored from wreg
 22651                           	movwf	((c:dispLCD_dataReg@d)),c
 22652  003D2E  6E28               	line	136
 22653                           	
 22654                           l5113:
 22655  003D30                     ;dispLCD4vias.c: 134: void dispLCD_dataReg( unsigned char d );dispLCD4vias.c: 135: {;dis
                                 pLCD4vias.c: 136:     LCDbits.RS = 1;
 22656                           	bsf	((c:3978)),c,6	;volatile
 22657  003D30  8C8A               	line	137
 22658                           	
 22659                           l5115:
 22660  003D32                     ;dispLCD4vias.c: 137:     LCDbits.BUS = d >> 4;
 22661                           	movff	(c:dispLCD_dataReg@d),??_dispLCD_dataReg+0+0
 22662  003D32  C028  F027         	swapf	(??_dispLCD_dataReg+0+0),c
 22663  003D36  3A27               	movlw	(0ffh shr 4) & 0ffh
 22664  003D38  0E0F               	andwf	(??_dispLCD_dataReg+0+0),c
 22665  003D3A  1627               	rlncf	(??_dispLCD_dataReg+0+0),c
 22666  003D3C  4627               	rlncf	(??_dispLCD_dataReg+0+0),c
 22667  003D3E  4627               	movf	((c:3978)),c,w	;volatile
 22668  003D40  508A               	xorwf	(??_dispLCD_dataReg+0+0),c,w
 22669  003D42  1827               	andlw	not (((1<<4)-1)<<2)
 22670  003D44  0BC3               	xorwf	(??_dispLCD_dataReg+0+0),c,w
 22671  003D46  1827               	movwf	((c:3978)),c	;volatile
 22672  003D48  6E8A               	line	138
 22673                           	
 22674                           l5117:
 22675  003D4A                     ;dispLCD4vias.c: 138:     LCDbits.EN = 0;
 22676                           	bcf	((c:3978)),c,7	;volatile
 22677  003D4A  9E8A               	line	139
 22678                           	
 22679                           l5119:
 22680  003D4C                     ;dispLCD4vias.c: 139:     _delay((unsigned long)((40)*(20000000/4000000.0)));
 22681                           	opt asmopt_push
 22682                           opt asmopt_off
 22683                           	movlw	66
 22684  003D4C  0E42               u6267:
 22685  003D4E                     decfsz	wreg,f
 22686  003D4E  2EE8               	bra	u6267
 22687  003D50  D7FE               	nop2
 22688  003D52  D000               opt asmopt_pop
 22689                           
 22690                           	line	140
 22691                           	
 22692                           l5121:
 22693  003D54                     ;dispLCD4vias.c: 140:     LCDbits.EN = 1;
 22694                           	bsf	((c:3978)),c,7	;volatile
 22695  003D54  8E8A               	line	142
 22696                           	
 22697                           l5123:
 22698  003D56                     ;dispLCD4vias.c: 142:     LCDbits.RS = 1;
 22699                           	bsf	((c:3978)),c,6	;volatile
 22700  003D56  8C8A               	line	143
 22701                           	
 22702                           l5125:
 22703  003D58                     ;dispLCD4vias.c: 143:     LCDbits.BUS = d & 0x0F;
 22704                           	movff	(c:dispLCD_dataReg@d),??_dispLCD_dataReg+0+0
 22705  003D58  C028  F027         	movlw	0Fh
 22706  003D5C  0E0F               	andwf	(??_dispLCD_dataReg+0+0),c
 22707  003D5E  1627               	rlncf	(??_dispLCD_dataReg+0+0),c
 22708  003D60  4627               	rlncf	(??_dispLCD_dataReg+0+0),c
 22709  003D62  4627               	movf	((c:3978)),c,w	;volatile
 22710  003D64  508A               	xorwf	(??_dispLCD_dataReg+0+0),c,w
 22711  003D66  1827               	andlw	not (((1<<4)-1)<<2)
 22712  003D68  0BC3               	xorwf	(??_dispLCD_dataReg+0+0),c,w
 22713  003D6A  1827               	movwf	((c:3978)),c	;volatile
 22714  003D6C  6E8A               	line	144
 22715                           	
 22716                           l5127:
 22717  003D6E                     ;dispLCD4vias.c: 144:     LCDbits.EN = 0;
 22718                           	bcf	((c:3978)),c,7	;volatile
 22719  003D6E  9E8A               	line	145
 22720                           ;dispLCD4vias.c: 145:     _delay((unsigned long)((40)*(20000000/4000000.0)));
 22721                           	opt asmopt_push
 22722                           opt asmopt_off
 22723                           	movlw	66
 22724  003D70  0E42               u6277:
 22725  003D72                     decfsz	wreg,f
 22726  003D72  2EE8               	bra	u6277
 22727  003D74  D7FE               	nop2
 22728  003D76  D000               opt asmopt_pop
 22729                           
 22730                           	line	146
 22731                           	
 22732                           l5129:
 22733  003D78                     ;dispLCD4vias.c: 146:     LCDbits.EN = 1;
 22734                           	bsf	((c:3978)),c,7	;volatile
 22735  003D78  8E8A               	line	147
 22736                           	
 22737                           l82:
 22738  003D7A                     	return	;funcret
 22739  003D7A  0012               	opt stack 0
 22740                           GLOBAL	__end_of_dispLCD_dataReg
 22741                           	__end_of_dispLCD_dataReg:
 22742  003D7C                     	signat	_dispLCD_dataReg,4217
 22743                           	global	_dignum_conc
 22744                           
 22745 ;; *************** function _dignum_conc *****************
 22746 ;; Defined at:
 22747 ;;		line 460 in file "fifo.c"
 22748 ;; Parameters:    Size  Location     Type
 22749 ;;  dig             1    wreg     unsigned char 
 22750 ;;  ptrNum          2    6[COMRAM] PTR unsigned int 
 22751 ;;		 -> main@ciclos(2), main@por(2), main@num(2), 
 22752 ;; Auto vars:     Size  Location     Type
 22753 ;;  dig             1   12[COMRAM] unsigned char 
 22754 ;; Return value:  Size  Location     Type
 22755 ;;                  1    wreg      void 
 22756 ;; Registers used:
 22757 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22758 ;; Tracked objects:
 22759 ;;		On entry : 0/0
 22760 ;;		On exit  : 0/0
 22761 ;;		Unchanged: 0/0
 22762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22763 ;;      Params:         2       0       0       0       0       0       0       0       0
 22764 ;;      Locals:         1       0       0       0       0       0       0       0       0
 22765 ;;      Temps:          4       0       0       0       0       0       0       0       0
 22766 ;;      Totals:         7       0       0       0       0       0       0       0       0
 22767 ;;Total ram usage:        7 bytes
 22768 ;; Hardware stack levels used:    1
 22769 ;; Hardware stack levels required when called:    3
 22770 ;; This function calls:
 22771 ;;		___wmul
 22772 ;; This function is called by:
 22773 ;;		_main
 22774 ;; This function uses a non-reentrant model
 22775 ;;
 22776                           psect	text55,class=CODE,space=0,reloc=2,group=0
 22777                           	file	"fifo.c"
 22778                           	line	460
 22779                           global __ptext55
 22780                           __ptext55:
 22781  003D7C                     psect	text55
 22782                           	file	"fifo.c"
 22783                           	line	460
 22784                           	global	__size_of_dignum_conc
 22785                           	__size_of_dignum_conc	equ	__end_of_dignum_conc-_dignum_conc
 22786  0000                     	
 22787                           _dignum_conc:
 22788  003D7C                     ;incstack = 0
 22789                           	opt	stack 27
 22790                           ;dignum_conc@dig stored from wreg
 22791                           	movwf	((c:dignum_conc@dig)),c
 22792  003D7C  6E33               	line	462
 22793                           	
 22794                           l6025:
 22795  003D7E                     ;fifo.c: 460: void dignum_conc(char dig, unsigned int * ptrNum );fifo.c: 461: {;fifo.c: 
                                 462:     *ptrNum = (*ptrNum * 10) + (dig - '0');
 22796                           	movlw	low(0FFD0h)
 22797  003D7E  0ED0               	movwf	(??_dignum_conc+0+0)&0ffh,c
 22798  003D80  6E2F               	movlw	high(0FFD0h)
 22799  003D82  0EFF               	movwf	1+(??_dignum_conc+0+0)&0ffh,c
 22800  003D84  6E30               	movff	(c:dignum_conc@ptrNum),fsr2l
 22801  003D86  C02D  FFD9         	movff	(c:dignum_conc@ptrNum+1),fsr2h
 22802  003D8A  C02E  FFDA         	movff	postinc2,(c:___wmul@multiplier)
 22803  003D8E  CFDE F027          	movff	postdec2,(c:___wmul@multiplier+1)
 22804  003D92  CFDD F028          	movlw	high(0Ah)
 22805  003D96  0E00               	movwf	((c:___wmul@multiplicand+1)),c
 22806  003D98  6E2A               	movlw	low(0Ah)
 22807  003D9A  0E0A               	movwf	((c:___wmul@multiplicand)),c
 22808  003D9C  6E29               	call	___wmul	;wreg free
 22809  003D9E  EC36  F020         	movf	((c:dignum_conc@dig)),c,w
 22810  003DA2  5033               	movwf	(??_dignum_conc+2+0)&0ffh,c
 22811  003DA4  6E31               	clrf	(??_dignum_conc+2+0+1)&0ffh,c
 22812  003DA6  6A32               
 22813                           	movf	(0+?___wmul),c,w
 22814  003DA8  5027               	addwf	(??_dignum_conc+2+0),c
 22815  003DAA  2631               	movf	(1+?___wmul),c,w
 22816  003DAC  5028               	addwfc	(??_dignum_conc+2+1),c
 22817  003DAE  2232               	movf	(??_dignum_conc+0+0),c,w
 22818  003DB0  502F               	addwf	(??_dignum_conc+2+0),c
 22819  003DB2  2631               	movf	(??_dignum_conc+0+1),c,w
 22820  003DB4  5030               	addwfc	(??_dignum_conc+2+1),c
 22821  003DB6  2232               	movff	(c:dignum_conc@ptrNum),fsr2l
 22822  003DB8  C02D  FFD9         	movff	(c:dignum_conc@ptrNum+1),fsr2h
 22823  003DBC  C02E  FFDA         	movff	??_dignum_conc+2+0,postinc2
 22824  003DC0  C031  FFDE         	movff	??_dignum_conc+2+1,postdec2
 22825  003DC4  C032  FFDD         
 22826                           	line	463
 22827                           	
 22828                           l420:
 22829  003DC8                     	return	;funcret
 22830  003DC8  0012               	opt stack 0
 22831                           GLOBAL	__end_of_dignum_conc
 22832                           	__end_of_dignum_conc:
 22833  003DCA                     	signat	_dignum_conc,8313
 22834                           	global	___wmul
 22835                           
 22836 ;; *************** function ___wmul *****************
 22837 ;; Defined at:
 22838 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul16.c"
 22839 ;; Parameters:    Size  Location     Type
 22840 ;;  multiplier      2    0[COMRAM] unsigned int 
 22841 ;;  multiplicand    2    2[COMRAM] unsigned int 
 22842 ;; Auto vars:     Size  Location     Type
 22843 ;;  product         2    4[COMRAM] unsigned int 
 22844 ;; Return value:  Size  Location     Type
 22845 ;;                  2    0[COMRAM] unsigned int 
 22846 ;; Registers used:
 22847 ;;		wreg, status,2, status,0, prodl, prodh
 22848 ;; Tracked objects:
 22849 ;;		On entry : 0/0
 22850 ;;		On exit  : 0/0
 22851 ;;		Unchanged: 0/0
 22852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22853 ;;      Params:         4       0       0       0       0       0       0       0       0
 22854 ;;      Locals:         2       0       0       0       0       0       0       0       0
 22855 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22856 ;;      Totals:         6       0       0       0       0       0       0       0       0
 22857 ;;Total ram usage:        6 bytes
 22858 ;; Hardware stack levels used:    1
 22859 ;; Hardware stack levels required when called:    2
 22860 ;; This function calls:
 22861 ;;		Nothing
 22862 ;; This function is called by:
 22863 ;;		_dignum_conc
 22864 ;;		_main
 22865 ;; This function uses a non-reentrant model
 22866 ;;
 22867                           psect	text56,class=CODE,space=0,reloc=2,group=1
 22868                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul16.c"
 22869                           	line	15
 22870                           global __ptext56
 22871                           __ptext56:
 22872  00406C                     psect	text56
 22873                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul16.c"
 22874                           	line	15
 22875                           	global	__size_of___wmul
 22876                           	__size_of___wmul	equ	__end_of___wmul-___wmul
 22877  0000                     	
 22878                           ___wmul:
 22879  00406C                     ;incstack = 0
 22880                           	opt	stack 27
 22881                           	line	37
 22882                           	
 22883                           l5507:
 22884  00406C                     	movf	((c:___wmul@multiplier)),c,w
 22885  00406C  5027               	mulwf	((c:___wmul@multiplicand)),c
 22886  00406E  0229               	movff	prodl,(c:___wmul@product)
 22887  004070  CFF3 F02B          	movff	prodh,(c:___wmul@product+1)
 22888  004074  CFF4 F02C          	line	38
 22889                           	movf	((c:___wmul@multiplier)),c,w
 22890  004078  5027               	mulwf	(0+((c:___wmul@multiplicand)+01h)),c
 22891  00407A  022A               	movf	(prodl),c,w
 22892  00407C  50F3               	addwf	((c:___wmul@product+1)),c
 22893  00407E  262C               
 22894                           	line	39
 22895                           	movf	(0+((c:___wmul@multiplier)+01h)),c,w
 22896  004080  5028               	mulwf	((c:___wmul@multiplicand)),c
 22897  004082  0229               	movf	(prodl),c,w
 22898  004084  50F3               	addwf	((c:___wmul@product+1)),c
 22899  004086  262C               
 22900                           	line	52
 22901                           	
 22902                           l5509:
 22903  004088                     	movff	(c:___wmul@product),(c:?___wmul)
 22904  004088  C02B  F027         	movff	(c:___wmul@product+1),(c:?___wmul+1)
 22905  00408C  C02C  F028         	goto	l1250
 22906  004090  EF4A  F020         	
 22907                           l5511:
 22908  004094                     	line	53
 22909                           	
 22910                           l1250:
 22911  004094                     	return	;funcret
 22912  004094  0012               	opt stack 0
 22913                           GLOBAL	__end_of___wmul
 22914                           	__end_of___wmul:
 22915  004096                     	signat	___wmul,8314
 22916                           	global	_dignum_apagar
 22917                           
 22918 ;; *************** function _dignum_apagar *****************
 22919 ;; Defined at:
 22920 ;;		line 465 in file "fifo.c"
 22921 ;; Parameters:    Size  Location     Type
 22922 ;;  ptrNum          2    7[COMRAM] PTR unsigned int 
 22923 ;;		 -> main@ciclos(2), main@por(2), main@num(2), 
 22924 ;; Auto vars:     Size  Location     Type
 22925 ;;		None
 22926 ;; Return value:  Size  Location     Type
 22927 ;;                  1    wreg      void 
 22928 ;; Registers used:
 22929 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22930 ;; Tracked objects:
 22931 ;;		On entry : 0/0
 22932 ;;		On exit  : 0/0
 22933 ;;		Unchanged: 0/0
 22934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22935 ;;      Params:         2       0       0       0       0       0       0       0       0
 22936 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22937 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22938 ;;      Totals:         2       0       0       0       0       0       0       0       0
 22939 ;;Total ram usage:        2 bytes
 22940 ;; Hardware stack levels used:    1
 22941 ;; Hardware stack levels required when called:    3
 22942 ;; This function calls:
 22943 ;;		___lwdiv
 22944 ;; This function is called by:
 22945 ;;		_main
 22946 ;; This function uses a non-reentrant model
 22947 ;;
 22948                           psect	text57,class=CODE,space=0,reloc=2,group=0
 22949                           	file	"fifo.c"
 22950                           	line	465
 22951                           global __ptext57
 22952                           __ptext57:
 22953  00403E                     psect	text57
 22954                           	file	"fifo.c"
 22955                           	line	465
 22956                           	global	__size_of_dignum_apagar
 22957                           	__size_of_dignum_apagar	equ	__end_of_dignum_apagar-_dignum_apagar
 22958  0000                     	
 22959                           _dignum_apagar:
 22960  00403E                     ;incstack = 0
 22961                           	opt	stack 27
 22962                           	line	467
 22963                           	
 22964                           l6027:
 22965  00403E                     ;fifo.c: 465: void dignum_apagar(unsigned int * ptrNum );fifo.c: 466: {;fifo.c: 467:    
                                  *ptrNum /= 10;
 22966                           	movff	(c:dignum_apagar@ptrNum),fsr2l
 22967  00403E  C02E  FFD9         	movff	(c:dignum_apagar@ptrNum+1),fsr2h
 22968  004042  C02F  FFDA         	movff	postinc2,(c:___lwdiv@dividend)
 22969  004046  CFDE F027          	movff	postdec2,(c:___lwdiv@dividend+1)
 22970  00404A  CFDD F028          	movlw	high(0Ah)
 22971  00404E  0E00               	movwf	((c:___lwdiv@divisor+1)),c
 22972  004050  6E2A               	movlw	low(0Ah)
 22973  004052  0E0A               	movwf	((c:___lwdiv@divisor)),c
 22974  004054  6E29               	call	___lwdiv	;wreg free
 22975  004056  EC6F  F01B         	movff	(c:dignum_apagar@ptrNum),fsr2l
 22976  00405A  C02E  FFD9         	movff	(c:dignum_apagar@ptrNum+1),fsr2h
 22977  00405E  C02F  FFDA         	movff	0+?___lwdiv,postinc2
 22978  004062  C027  FFDE         	movff	1+?___lwdiv,postdec2
 22979  004066  C028  FFDD         
 22980                           	line	468
 22981                           	
 22982                           l423:
 22983  00406A                     	return	;funcret
 22984  00406A  0012               	opt stack 0
 22985                           GLOBAL	__end_of_dignum_apagar
 22986                           	__end_of_dignum_apagar:
 22987  00406C                     	signat	_dignum_apagar,4217
 22988                           	global	___lwdiv
 22989                           
 22990 ;; *************** function ___lwdiv *****************
 22991 ;; Defined at:
 22992 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\lwdiv.c"
 22993 ;; Parameters:    Size  Location     Type
 22994 ;;  dividend        2    0[COMRAM] unsigned int 
 22995 ;;  divisor         2    2[COMRAM] unsigned int 
 22996 ;; Auto vars:     Size  Location     Type
 22997 ;;  quotient        2    4[COMRAM] unsigned int 
 22998 ;;  counter         1    6[COMRAM] unsigned char 
 22999 ;; Return value:  Size  Location     Type
 23000 ;;                  2    0[COMRAM] unsigned int 
 23001 ;; Registers used:
 23002 ;;		wreg, status,2, status,0
 23003 ;; Tracked objects:
 23004 ;;		On entry : 0/0
 23005 ;;		On exit  : 0/0
 23006 ;;		Unchanged: 0/0
 23007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23008 ;;      Params:         4       0       0       0       0       0       0       0       0
 23009 ;;      Locals:         3       0       0       0       0       0       0       0       0
 23010 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23011 ;;      Totals:         7       0       0       0       0       0       0       0       0
 23012 ;;Total ram usage:        7 bytes
 23013 ;; Hardware stack levels used:    1
 23014 ;; Hardware stack levels required when called:    2
 23015 ;; This function calls:
 23016 ;;		Nothing
 23017 ;; This function is called by:
 23018 ;;		_dignum_apagar
 23019 ;; This function uses a non-reentrant model
 23020 ;;
 23021                           psect	text58,class=CODE,space=0,reloc=2,group=1
 23022                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\lwdiv.c"
 23023                           	line	7
 23024                           global __ptext58
 23025                           __ptext58:
 23026  0036DE                     psect	text58
 23027                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\lwdiv.c"
 23028                           	line	7
 23029                           	global	__size_of___lwdiv
 23030                           	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
 23031  0000                     	
 23032                           ___lwdiv:
 23033  0036DE                     ;incstack = 0
 23034                           	opt	stack 27
 23035                           	line	13
 23036                           	
 23037                           l5535:
 23038  0036DE                     	movlw	high(0)
 23039  0036DE  0E00               	movwf	((c:___lwdiv@quotient+1)),c
 23040  0036E0  6E2C               	movlw	low(0)
 23041  0036E2  0E00               	movwf	((c:___lwdiv@quotient)),c
 23042  0036E4  6E2B               	line	14
 23043                           	
 23044                           l5537:
 23045  0036E6                     	movf	((c:___lwdiv@divisor)),c,w
 23046  0036E6  5029               iorwf	((c:___lwdiv@divisor+1)),c,w
 23047  0036E8  102A               	btfsc	status,2
 23048  0036EA  B4D8               	goto	u3981
 23049  0036EC  EF7A  F01B         	goto	u3980
 23050  0036F0  EF7C  F01B         
 23051                           u3981:
 23052  0036F4                     	goto	l1741
 23053  0036F4  EFAE  F01B         u3980:
 23054  0036F8                     	line	15
 23055                           	
 23056                           l5539:
 23057  0036F8                     	movlw	low(01h)
 23058  0036F8  0E01               	movwf	((c:___lwdiv@counter)),c
 23059  0036FA  6E2D               	line	16
 23060                           	goto	l5543
 23061  0036FC  EF86  F01B         	
 23062                           l1743:
 23063  003700                     	line	17
 23064                           	
 23065                           l5541:
 23066  003700                     	bcf	status,0
 23067  003700  90D8               	rlcf	((c:___lwdiv@divisor)),c
 23068  003702  3629               	rlcf	((c:___lwdiv@divisor+1)),c
 23069  003704  362A               	line	18
 23070                           	incf	((c:___lwdiv@counter)),c
 23071  003706  2A2D               	goto	l5543
 23072  003708  EF86  F01B         	line	19
 23073                           	
 23074                           l1742:
 23075  00370C                     	line	16
 23076                           	
 23077                           l5543:
 23078  00370C                     	
 23079                           	btfss	((c:___lwdiv@divisor+1)),c,(15)&7
 23080  00370C  AE2A               	goto	u3991
 23081  00370E  EF8B  F01B         	goto	u3990
 23082  003712  EF8D  F01B         u3991:
 23083  003716                     	goto	l5541
 23084  003716  EF80  F01B         u3990:
 23085  00371A                     	goto	l5545
 23086  00371A  EF91  F01B         	
 23087                           l1744:
 23088  00371E                     	goto	l5545
 23089  00371E  EF91  F01B         	line	20
 23090                           	
 23091                           l1745:
 23092  003722                     	line	21
 23093                           	
 23094                           l5545:
 23095  003722                     	bcf	status,0
 23096  003722  90D8               	rlcf	((c:___lwdiv@quotient)),c
 23097  003724  362B               	rlcf	((c:___lwdiv@quotient+1)),c
 23098  003726  362C               	line	22
 23099                           	
 23100                           l5547:
 23101  003728                     		movf	((c:___lwdiv@divisor)),c,w
 23102  003728  5029               	subwf	((c:___lwdiv@dividend)),c,w
 23103  00372A  5C27               	movf	((c:___lwdiv@divisor+1)),c,w
 23104  00372C  502A               	subwfb	((c:___lwdiv@dividend+1)),c,w
 23105  00372E  5828               	btfss	status,0
 23106  003730  A0D8               	goto	u4001
 23107  003732  EF9D  F01B         	goto	u4000
 23108  003736  EF9F  F01B         
 23109                           u4001:
 23110  00373A                     	goto	l5553
 23111  00373A  EFA6  F01B         u4000:
 23112  00373E                     	line	23
 23113                           	
 23114                           l5549:
 23115  00373E                     	movf	((c:___lwdiv@divisor)),c,w
 23116  00373E  5029               	subwf	((c:___lwdiv@dividend)),c
 23117  003740  5E27               	movf	((c:___lwdiv@divisor+1)),c,w
 23118  003742  502A               	subwfb	((c:___lwdiv@dividend+1)),c
 23119  003744  5A28               
 23120                           	line	24
 23121                           	
 23122                           l5551:
 23123  003746                     	bsf	(0+(0/8)+(c:___lwdiv@quotient)),c,(0)&7
 23124  003746  802B               	goto	l5553
 23125  003748  EFA6  F01B         	line	25
 23126                           	
 23127                           l1746:
 23128  00374C                     	line	26
 23129                           	
 23130                           l5553:
 23131  00374C                     	bcf	status,0
 23132  00374C  90D8               	rrcf	((c:___lwdiv@divisor+1)),c
 23133  00374E  322A               	rrcf	((c:___lwdiv@divisor)),c
 23134  003750  3229               	line	27
 23135                           	
 23136                           l5555:
 23137  003752                     	decfsz	((c:___lwdiv@counter)),c
 23138  003752  2E2D               	
 23139                           	goto	l5545
 23140  003754  EF91  F01B         	goto	l1741
 23141  003758  EFAE  F01B         	
 23142                           l1747:
 23143  00375C                     	line	28
 23144                           	
 23145                           l1741:
 23146  00375C                     	line	29
 23147                           	movff	(c:___lwdiv@quotient),(c:?___lwdiv)
 23148  00375C  C02B  F027         	movff	(c:___lwdiv@quotient+1),(c:?___lwdiv+1)
 23149  003760  C02C  F028         	line	30
 23150                           	
 23151                           l1748:
 23152  003764                     	return	;funcret
 23153  003764  0012               	opt stack 0
 23154                           GLOBAL	__end_of___lwdiv
 23155                           	__end_of___lwdiv:
 23156  003766                     	signat	___lwdiv,8314
 23157                           	global	_deletar_receita
 23158                           
 23159 ;; *************** function _deletar_receita *****************
 23160 ;; Defined at:
 23161 ;;		line 78 in file "eeprom.c"
 23162 ;; Parameters:    Size  Location     Type
 23163 ;;  receita         1    wreg     unsigned char 
 23164 ;; Auto vars:     Size  Location     Type
 23165 ;;  receita         1    6[COMRAM] unsigned char 
 23166 ;;  i               1    7[COMRAM] unsigned char 
 23167 ;;  aux             2    4[COMRAM] int 
 23168 ;; Return value:  Size  Location     Type
 23169 ;;                  1    wreg      void 
 23170 ;; Registers used:
 23171 ;;		wreg, status,2, status,0, cstack
 23172 ;; Tracked objects:
 23173 ;;		On entry : 0/0
 23174 ;;		On exit  : 0/0
 23175 ;;		Unchanged: 0/0
 23176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23177 ;;      Params:         0       0       0       0       0       0       0       0       0
 23178 ;;      Locals:         4       0       0       0       0       0       0       0       0
 23179 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23180 ;;      Totals:         4       0       0       0       0       0       0       0       0
 23181 ;;Total ram usage:        4 bytes
 23182 ;; Hardware stack levels used:    1
 23183 ;; Hardware stack levels required when called:    3
 23184 ;; This function calls:
 23185 ;;		_EEPROM_write
 23186 ;;		_end_receita
 23187 ;; This function is called by:
 23188 ;;		_main
 23189 ;; This function uses a non-reentrant model
 23190 ;;
 23191                           psect	text59,class=CODE,space=0,reloc=2,group=0
 23192                           	file	"eeprom.c"
 23193                           	line	78
 23194                           global __ptext59
 23195                           __ptext59:
 23196  003C8A                     psect	text59
 23197                           	file	"eeprom.c"
 23198                           	line	78
 23199                           	global	__size_of_deletar_receita
 23200                           	__size_of_deletar_receita	equ	__end_of_deletar_receita-_deletar_receita
 23201  0000                     	
 23202                           _deletar_receita:
 23203  003C8A                     ;incstack = 0
 23204                           	opt	stack 27
 23205                           ;deletar_receita@receita stored from wreg
 23206                           	movwf	((c:deletar_receita@receita)),c
 23207  003C8A  6E2D               	line	81
 23208                           	
 23209                           l5719:
 23210  003C8C                     ;eeprom.c: 78: void deletar_receita (char receita);eeprom.c: 79: {;eeprom.c: 80:    int 
                                 aux;;eeprom.c: 81:    aux = end_receita(receita);
 23211                           	movff	(c:deletar_receita@receita),(c:end_receita@x)
 23212  003C8C  C02D  F027         	clrf	((c:end_receita@x+1)),c
 23213  003C90  6A28               	call	_end_receita	;wreg free
 23214  003C92  EC5F  F020         	movff	0+?_end_receita,(c:deletar_receita@aux)
 23215  003C96  C027  F02B         	movff	1+?_end_receita,(c:deletar_receita@aux+1)
 23216  003C9A  C028  F02C         	line	82
 23217                           	
 23218                           l5721:
 23219  003C9E                     ;eeprom.c: 82:    for( char i=0 ; i<16; i++)
 23220                           	movlw	low(0)
 23221  003C9E  0E00               	movwf	((c:deletar_receita@i)),c
 23222  003CA0  6E2E               	
 23223                           l5723:
 23224  003CA2                     		movlw	010h-1
 23225  003CA2  0E0F               	cpfsgt	((c:deletar_receita@i)),c
 23226  003CA4  642E               	goto	u4081
 23227  003CA6  EF57  F01E         	goto	u4080
 23228  003CAA  EF59  F01E         
 23229                           u4081:
 23230  003CAE                     	goto	l5727
 23231  003CAE  EF5D  F01E         u4080:
 23232  003CB2                     	goto	l182
 23233  003CB2  EF6E  F01E         	
 23234                           l5725:
 23235  003CB6                     	goto	l182
 23236  003CB6  EF6E  F01E         	
 23237                           l180:
 23238  003CBA                     	line	83
 23239                           	
 23240                           l5727:
 23241  003CBA                     ;eeprom.c: 83:         EEPROM_write((aux+i),0);
 23242                           	movlw	low(0)
 23243  003CBA  0E00               	movwf	((c:EEPROM_write@data)),c
 23244  003CBC  6E27               	movf	((c:deletar_receita@i)),c,w
 23245  003CBE  502E               	addwf	((c:deletar_receita@aux)),c,w
 23246  003CC0  242B               	
 23247                           	call	_EEPROM_write
 23248  003CC2  ECA3  F01F         	
 23249                           l5729:
 23250  003CC6                     	incf	((c:deletar_receita@i)),c
 23251  003CC6  2A2E               	
 23252                           l5731:
 23253  003CC8                     		movlw	010h-1
 23254  003CC8  0E0F               	cpfsgt	((c:deletar_receita@i)),c
 23255  003CCA  642E               	goto	u4091
 23256  003CCC  EF6A  F01E         	goto	u4090
 23257  003CD0  EF6C  F01E         
 23258                           u4091:
 23259  003CD4                     	goto	l5727
 23260  003CD4  EF5D  F01E         u4090:
 23261  003CD8                     	goto	l182
 23262  003CD8  EF6E  F01E         	
 23263                           l181:
 23264  003CDC                     	line	84
 23265                           	
 23266                           l182:
 23267  003CDC                     	return	;funcret
 23268  003CDC  0012               	opt stack 0
 23269                           GLOBAL	__end_of_deletar_receita
 23270                           	__end_of_deletar_receita:
 23271  003CDE                     	signat	_deletar_receita,4217
 23272                           	global	_EEPROM_write
 23273                           
 23274 ;; *************** function _EEPROM_write *****************
 23275 ;; Defined at:
 23276 ;;		line 24 in file "eeprom.c"
 23277 ;; Parameters:    Size  Location     Type
 23278 ;;  addr            1    wreg     unsigned char 
 23279 ;;  data            1    0[COMRAM] unsigned char 
 23280 ;; Auto vars:     Size  Location     Type
 23281 ;;  addr            1    1[COMRAM] unsigned char 
 23282 ;; Return value:  Size  Location     Type
 23283 ;;                  1    wreg      void 
 23284 ;; Registers used:
 23285 ;;		wreg, status,2
 23286 ;; Tracked objects:
 23287 ;;		On entry : 0/0
 23288 ;;		On exit  : 0/0
 23289 ;;		Unchanged: 0/0
 23290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23291 ;;      Params:         1       0       0       0       0       0       0       0       0
 23292 ;;      Locals:         1       0       0       0       0       0       0       0       0
 23293 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23294 ;;      Totals:         2       0       0       0       0       0       0       0       0
 23295 ;;Total ram usage:        2 bytes
 23296 ;; Hardware stack levels used:    1
 23297 ;; Hardware stack levels required when called:    2
 23298 ;; This function calls:
 23299 ;;		Nothing
 23300 ;; This function is called by:
 23301 ;;		_salvar_receita
 23302 ;;		_salvar_dado
 23303 ;;		_deletar_receita
 23304 ;;		_formatar_receitas
 23305 ;; This function uses a non-reentrant model
 23306 ;;
 23307                           psect	text60,class=CODE,space=0,reloc=2,group=0
 23308                           	line	24
 23309                           global __ptext60
 23310                           __ptext60:
 23311  003F46                     psect	text60
 23312                           	file	"eeprom.c"
 23313                           	line	24
 23314                           	global	__size_of_EEPROM_write
 23315                           	__size_of_EEPROM_write	equ	__end_of_EEPROM_write-_EEPROM_write
 23316  0000                     	
 23317                           _EEPROM_write:
 23318  003F46                     ;incstack = 0
 23319                           	opt	stack 27
 23320                           ;EEPROM_write@addr stored from wreg
 23321                           	movwf	((c:EEPROM_write@addr)),c
 23322  003F46  6E28               	line	26
 23323                           	
 23324                           l5277:
 23325  003F48                     ;eeprom.c: 24: void EEPROM_write( unsigned char addr, unsigned char data );eeprom.c: 25:
                                  {;eeprom.c: 26:     INTCONbits.GIE = 0;
 23326                           	bcf	((c:4082)),c,7	;volatile
 23327  003F48  9EF2               	line	27
 23328                           	
 23329                           l5279:
 23330  003F4A                     ;eeprom.c: 27:     EEADR = addr;
 23331                           	movff	(c:EEPROM_write@addr),(c:4009)	;volatile
 23332  003F4A  C028  FFA9         	line	28
 23333                           	
 23334                           l5281:
 23335  003F4E                     ;eeprom.c: 28:     EEDATA = data;
 23336                           	movff	(c:EEPROM_write@data),(c:4008)	;volatile
 23337  003F4E  C027  FFA8         	line	29
 23338                           	
 23339                           l5283:
 23340  003F52                     ;eeprom.c: 29:     EECON1bits.EEPGD = 0;
 23341                           	bcf	((c:4006)),c,7	;volsfr
 23342  003F52  9EA6               	line	30
 23343                           	
 23344                           l5285:
 23345  003F54                     ;eeprom.c: 30:     EECON1bits.CFGS = 0;
 23346                           	bcf	((c:4006)),c,6	;volsfr
 23347  003F54  9CA6               	line	31
 23348                           	
 23349                           l5287:
 23350  003F56                     ;eeprom.c: 31:     EECON1bits.WREN = 1;
 23351                           	bsf	((c:4006)),c,2	;volsfr
 23352  003F56  84A6               	line	32
 23353                           	
 23354                           l5289:
 23355  003F58                     ;eeprom.c: 32:     EECON2 = 0x55;
 23356                           	movlw	low(055h)
 23357  003F58  0E55               	movwf	((c:4007)),c	;volsfr
 23358  003F5A  6EA7               	line	33
 23359                           	
 23360                           l5291:
 23361  003F5C                     ;eeprom.c: 33:     EECON2 = 0xAA;
 23362                           	movlw	low(0AAh)
 23363  003F5C  0EAA               	movwf	((c:4007)),c	;volsfr
 23364  003F5E  6EA7               	line	34
 23365                           	
 23366                           l5293:
 23367  003F60                     ;eeprom.c: 34:     EECON1bits.WR = 1;
 23368                           	bsf	((c:4006)),c,1	;volsfr
 23369  003F60  82A6               	line	36
 23370                           ;eeprom.c: 36:     while( EECON1bits.WR );
 23371                           	goto	l155
 23372  003F62  EFB3  F01F         	
 23373                           l156:
 23374  003F66                     	
 23375                           l155:
 23376  003F66                     	btfsc	((c:4006)),c,1	;volsfr
 23377  003F66  B2A6               	goto	u3581
 23378  003F68  EFB8  F01F         	goto	u3580
 23379  003F6C  EFBA  F01F         u3581:
 23380  003F70                     	goto	l155
 23381  003F70  EFB3  F01F         u3580:
 23382  003F74                     	
 23383                           l157:
 23384  003F74                     	line	38
 23385                           ;eeprom.c: 38:     EECON1bits.WREN = 0;
 23386                           	bcf	((c:4006)),c,2	;volsfr
 23387  003F74  94A6               	line	39
 23388                           ;eeprom.c: 39:     INTCONbits.GIE = 1;
 23389                           	bsf	((c:4082)),c,7	;volatile
 23390  003F76  8EF2               	line	40
 23391                           	
 23392                           l158:
 23393  003F78                     	return	;funcret
 23394  003F78  0012               	opt stack 0
 23395                           GLOBAL	__end_of_EEPROM_write
 23396                           	__end_of_EEPROM_write:
 23397  003F7A                     	signat	_EEPROM_write,8313
 23398                           	global	_buscar_receita
 23399                           
 23400 ;; *************** function _buscar_receita *****************
 23401 ;; Defined at:
 23402 ;;		line 56 in file "eeprom.c"
 23403 ;; Parameters:    Size  Location     Type
 23404 ;;  adrs            1    wreg     unsigned char 
 23405 ;;  data            2    6[COMRAM] PTR unsigned char 
 23406 ;;		 -> main@vetor_aux(16), 
 23407 ;; Auto vars:     Size  Location     Type
 23408 ;;  adrs            1   10[COMRAM] unsigned char 
 23409 ;;  i               1   11[COMRAM] unsigned char 
 23410 ;;  aux             2    8[COMRAM] int 
 23411 ;; Return value:  Size  Location     Type
 23412 ;;                  1    wreg      void 
 23413 ;; Registers used:
 23414 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23415 ;; Tracked objects:
 23416 ;;		On entry : 0/0
 23417 ;;		On exit  : 0/0
 23418 ;;		Unchanged: 0/0
 23419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23420 ;;      Params:         2       0       0       0       0       0       0       0       0
 23421 ;;      Locals:         4       0       0       0       0       0       0       0       0
 23422 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23423 ;;      Totals:         6       0       0       0       0       0       0       0       0
 23424 ;;Total ram usage:        6 bytes
 23425 ;; Hardware stack levels used:    1
 23426 ;; Hardware stack levels required when called:    3
 23427 ;; This function calls:
 23428 ;;		_EEPROM_read
 23429 ;;		_end_receita
 23430 ;; This function is called by:
 23431 ;;		_main
 23432 ;; This function uses a non-reentrant model
 23433 ;;
 23434                           psect	text61,class=CODE,space=0,reloc=2,group=0
 23435                           	line	56
 23436                           global __ptext61
 23437                           __ptext61:
 23438  003B7E                     psect	text61
 23439                           	file	"eeprom.c"
 23440                           	line	56
 23441                           	global	__size_of_buscar_receita
 23442                           	__size_of_buscar_receita	equ	__end_of_buscar_receita-_buscar_receita
 23443  0000                     	
 23444                           _buscar_receita:
 23445  003B7E                     ;incstack = 0
 23446                           	opt	stack 27
 23447                           ;buscar_receita@adrs stored from wreg
 23448                           	movwf	((c:buscar_receita@adrs)),c
 23449  003B7E  6E31               	line	59
 23450                           	
 23451                           l5699:
 23452  003B80                     ;eeprom.c: 56: void buscar_receita (char adrs, unsigned char * data );eeprom.c: 57: {;ee
                                 prom.c: 58:     int aux;;eeprom.c: 59:     aux = end_receita(adrs);
 23453                           	movff	(c:buscar_receita@adrs),(c:end_receita@x)
 23454  003B80  C031  F027         	clrf	((c:end_receita@x+1)),c
 23455  003B84  6A28               	call	_end_receita	;wreg free
 23456  003B86  EC5F  F020         	movff	0+?_end_receita,(c:buscar_receita@aux)
 23457  003B8A  C027  F02F         	movff	1+?_end_receita,(c:buscar_receita@aux+1)
 23458  003B8E  C028  F030         	line	60
 23459                           	
 23460                           l5701:
 23461  003B92                     ;eeprom.c: 60:     for( char i=0; i<16; i++ )
 23462                           	movlw	low(0)
 23463  003B92  0E00               	movwf	((c:buscar_receita@i)),c
 23464  003B94  6E32               	
 23465                           l5703:
 23466  003B96                     		movlw	010h-1
 23467  003B96  0E0F               	cpfsgt	((c:buscar_receita@i)),c
 23468  003B98  6432               	goto	u4061
 23469  003B9A  EFD1  F01D         	goto	u4060
 23470  003B9E  EFD3  F01D         
 23471                           u4061:
 23472  003BA2                     	goto	l5707
 23473  003BA2  EFD7  F01D         u4060:
 23474  003BA6                     	goto	l171
 23475  003BA6  EFED  F01D         	
 23476                           l5705:
 23477  003BAA                     	goto	l171
 23478  003BAA  EFED  F01D         	
 23479                           l169:
 23480  003BAE                     	line	61
 23481                           	
 23482                           l5707:
 23483  003BAE                     ;eeprom.c: 61:        *(data+i) = EEPROM_read(aux+i);
 23484                           	movf	((c:buscar_receita@i)),c,w
 23485  003BAE  5032               	addwf	((c:buscar_receita@data)),c,w
 23486  003BB0  242D               	movwf	c:fsr2l
 23487  003BB2  6ED9               	movlw	0
 23488  003BB4  0E00               	addwfc	((c:buscar_receita@data+1)),c,w
 23489  003BB6  202E               	movwf	1+c:fsr2l
 23490  003BB8  6EDA               	movf	((c:buscar_receita@i)),c,w
 23491  003BBA  5032               	addwf	((c:buscar_receita@aux)),c,w
 23492  003BBC  242F               	
 23493                           	call	_EEPROM_read
 23494  003BBE  EC51  F021         	movwf	indf2,c
 23495  003BC2  6EDF               
 23496                           	
 23497                           l5709:
 23498  003BC4                     	incf	((c:buscar_receita@i)),c
 23499  003BC4  2A32               	
 23500                           l5711:
 23501  003BC6                     		movlw	010h-1
 23502  003BC6  0E0F               	cpfsgt	((c:buscar_receita@i)),c
 23503  003BC8  6432               	goto	u4071
 23504  003BCA  EFE9  F01D         	goto	u4070
 23505  003BCE  EFEB  F01D         
 23506                           u4071:
 23507  003BD2                     	goto	l5707
 23508  003BD2  EFD7  F01D         u4070:
 23509  003BD6                     	goto	l171
 23510  003BD6  EFED  F01D         	
 23511                           l170:
 23512  003BDA                     	line	62
 23513                           	
 23514                           l171:
 23515  003BDA                     	return	;funcret
 23516  003BDA  0012               	opt stack 0
 23517                           GLOBAL	__end_of_buscar_receita
 23518                           	__end_of_buscar_receita:
 23519  003BDC                     	signat	_buscar_receita,8313
 23520                           	global	_buscar_dado
 23521                           
 23522 ;; *************** function _buscar_dado *****************
 23523 ;; Defined at:
 23524 ;;		line 71 in file "eeprom.c"
 23525 ;; Parameters:    Size  Location     Type
 23526 ;;  adrs            1    wreg     unsigned char 
 23527 ;;  col             1    6[COMRAM] unsigned char 
 23528 ;;  data            2    7[COMRAM] PTR unsigned char 
 23529 ;;		 -> main@init_cond(1), 
 23530 ;; Auto vars:     Size  Location     Type
 23531 ;;  adrs            1   11[COMRAM] unsigned char 
 23532 ;;  aux             2    9[COMRAM] int 
 23533 ;; Return value:  Size  Location     Type
 23534 ;;                  1    wreg      void 
 23535 ;; Registers used:
 23536 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23537 ;; Tracked objects:
 23538 ;;		On entry : 0/0
 23539 ;;		On exit  : 0/0
 23540 ;;		Unchanged: 0/0
 23541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23542 ;;      Params:         3       0       0       0       0       0       0       0       0
 23543 ;;      Locals:         3       0       0       0       0       0       0       0       0
 23544 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23545 ;;      Totals:         6       0       0       0       0       0       0       0       0
 23546 ;;Total ram usage:        6 bytes
 23547 ;; Hardware stack levels used:    1
 23548 ;; Hardware stack levels required when called:    3
 23549 ;; This function calls:
 23550 ;;		_EEPROM_read
 23551 ;;		_end_receita
 23552 ;; This function is called by:
 23553 ;;		_main
 23554 ;; This function uses a non-reentrant model
 23555 ;;
 23556                           psect	text62,class=CODE,space=0,reloc=2,group=0
 23557                           	line	71
 23558                           global __ptext62
 23559                           __ptext62:
 23560  004096                     psect	text62
 23561                           	file	"eeprom.c"
 23562                           	line	71
 23563                           	global	__size_of_buscar_dado
 23564                           	__size_of_buscar_dado	equ	__end_of_buscar_dado-_buscar_dado
 23565  0000                     	
 23566                           _buscar_dado:
 23567  004096                     ;incstack = 0
 23568                           	opt	stack 27
 23569                           ;buscar_dado@adrs stored from wreg
 23570                           	movwf	((c:buscar_dado@adrs)),c
 23571  004096  6E32               	line	74
 23572                           	
 23573                           l5715:
 23574  004098                     ;eeprom.c: 71: void buscar_dado (char adrs, char col, unsigned char *data);eeprom.c: 72:
                                  {;eeprom.c: 73:     int aux;;eeprom.c: 74:     aux = end_receita(adrs);
 23575                           	movff	(c:buscar_dado@adrs),(c:end_receita@x)
 23576  004098  C032  F027         	clrf	((c:end_receita@x+1)),c
 23577  00409C  6A28               	call	_end_receita	;wreg free
 23578  00409E  EC5F  F020         	movff	0+?_end_receita,(c:buscar_dado@aux)
 23579  0040A2  C027  F030         	movff	1+?_end_receita,(c:buscar_dado@aux+1)
 23580  0040A6  C028  F031         	line	75
 23581                           	
 23582                           l5717:
 23583  0040AA                     ;eeprom.c: 75:     *data = EEPROM_read((aux+col));
 23584                           	movf	((c:buscar_dado@col)),c,w
 23585  0040AA  502D               	addwf	((c:buscar_dado@aux)),c,w
 23586  0040AC  2430               	
 23587                           	call	_EEPROM_read
 23588  0040AE  EC51  F021         	movff	(c:buscar_dado@data),fsr2l
 23589  0040B2  C02E  FFD9         	movff	(c:buscar_dado@data+1),fsr2h
 23590  0040B6  C02F  FFDA         	movwf	indf2,c
 23591  0040BA  6EDF               
 23592                           	line	76
 23593                           	
 23594                           l177:
 23595  0040BC                     	return	;funcret
 23596  0040BC  0012               	opt stack 0
 23597                           GLOBAL	__end_of_buscar_dado
 23598                           	__end_of_buscar_dado:
 23599  0040BE                     	signat	_buscar_dado,12409
 23600                           	global	_end_receita
 23601                           
 23602 ;; *************** function _end_receita *****************
 23603 ;; Defined at:
 23604 ;;		line 42 in file "eeprom.c"
 23605 ;; Parameters:    Size  Location     Type
 23606 ;;  x               2    0[COMRAM] int 
 23607 ;; Auto vars:     Size  Location     Type
 23608 ;;		None
 23609 ;; Return value:  Size  Location     Type
 23610 ;;                  2    0[COMRAM] int 
 23611 ;; Registers used:
 23612 ;;		wreg, status,2, status,0
 23613 ;; Tracked objects:
 23614 ;;		On entry : 0/0
 23615 ;;		On exit  : 0/0
 23616 ;;		Unchanged: 0/0
 23617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23618 ;;      Params:         2       0       0       0       0       0       0       0       0
 23619 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23620 ;;      Temps:          2       0       0       0       0       0       0       0       0
 23621 ;;      Totals:         4       0       0       0       0       0       0       0       0
 23622 ;;Total ram usage:        4 bytes
 23623 ;; Hardware stack levels used:    1
 23624 ;; Hardware stack levels required when called:    2
 23625 ;; This function calls:
 23626 ;;		Nothing
 23627 ;; This function is called by:
 23628 ;;		_salvar_receita
 23629 ;;		_buscar_receita
 23630 ;;		_salvar_dado
 23631 ;;		_buscar_dado
 23632 ;;		_deletar_receita
 23633 ;;		_receita_livre
 23634 ;; This function uses a non-reentrant model
 23635 ;;
 23636                           psect	text63,class=CODE,space=0,reloc=2,group=0
 23637                           	line	42
 23638                           global __ptext63
 23639                           __ptext63:
 23640  0040BE                     psect	text63
 23641                           	file	"eeprom.c"
 23642                           	line	42
 23643                           	global	__size_of_end_receita
 23644                           	__size_of_end_receita	equ	__end_of_end_receita-_end_receita
 23645  0000                     	
 23646                           _end_receita:
 23647  0040BE                     ;incstack = 0
 23648                           	opt	stack 27
 23649                           	line	44
 23650                           	
 23651                           l5295:
 23652  0040BE                     ;eeprom.c: 42: int end_receita (int x);eeprom.c: 43: {;eeprom.c: 44:     return(x*16);
 23653                           	movff	(c:end_receita@x),??_end_receita+0+0
 23654  0040BE  C027  F029         	movff	(c:end_receita@x+1),??_end_receita+0+0+1
 23655  0040C2  C028  F02A         	swapf	(??_end_receita+0+0),c
 23656  0040C6  3A29               	swapf	(??_end_receita+0+1),c
 23657  0040C8  3A2A               	movlw	0f0h
 23658  0040CA  0EF0               	andwf	(??_end_receita+0+1),c
 23659  0040CC  162A               	movf	(??_end_receita+0+0),c,w
 23660  0040CE  5029               	andlw	0fh
 23661  0040D0  0B0F               	iorwf	(??_end_receita+0+1),c
 23662  0040D2  122A               	movlw	0f0h
 23663  0040D4  0EF0               	andwf	(??_end_receita+0+0),c
 23664  0040D6  1629               	movff	??_end_receita+0+0,(c:?_end_receita)
 23665  0040D8  C029  F027         	movff	??_end_receita+0+1,(c:?_end_receita+1)
 23666  0040DC  C02A  F028         	goto	l161
 23667  0040E0  EF72  F020         	
 23668                           l5297:
 23669  0040E4                     	line	45
 23670                           	
 23671                           l161:
 23672  0040E4                     	return	;funcret
 23673  0040E4  0012               	opt stack 0
 23674                           GLOBAL	__end_of_end_receita
 23675                           	__end_of_end_receita:
 23676  0040E6                     	signat	_end_receita,4218
 23677                           	global	_EEPROM_read
 23678                           
 23679 ;; *************** function _EEPROM_read *****************
 23680 ;; Defined at:
 23681 ;;		line 14 in file "eeprom.c"
 23682 ;; Parameters:    Size  Location     Type
 23683 ;;  addr            1    wreg     unsigned char 
 23684 ;; Auto vars:     Size  Location     Type
 23685 ;;  addr            1    0[COMRAM] unsigned char 
 23686 ;; Return value:  Size  Location     Type
 23687 ;;                  1    wreg      unsigned char 
 23688 ;; Registers used:
 23689 ;;		wreg, status,2
 23690 ;; Tracked objects:
 23691 ;;		On entry : 0/0
 23692 ;;		On exit  : 0/0
 23693 ;;		Unchanged: 0/0
 23694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23695 ;;      Params:         0       0       0       0       0       0       0       0       0
 23696 ;;      Locals:         1       0       0       0       0       0       0       0       0
 23697 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23698 ;;      Totals:         1       0       0       0       0       0       0       0       0
 23699 ;;Total ram usage:        1 bytes
 23700 ;; Hardware stack levels used:    1
 23701 ;; Hardware stack levels required when called:    2
 23702 ;; This function calls:
 23703 ;;		Nothing
 23704 ;; This function is called by:
 23705 ;;		_buscar_receita
 23706 ;;		_buscar_dado
 23707 ;;		_receita_livre
 23708 ;; This function uses a non-reentrant model
 23709 ;;
 23710                           psect	text64,class=CODE,space=0,reloc=2,group=0
 23711                           	line	14
 23712                           global __ptext64
 23713                           __ptext64:
 23714  0042A2                     psect	text64
 23715                           	file	"eeprom.c"
 23716                           	line	14
 23717                           	global	__size_of_EEPROM_read
 23718                           	__size_of_EEPROM_read	equ	__end_of_EEPROM_read-_EEPROM_read
 23719  0000                     	
 23720                           _EEPROM_read:
 23721  0042A2                     ;incstack = 0
 23722                           	opt	stack 27
 23723                           ;EEPROM_read@addr stored from wreg
 23724                           	movwf	((c:EEPROM_read@addr)),c
 23725  0042A2  6E27               	line	17
 23726                           	
 23727                           l5265:
 23728  0042A4                     ;eeprom.c: 14: char EEPROM_read( unsigned char addr );eeprom.c: 15: {;eeprom.c: 17:     
                                 EEADR = addr;
 23729                           	movff	(c:EEPROM_read@addr),(c:4009)	;volatile
 23730  0042A4  C027  FFA9         	line	18
 23731                           	
 23732                           l5267:
 23733  0042A8                     ;eeprom.c: 18:     EECON1bits.EEPGD = 0;
 23734                           	bcf	((c:4006)),c,7	;volsfr
 23735  0042A8  9EA6               	line	19
 23736                           	
 23737                           l5269:
 23738  0042AA                     ;eeprom.c: 19:     EECON1bits.CFGS = 0;
 23739                           	bcf	((c:4006)),c,6	;volsfr
 23740  0042AA  9CA6               	line	20
 23741                           	
 23742                           l5271:
 23743  0042AC                     ;eeprom.c: 20:     EECON1bits.RD = 1;
 23744                           	bsf	((c:4006)),c,0	;volsfr
 23745  0042AC  80A6               	line	21
 23746                           	
 23747                           l5273:
 23748  0042AE                     ;eeprom.c: 21:     return( EEDATA );
 23749                           	movf	((c:4008)),c,w	;volatile
 23750  0042AE  50A8               	goto	l152
 23751  0042B0  EF5A  F021         	
 23752                           l5275:
 23753  0042B4                     	line	22
 23754                           	
 23755                           l152:
 23756  0042B4                     	return	;funcret
 23757  0042B4  0012               	opt stack 0
 23758                           GLOBAL	__end_of_EEPROM_read
 23759                           	__end_of_EEPROM_read:
 23760  0042B6                     	signat	_EEPROM_read,4217
 23761                           	global	_addIndicePassos
 23762                           
 23763 ;; *************** function _addIndicePassos *****************
 23764 ;; Defined at:
 23765 ;;		line 19 in file "fifo.c"
 23766 ;; Parameters:    Size  Location     Type
 23767 ;;		None
 23768 ;; Auto vars:     Size  Location     Type
 23769 ;;		None
 23770 ;; Return value:  Size  Location     Type
 23771 ;;                  1    wreg      void 
 23772 ;; Registers used:
 23773 ;;		wreg, status,2, status,0
 23774 ;; Tracked objects:
 23775 ;;		On entry : 0/0
 23776 ;;		On exit  : 0/0
 23777 ;;		Unchanged: 0/0
 23778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23779 ;;      Params:         0       0       0       0       0       0       0       0       0
 23780 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23781 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23782 ;;      Totals:         0       0       0       0       0       0       0       0       0
 23783 ;;Total ram usage:        0 bytes
 23784 ;; Hardware stack levels used:    1
 23785 ;; Hardware stack levels required when called:    2
 23786 ;; This function calls:
 23787 ;;		Nothing
 23788 ;; This function is called by:
 23789 ;;		_main
 23790 ;; This function uses a non-reentrant model
 23791 ;;
 23792                           psect	text65,class=CODE,space=0,reloc=2,group=0
 23793                           	file	"fifo.c"
 23794                           	line	19
 23795                           global __ptext65
 23796                           __ptext65:
 23797  004214                     psect	text65
 23798                           	file	"fifo.c"
 23799                           	line	19
 23800                           	global	__size_of_addIndicePassos
 23801                           	__size_of_addIndicePassos	equ	__end_of_addIndicePassos-_addIndicePassos
 23802  0000                     	
 23803                           _addIndicePassos:
 23804  004214                     ;incstack = 0
 23805                           	opt	stack 28
 23806                           	line	21
 23807                           	
 23808                           l5741:
 23809  004214                     ;fifo.c: 21:     if(indice_passos < ind_fila)
 23810                           		movf	((c:_ind_fila)),c,w
 23811  004214  5059               	subwf	((c:_indice_passos)),c,w
 23812  004216  5C57               	btfsc	status,0
 23813  004218  B0D8               	goto	u4101
 23814  00421A  EF11  F021         	goto	u4100
 23815  00421E  EF13  F021         
 23816                           u4101:
 23817  004222                     	goto	l223
 23818  004222  EF16  F021         u4100:
 23819  004226                     	line	22
 23820                           	
 23821                           l5743:
 23822  004226                     ;fifo.c: 22:         indice_passos++;
 23823                           	incf	((c:_indice_passos)),c
 23824  004226  2A57               	goto	l223
 23825  004228  EF16  F021         	
 23826                           l222:
 23827  00422C                     	line	23
 23828                           	
 23829                           l223:
 23830  00422C                     	return	;funcret
 23831  00422C  0012               	opt stack 0
 23832                           GLOBAL	__end_of_addIndicePassos
 23833                           	__end_of_addIndicePassos:
 23834  00422E                     	signat	_addIndicePassos,89
 23835                           	global	_addContCiclos
 23836                           
 23837 ;; *************** function _addContCiclos *****************
 23838 ;; Defined at:
 23839 ;;		line 59 in file "fifo.c"
 23840 ;; Parameters:    Size  Location     Type
 23841 ;;		None
 23842 ;; Auto vars:     Size  Location     Type
 23843 ;;		None
 23844 ;; Return value:  Size  Location     Type
 23845 ;;                  1    wreg      void 
 23846 ;; Registers used:
 23847 ;;		status,2, status,0
 23848 ;; Tracked objects:
 23849 ;;		On entry : 0/0
 23850 ;;		On exit  : 0/0
 23851 ;;		Unchanged: 0/0
 23852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23853 ;;      Params:         0       0       0       0       0       0       0       0       0
 23854 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23855 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23856 ;;      Totals:         0       0       0       0       0       0       0       0       0
 23857 ;;Total ram usage:        0 bytes
 23858 ;; Hardware stack levels used:    1
 23859 ;; Hardware stack levels required when called:    2
 23860 ;; This function calls:
 23861 ;;		Nothing
 23862 ;; This function is called by:
 23863 ;;		_main
 23864 ;; This function uses a non-reentrant model
 23865 ;;
 23866                           psect	text66,class=CODE,space=0,reloc=2,group=0
 23867                           	line	59
 23868                           global __ptext66
 23869                           __ptext66:
 23870  004348                     psect	text66
 23871                           	file	"fifo.c"
 23872                           	line	59
 23873                           	global	__size_of_addContCiclos
 23874                           	__size_of_addContCiclos	equ	__end_of_addContCiclos-_addContCiclos
 23875  0000                     	
 23876                           _addContCiclos:
 23877  004348                     ;incstack = 0
 23878                           	opt	stack 28
 23879                           	line	61
 23880                           	
 23881                           l5761:
 23882  004348                     ;fifo.c: 61:     cont_ciclos++;
 23883                           	infsnz	((c:_cont_ciclos)),c
 23884  004348  4A0D               	incf	((c:_cont_ciclos+1)),c
 23885  00434A  2A0E               	line	62
 23886                           	
 23887                           l245:
 23888  00434C                     	return	;funcret
 23889  00434C  0012               	opt stack 0
 23890                           GLOBAL	__end_of_addContCiclos
 23891                           	__end_of_addContCiclos:
 23892  00434E                     	signat	_addContCiclos,89
 23893                           	global	___lmul
 23894                           
 23895 ;; *************** function ___lmul *****************
 23896 ;; Defined at:
 23897 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul32.c"
 23898 ;; Parameters:    Size  Location     Type
 23899 ;;  multiplier      4    0[COMRAM] unsigned long 
 23900 ;;  multiplicand    4    4[COMRAM] unsigned long 
 23901 ;; Auto vars:     Size  Location     Type
 23902 ;;  product         4    8[COMRAM] unsigned long 
 23903 ;; Return value:  Size  Location     Type
 23904 ;;                  4    0[COMRAM] unsigned long 
 23905 ;; Registers used:
 23906 ;;		wreg, status,2, status,0
 23907 ;; Tracked objects:
 23908 ;;		On entry : 0/0
 23909 ;;		On exit  : 0/0
 23910 ;;		Unchanged: 0/0
 23911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23912 ;;      Params:         8       0       0       0       0       0       0       0       0
 23913 ;;      Locals:         4       0       0       0       0       0       0       0       0
 23914 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23915 ;;      Totals:        12       0       0       0       0       0       0       0       0
 23916 ;;Total ram usage:       12 bytes
 23917 ;; Hardware stack levels used:    1
 23918 ;; Hardware stack levels required when called:    2
 23919 ;; This function calls:
 23920 ;;		Nothing
 23921 ;; This function is called by:
 23922 ;;		_main
 23923 ;; This function uses a non-reentrant model
 23924 ;;
 23925                           psect	text67,class=CODE,space=0,reloc=2,group=1
 23926                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul32.c"
 23927                           	line	15
 23928                           global __ptext67
 23929                           __ptext67:
 23930  0037D8                     psect	text67
 23931                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul32.c"
 23932                           	line	15
 23933                           	global	__size_of___lmul
 23934                           	__size_of___lmul	equ	__end_of___lmul-___lmul
 23935  0000                     	
 23936                           ___lmul:
 23937  0037D8                     ;incstack = 0
 23938                           	opt	stack 28
 23939                           	line	119
 23940                           	
 23941                           l6203:
 23942  0037D8                     	movlw	low(0)
 23943  0037D8  0E00               	movwf	((c:___lmul@product)),c
 23944  0037DA  6E2F               	movlw	high(0)
 23945  0037DC  0E00               	movwf	((c:___lmul@product+1)),c
 23946  0037DE  6E30               	movlw	low highword(0)
 23947  0037E0  0E00               	movwf	((c:___lmul@product+2)),c
 23948  0037E2  6E31               	movlw	high highword(0)
 23949  0037E4  0E00               	movwf	((c:___lmul@product+3)),c
 23950  0037E6  6E32               	goto	l6205
 23951  0037E8  EFF6  F01B         	line	120
 23952                           	
 23953                           l1259:
 23954  0037EC                     	line	121
 23955                           	
 23956                           l6205:
 23957  0037EC                     	
 23958                           	btfss	((c:___lmul@multiplier)),c,(0)&7
 23959  0037EC  A027               	goto	u4651
 23960  0037EE  EFFB  F01B         	goto	u4650
 23961  0037F2  EFFD  F01B         u4651:
 23962  0037F6                     	goto	l6209
 23963  0037F6  EF07  F01C         u4650:
 23964  0037FA                     	line	122
 23965                           	
 23966                           l6207:
 23967  0037FA                     	movf	((c:___lmul@multiplicand)),c,w
 23968  0037FA  502B               	addwf	((c:___lmul@product)),c
 23969  0037FC  262F               	movf	((c:___lmul@multiplicand+1)),c,w
 23970  0037FE  502C               	addwfc	((c:___lmul@product+1)),c
 23971  003800  2230               	movf	((c:___lmul@multiplicand+2)),c,w
 23972  003802  502D               	addwfc	((c:___lmul@product+2)),c
 23973  003804  2231               	movf	((c:___lmul@multiplicand+3)),c,w
 23974  003806  502E               	addwfc	((c:___lmul@product+3)),c
 23975  003808  2232               	goto	l6209
 23976  00380A  EF07  F01C         	
 23977                           l1260:
 23978  00380E                     	line	123
 23979                           	
 23980                           l6209:
 23981  00380E                     	bcf	status,0
 23982  00380E  90D8               	rlcf	((c:___lmul@multiplicand)),c
 23983  003810  362B               	rlcf	((c:___lmul@multiplicand+1)),c
 23984  003812  362C               	rlcf	((c:___lmul@multiplicand+2)),c
 23985  003814  362D               	rlcf	((c:___lmul@multiplicand+3)),c
 23986  003816  362E               	line	124
 23987                           	
 23988                           l6211:
 23989  003818                     	bcf	status,0
 23990  003818  90D8               	rrcf	((c:___lmul@multiplier+3)),c
 23991  00381A  322A               	rrcf	((c:___lmul@multiplier+2)),c
 23992  00381C  3229               	rrcf	((c:___lmul@multiplier+1)),c
 23993  00381E  3228               	rrcf	((c:___lmul@multiplier)),c
 23994  003820  3227               	line	125
 23995                           	movf	((c:___lmul@multiplier)),c,w
 23996  003822  5027               iorwf	((c:___lmul@multiplier+1)),c,w
 23997  003824  1028               iorwf	((c:___lmul@multiplier+2)),c,w
 23998  003826  1029               iorwf	((c:___lmul@multiplier+3)),c,w
 23999  003828  102A               	btfss	status,2
 24000  00382A  A4D8               	goto	u4661
 24001  00382C  EF1A  F01C         	goto	u4660
 24002  003830  EF1C  F01C         
 24003                           u4661:
 24004  003834                     	goto	l6205
 24005  003834  EFF6  F01B         u4660:
 24006  003838                     	
 24007                           l1261:
 24008  003838                     	line	128
 24009                           	movff	(c:___lmul@product),(c:?___lmul)
 24010  003838  C02F  F027         	movff	(c:___lmul@product+1),(c:?___lmul+1)
 24011  00383C  C030  F028         	movff	(c:___lmul@product+2),(c:?___lmul+2)
 24012  003840  C031  F029         	movff	(c:___lmul@product+3),(c:?___lmul+3)
 24013  003844  C032  F02A         	line	129
 24014                           	
 24015                           l1262:
 24016  003848                     	return	;funcret
 24017  003848  0012               	opt stack 0
 24018                           GLOBAL	__end_of___lmul
 24019                           	__end_of___lmul:
 24020  00384A                     	signat	___lmul,8316
 24021                           	global	___aldiv
 24022                           
 24023 ;; *************** function ___aldiv *****************
 24024 ;; Defined at:
 24025 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\aldiv.c"
 24026 ;; Parameters:    Size  Location     Type
 24027 ;;  dividend        4   12[COMRAM] long 
 24028 ;;  divisor         4   16[COMRAM] long 
 24029 ;; Auto vars:     Size  Location     Type
 24030 ;;  quotient        4   22[COMRAM] long 
 24031 ;;  sign            1   21[COMRAM] unsigned char 
 24032 ;;  counter         1   20[COMRAM] unsigned char 
 24033 ;; Return value:  Size  Location     Type
 24034 ;;                  4   12[COMRAM] long 
 24035 ;; Registers used:
 24036 ;;		wreg, status,2, status,0
 24037 ;; Tracked objects:
 24038 ;;		On entry : 0/0
 24039 ;;		On exit  : 0/0
 24040 ;;		Unchanged: 0/0
 24041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24042 ;;      Params:         8       0       0       0       0       0       0       0       0
 24043 ;;      Locals:         6       0       0       0       0       0       0       0       0
 24044 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24045 ;;      Totals:        14       0       0       0       0       0       0       0       0
 24046 ;;Total ram usage:       14 bytes
 24047 ;; Hardware stack levels used:    1
 24048 ;; Hardware stack levels required when called:    2
 24049 ;; This function calls:
 24050 ;;		Nothing
 24051 ;; This function is called by:
 24052 ;;		_main
 24053 ;; This function uses a non-reentrant model
 24054 ;;
 24055                           psect	text68,class=CODE,space=0,reloc=2,group=1
 24056                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\aldiv.c"
 24057                           	line	7
 24058                           global __ptext68
 24059                           __ptext68:
 24060  002C16                     psect	text68
 24061                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\aldiv.c"
 24062                           	line	7
 24063                           	global	__size_of___aldiv
 24064                           	__size_of___aldiv	equ	__end_of___aldiv-___aldiv
 24065  0000                     	
 24066                           ___aldiv:
 24067  002C16                     ;incstack = 0
 24068                           	opt	stack 28
 24069                           	line	13
 24070                           	
 24071                           l6213:
 24072  002C16                     	movlw	low(0)
 24073  002C16  0E00               	movwf	((c:___aldiv@sign)),c
 24074  002C18  6E3C               	line	14
 24075                           	
 24076                           l6215:
 24077  002C1A                     	btfsc	((c:___aldiv@divisor+3)),c,7
 24078  002C1A  BE3A               	goto	u4670
 24079  002C1C  EF14  F016         	goto	u4671
 24080  002C20  EF12  F016         
 24081                           u4671:
 24082  002C24                     	goto	l6221
 24083  002C24  EF20  F016         u4670:
 24084  002C28                     	line	15
 24085                           	
 24086                           l6217:
 24087  002C28                     	comf	((c:___aldiv@divisor+3)),c
 24088  002C28  1E3A               	comf	((c:___aldiv@divisor+2)),c
 24089  002C2A  1E39               	comf	((c:___aldiv@divisor+1)),c
 24090  002C2C  1E38               	negf	((c:___aldiv@divisor)),c
 24091  002C2E  6C37               	movlw	0
 24092  002C30  0E00               	addwfc	((c:___aldiv@divisor+1)),c
 24093  002C32  2238               	addwfc	((c:___aldiv@divisor+2)),c
 24094  002C34  2239               	addwfc	((c:___aldiv@divisor+3)),c
 24095  002C36  223A               	line	16
 24096                           	
 24097                           l6219:
 24098  002C38                     	movlw	low(01h)
 24099  002C38  0E01               	movwf	((c:___aldiv@sign)),c
 24100  002C3A  6E3C               	goto	l6221
 24101  002C3C  EF20  F016         	line	17
 24102                           	
 24103                           l1319:
 24104  002C40                     	line	18
 24105                           	
 24106                           l6221:
 24107  002C40                     	btfsc	((c:___aldiv@dividend+3)),c,7
 24108  002C40  BE36               	goto	u4680
 24109  002C42  EF27  F016         	goto	u4681
 24110  002C46  EF25  F016         
 24111                           u4681:
 24112  002C4A                     	goto	l6227
 24113  002C4A  EF33  F016         u4680:
 24114  002C4E                     	line	19
 24115                           	
 24116                           l6223:
 24117  002C4E                     	comf	((c:___aldiv@dividend+3)),c
 24118  002C4E  1E36               	comf	((c:___aldiv@dividend+2)),c
 24119  002C50  1E35               	comf	((c:___aldiv@dividend+1)),c
 24120  002C52  1E34               	negf	((c:___aldiv@dividend)),c
 24121  002C54  6C33               	movlw	0
 24122  002C56  0E00               	addwfc	((c:___aldiv@dividend+1)),c
 24123  002C58  2234               	addwfc	((c:___aldiv@dividend+2)),c
 24124  002C5A  2235               	addwfc	((c:___aldiv@dividend+3)),c
 24125  002C5C  2236               	line	20
 24126                           	
 24127                           l6225:
 24128  002C5E                     	movlw	(01h)&0ffh
 24129  002C5E  0E01               	xorwf	((c:___aldiv@sign)),c
 24130  002C60  1A3C               	goto	l6227
 24131  002C62  EF33  F016         	line	21
 24132                           	
 24133                           l1320:
 24134  002C66                     	line	22
 24135                           	
 24136                           l6227:
 24137  002C66                     	movlw	low(0)
 24138  002C66  0E00               	movwf	((c:___aldiv@quotient)),c
 24139  002C68  6E3D               	movlw	high(0)
 24140  002C6A  0E00               	movwf	((c:___aldiv@quotient+1)),c
 24141  002C6C  6E3E               	movlw	low highword(0)
 24142  002C6E  0E00               	movwf	((c:___aldiv@quotient+2)),c
 24143  002C70  6E3F               	movlw	high highword(0)
 24144  002C72  0E00               	movwf	((c:___aldiv@quotient+3)),c
 24145  002C74  6E40               	line	23
 24146                           	
 24147                           l6229:
 24148  002C76                     	movf	((c:___aldiv@divisor)),c,w
 24149  002C76  5037               iorwf	((c:___aldiv@divisor+1)),c,w
 24150  002C78  1038               iorwf	((c:___aldiv@divisor+2)),c,w
 24151  002C7A  1039               iorwf	((c:___aldiv@divisor+3)),c,w
 24152  002C7C  103A               	btfsc	status,2
 24153  002C7E  B4D8               	goto	u4691
 24154  002C80  EF44  F016         	goto	u4690
 24155  002C84  EF46  F016         
 24156                           u4691:
 24157  002C88                     	goto	l6249
 24158  002C88  EF88  F016         u4690:
 24159  002C8C                     	line	24
 24160                           	
 24161                           l6231:
 24162  002C8C                     	movlw	low(01h)
 24163  002C8C  0E01               	movwf	((c:___aldiv@counter)),c
 24164  002C8E  6E3B               	line	25
 24165                           	goto	l6235
 24166  002C90  EF52  F016         	
 24167                           l1323:
 24168  002C94                     	line	26
 24169                           	
 24170                           l6233:
 24171  002C94                     	bcf	status,0
 24172  002C94  90D8               	rlcf	((c:___aldiv@divisor)),c
 24173  002C96  3637               	rlcf	((c:___aldiv@divisor+1)),c
 24174  002C98  3638               	rlcf	((c:___aldiv@divisor+2)),c
 24175  002C9A  3639               	rlcf	((c:___aldiv@divisor+3)),c
 24176  002C9C  363A               	line	27
 24177                           	incf	((c:___aldiv@counter)),c
 24178  002C9E  2A3B               	goto	l6235
 24179  002CA0  EF52  F016         	line	28
 24180                           	
 24181                           l1322:
 24182  002CA4                     	line	25
 24183                           	
 24184                           l6235:
 24185  002CA4                     	
 24186                           	btfss	((c:___aldiv@divisor+3)),c,(31)&7
 24187  002CA4  AE3A               	goto	u4701
 24188  002CA6  EF57  F016         	goto	u4700
 24189  002CAA  EF59  F016         u4701:
 24190  002CAE                     	goto	l6233
 24191  002CAE  EF4A  F016         u4700:
 24192  002CB2                     	goto	l6237
 24193  002CB2  EF5D  F016         	
 24194                           l1324:
 24195  002CB6                     	goto	l6237
 24196  002CB6  EF5D  F016         	line	29
 24197                           	
 24198                           l1325:
 24199  002CBA                     	line	30
 24200                           	
 24201                           l6237:
 24202  002CBA                     	bcf	status,0
 24203  002CBA  90D8               	rlcf	((c:___aldiv@quotient)),c
 24204  002CBC  363D               	rlcf	((c:___aldiv@quotient+1)),c
 24205  002CBE  363E               	rlcf	((c:___aldiv@quotient+2)),c
 24206  002CC0  363F               	rlcf	((c:___aldiv@quotient+3)),c
 24207  002CC2  3640               	line	31
 24208                           	
 24209                           l6239:
 24210  002CC4                     		movf	((c:___aldiv@divisor)),c,w
 24211  002CC4  5037               	subwf	((c:___aldiv@dividend)),c,w
 24212  002CC6  5C33               	movf	((c:___aldiv@divisor+1)),c,w
 24213  002CC8  5038               	subwfb	((c:___aldiv@dividend+1)),c,w
 24214  002CCA  5834               	movf	((c:___aldiv@divisor+2)),c,w
 24215  002CCC  5039               	subwfb	((c:___aldiv@dividend+2)),c,w
 24216  002CCE  5835               	movf	((c:___aldiv@divisor+3)),c,w
 24217  002CD0  503A               	subwfb	((c:___aldiv@dividend+3)),c,w
 24218  002CD2  5836               	btfss	status,0
 24219  002CD4  A0D8               	goto	u4711
 24220  002CD6  EF6F  F016         	goto	u4710
 24221  002CDA  EF71  F016         
 24222                           u4711:
 24223  002CDE                     	goto	l6245
 24224  002CDE  EF7C  F016         u4710:
 24225  002CE2                     	line	32
 24226                           	
 24227                           l6241:
 24228  002CE2                     	movf	((c:___aldiv@divisor)),c,w
 24229  002CE2  5037               	subwf	((c:___aldiv@dividend)),c
 24230  002CE4  5E33               	movf	((c:___aldiv@divisor+1)),c,w
 24231  002CE6  5038               	subwfb	((c:___aldiv@dividend+1)),c
 24232  002CE8  5A34               	movf	((c:___aldiv@divisor+2)),c,w
 24233  002CEA  5039               	subwfb	((c:___aldiv@dividend+2)),c
 24234  002CEC  5A35               	movf	((c:___aldiv@divisor+3)),c,w
 24235  002CEE  503A               	subwfb	((c:___aldiv@dividend+3)),c
 24236  002CF0  5A36               	line	33
 24237                           	
 24238                           l6243:
 24239  002CF2                     	bsf	(0+(0/8)+(c:___aldiv@quotient)),c,(0)&7
 24240  002CF2  803D               	goto	l6245
 24241  002CF4  EF7C  F016         	line	34
 24242                           	
 24243                           l1326:
 24244  002CF8                     	line	35
 24245                           	
 24246                           l6245:
 24247  002CF8                     	bcf	status,0
 24248  002CF8  90D8               	rrcf	((c:___aldiv@divisor+3)),c
 24249  002CFA  323A               	rrcf	((c:___aldiv@divisor+2)),c
 24250  002CFC  3239               	rrcf	((c:___aldiv@divisor+1)),c
 24251  002CFE  3238               	rrcf	((c:___aldiv@divisor)),c
 24252  002D00  3237               	line	36
 24253                           	
 24254                           l6247:
 24255  002D02                     	decfsz	((c:___aldiv@counter)),c
 24256  002D02  2E3B               	
 24257                           	goto	l6237
 24258  002D04  EF5D  F016         	goto	l6249
 24259  002D08  EF88  F016         	
 24260                           l1327:
 24261  002D0C                     	goto	l6249
 24262  002D0C  EF88  F016         	line	37
 24263                           	
 24264                           l1321:
 24265  002D10                     	line	38
 24266                           	
 24267                           l6249:
 24268  002D10                     	movf	((c:___aldiv@sign)),c,w
 24269  002D10  503C               	btfsc	status,2
 24270  002D12  B4D8               	goto	u4721
 24271  002D14  EF8E  F016         	goto	u4720
 24272  002D18  EF90  F016         u4721:
 24273  002D1C                     	goto	l6253
 24274  002D1C  EF9A  F016         u4720:
 24275  002D20                     	line	39
 24276                           	
 24277                           l6251:
 24278  002D20                     	comf	((c:___aldiv@quotient+3)),c
 24279  002D20  1E40               	comf	((c:___aldiv@quotient+2)),c
 24280  002D22  1E3F               	comf	((c:___aldiv@quotient+1)),c
 24281  002D24  1E3E               	negf	((c:___aldiv@quotient)),c
 24282  002D26  6C3D               	movlw	0
 24283  002D28  0E00               	addwfc	((c:___aldiv@quotient+1)),c
 24284  002D2A  223E               	addwfc	((c:___aldiv@quotient+2)),c
 24285  002D2C  223F               	addwfc	((c:___aldiv@quotient+3)),c
 24286  002D2E  2240               	goto	l6253
 24287  002D30  EF9A  F016         	
 24288                           l1328:
 24289  002D34                     	line	40
 24290                           	
 24291                           l6253:
 24292  002D34                     	movff	(c:___aldiv@quotient),(c:?___aldiv)
 24293  002D34  C03D  F033         	movff	(c:___aldiv@quotient+1),(c:?___aldiv+1)
 24294  002D38  C03E  F034         	movff	(c:___aldiv@quotient+2),(c:?___aldiv+2)
 24295  002D3C  C03F  F035         	movff	(c:___aldiv@quotient+3),(c:?___aldiv+3)
 24296  002D40  C040  F036         	goto	l1329
 24297  002D44  EFA4  F016         	
 24298                           l6255:
 24299  002D48                     	line	41
 24300                           	
 24301                           l1329:
 24302  002D48                     	return	;funcret
 24303  002D48  0012               	opt stack 0
 24304                           GLOBAL	__end_of___aldiv
 24305                           	__end_of___aldiv:
 24306  002D4A                     	signat	___aldiv,8316
 24307                           	global	_MCP4725
 24308                           
 24309 ;; *************** function _MCP4725 *****************
 24310 ;; Defined at:
 24311 ;;		line 35 in file "MCP4725.c"
 24312 ;; Parameters:    Size  Location     Type
 24313 ;;  Vout            2   26[COMRAM] unsigned int 
 24314 ;; Auto vars:     Size  Location     Type
 24315 ;;		None
 24316 ;; Return value:  Size  Location     Type
 24317 ;;                  1    wreg      void 
 24318 ;; Registers used:
 24319 ;;		wreg, status,2, status,0, cstack
 24320 ;; Tracked objects:
 24321 ;;		On entry : 0/0
 24322 ;;		On exit  : 0/0
 24323 ;;		Unchanged: 0/0
 24324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24325 ;;      Params:         2       0       0       0       0       0       0       0       0
 24326 ;;      Locals:         0       0       0       0       0       0       0       0       0
 24327 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24328 ;;      Totals:         2       0       0       0       0       0       0       0       0
 24329 ;;Total ram usage:        2 bytes
 24330 ;; Hardware stack levels used:    1
 24331 ;; Hardware stack levels required when called:    4
 24332 ;; This function calls:
 24333 ;;		_I2C_stop
 24334 ;;		_dac_init
 24335 ;;		_dac_write
 24336 ;;		_delay
 24337 ;; This function is called by:
 24338 ;;		_main
 24339 ;; This function uses a non-reentrant model
 24340 ;;
 24341                           psect	text69,class=CODE,space=0,reloc=2,group=0
 24342                           	file	"MCP4725.c"
 24343                           	line	35
 24344                           global __ptext69
 24345                           __ptext69:
 24346  00414E                     psect	text69
 24347                           	file	"MCP4725.c"
 24348                           	line	35
 24349                           	global	__size_of_MCP4725
 24350                           	__size_of_MCP4725	equ	__end_of_MCP4725-_MCP4725
 24351  0000                     	
 24352                           _MCP4725:
 24353  00414E                     ;incstack = 0
 24354                           	opt	stack 26
 24355                           	line	37
 24356                           	
 24357                           l5557:
 24358  00414E                     ;MCP4725.c: 35: void MCP4725 (unsigned int Vout);MCP4725.c: 36: {;MCP4725.c: 37:     dac
                                 _init();
 24359                           	call	_dac_init	;wreg free
 24360  00414E  EC4C  F01F         	line	38
 24361                           ;MCP4725.c: 38:     dac_write(Vout);
 24362                           	movff	(c:MCP4725@Vout),(c:dac_write@code)
 24363  004152  C041  F02A         	movff	(c:MCP4725@Vout+1),(c:dac_write@code+1)
 24364  004156  C042  F02B         	call	_dac_write	;wreg free
 24365  00415A  EC09  F01F         	line	39
 24366                           	
 24367                           l5559:
 24368  00415E                     ;MCP4725.c: 39:     I2C_stop();
 24369                           	call	_I2C_stop	;wreg free
 24370  00415E  EC3B  F021         	line	40
 24371                           	
 24372                           l5561:
 24373  004162                     ;MCP4725.c: 40:     delay(1);
 24374                           	movlw	high(01h)
 24375  004162  0E00               	movwf	((c:delay@t+1)),c
 24376  004164  6E28               	movlw	low(01h)
 24377  004166  0E01               	movwf	((c:delay@t)),c
 24378  004168  6E27               	call	_delay	;wreg free
 24379  00416A  ECD7  F01F         	line	41
 24380                           	
 24381                           l19:
 24382  00416E                     	return	;funcret
 24383  00416E  0012               	opt stack 0
 24384                           GLOBAL	__end_of_MCP4725
 24385                           	__end_of_MCP4725:
 24386  004170                     	signat	_MCP4725,4217
 24387                           	global	_dac_write
 24388                           
 24389 ;; *************** function _dac_write *****************
 24390 ;; Defined at:
 24391 ;;		line 25 in file "MCP4725.c"
 24392 ;; Parameters:    Size  Location     Type
 24393 ;;  code            2    3[COMRAM] unsigned int 
 24394 ;; Auto vars:     Size  Location     Type
 24395 ;;		None
 24396 ;; Return value:  Size  Location     Type
 24397 ;;                  1    wreg      void 
 24398 ;; Registers used:
 24399 ;;		wreg, status,2, status,0, cstack
 24400 ;; Tracked objects:
 24401 ;;		On entry : 0/0
 24402 ;;		On exit  : 0/0
 24403 ;;		Unchanged: 0/0
 24404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24405 ;;      Params:         2       0       0       0       0       0       0       0       0
 24406 ;;      Locals:         0       0       0       0       0       0       0       0       0
 24407 ;;      Temps:          3       0       0       0       0       0       0       0       0
 24408 ;;      Totals:         5       0       0       0       0       0       0       0       0
 24409 ;;Total ram usage:        5 bytes
 24410 ;; Hardware stack levels used:    1
 24411 ;; Hardware stack levels required when called:    3
 24412 ;; This function calls:
 24413 ;;		_I2C_ack_receive
 24414 ;;		_I2C_tx
 24415 ;;		_delay
 24416 ;; This function is called by:
 24417 ;;		_MCP4725
 24418 ;;		_MCP4725X
 24419 ;; This function uses a non-reentrant model
 24420 ;;
 24421                           psect	text70,class=CODE,space=0,reloc=2,group=0
 24422                           	line	25
 24423                           global __ptext70
 24424                           __ptext70:
 24425  003E12                     psect	text70
 24426                           	file	"MCP4725.c"
 24427                           	line	25
 24428                           	global	__size_of_dac_write
 24429                           	__size_of_dac_write	equ	__end_of_dac_write-_dac_write
 24430  0000                     	
 24431                           _dac_write:
 24432  003E12                     ;incstack = 0
 24433                           	opt	stack 26
 24434                           	line	27
 24435                           	
 24436                           l5219:
 24437  003E12                     ;MCP4725.c: 25: void dac_write ( unsigned int code );MCP4725.c: 26: {;MCP4725.c: 27:    
                                  I2C_tx( code >> 4 );
 24438                           	movff	(c:dac_write@code),??_dac_write+0+0
 24439  003E12  C02A  F02C         	movff	(c:dac_write@code+1),??_dac_write+0+0+1
 24440  003E16  C02B  F02D         	movlw	04h
 24441  003E1A  0E04               	movwf	(??_dac_write+2+0)&0ffh,c
 24442  003E1C  6E2E               u3475:
 24443  003E1E                     	bcf	status,0
 24444  003E1E  90D8               	rrcf	(??_dac_write+0+1),c
 24445  003E20  322D               	rrcf	(??_dac_write+0+0),c
 24446  003E22  322C               	decfsz	(??_dac_write+2+0)&0ffh,c
 24447  003E24  2E2E               	goto	u3475
 24448  003E26  EF0F  F01F         	movf	(??_dac_write+0+0),c,w
 24449  003E2A  502C               	
 24450                           	call	_I2C_tx
 24451  003E2C  ECC7  F020         	line	28
 24452                           	
 24453                           l5221:
 24454  003E30                     ;MCP4725.c: 28:     I2C_ack_receive();
 24455                           	call	_I2C_ack_receive	;wreg free
 24456  003E30  EC2F  F021         	line	29
 24457                           	
 24458                           l5223:
 24459  003E34                     ;MCP4725.c: 29:     delay(1);
 24460                           	movlw	high(01h)
 24461  003E34  0E00               	movwf	((c:delay@t+1)),c
 24462  003E36  6E28               	movlw	low(01h)
 24463  003E38  0E01               	movwf	((c:delay@t)),c
 24464  003E3A  6E27               	call	_delay	;wreg free
 24465  003E3C  ECD7  F01F         	line	30
 24466                           	
 24467                           l5225:
 24468  003E40                     ;MCP4725.c: 30:     I2C_tx( code << 4);
 24469                           	swapf	((c:dac_write@code)),c,w
 24470  003E40  382A               	andlw	(0ffh shl 4) & 0ffh
 24471  003E42  0BF0               	
 24472                           	call	_I2C_tx
 24473  003E44  ECC7  F020         	line	31
 24474                           	
 24475                           l5227:
 24476  003E48                     ;MCP4725.c: 31:     I2C_ack_receive();
 24477                           	call	_I2C_ack_receive	;wreg free
 24478  003E48  EC2F  F021         	line	32
 24479                           ;MCP4725.c: 32:     delay(1);
 24480                           	movlw	high(01h)
 24481  003E4C  0E00               	movwf	((c:delay@t+1)),c
 24482  003E4E  6E28               	movlw	low(01h)
 24483  003E50  0E01               	movwf	((c:delay@t)),c
 24484  003E52  6E27               	call	_delay	;wreg free
 24485  003E54  ECD7  F01F         	line	33
 24486                           	
 24487                           l16:
 24488  003E58                     	return	;funcret
 24489  003E58  0012               	opt stack 0
 24490                           GLOBAL	__end_of_dac_write
 24491                           	__end_of_dac_write:
 24492  003E5A                     	signat	_dac_write,4217
 24493                           	global	_dac_init
 24494                           
 24495 ;; *************** function _dac_init *****************
 24496 ;; Defined at:
 24497 ;;		line 13 in file "MCP4725.c"
 24498 ;; Parameters:    Size  Location     Type
 24499 ;;		None
 24500 ;; Auto vars:     Size  Location     Type
 24501 ;;		None
 24502 ;; Return value:  Size  Location     Type
 24503 ;;                  1    wreg      void 
 24504 ;; Registers used:
 24505 ;;		wreg, status,2, status,0, cstack
 24506 ;; Tracked objects:
 24507 ;;		On entry : 0/0
 24508 ;;		On exit  : 0/0
 24509 ;;		Unchanged: 0/0
 24510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24511 ;;      Params:         0       0       0       0       0       0       0       0       0
 24512 ;;      Locals:         0       0       0       0       0       0       0       0       0
 24513 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24514 ;;      Totals:         0       0       0       0       0       0       0       0       0
 24515 ;;Total ram usage:        0 bytes
 24516 ;; Hardware stack levels used:    1
 24517 ;; Hardware stack levels required when called:    3
 24518 ;; This function calls:
 24519 ;;		_I2C_ack_receive
 24520 ;;		_I2C_start
 24521 ;;		_I2C_tx
 24522 ;;		_delay
 24523 ;; This function is called by:
 24524 ;;		_MCP4725
 24525 ;;		_MCP4725X
 24526 ;; This function uses a non-reentrant model
 24527 ;;
 24528                           psect	text71,class=CODE,space=0,reloc=2,group=0
 24529                           	line	13
 24530                           global __ptext71
 24531                           __ptext71:
 24532  003E98                     psect	text71
 24533                           	file	"MCP4725.c"
 24534                           	line	13
 24535                           	global	__size_of_dac_init
 24536                           	__size_of_dac_init	equ	__end_of_dac_init-_dac_init
 24537  0000                     	
 24538                           _dac_init:
 24539  003E98                     ;incstack = 0
 24540                           	opt	stack 26
 24541                           	line	15
 24542                           	
 24543                           l5205:
 24544  003E98                     ;MCP4725.c: 15:     I2C_start();
 24545                           	call	_I2C_start	;wreg free
 24546  003E98  EC23  F021         	line	16
 24547                           	
 24548                           l5207:
 24549  003E9C                     ;MCP4725.c: 16:     delay(1);
 24550                           	movlw	high(01h)
 24551  003E9C  0E00               	movwf	((c:delay@t+1)),c
 24552  003E9E  6E28               	movlw	low(01h)
 24553  003EA0  0E01               	movwf	((c:delay@t)),c
 24554  003EA2  6E27               	call	_delay	;wreg free
 24555  003EA4  ECD7  F01F         	line	17
 24556                           	
 24557                           l5209:
 24558  003EA8                     ;MCP4725.c: 17:     I2C_tx( 0b11000000 );
 24559                           	movlw	(0C0h)&0ffh
 24560  003EA8  0EC0               	
 24561                           	call	_I2C_tx
 24562  003EAA  ECC7  F020         	line	18
 24563                           	
 24564                           l5211:
 24565  003EAE                     ;MCP4725.c: 18:     I2C_ack_receive();
 24566                           	call	_I2C_ack_receive	;wreg free
 24567  003EAE  EC2F  F021         	line	19
 24568                           	
 24569                           l5213:
 24570  003EB2                     ;MCP4725.c: 19:     delay(1);
 24571                           	movlw	high(01h)
 24572  003EB2  0E00               	movwf	((c:delay@t+1)),c
 24573  003EB4  6E28               	movlw	low(01h)
 24574  003EB6  0E01               	movwf	((c:delay@t)),c
 24575  003EB8  6E27               	call	_delay	;wreg free
 24576  003EBA  ECD7  F01F         	line	20
 24577                           ;MCP4725.c: 20:     I2C_tx( 0b01100000 );
 24578                           	movlw	(060h)&0ffh
 24579  003EBE  0E60               	
 24580                           	call	_I2C_tx
 24581  003EC0  ECC7  F020         	line	21
 24582                           	
 24583                           l5215:
 24584  003EC4                     ;MCP4725.c: 21:     I2C_ack_receive();
 24585                           	call	_I2C_ack_receive	;wreg free
 24586  003EC4  EC2F  F021         	line	22
 24587                           	
 24588                           l5217:
 24589  003EC8                     ;MCP4725.c: 22:     delay(1);
 24590                           	movlw	high(01h)
 24591  003EC8  0E00               	movwf	((c:delay@t+1)),c
 24592  003ECA  6E28               	movlw	low(01h)
 24593  003ECC  0E01               	movwf	((c:delay@t)),c
 24594  003ECE  6E27               	call	_delay	;wreg free
 24595  003ED0  ECD7  F01F         	line	23
 24596                           	
 24597                           l13:
 24598  003ED4                     	return	;funcret
 24599  003ED4  0012               	opt stack 0
 24600                           GLOBAL	__end_of_dac_init
 24601                           	__end_of_dac_init:
 24602  003ED6                     	signat	_dac_init,89
 24603                           	global	_delay
 24604                           
 24605 ;; *************** function _delay *****************
 24606 ;; Defined at:
 24607 ;;		line 10 in file "delay.c"
 24608 ;; Parameters:    Size  Location     Type
 24609 ;;  t               2    0[COMRAM] unsigned int 
 24610 ;; Auto vars:     Size  Location     Type
 24611 ;;		None
 24612 ;; Return value:  Size  Location     Type
 24613 ;;                  1    wreg      void 
 24614 ;; Registers used:
 24615 ;;		wreg, status,2, status,0
 24616 ;; Tracked objects:
 24617 ;;		On entry : 0/0
 24618 ;;		On exit  : 0/0
 24619 ;;		Unchanged: 0/0
 24620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24621 ;;      Params:         2       0       0       0       0       0       0       0       0
 24622 ;;      Locals:         0       0       0       0       0       0       0       0       0
 24623 ;;      Temps:          1       0       0       0       0       0       0       0       0
 24624 ;;      Totals:         3       0       0       0       0       0       0       0       0
 24625 ;;Total ram usage:        3 bytes
 24626 ;; Hardware stack levels used:    1
 24627 ;; Hardware stack levels required when called:    2
 24628 ;; This function calls:
 24629 ;;		Nothing
 24630 ;; This function is called by:
 24631 ;;		_dac_init
 24632 ;;		_dac_write
 24633 ;;		_MCP4725
 24634 ;;		_dispLCD_init
 24635 ;;		_main
 24636 ;;		_MCP4725X
 24637 ;;		_Wifi_mode
 24638 ;;		_Wifi_config_servidor
 24639 ;; This function uses a non-reentrant model
 24640 ;;
 24641                           psect	text72,class=CODE,space=0,reloc=2,group=0
 24642                           	file	"delay.c"
 24643                           	line	10
 24644                           global __ptext72
 24645                           __ptext72:
 24646  003FAE                     psect	text72
 24647                           	file	"delay.c"
 24648                           	line	10
 24649                           	global	__size_of_delay
 24650                           	__size_of_delay	equ	__end_of_delay-_delay
 24651  0000                     	
 24652                           _delay:
 24653  003FAE                     ;incstack = 0
 24654                           	opt	stack 27
 24655                           	line	12
 24656                           	
 24657                           l5103:
 24658  003FAE                     ;delay.c: 10: void delay( unsigned int t );delay.c: 11: {;delay.c: 12:     while( t )
 24659                           	goto	l54
 24660  003FAE  EFE4  F01F         	
 24661                           l55:
 24662  003FB2                     	line	14
 24663                           	
 24664                           l5105:
 24665  003FB2                     ;delay.c: 13:     {;delay.c: 14:         _delay((unsigned long)((1)*(20000000/4000.0)));
                                 
 24666                           	opt asmopt_push
 24667                           opt asmopt_off
 24668                           movlw	7
 24669  003FB2  0E07               movwf	(??_delay+0+0)&0ffh,c,f
 24670  003FB4  6E29               	movlw	125
 24671  003FB6  0E7D               u6287:
 24672  003FB8                     decfsz	wreg,f
 24673  003FB8  2EE8               	bra	u6287
 24674  003FBA  D7FE               	decfsz	(??_delay+0+0)&0ffh,c,f
 24675  003FBC  2E29               	bra	u6287
 24676  003FBE  D7FC               	nop
 24677  003FC0  F000               opt asmopt_pop
 24678                           
 24679                           	line	15
 24680                           	
 24681                           l5107:
 24682  003FC2                     ;delay.c: 15:         --t;
 24683                           	decf	((c:delay@t)),c
 24684  003FC2  0627               	btfss	status,0
 24685  003FC4  A0D8               	decf	((c:delay@t+1)),c
 24686  003FC6  0628               	line	16
 24687                           ;delay.c: 16:     }
 24688                           	
 24689                           l54:
 24690  003FC8                     	line	12
 24691                           ;delay.c: 12:     while( t )
 24692                           	movf	((c:delay@t)),c,w
 24693  003FC8  5027               iorwf	((c:delay@t+1)),c,w
 24694  003FCA  1028               	btfss	status,2
 24695  003FCC  A4D8               	goto	u3371
 24696  003FCE  EFEB  F01F         	goto	u3370
 24697  003FD2  EFED  F01F         
 24698                           u3371:
 24699  003FD6                     	goto	l5105
 24700  003FD6  EFD9  F01F         u3370:
 24701  003FDA                     	goto	l57
 24702  003FDA  EFEF  F01F         	
 24703                           l56:
 24704  003FDE                     	line	17
 24705                           	
 24706                           l57:
 24707  003FDE                     	return	;funcret
 24708  003FDE  0012               	opt stack 0
 24709                           GLOBAL	__end_of_delay
 24710                           	__end_of_delay:
 24711  003FE0                     	signat	_delay,4217
 24712                           	global	_I2C_tx
 24713                           
 24714 ;; *************** function _I2C_tx *****************
 24715 ;; Defined at:
 24716 ;;		line 36 in file "spi_i2c.c"
 24717 ;; Parameters:    Size  Location     Type
 24718 ;;  b               1    wreg     unsigned char 
 24719 ;; Auto vars:     Size  Location     Type
 24720 ;;  b               1    0[COMRAM] unsigned char 
 24721 ;; Return value:  Size  Location     Type
 24722 ;;                  1    wreg      void 
 24723 ;; Registers used:
 24724 ;;		wreg
 24725 ;; Tracked objects:
 24726 ;;		On entry : 0/0
 24727 ;;		On exit  : 0/0
 24728 ;;		Unchanged: 0/0
 24729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24730 ;;      Params:         0       0       0       0       0       0       0       0       0
 24731 ;;      Locals:         1       0       0       0       0       0       0       0       0
 24732 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24733 ;;      Totals:         1       0       0       0       0       0       0       0       0
 24734 ;;Total ram usage:        1 bytes
 24735 ;; Hardware stack levels used:    1
 24736 ;; Hardware stack levels required when called:    2
 24737 ;; This function calls:
 24738 ;;		Nothing
 24739 ;; This function is called by:
 24740 ;;		_dac_init
 24741 ;;		_dac_write
 24742 ;; This function uses a non-reentrant model
 24743 ;;
 24744                           psect	text73,class=CODE,space=0,reloc=2,group=0
 24745                           	file	"spi_i2c.c"
 24746                           	line	36
 24747                           global __ptext73
 24748                           __ptext73:
 24749  00418E                     psect	text73
 24750                           	file	"spi_i2c.c"
 24751                           	line	36
 24752                           	global	__size_of_I2C_tx
 24753                           	__size_of_I2C_tx	equ	__end_of_I2C_tx-_I2C_tx
 24754  0000                     	
 24755                           _I2C_tx:
 24756  00418E                     ;incstack = 0
 24757                           	opt	stack 26
 24758                           ;I2C_tx@b stored from wreg
 24759                           	movwf	((c:I2C_tx@b)),c
 24760  00418E  6E27               	line	38
 24761                           	
 24762                           l5109:
 24763  004190                     ;spi_i2c.c: 36: void I2C_tx( unsigned char b );spi_i2c.c: 37: {;spi_i2c.c: 38:     SSPBU
                                 F = b;
 24764                           	movff	(c:I2C_tx@b),(c:4041)	;volatile
 24765  004190  C027  FFC9         	line	39
 24766                           ;spi_i2c.c: 39:     while( SSPSTATbits.BF );
 24767                           	goto	l975
 24768  004194  EFCC  F020         	
 24769                           l976:
 24770  004198                     	
 24771                           l975:
 24772  004198                     	btfsc	((c:4039)),c,0	;volatile
 24773  004198  B0C7               	goto	u3381
 24774  00419A  EFD1  F020         	goto	u3380
 24775  00419E  EFD3  F020         u3381:
 24776  0041A2                     	goto	l975
 24777  0041A2  EFCC  F020         u3380:
 24778  0041A6                     	goto	l978
 24779  0041A6  EFD5  F020         	
 24780                           l977:
 24781  0041AA                     	line	40
 24782                           	
 24783                           l978:
 24784  0041AA                     	return	;funcret
 24785  0041AA  0012               	opt stack 0
 24786                           GLOBAL	__end_of_I2C_tx
 24787                           	__end_of_I2C_tx:
 24788  0041AC                     	signat	_I2C_tx,4217
 24789                           	global	_I2C_start
 24790                           
 24791 ;; *************** function _I2C_start *****************
 24792 ;; Defined at:
 24793 ;;		line 22 in file "spi_i2c.c"
 24794 ;; Parameters:    Size  Location     Type
 24795 ;;		None
 24796 ;; Auto vars:     Size  Location     Type
 24797 ;;		None
 24798 ;; Return value:  Size  Location     Type
 24799 ;;                  1    wreg      void 
 24800 ;; Registers used:
 24801 ;;		None
 24802 ;; Tracked objects:
 24803 ;;		On entry : 0/0
 24804 ;;		On exit  : 0/0
 24805 ;;		Unchanged: 0/0
 24806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24807 ;;      Params:         0       0       0       0       0       0       0       0       0
 24808 ;;      Locals:         0       0       0       0       0       0       0       0       0
 24809 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24810 ;;      Totals:         0       0       0       0       0       0       0       0       0
 24811 ;;Total ram usage:        0 bytes
 24812 ;; Hardware stack levels used:    1
 24813 ;; Hardware stack levels required when called:    2
 24814 ;; This function calls:
 24815 ;;		Nothing
 24816 ;; This function is called by:
 24817 ;;		_dac_init
 24818 ;; This function uses a non-reentrant model
 24819 ;;
 24820                           psect	text74,class=CODE,space=0,reloc=2,group=0
 24821                           	line	22
 24822                           global __ptext74
 24823                           __ptext74:
 24824  004246                     psect	text74
 24825                           	file	"spi_i2c.c"
 24826                           	line	22
 24827                           	global	__size_of_I2C_start
 24828                           	__size_of_I2C_start	equ	__end_of_I2C_start-_I2C_start
 24829  0000                     	
 24830                           _I2C_start:
 24831  004246                     ;incstack = 0
 24832                           	opt	stack 26
 24833                           	line	24
 24834                           	
 24835                           l5101:
 24836  004246                     ;spi_i2c.c: 24:     SSPCON2bits.SEN = 1;
 24837                           	bsf	((c:4037)),c,0	;volatile
 24838  004246  80C5               	line	25
 24839                           ;spi_i2c.c: 25:     while( !PIR1bits.SSPIF );
 24840                           	goto	l960
 24841  004248  EF26  F021         	
 24842                           l961:
 24843  00424C                     	
 24844                           l960:
 24845  00424C                     	btfss	((c:3998)),c,3	;volatile
 24846  00424C  A69E               	goto	u3361
 24847  00424E  EF2B  F021         	goto	u3360
 24848  004252  EF2D  F021         u3361:
 24849  004256                     	goto	l960
 24850  004256  EF26  F021         u3360:
 24851  00425A                     	
 24852                           l962:
 24853  00425A                     	line	26
 24854                           ;spi_i2c.c: 26:     PIR1bits.SSPIF = 0;
 24855                           	bcf	((c:3998)),c,3	;volatile
 24856  00425A  969E               	line	27
 24857                           	
 24858                           l963:
 24859  00425C                     	return	;funcret
 24860  00425C  0012               	opt stack 0
 24861                           GLOBAL	__end_of_I2C_start
 24862                           	__end_of_I2C_start:
 24863  00425E                     	signat	_I2C_start,89
 24864                           	global	_I2C_ack_receive
 24865                           
 24866 ;; *************** function _I2C_ack_receive *****************
 24867 ;; Defined at:
 24868 ;;		line 56 in file "spi_i2c.c"
 24869 ;; Parameters:    Size  Location     Type
 24870 ;;		None
 24871 ;; Auto vars:     Size  Location     Type
 24872 ;;		None
 24873 ;; Return value:  Size  Location     Type
 24874 ;;                  1    wreg      void 
 24875 ;; Registers used:
 24876 ;;		None
 24877 ;; Tracked objects:
 24878 ;;		On entry : 0/0
 24879 ;;		On exit  : 0/0
 24880 ;;		Unchanged: 0/0
 24881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24882 ;;      Params:         0       0       0       0       0       0       0       0       0
 24883 ;;      Locals:         0       0       0       0       0       0       0       0       0
 24884 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24885 ;;      Totals:         0       0       0       0       0       0       0       0       0
 24886 ;;Total ram usage:        0 bytes
 24887 ;; Hardware stack levels used:    1
 24888 ;; Hardware stack levels required when called:    2
 24889 ;; This function calls:
 24890 ;;		Nothing
 24891 ;; This function is called by:
 24892 ;;		_dac_init
 24893 ;;		_dac_write
 24894 ;; This function uses a non-reentrant model
 24895 ;;
 24896                           psect	text75,class=CODE,space=0,reloc=2,group=0
 24897                           	line	56
 24898                           global __ptext75
 24899                           __ptext75:
 24900  00425E                     psect	text75
 24901                           	file	"spi_i2c.c"
 24902                           	line	56
 24903                           	global	__size_of_I2C_ack_receive
 24904                           	__size_of_I2C_ack_receive	equ	__end_of_I2C_ack_receive-_I2C_ack_receive
 24905  0000                     	
 24906                           _I2C_ack_receive:
 24907  00425E                     ;incstack = 0
 24908                           	opt	stack 26
 24909                           	line	58
 24910                           	
 24911                           l5111:
 24912  00425E                     ;spi_i2c.c: 58:     while( SSPCON2bits.ACKSTAT );
 24913                           	goto	l996
 24914  00425E  EF31  F021         	
 24915                           l997:
 24916  004262                     	
 24917                           l996:
 24918  004262                     	btfsc	((c:4037)),c,6	;volatile
 24919  004262  BCC5               	goto	u3391
 24920  004264  EF36  F021         	goto	u3390
 24921  004268  EF38  F021         u3391:
 24922  00426C                     	goto	l996
 24923  00426C  EF31  F021         u3390:
 24924  004270                     	goto	l999
 24925  004270  EF3A  F021         	
 24926                           l998:
 24927  004274                     	line	60
 24928                           	
 24929                           l999:
 24930  004274                     	return	;funcret
 24931  004274  0012               	opt stack 0
 24932                           GLOBAL	__end_of_I2C_ack_receive
 24933                           	__end_of_I2C_ack_receive:
 24934  004276                     	signat	_I2C_ack_receive,89
 24935                           	global	_I2C_stop
 24936                           
 24937 ;; *************** function _I2C_stop *****************
 24938 ;; Defined at:
 24939 ;;		line 41 in file "spi_i2c.c"
 24940 ;; Parameters:    Size  Location     Type
 24941 ;;		None
 24942 ;; Auto vars:     Size  Location     Type
 24943 ;;		None
 24944 ;; Return value:  Size  Location     Type
 24945 ;;                  1    wreg      void 
 24946 ;; Registers used:
 24947 ;;		None
 24948 ;; Tracked objects:
 24949 ;;		On entry : 0/0
 24950 ;;		On exit  : 0/0
 24951 ;;		Unchanged: 0/0
 24952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24953 ;;      Params:         0       0       0       0       0       0       0       0       0
 24954 ;;      Locals:         0       0       0       0       0       0       0       0       0
 24955 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24956 ;;      Totals:         0       0       0       0       0       0       0       0       0
 24957 ;;Total ram usage:        0 bytes
 24958 ;; Hardware stack levels used:    1
 24959 ;; Hardware stack levels required when called:    2
 24960 ;; This function calls:
 24961 ;;		Nothing
 24962 ;; This function is called by:
 24963 ;;		_MCP4725
 24964 ;;		_MCP4725X
 24965 ;; This function uses a non-reentrant model
 24966 ;;
 24967                           psect	text76,class=CODE,space=0,reloc=2,group=0
 24968                           	line	41
 24969                           global __ptext76
 24970                           __ptext76:
 24971  004276                     psect	text76
 24972                           	file	"spi_i2c.c"
 24973                           	line	41
 24974                           	global	__size_of_I2C_stop
 24975                           	__size_of_I2C_stop	equ	__end_of_I2C_stop-_I2C_stop
 24976  0000                     	
 24977                           _I2C_stop:
 24978  004276                     ;incstack = 0
 24979                           	opt	stack 27
 24980                           	line	43
 24981                           	
 24982                           l5229:
 24983  004276                     ;spi_i2c.c: 43:     SSPCON2bits.PEN = 1;
 24984                           	bsf	((c:4037)),c,2	;volatile
 24985  004276  84C5               	line	44
 24986                           ;spi_i2c.c: 44:     while( !PIR1bits.SSPIF );
 24987                           	goto	l981
 24988  004278  EF3E  F021         	
 24989                           l982:
 24990  00427C                     	
 24991                           l981:
 24992  00427C                     	btfss	((c:3998)),c,3	;volatile
 24993  00427C  A69E               	goto	u3481
 24994  00427E  EF43  F021         	goto	u3480
 24995  004282  EF45  F021         u3481:
 24996  004286                     	goto	l981
 24997  004286  EF3E  F021         u3480:
 24998  00428A                     	
 24999                           l983:
 25000  00428A                     	line	45
 25001                           ;spi_i2c.c: 45:     PIR1bits.SSPIF = 0;
 25002                           	bcf	((c:3998)),c,3	;volatile
 25003  00428A  969E               	line	46
 25004                           	
 25005                           l984:
 25006  00428C                     	return	;funcret
 25007  00428C  0012               	opt stack 0
 25008                           GLOBAL	__end_of_I2C_stop
 25009                           	__end_of_I2C_stop:
 25010  00428E                     	signat	_I2C_stop,89
 25011                           	global	_I2C_init
 25012                           
 25013 ;; *************** function _I2C_init *****************
 25014 ;; Defined at:
 25015 ;;		line 12 in file "spi_i2c.c"
 25016 ;; Parameters:    Size  Location     Type
 25017 ;;  freq            4   13[COMRAM] unsigned long 
 25018 ;; Auto vars:     Size  Location     Type
 25019 ;;		None
 25020 ;; Return value:  Size  Location     Type
 25021 ;;                  1    wreg      void 
 25022 ;; Registers used:
 25023 ;;		wreg, status,2, status,0, cstack
 25024 ;; Tracked objects:
 25025 ;;		On entry : 0/0
 25026 ;;		On exit  : 0/0
 25027 ;;		Unchanged: 0/0
 25028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25029 ;;      Params:         4       0       0       0       0       0       0       0       0
 25030 ;;      Locals:         0       0       0       0       0       0       0       0       0
 25031 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25032 ;;      Totals:         4       0       0       0       0       0       0       0       0
 25033 ;;Total ram usage:        4 bytes
 25034 ;; Hardware stack levels used:    1
 25035 ;; Hardware stack levels required when called:    3
 25036 ;; This function calls:
 25037 ;;		___lldiv
 25038 ;; This function is called by:
 25039 ;;		_main
 25040 ;; This function uses a non-reentrant model
 25041 ;;
 25042                           psect	text77,class=CODE,space=0,reloc=2,group=0
 25043                           	line	12
 25044                           global __ptext77
 25045                           __ptext77:
 25046  003ED6                     psect	text77
 25047                           	file	"spi_i2c.c"
 25048                           	line	12
 25049                           	global	__size_of_I2C_init
 25050                           	__size_of_I2C_init	equ	__end_of_I2C_init-_I2C_init
 25051  0000                     	
 25052                           _I2C_init:
 25053  003ED6                     ;incstack = 0
 25054                           	opt	stack 27
 25055                           	line	14
 25056                           	
 25057                           l6099:
 25058  003ED6                     ;spi_i2c.c: 12: void I2C_init( unsigned long freq );spi_i2c.c: 13: {;spi_i2c.c: 14:     
                                 TRISBbits.TRISB0 = 1;
 25059                           	bsf	((c:3987)),c,0	;volatile
 25060  003ED6  8093               	line	15
 25061                           ;spi_i2c.c: 15:     TRISBbits.TRISB1 = 1;
 25062                           	bsf	((c:3987)),c,1	;volatile
 25063  003ED8  8293               	line	16
 25064                           	
 25065                           l6101:
 25066  003EDA                     ;spi_i2c.c: 16:     SSPCON1bits.SSPM = 0x8;
 25067                           	movf	((c:4038)),c,w	;volatile
 25068  003EDA  50C6               	andlw	not (((1<<4)-1)<<0)
 25069  003EDC  0BF0               	iorlw	(08h & ((1<<4)-1))<<0
 25070  003EDE  0908               	movwf	((c:4038)),c	;volatile
 25071  003EE0  6EC6               	line	17
 25072                           	
 25073                           l6103:
 25074  003EE2                     ;spi_i2c.c: 17:     SSPADD = ((20000000>>2) / (freq))-1;
 25075                           	movlw	low(04C4B40h)
 25076  003EE2  0E40               	movwf	((c:___lldiv@dividend)),c
 25077  003EE4  6E27               	movlw	high(04C4B40h)
 25078  003EE6  0E4B               	movwf	((c:___lldiv@dividend+1)),c
 25079  003EE8  6E28               	movlw	low highword(04C4B40h)
 25080  003EEA  0E4C               	movwf	((c:___lldiv@dividend+2)),c
 25081  003EEC  6E29               	movlw	high highword(04C4B40h)
 25082  003EEE  0E00               	movwf	((c:___lldiv@dividend+3)),c
 25083  003EF0  6E2A               	movff	(c:I2C_init@freq),(c:___lldiv@divisor)
 25084  003EF2  C034  F02B         	movff	(c:I2C_init@freq+1),(c:___lldiv@divisor+1)
 25085  003EF6  C035  F02C         	movff	(c:I2C_init@freq+2),(c:___lldiv@divisor+2)
 25086  003EFA  C036  F02D         	movff	(c:I2C_init@freq+3),(c:___lldiv@divisor+3)
 25087  003EFE  C037  F02E         	call	___lldiv	;wreg free
 25088  003F02  EC34  F01A         	decf	(0+?___lldiv),c,w
 25089  003F06  0427               	movwf	((c:4040)),c	;volatile
 25090  003F08  6EC8               	line	18
 25091                           	
 25092                           l6105:
 25093  003F0A                     ;spi_i2c.c: 18:     SSPSTATbits.SMP = 1;
 25094                           	bsf	((c:4039)),c,7	;volatile
 25095  003F0A  8EC7               	line	19
 25096                           	
 25097                           l6107:
 25098  003F0C                     ;spi_i2c.c: 19:     SSPCON1bits.SSPEN = 1;
 25099                           	bsf	((c:4038)),c,5	;volatile
 25100  003F0C  8AC6               	line	20
 25101                           	
 25102                           l957:
 25103  003F0E                     	return	;funcret
 25104  003F0E  0012               	opt stack 0
 25105                           GLOBAL	__end_of_I2C_init
 25106                           	__end_of_I2C_init:
 25107  003F10                     	signat	_I2C_init,4217
 25108                           	global	___lldiv
 25109                           
 25110 ;; *************** function ___lldiv *****************
 25111 ;; Defined at:
 25112 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\__lldiv.c"
 25113 ;; Parameters:    Size  Location     Type
 25114 ;;  dividend        4    0[COMRAM] unsigned long 
 25115 ;;  divisor         4    4[COMRAM] unsigned long 
 25116 ;; Auto vars:     Size  Location     Type
 25117 ;;  quotient        4    8[COMRAM] unsigned long 
 25118 ;;  counter         1   12[COMRAM] unsigned char 
 25119 ;; Return value:  Size  Location     Type
 25120 ;;                  4    0[COMRAM] unsigned long 
 25121 ;; Registers used:
 25122 ;;		wreg, status,2, status,0
 25123 ;; Tracked objects:
 25124 ;;		On entry : 0/0
 25125 ;;		On exit  : 0/0
 25126 ;;		Unchanged: 0/0
 25127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25128 ;;      Params:         8       0       0       0       0       0       0       0       0
 25129 ;;      Locals:         5       0       0       0       0       0       0       0       0
 25130 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25131 ;;      Totals:        13       0       0       0       0       0       0       0       0
 25132 ;;Total ram usage:       13 bytes
 25133 ;; Hardware stack levels used:    1
 25134 ;; Hardware stack levels required when called:    2
 25135 ;; This function calls:
 25136 ;;		Nothing
 25137 ;; This function is called by:
 25138 ;;		_I2C_init
 25139 ;;		_initEUSART
 25140 ;; This function uses a non-reentrant model
 25141 ;;
 25142                           psect	text78,class=CODE,space=0,reloc=2,group=1
 25143                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\__lldiv.c"
 25144                           	line	7
 25145                           global __ptext78
 25146                           __ptext78:
 25147  003468                     psect	text78
 25148                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\__lldiv.c"
 25149                           	line	7
 25150                           	global	__size_of___lldiv
 25151                           	__size_of___lldiv	equ	__end_of___lldiv-___lldiv
 25152  0000                     	
 25153                           ___lldiv:
 25154  003468                     ;incstack = 0
 25155                           	opt	stack 27
 25156                           	line	13
 25157                           	
 25158                           l5513:
 25159  003468                     	movlw	low(0)
 25160  003468  0E00               	movwf	((c:___lldiv@quotient)),c
 25161  00346A  6E2F               	movlw	high(0)
 25162  00346C  0E00               	movwf	((c:___lldiv@quotient+1)),c
 25163  00346E  6E30               	movlw	low highword(0)
 25164  003470  0E00               	movwf	((c:___lldiv@quotient+2)),c
 25165  003472  6E31               	movlw	high highword(0)
 25166  003474  0E00               	movwf	((c:___lldiv@quotient+3)),c
 25167  003476  6E32               	line	14
 25168                           	
 25169                           l5515:
 25170  003478                     	movf	((c:___lldiv@divisor)),c,w
 25171  003478  502B               iorwf	((c:___lldiv@divisor+1)),c,w
 25172  00347A  102C               iorwf	((c:___lldiv@divisor+2)),c,w
 25173  00347C  102D               iorwf	((c:___lldiv@divisor+3)),c,w
 25174  00347E  102E               	btfsc	status,2
 25175  003480  B4D8               	goto	u3951
 25176  003482  EF45  F01A         	goto	u3950
 25177  003486  EF47  F01A         
 25178                           u3951:
 25179  00348A                     	goto	l1277
 25180  00348A  EF87  F01A         u3950:
 25181  00348E                     	line	15
 25182                           	
 25183                           l5517:
 25184  00348E                     	movlw	low(01h)
 25185  00348E  0E01               	movwf	((c:___lldiv@counter)),c
 25186  003490  6E33               	line	16
 25187                           	goto	l5521
 25188  003492  EF53  F01A         	
 25189                           l1279:
 25190  003496                     	line	17
 25191                           	
 25192                           l5519:
 25193  003496                     	bcf	status,0
 25194  003496  90D8               	rlcf	((c:___lldiv@divisor)),c
 25195  003498  362B               	rlcf	((c:___lldiv@divisor+1)),c
 25196  00349A  362C               	rlcf	((c:___lldiv@divisor+2)),c
 25197  00349C  362D               	rlcf	((c:___lldiv@divisor+3)),c
 25198  00349E  362E               	line	18
 25199                           	incf	((c:___lldiv@counter)),c
 25200  0034A0  2A33               	goto	l5521
 25201  0034A2  EF53  F01A         	line	19
 25202                           	
 25203                           l1278:
 25204  0034A6                     	line	16
 25205                           	
 25206                           l5521:
 25207  0034A6                     	
 25208                           	btfss	((c:___lldiv@divisor+3)),c,(31)&7
 25209  0034A6  AE2E               	goto	u3961
 25210  0034A8  EF58  F01A         	goto	u3960
 25211  0034AC  EF5A  F01A         u3961:
 25212  0034B0                     	goto	l5519
 25213  0034B0  EF4B  F01A         u3960:
 25214  0034B4                     	goto	l5523
 25215  0034B4  EF5E  F01A         	
 25216                           l1280:
 25217  0034B8                     	goto	l5523
 25218  0034B8  EF5E  F01A         	line	20
 25219                           	
 25220                           l1281:
 25221  0034BC                     	line	21
 25222                           	
 25223                           l5523:
 25224  0034BC                     	bcf	status,0
 25225  0034BC  90D8               	rlcf	((c:___lldiv@quotient)),c
 25226  0034BE  362F               	rlcf	((c:___lldiv@quotient+1)),c
 25227  0034C0  3630               	rlcf	((c:___lldiv@quotient+2)),c
 25228  0034C2  3631               	rlcf	((c:___lldiv@quotient+3)),c
 25229  0034C4  3632               	line	22
 25230                           	
 25231                           l5525:
 25232  0034C6                     		movf	((c:___lldiv@divisor)),c,w
 25233  0034C6  502B               	subwf	((c:___lldiv@dividend)),c,w
 25234  0034C8  5C27               	movf	((c:___lldiv@divisor+1)),c,w
 25235  0034CA  502C               	subwfb	((c:___lldiv@dividend+1)),c,w
 25236  0034CC  5828               	movf	((c:___lldiv@divisor+2)),c,w
 25237  0034CE  502D               	subwfb	((c:___lldiv@dividend+2)),c,w
 25238  0034D0  5829               	movf	((c:___lldiv@divisor+3)),c,w
 25239  0034D2  502E               	subwfb	((c:___lldiv@dividend+3)),c,w
 25240  0034D4  582A               	btfss	status,0
 25241  0034D6  A0D8               	goto	u3971
 25242  0034D8  EF70  F01A         	goto	u3970
 25243  0034DC  EF72  F01A         
 25244                           u3971:
 25245  0034E0                     	goto	l5531
 25246  0034E0  EF7D  F01A         u3970:
 25247  0034E4                     	line	23
 25248                           	
 25249                           l5527:
 25250  0034E4                     	movf	((c:___lldiv@divisor)),c,w
 25251  0034E4  502B               	subwf	((c:___lldiv@dividend)),c
 25252  0034E6  5E27               	movf	((c:___lldiv@divisor+1)),c,w
 25253  0034E8  502C               	subwfb	((c:___lldiv@dividend+1)),c
 25254  0034EA  5A28               	movf	((c:___lldiv@divisor+2)),c,w
 25255  0034EC  502D               	subwfb	((c:___lldiv@dividend+2)),c
 25256  0034EE  5A29               	movf	((c:___lldiv@divisor+3)),c,w
 25257  0034F0  502E               	subwfb	((c:___lldiv@dividend+3)),c
 25258  0034F2  5A2A               	line	24
 25259                           	
 25260                           l5529:
 25261  0034F4                     	bsf	(0+(0/8)+(c:___lldiv@quotient)),c,(0)&7
 25262  0034F4  802F               	goto	l5531
 25263  0034F6  EF7D  F01A         	line	25
 25264                           	
 25265                           l1282:
 25266  0034FA                     	line	26
 25267                           	
 25268                           l5531:
 25269  0034FA                     	bcf	status,0
 25270  0034FA  90D8               	rrcf	((c:___lldiv@divisor+3)),c
 25271  0034FC  322E               	rrcf	((c:___lldiv@divisor+2)),c
 25272  0034FE  322D               	rrcf	((c:___lldiv@divisor+1)),c
 25273  003500  322C               	rrcf	((c:___lldiv@divisor)),c
 25274  003502  322B               	line	27
 25275                           	
 25276                           l5533:
 25277  003504                     	decfsz	((c:___lldiv@counter)),c
 25278  003504  2E33               	
 25279                           	goto	l5523
 25280  003506  EF5E  F01A         	goto	l1277
 25281  00350A  EF87  F01A         	
 25282                           l1283:
 25283  00350E                     	line	28
 25284                           	
 25285                           l1277:
 25286  00350E                     	line	29
 25287                           	movff	(c:___lldiv@quotient),(c:?___lldiv)
 25288  00350E  C02F  F027         	movff	(c:___lldiv@quotient+1),(c:?___lldiv+1)
 25289  003512  C030  F028         	movff	(c:___lldiv@quotient+2),(c:?___lldiv+2)
 25290  003516  C031  F029         	movff	(c:___lldiv@quotient+3),(c:?___lldiv+3)
 25291  00351A  C032  F02A         	line	30
 25292                           	
 25293                           l1284:
 25294  00351E                     	return	;funcret
 25295  00351E  0012               	opt stack 0
 25296                           GLOBAL	__end_of___lldiv
 25297                           	__end_of___lldiv:
 25298  003520                     	signat	___lldiv,8316
 25299                           	global	_irq
 25300                           
 25301 ;; *************** function _irq *****************
 25302 ;; Defined at:
 25303 ;;		line 58 in file "main.c"
 25304 ;; Parameters:    Size  Location     Type
 25305 ;;		None
 25306 ;; Auto vars:     Size  Location     Type
 25307 ;;		None
 25308 ;; Return value:  Size  Location     Type
 25309 ;;                  1    wreg      void 
 25310 ;; Registers used:
 25311 ;;		wreg, status,2, status,0, cstack
 25312 ;; Tracked objects:
 25313 ;;		On entry : 0/0
 25314 ;;		On exit  : 0/0
 25315 ;;		Unchanged: 0/0
 25316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25317 ;;      Params:         0       0       0       0       0       0       0       0       0
 25318 ;;      Locals:         0       0       0       0       0       0       0       0       0
 25319 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25320 ;;      Totals:         0       0       0       0       0       0       0       0       0
 25321 ;;Total ram usage:        0 bytes
 25322 ;; Hardware stack levels used:    1
 25323 ;; Hardware stack levels required when called:    1
 25324 ;; This function calls:
 25325 ;;		_intt1_1ms
 25326 ;; This function is called by:
 25327 ;;		Interrupt level 2
 25328 ;; This function uses a non-reentrant model
 25329 ;;
 25330                           psect	intcode,class=CODE,space=0,reloc=2
 25331                           global __pintcode
 25332                           __pintcode:
 25333  000008                     psect	intcode
 25334                           	file	"main.c"
 25335                           	line	58
 25336                           	global	__size_of_irq
 25337                           	__size_of_irq	equ	__end_of_irq-_irq
 25338  0000                     	
 25339                           _irq:
 25340  000008                     ;incstack = 0
 25341                           	opt	stack 25
 25342                           	bsf int$flags,1,c ;set compiler interrupt flag (level 2)
 25343  000008  825A               	global	int_func
 25344                           	call	int_func,f	;refresh shadow registers
 25345  00000A  EDF0  F01F         psect	intcode_body,class=CODE,space=0,reloc=2
 25346                           global __pintcode_body
 25347                           __pintcode_body:
 25348  003FE0                     int_func:
 25349  003FE0                     
 25350                           	pop	; remove dummy address from shadow register refresh
 25351  003FE0  0006               	line	60
 25352                           	
 25353                           i2l3229:
 25354  003FE2                     ;main.c: 60:     INTCONbits.GIE = 0;
 25355                           	bcf	((c:4082)),c,7	;volatile
 25356  003FE2  9EF2               	line	61
 25357                           ;main.c: 61:     if(PIR1bits.TMR1IF && PIE1bits.TMR1IE)
 25358                           	btfss	((c:3998)),c,0	;volatile
 25359  003FE4  A09E               	goto	i2u156_41
 25360  003FE6  EFF7  F01F         	goto	i2u156_40
 25361  003FEA  EFF9  F01F         i2u156_41:
 25362  003FEE                     	goto	i2l3237
 25363  003FEE  EF05  F020         i2u156_40:
 25364  003FF2                     	
 25365                           i2l3231:
 25366  003FF2                     	btfss	((c:3997)),c,0	;volatile
 25367  003FF2  A09D               	goto	i2u157_41
 25368  003FF4  EFFE  F01F         	goto	i2u157_40
 25369  003FF8  EF00  F020         i2u157_41:
 25370  003FFC                     	goto	i2l3237
 25371  003FFC  EF05  F020         i2u157_40:
 25372  004000                     	line	63
 25373                           	
 25374                           i2l3233:
 25375  004000                     ;main.c: 62:     {;main.c: 63:         PIR1bits.TMR1IF = 0;
 25376                           	bcf	((c:3998)),c,0	;volatile
 25377  004000  909E               	line	65
 25378                           	
 25379                           i2l3235:
 25380  004002                     ;main.c: 65:         intt1_1ms();
 25381                           	call	_intt1_1ms	;wreg free
 25382  004002  ECBD  F01F         	goto	i2l3237
 25383  004006  EF05  F020         	line	66
 25384                           ;main.c: 66:     }
 25385                           	
 25386                           i2l610:
 25387  00400A                     	line	67
 25388                           	
 25389                           i2l3237:
 25390  00400A                     ;main.c: 67:     INTCONbits.GIE = 1;
 25391                           	bsf	((c:4082)),c,7	;volatile
 25392  00400A  8EF2               	line	68
 25393                           	
 25394                           i2l611:
 25395  00400C                     	bcf int$flags,1,c ;clear compiler interrupt flag (level 2)
 25396  00400C  925A               	retfie f
 25397  00400E  0011               	opt stack 0
 25398                           GLOBAL	__end_of_irq
 25399                           	__end_of_irq:
 25400  004010                     	signat	_irq,89
 25401                           	global	_intt1_1ms
 25402                           
 25403 ;; *************** function _intt1_1ms *****************
 25404 ;; Defined at:
 25405 ;;		line 5 in file "timer1.c"
 25406 ;; Parameters:    Size  Location     Type
 25407 ;;		None
 25408 ;; Auto vars:     Size  Location     Type
 25409 ;;		None
 25410 ;; Return value:  Size  Location     Type
 25411 ;;                  1    wreg      void 
 25412 ;; Registers used:
 25413 ;;		wreg, status,2, status,0
 25414 ;; Tracked objects:
 25415 ;;		On entry : 0/0
 25416 ;;		On exit  : 0/0
 25417 ;;		Unchanged: 0/0
 25418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25419 ;;      Params:         0       0       0       0       0       0       0       0       0
 25420 ;;      Locals:         0       0       0       0       0       0       0       0       0
 25421 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25422 ;;      Totals:         0       0       0       0       0       0       0       0       0
 25423 ;;Total ram usage:        0 bytes
 25424 ;; Hardware stack levels used:    1
 25425 ;; This function calls:
 25426 ;;		Nothing
 25427 ;; This function is called by:
 25428 ;;		_irq
 25429 ;; This function uses a non-reentrant model
 25430 ;;
 25431                           psect	text80,class=CODE,space=0,reloc=2,group=0
 25432                           	file	"timer1.c"
 25433                           	line	5
 25434                           global __ptext80
 25435                           __ptext80:
 25436  003F7A                     psect	text80
 25437                           	file	"timer1.c"
 25438                           	line	5
 25439                           	global	__size_of_intt1_1ms
 25440                           	__size_of_intt1_1ms	equ	__end_of_intt1_1ms-_intt1_1ms
 25441  0000                     	
 25442                           _intt1_1ms:
 25443  003F7A                     ;incstack = 0
 25444                           	opt	stack 25
 25445                           	line	7
 25446                           	
 25447                           i2l2991:
 25448  003F7A                     ;timer1.c: 7:     TMR1H = ((65536-625)>>8) & 0x00FF;
 25449                           	movlw	low(0FDh)
 25450  003F7A  0EFD               	movwf	((c:4047)),c	;volatile
 25451  003F7C  6ECF               	line	8
 25452                           ;timer1.c: 8:     TMR1L = (65536-625) & 0x00FF;
 25453                           	movlw	low(08Fh)
 25454  003F7E  0E8F               	movwf	((c:4046)),c	;volatile
 25455  003F80  6ECE               	line	10
 25456                           	
 25457                           i2l2993:
 25458  003F82                     ;timer1.c: 10:     if(t1cont)
 25459                           	movf	((c:_t1cont)),c,w
 25460  003F82  5001               iorwf	((c:_t1cont+1)),c,w
 25461  003F84  1002               iorwf	((c:_t1cont+2)),c,w
 25462  003F86  1003               iorwf	((c:_t1cont+3)),c,w
 25463  003F88  1004               	btfsc	status,2
 25464  003F8A  B4D8               	goto	i2u131_41
 25465  003F8C  EFCA  F01F         	goto	i2u131_40
 25466  003F90  EFCC  F01F         
 25467                           i2u131_41:
 25468  003F94                     	goto	i2l1061
 25469  003F94  EFD3  F01F         i2u131_40:
 25470  003F98                     	line	11
 25471                           	
 25472                           i2l2995:
 25473  003F98                     ;timer1.c: 11:         --t1cont;
 25474                           	decf	((c:_t1cont)),c
 25475  003F98  0601               	movlw	0
 25476  003F9A  0E00               	subwfb	((c:_t1cont+1)),c
 25477  003F9C  5A02               	subwfb	((c:_t1cont+2)),c
 25478  003F9E  5A03               	subwfb	((c:_t1cont+3)),c
 25479  003FA0  5A04               	goto	i2l1063
 25480  003FA2  EFD6  F01F         	line	12
 25481                           ;timer1.c: 12:     else
 25482                           	
 25483                           i2l1061:
 25484  003FA6                     	line	13
 25485                           ;timer1.c: 13:         T1CONbits.TMR1ON = 0;
 25486                           	bcf	((c:4045)),c,0	;volatile
 25487  003FA6  90CD               	goto	i2l1063
 25488  003FA8  EFD6  F01F         	
 25489                           i2l1062:
 25490  003FAC                     	line	14
 25491                           	
 25492                           i2l1063:
 25493  003FAC                     	return	;funcret
 25494  003FAC  0012               	opt stack 0
 25495                           GLOBAL	__end_of_intt1_1ms
 25496                           	__end_of_intt1_1ms:
 25497  003FAE                     	signat	_intt1_1ms,89
 25498                           psect	mediumconst
 25499                           	db 0	; dummy byte at the end
 25500  007FFE  00                 	global	__mediumconst
 25501                           	GLOBAL	__activetblptr
 25502                           __activetblptr	EQU	2
 25503  0000                     	psect	intsave_regs,class=BIGRAM,space=1,noexec
 25504                           	file ""
 25505                           	line	0
 25506                           psect	text81,class=CODE,space=0,reloc=2,group=0
 25507                           global __ptext81
 25508                           __ptext81:
 25509  000000                     fp__salvar_receita:
 25510  000000                     	file ""
 25511                           	line	0
 25512                           psect	text81
 25513                           fp__dispLCD_num:
 25514  000000                     	file ""
 25515                           	line	0
 25516                           psect	text81
 25517                           fp__formatar_receitas:
 25518  000000                     	file ""
 25519                           	line	0
 25520                           psect	text81
 25521                           fp__dispLCD_str:
 25522  000000                     	file ""
 25523                           	line	0
 25524                           psect	text81
 25525                           fp__dispLCD_init:
 25526  000000                     	file ""
 25527                           	line	0
 25528                           psect	text81
 25529                           fp__dispLCD_clr:
 25530  000000                     	file ""
 25531                           	line	0
 25532                           psect	text81
 25533                           fp__dispLCD:
 25534  000000                     	file ""
 25535                           	line	0
 25536                           psect	text81
 25537                           fp__deletar_receita:
 25538  000000                     	file ""
 25539                           	line	0
 25540                           psect	text81
 25541                           fp__buscar_receita:
 25542  000000                     	PSECT	rparam,class=COMRAM,space=1,noexec
 25543                           	GLOBAL	__Lrparam
 25544                           	FNCONF	rparam,??,?
 25545                           	GLOBAL	___rparam_used
 25546                           	___rparam_used EQU 1
 25547  0000                     	GLOBAL	___param_bank
 25548                           	___param_bank EQU 0
 25549  0000                     GLOBAL	__Lparam, __Hparam
 25550                           GLOBAL	__Lrparam, __Hrparam
 25551                           __Lparam	EQU	__Lrparam
 25552  0000                     __Hparam	EQU	__Hrparam
 25553  0000                            psect   temp,common,ovrld,class=COMRAM,space=1
 25554                           	global	btemp
 25555                           btemp:
 25556  00005A                     	ds	1
 25557  00005A                     	global	int$flags
 25558                           	int$flags	set btemp
 25559  0000                     	global	wtemp8
 25560                           	wtemp8 set btemp+1
 25561  0000                     	global	ttemp5
 25562                           	ttemp5 set btemp+1
 25563  0000                     	global	ttemp6
 25564                           	ttemp6 set btemp+4
 25565  0000                     	global	ttemp7
 25566                           	ttemp7 set btemp+8
 25567  0000                     	end


Data Sizes:
    Strings     1043
    Constant    0
    Data        145
    BSS         70
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     32      89
    BANK0           160     95     143
    BANK1           256      0     110
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    S174$3$0	PTR unsigned char  size(2) Largest target is 0

    S576$2$0	PTR unsigned char  size(2) Largest target is 0

    S576$4$1	PTR const unsigned char  size(2) Largest target is 0

    S576$4$0	PTR const unsigned char  size(2) Largest target is 0

    S576$9$1	PTR unsigned char  size(2) Largest target is 0

    S576$9$0	PTR unsigned char  size(2) Largest target is 0

    S1542$7$1	PTR const unsigned char  size(2) Largest target is 0

    S1542$7$0	PTR const unsigned char  size(2) Largest target is 0

    S576$1$0	PTR const unsigned char  size(2) Largest target is 41
		 -> STR_51(CODE[14]), STR_50(CODE[40]), Wifi_cipsend@vtr(COMRAM[10]), Wifi_cipsend@str(COMRAM[20]), 
		 -> STR_49(CODE[15]), STR_48(CODE[14]), STR_47(CODE[17]), STR_46(CODE[15]), 
		 -> STR_45(CODE[21]), STR_44(CODE[14]), STR_43(CODE[18]), STR_42(CODE[11]), 
		 -> STR_41(CODE[11]), Wifi_connect@str(COMRAM[30]), STR_40(CODE[41]), STR_39(CODE[14]), 
		 -> STR_38(CODE[36]), STR_37(CODE[14]), STR_36(CODE[15]), STR_35(CODE[14]), 
		 -> STR_34(CODE[17]), STR_33(CODE[14]), 

    S174$0$1	PTR unsigned char  size(2) Largest target is 18
		 -> fila(COMRAM[18]), 

    S174$1$1	PTR unsigned char  size(2) Largest target is 16
		 -> main@vetor_aux(BANK0[16]), 

    S504$1$0	PTR const unsigned char  size(2) Largest target is 83
		 -> STR_27(CODE[78]), STR_26(CODE[62]), STR_15(CODE[81]), STR_4(CODE[83]), 

    S504$2$2	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_32(CODE[21]), STR_31(CODE[21]), STR_30(CODE[21]), STR_29(CODE[2]), 
		 -> STR_28(CODE[2]), STR_25(CODE[21]), STR_24(CODE[21]), STR_23(CODE[21]), 
		 -> STR_22(CODE[21]), STR_21(CODE[21]), STR_20(CODE[8]), STR_19(CODE[21]), 
		 -> STR_18(CODE[21]), STR_17(CODE[21]), STR_16(CODE[21]), STR_14(CODE[21]), 
		 -> STR_13(CODE[21]), STR_12(CODE[2]), STR_11(CODE[2]), STR_10(CODE[21]), 
		 -> STR_9(CODE[21]), STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), 
		 -> STR_5(CODE[21]), STR_3(CODE[21]), STR_2(CODE[2]), STR_1(CODE[2]), 

    aux	PTR unsigned char [10] size(2) Largest target is 2047
		 -> RAM(DATA[2047]), 

    S1542eusartT$search_string	PTR FTN(PTR const unsigned char ,PTR const unsigned char ,)int  size(2) Largest target is 2
		 -> search(), 

    eusart.search_string	PTR FTN(PTR const unsigned char ,PTR const unsigned char ,)int  size(2) Largest target is 2
		 -> search(), 

    S1542eusartT$init	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> initEUSART(), 

    eusart.init	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> initEUSART(), 

    S1542eusartT$txSTATUS	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> txStatusEUSART(), 

    eusart.txSTATUS	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> txStatusEUSART(), 

    S1542eusartT$tx	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> txEUSART(), 

    eusart.tx	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> txEUSART(), 

    S1542eusartT$rxResetERROR	PTR FTN()void  size(2) Largest target is 1
		 -> rxResetErrorEUSART(), 

    eusart.rxResetERROR	PTR FTN()void  size(2) Largest target is 1
		 -> rxResetErrorEUSART(), 

    S1542eusartT$rxERROR	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> rxErrorEUSART(), 

    eusart.rxERROR	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> rxErrorEUSART(), 

    S1542eusartT$rxSTATUS	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> rxStatusEUSART(), 

    eusart.rxSTATUS	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> rxStatusEUSART(), 

    S1542eusartT$rx	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> rxEUSART(), 

    eusart.rx	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> rxEUSART(), 

    initSerialIO@ptrOut	PTR unsigned char  size(2) Largest target is 1
		 -> main@vetorOut(BANK0[1]), 

    initSerialIO@ptrIn	PTR unsigned char  size(2) Largest target is 1
		 -> main@vetorIn(BANK0[1]), 

    ptrSerialOut	PTR unsigned char  size(2) Largest target is 1
		 -> NULL(NULL[0]), main@vetorOut(BANK0[1]), 

    ptrSerialIn	PTR unsigned char  size(2) Largest target is 1
		 -> NULL(NULL[0]), main@vetorIn(BANK0[1]), 

    main@ptr_939	PTR unsigned char  size(2) Largest target is 16
		 -> main@vetor_aux(BANK0[16]), 

    main@ptr_914	PTR unsigned char  size(2) Largest target is 16
		 -> main@vetor_aux(BANK0[16]), 

    main@pt	PTR unsigned char  size(2) Largest target is 16
		 -> main@vetor_aux(BANK0[16]), 

    main@ptr	PTR unsigned char  size(2) Largest target is 20
		 -> main@lema(BANK0[20]), 

    S576$cipsend	PTR FTN(PTR unsigned char ,PTR unsigned char ,)void  size(2) Largest target is 1
		 -> Wifi_cipsend(), 

    wifi.cipsend	PTR FTN(PTR unsigned char ,PTR unsigned char ,)void  size(2) Largest target is 1
		 -> Wifi_cipsend(), 

    S576$config_servidor	PTR FTN()void  size(2) Largest target is 1
		 -> Wifi_config_servidor(), 

    wifi.config_servidor	PTR FTN()void  size(2) Largest target is 1
		 -> Wifi_config_servidor(), 

    S576$scan	PTR FTN()void  size(2) Largest target is 1
		 -> Wifi_scan(), 

    wifi.scan	PTR FTN()void  size(2) Largest target is 1
		 -> Wifi_scan(), 

    S576$autoconnect	PTR FTN()void  size(2) Largest target is 1
		 -> Wifi_autoconnect(), 

    wifi.autoconnect	PTR FTN()void  size(2) Largest target is 1
		 -> Wifi_autoconnect(), 

    S576$ip	PTR FTN()void  size(2) Largest target is 1
		 -> Wifi_ip(), 

    wifi.ip	PTR FTN()void  size(2) Largest target is 1
		 -> Wifi_ip(), 

    S576$connect	PTR FTN(PTR const unsigned char ,PTR const unsigned char ,)void  size(2) Largest target is 1
		 -> Wifi_connect(), 

    wifi.connect	PTR FTN(PTR const unsigned char ,PTR const unsigned char ,)void  size(2) Largest target is 1
		 -> Wifi_connect(), 

    S576$mode	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Wifi_mode(), 

    wifi.mode	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Wifi_mode(), 

    S576$receive	PTR FTN(PTR unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> wifi_receive(), 

    wifi.receive	PTR FTN(PTR unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> wifi_receive(), 

    S576$send	PTR FTN(PTR const unsigned char ,)void  size(2) Largest target is 1
		 -> wifi_send(), 

    wifi.send	PTR FTN(PTR const unsigned char ,)void  size(2) Largest target is 1
		 -> wifi_send(), 

    S576$init	PTR FTN(long ,)void  size(2) Largest target is 1
		 -> wifi_init(), 

    wifi.init	PTR FTN(long ,)void  size(2) Largest target is 1
		 -> wifi_init(), 

    S504$clr	PTR FTN()void  size(2) Largest target is 1
		 -> dispLCD_clr(), 

    IHM.clr	PTR FTN()void  size(2) Largest target is 1
		 -> dispLCD_clr(), 

    S504$printv	PTR FTN(unsigned char ,unsigned char ,int ,unsigned char ,)void  size(2) Largest target is 1
		 -> dispLCD_num(), 

    IHM.printv	PTR FTN(unsigned char ,unsigned char ,int ,unsigned char ,)void  size(2) Largest target is 1
		 -> dispLCD_num(), 

    S504$printpos	PTR FTN(unsigned char ,unsigned char ,PTR const unsigned char ,)void  size(2) Largest target is 1
		 -> dispLCD(), 

    IHM.printpos	PTR FTN(unsigned char ,unsigned char ,PTR const unsigned char ,)void  size(2) Largest target is 1
		 -> dispLCD(), 

    S504$print	PTR FTN(PTR const unsigned char ,)void  size(2) Largest target is 1
		 -> dispLCD_str(), 

    IHM.print	PTR FTN(PTR const unsigned char ,)void  size(2) Largest target is 1
		 -> dispLCD_str(), 

    S504$init	PTR FTN()void  size(2) Largest target is 1
		 -> dispLCD_init(), 

    IHM.init	PTR FTN()void  size(2) Largest target is 1
		 -> dispLCD_init(), 

    dignum_apagar@ptrNum	PTR unsigned int  size(2) Largest target is 2
		 -> main@ciclos(BANK0[2]), main@por(BANK0[2]), main@num(BANK0[2]), 

    dignum_conc@ptrNum	PTR unsigned int  size(2) Largest target is 2
		 -> main@ciclos(BANK0[2]), main@por(BANK0[2]), main@num(BANK0[2]), 

    decodifica@d	PTR unsigned char  size(2) Largest target is 18
		 -> main@vetor_aux(BANK0[16]), main@auxPasso(BANK0[1]), printExec@passo(COMRAM[1]), fifo_print@comando(COMRAM[1]), 
		 -> fila(COMRAM[18]), 

    codifica@dado	PTR unsigned char  size(2) Largest target is 2047
		 -> fifo_add_control@c(COMRAM[1]), fifo_add_tempo@t(COMRAM[1]), fifo_add@passo(COMRAM[1]), RAM(DATA[2047]), 

    sp__fifo_adrs	PTR unsigned char  size(2) Largest target is 18
		 -> fila(COMRAM[18]), 

    salva_atuadores_init@pt	PTR unsigned char  size(2) Largest target is 4
		 -> salva_atuadores_init@condi_init(COMRAM[4]), 

    buscar_dado@data	PTR unsigned char  size(2) Largest target is 1
		 -> main@init_cond(BANK0[1]), 

    buscar_receita@data	PTR unsigned char  size(2) Largest target is 16
		 -> main@vetor_aux(BANK0[16]), 

    salvar_receita@data	PTR unsigned char  size(2) Largest target is 18
		 -> fila(COMRAM[18]), 

    S174$formatar	PTR FTN()void  size(2) Largest target is 1
		 -> formatar_receitas(), 

    EEPROM.formatar	PTR FTN()void  size(2) Largest target is 1
		 -> formatar_receitas(), 

    S174$livre	PTR FTN(PTR unsigned char ,)void  size(2) Largest target is 1
		 -> receita_livre(), 

    EEPROM.livre	PTR FTN(PTR unsigned char ,)void  size(2) Largest target is 1
		 -> receita_livre(), 

    S174$deletar	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> deletar_receita(), 

    EEPROM.deletar	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> deletar_receita(), 

    S174$buscar	PTR FTN(unsigned char ,PTR unsigned char ,)void  size(2) Largest target is 1
		 -> buscar_receita(), 

    EEPROM.buscar	PTR FTN(unsigned char ,PTR unsigned char ,)void  size(2) Largest target is 1
		 -> buscar_receita(), 

    S174$salvar	PTR FTN(unsigned char ,PTR unsigned char ,)void  size(2) Largest target is 1
		 -> salvar_receita(), 

    EEPROM.salvar	PTR FTN(unsigned char ,PTR unsigned char ,)void  size(2) Largest target is 1
		 -> salvar_receita(), 

    dispLCD_str@str	PTR const unsigned char  size(2) Largest target is 83
		 -> STR_27(CODE[78]), STR_26(CODE[62]), STR_15(CODE[81]), STR_4(CODE[83]), 

    dispLCD@str	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_32(CODE[21]), STR_31(CODE[21]), STR_30(CODE[21]), STR_29(CODE[2]), 
		 -> STR_28(CODE[2]), STR_25(CODE[21]), STR_24(CODE[21]), STR_23(CODE[21]), 
		 -> STR_22(CODE[21]), STR_21(CODE[21]), STR_20(CODE[8]), STR_19(CODE[21]), 
		 -> STR_18(CODE[21]), STR_17(CODE[21]), STR_16(CODE[21]), STR_14(CODE[21]), 
		 -> STR_13(CODE[21]), STR_12(CODE[2]), STR_11(CODE[2]), STR_10(CODE[21]), 
		 -> STR_9(CODE[21]), STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), 
		 -> STR_5(CODE[21]), STR_3(CODE[21]), STR_2(CODE[2]), STR_1(CODE[2]), 

    ler_sensor@ptr	PTR unsigned char  size(2) Largest target is 1
		 -> main@vetorIn(BANK0[1]), 

    set_passo@ptr	PTR unsigned char  size(2) Largest target is 1
		 -> main@vetorOut(BANK0[1]), 


Critical Paths under _main in COMRAM

    _main->_printExec
    _teclado_borda->_teclado_scan
    _setT1->___wmul
    _serialIOscan->_serialIObyteShift
    _salvar_receita->___awmod
    _salvar_dado->___awmod
    _salva_atuadores_init->_ler_atuador
    _printExec->_dispLCD_num
    _posAtual->_fifo_lerPos
    _dispLCD_num->_dignum_tam
    _manipula_atuadores_init->_alt_atuador
    _formatar_receitas->_EEPROM_write
    _fifo_print->___awdiv
    _fifo_delete->_fifo_alinharPrint
    _fifo_add_tempo->_fifo_alinharPrint
    _fifo_add_control->_fifo_alinharPrint
    _fifo_add->_fifo_alinharPrint
    _fifo_alinharPrint->_dignum_tam
    _dignum_tam->___awdiv
    _dispLCD_str->_dispLCD_lincol
    _dispLCD_init->_delay
    _dispLCD_clr->_dispLCD_instReg
    _dispLCD->_dispLCD_lincol
    _dispLCD_lincol->_dispLCD_instReg
    _dignum_conc->___wmul
    _dignum_apagar->___lwdiv
    _deletar_receita->_end_receita
    _buscar_receita->___awmod
    _buscar_dado->___awmod
    ___aldiv->___lmul
    _MCP4725->___aldiv
    _dac_write->_delay
    _dac_init->_delay
    _I2C_init->___lldiv

Critical Paths under _irq in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _irq in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _irq in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _irq in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _irq in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _irq in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _irq in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _irq in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _irq in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                98    98      0   76413
                                             30 COMRAM     2     2      0
                                              0 BANK0     95    95      0
                           _I2C_init
                            _MCP4725
                            ___aldiv
                            ___awmod
                             ___lmul
                             ___wmul
                      _addContCiclos
                    _addIndicePassos
                        _alt_atuador
                        _buscar_dado
                     _buscar_receita *
                         _decodifica
                              _delay
                    _deletar_receita *
                      _dignum_apagar
                        _dignum_conc
                            _dispLCD *
                        _dispLCD_clr *
                    _dispLCD_dataReg
                       _dispLCD_init
                     _dispLCD_lincol
                        _dispLCD_num *
                        _dispLCD_str *
                           _fifo_add
                     _fifo_add_ciclo
                   _fifo_add_control
                     _fifo_add_tempo
                          _fifo_adrs
                        _fifo_delete
                    _fifo_disponivel
                        _fifo_indice
               _fifo_indicePrint_dec
               _fifo_indicePrint_inc
                        _fifo_lerPos
                         _fifo_print
                           _fifo_tam
                  _formatar_receitas *
                          _getCiclos
                      _getContCiclos
                    _getIndicePassos
                       _initSerialIO
                     _init_atuadores
                        _ler_atuador
                         _ler_sensor
            _manipula_atuadores_init
                          _printExec
                    _resetContCiclos
                  _resetIndicePassos
               _salva_atuadores_init
                        _salvar_dado
                     _salvar_receita *
                       _serialIOscan
                              _setT1
                          _set_passo
                           _statusT1
                      _teclado_borda
                       _teclado_init
                        _timer1_init
 ---------------------------------------------------------------------------------
 (1) _timer1_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _teclado_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _teclado_borda                                        2     2      0     296
                                              5 COMRAM     2     2      0
                       _teclado_scan
 ---------------------------------------------------------------------------------
 (2) _teclado_scan                                         5     5      0     204
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (1) _statusT1                                             4     0      4       0
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _set_passo                                            5     3      2     274
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _setT1                                                4     0      4     478
                                              6 COMRAM     4     0      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _serialIOscan                                         6     6      0     205
                                              3 COMRAM     6     6      0
                  _serialIObyteShift
                       _serialIOload
 ---------------------------------------------------------------------------------
 (2) _serialIOload                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _serialIObyteShift                                    3     3      0     114
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _salvar_receita                                       6     4      2    1089
                                              6 COMRAM     6     4      2
                       _EEPROM_write
                            ___awmod (ARG)
                        _end_receita
                          _fifo_adrs (ARG)
 ---------------------------------------------------------------------------------
 (1) _salvar_dado                                          5     3      2    1219
                                              6 COMRAM     5     3      2
                       _EEPROM_write
                            ___awmod (ARG)
                        _end_receita
 ---------------------------------------------------------------------------------
 (1) _salva_atuadores_init                                 8     8      0     235
                                              3 COMRAM     8     8      0
                        _ler_atuador
 ---------------------------------------------------------------------------------
 (2) _ler_atuador                                          3     3      0      22
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _resetIndicePassos                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _resetContCiclos                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _printExec                                            5     4      1   12960
                                             25 COMRAM     5     4      1
                         _decodifica
                         _dignum_tam
                    _dispLCD_dataReg
                     _dispLCD_lincol
                        _dispLCD_num
                           _posAtual
 ---------------------------------------------------------------------------------
 (2) _posAtual                                             2     2      0      68
                                              1 COMRAM     2     2      0
                        _fifo_lerPos
                    _getIndicePassos
 ---------------------------------------------------------------------------------
 (3) _getIndicePassos                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _fifo_lerPos                                          1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _dispLCD_num                                         14    10      4    7167
                                             11 COMRAM    14    10      4
                            ___awdiv
                            ___awmod
                         _dignum_tam (ARG)
                    _dispLCD_dataReg
                     _dispLCD_lincol
                        _fifo_indice (ARG)
                           _fifo_tam (ARG)
                      _getContCiclos (ARG)
                    _getIndicePassos (ARG)
 ---------------------------------------------------------------------------------
 (1) _manipula_atuadores_init                              3     3      0     136
                                              3 COMRAM     3     3      0
                        _alt_atuador
 ---------------------------------------------------------------------------------
 (1) _ler_sensor                                           5     3      2     274
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _init_atuadores                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initSerialIO                                         5     0      5     294
                                              0 COMRAM     5     0      5
 ---------------------------------------------------------------------------------
 (1) _getContCiclos                                        2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _getCiclos                                            4     2      2      25
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _formatar_receitas                                    1     1      0     372
                                              2 COMRAM     1     1      0
                       _EEPROM_write
 ---------------------------------------------------------------------------------
 (1) _fifo_tam                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _fifo_print                                           9     9      0    7013
                                              8 COMRAM     9     9      0
                            ___awdiv
                            ___awmod
                         _decodifica
                    _dispLCD_dataReg
                     _dispLCD_lincol
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    1968
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _fifo_indicePrint_inc                                 7     7      0       0
                                              0 COMRAM     7     7      0
 ---------------------------------------------------------------------------------
 (1) _fifo_indicePrint_dec                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _fifo_indice                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _fifo_disponivel                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _fifo_delete                                          2     2      0    4395
                                             15 COMRAM     2     2      0
                        _alt_atuador
                           _codifica
                         _decodifica
                  _fifo_alinharPrint
 ---------------------------------------------------------------------------------
 (2) _decodifica                                           4     2      2    1426
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _alt_atuador                                          3     3      0      22
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _fifo_adrs                                            2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _fifo_add_tempo                                       1     1      0    3035
                                             15 COMRAM     1     1      0
                           _codifica
                  _fifo_alinharPrint
 ---------------------------------------------------------------------------------
 (1) _fifo_add_control                                     1     1      0    3013
                                             15 COMRAM     1     1      0
                           _codifica
                  _fifo_alinharPrint
 ---------------------------------------------------------------------------------
 (1) _fifo_add_ciclo                                       2     0      2     120
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _fifo_add                                             1     1      0    3035
                                             15 COMRAM     1     1      0
                           _codifica
                  _fifo_alinharPrint
 ---------------------------------------------------------------------------------
 (2) _fifo_alinharPrint                                    4     4      0    2357
                                             11 COMRAM     4     4      0
                         _dignum_tam
 ---------------------------------------------------------------------------------
 (2) _dignum_tam                                           3     1      2    2041
                                              8 COMRAM     3     1      2
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1364
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _codifica                                             5     3      2     590
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _dispLCD_str                                          4     2      2    1733
                                              7 COMRAM     4     2      2
                    _dispLCD_dataReg
                     _dispLCD_lincol
 ---------------------------------------------------------------------------------
 (1) _dispLCD_init                                         0     0      0    1871
                              _delay
                    _dispLCD_instReg
 ---------------------------------------------------------------------------------
 (1) _dispLCD_clr                                          0     0      0     176
                    _dispLCD_instReg
 ---------------------------------------------------------------------------------
 (1) _dispLCD                                              5     2      3    4971
                                              7 COMRAM     5     2      3
                    _dispLCD_dataReg
                     _dispLCD_lincol
 ---------------------------------------------------------------------------------
 (3) _dispLCD_lincol                                       5     4      1    1386
                                              2 COMRAM     5     4      1
                    _dispLCD_instReg
 ---------------------------------------------------------------------------------
 (4) _dispLCD_instReg                                      2     2      0     176
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _dispLCD_dataReg                                      2     2      0      44
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _dignum_conc                                          7     5      2     757
                                              6 COMRAM     7     5      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     463
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _dignum_apagar                                        2     0      2     540
                                              7 COMRAM     2     0      2
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     268
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _deletar_receita                                      4     4      0     939
                                              4 COMRAM     4     4      0
                       _EEPROM_write
                        _end_receita
 ---------------------------------------------------------------------------------
 (2) _EEPROM_write                                         2     1      1     348
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _buscar_receita                                       6     4      2     763
                                              6 COMRAM     6     4      2
                        _EEPROM_read
                            ___awmod (ARG)
                        _end_receita
 ---------------------------------------------------------------------------------
 (1) _buscar_dado                                          6     3      3     893
                                              6 COMRAM     6     3      3
                        _EEPROM_read
                            ___awmod (ARG)
                        _end_receita
 ---------------------------------------------------------------------------------
 (2) _end_receita                                          4     2      2     478
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _EEPROM_read                                          1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _addIndicePassos                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _addContCiclos                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              12     4      8     370
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) ___aldiv                                             14     6      8     452
                                             12 COMRAM    14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _MCP4725                                              2     0      2    5575
                                             26 COMRAM     2     0      2
                           _I2C_stop
                            ___aldiv (ARG)
                             ___lmul (ARG)
                           _dac_init
                          _dac_write
                              _delay
 ---------------------------------------------------------------------------------
 (2) _dac_write                                            5     3      2    1989
                                              3 COMRAM     5     3      2
                    _I2C_ack_receive
                             _I2C_tx
                              _delay
 ---------------------------------------------------------------------------------
 (2) _dac_init                                             0     0      0    1717
                    _I2C_ack_receive
                          _I2C_start
                             _I2C_tx
                              _delay
 ---------------------------------------------------------------------------------
 (2) _delay                                                3     1      2    1695
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _I2C_tx                                               1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _I2C_start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_ack_receive                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_init                                             4     0      4     564
                                             13 COMRAM     4     0      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     466
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _irq                                                  0     0      0       0
                          _intt1_1ms
 ---------------------------------------------------------------------------------
 (6) _intt1_1ms                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_init
     ___lldiv
   _MCP4725
     _I2C_stop
     ___aldiv (ARG)
       ___lmul (ARG)
     ___lmul (ARG)
     _dac_init (ARG)
       _I2C_ack_receive
       _I2C_start
       _I2C_tx
       _delay
     _dac_write (ARG)
       _I2C_ack_receive
       _I2C_tx
       _delay
     _delay (ARG)
   ___aldiv
     ___lmul (ARG)
   ___awmod
   ___lmul
   ___wmul
   _addContCiclos
   _addIndicePassos
   _alt_atuador
   _buscar_dado
     _EEPROM_read
     ___awmod (ARG)
     _end_receita (ARG)
   _buscar_receita *
     _EEPROM_read
     ___awmod (ARG)
     _end_receita (ARG)
   _decodifica *
   _delay *
   _deletar_receita *
     _EEPROM_write
     _end_receita
   _dignum_apagar *
     ___lwdiv
   _dignum_conc *
     ___wmul
   _dispLCD *
     _dispLCD_dataReg
     _dispLCD_lincol
       _dispLCD_instReg
   _dispLCD_clr *
     _dispLCD_instReg
   _dispLCD_dataReg *
   _dispLCD_init *
     _delay
     _dispLCD_instReg
   _dispLCD_lincol *
     _dispLCD_instReg
   _dispLCD_num *
     ___awdiv
     ___awmod
     _dignum_tam (ARG)
       ___awdiv
     _dispLCD_dataReg (ARG)
     _dispLCD_lincol (ARG)
       _dispLCD_instReg
     _fifo_indice (ARG)
     _fifo_tam (ARG)
     _getContCiclos (ARG)
     _getIndicePassos (ARG)
   _dispLCD_str *
     _dispLCD_dataReg
     _dispLCD_lincol
       _dispLCD_instReg
   _fifo_add *
     _codifica
     _fifo_alinharPrint
       _dignum_tam
         ___awdiv
   _fifo_add_ciclo *
   _fifo_add_control *
     _codifica
     _fifo_alinharPrint
       _dignum_tam
         ___awdiv
   _fifo_add_tempo *
     _codifica
     _fifo_alinharPrint
       _dignum_tam
         ___awdiv
   _fifo_adrs *
   _fifo_delete *
     _alt_atuador
     _codifica
     _decodifica
     _fifo_alinharPrint
       _dignum_tam
         ___awdiv
   _fifo_disponivel *
   _fifo_indice *
   _fifo_indicePrint_dec *
   _fifo_indicePrint_inc *
   _fifo_lerPos *
   _fifo_print *
     ___awdiv
     ___awmod
     _decodifica
     _dispLCD_dataReg
     _dispLCD_lincol
       _dispLCD_instReg
   _fifo_tam *
   _formatar_receitas *
     _EEPROM_write
   _getCiclos *
   _getContCiclos *
   _getIndicePassos *
   _initSerialIO *
   _init_atuadores *
   _ler_atuador *
   _ler_sensor *
   _manipula_atuadores_init *
     _alt_atuador
   _printExec *
     _decodifica
     _dignum_tam
       ___awdiv
     _dispLCD_dataReg
     _dispLCD_lincol
       _dispLCD_instReg
     _dispLCD_num
       ___awdiv
       ___awmod
       _dignum_tam (ARG)
         ___awdiv
       _dispLCD_dataReg (ARG)
       _dispLCD_lincol (ARG)
         _dispLCD_instReg
       _fifo_indice (ARG)
       _fifo_tam (ARG)
       _getContCiclos (ARG)
       _getIndicePassos (ARG)
     _posAtual
       _fifo_lerPos
       _getIndicePassos
   _resetContCiclos *
   _resetIndicePassos *
   _salva_atuadores_init *
     _ler_atuador
   _salvar_dado *
     _EEPROM_write
     ___awmod (ARG)
     _end_receita (ARG)
   _salvar_receita *
     _EEPROM_write
     ___awmod (ARG)
     _end_receita (ARG)
     _fifo_adrs (ARG)
   _serialIOscan *
     _serialIObyteShift
     _serialIOload
   _setT1 *
     ___wmul (ARG)
   _set_passo *
   _statusT1 *
   _teclado_borda *
     _teclado_scan
   _teclado_init *
   _timer1_init *

 _irq (ROOT)
   _intt1_1ms

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      6E       7       43.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     5F      8F       5       89.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     20      59       1       94.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     156      20        0.0%
DATA                 0      0     156       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Fri Dec 03 16:33:59 2021

              ??_fifo_add_control 0036                     dac_write@code 002A  
                ??_fifo_add_tempo 0036     __size_of_fifo_indicePrint_dec 0018  
   __size_of_fifo_indicePrint_inc 0066                                 _d 0013  
                     _SSPSTATbits 000FC7                                l13 3ED4  
                              l30 3088                                l31 3098  
                              l16 3E58                                l40 2C14  
                              l32 30A8                                l41 2C14  
                              l25 30DC                                l33 30B8  
                              l42 2B00                                l34 30C8  
                              l26 3058                                l19 416E  
                              l43 2B18                                l27 3136  
                              l35 3136                                l44 2B30  
                              l28 3068                                l45 2B48  
                              l29 3078                                l54 3FC8  
                              l70 2EB8                                l38 2BBA  
                              l46 2B60                                l55 3FB2  
                              l47 2B78                                l39 2AE8  
                              l56 3FDE                                l72 2EA6  
                              l48 2B90                                l57 3FDE  
                              l73 2EC4                                l49 2BA8  
                              l82 3D7A                                l74 2F04  
                              l90 3B1C                                l75 2F56  
                              l77 2F44                                l85 3ADE  
                              l93 3F44                                l78 2F62  
                              l86 3AC2                                l79 2F64  
                              l87 3B10                                l88 3ACA  
                              l96 3D0C                                l89 3AD2  
                              l97 3CF2                                l98 3D2C  
                              l99 3D2C                      ___awdiv@sign 002C  
         __end_of_dispLCD_dataReg 3D7C               ___wmul@multiplicand 0029  
                     __CFG_BORV$3 000000                      printExec@col 0043  
                    printExec@ind 0040                    salvar_dado@col 002D  
                    __CFG_CP0$OFF 000000                    salvar_dado@aux 002F  
                    __CFG_CP1$OFF 000000                __size_of_I2C_start 0018  
                    __CFG_CP2$OFF 000000                      __CFG_CP3$OFF 000000  
                             l102 26B6                               l111 2794  
                             l103 2720                               l112 2798  
                             l104 26D0                               l113 27B2  
                             l105 26FC                               l122 3890  
                             l114 27B2                               l106 2700  
                             l123 385C                               l115 2824  
                             l107 273E                               l124 3878  
                             l116 2824                               l108 274E  
                             l125 3888                               l301 42E8  
                             l109 2742                               l222 422C  
                             l126 38B2                               l310 295A  
                             l230 4322                               l223 422C  
                             l119 433A                               l127 38B2  
                             l311 282C                               l152 42B4  
                             l320 288C                               l312 2854  
                             l304 3462                               l400 2422  
                             l161 40E4                               l313 298C  
                             l321 289C                               l305 33D6  
                             l401 23C6                               l233 4346  
                             l170 3BDA                               l322 28AC  
                             l314 2858                               l330 2AE0  
                             l306 344A                               l410 2406  
                             l402 23CA                               l242 42FC  
                             l250 3374                               l171 3BDA  
                             l155 3F66                               l323 28BC  
                             l315 2868                               l331 29D6  
                             l307 3466                               l403 23CE  
                             l251 32FA                               l156 3F66  
                             l180 3CBA                               l420 3DC8  
                             l316 28F0                               l324 28CC  
                             l260 3582                               l332 2ADC  
                             l340 2A2A                               l412 2412  
                             l404 23D2                               l236 414C  
                             l252 33AE                               l164 3B4E  
                             l245 434C                               l157 3F74  
                             l181 3CDC                               l325 28DC  
                             l317 286C                               l261 3526  
                             l333 2A6E                               l341 2A3A  
                             l413 247C                               l405 23D6  
                             l253 33AE                               l165 3B7C  
                             l158 3F78                               l182 3CDC  
                             l318 2952                               l326 298C  
                             l262 35BC                               l342 2A4A  
                             l334 29DA                               l414 24BC  
                             l406 23DA                               l254 3314  
                             l174 412A                               l166 3B7C  
                             l423 406A                               l319 287C  
                             l263 353C                               l335 2AD8  
                             l343 2A5A                               l415 24B8  
                             l407 23DE                               l239 4310  
                             l255 332E                               l432 2D6A  
                             l440 2E60                               l352 397E  
                             l264 3552                               l336 29EA  
                             l344 2AE0                               l416 24E0  
                             l408 23E2                               l256 3348  
                             l177 40BC                               l169 3BAE  
                             l433 2E60                               l361 431A  
                             l353 397A                               l265 3568  
                             l337 29FA                               l329 29AE  
                             l417 24E0                               l193 417C  
                             l281 38D6                               l257 3362  
                             l426 3DF4                               l434 2DA2  
                             l354 3982                               l266 35BC  
                             l338 2A0A                               l370 432A  
                             l194 418C                               l282 391A  
                             l450 259E                               l274 36C2  
                             l427 3DD2                               l435 2DDC  
                             l347 39E6                               l339 2A1A  
                             l195 418C                               l283 3902  
                             l443 41DE                               l451 267E  
                             l275 3694                               l428 3E0A  
                             l436 2E00                               l348 39E2  
                             l364 4332                               l380 4244  
                             l284 38DA                               l452 2632  
                             l276 36B6                               l700 093C  
                             l620 009C                               l429 3E10  
                             l437 2E26                               l349 39EA  
                             l357 3C84                               l381 4244  
                             l373 3AAE                               l269 4306  
                             l285 38F8                               l277 36D6  
                             l621 1D3E                               l701 098A  
                             l438 2E42                               l358 3C88  
                             l374 3AA2                               l390 2260  
                             l286 3916                               l454 261C  
                             l446 2552                               l278 36DC  
                             l702 0C82                               l710 09B2  
                             l630 01C6                               l622 00A0  
                             l439 2E4A                               l367 4212  
                             l375 3AAA                               l391 225C  
                             l287 391A                               l295 41F8  
                             l447 252C                               l631 1E8A  
                             l711 09B6                               l703 0996  
                             l623 00BC                               l376 3AB6  
                             l392 22A6                               l384 21B4  
                             l448 2682                               l456 2628  
                             l800 1186                               l720 0B2C  
                             l712 09BA                               l704 099A  
                             l640 02C8                               l632 01E4  
                             l624 013E                               l377 3AB6  
                             l393 24C4                               l385 21D0  
                             l457 267A                               l449 25C4  
                             l801 118E                               l721 0C3A  
                             l713 0A7E                               l705 099E  
                             l641 0310                               l625 00D8  
                             l386 24CC                               l394 2396  
                             l458 2676                               l810 1462  
                             l802 1196                               l714 0C4C  
                             l722 0B6C                               l730 0B58  
                             l706 09A2                               l650 03A6  
                             l642 0334                               l626 0128  
                             l395 233A                               l387 21FE  
                             l459 2682                               l811 14D6  
                             l803 1210                               l731 0BCE  
                             l723 0B3C                               l715 0A8A  
                             l707 09A6                               l651 0446  
                             l643 0338                               l635 0266  
                             l627 015A                               l388 24C8  
                             l396 2336                               l820 157A  
                             l812 146A                               l804 121E  
                             l740 0D78                               l724 0B40  
                             l716 0ADE                               l708 09AA  
                             l652 0614                               l660 0534  
                             l644 0368                               l636 0234  
                             l628 01DC                               l397 2380  
                             l389 22BC                               l901 2102  
                             l821 157E                               l813 1472  
                             l805 12C8                               l733 0C18  
                             l725 0B44                               l709 09AE  
                             l661 0504                               l653 0452  
                             l645 0344                               l637 0282  
                             l629 0176                               l398 24C0  
                             l902 211A                               l830 1680  
                             l822 15E4                               l814 147A  
                             l806 12D4                               l750 0E56  
                             l742 0DD2                               l726 0B48  
                             l718 0AC0                               l662 0508  
                             l654 04A6                               l646 03A2  
                             l638 02A0                               l399 2480  
                             l903 218A                               l831 16FA  
                             l823 1612                               l815 1494  
                             l807 141E                               l719 0C3E  
                             l735 0C30                               l727 0B4C  
                             l671 05E0                               l663 050C  
                             l647 034C                               l639 02C4  
                             l904 218E                               l840 1864  
                             l832 168E                               l824 1670  
                             l816 14DA                               l808 1456  
                             l752 0E64                               l744 0DE0  
                             l736 0C68                               l728 0B50  
                             l680 06B8                               l664 0510  
                             l656 0488                               l648 0354  
                             l905 218E                               l841 18B2  
                             l833 1696                               l825 1668  
                             l817 1538                               l809 149C  
                             l761 0EF6                               l737 0CF4  
                             l729 0B54                               l681 0706  
                             l657 0606                               l673 05F8  
                             l665 0514                               l649 035C  
                             l930 3A48                               l922 4340  
                             l842 1978                               l850 18DA  
                             l834 16FE                               l826 16B0  
                             l818 1530                               l770 0F5C  
                             l754 0E98                               l746 0E14  
                             l738 0C76                               l690 07E6  
                             l682 06C0                               l674 0630  
                             l666 0518                               l658 04F4  
                             l931 3A50                               l851 18DE  
                             l843 18BE                               l835 17AE  
                             l827 1674                               l819 1560  
                             l763 0F04                               l739 0CF8  
                             l691 084E                               l683 06C8  
                             l675 063E                               l659 0602  
                             l667 051C                               l940 403C  
                             l860 1AC8                               l852 18E2  
                             l844 18C2                               l836 1836  
                             l828 1678                               l764 1058  
                             l780 0FF8                               l772 0F92  
                             l756 0EA6                               l748 0E22  
                             l692 0802                               l684 070A  
                             l676 0684                               l668 0520  
                             l925 3A38                               l861 1B4A  
                             l853 19EA                               l845 18C6  
                             l837 181C                               l829 167C  
                             l781 1002                               l765 0F0E  
                             l757 0EB6                               l693 0838  
                             l685 0778                               l677 06A8  
                             l669 0596                               l926 39FA  
                             l934 37BC                               l870 1CD4  
                             l862 1AE4                               l854 194C  
                             l846 18CA                               l838 1860  
                             l782 105C                               l758 100E  
                             l774 0FA0                               l694 086A  
                             l686 075E                               l678 06AC  
                             l927 3A16                               l935 3776  
                             l871 1CEE                               l863 1B34  
                             l855 19EE                               l847 18CE  
                             l839 1824                               l791 111A  
                             l783 10B8                               l775 0FAA  
                             l767 0F44                               l759 0EC2  
                             l695 08D2                               l687 07A2  
                             l679 06D4                               l960 424C  
                             l928 3A18                               l936 37D2  
                             l872 1CF2                               l864 1BC0  
                             l856 1A2A                               l848 18D2  
                             l784 11A2                               l696 0886  
                             l688 0766                               l961 424C  
                             l929 3A2E                               l937 37D6  
                             l881 1EEA                               l873 1D20  
                             l865 1BE4                               l857 1AAC  
                             l849 18D6                               l793 1126  
                             l785 10C4                               l777 0FE0  
                             l769 0F52                               l697 08BC  
                             l689 07A6                               l962 425A  
                             l874 2122                               l890 202A  
                             l882 1EF6                               l866 1BE8  
                             l858 1A46                               l794 120C  
                             l786 10C8                               l698 0914  
                             l963 425C                               l891 202E  
                             l883 1F82                               l875 1E92  
                             l867 1C4E                               l859 1A96  
                             l795 113A                               l787 10CC  
                             l779 0FEE                               l699 0938  
                             l876 2186                               l892 2056  
                             l868 1CAC                               l796 1148  
                             l788 10D0                               l957 3F0E  
                             l981 427C                               l893 205A  
                             l885 1F1C                               l877 1E96  
                             l869 1CA4                               l797 1156  
                             l789 1136                               l982 427C  
                             l894 2070                               l886 2002  
                             l878 1EA8                               l798 1174  
                             l983 428A                               l975 4198  
                             l895 2078                               l887 1FD8  
                             l879 1EF2                               l799 1182  
                             l984 428C                               l976 4198  
                             l896 20A0                               l888 1FFE  
                             l977 41AA                               l897 20AE  
                             l889 2006                               l978 41AA  
                             l898 20B2                               l899 2110  
                             l996 4262                               l997 4262  
                             l998 4274                               l999 4274  
                    __CFG_CPB$OFF 000000                               _IHM 00CF  
                    __CFG_CPD$OFF 000000                      __CFG_BOR$OFF 000000  
              deletar_receita@aux 002B                               _aux 015A  
                             _irq 0008           __size_of_buscar_receita 005E  
               fp__buscar_receita 0000           __end_of_dispLCD_instReg 2F66  
                    ___awmod@sign 002C                               prod 000FF3  
                             tosl 000FFD                               wreg 000FE8  
                    __CFG_FOSC$HS 000000                   __end_of_MCP4725 4170  
                 salvar_dado@data 002E                   salvar_dado@adrs 0031  
                alt_atuador@tecla 0029                      __CFG_LVP$OFF 000000  
                    ?_buscar_dado 002D                      __CFG_WDT$OFF 000000  
                            l1020 3214                              l1021 3190  
                            l1022 31FE                              l1030 3E96  
                            l1014 42F2                              l1023 31E8  
                            l1024 321A                              l1019 3158  
                            l1029 3E8C                              l1320 2C66  
                            l1072 42DA                              l1321 2D10  
                            l1322 2CA4                              l1250 4094  
                            l1066 41C4                              l1323 2C94  
                            l1324 2CB6                              l1260 380E  
                            l1325 2CBA                              l1261 3838  
                            l1069 42A0                              l1326 2CF8  
                            l1262 3848                              l1327 2D0C  
                            l1319 2C40                              l1280 34B8  
                            l1328 2D34                              l1281 34BC  
                            l1329 2D48                              l1282 34FA  
                            l1283 350E                              l1259 37EC  
                            l1284 351E                              l1277 350E  
                            l1278 34A6                              l1279 3496  
                            l1471 2F88                              l1480 3044  
                            l1472 2FA6                              l1481 3050  
                            l1473 3028                              l1474 2FD4  
                            l1490 3294                              l1475 2FC8  
                            l1491 32B6                              l1476 2FE6  
                            l1492 32C6                              l1484 323E  
                            l5101 4246                              l1741 375C  
                            l5021 2E90                              l1477 2FEA  
                            l1493 32E6                              l1485 3258  
                            l1742 370C                              l1478 3014  
                            l1494 32F2                              l1486 32CA  
                            l5111 425E                              l5103 3FAE  
                            l1743 3700                              l5031 2EDA  
                            l5023 2EA6                              l5015 2E64  
                            l1479 3024                              l1487 327E  
                            l1744 371E                              l1488 3272  
                            l5105 3FB2                              l1745 3722  
                            l5121 3D54                              l5113 3D30  
                            l5033 2EDC                              l5041 2F04  
                            l5025 2EB8                              l5017 2E66  
                            l5201 32E6                              l1489 3290  
                            l6001 241E                              l1746 374C  
                            l5107 3FC2                              l5211 3EAE  
                            l1747 375C                              l5123 3D56  
                            l5115 3D32                              l5051 2F44  
                            l5043 2F06                              l5035 2EF4  
                            l5027 2EC4                              l5019 2E7E  
                            l5131 3ABA                              l5203 32F2  
                            l6011 24A2                              l6003 2422  
                            l1748 3764                              l6101 3EDA  
                            l5109 4190                              l5213 3EB2  
                            l5205 3E98                              l5221 3E30  
                            l5125 3D58                              l5117 3D4A  
                            l5053 2F56                              l5045 2F1C  
                            l5037 2EF6                              l5029 2EC6  
                            l5133 3AC2                              l5141 3ADE  
                            l5061 2F78                              l6013 24AA  
                            l6005 2480                              l5301 3310  
                            l6103 3EE2                              l5215 3EC4  
                            l5207 3E9C                              l5223 3E34  
                            l5127 3D6E                              l5119 3D4C  
                            l5055 2F62                              l5047 2F1E  
                            l5039 2EFE                              l5135 3ACA  
                            l5143 3B10                              l5071 2FA6  
                            l5063 2F80                              l6015 24AC  
                            l6007 2492                              l6111 4012  
                            l5231 2686                              l5151 4322  
                            l6031 24EC                              l5311 3368  
                            l5303 332A                              l6105 3F0A  
                            l5217 3EC8                              l5209 3EA8  
                            l5225 3E40                              l6025 3D7E  
                            l5129 3D78                              l5049 2F2E  
                            l5137 3AD2                              l5081 2FEA  
                            l5073 2FAE                              l5065 2F88  
                            l5057 2F66                              l5161 3DEE  
                            l6017 24B2                              l6009 249E  
                            l6121 402C                              l6113 4022  
                            l5241 26C8                              l5233 269A  
                            l5153 41E2                              l6041 2548  
                            l6033 24FC                              l5313 336C  
                            l5305 3344                              l7001 1B1C  
                            l6107 3F0C                              l5227 3E48  
                            l5219 3E12                              l6211 3818  
                            l6203 37D8                              l6027 403E  
                            l5139 3ADA                              l5091 301A  
                            l5083 2FF0                              l5075 2FC0  
                            l5067 2F96                              l5059 2F6A  
                            l5163 3DF4                              l5411 2D52  
                            l5323 3522                              l5171 3220  
                            l6019 24CC                              l6131 4036  
                            l6123 402E                              l6115 4026  
                            l5251 2742                              l5243 26D0  
                            l5235 26AA                              l5155 41F8  
                            l6051 2598                              l6035 250C  
                            l6043 2552                              l5315 3370  
                            l5307 335E                              l7011 1BA2  
                            l7003 1B20                              l5229 4276  
                            l6221 2C40                              l6213 2C16  
                            l6205 37EC                              l5085 3006  
                            l5077 2FC8                              l5093 3028  
                            l5069 2F9E                              l5165 3E0A  
                            l5157 3DCA                              l5421 2DA2  
                            l5413 2D66                              l5325 357E  
                            l5341 29DA                              l5333 298E  
                            l5181 3258                              l5173 322E  
                            l6133 4038                              l6125 4030  
                            l6117 4028                              l6109 4010  
                            l5261 27A8                              l5253 2748  
                            l5245 26F6                              l5237 26B6  
                            l5149 431C                              l6061 25E4  
                            l6053 259E                              l6045 2562  
                            l6037 2526                              l6029 24E4  
                            l5309 3362                              l5317 3374  
                            l6141 3E5A                              l7101 1FF4  
                            l7021 1C14                              l7013 1BB6  
                            l7005 1B34                              l6301 0050  
                            l6231 2C8C                              l6223 2C4E  
                            l6215 2C1A                              l6207 37FA  
                            l5271 42AC                              l5511 4094  
                            l5095 3038                              l5087 300E  
                            l5079 2FD4                              l5167 3E10  
                            l5159 3DD2                              l5431 2DFC  
                            l5423 2DB2                              l5415 2D6A  
                            l5407 2D4A                              l5327 3582  
                            l5351 2A2A                              l5343 29EA  
                            l5335 29AA                              l5191 32AA  
                            l5183 326A                              l5175 3236  
                            l6135 403A                              l6127 4032  
                            l6119 402A                              l5263 2806  
                            l5247 2700                              l5255 274E  
                            l5239 26C0                              l6071 261C  
                            l6063 25F0                              l6055 25BA  
                            l6047 2572                              l6039 252C  
                            l6151 3E90                              l6143 3E62  
                            l7111 205A                              l7103 2006  
                            l7031 1C76                              l7023 1C44  
                            l7015 1BC0                              l7007 1B36  
                            l6311 007C                              l6303 0054  
                            l5521 34A6                              l5513 3468  
                            l6241 2CE2                              l6233 2C94  
                            l6225 2C5E                              l6217 2C28  
                            l6209 380E                              l5273 42AE  
                            l5265 42A4                              l5281 3F4E  
                            l5097 3044                              l5089 3014  
                            l5441 2E4A                              l5433 2E12  
                            l5425 2DC2                              l5417 2D7E  
                            l5409 2D4E                              l5353 2A3A  
                            l5345 29FA                              l5361 2A6E  
                            l5337 29AE                              l5193 32B6  
                            l5185 3272                              l5177 323E  
                            l5169 321C                              l6129 4034  
                            l5601 2B14                              l5257 2780  
                            l5249 2720                              l6081 266C  
                            l6073 2628                              l6065 25FA  
                            l6049 257E                              l6057 25C4  
                            l6161 3776                              l6137 428E  
                            l6153 3E96                              l6145 3E68  
                            l7121 20A4                              l7113 206C  
                            l7105 2020                              l7041 1CCA  
                            l7033 1C84                              l7025 1C4E  
                            l7017 1BDA                              l7009 1B4A  
                            l6401 02F2                              l6321 00A4  
                            l6313 0084                              l6305 0070  
                            l5531 34FA                              l5523 34BC  
                            l5515 3478                              l6251 2D20  
                            l6243 2CF2                              l6235 2CA4  
                            l6227 2C66                              l6219 2C38  
                            l5275 42B4                              l5267 42A8  
                            l5291 3F5C                              l5283 3F52  
                            l5507 406C                              l5371 2844  
                            l5099 3050                              l5443 2E4C  
                            l5435 2E26                              l5427 2DDC  
                            l5419 2D8E                              l5355 2A4A  
                            l5347 2A0A                              l5339 29C6  
                            l5195 32BC                              l5187 327E  
                            l5179 324C                              l5611 2B40  
                            l5603 2B18                              l5259 2798  
                            l5451 41DE                              l6067 2602  
                            l6059 25D4                              l6075 2632  
                            l6163 37B6                              l6155 3766  
                            l6139 42CA                              l6147 3E78  
                            l6083 42EA                              l6091 41BC  
                            l7131 2106                              l7123 20B2  
                            l7115 2078                              l7107 202E  
                            l7051 1D16                              l7043 1CD4  
                            l7035 1C9C                              l7027 1C56  
                            l7019 1BE8                              l6411 0344  
                            l6403 0306                              l6331 00D8  
                            l6323 00B8                              l6315 008C  
                            l6307 0074                              l5533 3504  
                            l5525 34C6                              l5517 348E  
                            l6253 2D34                              l6245 2CF8  
                            l6237 2CBA                              l6229 2C76  
                            l5269 42AA                              l5701 3B92  
                            l5293 3F60                              l5285 3F54  
                            l5277 3F48                              l5541 3700  
                            l5509 4088                              l5381 289C  
                            l5373 2858                              l5437 2E3A  
                            l5429 2DEC                              l5357 2A5A  
                            l5349 2A1A                              l5189 3294  
                            l5197 32CA                              l5621 2B60  
                            l5613 2B44                              l5605 2B28  
                            l5445 41C8                              l6077 2644  
                            l6069 2610                              l5461 3A26  
                            l5453 433C                              l6165 37BC  
                            l6157 376A                              l6149 3E88  
                            l6093 41BE                              l6085 41AC  
                            l7125 20C2                              l7133 2110  
                            l7117 2096                              l7109 204C  
                            l7053 1D20                              l7045 1CE6  
                            l7029 1C66                              l7037 1CAC  
                            l6501 06C8                              l6413 034C  
                            l6421 0368                              l6405 0310  
                            l6341 012A                              l6333 0104  
                            l6325 00BC                              l7061 1D3E  
                            l6317 0094                              l6309 0078  
                            l5527 34E4                              l5519 3496  
                            l6255 2D48                              l6247 2D02  
                            l6239 2CC4                              l5295 40BE  
                            l5711 3BC6                              l5703 3B96  
                            l5287 3F56                              l5279 3F4A  
                            l5551 3746                              l5543 370C  
                            l5535 36DE                              l5391 28EC  
                            l5383 28AC                              l5375 286C  
                            l5367 2828                              l5439 2E3E  
                            l5359 2A6A                              l5199 32DA  
                            l5631 2B8C                              l5623 2B70  
                            l5615 2B48                              l5607 2B2C  
                            l5447 41CC                              l6079 2650  
                            l5463 3A2E                              l5455 39EE  
                            l6167 37D2                              l6159 376E  
                            l5471 3138                              l6095 41C0  
                            l6087 41AE                              l7135 211E  
                            l7127 20E8                              l7119 20A0  
                            l7071 1EB4                              l7055 1D2C  
                            l7047 1CF2                              l7039 1CBE  
                            l6511 075E                              l6503 06D0  
                            l6431 03F2                              l6423 03A6  
                            l6415 0354                              l6407 032A  
                            l7063 1E8A                              l6351 015E  
                            l6335 0110                              l6327 00C0  
                            l6343 013E                              l6319 00A0  
                            l5529 34F4                              l5561 4162  
                            l6249 2D10                              l5297 40E4  
                            l5705 3BAA                              l5289 3F58  
                            l5721 3C9E                              l5553 374C  
                            l5545 3722                              l5537 36E6  
                            l5385 28BC                              l5377 287C  
                            l5393 28F0                              l5369 282C  
                            l5641 2BAE                              l5633 2B90  
                            l5625 2B74                              l5617 2B58  
                            l5609 2B30                              l5801 38FA  
                            l5449 41D8                              l5713 410C  
                            l5457 39FC                              l5465 3A38  
                            l5481 3178                              l5473 3140  
                            l6097 41C2                              l6089 41B2  
                            l7129 2102                              l7081 1F06  
                            l7073 1EC4                              l7065 1E96  
                            l7137 2122                              l7057 1D32  
                            l7049 1CF8                              l6601 0A42  
                            l6521 07A6                              l6513 0766  
                            l6505 06D4                              l6441 046A  
                            l6433 040A                              l6425 03B8  
                            l6417 035C                              l6409 0338  
                            l6361 01B2                              l6353 0172  
                            l6345 0142                              l6337 0114  
                            l6329 00D4                              l6099 3ED6  
                            l5715 4098                              l5707 3BAE  
                            l5731 3CC8                              l5723 3CA2  
                            l5555 3752                              l5547 3728  
                            l5539 36F8                              l5395 2956  
                            l5387 28CC                              l5379 288C  
                            l5811 33C0                              l5643 2BB2  
                            l5635 2BA0                              l5627 2B78  
                            l5619 2B5C                              l5803 3902  
                            l5299 32F6                              l5467 3A4A  
                            l5459 3A10                              l5571 3088  
                            l5563 3054                              l5491 31EA  
                            l5483 318C                              l5475 3154  
                            l7091 1F92                              l7083 1F1C  
                            l7075 1ED6                              l7067 1E9E  
                            l7059 1D3A                              l6611 0AC0  
                            l6603 0A74                              l6531 07E6  
                            l6523 07C4                              l6515 076A  
                            l6507 070A                              l6451 04D6  
                            l6443 0488                              l6435 043C  
                            l6427 03C0                              l6419 0364  
                            l6371 0210                              l6363 01C6  
                            l6355 0176                              l6347 0156  
                            l6339 0128                              l6291 001A  
                            l5557 414E                              l5741 4214  
                            l5717 40AA                              l5709 3BC4  
                            l5725 3CB6                              l5549 373E  
                            l5661 3CF2                              l5653 3F10  
                            l5389 28DC                              l5397 295A  
                            l5805 42DC                              l5813 33D0  
                            l5821 3462                              l5901 21C4  
                            l5733 4170                              l5645 2BB6  
                            l5637 2BA4                              l5629 2B88  
                            l5469 3A50                              l5581 30D8  
                            l5573 3098                              l5565 3058  
                            l5493 31FE                              l5485 3190  
                            l5477 3158                              l7093 1FA2  
                            l7085 1F28                              l7077 1EEA  
                            l7069 1EA8                              l6701 0E98  
                            l6621 0B1A                              l6613 0ACC  
                            l6605 0A7E                              l6541 0820  
                            l6533 07EA                              l6525 07C8  
                            l6517 0774                              l6509 0752  
                            l6461 0534                              l6453 04E2  
                            l6445 0494                              l6437 0446  
                            l6429 03E8                              l6381 024C  
                            l6373 0222                              l6365 01C8  
                            l6357 01A2                              l6349 015A  
                            l6293 003E                              l5559 415E  
                            l5743 4226                              l5727 3CBA  
                            l5719 3C8C                              l5663 3D02  
                            l5655 3F20                              l5671 384A  
                            l5831 39C8                              l5823 3986  
                            l5807 42E8                              l5815 33D6  
                            l5911 21F6                              l5903 21CA  
                            l5735 4178                              l5751 4138  
                            l5639 2BA8                              l5591 2AE8  
                            l5647 2BBA                              l5575 30A8  
                            l5567 3068                              l5583 30DC  
                            l5495 3200                              l5487 31BC  
                            l5479 3174                              l7095 1FA6  
                            l7087 1F78                              l7079 1EF6  
                            l6711 0EE8                              l6703 0EA6  
                            l6631 0BCE                              l6623 0B2C  
                            l6615 0ADE                              l6607 0A8A  
                            l6551 0852                              l6543 0824  
                            l6535 07FE                              l6527 07CE  
                            l6519 0778                              l6463 0596  
                            l6455 04F4                              l6471 0606  
                            l6447 04A6                              l6439 0452  
                            l6391 0296                              l6383 0250  
                            l6375 0228                              l6359 01AE  
                            l6367 01DC                              l6295 0044  
                            l6287 0012                              l5761 4348  
                            l5729 3CC6                              l5665 3D06  
                            l5657 3CE0                              l5681 3888  
                            l5673 384E                              l5833 39CA  
                            l5825 3996                              l5841 393E  
                            l5817 33F6                              l5809 33B0  
                            l5921 2228                              l5913 21FE  
                            l5905 21D0                              l5737 417C  
                            l5753 4140                              l5593 2AF8  
                            l5745 4342                              l5577 30B8  
                            l5569 3078                              l5489 31E8  
                            l5497 3214                              l7097 1FCE  
                            l7089 1F82                              l6801 124A  
                            l6721 0F44                              l6713 0EF6  
                            l6705 0EAC                              l6641 0C42  
                            l6633 0BFA                              l6625 0B58  
                            l6617 0AF6                              l6609 0AA2  
                            l6561 0886                              l6553 0866  
                            l6545 0838                              l6537 0802  
                            l6529 07E2                              l6481 063E  
                            l6473 060A                              l6465 05C2  
                            l6457 0520                              l6449 04BE  
                            l6393 02A0                              l6385 025C  
                            l6377 0234                              l6369 01E4  
                            l6297 0048                              l6289 0016  
                            ?_irq 0027                              l5667 3D0C  
                            l5659 3CE4                              l5675 385C  
                            l5683 3890                              l5827 39A6  
                            l5835 39E6                              l5851 3C38  
                            l5843 394C                              l5819 344A  
                            l5923 222A                              l5931 2260  
                            l5915 220E                              l5907 21E4  
                            l5739 4186                              l5755 414C  
                            l5747 412C                              l5763 42FE  
                            l5595 2AFC                              l5771 3688  
                            l5691 3B4A                              l5579 30C8  
                            l5499 321A                              l7099 1FD8  
                            l6811 12E6                              l6803 1284  
                            l6731 0FA0                              l6723 0F52  
                            l6715 0F04                              l6707 0EB6  
                            l6651 0C7E                              l6635 0C18  
                            l6627 0B68                              l6619 0B0E  
                            l6643 0C4C                              l6571 08BE  
                            l6563 0898                              l6555 086A  
                            l6547 083A                              l6539 0814  
                            l6491 0684                              l6483 0642  
                            l6467 05E0                              l6459 0530  
                            l6475 0614                              l6395 02BA  
                            l6379 023E                              l6387 0266  
                            l6299 004C                              l5669 4334  
                            l5677 386E                              l5829 39B4  
                            l5853 3C48                              l5861 3C84  
                            l5845 3960                              l5837 391E  
                            l5941 22AE                              l5933 2270  
                            l5925 2240                              l5917 2212  
                            l5909 21E6                              l5749 4132  
                            l5757 4308                              l5597 2B00  
                            l5589 2AE4                              l5781 36BA  
                            l5773 368C                              l5765 3650  
                            l5693 3B4E                              l5685 3B20  
                            l6901 168E                              l6821 1342  
                            l6813 12F8                              l6805 12BE  
                            l6741 0FF8                              l6733 0FAA  
                            l6725 0F5C                              l6717 0F0E  
                            l6709 0EC2                              l6661 0D6E  
                            l6645 0C68                              l6637 0C30  
                            l6629 0B6C                              l6653 0C82  
                            l6581 092E                              l6565 08A4  
                            l6557 086E                              l6573 08D2  
                            l6549 084E                              l6493 069E  
                            l6485 0654                              l6477 0630  
                            l6469 05F8                              l6397 02C8  
                            l6389 0282                              l5679 3878  
                            l5863 4312                              l5855 3C56  
                            l5847 3962                              l5839 392E  
                            l5871 41FA                              l5951 22E8  
                            l5943 22B6                              l5935 228A  
                            l5927 2250                              l5919 2222  
                            l5599 2B10                              l5791 38BE  
                            l5759 42F4                              l5775 3694  
                            l5783 36C2                              l5767 3660  
                            l5695 3B66                              l5687 3B32  
                            l6911 16FE                              l6903 1696  
                            l6831 1430                              l6823 136E  
                            l6815 1324                              l6807 12C8  
                            l6751 1064                              l6743 1002  
                            l6735 0FD2                              l6727 0F84  
                            l6719 0F36                              l6671 0DD2  
                            l6663 0D78                              l6655 0CF8  
                            l6647 0C6C                              l6639 0C3E  
                            l6591 09BA                              l6583 093C  
                            l6575 08F6                              l6567 08A8  
                            l6559 0882                              l6495 06AC  
                            l6487 0666                              l6479 0634  
                            l6399 02CC                              l5865 4316  
                            l5857 3C6A                              l5849 397E  
                            l5873 4212                              l5881 3A62  
                            l5961 231A                              l5953 22EC  
                            l5937 228C                              l5929 2256  
                            l5945 22BC                              l5793 38D2  
                            l5785 36D6                              l5777 36AC  
                            l5769 3680                              l5697 3B68  
                            l5689 3B36                              l6921 17BC  
                            l6913 171C                              l6905 16A2  
                            l6841 1472                              l6833 1434  
                            l6825 13A8                              l6817 132E  
                            l6809 12D4                              l6761 10E4  
                            l6753 1082                              l6745 100A  
                            l6737 0FE0                              l6729 0F92  
                            l6681 0E14                              l6673 0DE0  
                            l6665 0DA4                              l6657 0D16  
                            l6649 0C76                              l6593 09DE  
                            l6585 095A                              l6577 090A  
                            l6569 08BC                              l6497 06B8  
                            l6489 067A                              l5699 3B80  
                            l5859 3C6C                              l5867 432C  
                            l5891 423E                              l5883 3A9C  
                            l5971 2364                              l5963 232A  
                            l5955 22FC                              l5947 22CC  
                            l5939 22A6                              l5875 4324  
                            l5795 38DA                              l5787 36DC  
                            l5779 36B6                              l6931 1828  
                            l6923 17EA                              l6915 1748  
                            l6907 16AC                              l6851 14DA  
                            l6843 147A                              l6835 1456  
                            l6827 13E2                              l6819 1338  
                            l6771 113E                              l6763 1104  
                            l6755 10AE                              l6739 0FEE  
                            l6747 100E                              l6691 0E56  
                            l6683 0E22                              l6675 0DE6  
                            l6667 0DAE                              l6659 0D42  
                            l6595 09E6                              l6587 0980  
                            l6579 0914                              l6499 06C0  
                            l5869 4332                              l5885 3AA2  
                            l5973 2366                              l5965 2330  
                            l5957 2302                              l5949 22DC  
                            l5981 2396                              l5893 2192  
                            l5877 432A                              l5797 38EE  
                            l5789 38B6                              l6941 18A8  
                            l6933 1832                              l6925 1810  
                            l6917 17A4                              l6909 16B0  
                            l6861 1528                              l6853 14E2  
                            l6845 148C                              l6837 1462  
                            l6829 141E                              l6781 1174  
                            l6773 1148                              l6765 1126  
                            l6757 10B8                              l6749 105C  
                            l6693 0E64                              l6685 0E28  
                            l6677 0DF0                              l6669 0DC4  
                            l6597 0A20                              l6589 098A  
                            l5887 3AAE                              l5879 3A52  
                            l5991 23EC                              l5983 23A6  
                            l5975 2380                              l5959 2304  
                            l5967 233A                              l5895 21A2  
                            l5799 38F8                              l6951 194C  
                            l6943 18B2                              l6927 181C  
                            l6935 1836                              l6919 17AE  
                            l6871 1572                              l6855 14F2  
                            l6863 1538                              l6847 1498  
                            l6839 146A                              l6791 119E  
                            l6783 1178                              l6775 114C  
                            l6767 112C                              l6759 10D0  
                            l6695 0E6A                              l6687 0E32  
                            l6679 0E06                              l6599 0A2A  
                            l5889 422E                              l5993 23FA  
                            l5985 23B6                              l5977 2388  
                            l5969 234A                              l5897 21A6  
                            l6961 1A0C                              l6953 196A  
                            l6945 18E2                              l6937 1864  
                            l6929 1824                              l6881 15EA  
                            l6873 157E                              l6865 154A  
                            l6857 1502                              l6849 149C  
                            l6785 1186                              l6777 1156  
                            l6769 113A                              l6793 11A2  
                            l6697 0E74                              l6689 0E48  
                            l5995 2406                              l5987 23E2  
                            l5979 2390                              l5899 21B4  
                            l6971 1A42                              l6963 1A12  
                            l6955 1974                              l6947 1902  
                            l6939 1882                              l6891 163A  
                            l6883 1608                              l6875 15AA  
                            l6867 1556                              l6859 1510  
                            l6795 1210                              l6787 118E  
                            l6779 116A                              l6699 0E8A  
                            l5997 2412                              l5989 23EA  
                            l6981 1A96                              l6973 1A46  
                            l6965 1A26                              l6949 1942  
                            l6957 1978                              l6893 1648  
                            l6885 1612                              l6877 15DA  
                            l6869 1560                              l6797 1214  
                            l6789 1196                              l5999 2418  
                            l6991 1AC8                              l6983 1A98  
                            l6975 1A72                              l6967 1A2A  
                            l6959 19EE                              l6895 1660  
                            l6887 161A                              l6879 15E4  
                            l6799 121E                              l7951 0550  
                            l6993 1ACC                              l6977 1A7E  
                            l6969 1A2E                              l6985 1AAC  
                            l6897 1680                              l6889 162A  
                            l7961 1022                              l7953 06E8  
                            l6995 1AE0                              l6987 1AB0  
                            l6979 1A82                              l7971 198C  
                            l6899 1684                              l7963 11B6  
                            l7955 078C                              l7981 2BCE  
                            l7973 1D54                              l6997 1AE4  
                            l6989 1AC4                              l7965 14B0  
                            l7957 0B88                              l7949 037C  
                            l7991 296E                              l7983 2436  
                            l7975 2138                              l6999 1B10  
                            l7967 16C4                              l7959 0C96  
         __end_of_getIndicePassos 4324                              l7993 3AF2  
                            l7985 2A8A                              l7977 30F0  
                            l7969 184A                              l7987 3596  
                            l7979 3388                              l7989 290C  
                            STR_1 7FFC                              STR_2 7DB8  
                            STR_3 7DE4                              STR_4 7BEB  
                            STR_5 7F1F                              STR_6 7EA1  
                            STR_7 7EF5                              STR_8 7E8C  
                            STR_9 7E38                              u4000 373E  
                            u4001 373A                              u4010 3D28  
                            u4011 3D24                              u4100 4226  
                            u4020 386E                              u3300 2F78  
                            u4101 4222                              u4021 386A  
                            u3301 2F74                              u4030 38AE  
                            u3310 2F96                              u4110 36AC  
                            u4031 38AA                              u3311 2F92  
                            u4111 36A8                              u3320 2FC0  
                            u3400 3E06                              u4200 39A6  
                            u4120 36D2                              u4040 3B46  
                            u5000 069E                              u3321 2FBC  
                            u3401 3E02                              u4201 39A2  
                            u4121 36CE                              u4041 3B42  
                            u5001 069A                              u3250 2E90  
                            u3330 2FE2                              u4210 392E  
                            u3410 322E                              u4130 38CE  
                            u4050 3B78                              u3251 2E8C  
                            u3331 2FDE                              u4211 392A  
                            u3411 322A                              u4131 38CA  
                            u4051 3B74                              u4060 3BA6  
                            u3260 2EA2                              u3340 3006  
                            u4220 393E                              u3420 324C  
                            u4300 21F6                              u4140 38EE  
                            u3500 2698                              u5100 092E  
                            u5020 07DE                              u4061 3BA2  
                            u3261 2E9E                              u3341 3002  
                            u4221 393A                              u3421 3248  
                            u4301 21F2                              u4141 38EA  
                            u5101 092A                              u5021 07DA  
                            u4070 3BD6                              u3270 2EDA  
                            u3350 3038                              u4230 3C48  
                            u3430 326A                              u4310 220E  
                            u4150 3912                              u3510 26AA  
                            u5030 07FA                              u4071 3BD2  
                            u3271 2ED6                              u3351 3034  
                            u4231 3C44                              u3431 3266  
                            u4311 220A                              u4151 390E  
                            u3511 26A6                              u5031 07F6  
                            u3360 425A                              u4080 3CB2  
                            u3280 2F2E                              u4160 33C0  
                            u4240 420C                              u3440 328C  
                            u4400 23A6                              u4320 2222  
                            u3520 26F6                              u3600 3324  
                            u6000 1F92                              u5200 0BFA  
                            u5040 0834                              u3361 4256  
                            u4081 3CAE                              u3281 2F2A  
                            u4161 33BC                              u4241 4206  
                            u3441 3288                              u4401 23A2  
                            u4321 221E                              u3521 26F2  
                            u3601 331E                              u6001 1F8E  
                            u5201 0BF6                              u5041 0830  
                            u3370 3FDA                              u4090 3CD8  
                            u3290 2F40                              u4170 33D0  
                            u4250 420E                              u3450 32AA  
                            u4410 23B6                              u4330 2250  
                            u3530 273A                              u3610 333E  
                            u6010 1FA2                              u5210 0C64  
                            u5050 084A                              u5018 07B0  
                            u3371 3FD6                              u4091 3CD4  
                            u3291 2F3C                              u4171 33CC  
                            u3451 32A6                              u4411 23B2  
                            u4331 224C                              u3531 2736  
                            u3611 3338                              u6011 1F9E  
                            u5211 0C60                              u5051 0846  
                            u5019 07C4                              u3380 41A6  
                            u4180 33F6                              u4260 3A62  
                            u3460 32DA                              u4420 23FA  
                            u4340 2270                              u3540 2780  
                            u4500 2598                              u3620 3358  
                            u6020 2020                              u5300 0EE8  
                            u5140 0A42                              u5060 0862  
                            u3381 41A2                              u4181 33F2  
                            u4261 3A5E                              u3461 32D6  
                            u4421 23F6                              u4341 226C  
                            u3541 277C                              u4501 2594  
                            u3621 3352                              u6021 201C  
                            u5301 0EE4                              u5141 0A3E  
                            u5061 085E                              u3390 4270  
                            u4190 3996                              u3630 3536  
                            u3710 29A6                              u4270 3A9C  
                            u4430 2492                              u4350 22CC  
                            u3550 2790                              u4510 25D4  
                            u3606 3326                              u6030 204C  
                            u5310 0F36                              u5118 0946  
                            u5070 087E                              u3391 426C  
                            u4191 3992                              u3631 3530  
                            u3711 29A2                              u4271 3A98  
                            u4431 248E                              u4351 22C8  
                            u3551 278C                              u4511 25D0  
                            u6031 2048                              u5311 0F32  
                            u5119 095A                              u5071 087A  
                            u3480 428A                              u3800 2E12  
                            u3720 29C6                              u4280 423E  
                            u4440 24DC                              u4360 22DC  
                            u3560 27A8                              u4520 25E4  
                            u3616 3340                              u6040 206C  
                            u5320 0F84                              u5160 0AA2  
                            u5128 096C                              u5080 08B8  
                            u3481 4286                              u3801 2E0E  
                            u3705 357A                              u3721 29C2  
                            u4281 423A                              u4441 24D8  
                            u4361 22D8                              u3561 27A4  
                            u4521 25E0                              u6041 2068  
                            u5321 0F80                              u5161 0A9E  
                            u5129 0980                              u5081 08B4  
                            u3730 2844                              u3810 2E36  
                            u3650 354C                              u4370 22FC  
                            u4290 21C4                              u3570 2820  
                            u3490 2696                              u4530 2610  
                            u4450 24FC                              u3626 335A  
                            u6050 2096                              u5330 0FD2  
                            u5170 0ABC                              u5138 09F0  
                            u5090 08CE                              u3475 3E1E  
                            u3731 2840                              u3811 2E32  
                            u3651 3546                              u4371 22F8  
                            u4291 21C0                              u3571 281C  
                            u3491 2690                              u4531 260C  
                            u4451 24F8                              u6051 2092  
                            u5331 0FCE                              u5171 0AB8  
                            u5139 0A20                              u5091 08CA  
                            u4700 2CB2                              u3580 3F74  
                            u3820 2E5C                              u3740 2D62  
                            u4380 232A                              u4540 2644  
                            u4460 250C                              u3900 31BC  
                            u6060 20C2                              u5420 12E6  
                            u5260 0DC4                              u5228 0D02  
                            u5180 0AF6                              u4701 2CAE  
                            u3581 3F70                              u3821 2E58  
                            u3741 2D5E                              u3645 3538  
                            u4381 2326                              u4541 2640  
                            u4461 2508                              u3901 31B8  
                            u6061 20BE                              u5421 12E2  
                            u5261 0DC0                              u5229 0D16  
                            u5181 0AF2                              u4710 2CE2  
                            u3750 2D8E                              u3670 3562  
                            u4390 234A                              u4470 2526  
                            u3590 330A                              u3830 3A10  
                            u3910 31FA                              u4550 3E78  
                            u6070 20E8                              u5510 148C  
                            u5430 12F8                              u5270 0E06  
                            u5238 0D20                              u5190 0B0E  
                            u5158 0A4C                              u4711 2CDE  
                            u3751 2D8A                              u3671 355C  
                            u4391 2346                              u4471 2522  
                            u3591 3304                              u3831 3A0C  
                            u3911 31F6                              u4551 3E74  
                            u6071 20E4                              u5511 1488  
                            u5431 12F4                              u5271 0E02  
                            u5239 0D42                              u5191 0B0A  
                            u5159 0A74                              u4720 2D20  
                            u3760 2DB2                              u4480 2562  
                            u3840 3A26                              u3920 3210  
                            u4560 3E88                              u6080 20FE  
                            u5600 162A                              u5520 14F2  
                            u5408 1254                              u5360 10E4  
                            u5280 0E48                              u5248 0D4C  
                            u4800 0152                              u4721 2D1C  
                            u6217 2EAC                              u3761 2DAE  
                            u3665 354E                              u4481 255E  
                            u3841 3A22                              u3921 320C  
                            u4561 3E84                              u6081 20FA  
                            u5601 1626                              u5521 14EE  
                            u5409 1284                              u5361 10E0  
                            u5281 0E44                              u5249 0D6E  
                            u4801 014E                              u4650 37FA  
                            u3770 2DC2                              u3690 3578  
                            u4490 2572                              u3850 3A48  
                            u4570 37CE                              u5610 163A  
                            u5530 1502                              u5418 128E  
                            u5370 1104                              u5290 0E8A  
                            u5258 0D82                              u4810 016E  
                            u4651 37F6                              u6227 2EBA  
                            u3771 2DBE                              u3691 3572  
                            u4491 256E                              u3851 3A44  
                            u4571 37CA                              u5611 1636  
                            u5531 14FE                              u5419 12BE  
                            u5371 1100                              u5291 0E86  
                            u5259 0DA4                              u4811 016A  
                            u4660 3838                              u3780 2DEC  
                            u3596 330C                              u3860 3150  
                            u5620 1660                              u5540 1528  
                            u5508 143E                              u5380 116A  
                            u5348 106E                              u4900 032A  
                            u4661 3834                              u6237 2EF8  
                            u3781 2DE8                              u3685 3564  
                            u3861 314C                              u5621 165C  
                            u5541 1524                              u5509 1452  
                            u5381 1166                              u5349 1082  
                            u4901 0326                              u3950 348E  
                            u4670 2C28                              u3790 2DFC  
                            u5550 154A                              u5358 108C  
                            u4830 01C2                              u4750 00B4  
                            u3951 348A                              u4671 2C24  
                            u6247 2F4A                              u3791 2DF8  
                            u5551 1546                              u5359 10AE  
                            u4831 01BE                              u4751 00B0  
                            u3960 34B4                              u4680 2C4E  
                            u3880 3188                              u5800 1ADC  
                            u5560 1572                              u5448 1302  
                            u4920 040A                              u4840 01D8  
                            u4760 00D0                              u3961 34B0  
                            u4681 2C4A                              u6257 2F58  
                            u3881 3184                              u5801 1AD8  
                            u5561 156E                              u5449 1324  
                            u4921 0406                              u4841 01D4  
                            u4761 00CC                              u3970 34E4  
                            u4690 2C8C                              u3874 316A  
                            u5490 1430                              u5458 134C  
                            u3971 34E0                              u4691 2C88  
                            u6267 3D4E                              u3875 3166  
                            u5491 142C                              u5459 136E  
                            u3980 36F8                              u5900 1C76  
                            u5820 1B30                              u5740 1A22  
                            u5708 1894                              u5468 1378  
                            u4940 046A                              u4828 0180  
                            u4780 0124                              u3981 36F4  
                            u6277 3D72                              u5901 1C72  
                            u5821 1B2C                              u5741 1A1E  
                            u5709 18A8                              u5469 13A8  
                            u4941 0466                              u4861 021A  
                            u4829 01A2                              u4781 0120  
                            u3990 371A                              u3894 31A2  
                            u5910 1C9C                              u5830 1B46  
                            u5750 1A3E                              u5718 1908  
                            u5638 1708                              u5478 13B2  
                            u5398 1228                              u4950 0484  
                            u4918 03CA                              u4870 027E  
                            u4790 013A                              u6287 3FB8  
                            u3991 3716                              u3895 319E  
                            u5911 1C98                              u5831 1B42  
                            u5751 1A3A                              u5719 1942  
                            u5639 171C                              u5479 13E2  
                            u5399 124A                              u4951 0480  
                            u4919 03E8                              u4871 027A  
                            u4791 0136                              u5920 1CBE  
                            u5728 1956                              u5648 1726  
                            u5488 13EC                              u4960 04BE  
                            u4880 02BA                              u5921 1CBA  
                            u5729 196A                              u5649 1748  
                            u5489 141A                              u4961 04BA  
                            u4881 02B6                              u5930 1CE6  
                            u5818 1AEE                              u5770 1A92  
                            u5738 19F8                              u5658 1752  
                            u5578 1588                              u4970 04D6  
                            u4938 0414                              u4858 01EE  
                            u4778 00E2                              u5931 1CE2  
                            u5819 1B10                              u5771 1A8E  
                            u5739 1A0C                              u5659 1778  
                            u5579 15AA                              u4971 04D2  
                            u4939 043C                              u4859 0210  
                            u4779 0104                              u5860 1BDA  
                            u5780 1AA8                              u5668 1782  
                            u5588 15B4                              u4980 05C2  
                            u5861 1BD6                              u5781 1AA4  
                            u5669 17A4                              u5589 15DA  
                            u4981 05BE                              u5950 1EC4  
                            u5790 1AC0                              u5678 17C2  
                            u5598 15F4                              u4990 062C  
                            u5951 1EC0                              u5791 1ABC  
                            u5679 17EA                              u5599 1608  
                            u4991 0628                              u5960 1ED6  
                            u5848 1B54                              u5768 1A50  
                            u5688 17FC                              u5961 1ED2  
                            u5849 1B76                              u5769 1A72  
                            u5689 1810                              u5970 1EE6  
                            u5890 1C66                              u5858 1B80  
                            u5698 186E                              u4898 02DE  
                            u5971 1EE2                              u5891 1C62  
                            u5859 1BA2                              u5699 1882  
                            u4899 02F2                              u5980 1F06  
                            u5948 1D02                              u5981 1F02  
                            u5949 1D16                              u5990 1F18  
                            u5878 1BF2                              u5991 1F14  
                            u5879 1C14                              u5888 1C1E  
                            u5889 1C44                      __CFG_PWRT$ON 000000  
                     main@ptr_914 00B8                              _fila 0015  
                     main@ptr_939 00BA                              _main 0012  
                            _wifi 0146                              fsr2h 000FDA  
                            indf1 000FE7                              indf2 000FDF  
                            fsr1l 000FE1                              fsr2l 000FD9  
                            btemp 005A                    ?_addContCiclos 0027  
                __end_of_I2C_init 3F10                              prodh 000FF4  
                            prodl 000FF3                       main@vetorIn 00AD  
                            start 000E           __size_of_salvar_receita 0060  
               fp__salvar_receita 0000                  __end_of_I2C_stop 428E  
                   __CFG_IESO$OFF 000000                 _formatar_receitas 4170  
                    ___param_bank 000000                      ?_ler_atuador 0027  
                  printExec@passo 0044                ?_formatar_receitas 0027  
    __end_of_salva_atuadores_init 36DE                             ??_irq 0027  
                   __CFG_PLLDIV$5 000000                   _addIndicePassos 4214  
                  __CFG_CCP2MX$ON 000000              __end_of_EEPROM_write 3F7A  
                    main@auxPasso 00BC                   __end_of___aldiv 2D4A  
                           ?_main 0027                   __end_of___awdiv 3052  
                           _EEADR 000FA9                             STR_10 7D06  
                           STR_11 7FFC                             STR_12 7DB8  
                           STR_20 7FF4                             STR_13 7E0E  
                           STR_21 7DF9                             STR_30 7E4D  
                           STR_14 7E23                             STR_22 7DBA  
                           STR_23 7F34                             STR_31 7DCF  
                           STR_15 7C3E                             STR_32 7F0A  
                           STR_16 7EB6                             STR_24 7DA5  
                           STR_40 7D1B                             STR_41 7FDE  
                           STR_33 7F98                             STR_25 7EE0  
                           STR_17 7E62                             STR_42 7FE9  
                           STR_34 7F5B                             STR_18 7E77  
                           STR_50 7D44                             STR_26 7CDD  
                           STR_51 7FD0                             STR_35 7F8A  
                           STR_43 7F49                             STR_19 7ECB  
                           STR_27 7C8F                             STR_28 7FFC  
                           STR_44 7FA6                             STR_36 7F7B  
                 __end_of___awmod 32F4                             STR_29 7DB8  
                           STR_37 7FB4                             STR_45 7D90  
                           STR_46 7F6C                             STR_38 7D6C  
                           STR_39 7FC2                   __end_of___lldiv 3520  
                 ___awdiv@divisor 0029               ??_formatar_receitas 0029  
                 __end_of___lwdiv 3766                             i2l610 400A  
                           i2l611 400C                   ___awdiv@counter 002B  
                           _RCREG 000FAE                             _TMR1H 000FCF  
                           _TMR1L 000FCE                             _PORTD 000F83  
                   __CFG_USBDIV$1 000000                             _TRISD 000F95  
                           _TXREG 000FAD  __size_of_manipula_atuadores_init 0068  
                   __CFG_WRT0$OFF 000000                     __CFG_WRT1$OFF 000000  
                   __CFG_WRT2$OFF 000000               ___lmul@multiplicand 002B  
                   __CFG_WRT3$OFF 000000                   __end_of_dispLCD 3D2E  
                  _txStatusEUSART 000000                    __CFG_EBTR0$OFF 000000  
                  __CFG_FCMEN$OFF 000000                    __CFG_EBTR1$OFF 000000  
                  __CFG_EBTR2$OFF 000000                    __CFG_EBTR3$OFF 000000  
                   __CFG_WRTB$OFF 000000                     __CFG_WRTC$OFF 000000  
                   __CFG_WRTD$OFF 000000                 ??_fifo_disponivel 0027  
           __end_of_teclado_borda 3E98                    __CFG_EBTRB$OFF 000000  
                           _delay 3FAE                             _setT1 428E  
                 salvar_receita@i 0032                             main@i 00A1  
                           main@j 00A2                             pclath 000FFA  
                           tablat 000FF5                   _I2C_ack_receive 425E  
                           plusw1 000FE3                             plusw2 000FDB  
                    main@vetorOut 00AE                             ttemp5 005B  
                           ttemp6 005E                             ttemp7 0062  
                           status 000FD8                 __end_of_I2C_start 425E  
                           wtemp8 005B                    __CFG_ICPRT$OFF 000000  
       __end_of_formatar_receitas 418E                   EEPROM_read@addr 0027  
                   _indice_passos 0057              __end_of_dispLCD_init 3F46  
                  __CFG_MCLRE$OFF 000000              __size_of_EEPROM_read 0014  
                 __initialization 35BE                      __end_of_main 2192  
                ?_dispLCD_dataReg 0027                            ??_main 0045  
                       ??_MCP4725 0043                     __activetblptr 000002  
                   ?_initSerialIO 0027              __size_of_dispLCD_clr 0008  
            __size_of_dispLCD_num 01A2              __size_of_dispLCD_str 006A  
            __size_of_alt_atuador 009E                  ?_dispLCD_instReg 0027  
                          ?_delay 0027                      ?_salvar_dado 002D  
                          _ADCON1 000FC1                            ?_setT1 002D  
                          _EEDATA 000FA8                            _EECON2 000FA7  
                ___awdiv@dividend 0027                            _I2C_tx 418E  
            __size_of_dignum_conc 004E                            _EEPROM 00D9  
                ?_getIndicePassos 0027                            i2l1061 3FA6  
                          i2l1062 3FAC                            i2l1063 3FAC  
                          i2l3231 3FF2                            i2l3233 4000  
                          i2l3235 4002                            i2l3237 400A  
                          i2l3229 3FE2                            i2l2991 3F7A  
                          i2l2993 3F82                            i2l2995 3F98  
            __size_of_fifo_delete 00B8                  __end_of_dac_init 3ED6  
                 ??_addContCiclos 0027              __size_of_end_receita 0028  
            __size_of_fifo_indice 0008              __size_of_fifo_lerPos 001A  
                          _SSPADD 000FC8                            _SSPBUF 000FC9  
                   main@init_cond 00B6                   ler_sensor@passo 002B  
                __end_of_codifica 298E                    __CFG_XINST$OFF 000000  
                __end_of_fifo_add 39EC                  __end_of_fifo_tam 432C  
         __end_of_addIndicePassos 422E                  _Wifi_autoconnect 000000  
                          _t1cont 0001                            ___lmul 37D8  
                       ??___aldiv 003B                            ___wmul 406C  
                       ??___awdiv 002B                         ??___awmod 002B  
                          _ciclos 000F                         ??___lldiv 002F  
               _fifo_alinharPrint 2D4A                      ?_timer1_init 0027  
                       ??___lwdiv 002B                            _eusart 0047  
                          delay@t 0027                            clear_0 3624  
                          clear_1 3630                            clear_2 363C  
                          _search 000000                  ___awdiv@quotient 002D  
                          _teclas 00BF                   ___awmod@divisor 0029  
              ?_fifo_alinharPrint 0027                         ??_dispLCD 0031  
                 ___awmod@counter 002B                    ??_initSerialIO 002C  
                          main@pt 009D                    _buscar_receita 3B7E  
                __end_of_posAtual 41E0                            setT1@c 002D  
                    __pdataCOMRAM 0047                      __mediumconst 7BEA  
                       ?_I2C_init 0034                            tblptrh 000FF7  
                          tblptrl 000FF6               ??_fifo_alinharPrint 0032  
                          tblptru 000FF8                         ?_I2C_stop 0027  
         __end_of_I2C_ack_receive 4276             __end_of_getContCiclos 4312  
            _Wifi_config_servidor 000000                     main@vetor_aux 0076  
                __end_of_statusT1 42DC            salva_atuadores_init@pt 002E  
            _salva_atuadores_init 3650                        __accesstop 0060  
         __end_of__initialization 3642              __size_of_buscar_dado 0028  
                 __CFG_PBADEN$OFF 000000          __size_of_deletar_receita 0054  
              fp__deletar_receita 0000                 _serialIObyteShift 39EC  
                  _salvar_receita 3B1E        __size_of_formatar_receitas 001E  
         __size_of_dispLCD_lincol 0066                     ___rparam_used 000001  
              ?_serialIObyteShift 0027                __size_of_dac_write 0048  
       __end_of_fifo_alinharPrint 2E62                    __pcstackCOMRAM 0027  
           __size_of_EEPROM_write 0034          __size_of_resetContCiclos 000A  
                    __pidataBANK0 40E6                      __pidataBANK1 3BDC  
                   __end_of_delay 3FE0                     __end_of_setT1 42A2  
               fifo_add_control@c 0036              __size_of_ler_atuador 00BC  
             ??_serialIObyteShift 0027            __end_of_buscar_receita 3BDC  
              __size_of_getCiclos 0022           _manipula_atuadores_init 38B4  
       __size_of_fifo_add_control 0054                 initSerialIO@ptrIn 0027  
              __size_of_fifo_adrs 000E                           I2C_tx@b 0027  
                      ??_I2C_init 0038      __end_of_fifo_indicePrint_dec 4246  
                      ??_I2C_stop 0027      __end_of_fifo_indicePrint_inc 3AB8  
                         ??_delay 0029                           ??_setT1 0031  
              teclado_borda@tecla 002D                           ?_I2C_tx 0027  
           ?_salva_atuadores_init 0027                        __pbssBANK0 00E3  
                      __pbssBANK1 015A             __size_of_dispLCD_init 0036  
       __end_of_serialIObyteShift 3A52            __end_of_salvar_receita 3B7E  
                      _decodifica 298E                     ?_teclado_init 0027  
                   ?_teclado_scan 0027                __size_of_intt1_1ms 0034  
                    _EEPROM_write 3F46                  teclado_borda@aux 002C  
           __end_of_dignum_apagar 406C                  ?_addIndicePassos 0027  
                  main@contPassos 0074                           ?___lmul 0027  
                         ?___wmul 0027                   _fifo_disponivel 41FA  
                  ___lmul@product 002F           serialIObyteShift@dataIn 0027  
                 ?_buscar_receita 002D                        _dignum_tam 3DCA  
              __size_of_set_passo 00E6                           _MCP4725 414E  
                       ?_dac_init 0027                        _fifo_print 2192  
              __size_of_printExec 01A2                           _LCDbits 000F8A  
                    _dispLCD_init 3F10                  ?_I2C_ack_receive 0027  
               __end_of_dac_write 3E5A                         ?_codifica 0027  
                       ?_fifo_add 0027                         ?_fifo_tam 0027  
                 __size_of_I2C_tx 001E              __size_of_salvar_dado 0022  
                  ??_teclado_init 0027                    ??_teclado_scan 0027  
                 __CFG_VREGEN$OFF 000000                   ?_salvar_receita 002D  
                   ?_serialIOload 0027                     ?_serialIOscan 0027  
                      _initEUSART 000000                 __end_of_getCiclos 414E  
            __end_of_initSerialIO 403E                       posAtual@ind 0028  
                EEPROM_write@addr 0028                  EEPROM_write@data 0027  
                         __Hparam 0000                 __end_of_fifo_adrs 42EA  
                       ?_posAtual 0027                           __Lparam 0000  
                       _I2C_start 4246        __size_of_fifo_alinharPrint 0118  
                         _Wifi_ip 000000                 ??_deletar_receita 002B  
                         ___aldiv 2C16                           ___awdiv 2F66  
                 __size_of___lmul 0072                           ___awmod 321C  
                      _ler_sensor 2AE2                           ___lldiv 3468  
                 __size_of___wmul 002A           __size_of_init_atuadores 000A  
                         ___lwdiv 36DE                         ?_statusT1 0027  
          deletar_receita@receita 002D         ??_manipula_atuadores_init 002A  
                 __CFG_STVREN$OFF 000000                           __pcinit 35BE  
                         __ramtop 0800                           _dispLCD 3CDE  
            __size_of_timer1_init 001A                           __ptext0 0012  
                         __ptext1 41AC                           __ptext2 42EA  
                         __ptext3 3E5A                           __ptext4 3138  
                         __ptext5 42CA                           __ptext6 3052  
                         __ptext7 428E                           __ptext8 3766  
                         __ptext9 433C                     teclado_scan@c 002B  
                   teclado_scan@l 002A                        ??_dac_init 002A  
               __end_of_intt1_1ms 3FAE                 ??_resetContCiclos 0027  
                         _atuador 0014           __size_of_fifo_add_ciclo 000A  
                       _T1CONbits 000FCD                      __size_of_irq 4008  
         __size_of_fifo_add_tempo 0068                  ___awmod@dividend 0027  
               salvar_receita@aux 002F                  ___aldiv@dividend 0033  
                   _receita_livre 000000                        ??_codifica 0029  
          ??_salva_atuadores_init 002A                        ??_fifo_add 0036  
                      ??_fifo_tam 0027                           main@aux 0075  
                         main@num 00B0                           main@por 00B2  
                         main@ptr 009F                    __pintcode_body 3FE0  
            end_of_initialization 3642                    ??_serialIOload 0027  
                  ??_serialIOscan 002A        __size_of_serialIObyteShift 0066  
                     ?_decodifica 0027                     __Lmediumconst 7BEA  
                         int_func 3FE0                    dispLCD_num@col 0032  
                  dispLCD_num@div 003E                    dispLCD_num@lin 003B  
                  dispLCD_num@tam 0035                    dispLCD_num@num 0033  
                  _dispLCD_lincol 3AB8                     ??_EEPROM_read 0027  
               __end_of_set_passo 3138                    dispLCD_str@lin 0030  
                  dispLCD_str@str 002E                        dispLCD@col 002E  
                 ___lldiv@divisor 002B                        dispLCD@lin 0032  
                      dispLCD@pos 0031                        dispLCD@str 002F  
         __end_of_fifo_disponivel 4214                 __end_of_printExec 2684  
                 ___lldiv@counter 0033                        ??_posAtual 0028  
                      ?_I2C_start 0027                      I2C_init@freq 0034  
                       _RCSTAbits 000FAB              _fifo_indicePrint_dec 422E  
                ___aldiv@quotient 003D              _fifo_indicePrint_inc 3A52  
                         postdec1 000FE5                           postdec2 000FDD  
                         postinc0 000FEE                           postinc2 000FDE  
          __size_of_teclado_borda 003E                fifo_alinharPrint@i 0034  
                      ??_statusT1 002B                     ??_dispLCD_clr 0029  
                   ??_dispLCD_num 0036                     ??_dispLCD_str 0030  
                   ??_alt_atuador 0027                       ?_dignum_tam 002F  
                       _PORTAbits 000F80                  _fifo_add_control 3C36  
            fp__formatar_receitas 0000                       ?_fifo_print 0027  
                      fp__dispLCD 0000                     ??_dignum_conc 002F  
                       _TRISAbits 000F92                         _TRISBbits 000F93  
                       _TRISCbits 000F94          __size_of_dispLCD_dataReg 004E  
                   ??_fifo_delete 0036                     ??_end_receita 0029  
                   ??_fifo_indice 0027                     ??_fifo_lerPos 0027  
               __size_of_I2C_init 003A                 __size_of_I2C_stop 0018  
                   _teclaAnterior 0011   __end_of_manipula_atuadores_init 391C  
          __end_of_dispLCD_lincol 3B1E                    __end_of_I2C_tx 41AC  
  manipula_atuadores_init@atuador 002A          __size_of_dispLCD_instReg 0104  
                      main@ciclos 00B4                         _TXSTAbits 000FAC  
             dignum_apagar@ptrNum 002E                        main@estado 00BD  
           __end_of_addContCiclos 434E          __size_of_getIndicePassos 0008  
           ?_fifo_indicePrint_dec 0027             ?_fifo_indicePrint_inc 0027  
             __end_of_EEPROM_read 42B6                       ?_ler_sensor 0027  
                  __end_of___lmul 384A                    __end_of___wmul 4096  
                     _BAUDCONbits 000FB8                     __pidataCOMRAM 42B6  
                  set_passo@passo 002B              __end_of_teclado_init 42F4  
            __end_of_teclado_scan 321C               __size_of_decodifica 0154  
             start_initialization 35BE               __end_of_dispLCD_clr 433C  
                   posAtual@passo 0029               __end_of_dispLCD_num 2826  
             __end_of_dispLCD_str 38B4               __end_of_alt_atuador 35BE  
                     __end_of_irq 4010                     _teclado_borda 3E5A  
                   ??_buscar_dado 0030                          ??_I2C_tx 0027  
           __size_of_initSerialIO 002E                   fifo_add_tempo@t 0036  
                 ?_dispLCD_lincol 0029               __end_of_dignum_conc 3DCA  
              initSerialIO@length 002B               __size_of_dignum_tam 0048  
             __end_of_fifo_delete 3468                initSerialIO@ptrOut 0029  
             __end_of_end_receita 40E6               __end_of_fifo_indice 4334  
             __end_of_fifo_lerPos 41FA               __size_of_fifo_print 0350  
                ?_fifo_disponivel 0027                 dispLCD_lincol@col 0029  
               dispLCD_lincol@aux 002D                 dispLCD_lincol@lin 002C  
                     ??_I2C_start 0027                   main@meAtuadores 00AF  
                   ??_ler_atuador 0027                  ??_buscar_receita 002F  
                        ??___lmul 002F                          ??___wmul 002B  
                  _init_atuadores 42FE            __size_of_getContCiclos 000A  
                     __pdataBANK0 00BF                       __pdataBANK1 0100  
                       _Wifi_mode 000000                         _Wifi_scan 000000  
                __CFG_LPT1OSC$OFF 000000              __end_of_serialIOload 4342  
            __end_of_serialIOscan 37D8                          ?_MCP4725 0041  
                  _fifo_add_ciclo 4312                  ler_atuador@tecla 0029  
                    _initSerialIO 4010                    _fifo_add_tempo 391C  
                     __pbssCOMRAM 0001                 __size_of_dac_init 003E  
                   __pcstackBANK0 0060                  ??_salvar_receita 002F  
                  ?_teclado_borda 0027               __size_of_ler_sensor 0134  
               __size_of_codifica 0168                 __size_of_fifo_add 0068  
                       _dac_write 3E12                 __size_of_fifo_tam 0008  
                 _deletar_receita 3C8A                 ??_dispLCD_dataReg 0027  
                     _EEPROM_read 42A2               __end_of_buscar_dado 40BE  
          ??_fifo_indicePrint_dec 0027            ??_fifo_indicePrint_inc 0027  
                ___lwdiv@dividend 0027            __end_of_init_atuadores 4308  
                 _resetContCiclos 42F4                         _getCiclos 412C  
               ??_dispLCD_instReg 0027                         __pintcode 0008  
                   __pmediumconst 7BEA                          ?___aldiv 0033  
                        ?___awdiv 0027                 __size_of_posAtual 001A  
                        ?___awmod 0027                          ?___lldiv 0027  
                        ?___lwdiv 0027                         _fifo_adrs 42DC  
                   serialIOscan@i 002F                     serialIOscan@j 002E  
          __end_of_fifo_add_ciclo 431C                       _dispLCD_clr 4334  
                     _dispLCD_num 2684                       _dispLCD_str 384A  
               ??_getIndicePassos 0027            __end_of_fifo_add_tempo 3984  
                        ?_dispLCD 002E                       _alt_atuador 3520  
             __end_of_ler_atuador 33B0                 __size_of_statusT1 0012  
        __size_of_addIndicePassos 001A                         _ind_print 0058  
                   _rxErrorEUSART 000000                          _I2C_init 3ED6  
        serialIObyteShift@dataBit 0029                          _I2C_stop 4276  
          __size_of_dignum_apagar 002E                       _dignum_conc 3D7C  
        serialIObyteShift@dataOut 0028                         _intt1_1ms 3F7A  
                   ??_salvar_dado 002F                  ___lwdiv@quotient 002B  
                   _getContCiclos 4308                    __size_of_delay 0032  
                     _fifo_delete 33B0                    __size_of_setT1 0014  
                     _end_receita 40BE                       _fifo_indice 432C  
                     _fifo_lerPos 41E0                        ?_dac_write 002A  
                    ??_decodifica 0029                 teclado_scan@tecla 0029  
                  _fifo_print$473 0031                   ___aldiv@divisor 0037  
                 ___aldiv@counter 003B                    ___wmul@product 002B  
        __size_of_I2C_ack_receive 0018          __end_of_fifo_add_control 3C8A  
                        _PIE1bits 000F9D                          i2u131_40 3F98  
                        i2u131_41 3F94                          i2u156_40 3FF2  
                        i2u156_41 3FEE                          i2u157_40 4000  
                        i2u157_41 3FFC                          _PIR1bits 000F9E  
                 ?_init_atuadores 0027                          _SERIALIO 000F80  
                      ?_getCiclos 0027                         _set_passo 3052  
                __CFG_WDTPS$32768 000000             __size_of_teclado_init 000A  
           __size_of_teclado_scan 00E4                         main@F3505 0132  
                       main@F3480 00ED                         main@F3478 00EE  
                  dignum_conc@dig 0033                     ??_timer1_init 0027  
                      ?_fifo_adrs 0027                         _printExec 24E2  
                dispLCD_dataReg@d 0028                          _SPBRbits 000FAF  
                 ?_fifo_add_ciclo 0027                         _wifi_init 000000  
                       _wifi_send 000000                      ??_dignum_tam 0031  
                     _cont_ciclos 000D                   ?_fifo_add_tempo 0027  
                       main@i_902 00A3                         main@i_932 00A7  
                       main@i_908 009C                         main@i_929 00A5  
               ___wmul@multiplier 0027                         main@i_974 00A9  
                       main@j_903 00A4                         main@i_977 00AB  
                       main@j_930 00A6                         main@j_933 00A8  
                       main@j_975 00AA                         main@j_978 00AC  
             fifo_print@completar 0033                  deletar_receita@i 002E  
                    ??_fifo_print 002F                __end_of_decodifica 2AE2  
                __size_of_MCP4725 0022                         main@botao 00B7  
                     _lenSerialIO 0012                   ??_teclado_borda 002C  
                       main@tecla 00BE           __end_of_deletar_receita 3CDE  
                      ?_intt1_1ms 0027                    ?_getContCiclos 0027  
               _resetIndicePassos 4342                 Wifi_cipsend@F3297 011E  
               Wifi_cipsend@F3299 00E3                 ___lmul@multiplier 0027  
                       copy_data0 35D2                         copy_data1 35F2  
                       copy_data2 3612                       _buscar_dado 4096  
   __size_of_salva_atuadores_init 008E                ?_resetIndicePassos 0027  
         __end_of_resetContCiclos 42FE                      _teclado_init 42EA  
             __end_of_salvar_dado 412C                      _teclado_scan 3138  
                      _EECON1bits 000FA6                __end_of_dignum_tam 3E12  
             ??_resetIndicePassos 0027                          __Hrparam 0000  
                   _dignum_apagar 403E                     ler_sensor@ptr 0027  
              __end_of_fifo_print 24E2                          __Lrparam 0000  
        ?_manipula_atuadores_init 0027                        ?_set_passo 0027  
           __size_of_serialIOload 0006             __size_of_serialIOscan 0072  
                    getCiclos@aux 0029                  dispLCD_instReg@i 0028  
                     _ler_atuador 32F4                      ??_ler_sensor 0029  
                      ?_printExec 0040                  __size_of___aldiv 0134  
                __size_of___awdiv 00EC                  __size_of___awmod 00D8  
                __size_of___lldiv 00B8                  __size_of___lwdiv 0088  
                 fp__dispLCD_init 0000                buscar_receita@data 002D  
              buscar_receita@adrs 0031                  dispLCD_num@sinal 003D  
           fifo_alinharPrint@cont 0033       manipula_atuadores_init@mask 002C  
                        _dac_init 3E98                  __size_of_dispLCD 0050  
             __end_of_timer1_init 41C6                    _rxStatusEUSART 000000  
       __end_of_resetIndicePassos 4348                       decodifica@d 0027  
                        _main$940 0088                          _main$950 0096  
                        _main$918 0086                          _main$951 0098  
                        _main$944 008A                          _main$945 008C  
                        _main$946 008E                          _main$955 009A  
                        _main$947 0090                          _main$948 0092  
                        _main$949 0094                  ??_dispLCD_lincol 002A  
                 ___lwdiv@divisor 0029                   ___lwdiv@counter 002D  
                        _codifica 2826                          __ptext10 39EC  
                        __ptext11 3B1E                          __ptext20 41E0  
                        __ptext12 410A                          __ptext21 2684  
                        __ptext13 3650                          __ptext30 2192  
                        __ptext22 38B4                          __ptext14 32F4  
                        __ptext31 321C                          __ptext23 2AE2  
                        __ptext15 4342                          __ptext40 391C  
                        __ptext32 3A52                          __ptext24 42FE  
                        __ptext16 42F4                          __ptext41 3C36  
                        __ptext33 422E                          __ptext25 4010  
                        __ptext17 24E2                          __ptext50 4334  
                        __ptext42 4312                          __ptext34 432C  
                        __ptext26 4308                          __ptext18 41C6  
                        __ptext51 3CDE                          __ptext43 3984  
                        __ptext35 41FA                          __ptext27 412C  
                        __ptext19 431C                          __ptext60 3F46  
                        __ptext52 3AB8                          __ptext44 2D4A  
                        __ptext36 33B0                          __ptext28 4170  
                        __ptext61 3B7E                          __ptext53 2E62  
                        __ptext45 3DCA                          __ptext37 298E  
                        __ptext29 4324                          __ptext70 3E12  
                        __ptext62 4096                          __ptext54 3D2E  
                        __ptext46 2F66                          __ptext38 3520  
                        __ptext71 3E98                          __ptext63 40BE  
                        __ptext55 3D7C                          __ptext47 2826  
                        __ptext39 42DC                          __ptext80 3F7A  
                        __ptext72 3FAE                          __ptext64 42A2  
                        __ptext56 406C                          __ptext48 384A  
                        __ptext81 0000                          __ptext73 418E  
                        __ptext65 4214                          __ptext57 403E  
                        __ptext49 3F10                          __ptext74 4246  
                        __ptext66 4348                          __ptext58 36DE  
                        __ptext75 425E                          __ptext67 37D8  
                        __ptext59 3C8A                          __ptext76 4276  
                        __ptext68 2C16                          __ptext77 3ED6  
                        __ptext69 414E                          __ptext78 3468  
                        _fifo_add 3984                 ??_addIndicePassos 0027  
                        _fifo_tam 4324                          _ind_fila 0059  
                     ??_dac_write 002C                __end_of_ler_sensor 2C16  
                        _rxEUSART 000000                     ?_EEPROM_write 0027  
                    _serialIOload 433C                      _serialIOscan 3766  
              _rxResetErrorEUSART 000000                     __size_of_main 2180  
                        _txEUSART 000000                salvar_receita@data 002D  
              salvar_receita@adrs 0031                    ?_dignum_apagar 002E  
                        _posAtual 41C6                      dispLCD_str@c 0031  
                     ??_getCiclos 0029                     _printExec$498 0041  
               ??_I2C_ack_receive 0027                          int$flags 005A  
                     ??_fifo_adrs 0029                fifo_print@indPrint 0034  
                   fifo_add@passo 0036                          _statusT1 42CA  
                     MCP4725@Vout 0041                     dignum_tam@tam 0031  
                   dignum_tam@num 002F                          main@lema 0060  
                    _Wifi_cipsend 000000                      _Wifi_connect 000000  
           __CFG_CPUDIV$OSC1_PLL2 000000                      set_passo@ptr 0027  
  salva_atuadores_init@condi_init 002A                   ??_getContCiclos 0029  
                      _INTCONbits 000FF2                 Wifi_connect@F3285 0100  
                   ?_dispLCD_init 0027            __size_of_addContCiclos 0006  
                    codifica@dado 0027                   _dispLCD_dataReg 3D2E  
                    codifica@tipo 002B                       ??_intt1_1ms 0027  
                ?_deletar_receita 0027                formatar_receitas@i 0029  
                 buscar_dado@data 002E                   buscar_dado@adrs 0032  
                     _salvar_dado 410A                    fp__dispLCD_clr 0000  
                  fp__dispLCD_num 0000                    fp__dispLCD_str 0000  
               buscar_receita@aux 002F                   dispLCD_num@size 003C  
            fifo_alinharPrint@aux 0035        manipula_atuadores_init@aux 002B  
                 _dispLCD_instReg 2E62                          intlevel2 0000  
                  ??_EEPROM_write 0028                  ?_resetContCiclos 0027  
                ___lldiv@dividend 0027                      ?_EEPROM_read 0027  
                 _getIndicePassos 431C                 dignum_conc@ptrNum 002D  
                     ??_set_passo 0029                 fifo_print@comando 0037  
                     ??_printExec 0041          salva_atuadores_init@F108 0005  
                     _timer1_init 41AC                      _ptrSerialOut 0009  
                    ?_dispLCD_clr 0027                      ?_dispLCD_num 0032  
                    ?_dispLCD_str 002E          __size_of_fifo_disponivel 001A  
                    ?_alt_atuador 0027          salva_atuadores_init@dado 0030  
                  buscar_dado@col 002D                    buscar_dado@aux 0030  
            fifo_add_ciclo@ciclos 0027          salva_atuadores_init@mask 0031  
                  ??_dispLCD_init 002A                  ___lldiv@quotient 002F  
      __size_of_resetIndicePassos 0006                      ___aldiv@sign 003C  
                    ?_dignum_conc 002D                       _SSPCON1bits 000FC6  
                    end_receita@x 0027                       _SSPCON2bits 000FC5  
                fifo_print@atraso 0036                      ?_fifo_delete 0027  
                     _ptrSerialIn 000B                      fifo_lerPos@i 0027  
                    ?_end_receita 0027                      _wifi_receive 000000  
                    ?_fifo_indice 0027                      ?_fifo_lerPos 0027  
                 buscar_receita@i 0032                  ??_init_atuadores 0027  
                 ??_dignum_apagar 0030                 ?_fifo_add_control 0027  
                   _addContCiclos 4348                  ??_fifo_add_ciclo 0029  
                     fifo_print@i 0035  
